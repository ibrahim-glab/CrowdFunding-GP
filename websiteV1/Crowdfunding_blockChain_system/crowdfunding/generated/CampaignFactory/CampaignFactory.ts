// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class CampaignCreated extends ethereum.Event {
  get params(): CampaignCreated__Params {
    return new CampaignCreated__Params(this);
  }
}

export class CampaignCreated__Params {
  _event: CampaignCreated;

  constructor(event: CampaignCreated) {
    this._event = event;
  }

  get Owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get campaign(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class CampaignFactory__getContributionsResultValue0Struct extends ethereum.Tuple {
  get amount(): BigInt {
    return this[0].toBigInt();
  }

  get Campaignaddress(): Address {
    return this[1].toAddress();
  }
}

export class CampaignFactory extends ethereum.SmartContract {
  static bind(address: Address): CampaignFactory {
    return new CampaignFactory("CampaignFactory", address);
  }

  admin(): Address {
    let result = super.call("admin", "admin():(address)", []);

    return result[0].toAddress();
  }

  try_admin(): ethereum.CallResult<Address> {
    let result = super.tryCall("admin", "admin():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  deployedProjectsByUser(user: Address): Array<Address> {
    let result = super.call(
      "deployedProjectsByUser",
      "deployedProjectsByUser(address):(address[])",
      [ethereum.Value.fromAddress(user)],
    );

    return result[0].toAddressArray();
  }

  try_deployedProjectsByUser(
    user: Address,
  ): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "deployedProjectsByUser",
      "deployedProjectsByUser(address):(address[])",
      [ethereum.Value.fromAddress(user)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  getContributions(
    user: Address,
  ): Array<CampaignFactory__getContributionsResultValue0Struct> {
    let result = super.call(
      "getContributions",
      "getContributions(address):((uint256,address)[])",
      [ethereum.Value.fromAddress(user)],
    );

    return result[0].toTupleArray<CampaignFactory__getContributionsResultValue0Struct>();
  }

  try_getContributions(
    user: Address,
  ): ethereum.CallResult<
    Array<CampaignFactory__getContributionsResultValue0Struct>
  > {
    let result = super.tryCall(
      "getContributions",
      "getContributions(address):((uint256,address)[])",
      [ethereum.Value.fromAddress(user)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<CampaignFactory__getContributionsResultValue0Struct>(),
    );
  }

  getDeployedProjects(): Array<Address> {
    let result = super.call(
      "getDeployedProjects",
      "getDeployedProjects():(address[])",
      [],
    );

    return result[0].toAddressArray();
  }

  try_getDeployedProjects(): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "getDeployedProjects",
      "getDeployedProjects():(address[])",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ContributeCall extends ethereum.Call {
  get inputs(): ContributeCall__Inputs {
    return new ContributeCall__Inputs(this);
  }

  get outputs(): ContributeCall__Outputs {
    return new ContributeCall__Outputs(this);
  }
}

export class ContributeCall__Inputs {
  _call: ContributeCall;

  constructor(call: ContributeCall) {
    this._call = call;
  }

  get campaign(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ContributeCall__Outputs {
  _call: ContributeCall;

  constructor(call: ContributeCall) {
    this._call = call;
  }
}

export class CreateProjectCall extends ethereum.Call {
  get inputs(): CreateProjectCall__Inputs {
    return new CreateProjectCall__Inputs(this);
  }

  get outputs(): CreateProjectCall__Outputs {
    return new CreateProjectCall__Outputs(this);
  }
}

export class CreateProjectCall__Inputs {
  _call: CreateProjectCall;

  constructor(call: CreateProjectCall) {
    this._call = call;
  }

  get minimumContribution(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get durationInDays(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get goal(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get campType(): i32 {
    return this._call.inputValues[3].value.toI32();
  }

  get verified(): boolean {
    return this._call.inputValues[4].value.toBoolean();
  }
}

export class CreateProjectCall__Outputs {
  _call: CreateProjectCall;

  constructor(call: CreateProjectCall) {
    this._call = call;
  }
}
