import { ModalProps } from './types';
declare type TStyleProps = Pick<ModalProps, 'canOverflow' | 'customize' | 'fixedMode' | 'hasCancel' | 'isCentered' | 'isVisible' | 'width' | 'zIndex'>;
declare const _default: {
    CustomButtonStyle: import("styled-components").StyledComponent<"div", any, {}, never>;
    CustomFooterStyled: import("styled-components").StyledComponent<"footer", any, TStyleProps, never>;
    DivStyled: import("styled-components").StyledComponent<"div", any, TStyleProps, never>;
    DivStyledContent: import("styled-components").StyledComponent<"div", any, Pick<TStyleProps, "customize">, never>;
    DivStyledWrap: import("styled-components").StyledComponent<"div", any, TStyleProps, never>;
    FooterStyled: import("styled-components").StyledComponent<"footer", any, TStyleProps, never>;
    HeaderStyled: import("styled-components").StyledComponent<"header", any, Pick<ModalProps, "customize" | "fixedMode" | "headerHasBottomBorder"> & {
        title: any;
    }, never>;
};
export default _default;
//# sourceMappingURL=Modal.styles.d.ts.map