/// <reference types="react" />
import { ISelectProps } from '../types';
declare type TStyleProps = Pick<ISelectProps, 'customize' | 'menuCustomize'>;
declare type IListProps = Pick<ISelectProps, 'height' | 'customize' | 'menuCustomize'>;
declare const _default: {
    ButtonStyledListItem: import("styled-components").StyledComponent<"button", any, TStyleProps, never>;
    ButtonStyledSelect: import("styled-components").StyledComponent<"button", any, Pick<ISelectProps, "customize">, never>;
    CheckmarkIconStyled: import("styled-components").StyledComponent<({ title, titleId, isResponsive, style, ...props }: import("react").SVGProps<SVGSVGElement> & import("@web3uikit/icons/dist/lib/type").SVGRProps) => JSX.Element, any, {}, never>;
    DivStyledCustomSelect: import("styled-components").StyledComponent<"div", any, {}, never>;
    DivStyledDesc: import("styled-components").StyledComponent<"div", any, {}, never>;
    DivStyledDropdown: import("styled-components").StyledComponent<"div", any, TStyleProps, never>;
    DivStyledOverlay: import("styled-components").StyledComponent<"div", any, {}, never>;
    DivStyledPlaceholder: import("styled-components").StyledComponent<"div", any, {}, never>;
    DivStyledSelectWrapper: import("styled-components").StyledComponent<"div", any, Partial<ISelectProps>, never>;
    DivStyledWrapper: import("styled-components").StyledComponent<"div", any, Pick<ISelectProps, "customize">, never>;
    InputStyledSearch: import("styled-components").StyledComponent<"input", any, TStyleProps, never>;
    LabelStyled: import("styled-components").StyledComponent<"label", any, Partial<ISelectProps>, never>;
    ListItemStyledDropdown: import("styled-components").StyledComponent<"li", any, {}, never>;
    ListItemStyledTag: import("styled-components").StyledComponent<"li", any, {}, never>;
    ListStyledDropdown: import("styled-components").StyledComponent<"ul", any, IListProps, never>;
    ListStyledSelected: import("styled-components").StyledComponent<"ul", any, {}, never>;
    MenuStyledWrapper: import("styled-components").StyledComponent<"menu", any, Pick<ISelectProps, "menuCustomize">, never>;
    SearchIconStyled: import("styled-components").StyledComponent<({ title, titleId, isResponsive, style, ...props }: import("react").SVGProps<SVGSVGElement> & import("@web3uikit/icons/dist/lib/type").SVGRProps) => JSX.Element, any, {}, never>;
    SpanStyledItemIcon: import("styled-components").StyledComponent<"span", any, {}, never>;
    SpanStyledItemSelected: import("styled-components").StyledComponent<"span", any, {}, never>;
    SpanStyledItemText: import("styled-components").StyledComponent<"span", any, {
        noPrefix: boolean;
    }, never>;
    SpanStyledNoResults: import("styled-components").StyledComponent<"span", any, Pick<ISelectProps, "menuCustomize">, never>;
    TriangleDownIconStyled: import("styled-components").StyledComponent<({ title, titleId, isResponsive, style, ...props }: import("react").SVGProps<SVGSVGElement> & import("@web3uikit/icons/dist/lib/type").SVGRProps) => JSX.Element, any, {}, never>;
    TriangleUpIconStyled: import("styled-components").StyledComponent<({ title, titleId, isResponsive, style, ...props }: import("react").SVGProps<SVGSVGElement> & import("@web3uikit/icons/dist/lib/type").SVGRProps) => JSX.Element, any, {}, never>;
};
export default _default;
//# sourceMappingURL=SelectBeta.styles.d.ts.map