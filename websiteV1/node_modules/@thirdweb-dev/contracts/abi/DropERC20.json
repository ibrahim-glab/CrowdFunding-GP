{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "startTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxClaimableSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "supplyClaimed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "merkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "metadata",
              "type": "string"
            }
          ],
          "indexed": false,
          "internalType": "struct IClaimCondition.ClaimCondition[]",
          "name": "claimConditions",
          "type": "tuple[]"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "resetEligibility",
          "type": "bool"
        }
      ],
      "name": "ClaimConditionsUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "prevURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "newURI",
          "type": "string"
        }
      ],
      "name": "ContractURIUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "delegator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "fromDelegate",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "toDelegate",
          "type": "address"
        }
      ],
      "name": "DelegateChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "delegate",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "previousBalance",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newBalance",
          "type": "uint256"
        }
      ],
      "name": "DelegateVotesChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "platformFeeRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "flatFee",
          "type": "uint256"
        }
      ],
      "name": "FlatPlatformFeeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "maxTotalSupply",
          "type": "uint256"
        }
      ],
      "name": "MaxTotalSupplyUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "platformFeeRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "platformFeeBps",
          "type": "uint256"
        }
      ],
      "name": "PlatformFeeInfoUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "enum IPlatformFee.PlatformFeeType",
          "name": "feeType",
          "type": "uint8"
        }
      ],
      "name": "PlatformFeeTypeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "PrimarySaleRecipientUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "claimConditionIndex",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "claimer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "startTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "quantityClaimed",
          "type": "uint256"
        }
      ],
      "name": "TokensClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DOMAIN_SEPARATOR",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "pos",
          "type": "uint32"
        }
      ],
      "name": "checkpoints",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "fromBlock",
              "type": "uint32"
            },
            {
              "internalType": "uint224",
              "name": "votes",
              "type": "uint224"
            }
          ],
          "internalType": "struct ERC20VotesUpgradeable.Checkpoint",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_quantity",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_currency",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_pricePerToken",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            }
          ],
          "internalType": "struct IDrop.AllowlistProof",
          "name": "_allowlistProof",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "claim",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimCondition",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "currentStartId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "count",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractType",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractVersion",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "delegatee",
          "type": "address"
        }
      ],
      "name": "delegate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "delegatee",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "expiry",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "delegateBySig",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "delegates",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getActiveClaimConditionId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_conditionId",
          "type": "uint256"
        }
      ],
      "name": "getClaimConditionById",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "startTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxClaimableSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "supplyClaimed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "merkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "metadata",
              "type": "string"
            }
          ],
          "internalType": "struct IClaimCondition.ClaimCondition",
          "name": "condition",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getFlatPlatformFeeInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "getPastTotalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "getPastVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPlatformFeeInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPlatformFeeType",
      "outputs": [
        {
          "internalType": "enum IPlatformFee.PlatformFeeType",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRoleMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "member",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "count",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_conditionId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_claimer",
          "type": "address"
        }
      ],
      "name": "getSupplyClaimedByWallet",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "supplyClaimedByWallet",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRoleWithSwitch",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_defaultAdmin",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_contractURI",
          "type": "string"
        },
        {
          "internalType": "address[]",
          "name": "_trustedForwarders",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "_saleRecipient",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_platformFeeRecipient",
          "type": "address"
        },
        {
          "internalType": "uint128",
          "name": "_platformFeeBps",
          "type": "uint128"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "forwarder",
          "type": "address"
        }
      ],
      "name": "isTrustedForwarder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxTotalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "multicall",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "results",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "nonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "numCheckpoints",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "permit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "primarySaleRecipient",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "startTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxClaimableSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "supplyClaimed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "merkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "metadata",
              "type": "string"
            }
          ],
          "internalType": "struct IClaimCondition.ClaimCondition[]",
          "name": "_conditions",
          "type": "tuple[]"
        },
        {
          "internalType": "bool",
          "name": "_resetClaimEligibility",
          "type": "bool"
        }
      ],
      "name": "setClaimConditions",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "setContractURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_platformFeeRecipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_flatFee",
          "type": "uint256"
        }
      ],
      "name": "setFlatPlatformFeeInfo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_maxTotalSupply",
          "type": "uint256"
        }
      ],
      "name": "setMaxTotalSupply",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_platformFeeRecipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_platformFeeBps",
          "type": "uint256"
        }
      ],
      "name": "setPlatformFeeInfo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IPlatformFee.PlatformFeeType",
          "name": "_feeType",
          "type": "uint8"
        }
      ],
      "name": "setPlatformFeeType",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_saleRecipient",
          "type": "address"
        }
      ],
      "name": "setPrimarySaleRecipient",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_conditionId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_claimer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_quantity",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_currency",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_pricePerToken",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            }
          ],
          "internalType": "struct IDrop.AllowlistProof",
          "name": "_allowlistProof",
          "type": "tuple"
        }
      ],
      "name": "verifyClaim",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isOverride",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b50600054610100900460ff1615808015620000335750600054600160ff909116105b8062000063575062000050306200013d60201b620022fe1760201c565b15801562000063575060005460ff166001145b620000cb5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840160405180910390fd5b6000805460ff191660011790558015620000ef576000805461ff0019166101001790555b801562000136576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b506200014c565b6001600160a01b03163b151590565b61528c806200015c6000396000f3fe6080604052600436106102965760003560e01c80637ecebe00116101615780637ecebe001461066157806384bb1e42146106815780638e539e8c146106945780639010d07c146106b457806391d14854146106d4578063938e3d7b146106f457806395d89b41146107145780639ab24eb014610729578063a0a8e46014610749578063a217fddf1461075d578063a32fa5b314610772578063a457c2d714610792578063a9059cbb146107b2578063ac9650d8146107d2578063ad1eefc5146107ff578063b6f10c7914610841578063c3cda52014610861578063c68907de14610881578063ca15c87314610896578063cb2ef6f7146108b6578063d45573f6146108d5578063d505accf1461090c578063d547741f1461092c578063d637ed591461094c578063dd62ed3e1461097c578063e57553da1461099c578063e8a3d485146109ce578063f1127ed8146109e3578063f28083c314610a2d57600080fd5b806306fdde031461029b578063079fe40e146102c6578063095ea7b3146102f357806318160ddd146103235780631e7ac4881461034257806323a2902b1461036457806323b872dd14610384578063248a9ca3146103a45780632ab4d052146103d15780632f2ff15d146103e8578063313ce567146104085780633644e5151461042a57806336568abe1461043f578063395093511461045f5780633a46b1a81461047f5780633f3e4c111461049f57806342966c68146104bf57806349c5c5b6146104df578063572b6c05146104ff578063587cde1e1461051f5780635c19a95c1461053f5780636f4f28371461055f5780636f8934f41461057f5780636fcfff45146105ac57806370a08231146105e157806374bc7db71461060157806379cc6790146106215780637e54523c14610641575b600080fd5b3480156102a757600080fd5b506102b0610a54565b6040516102bd91906143d2565b60405180910390f35b3480156102d257600080fd5b506102db610ae6565b6040516001600160a01b0390911681526020016102bd565b3480156102ff57600080fd5b5061031361030e36600461440a565b610af5565b60405190151581526020016102bd565b34801561032f57600080fd5b5060a4545b6040519081526020016102bd565b34801561034e57600080fd5b5061036261035d36600461440a565b610b19565b005b34801561037057600080fd5b5061031361037f366004614448565b610b54565b34801561039057600080fd5b5061031361039f3660046144c5565b610f15565b3480156103b057600080fd5b506103346103bf366004614506565b60009081526006602052604090205490565b3480156103dd57600080fd5b506103346101a05481565b3480156103f457600080fd5b5061036261040336600461451f565b610f45565b34801561041457600080fd5b5060125b60405160ff90911681526020016102bd565b34801561043657600080fd5b50610334610fdb565b34801561044b57600080fd5b5061036261045a36600461451f565b610fea565b34801561046b57600080fd5b5061031361047a36600461440a565b611049565b34801561048b57600080fd5b5061033461049a36600461440a565b611075565b3480156104ab57600080fd5b506103626104ba366004614506565b6110b9565b3480156104cb57600080fd5b506103626104da366004614506565b611103565b3480156104eb57600080fd5b506103626104fa3660046146a0565b611117565b34801561050b57600080fd5b5061031361051a36600461478f565b6112b5565b34801561052b57600080fd5b506102db61053a36600461478f565b6112d3565b34801561054b57600080fd5b5061036261055a36600461478f565b6112f2565b34801561056b57600080fd5b5061036261057a36600461478f565b611303565b34801561058b57600080fd5b5061059f61059a366004614506565b611330565b6040516102bd91906147ac565b3480156105b857600080fd5b506105cc6105c736600461478f565b61148d565b60405163ffffffff90911681526020016102bd565b3480156105ed57600080fd5b506103346105fc36600461478f565b6114b0565b34801561060d57600080fd5b5061036261061c366004614872565b6114cb565b34801561062d57600080fd5b5061036261063c36600461440a565b61180f565b34801561064d57600080fd5b5061036261065c36600461440a565b61182b565b34801561066d57600080fd5b5061033461067c36600461478f565b611859565b61036261068f3660046148c8565b611878565b3480156106a057600080fd5b506103346106af366004614506565b61199e565b3480156106c057600080fd5b506102db6106cf366004614969565b6119cb565b3480156106e057600080fd5b506103136106ef36600461451f565b611aba565b34801561070057600080fd5b5061036261070f36600461498b565b611ae5565b34801561072057600080fd5b506102b0611b12565b34801561073557600080fd5b5061033461074436600461478f565b611b21565b34801561075557600080fd5b506004610418565b34801561076957600080fd5b50610334600081565b34801561077e57600080fd5b5061031361078d36600461451f565b611ba9565b34801561079e57600080fd5b506103136107ad36600461440a565b611bff565b3480156107be57600080fd5b506103136107cd36600461440a565b611c90565b3480156107de57600080fd5b506107f26107ed3660046149bf565b611ca8565b6040516102bd9190614a00565b34801561080b57600080fd5b5061033461081a36600461451f565b6000918252600b602090815260408084206001600160a01b03909316845291905290205490565b34801561084d57600080fd5b5061036261085c366004614a62565b611d9c565b34801561086d57600080fd5b5061036261087c366004614a94565b611dc9565b34801561088d57600080fd5b50610334611efb565b3480156108a257600080fd5b506103346108b1366004614506565b611f9e565b3480156108c257600080fd5b5068044726f7045524332360bc1b610334565b3480156108e157600080fd5b506108ea612027565b604080516001600160a01b03909316835261ffff9091166020830152016102bd565b34801561091857600080fd5b50610362610927366004614aee565b612044565b34801561093857600080fd5b5061036261094736600461451f565b6121a8565b34801561095857600080fd5b50600854600954610967919082565b604080519283526020830191909152016102bd565b34801561098857600080fd5b50610334610997366004614b5c565b6121c1565b3480156109a857600080fd5b506109c06002546003546001600160a01b0390911691565b6040516102bd929190614b8a565b3480156109da57600080fd5b506102b06121ec565b3480156109ef57600080fd5b50610a036109fe366004614ba3565b61227a565b60408051825163ffffffff1681526020928301516001600160e01b031692810192909252016102bd565b348015610a3957600080fd5b50600254600160b01b900460ff166040516102bd9190614bf0565b606060a58054610a6390614c18565b80601f0160208091040260200160405190810160405280929190818152602001828054610a8f90614c18565b8015610adc5780601f10610ab157610100808354040283529160200191610adc565b820191906000526020600020905b815481529060010190602001808311610abf57829003601f168201915b5050505050905090565b6004546001600160a01b031690565b600080610b0061230d565b9050610b0d818585612317565b60019150505b92915050565b610b2161243b565b610b465760405162461bcd60e51b8152600401610b3d90614c4d565b60405180910390fd5b610b508282612449565b5050565b6000868152600a60209081526040808320815161010081018352815481526001820154938101939093526002810154918301919091526003810154606083015260048101546080830152600581015460a083015260068101546001600160a01b031660c08301526007810180548493929160e0840191610bd390614c18565b80601f0160208091040260200160405190810160405280929190818152602001828054610bff90614c18565b8015610c4c5780601f10610c2157610100808354040283529160200191610c4c565b820191906000526020600020905b815481529060010190602001808311610c2f57829003601f168201915b50505091909252505050606081015160a082015160c08301516080840151939450919290919015610d2c57610d28610c848780614c75565b80806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250505060808088015191508d9060208b01359060408c013590610cd9908d0160608e0161478f565b6040516001600160601b0319606095861b811660208301526034820194909452605481019290925290921b166074820152608801604051602081830303815290604052805190602001206124f8565b5094505b8415610db1576020860135610d415782610d47565b85602001355b925060001986604001351415610d5d5781610d63565b85604001355b9150600019866040013514158015610d9457506000610d88608088016060890161478f565b6001600160a01b031614155b610d9e5780610dae565b610dae608087016060880161478f565b90505b60008b8152600b602090815260408083206001600160a01b03808f16855292529091205490898116908316141580610de95750828814155b15610e295760405162461bcd60e51b815260206004820152601060248201526f2150726963654f7243757272656e637960801b6044820152606401610b3d565b891580610e3e575083610e3c828c614cd4565b115b15610e745760405162461bcd60e51b8152600401610b3d906020808252600490820152632151747960e01b604082015260600190565b84602001518a8660400151610e899190614cd4565b1115610ec45760405162461bcd60e51b815260206004820152600a602482015269214d6178537570706c7960b01b6044820152606401610b3d565b8451421015610f065760405162461bcd60e51b815260206004820152600e60248201526d18d85b9d0818db185a5b481e595d60921b6044820152606401610b3d565b50505050509695505050505050565b600080610f2061230d565b9050610f2d8582856125c6565b610f38858585612640565b60019150505b9392505050565b600082815260066020526040902054610f5e903361280d565b60008281526005602090815260408083206001600160a01b038516845290915290205460ff1615610fd15760405162461bcd60e51b815260206004820152601d60248201527f43616e206f6e6c79206772616e7420746f206e6f6e20686f6c646572730000006044820152606401610b3d565b610b50828261288d565b6000610fe56128a1565b905090565b336001600160a01b0382161461103f5760405162461bcd60e51b815260206004820152601a60248201527921b0b71037b7363c903932b737bab731b2903337b91039b2b63360311b6044820152606401610b3d565b610b50828261291e565b60008061105461230d565b9050610b0d81858561106685896121c1565b6110709190614cd4565b612317565b60004382106110965760405162461bcd60e51b8152600401610b3d90614cec565b6001600160a01b038316600090815261016e60205260409020610f3e9083612975565b60006110c5813361280d565b6101a08290556040518281527ff2672935fc79f5237559e2e2999dbe743bf65430894ac2b37666890e7c69e1af906020015b60405180910390a15050565b61111461110e61230d565b82612a31565b50565b600054610100900460ff16158080156111375750600054600160ff909116105b806111585750611146306122fe565b158015611158575060005460ff166001145b6111bb5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610b3d565b6000805460ff1916600117905580156111de576000805461ff0019166101001790555b7f8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c61120886612a3b565b61121189612a73565b61121b8989612abd565b61122487612b10565b61122f60008b61288d565b611239818b61288d565b61124481600061288d565b61125784846001600160801b0316612449565b61126085612be6565b61019f5580156112aa576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050505050565b6001600160a01b03166000908152603e602052604090205460ff1690565b6001600160a01b03908116600090815261016d60205260409020541690565b6111146112fd61230d565b82612c30565b61130b61243b565b6113275760405162461bcd60e51b8152600401610b3d90614c4d565b61111481612be6565b61138460405180610100016040528060008152602001600081526020016000815260200160008152602001600080191681526020016000815260200160006001600160a01b03168152602001606081525090565b6000828152600a6020908152604091829020825161010081018452815481526001820154928101929092526002810154928201929092526003820154606082015260048201546080820152600582015460a082015260068201546001600160a01b031660c082015260078201805491929160e08401919061140490614c18565b80601f016020809104026020016040519081016040528092919081815260200182805461143090614c18565b801561147d5780601f106114525761010080835404028352916020019161147d565b820191906000526020600020905b81548152906001019060200180831161146057829003601f168201915b5050505050815250509050919050565b6001600160a01b038116600090815261016e6020526040812054610b1390612cb1565b6001600160a01b0316600090815260a2602052604090205490565b6114d361243b565b6114ef5760405162461bcd60e51b8152600401610b3d90614c4d565b600854600954818315611509576115068284614cd4565b90505b600985905560088190556000805b868110156116bc5780158061154f575087878281811061153957611539614d23565b905060200281019061154b9190614d39565b3582105b6115805760405162461bcd60e51b815260206004820152600260248201526114d560f21b6044820152606401610b3d565b6000600a8161158f8487614cd4565b81526020019081526020016000206002015490508888838181106115b5576115b5614d23565b90506020028101906115c79190614d39565b6020013581111561160f5760405162461bcd60e51b81526020600482015260126024820152711b585e081cdd5c1c1b1e4818db185a5b595960721b6044820152606401610b3d565b88888381811061162157611621614d23565b90506020028101906116339190614d39565b600a60006116418588614cd4565b8152602001908152602001600020818161165b9190614ea5565b50819050600a600061166d8588614cd4565b815260208101919091526040016000206002015588888381811061169357611693614d23565b90506020028101906116a59190614d39565b3592508190506116b481614f23565b915050611517565b50841561173c57835b82811015611736576000818152600a6020526040812081815560018101829055600281018290556003810182905560048101829055600581018290556006810180546001600160a01b03191690559061172160078301826142af565b5050808061172e90614f23565b9150506116c5565b506117cb565b858311156117cb57855b838110156117c957600a600061175c8386614cd4565b81526020810191909152604001600090812081815560018101829055600281018290556003810182905560048101829055600581018290556006810180546001600160a01b0319169055906117b460078301826142af565b505080806117c190614f23565b915050611746565b505b7fbf4016fceeaaa4ac5cf4be865b559ff85825ab4ca7aa7b661d16e2f544c030988787876040516117fe93929190614fac565b60405180910390a150505050505050565b6118218261181b61230d565b836125c6565b610b508282612a31565b61183361243b565b61184f5760405162461bcd60e51b8152600401610b3d90614c4d565b610b508282612d1a565b6001600160a01b038116600090815261013a6020526040812054610b13565b611886868686868686612d6c565b6000611890611efb565b90506118a78161189e612dd7565b88888888610b54565b506000818152600a6020526040812060020180548892906118c9908490614cd4565b90915550506000818152600b6020526040812087916118e6612dd7565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008282546119159190614cd4565b9091555061192890506000878787612de1565b60006119348888612f7a565b9050876001600160a01b0316611948612dd7565b6001600160a01b0316837ffa76a4010d9533e3e964f2930a65fb6042a12fa6ff5b08281837a10b0be7321e848b60405161198c929190918252602082015260400190565b60405180910390a45050505050505050565b60004382106119bf5760405162461bcd60e51b8152600401610b3d90614cec565b610b1361016f83612975565b60008281526007602052604081205481805b82811015611ab15760008681526007602090815260408083208484526001019091529020546001600160a01b031615611a5a5784821415611a485760008681526007602090815260408083209383526001909301905220546001600160a01b03169250610b13915050565b611a53600183614cd4565b9150611a9f565b611a65866000611aba565b8015611a8c5750600086815260076020908152604080832083805260020190915290205481145b15611a9f57611a9c600183614cd4565b91505b611aaa600182614cd4565b90506119dd565b50505092915050565b60009182526005602090815260408084206001600160a01b0393909316845291905290205460ff1690565b611aed61243b565b611b095760405162461bcd60e51b8152600401610b3d90614c4d565b61111481612b10565b606060a68054610a6390614c18565b6001600160a01b038116600090815261016e60205260408120548015611b96576001600160a01b038316600090815261016e60205260409020611b65600183615094565b81548110611b7557611b75614d23565b600091825260209091200154600160201b90046001600160e01b0316611b99565b60005b6001600160e01b03169392505050565b600082815260056020908152604080832083805290915281205460ff16611bf6575060008281526005602090815260408083206001600160a01b038516845290915290205460ff16610b13565b50600192915050565b600080611c0a61230d565b90506000611c1882866121c1565b905083811015611c785760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610b3d565b611c858286868403612317565b506001949350505050565b600080611c9b61230d565b9050610b0d818585612640565b6060816001600160401b03811115611cc257611cc261454f565b604051908082528060200260200182016040528015611cf557816020015b6060815260200190600190039081611ce05790505b50905060005b82811015611d9557611d6530858584818110611d1957611d19614d23565b9050602002810190611d2b9190614d59565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250612f9792505050565b828281518110611d7757611d77614d23565b60200260200101819052508080611d8d90614f23565b915050611cfb565b5092915050565b611da461243b565b611dc05760405162461bcd60e51b8152600401610b3d90614c4d565b61111481613089565b83421115611e195760405162461bcd60e51b815260206004820152601d60248201527f4552433230566f7465733a207369676e617475726520657870697265640000006044820152606401610b3d565b604080517fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf60208201526001600160a01b038816918101919091526060810186905260808101859052600090611e9390611e8b9060a001604051602081830303815290604052805190602001206130ed565b85858561313b565b9050611e9e81613165565b8614611ee85760405162461bcd60e51b81526020600482015260196024820152784552433230566f7465733a20696e76616c6964206e6f6e636560381b6044820152606401610b3d565b611ef28188612c30565b50505050505050565b6009546008546000918291611f109190614cd4565b90505b600854811115611f6757600a6000611f2c600184615094565b8152602001908152602001600020600001544210611f5557611f4f600182615094565b91505090565b80611f5f816150ab565b915050611f13565b5060405162461bcd60e51b815260206004820152600b60248201526a10a1a7a72224aa24a7a71760a91b6044820152606401610b3d565b600081815260076020526040812054815b818110156120025760008481526007602090815260408083208484526001019091529020546001600160a01b031615611ff057611fed600184614cd4565b92505b611ffb600182614cd4565b9050611faf565b5061200e836000611aba565b156120215761201e600183614cd4565b91505b50919050565b6002546001600160a01b03811691600160a01b90910461ffff1690565b834211156120945760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e650000006044820152606401610b3d565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886120c38c613165565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e001604051602081830303815290604052805190602001209050600061211e826130ed565b9050600061212e8287878761313b565b9050896001600160a01b0316816001600160a01b0316146121915760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e617475726500006044820152606401610b3d565b61219c8a8a8a612317565b50505050505050505050565b60008281526006602052604090205461103f903361280d565b6001600160a01b03918216600090815260a36020908152604080832093909416825291909152205490565b600180546121f990614c18565b80601f016020809104026020016040519081016040528092919081815260200182805461222590614c18565b80156122725780601f1061224757610100808354040283529160200191612272565b820191906000526020600020905b81548152906001019060200180831161225557829003601f168201915b505050505081565b60408051808201909152600080825260208201526001600160a01b038316600090815261016e60205260409020805463ffffffff84169081106122bf576122bf614d23565b60009182526020918290206040805180820190915291015463ffffffff81168252600160201b90046001600160e01b0316918101919091529392505050565b6001600160a01b03163b151590565b6000610fe561318c565b6001600160a01b0383166123795760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610b3d565b6001600160a01b0382166123da5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610b3d565b6001600160a01b03838116600081815260a3602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610fe5816106ef61230d565b61271081111561248d5760405162461bcd60e51b815260206004820152600f60248201526e45786365656473206d61782062707360881b6044820152606401610b3d565b600280546001600160b01b031916600160a01b61ffff8416026001600160a01b031916176001600160a01b0384169081179091556040518281527fe2497bd806ec41a6e0dd992c29a72efc0ef8fec9092d1978fd4a1e00b2f183049060200160405180910390a25050565b6000808281805b87518110156125ba576125136002836150c2565b9150600088828151811061252957612529614d23565b6020026020010151905080841161256b5760408051602081018690529081018290526060016040516020818303038152906040528051906020012093506125a7565b60408051602081018390529081018590526060016040516020818303038152906040528051906020012093506001836125a49190614cd4565b92505b50806125b281614f23565b9150506124ff565b50941495939450505050565b60006125d284846121c1565b9050600019811461263a578181101561262d5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610b3d565b61263a8484848403612317565b50505050565b6001600160a01b0383166126a45760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610b3d565b6001600160a01b0382166127065760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610b3d565b6127118383836131ae565b6001600160a01b038316600090815260a26020526040902054818110156127895760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610b3d565b6001600160a01b03808516600090815260a260205260408082208585039055918516815290812080548492906127c0908490614cd4565b92505081905550826001600160a01b0316846001600160a01b0316600080516020615237833981519152846040516127fa91815260200190565b60405180910390a361263a84848461324e565b60008281526005602090815260408083206001600160a01b038516845290915290205460ff16610b505761284b816001600160a01b03166014613259565b612856836020613259565b6040516020016128679291906150e1565b60408051601f198184030181529082905262461bcd60e51b8252610b3d916004016143d2565b61289782826133f4565b610b50828261344f565b6000610fe57f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6128d16101065490565b610107546040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b61292882826134bc565b60008281526007602090815260408083206001600160a01b03851680855260028201808552838620805487526001909301855292852080546001600160a01b031916905584529152555050565b8154600090815b818110156129d9576000612990828461351e565b9050848682815481106129a5576129a5614d23565b60009182526020909120015463ffffffff1611156129c5578092506129d3565b6129d0816001614cd4565b91505b5061297c565b8115612a1c57846129eb600184615094565b815481106129fb576129fb614d23565b600091825260209091200154600160201b90046001600160e01b0316612a1f565b60005b6001600160e01b031695945050505050565b610b508282613539565b600054610100900460ff16612a625760405162461bcd60e51b8152600401610b3d9061514e565b612a6a613552565b6111148161357b565b600054610100900460ff16612a9a5760405162461bcd60e51b8152600401610b3d9061514e565b61111481604051806040016040528060018152602001603160f81b81525061360a565b600054610100900460ff16612ae45760405162461bcd60e51b8152600401610b3d9061514e565b8151612af79060a59060208501906142e9565b508051612b0b9060a69060208401906142e9565b505050565b600060018054612b1f90614c18565b80601f0160208091040260200160405190810160405280929190818152602001828054612b4b90614c18565b8015612b985780601f10612b6d57610100808354040283529160200191612b98565b820191906000526020600020905b815481529060010190602001808311612b7b57829003601f168201915b50508551939450612bb4936001935060208701925090506142e9565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a1681836040516110f7929190615199565b600480546001600160a01b0319166001600160a01b0383169081179091556040517f299d17e95023f496e0ffc4909cff1a61f74bb5eb18de6f900f4155bfa1b3b33390600090a250565b6000612c3b836112d3565b90506000612c48846114b0565b6001600160a01b03858116600081815261016d602052604080822080546001600160a01b031916898616908117909155905194955093928616927f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f9190a461263a82848361364d565b600063ffffffff821115612d165760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201526532206269747360d01b6064820152608401610b3d565b5090565b6003819055600280546001600160a01b0319166001600160a01b0384161790556040517ff8086cee80709bd44c82f89dbca54115ebd05e840a88ab81df9cf5be9754eb63906110f79084908490614b8a565b6101a054801580612d9057508086612d8360a45490565b612d8d9190614cd4565b11155b611ef25760405162461bcd60e51b815260206004820152601860248201527732bc31b2b2b21036b0bc103a37ba30b61039bab838363c9760411b6044820152606401610b3d565b6000610fe561230d565b80612e22573415612e1d5760405162461bcd60e51b81526020600482015260066024820152652156616c756560d01b6044820152606401610b3d565b61263a565b600080612e2d612027565b909250905060006001600160a01b03871615612e495786612e51565b612e51610ae6565b90506000670de0b6b3a7640000612e6886896150c2565b612e7291906151be565b905060008111612eb75760405162461bcd60e51b815260206004820152601060248201526f7175616e7469747920746f6f206c6f7760801b6044820152606401610b3d565b6000612710612eca61ffff8616846150c2565b612ed491906151be565b905060006001600160a01b03881673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1415612f065750348214612f0a565b5034155b80612f4b5760405162461bcd60e51b8152602060048201526011602482015270496e76616c6964206d73672076616c756560781b6044820152606401610b3d565b612f5e88612f5761230d565b888561378c565b61219c88612f6a61230d565b86612f758688615094565b61378c565b6000612f8683836137d1565b50600092915050565b505050505050565b6060612fa2836122fe565b612ffd5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610b3d565b600080846001600160a01b03168460405161301891906151e0565b600060405180830381855af49150503d8060008114613053576040519150601f19603f3d011682016040523d82523d6000602084013e613058565b606091505b50915091506130808282604051806060016040528060278152602001615210602791396137db565b95945050505050565b6002805482919060ff60b01b1916600160b01b8360018111156130ae576130ae614bda565b02179055507fd246da9440709ce0dd3f4fd669abc85ada012ab9774b8ecdcc5059ba1486b9c1816040516130e29190614bf0565b60405180910390a150565b6000610b136130fa6128a1565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b600080600061314c87878787613814565b91509150613159816138f7565b5090505b949350505050565b6001600160a01b038116600090815261013a60205260409020805460018101825590612021565b6000613197336112b5565b156131a9575060131936013560601c90565b503390565b6131bc61019f546000611aba565b1580156131d157506001600160a01b03831615155b80156131e557506001600160a01b03821615155b15612b0b576131f761019f5484611aba565b8061320a575061320a61019f5483611aba565b612b0b5760405162461bcd60e51b81526020600482015260156024820152743a3930b739b332b939903932b9ba3934b1ba32b21760591b6044820152606401610b3d565b612b0b838383613aad565b606060006132688360026150c2565b613273906002614cd4565b6001600160401b0381111561328a5761328a61454f565b6040519080825280601f01601f1916602001820160405280156132b4576020820181803683370190505b509050600360fc1b816000815181106132cf576132cf614d23565b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106132fe576132fe614d23565b60200101906001600160f81b031916908160001a90535060006133228460026150c2565b61332d906001614cd4565b90505b60018111156133a5576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061336157613361614d23565b1a60f81b82828151811061337757613377614d23565b60200101906001600160f81b031916908160001a90535060049490941c9361339e816150ab565b9050613330565b508315610f3e5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610b3d565b60008281526005602090815260408083206001600160a01b0385168085529252808320805460ff1916600117905551339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b60008281526007602052604081208054916001919061346e8385614cd4565b9091555050600092835260076020908152604080852083865260018101835281862080546001600160a01b039096166001600160a01b03199096168617905593855260029093019052912055565b6134c6828261280d565b60008281526005602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b600061352d60028484186151be565b610f3e90848416614cd4565b6135438282613ac8565b61263a61016f613c1783613c23565b600054610100900460ff166135795760405162461bcd60e51b8152600401610b3d9061514e565b565b600054610100900460ff166135a25760405162461bcd60e51b8152600401610b3d9061514e565b60005b8151811015610b50576001603e60008484815181106135c6576135c6614d23565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790558061360281614f23565b9150506135a5565b600054610100900460ff166136315760405162461bcd60e51b8152600401610b3d9061514e565b8151602092830120815191909201206101069190915561010755565b816001600160a01b0316836001600160a01b03161415801561366f5750600081115b15612b0b576001600160a01b038316156136fe576001600160a01b038316600090815261016e6020526040812081906136ab90613c1785613c23565b91509150846001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a72483836040516136f3929190918252602082015260400190565b60405180910390a250505b6001600160a01b03821615612b0b576001600160a01b038216600090815261016e60205260408120819061373590613d9a85613c23565b91509150836001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724838360405161377d929190918252602082015260400190565b60405180910390a25050505050565b806137965761263a565b6001600160a01b03841673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14156137c557612e1d8282613da6565b61263a84848484613e48565b610b508282613ea1565b606083156137ea575081610f3e565b8251156137fa5782518084602001fd5b8160405162461bcd60e51b8152600401610b3d91906143d2565b6000806fa2a8918ca85bafe22016d0b997e4df60600160ff1b0383111561384157506000905060036138ee565b8460ff16601b1415801561385957508460ff16601c14155b1561386a57506000905060046138ee565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156138be573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166138e7576000600192509250506138ee565b9150600090505b94509492505050565b600081600481111561390b5761390b614bda565b14156139145750565b600181600481111561392857613928614bda565b14156139715760405162461bcd60e51b815260206004820152601860248201527745434453413a20696e76616c6964207369676e617475726560401b6044820152606401610b3d565b600281600481111561398557613985614bda565b14156139d35760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610b3d565b60038160048111156139e7576139e7614bda565b1415613a405760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610b3d565b6004816004811115613a5457613a54614bda565b14156111145760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610b3d565b612b0b613ab9846112d3565b613ac2846112d3565b8361364d565b6001600160a01b038216613b285760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610b3d565b613b34826000836131ae565b6001600160a01b038216600090815260a2602052604090205481811015613ba85760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610b3d565b6001600160a01b038316600090815260a260205260408120838303905560a48054849290613bd7908490615094565b90915550506040518281526000906001600160a01b038516906000805160206152378339815191529060200160405180910390a3612b0b8360008461324e565b6000610f3e8284615094565b825460009081908015613c6d5785613c3c600183615094565b81548110613c4c57613c4c614d23565b600091825260209091200154600160201b90046001600160e01b0316613c70565b60005b6001600160e01b03169250613c8983858763ffffffff16565b9150600081118015613cc757504386613ca3600184615094565b81548110613cb357613cb3614d23565b60009182526020909120015463ffffffff16145b15613d2757613cd582613f2c565b86613ce1600184615094565b81548110613cf157613cf1614d23565b9060005260206000200160000160046101000a8154816001600160e01b0302191690836001600160e01b03160217905550613d91565b856040518060400160405280613d3c43612cb1565b63ffffffff168152602001613d5085613f2c565b6001600160e01b039081169091528254600181018455600093845260209384902083519490930151909116600160201b0263ffffffff909316929092179101555b50935093915050565b6000610f3e8284614cd4565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114613df3576040519150601f19603f3d011682016040523d82523d6000602084013e613df8565b606091505b5050905080612b0b5760405162461bcd60e51b815260206004820152601c60248201527b1b985d1a5d99481d1bdad95b881d1c985b9cd9995c8819985a5b195960221b6044820152606401610b3d565b816001600160a01b0316836001600160a01b03161415613e675761263a565b6001600160a01b038316301415613e8c57612e1d6001600160a01b0385168383613f95565b61263a6001600160a01b038516848484613feb565b613eab8282614023565b60a4546001600160e01b031015613f1d5760405162461bcd60e51b815260206004820152603060248201527f4552433230566f7465733a20746f74616c20737570706c79207269736b73206f60448201526f766572666c6f77696e6720766f74657360801b6064820152608401610b3d565b61263a61016f613d9a83613c23565b60006001600160e01b03821115612d165760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20326044820152663234206269747360c81b6064820152608401610b3d565b612b0b8363a9059cbb60e01b8484604051602401613fb4929190614b8a565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152614104565b6040516001600160a01b038085166024830152831660448201526064810182905261263a9085906323b872dd60e01b90608401613fb4565b6001600160a01b0382166140795760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610b3d565b614085600083836131ae565b8060a460008282546140979190614cd4565b90915550506001600160a01b038216600090815260a26020526040812080548392906140c4908490614cd4565b90915550506040518181526001600160a01b038316906000906000805160206152378339815191529060200160405180910390a3610b506000838361324e565b6000614159826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166141d69092919063ffffffff16565b805190915015612b0b578080602001905181019061417791906151f2565b612b0b5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610b3d565b606061315d8484600085856141ea856122fe565b6142365760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610b3d565b600080866001600160a01b0316858760405161425291906151e0565b60006040518083038185875af1925050503d806000811461428f576040519150601f19603f3d011682016040523d82523d6000602084013e614294565b606091505b50915091506142a48282866137db565b979650505050505050565b5080546142bb90614c18565b6000825580601f106142cb575050565b601f0160209004906000526020600020908101906111149190614365565b8280546142f590614c18565b90600052602060002090601f016020900481019282614317576000855561435d565b82601f1061433057805160ff191683800117855561435d565b8280016001018555821561435d579182015b8281111561435d578251825591602001919060010190614342565b50612d169291505b5b80821115612d165760008155600101614366565b60005b8381101561439557818101518382015260200161437d565b8381111561263a5750506000910152565b600081518084526143be81602086016020860161437a565b601f01601f19169290920160200192915050565b602081526000610f3e60208301846143a6565b6001600160a01b038116811461111457600080fd5b8035614405816143e5565b919050565b6000806040838503121561441d57600080fd5b8235614428816143e5565b946020939093013593505050565b60006080828403121561202157600080fd5b60008060008060008060c0878903121561446157600080fd5b863595506020870135614473816143e5565b945060408701359350606087013561448a816143e5565b92506080870135915060a08701356001600160401b038111156144ac57600080fd5b6144b889828a01614436565b9150509295509295509295565b6000806000606084860312156144da57600080fd5b83356144e5816143e5565b925060208401356144f5816143e5565b929592945050506040919091013590565b60006020828403121561451857600080fd5b5035919050565b6000806040838503121561453257600080fd5b823591506020830135614544816143e5565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171561458d5761458d61454f565b604052919050565b60006001600160401b038311156145ae576145ae61454f565b6145c1601f8401601f1916602001614565565b90508281528383830111156145d557600080fd5b828260208301376000602084830101529392505050565b600082601f8301126145fd57600080fd5b610f3e83833560208501614595565b600082601f83011261461d57600080fd5b813560206001600160401b038211156146385761463861454f565b8160051b614647828201614565565b928352848101820192828101908785111561466157600080fd5b83870192505b848310156142a457823561467a816143e5565b82529183019190830190614667565b80356001600160801b038116811461440557600080fd5b600080600080600080600080610100898b0312156146bd57600080fd5b6146c6896143fa565b975060208901356001600160401b03808211156146e257600080fd5b6146ee8c838d016145ec565b985060408b013591508082111561470457600080fd5b6147108c838d016145ec565b975060608b013591508082111561472657600080fd5b6147328c838d016145ec565b965060808b013591508082111561474857600080fd5b506147558b828c0161460c565b94505061476460a08a016143fa565b925061477260c08a016143fa565b915061478060e08a01614689565b90509295985092959890939650565b6000602082840312156147a157600080fd5b8135610f3e816143e5565b6020815281516020820152602082015160408201526040820151606082015260608201516080820152608082015160a082015260a082015160c082015260018060a01b0360c08301511660e0820152600060e083015161010080818501525061315d6101208401826143a6565b60008083601f84011261482b57600080fd5b5081356001600160401b0381111561484257600080fd5b6020830191508360208260051b850101111561485d57600080fd5b9250929050565b801515811461111457600080fd5b60008060006040848603121561488757600080fd5b83356001600160401b0381111561489d57600080fd5b6148a986828701614819565b90945092505060208401356148bd81614864565b809150509250925092565b60008060008060008060c087890312156148e157600080fd5b86356148ec816143e5565b9550602087013594506040870135614903816143e5565b93506060870135925060808701356001600160401b038082111561492657600080fd5b6149328a838b01614436565b935060a089013591508082111561494857600080fd5b508701601f8101891361495a57600080fd5b6144b889823560208401614595565b6000806040838503121561497c57600080fd5b50508035926020909101359150565b60006020828403121561499d57600080fd5b81356001600160401b038111156149b357600080fd5b61315d848285016145ec565b600080602083850312156149d257600080fd5b82356001600160401b038111156149e857600080fd5b6149f485828601614819565b90969095509350505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015614a5557603f19888603018452614a438583516143a6565b94509285019290850190600101614a27565b5092979650505050505050565b600060208284031215614a7457600080fd5b813560028110610f3e57600080fd5b803560ff8116811461440557600080fd5b60008060008060008060c08789031215614aad57600080fd5b8635614ab8816143e5565b95506020870135945060408701359350614ad460608801614a83565b92506080870135915060a087013590509295509295509295565b600080600080600080600060e0888a031215614b0957600080fd5b8735614b14816143e5565b96506020880135614b24816143e5565b95506040880135945060608801359350614b4060808901614a83565b925060a0880135915060c0880135905092959891949750929550565b60008060408385031215614b6f57600080fd5b8235614b7a816143e5565b91506020830135614544816143e5565b6001600160a01b03929092168252602082015260400190565b60008060408385031215614bb657600080fd5b8235614bc1816143e5565b9150602083013563ffffffff8116811461454457600080fd5b634e487b7160e01b600052602160045260246000fd5b6020810160028310614c1257634e487b7160e01b600052602160045260246000fd5b91905290565b600181811c90821680614c2c57607f821691505b6020821081141561202157634e487b7160e01b600052602260045260246000fd5b6020808252600e908201526d139bdd08185d5d1a1bdc9a5e995960921b604082015260600190565b6000808335601e19843603018112614c8c57600080fd5b8301803591506001600160401b03821115614ca657600080fd5b6020019150600581901b360382131561485d57600080fd5b634e487b7160e01b600052601160045260246000fd5b60008219821115614ce757614ce7614cbe565b500190565b6020808252601f908201527f4552433230566f7465733a20626c6f636b206e6f7420796574206d696e656400604082015260600190565b634e487b7160e01b600052603260045260246000fd5b6000823560fe19833603018112614d4f57600080fd5b9190910192915050565b6000808335601e19843603018112614d7057600080fd5b8301803591506001600160401b03821115614d8a57600080fd5b60200191503681900382131561485d57600080fd5b601f821115612b0b57600081815260208120601f850160051c81016020861015614dc65750805b601f850160051c820191505b81811015612f8f57828155600101614dd2565b6001600160401b03831115614dfc57614dfc61454f565b614e1083614e0a8354614c18565b83614d9f565b6000601f841160018114614e445760008515614e2c5750838201355b600019600387901b1c1916600186901b178355614e9e565b600083815260209020601f19861690835b82811015614e755786850135825560209485019460019092019101614e55565b5086821015614e925760001960f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b813581556020820135600182015560408201356002820155606082013560038201556080820135600482015560a082013560058201556006810160c0830135614eed816143e5565b81546001600160a01b0319166001600160a01b0391909116179055614f1560e0830183614d59565b61263a818360078601614de5565b6000600019821415614f3757614f37614cbe565b5060010190565b6000808335601e19843603018112614f5557600080fd5b83016020810192503590506001600160401b03811115614f7457600080fd5b80360383131561485d57600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60408082528181018490526000906060808401600587901b850182018885805b8a81101561507e57888403605f190185528235368d900360fe19018112614ff1578283fd5b8c018035855260208082013581870152888201358987015287820135888701526080808301359087015260a080830135908701526101009060c080840135615038816143e5565b6001600160a01b03169088015260e061505384820185614f3e565b945083828a0152615067848a018683614f83565b998301999850505094909401935050600101614fcc565b5050508615156020870152935061315d92505050565b6000828210156150a6576150a6614cbe565b500390565b6000816150ba576150ba614cbe565b506000190190565b60008160001904831182151516156150dc576150dc614cbe565b500290565b7402832b936b4b9b9b4b7b7399d1030b1b1b7bab73a1605d1b81526000835161511181601585016020880161437a565b7001034b99036b4b9b9b4b733903937b6329607d1b601591840191820152835161514281602684016020880161437a565b01602601949350505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6040815260006151ac60408301856143a6565b828103602084015261308081856143a6565b6000826151db57634e487b7160e01b600052601260045260246000fd5b500490565b60008251614d4f81846020870161437a565b60006020828403121561520457600080fd5b8151610f3e8161486456fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220c4832ce69c73a478b43998d3beaa1e6802bc8cfa50a24e1db5b66e098071104164736f6c634300080c0033",
    "sourceMap": "1553:7953:326:-:0;;;2668:28;;;;;;;;;-1:-1:-1;3111:19:436;3134:13;;;;;;3133:14;;3179:34;;;;-1:-1:-1;3197:12:436;;3212:1;3197:12;;;;:16;3179:34;3178:108;;;;3220:44;3258:4;3220:29;;;;;:44;;:::i;:::-;3219:45;:66;;;;-1:-1:-1;3268:12:436;;;;;:17;3219:66;3157:201;;;;-1:-1:-1;;;3157:201:436;;216:2:644;3157:201:436;;;198:21:644;255:2;235:18;;;228:30;294:34;274:18;;;267:62;-1:-1:-1;;;345:18:644;;;338:44;399:19;;3157:201:436;;;;;;;;3368:12;:16;;-1:-1:-1;;3368:16:436;3383:1;3368:16;;;3394:65;;;;3428:13;:20;;-1:-1:-1;;3428:20:436;;;;;3394:65;3483:14;3479:99;;;3529:5;3513:21;;-1:-1:-1;;3513:21:436;;;3553:14;;-1:-1:-1;581:36:644;;3553:14:436;;569:2:644;554:18;3553:14:436;;;;;;;3479:99;3101:483;1553:7953:326;;1186:320:462;-1:-1:-1;;;;;1476:19:462;;:23;;;1186:320::o;429:194:644:-;1553:7953:326;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106102965760003560e01c80637ecebe00116101615780637ecebe001461066157806384bb1e42146106815780638e539e8c146106945780639010d07c146106b457806391d14854146106d4578063938e3d7b146106f457806395d89b41146107145780639ab24eb014610729578063a0a8e46014610749578063a217fddf1461075d578063a32fa5b314610772578063a457c2d714610792578063a9059cbb146107b2578063ac9650d8146107d2578063ad1eefc5146107ff578063b6f10c7914610841578063c3cda52014610861578063c68907de14610881578063ca15c87314610896578063cb2ef6f7146108b6578063d45573f6146108d5578063d505accf1461090c578063d547741f1461092c578063d637ed591461094c578063dd62ed3e1461097c578063e57553da1461099c578063e8a3d485146109ce578063f1127ed8146109e3578063f28083c314610a2d57600080fd5b806306fdde031461029b578063079fe40e146102c6578063095ea7b3146102f357806318160ddd146103235780631e7ac4881461034257806323a2902b1461036457806323b872dd14610384578063248a9ca3146103a45780632ab4d052146103d15780632f2ff15d146103e8578063313ce567146104085780633644e5151461042a57806336568abe1461043f578063395093511461045f5780633a46b1a81461047f5780633f3e4c111461049f57806342966c68146104bf57806349c5c5b6146104df578063572b6c05146104ff578063587cde1e1461051f5780635c19a95c1461053f5780636f4f28371461055f5780636f8934f41461057f5780636fcfff45146105ac57806370a08231146105e157806374bc7db71461060157806379cc6790146106215780637e54523c14610641575b600080fd5b3480156102a757600080fd5b506102b0610a54565b6040516102bd91906143d2565b60405180910390f35b3480156102d257600080fd5b506102db610ae6565b6040516001600160a01b0390911681526020016102bd565b3480156102ff57600080fd5b5061031361030e36600461440a565b610af5565b60405190151581526020016102bd565b34801561032f57600080fd5b5060a4545b6040519081526020016102bd565b34801561034e57600080fd5b5061036261035d36600461440a565b610b19565b005b34801561037057600080fd5b5061031361037f366004614448565b610b54565b34801561039057600080fd5b5061031361039f3660046144c5565b610f15565b3480156103b057600080fd5b506103346103bf366004614506565b60009081526006602052604090205490565b3480156103dd57600080fd5b506103346101a05481565b3480156103f457600080fd5b5061036261040336600461451f565b610f45565b34801561041457600080fd5b5060125b60405160ff90911681526020016102bd565b34801561043657600080fd5b50610334610fdb565b34801561044b57600080fd5b5061036261045a36600461451f565b610fea565b34801561046b57600080fd5b5061031361047a36600461440a565b611049565b34801561048b57600080fd5b5061033461049a36600461440a565b611075565b3480156104ab57600080fd5b506103626104ba366004614506565b6110b9565b3480156104cb57600080fd5b506103626104da366004614506565b611103565b3480156104eb57600080fd5b506103626104fa3660046146a0565b611117565b34801561050b57600080fd5b5061031361051a36600461478f565b6112b5565b34801561052b57600080fd5b506102db61053a36600461478f565b6112d3565b34801561054b57600080fd5b5061036261055a36600461478f565b6112f2565b34801561056b57600080fd5b5061036261057a36600461478f565b611303565b34801561058b57600080fd5b5061059f61059a366004614506565b611330565b6040516102bd91906147ac565b3480156105b857600080fd5b506105cc6105c736600461478f565b61148d565b60405163ffffffff90911681526020016102bd565b3480156105ed57600080fd5b506103346105fc36600461478f565b6114b0565b34801561060d57600080fd5b5061036261061c366004614872565b6114cb565b34801561062d57600080fd5b5061036261063c36600461440a565b61180f565b34801561064d57600080fd5b5061036261065c36600461440a565b61182b565b34801561066d57600080fd5b5061033461067c36600461478f565b611859565b61036261068f3660046148c8565b611878565b3480156106a057600080fd5b506103346106af366004614506565b61199e565b3480156106c057600080fd5b506102db6106cf366004614969565b6119cb565b3480156106e057600080fd5b506103136106ef36600461451f565b611aba565b34801561070057600080fd5b5061036261070f36600461498b565b611ae5565b34801561072057600080fd5b506102b0611b12565b34801561073557600080fd5b5061033461074436600461478f565b611b21565b34801561075557600080fd5b506004610418565b34801561076957600080fd5b50610334600081565b34801561077e57600080fd5b5061031361078d36600461451f565b611ba9565b34801561079e57600080fd5b506103136107ad36600461440a565b611bff565b3480156107be57600080fd5b506103136107cd36600461440a565b611c90565b3480156107de57600080fd5b506107f26107ed3660046149bf565b611ca8565b6040516102bd9190614a00565b34801561080b57600080fd5b5061033461081a36600461451f565b6000918252600b602090815260408084206001600160a01b03909316845291905290205490565b34801561084d57600080fd5b5061036261085c366004614a62565b611d9c565b34801561086d57600080fd5b5061036261087c366004614a94565b611dc9565b34801561088d57600080fd5b50610334611efb565b3480156108a257600080fd5b506103346108b1366004614506565b611f9e565b3480156108c257600080fd5b5068044726f7045524332360bc1b610334565b3480156108e157600080fd5b506108ea612027565b604080516001600160a01b03909316835261ffff9091166020830152016102bd565b34801561091857600080fd5b50610362610927366004614aee565b612044565b34801561093857600080fd5b5061036261094736600461451f565b6121a8565b34801561095857600080fd5b50600854600954610967919082565b604080519283526020830191909152016102bd565b34801561098857600080fd5b50610334610997366004614b5c565b6121c1565b3480156109a857600080fd5b506109c06002546003546001600160a01b0390911691565b6040516102bd929190614b8a565b3480156109da57600080fd5b506102b06121ec565b3480156109ef57600080fd5b50610a036109fe366004614ba3565b61227a565b60408051825163ffffffff1681526020928301516001600160e01b031692810192909252016102bd565b348015610a3957600080fd5b50600254600160b01b900460ff166040516102bd9190614bf0565b606060a58054610a6390614c18565b80601f0160208091040260200160405190810160405280929190818152602001828054610a8f90614c18565b8015610adc5780601f10610ab157610100808354040283529160200191610adc565b820191906000526020600020905b815481529060010190602001808311610abf57829003601f168201915b5050505050905090565b6004546001600160a01b031690565b600080610b0061230d565b9050610b0d818585612317565b60019150505b92915050565b610b2161243b565b610b465760405162461bcd60e51b8152600401610b3d90614c4d565b60405180910390fd5b610b508282612449565b5050565b6000868152600a60209081526040808320815161010081018352815481526001820154938101939093526002810154918301919091526003810154606083015260048101546080830152600581015460a083015260068101546001600160a01b031660c08301526007810180548493929160e0840191610bd390614c18565b80601f0160208091040260200160405190810160405280929190818152602001828054610bff90614c18565b8015610c4c5780601f10610c2157610100808354040283529160200191610c4c565b820191906000526020600020905b815481529060010190602001808311610c2f57829003601f168201915b50505091909252505050606081015160a082015160c08301516080840151939450919290919015610d2c57610d28610c848780614c75565b80806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250505060808088015191508d9060208b01359060408c013590610cd9908d0160608e0161478f565b6040516001600160601b0319606095861b811660208301526034820194909452605481019290925290921b166074820152608801604051602081830303815290604052805190602001206124f8565b5094505b8415610db1576020860135610d415782610d47565b85602001355b925060001986604001351415610d5d5781610d63565b85604001355b9150600019866040013514158015610d9457506000610d88608088016060890161478f565b6001600160a01b031614155b610d9e5780610dae565b610dae608087016060880161478f565b90505b60008b8152600b602090815260408083206001600160a01b03808f16855292529091205490898116908316141580610de95750828814155b15610e295760405162461bcd60e51b815260206004820152601060248201526f2150726963654f7243757272656e637960801b6044820152606401610b3d565b891580610e3e575083610e3c828c614cd4565b115b15610e745760405162461bcd60e51b8152600401610b3d906020808252600490820152632151747960e01b604082015260600190565b84602001518a8660400151610e899190614cd4565b1115610ec45760405162461bcd60e51b815260206004820152600a602482015269214d6178537570706c7960b01b6044820152606401610b3d565b8451421015610f065760405162461bcd60e51b815260206004820152600e60248201526d18d85b9d0818db185a5b481e595d60921b6044820152606401610b3d565b50505050509695505050505050565b600080610f2061230d565b9050610f2d8582856125c6565b610f38858585612640565b60019150505b9392505050565b600082815260066020526040902054610f5e903361280d565b60008281526005602090815260408083206001600160a01b038516845290915290205460ff1615610fd15760405162461bcd60e51b815260206004820152601d60248201527f43616e206f6e6c79206772616e7420746f206e6f6e20686f6c646572730000006044820152606401610b3d565b610b50828261288d565b6000610fe56128a1565b905090565b336001600160a01b0382161461103f5760405162461bcd60e51b815260206004820152601a60248201527921b0b71037b7363c903932b737bab731b2903337b91039b2b63360311b6044820152606401610b3d565b610b50828261291e565b60008061105461230d565b9050610b0d81858561106685896121c1565b6110709190614cd4565b612317565b60004382106110965760405162461bcd60e51b8152600401610b3d90614cec565b6001600160a01b038316600090815261016e60205260409020610f3e9083612975565b60006110c5813361280d565b6101a08290556040518281527ff2672935fc79f5237559e2e2999dbe743bf65430894ac2b37666890e7c69e1af906020015b60405180910390a15050565b61111461110e61230d565b82612a31565b50565b600054610100900460ff16158080156111375750600054600160ff909116105b806111585750611146306122fe565b158015611158575060005460ff166001145b6111bb5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610b3d565b6000805460ff1916600117905580156111de576000805461ff0019166101001790555b7f8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c61120886612a3b565b61121189612a73565b61121b8989612abd565b61122487612b10565b61122f60008b61288d565b611239818b61288d565b61124481600061288d565b61125784846001600160801b0316612449565b61126085612be6565b61019f5580156112aa576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050505050565b6001600160a01b03166000908152603e602052604090205460ff1690565b6001600160a01b03908116600090815261016d60205260409020541690565b6111146112fd61230d565b82612c30565b61130b61243b565b6113275760405162461bcd60e51b8152600401610b3d90614c4d565b61111481612be6565b61138460405180610100016040528060008152602001600081526020016000815260200160008152602001600080191681526020016000815260200160006001600160a01b03168152602001606081525090565b6000828152600a6020908152604091829020825161010081018452815481526001820154928101929092526002810154928201929092526003820154606082015260048201546080820152600582015460a082015260068201546001600160a01b031660c082015260078201805491929160e08401919061140490614c18565b80601f016020809104026020016040519081016040528092919081815260200182805461143090614c18565b801561147d5780601f106114525761010080835404028352916020019161147d565b820191906000526020600020905b81548152906001019060200180831161146057829003601f168201915b5050505050815250509050919050565b6001600160a01b038116600090815261016e6020526040812054610b1390612cb1565b6001600160a01b0316600090815260a2602052604090205490565b6114d361243b565b6114ef5760405162461bcd60e51b8152600401610b3d90614c4d565b600854600954818315611509576115068284614cd4565b90505b600985905560088190556000805b868110156116bc5780158061154f575087878281811061153957611539614d23565b905060200281019061154b9190614d39565b3582105b6115805760405162461bcd60e51b815260206004820152600260248201526114d560f21b6044820152606401610b3d565b6000600a8161158f8487614cd4565b81526020019081526020016000206002015490508888838181106115b5576115b5614d23565b90506020028101906115c79190614d39565b6020013581111561160f5760405162461bcd60e51b81526020600482015260126024820152711b585e081cdd5c1c1b1e4818db185a5b595960721b6044820152606401610b3d565b88888381811061162157611621614d23565b90506020028101906116339190614d39565b600a60006116418588614cd4565b8152602001908152602001600020818161165b9190614ea5565b50819050600a600061166d8588614cd4565b815260208101919091526040016000206002015588888381811061169357611693614d23565b90506020028101906116a59190614d39565b3592508190506116b481614f23565b915050611517565b50841561173c57835b82811015611736576000818152600a6020526040812081815560018101829055600281018290556003810182905560048101829055600581018290556006810180546001600160a01b03191690559061172160078301826142af565b5050808061172e90614f23565b9150506116c5565b506117cb565b858311156117cb57855b838110156117c957600a600061175c8386614cd4565b81526020810191909152604001600090812081815560018101829055600281018290556003810182905560048101829055600581018290556006810180546001600160a01b0319169055906117b460078301826142af565b505080806117c190614f23565b915050611746565b505b7fbf4016fceeaaa4ac5cf4be865b559ff85825ab4ca7aa7b661d16e2f544c030988787876040516117fe93929190614fac565b60405180910390a150505050505050565b6118218261181b61230d565b836125c6565b610b508282612a31565b61183361243b565b61184f5760405162461bcd60e51b8152600401610b3d90614c4d565b610b508282612d1a565b6001600160a01b038116600090815261013a6020526040812054610b13565b611886868686868686612d6c565b6000611890611efb565b90506118a78161189e612dd7565b88888888610b54565b506000818152600a6020526040812060020180548892906118c9908490614cd4565b90915550506000818152600b6020526040812087916118e6612dd7565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008282546119159190614cd4565b9091555061192890506000878787612de1565b60006119348888612f7a565b9050876001600160a01b0316611948612dd7565b6001600160a01b0316837ffa76a4010d9533e3e964f2930a65fb6042a12fa6ff5b08281837a10b0be7321e848b60405161198c929190918252602082015260400190565b60405180910390a45050505050505050565b60004382106119bf5760405162461bcd60e51b8152600401610b3d90614cec565b610b1361016f83612975565b60008281526007602052604081205481805b82811015611ab15760008681526007602090815260408083208484526001019091529020546001600160a01b031615611a5a5784821415611a485760008681526007602090815260408083209383526001909301905220546001600160a01b03169250610b13915050565b611a53600183614cd4565b9150611a9f565b611a65866000611aba565b8015611a8c5750600086815260076020908152604080832083805260020190915290205481145b15611a9f57611a9c600183614cd4565b91505b611aaa600182614cd4565b90506119dd565b50505092915050565b60009182526005602090815260408084206001600160a01b0393909316845291905290205460ff1690565b611aed61243b565b611b095760405162461bcd60e51b8152600401610b3d90614c4d565b61111481612b10565b606060a68054610a6390614c18565b6001600160a01b038116600090815261016e60205260408120548015611b96576001600160a01b038316600090815261016e60205260409020611b65600183615094565b81548110611b7557611b75614d23565b600091825260209091200154600160201b90046001600160e01b0316611b99565b60005b6001600160e01b03169392505050565b600082815260056020908152604080832083805290915281205460ff16611bf6575060008281526005602090815260408083206001600160a01b038516845290915290205460ff16610b13565b50600192915050565b600080611c0a61230d565b90506000611c1882866121c1565b905083811015611c785760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610b3d565b611c858286868403612317565b506001949350505050565b600080611c9b61230d565b9050610b0d818585612640565b6060816001600160401b03811115611cc257611cc261454f565b604051908082528060200260200182016040528015611cf557816020015b6060815260200190600190039081611ce05790505b50905060005b82811015611d9557611d6530858584818110611d1957611d19614d23565b9050602002810190611d2b9190614d59565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250612f9792505050565b828281518110611d7757611d77614d23565b60200260200101819052508080611d8d90614f23565b915050611cfb565b5092915050565b611da461243b565b611dc05760405162461bcd60e51b8152600401610b3d90614c4d565b61111481613089565b83421115611e195760405162461bcd60e51b815260206004820152601d60248201527f4552433230566f7465733a207369676e617475726520657870697265640000006044820152606401610b3d565b604080517fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf60208201526001600160a01b038816918101919091526060810186905260808101859052600090611e9390611e8b9060a001604051602081830303815290604052805190602001206130ed565b85858561313b565b9050611e9e81613165565b8614611ee85760405162461bcd60e51b81526020600482015260196024820152784552433230566f7465733a20696e76616c6964206e6f6e636560381b6044820152606401610b3d565b611ef28188612c30565b50505050505050565b6009546008546000918291611f109190614cd4565b90505b600854811115611f6757600a6000611f2c600184615094565b8152602001908152602001600020600001544210611f5557611f4f600182615094565b91505090565b80611f5f816150ab565b915050611f13565b5060405162461bcd60e51b815260206004820152600b60248201526a10a1a7a72224aa24a7a71760a91b6044820152606401610b3d565b600081815260076020526040812054815b818110156120025760008481526007602090815260408083208484526001019091529020546001600160a01b031615611ff057611fed600184614cd4565b92505b611ffb600182614cd4565b9050611faf565b5061200e836000611aba565b156120215761201e600183614cd4565b91505b50919050565b6002546001600160a01b03811691600160a01b90910461ffff1690565b834211156120945760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e650000006044820152606401610b3d565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886120c38c613165565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e001604051602081830303815290604052805190602001209050600061211e826130ed565b9050600061212e8287878761313b565b9050896001600160a01b0316816001600160a01b0316146121915760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e617475726500006044820152606401610b3d565b61219c8a8a8a612317565b50505050505050505050565b60008281526006602052604090205461103f903361280d565b6001600160a01b03918216600090815260a36020908152604080832093909416825291909152205490565b600180546121f990614c18565b80601f016020809104026020016040519081016040528092919081815260200182805461222590614c18565b80156122725780601f1061224757610100808354040283529160200191612272565b820191906000526020600020905b81548152906001019060200180831161225557829003601f168201915b505050505081565b60408051808201909152600080825260208201526001600160a01b038316600090815261016e60205260409020805463ffffffff84169081106122bf576122bf614d23565b60009182526020918290206040805180820190915291015463ffffffff81168252600160201b90046001600160e01b0316918101919091529392505050565b6001600160a01b03163b151590565b6000610fe561318c565b6001600160a01b0383166123795760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610b3d565b6001600160a01b0382166123da5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610b3d565b6001600160a01b03838116600081815260a3602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610fe5816106ef61230d565b61271081111561248d5760405162461bcd60e51b815260206004820152600f60248201526e45786365656473206d61782062707360881b6044820152606401610b3d565b600280546001600160b01b031916600160a01b61ffff8416026001600160a01b031916176001600160a01b0384169081179091556040518281527fe2497bd806ec41a6e0dd992c29a72efc0ef8fec9092d1978fd4a1e00b2f183049060200160405180910390a25050565b6000808281805b87518110156125ba576125136002836150c2565b9150600088828151811061252957612529614d23565b6020026020010151905080841161256b5760408051602081018690529081018290526060016040516020818303038152906040528051906020012093506125a7565b60408051602081018390529081018590526060016040516020818303038152906040528051906020012093506001836125a49190614cd4565b92505b50806125b281614f23565b9150506124ff565b50941495939450505050565b60006125d284846121c1565b9050600019811461263a578181101561262d5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610b3d565b61263a8484848403612317565b50505050565b6001600160a01b0383166126a45760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610b3d565b6001600160a01b0382166127065760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610b3d565b6127118383836131ae565b6001600160a01b038316600090815260a26020526040902054818110156127895760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610b3d565b6001600160a01b03808516600090815260a260205260408082208585039055918516815290812080548492906127c0908490614cd4565b92505081905550826001600160a01b0316846001600160a01b0316600080516020615237833981519152846040516127fa91815260200190565b60405180910390a361263a84848461324e565b60008281526005602090815260408083206001600160a01b038516845290915290205460ff16610b505761284b816001600160a01b03166014613259565b612856836020613259565b6040516020016128679291906150e1565b60408051601f198184030181529082905262461bcd60e51b8252610b3d916004016143d2565b61289782826133f4565b610b50828261344f565b6000610fe57f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6128d16101065490565b610107546040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b61292882826134bc565b60008281526007602090815260408083206001600160a01b03851680855260028201808552838620805487526001909301855292852080546001600160a01b031916905584529152555050565b8154600090815b818110156129d9576000612990828461351e565b9050848682815481106129a5576129a5614d23565b60009182526020909120015463ffffffff1611156129c5578092506129d3565b6129d0816001614cd4565b91505b5061297c565b8115612a1c57846129eb600184615094565b815481106129fb576129fb614d23565b600091825260209091200154600160201b90046001600160e01b0316612a1f565b60005b6001600160e01b031695945050505050565b610b508282613539565b600054610100900460ff16612a625760405162461bcd60e51b8152600401610b3d9061514e565b612a6a613552565b6111148161357b565b600054610100900460ff16612a9a5760405162461bcd60e51b8152600401610b3d9061514e565b61111481604051806040016040528060018152602001603160f81b81525061360a565b600054610100900460ff16612ae45760405162461bcd60e51b8152600401610b3d9061514e565b8151612af79060a59060208501906142e9565b508051612b0b9060a69060208401906142e9565b505050565b600060018054612b1f90614c18565b80601f0160208091040260200160405190810160405280929190818152602001828054612b4b90614c18565b8015612b985780601f10612b6d57610100808354040283529160200191612b98565b820191906000526020600020905b815481529060010190602001808311612b7b57829003601f168201915b50508551939450612bb4936001935060208701925090506142e9565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a1681836040516110f7929190615199565b600480546001600160a01b0319166001600160a01b0383169081179091556040517f299d17e95023f496e0ffc4909cff1a61f74bb5eb18de6f900f4155bfa1b3b33390600090a250565b6000612c3b836112d3565b90506000612c48846114b0565b6001600160a01b03858116600081815261016d602052604080822080546001600160a01b031916898616908117909155905194955093928616927f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f9190a461263a82848361364d565b600063ffffffff821115612d165760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201526532206269747360d01b6064820152608401610b3d565b5090565b6003819055600280546001600160a01b0319166001600160a01b0384161790556040517ff8086cee80709bd44c82f89dbca54115ebd05e840a88ab81df9cf5be9754eb63906110f79084908490614b8a565b6101a054801580612d9057508086612d8360a45490565b612d8d9190614cd4565b11155b611ef25760405162461bcd60e51b815260206004820152601860248201527732bc31b2b2b21036b0bc103a37ba30b61039bab838363c9760411b6044820152606401610b3d565b6000610fe561230d565b80612e22573415612e1d5760405162461bcd60e51b81526020600482015260066024820152652156616c756560d01b6044820152606401610b3d565b61263a565b600080612e2d612027565b909250905060006001600160a01b03871615612e495786612e51565b612e51610ae6565b90506000670de0b6b3a7640000612e6886896150c2565b612e7291906151be565b905060008111612eb75760405162461bcd60e51b815260206004820152601060248201526f7175616e7469747920746f6f206c6f7760801b6044820152606401610b3d565b6000612710612eca61ffff8616846150c2565b612ed491906151be565b905060006001600160a01b03881673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1415612f065750348214612f0a565b5034155b80612f4b5760405162461bcd60e51b8152602060048201526011602482015270496e76616c6964206d73672076616c756560781b6044820152606401610b3d565b612f5e88612f5761230d565b888561378c565b61219c88612f6a61230d565b86612f758688615094565b61378c565b6000612f8683836137d1565b50600092915050565b505050505050565b6060612fa2836122fe565b612ffd5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610b3d565b600080846001600160a01b03168460405161301891906151e0565b600060405180830381855af49150503d8060008114613053576040519150601f19603f3d011682016040523d82523d6000602084013e613058565b606091505b50915091506130808282604051806060016040528060278152602001615210602791396137db565b95945050505050565b6002805482919060ff60b01b1916600160b01b8360018111156130ae576130ae614bda565b02179055507fd246da9440709ce0dd3f4fd669abc85ada012ab9774b8ecdcc5059ba1486b9c1816040516130e29190614bf0565b60405180910390a150565b6000610b136130fa6128a1565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b600080600061314c87878787613814565b91509150613159816138f7565b5090505b949350505050565b6001600160a01b038116600090815261013a60205260409020805460018101825590612021565b6000613197336112b5565b156131a9575060131936013560601c90565b503390565b6131bc61019f546000611aba565b1580156131d157506001600160a01b03831615155b80156131e557506001600160a01b03821615155b15612b0b576131f761019f5484611aba565b8061320a575061320a61019f5483611aba565b612b0b5760405162461bcd60e51b81526020600482015260156024820152743a3930b739b332b939903932b9ba3934b1ba32b21760591b6044820152606401610b3d565b612b0b838383613aad565b606060006132688360026150c2565b613273906002614cd4565b6001600160401b0381111561328a5761328a61454f565b6040519080825280601f01601f1916602001820160405280156132b4576020820181803683370190505b509050600360fc1b816000815181106132cf576132cf614d23565b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106132fe576132fe614d23565b60200101906001600160f81b031916908160001a90535060006133228460026150c2565b61332d906001614cd4565b90505b60018111156133a5576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061336157613361614d23565b1a60f81b82828151811061337757613377614d23565b60200101906001600160f81b031916908160001a90535060049490941c9361339e816150ab565b9050613330565b508315610f3e5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610b3d565b60008281526005602090815260408083206001600160a01b0385168085529252808320805460ff1916600117905551339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b60008281526007602052604081208054916001919061346e8385614cd4565b9091555050600092835260076020908152604080852083865260018101835281862080546001600160a01b039096166001600160a01b03199096168617905593855260029093019052912055565b6134c6828261280d565b60008281526005602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b600061352d60028484186151be565b610f3e90848416614cd4565b6135438282613ac8565b61263a61016f613c1783613c23565b600054610100900460ff166135795760405162461bcd60e51b8152600401610b3d9061514e565b565b600054610100900460ff166135a25760405162461bcd60e51b8152600401610b3d9061514e565b60005b8151811015610b50576001603e60008484815181106135c6576135c6614d23565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790558061360281614f23565b9150506135a5565b600054610100900460ff166136315760405162461bcd60e51b8152600401610b3d9061514e565b8151602092830120815191909201206101069190915561010755565b816001600160a01b0316836001600160a01b03161415801561366f5750600081115b15612b0b576001600160a01b038316156136fe576001600160a01b038316600090815261016e6020526040812081906136ab90613c1785613c23565b91509150846001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a72483836040516136f3929190918252602082015260400190565b60405180910390a250505b6001600160a01b03821615612b0b576001600160a01b038216600090815261016e60205260408120819061373590613d9a85613c23565b91509150836001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724838360405161377d929190918252602082015260400190565b60405180910390a25050505050565b806137965761263a565b6001600160a01b03841673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14156137c557612e1d8282613da6565b61263a84848484613e48565b610b508282613ea1565b606083156137ea575081610f3e565b8251156137fa5782518084602001fd5b8160405162461bcd60e51b8152600401610b3d91906143d2565b6000806fa2a8918ca85bafe22016d0b997e4df60600160ff1b0383111561384157506000905060036138ee565b8460ff16601b1415801561385957508460ff16601c14155b1561386a57506000905060046138ee565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156138be573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166138e7576000600192509250506138ee565b9150600090505b94509492505050565b600081600481111561390b5761390b614bda565b14156139145750565b600181600481111561392857613928614bda565b14156139715760405162461bcd60e51b815260206004820152601860248201527745434453413a20696e76616c6964207369676e617475726560401b6044820152606401610b3d565b600281600481111561398557613985614bda565b14156139d35760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610b3d565b60038160048111156139e7576139e7614bda565b1415613a405760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610b3d565b6004816004811115613a5457613a54614bda565b14156111145760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610b3d565b612b0b613ab9846112d3565b613ac2846112d3565b8361364d565b6001600160a01b038216613b285760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610b3d565b613b34826000836131ae565b6001600160a01b038216600090815260a2602052604090205481811015613ba85760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610b3d565b6001600160a01b038316600090815260a260205260408120838303905560a48054849290613bd7908490615094565b90915550506040518281526000906001600160a01b038516906000805160206152378339815191529060200160405180910390a3612b0b8360008461324e565b6000610f3e8284615094565b825460009081908015613c6d5785613c3c600183615094565b81548110613c4c57613c4c614d23565b600091825260209091200154600160201b90046001600160e01b0316613c70565b60005b6001600160e01b03169250613c8983858763ffffffff16565b9150600081118015613cc757504386613ca3600184615094565b81548110613cb357613cb3614d23565b60009182526020909120015463ffffffff16145b15613d2757613cd582613f2c565b86613ce1600184615094565b81548110613cf157613cf1614d23565b9060005260206000200160000160046101000a8154816001600160e01b0302191690836001600160e01b03160217905550613d91565b856040518060400160405280613d3c43612cb1565b63ffffffff168152602001613d5085613f2c565b6001600160e01b039081169091528254600181018455600093845260209384902083519490930151909116600160201b0263ffffffff909316929092179101555b50935093915050565b6000610f3e8284614cd4565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114613df3576040519150601f19603f3d011682016040523d82523d6000602084013e613df8565b606091505b5050905080612b0b5760405162461bcd60e51b815260206004820152601c60248201527b1b985d1a5d99481d1bdad95b881d1c985b9cd9995c8819985a5b195960221b6044820152606401610b3d565b816001600160a01b0316836001600160a01b03161415613e675761263a565b6001600160a01b038316301415613e8c57612e1d6001600160a01b0385168383613f95565b61263a6001600160a01b038516848484613feb565b613eab8282614023565b60a4546001600160e01b031015613f1d5760405162461bcd60e51b815260206004820152603060248201527f4552433230566f7465733a20746f74616c20737570706c79207269736b73206f60448201526f766572666c6f77696e6720766f74657360801b6064820152608401610b3d565b61263a61016f613d9a83613c23565b60006001600160e01b03821115612d165760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20326044820152663234206269747360c81b6064820152608401610b3d565b612b0b8363a9059cbb60e01b8484604051602401613fb4929190614b8a565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152614104565b6040516001600160a01b038085166024830152831660448201526064810182905261263a9085906323b872dd60e01b90608401613fb4565b6001600160a01b0382166140795760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610b3d565b614085600083836131ae565b8060a460008282546140979190614cd4565b90915550506001600160a01b038216600090815260a26020526040812080548392906140c4908490614cd4565b90915550506040518181526001600160a01b038316906000906000805160206152378339815191529060200160405180910390a3610b506000838361324e565b6000614159826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166141d69092919063ffffffff16565b805190915015612b0b578080602001905181019061417791906151f2565b612b0b5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610b3d565b606061315d8484600085856141ea856122fe565b6142365760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610b3d565b600080866001600160a01b0316858760405161425291906151e0565b60006040518083038185875af1925050503d806000811461428f576040519150601f19603f3d011682016040523d82523d6000602084013e614294565b606091505b50915091506142a48282866137db565b979650505050505050565b5080546142bb90614c18565b6000825580601f106142cb575050565b601f0160209004906000526020600020908101906111149190614365565b8280546142f590614c18565b90600052602060002090601f016020900481019282614317576000855561435d565b82601f1061433057805160ff191683800117855561435d565b8280016001018555821561435d579182015b8281111561435d578251825591602001919060010190614342565b50612d169291505b5b80821115612d165760008155600101614366565b60005b8381101561439557818101518382015260200161437d565b8381111561263a5750506000910152565b600081518084526143be81602086016020860161437a565b601f01601f19169290920160200192915050565b602081526000610f3e60208301846143a6565b6001600160a01b038116811461111457600080fd5b8035614405816143e5565b919050565b6000806040838503121561441d57600080fd5b8235614428816143e5565b946020939093013593505050565b60006080828403121561202157600080fd5b60008060008060008060c0878903121561446157600080fd5b863595506020870135614473816143e5565b945060408701359350606087013561448a816143e5565b92506080870135915060a08701356001600160401b038111156144ac57600080fd5b6144b889828a01614436565b9150509295509295509295565b6000806000606084860312156144da57600080fd5b83356144e5816143e5565b925060208401356144f5816143e5565b929592945050506040919091013590565b60006020828403121561451857600080fd5b5035919050565b6000806040838503121561453257600080fd5b823591506020830135614544816143e5565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171561458d5761458d61454f565b604052919050565b60006001600160401b038311156145ae576145ae61454f565b6145c1601f8401601f1916602001614565565b90508281528383830111156145d557600080fd5b828260208301376000602084830101529392505050565b600082601f8301126145fd57600080fd5b610f3e83833560208501614595565b600082601f83011261461d57600080fd5b813560206001600160401b038211156146385761463861454f565b8160051b614647828201614565565b928352848101820192828101908785111561466157600080fd5b83870192505b848310156142a457823561467a816143e5565b82529183019190830190614667565b80356001600160801b038116811461440557600080fd5b600080600080600080600080610100898b0312156146bd57600080fd5b6146c6896143fa565b975060208901356001600160401b03808211156146e257600080fd5b6146ee8c838d016145ec565b985060408b013591508082111561470457600080fd5b6147108c838d016145ec565b975060608b013591508082111561472657600080fd5b6147328c838d016145ec565b965060808b013591508082111561474857600080fd5b506147558b828c0161460c565b94505061476460a08a016143fa565b925061477260c08a016143fa565b915061478060e08a01614689565b90509295985092959890939650565b6000602082840312156147a157600080fd5b8135610f3e816143e5565b6020815281516020820152602082015160408201526040820151606082015260608201516080820152608082015160a082015260a082015160c082015260018060a01b0360c08301511660e0820152600060e083015161010080818501525061315d6101208401826143a6565b60008083601f84011261482b57600080fd5b5081356001600160401b0381111561484257600080fd5b6020830191508360208260051b850101111561485d57600080fd5b9250929050565b801515811461111457600080fd5b60008060006040848603121561488757600080fd5b83356001600160401b0381111561489d57600080fd5b6148a986828701614819565b90945092505060208401356148bd81614864565b809150509250925092565b60008060008060008060c087890312156148e157600080fd5b86356148ec816143e5565b9550602087013594506040870135614903816143e5565b93506060870135925060808701356001600160401b038082111561492657600080fd5b6149328a838b01614436565b935060a089013591508082111561494857600080fd5b508701601f8101891361495a57600080fd5b6144b889823560208401614595565b6000806040838503121561497c57600080fd5b50508035926020909101359150565b60006020828403121561499d57600080fd5b81356001600160401b038111156149b357600080fd5b61315d848285016145ec565b600080602083850312156149d257600080fd5b82356001600160401b038111156149e857600080fd5b6149f485828601614819565b90969095509350505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015614a5557603f19888603018452614a438583516143a6565b94509285019290850190600101614a27565b5092979650505050505050565b600060208284031215614a7457600080fd5b813560028110610f3e57600080fd5b803560ff8116811461440557600080fd5b60008060008060008060c08789031215614aad57600080fd5b8635614ab8816143e5565b95506020870135945060408701359350614ad460608801614a83565b92506080870135915060a087013590509295509295509295565b600080600080600080600060e0888a031215614b0957600080fd5b8735614b14816143e5565b96506020880135614b24816143e5565b95506040880135945060608801359350614b4060808901614a83565b925060a0880135915060c0880135905092959891949750929550565b60008060408385031215614b6f57600080fd5b8235614b7a816143e5565b91506020830135614544816143e5565b6001600160a01b03929092168252602082015260400190565b60008060408385031215614bb657600080fd5b8235614bc1816143e5565b9150602083013563ffffffff8116811461454457600080fd5b634e487b7160e01b600052602160045260246000fd5b6020810160028310614c1257634e487b7160e01b600052602160045260246000fd5b91905290565b600181811c90821680614c2c57607f821691505b6020821081141561202157634e487b7160e01b600052602260045260246000fd5b6020808252600e908201526d139bdd08185d5d1a1bdc9a5e995960921b604082015260600190565b6000808335601e19843603018112614c8c57600080fd5b8301803591506001600160401b03821115614ca657600080fd5b6020019150600581901b360382131561485d57600080fd5b634e487b7160e01b600052601160045260246000fd5b60008219821115614ce757614ce7614cbe565b500190565b6020808252601f908201527f4552433230566f7465733a20626c6f636b206e6f7420796574206d696e656400604082015260600190565b634e487b7160e01b600052603260045260246000fd5b6000823560fe19833603018112614d4f57600080fd5b9190910192915050565b6000808335601e19843603018112614d7057600080fd5b8301803591506001600160401b03821115614d8a57600080fd5b60200191503681900382131561485d57600080fd5b601f821115612b0b57600081815260208120601f850160051c81016020861015614dc65750805b601f850160051c820191505b81811015612f8f57828155600101614dd2565b6001600160401b03831115614dfc57614dfc61454f565b614e1083614e0a8354614c18565b83614d9f565b6000601f841160018114614e445760008515614e2c5750838201355b600019600387901b1c1916600186901b178355614e9e565b600083815260209020601f19861690835b82811015614e755786850135825560209485019460019092019101614e55565b5086821015614e925760001960f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b813581556020820135600182015560408201356002820155606082013560038201556080820135600482015560a082013560058201556006810160c0830135614eed816143e5565b81546001600160a01b0319166001600160a01b0391909116179055614f1560e0830183614d59565b61263a818360078601614de5565b6000600019821415614f3757614f37614cbe565b5060010190565b6000808335601e19843603018112614f5557600080fd5b83016020810192503590506001600160401b03811115614f7457600080fd5b80360383131561485d57600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60408082528181018490526000906060808401600587901b850182018885805b8a81101561507e57888403605f190185528235368d900360fe19018112614ff1578283fd5b8c018035855260208082013581870152888201358987015287820135888701526080808301359087015260a080830135908701526101009060c080840135615038816143e5565b6001600160a01b03169088015260e061505384820185614f3e565b945083828a0152615067848a018683614f83565b998301999850505094909401935050600101614fcc565b5050508615156020870152935061315d92505050565b6000828210156150a6576150a6614cbe565b500390565b6000816150ba576150ba614cbe565b506000190190565b60008160001904831182151516156150dc576150dc614cbe565b500290565b7402832b936b4b9b9b4b7b7399d1030b1b1b7bab73a1605d1b81526000835161511181601585016020880161437a565b7001034b99036b4b9b9b4b733903937b6329607d1b601591840191820152835161514281602684016020880161437a565b01602601949350505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6040815260006151ac60408301856143a6565b828103602084015261308081856143a6565b6000826151db57634e487b7160e01b600052601260045260246000fd5b500490565b60008251614d4f81846020870161437a565b60006020828403121561520457600080fd5b8151610f3e8161486456fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220c4832ce69c73a478b43998d3beaa1e6802bc8cfa50a24e1db5b66e098071104164736f6c634300080c0033",
    "sourceMap": "1553:7953:326:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2493:98:447;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;676:104:72;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;929:32:644;;;911:51;;899:2;884:18;676:104:72;765:203:644;4770:197:447;;;;;;;;;;-1:-1:-1;4770:197:447;;;;;:::i;:::-;;:::i;:::-;;;1829:14:644;;1822:22;1804:41;;1792:2;1777:18;4770:197:447;1664:187:644;3581:106:447;;;;;;;;;;-1:-1:-1;3668:12:447;;3581:106;;;2002:25:644;;;1990:2;1975:18;3581:106:447;1856:177:644;2043:269:71;;;;;;;;;;-1:-1:-1;2043:269:71;;;;;:::i;:::-;;:::i;:::-;;4806:2222:56;;;;;;;;;;-1:-1:-1;4806:2222:56;;;;;:::i;:::-;;:::i;5529:286:447:-;;;;;;;;;;-1:-1:-1;5529:286:447;;;;;:::i;:::-;;:::i;2740:120:69:-;;;;;;;;;;-1:-1:-1;2740:120:69;;;;;:::i;:::-;2808:7;2834:19;;;:13;:19;;;;;;;2740:120;2312:29:326;;;;;;;;;;;;;;;;3255:271:69;;;;;;;;;;-1:-1:-1;3255:271:69;;;;;:::i;:::-;;:::i;3430:91:447:-;;;;;;;;;;-1:-1:-1;3512:2:447;3430:91;;;4385:4:644;4373:17;;;4355:36;;4343:2;4328:18;3430:91:447;4213:184:644;3282:113:452;;;;;;;;;;;;;:::i;4466:217:69:-;;;;;;;;;;-1:-1:-1;4466:217:69;;;;;:::i;:::-;;:::i;6210:234:447:-;;;;;;;;;;-1:-1:-1;6210:234:447;;;;;:::i;:::-;;:::i;3133:265:450:-;;;;;;;;;;-1:-1:-1;3133:265:450;;;;;:::i;:::-;;:::i;4380:192:326:-;;;;;;;;;;-1:-1:-1;4380:192:326;;;;;:::i;:::-;;:::i;848:89:449:-;;;;;;;;;;-1:-1:-1;848:89:449;;;;;:::i;:::-;;:::i;2761:958:326:-;;;;;;;;;;-1:-1:-1;2761:958:326;;;;;:::i;:::-;;:::i;918:134:209:-;;;;;;;;;;-1:-1:-1;918:134:209;;;;;:::i;:::-;;:::i;2526:126:450:-;;;;;;;;;;-1:-1:-1;2526:126:450;;;;;:::i;:::-;;:::i;5567:112::-;;;;;;;;;;-1:-1:-1;5567:112:450;;;;;:::i;:::-;;:::i;1189:228:72:-;;;;;;;;;;-1:-1:-1;1189:228:72;;;;;:::i;:::-;;:::i;7548:177:56:-;;;;;;;;;;-1:-1:-1;7548:177:56;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2278:160:450:-;;;;;;;;;;-1:-1:-1;2278:160:450;;;;;:::i;:::-;;:::i;:::-;;;9140:10:644;9128:23;;;9110:42;;9098:2;9083:18;2278:160:450;8966:192:644;3745:125:447;;;;;;;;;;-1:-1:-1;3745:125:447;;;;;:::i;:::-;;:::i;1949:2760:56:-;;;;;;;;;;-1:-1:-1;1949:2760:56;;;;;:::i;:::-;;:::i;1243:161:449:-;;;;;;;;;;-1:-1:-1;1243:161:449;;;;;:::i;:::-;;:::i;2821:255:71:-;;;;;;;;;;-1:-1:-1;2821:255:71;;;;;:::i;:::-;;:::i;3032:126:452:-;;;;;;;;;;-1:-1:-1;3032:126:452;;;;;:::i;:::-;;:::i;699:1187:56:-;;;;;;:::i;:::-;;:::i;3677:256:450:-;;;;;;;;;;-1:-1:-1;3677:256:450;;;;;:::i;:::-;;:::i;1643:633:70:-;;;;;;;;;;-1:-1:-1;1643:633:70;;;;;:::i;:::-;;:::i;1324:131:69:-;;;;;;;;;;-1:-1:-1;1324:131:69;;;;;:::i;:::-;;:::i;1003:188:54:-;;;;;;;;;;-1:-1:-1;1003:188:54;;;;;:::i;:::-;;:::i;2704:102:447:-;;;;;;;;;;;;;:::i;2731:209:450:-;;;;;;;;;;-1:-1:-1;2731:209:450;;;;;:::i;:::-;;:::i;4016:89:326:-;;;;;;;;;;-1:-1:-1;4096:1:326;4016:89;;742:49:69;;;;;;;;;;-1:-1:-1;742:49:69;787:4;742:49;;2206:211;;;;;;;;;;-1:-1:-1;2206:211:69;;;;;:::i;:::-;;:::i;6931:427:447:-;;;;;;;;;;-1:-1:-1;6931:427:447;;;;;:::i;:::-;;:::i;4066:189::-;;;;;;;;;;-1:-1:-1;4066:189:447;;;;;:::i;:::-;;:::i;632:301:466:-;;;;;;;;;;-1:-1:-1;632:301:466;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;7807:255:56:-;;;;;;;;;;-1:-1:-1;7807:255:56;;;;;:::i;:::-;7926:29;7995:50;;;:36;:50;;;;;;;;-1:-1:-1;;;;;7995:60:56;;;;;;;;;;;;7807:255;3455:200:71;;;;;;;;;;-1:-1:-1;3455:200:71;;;;;:::i;:::-;;:::i;5756:585:450:-;;;;;;;;;;-1:-1:-1;5756:585:450;;;;;:::i;:::-;;:::i;7116:367:56:-;;;;;;;;;;;;;:::i;2683:398:70:-;;;;;;;;;;-1:-1:-1;2683:398:70;;;;;:::i;:::-;;:::i;3910:100:326:-;;;;;;;;;;-1:-1:-1;;;;3910:100:326;;1058:147:71;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;14862:32:644;;;14844:51;;14943:6;14931:19;;;14926:2;14911:18;;14904:47;14817:18;1058:147:71;14672:285:644;2334:637:452;;;;;;;;;;-1:-1:-1;2334:637:452;;;;;:::i;:::-;;:::i;3897:171:69:-;;;;;;;;;;-1:-1:-1;3897:171:69;;;;;:::i;:::-;;:::i;430:40:56:-;;;;;;;;;;-1:-1:-1;430:40:56;;;;;;;;;;;;;15875:25:644;;;15931:2;15916:18;;15909:34;;;;15848:18;430:40:56;15701:248:644;4313:149:447;;;;;;;;;;-1:-1:-1;4313:149:447;;;;;:::i;:::-;;:::i;1268:136:71:-;;;;;;;;;;;;1359:20;;1381:15;;-1:-1:-1;;;;;1359:20:71;;;;1268:136;;;;;;;;;:::i;565:34:54:-;;;;;;;;;;;;;:::i;2055:148:450:-;;;;;;;;;;-1:-1:-1;2055:148:450;;;;;:::i;:::-;;:::i;:::-;;;;17278:13:644;;17293:10;17274:30;17256:49;;17365:4;17353:17;;;17347:24;-1:-1:-1;;;;;17343:50:644;17321:20;;;17314:80;;;;17229:18;2055:148:450;17050:350:644;1467:107:71;;;;;;;;;;-1:-1:-1;1552:15:71;;-1:-1:-1;;;1552:15:71;;;;1467:107;;;;;;:::i;2493:98:447:-;2547:13;2579:5;2572:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2493:98;:::o;676:104:72:-;764:9;;-1:-1:-1;;;;;764:9:72;;676:104::o;4770:197:447:-;4853:4;4869:13;4885:12;:10;:12::i;:::-;4869:28;;4907:32;4916:5;4923:7;4932:6;4907:8;:32::i;:::-;4956:4;4949:11;;;4770:197;;;;;:::o;2043:269:71:-;2160:24;:22;:24::i;:::-;2155:80;;2200:24;;-1:-1:-1;;;2200:24:71;;;;;;;:::i;:::-;;;;;;;;2155:80;2244:61;2266:21;2289:15;2244:21;:61::i;:::-;2043:269;;:::o;4806:2222:56:-;5045:15;5114:39;;;:25;:39;;;;;;;;5072:81;;;;;;;;;;;;;;;;;;;;;;5114:25;5072:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5072:81:56;;;;;;;;;;5045:15;;5072:81;5114:39;5072:81;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5072:81:56;;;;-1:-1:-1;;;5184:40:56;;;;5255:31;;;;5320:26;;;;5361:28;;;;5072:81;;-1:-1:-1;5184:40:56;;5255:31;;5320:26;5361:42;5357:515;;5436:425;5472:21;:15;;:21;:::i;:::-;5436:425;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5511:28:56;;;;;;-1:-1:-1;5630:8:56;;5664:38;;;;;5728:29;;;;;5783:24;;;;;;;;:::i;:::-;5588:241;;-1:-1:-1;;;;;;19404:2:644;19440:15;;;19436:24;;5588:241:56;;;19424:37:644;19477:12;;;19470:28;;;;19514:12;;;19507:28;;;;19569:15;;;19565:24;19551:12;;;19544:46;19606:13;;5588:241:56;;;;;;;;;;;;5557:290;;;;;;5436:18;:425::i;:::-;-1:-1:-1;5419:442:56;-1:-1:-1;5357:515:56;5886:10;5882:534;;;5925:38;;;;:129;;6044:10;5925:129;;;5987:15;:38;;;5925:129;5912:142;;-1:-1:-1;;6081:15:56;:29;;;:50;;:127;;6198:10;6081:127;;;6150:15;:29;;;6081:127;6068:140;;-1:-1:-1;;6238:15:56;:29;;;:50;;:92;;;;-1:-1:-1;6328:1:56;6292:24;;;;;;;;:::i;:::-;-1:-1:-1;;;;;6292:38:56;;;6238:92;:167;;6392:13;6238:167;;;6349:24;;;;;;;;:::i;:::-;6222:183;;5882:534;6426:29;6458:50;;;:36;:50;;;;;;;;-1:-1:-1;;;;;6458:60:56;;;;;;;;;;;;6533:26;;;;;;;;;:58;;;6581:10;6563:14;:28;;6533:58;6529:115;;;6607:26;;-1:-1:-1;;;6607:26:56;;19832:2:644;6607:26:56;;;19814:21:644;19871:2;19851:18;;;19844:30;-1:-1:-1;;;19890:18:644;;;19883:46;19946:18;;6607:26:56;19630:340:644;6529:115:56;6658:14;;;:66;;-1:-1:-1;6713:10:56;6677:33;6689:21;6677:9;:33;:::i;:::-;:46;6658:66;6654:111;;;6740:14;;-1:-1:-1;;;6740:14:56;;;;;;20442:2:644;20424:21;;;20481:1;20461:18;;;20454:29;-1:-1:-1;;;20514:2:644;20499:18;;20492:34;20558:2;20543:18;;20240:327;6654:111:56;6824:17;:36;;;6812:9;6778:17;:31;;;:43;;;;:::i;:::-;:82;6774:133;;;6876:20;;-1:-1:-1;;;6876:20:56;;20774:2:644;6876:20:56;;;20756:21:644;20813:2;20793:18;;;20786:30;-1:-1:-1;;;20832:18:644;;;20825:40;20882:18;;6876:20:56;20572:334:644;6774:133:56;6921:32;;6956:15;-1:-1:-1;6917:105:56;;;6987:24;;-1:-1:-1;;;6987:24:56;;21113:2:644;6987:24:56;;;21095:21:644;21152:2;21132:18;;;21125:30;-1:-1:-1;;;21171:18:644;;;21164:44;21225:18;;6987:24:56;20911:338:644;6917:105:56;5062:1966;;;;;4806:2222;;;;;;;;:::o;5529:286:447:-;5656:4;5672:15;5690:12;:10;:12::i;:::-;5672:30;;5712:38;5728:4;5734:7;5743:6;5712:15;:38::i;:::-;5760:27;5770:4;5776:2;5780:6;5760:9;:27::i;:::-;5804:4;5797:11;;;5529:286;;;;;;:::o;3255:271:69:-;3350:19;;;;:13;:19;;;;;;3339:43;;3371:10;3339;:43::i;:::-;3396:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;3396:23:69;;;;;;;;;;;;3392:93;;;3435:39;;-1:-1:-1;;;3435:39:69;;21456:2:644;3435:39:69;;;21438:21:644;21495:2;21475:18;;;21468:30;21534:31;21514:18;;;21507:59;21583:18;;3435:39:69;21254:353:644;3392:93:69;3494:25;3505:4;3511:7;3494:10;:25::i;3282:113:452:-;3342:7;3368:20;:18;:20::i;:::-;3361:27;;3282:113;:::o;4466:217:69:-;4557:10;-1:-1:-1;;;;;4557:21:69;;;4553:88;;4594:36;;-1:-1:-1;;;4594:36:69;;21814:2:644;4594:36:69;;;21796:21:644;21853:2;21833:18;;;21826:30;-1:-1:-1;;;21872:18:644;;;21865:56;21938:18;;4594:36:69;21612:350:644;4553:88:69;4650:26;4662:4;4668:7;4650:11;:26::i;6210:234:447:-;6298:4;6314:13;6330:12;:10;:12::i;:::-;6314:28;;6352:64;6361:5;6368:7;6405:10;6377:25;6387:5;6394:7;6377:9;:25::i;:::-;:38;;;;:::i;:::-;6352:8;:64::i;3133:265:450:-;3231:7;3272:12;3258:11;:26;3250:70;;;;-1:-1:-1;;;3250:70:450;;;;;;;:::i;:::-;-1:-1:-1;;;;;3356:21:450;;;;;;:12;:21;;;;;3337:54;;3379:11;3337:18;:54::i;4380:192:326:-;787:4:69;931:28;787:4;948:10;931;:28::i;:::-;4480:14:326::1;:32:::0;;;4527:38:::1;::::0;2002:25:644;;;4527:38:326::1;::::0;1990:2:644;1975:18;4527:38:326::1;;;;;;;;4380:192:::0;;:::o;848:89:449:-;903:27;909:12;:10;:12::i;:::-;923:6;903:5;:27::i;:::-;848:89;:::o;2761:958:326:-;3111:19:436;3134:13;;;;;;3133:14;;3179:34;;;;-1:-1:-1;3197:12:436;;3212:1;3197:12;;;;:16;3179:34;3178:108;;;;3220:44;3258:4;3220:29;:44::i;:::-;3219:45;:66;;;;-1:-1:-1;3268:12:436;;;;;:17;3219:66;3157:201;;;;-1:-1:-1;;;3157:201:436;;22529:2:644;3157:201:436;;;22511:21:644;22568:2;22548:18;;;22541:30;22607:34;22587:18;;;22580:62;-1:-1:-1;;;22658:18:644;;;22651:44;22712:19;;3157:201:436;22327:410:644;3157:201:436;3368:12;:16;;-1:-1:-1;;3368:16:436;3383:1;3368:16;;;3394:65;;;;3428:13;:20;;-1:-1:-1;;3428:20:436;;;;;3394:65;3118:26:326::1;3230:41;3252:18:::0;3230:21:::1;:41::i;:::-;3281:25;3300:5;3281:18;:25::i;:::-;3316:38;3339:5;3346:7;3316:22;:38::i;:::-;3365:31;3383:12;3365:17;:31::i;:::-;3407:45;787:4:69;3438:13:326::0;3407:10:::1;:45::i;:::-;3462:40;3473:13;3488;3462:10;:40::i;:::-;3512:37;3523:13;3546:1;3512:10;:37::i;:::-;3560:61;3582:21;3605:15;-1:-1:-1::0;;;;;3560:61:326::1;:21;:61::i;:::-;3631:42;3658:14;3631:26;:42::i;:::-;3684:12;:28:::0;3479:99:436;;;;3529:5;3513:21;;-1:-1:-1;;3513:21:436;;;3553:14;;-1:-1:-1;4355:36:644;;3553:14:436;;4343:2:644;4328:18;3553:14:436;;;;;;;3479:99;3101:483;2761:958:326;;;;;;;;:::o;918:134:209:-;-1:-1:-1;;;;;1017:28:209;994:4;1017:28;;;:17;:28;;;;;;;;;918:134::o;2526:126:450:-;-1:-1:-1;;;;;2626:19:450;;;2600:7;2626:19;;;:10;:19;;;;;;;;2526:126::o;5567:112::-;5638:34;5648:12;:10;:12::i;:::-;5662:9;5638;:34::i;1189:228:72:-;1279:29;:27;:29::i;:::-;1274:85;;1324:24;;-1:-1:-1;;;1324:24:72;;;;;;;:::i;1274:85::-;1368:42;1395:14;1368:26;:42::i;7548:177:56:-;7624:31;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7624:31:56;7679:39;;;;:25;:39;;;;;;;;;7667:51;;;;;;;;;;;;;;;;;;;;;;7679:25;7667:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7667:51:56;;;;;;;;;;;;7679:39;7667:51;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7548:177;;;:::o;2278:160:450:-;-1:-1:-1;;;;;2402:21:450;;2348:6;2402:21;;;:12;:21;;;;;:28;2373:58;;:28;:58::i;3745:125:447:-;-1:-1:-1;;;;;3845:18:447;3819:7;3845:18;;;:9;:18;;;;;;;3745:125::o;1949:2760:56:-;2114:24;:22;:24::i;:::-;2109:80;;2154:24;;-1:-1:-1;;;2154:24:56;;;;;;;:::i;2109:80::-;2228:14;:29;2296:20;;2228:29;2733:108;;;;2791:39;2812:18;2791;:39;:::i;:::-;2775:55;;2733:108;2851:20;:41;;;:14;2902:45;;;:29;;3003:643;3023:22;;;3003:643;;;3074:6;;;:69;;;3114:11;;3126:1;3114:14;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:29;3084:59;;3074:69;3066:84;;;;-1:-1:-1;;;3066:84:56;;23613:2:644;3066:84:56;;;23595:21:644;23652:1;23632:18;;;23625:29;-1:-1:-1;;;23670:18:644;;;23663:32;23712:18;;3066:84:56;23411:325:644;3066:84:56;3165:28;3196:25;3165:28;3222:17;3238:1;3222:13;:17;:::i;:::-;3196:44;;;;;;;;;;;:58;;;3165:89;;3295:11;;3307:1;3295:14;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:33;;;3272:20;:56;3268:123;;;3348:28;;-1:-1:-1;;;3348:28:56;;23943:2:644;3348:28:56;;;23925:21:644;23982:2;23962:18;;;23955:30;-1:-1:-1;;;24001:18:644;;;23994:48;24059:18;;3348:28:56;23741:342:644;3268:123:56;3452:11;;3464:1;3452:14;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;3405:25;:44;3431:17;3447:1;3431:13;:17;:::i;:::-;3405:44;;;;;;;;;;;:61;;;;;;:::i;:::-;-1:-1:-1;3541:20:56;;-1:-1:-1;3480:25:56;:44;3506:17;3522:1;3506:13;:17;:::i;:::-;3480:44;;;;;;;;;;;-1:-1:-1;3480:44:56;:58;;:81;3606:11;;3618:1;3606:14;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:29;;-1:-1:-1;3047:3:56;;-1:-1:-1;3047:3:56;;;:::i;:::-;;;;3003:643;;;;4186:22;4182:446;;;4241:18;4224:129;4265:13;4261:1;:17;4224:129;;;4310:28;;;;:25;:28;;;;;4303:35;;;;;;;;;4310:25;4303:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4303:35:56;;;4310:28;4303:35;;;;4310:28;4303:35;:::i;:::-;;;4280:3;;;;;:::i;:::-;;;;4224:129;;;;4182:446;;;4387:39;;;4383:235;;;4463:11;4446:158;4487:18;4483:1;:22;4446:158;;;4541:25;:44;4567:17;4583:1;4567:13;:17;:::i;:::-;4541:44;;;;;;;;;;;-1:-1:-1;4541:44:56;;;4534:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4534:51:56;;;4541:44;4534:51;;;;-1:-1:-1;4534:51:56;:::i;:::-;;;4507:3;;;;;:::i;:::-;;;;4446:158;;;;4383:235;4643:59;4666:11;;4679:22;4643:59;;;;;;;;:::i;:::-;;;;;;;;2099:2610;;;;1949:2760;;;:::o;1243:161:449:-;1319:46;1335:7;1344:12;:10;:12::i;:::-;1358:6;1319:15;:46::i;:::-;1375:22;1381:7;1390:6;1375:5;:22::i;2821:255:71:-;2926:24;:22;:24::i;:::-;2921:80;;2966:24;;-1:-1:-1;;;2966:24:71;;;;;;;:::i;2921:80::-;3011:58;3037:21;3060:8;3011:25;:58::i;3032:126:452:-;-1:-1:-1;;;;;3127:14:452;;3101:7;3127:14;;;:7;:14;;;;;929::465;3127:24:452;838:112:465;699:1187:56;952:85;965:9;976;987;998:14;1014:15;1031:5;952:12;:85::i;:::-;1048:25;1076:27;:25;:27::i;:::-;1048:55;;1114:103;1126:17;1145:16;:14;:16::i;:::-;1163:9;1174;1185:14;1201:15;1114:11;:103::i;:::-;-1:-1:-1;1262:44:56;;;;:25;:44;;;;;:25;:58;:71;;1324:9;;1262:44;:71;;1324:9;;1262:71;:::i;:::-;;;;-1:-1:-1;;1343:55:56;;;;:36;:55;;;;;1420:9;;1399:16;:14;:16::i;:::-;-1:-1:-1;;;;;1343:73:56;-1:-1:-1;;;;;1343:73:56;;;;;;;;;;;;;:86;;;;;;;:::i;:::-;;;;-1:-1:-1;1486:70:56;;-1:-1:-1;1515:1:56;1519:9;1530;1541:14;1486:20;:70::i;:::-;1615:20;1638:44;1661:9;1672;1638:22;:44::i;:::-;1615:67;;1749:9;-1:-1:-1;;;;;1698:86:56;1731:16;:14;:16::i;:::-;-1:-1:-1;;;;;1698:86:56;1712:17;1698:86;1760:12;1774:9;1698:86;;;;;;15875:25:644;;;15931:2;15916:18;;15909:34;15863:2;15848:18;;15701:248;1698:86:56;;;;;;;;942:944;;699:1187;;;;;;:::o;3677:256:450:-;3764:7;3805:12;3791:11;:26;3783:70;;;;-1:-1:-1;;;3783:70:450;;;;;;;:::i;:::-;3870:56;3889:23;3914:11;3870:18;:56::i;1643:633:70:-;1727:14;1776:17;;;:11;:17;;;;;:23;1727:14;;1833:437;1857:12;1853:1;:16;1833:437;;;1937:1;1897:17;;;:11;:17;;;;;;;;:28;;;:25;;:28;;;;;;-1:-1:-1;;;;;1897:28:70;:42;1893:367;;1972:5;1963;:14;1959:133;;;2010:17;;;;:11;:17;;;;;;;;:28;;;:25;;;;:28;;;;-1:-1:-1;;;;;2010:28:70;;-1:-1:-1;2060:13:70;;-1:-1:-1;;2060:13:70;1959:133;2109:10;2118:1;2109:10;;:::i;:::-;;;1893:367;;;2144:25;2152:4;2166:1;2144:7;:25::i;:::-;:71;;;;-1:-1:-1;2178:17:70;;;;:11;:17;;;;;;;;:37;;;:25;;:37;;;;;;2173:42;;2144:71;2140:120;;;2235:10;2244:1;2235:10;;:::i;:::-;;;2140:120;1871:6;1876:1;1871:6;;:::i;:::-;;;1833:437;;;;1743:533;;1643:633;;;;:::o;1324:131:69:-;1402:4;1425:14;;;:8;:14;;;;;;;;-1:-1:-1;;;;;1425:23:69;;;;;;;;;;;;;;;1324:131::o;1003:188:54:-;1080:20;:18;:20::i;:::-;1075:76;;1116:24;;-1:-1:-1;;;1116:24:54;;;;;;;:::i;1075:76::-;1161:23;1179:4;1161:17;:23::i;2704:102:447:-;2760:13;2792:7;2785:14;;;;;:::i;2731:209:450:-;-1:-1:-1;;;;;2837:21:450;;2804:7;2837:21;;;:12;:21;;;;;:28;2882:8;;:51;;-1:-1:-1;;;;;2897:21:450;;;;;;:12;:21;;;;;2919:7;2925:1;2919:3;:7;:::i;:::-;2897:30;;;;;;;;:::i;:::-;;;;;;;;;;:36;-1:-1:-1;;;2897:36:450;;-1:-1:-1;;;;;2897:36:450;2882:51;;;2893:1;2882:51;-1:-1:-1;;;;;2875:58:450;;2731:209;-1:-1:-1;;;2731:209:450:o;2206:211:69:-;2285:4;2306:14;;;:8;:14;;;;;;;;:26;;;;;;;;;;;2301:88;;-1:-1:-1;2355:14:69;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;2355:23:69;;;;;;;;;;;;2348:30;;2301:88;-1:-1:-1;2406:4:69;2206:211;;;;:::o;6931:427:447:-;7024:4;7040:13;7056:12;:10;:12::i;:::-;7040:28;;7078:24;7105:25;7115:5;7122:7;7105:9;:25::i;:::-;7078:52;;7168:15;7148:16;:35;;7140:85;;;;-1:-1:-1;;;7140:85:447;;30915:2:644;7140:85:447;;;30897:21:644;30954:2;30934:18;;;30927:30;30993:34;30973:18;;;30966:62;-1:-1:-1;;;31044:18:644;;;31037:35;31089:19;;7140:85:447;30713:401:644;7140:85:447;7259:60;7268:5;7275:7;7303:15;7284:16;:34;7259:8;:60::i;:::-;-1:-1:-1;7347:4:447;;6931:427;-1:-1:-1;;;;6931:427:447:o;4066:189::-;4145:4;4161:13;4177:12;:10;:12::i;:::-;4161:28;;4199;4209:5;4216:2;4220:6;4199:9;:28::i;632:301:466:-;700:22;756:4;-1:-1:-1;;;;;744:24:466;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;734:34;;783:9;778:125;798:15;;;778:125;;;847:45;877:4;884;;889:1;884:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;847:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;847:21:466;;-1:-1:-1;;;847:45:466:i;:::-;834:7;842:1;834:10;;;;;;;;:::i;:::-;;;;;;:58;;;;815:3;;;;;:::i;:::-;;;;778:125;;;;632:301;;;;:::o;3455:200:71:-;3533:24;:22;:24::i;:::-;3528:80;;3573:24;;-1:-1:-1;;;3573:24:71;;;;;;;:::i;3528:80::-;3617:31;3639:8;3617:21;:31::i;5756:585:450:-;5975:6;5956:15;:25;;5948:67;;;;-1:-1:-1;;;5948:67:450;;31847:2:644;5948:67:450;;;31829:21:644;31886:2;31866:18;;;31859:30;31925:31;31905:18;;;31898:59;31974:18;;5948:67:450;31645:353:644;5948:67:450;6107:58;;;1744:71;6107:58;;;32234:25:644;-1:-1:-1;;;;;32295:32:644;;32275:18;;;32268:60;;;;32344:18;;;32337:34;;;32387:18;;;32380:34;;;6025:14:450;;6042:180;;6080:87;;32206:19:644;;6107:58:450;;;;;;;;;;;;6097:69;;;;;;6080:16;:87::i;:::-;6181:1;6196;6211;6042:24;:180::i;:::-;6025:197;;6249:17;6259:6;6249:9;:17::i;:::-;6240:5;:26;6232:64;;;;-1:-1:-1;;;6232:64:450;;32627:2:644;6232:64:450;;;32609:21:644;32666:2;32646:18;;;32639:30;-1:-1:-1;;;32685:18:644;;;32678:55;32750:18;;6232:64:450;32425:349:644;6232:64:450;6306:28;6316:6;6324:9;6306;:28::i;:::-;5938:403;5756:585;;;;;;:::o;7116:367:56:-;7242:20;;:14;7210:29;7174:7;;;;7210:52;;7242:20;7210:52;:::i;:::-;7198:64;;7193:252;7268:14;:29;7264:33;;7193:252;;;7341:25;:32;7367:5;7371:1;7367;:5;:::i;:::-;7341:32;;;;;;;;;;;:47;;;7322:15;:66;7318:117;;7415:5;7419:1;7415;:5;:::i;:::-;7408:12;;;7116:367;:::o;7318:117::-;7299:3;;;;:::i;:::-;;;;7193:252;;;-1:-1:-1;7455:21:56;;-1:-1:-1;;;7455:21:56;;33122:2:644;7455:21:56;;;33104::644;33161:2;33141:18;;;33134:30;-1:-1:-1;;;33180:18:644;;;33173:41;33231:18;;7455:21:56;32920:335:644;2683:398:70;2757:13;2805:17;;;:11;:17;;;;;:23;2757:13;2839:161;2863:12;2859:1;:16;2839:161;;;2943:1;2903:17;;;:11;:17;;;;;;;;:28;;;:25;;:28;;;;;;-1:-1:-1;;;;;2903:28:70;:42;2899:91;;2965:10;2974:1;2965:10;;:::i;:::-;;;2899:91;2877:6;2882:1;2877:6;;:::i;:::-;;;2839:161;;;;3013:25;3021:4;3035:1;3013:7;:25::i;:::-;3009:66;;;3054:10;3063:1;3054:10;;:::i;:::-;;;3009:66;2772:309;2683:398;;;:::o;1058:147:71:-;1153:20;;-1:-1:-1;;;;;1153:20:71;;;-1:-1:-1;;;1182:14:71;;;;;;1058:147::o;2334:637:452:-;2569:8;2550:15;:27;;2542:69;;;;-1:-1:-1;;;2542:69:452;;33462:2:644;2542:69:452;;;33444:21:644;33501:2;33481:18;;;33474:30;33540:31;33520:18;;;33513:59;33589:18;;2542:69:452;33260:353:644;2542:69:452;2622:18;1369:95;2682:5;2689:7;2698:5;2705:16;2715:5;2705:9;:16::i;:::-;2653:79;;;;;;33905:25:644;;;;-1:-1:-1;;;;;34004:15:644;;;33984:18;;;33977:43;34056:15;;;;34036:18;;;34029:43;34088:18;;;34081:34;34131:19;;;34124:35;34175:19;;;34168:35;;;33877:19;;2653:79:452;;;;;;;;;;;;2643:90;;;;;;2622:111;;2744:12;2759:28;2776:10;2759:16;:28::i;:::-;2744:43;;2798:14;2815:39;2840:4;2846:1;2849;2852;2815:24;:39::i;:::-;2798:56;;2882:5;-1:-1:-1;;;;;2872:15:452;:6;-1:-1:-1;;;;;2872:15:452;;2864:58;;;;-1:-1:-1;;;2864:58:452;;34416:2:644;2864:58:452;;;34398:21:644;34455:2;34435:18;;;34428:30;34494:32;34474:18;;;34467:60;34544:18;;2864:58:452;34214:354:644;2864:58:452;2933:31;2942:5;2949:7;2958:5;2933:8;:31::i;:::-;2532:439;;;2334:637;;;;;;;:::o;3897:171:69:-;3993:19;;;;:13;:19;;;;;;3982:43;;4014:10;3982;:43::i;4313:149:447:-;-1:-1:-1;;;;;4428:18:447;;;4402:7;4428:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4313:149::o;565:34:54:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2055:148:450:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;2170:21:450;;;;;;:12;:21;;;;;:26;;;;;;;;;;;;:::i;:::-;;;;;;;;;;2163:33;;;;;;;;;2170:26;;2163:33;;;;;;-1:-1:-1;;;2163:33:450;;-1:-1:-1;;;;;2163:33:450;;;;;;;;;2055:148;-1:-1:-1;;;2055:148:450:o;1186:320:462:-;-1:-1:-1;;;;;1476:19:462;;:23;;;1186:320::o;9040:231:326:-;9189:14;9226:38;:36;:38::i;10447:370:447:-;-1:-1:-1;;;;;10578:19:447;;10570:68;;;;-1:-1:-1;;;10570:68:447;;34775:2:644;10570:68:447;;;34757:21:644;34814:2;34794:18;;;34787:30;34853:34;34833:18;;;34826:62;-1:-1:-1;;;34904:18:644;;;34897:34;34948:19;;10570:68:447;34573:400:644;10570:68:447;-1:-1:-1;;;;;10656:21:447;;10648:68;;;;-1:-1:-1;;;10648:68:447;;35180:2:644;10648:68:447;;;35162:21:644;35219:2;35199:18;;;35192:30;35258:34;35238:18;;;35231:62;-1:-1:-1;;;35309:18:644;;;35302:32;35351:19;;10648:68:447;34978:398:644;10648:68:447;-1:-1:-1;;;;;10727:18:447;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10778:32;;2002:25:644;;;10778:32:447;;1975:18:644;10778:32:447;;;;;;;10447:370;;;:::o;6885:137:326:-;6951:4;6974:41;6951:4;7002:12;:10;:12::i;2371:375:71:-;2499:6;2481:15;:24;2477:80;;;2521:25;;-1:-1:-1;;;2521:25:71;;35583:2:644;2521:25:71;;;35565:21:644;35622:2;35602:18;;;35595:30;-1:-1:-1;;;35641:18:644;;;35634:45;35696:18;;2521:25:71;35381:339:644;2477:80:71;2567:14;:40;;-1:-1:-1;;;;;;2617:44:71;-1:-1:-1;;;2567:40:71;;;;-1:-1:-1;;;;;;2617:44:71;;-1:-1:-1;;;;;2617:44:71;;;;;;;;2677:62;;2002:25:644;;;2677:62:71;;1990:2:644;1975:18;2677:62:71;;;;;;;2371:375;;:::o;898:906:286:-;1019:4;;1067;1019;;1109:567;1133:5;:12;1129:1;:16;1109:567;;;1166:10;1175:1;1166:10;;:::i;:::-;;;1190:20;1213:5;1219:1;1213:8;;;;;;;;:::i;:::-;;;;;;;1190:31;;1256:12;1240;:28;1236:430;;1391:44;;;;;;36055:19:644;;;36090:12;;;36083:28;;;36127:12;;1391:44:286;;;;;;;;;;;;1381:55;;;;;;1366:70;;1236:430;;;1578:44;;;;;;36055:19:644;;;36090:12;;;36083:28;;;36127:12;;1578:44:286;;;;;;;;;;;;1568:55;;;;;;1553:70;;1650:1;1641:10;;;;;:::i;:::-;;;1236:430;-1:-1:-1;1147:3:286;;;;:::i;:::-;;;;1109:567;;;-1:-1:-1;1769:20:286;;;;;-1:-1:-1;;;;898:906:286:o;11098:441:447:-;11228:24;11255:25;11265:5;11272:7;11255:9;:25::i;:::-;11228:52;;-1:-1:-1;;11294:16:447;:37;11290:243;;11375:6;11355:16;:26;;11347:68;;;;-1:-1:-1;;;11347:68:447;;36352:2:644;11347:68:447;;;36334:21:644;36391:2;36371:18;;;36364:30;36430:31;36410:18;;;36403:59;36479:18;;11347:68:447;36150:353:644;11347:68:447;11457:51;11466:5;11473:7;11501:6;11482:16;:25;11457:8;:51::i;:::-;11218:321;11098:441;;;:::o;7812:651::-;-1:-1:-1;;;;;7938:18:447;;7930:68;;;;-1:-1:-1;;;7930:68:447;;36710:2:644;7930:68:447;;;36692:21:644;36749:2;36729:18;;;36722:30;36788:34;36768:18;;;36761:62;-1:-1:-1;;;36839:18:644;;;36832:35;36884:19;;7930:68:447;36508:401:644;7930:68:447;-1:-1:-1;;;;;8016:16:447;;8008:64;;;;-1:-1:-1;;;8008:64:447;;37116:2:644;8008:64:447;;;37098:21:644;37155:2;37135:18;;;37128:30;37194:34;37174:18;;;37167:62;-1:-1:-1;;;37245:18:644;;;37238:33;37288:19;;8008:64:447;36914:399:644;8008:64:447;8083:38;8104:4;8110:2;8114:6;8083:20;:38::i;:::-;-1:-1:-1;;;;;8154:15:447;;8132:19;8154:15;;;:9;:15;;;;;;8187:21;;;;8179:72;;;;-1:-1:-1;;;8179:72:447;;37520:2:644;8179:72:447;;;37502:21:644;37559:2;37539:18;;;37532:30;37598:34;37578:18;;;37571:62;-1:-1:-1;;;37649:18:644;;;37642:36;37695:19;;8179:72:447;37318:402:644;8179:72:447;-1:-1:-1;;;;;8285:15:447;;;;;;;:9;:15;;;;;;8303:20;;;8285:38;;8343:13;;;;;;;;:23;;8317:6;;8285:15;8343:23;;8317:6;;8343:23;:::i;:::-;;;;;;;;8397:2;-1:-1:-1;;;;;8382:26:447;8391:4;-1:-1:-1;;;;;8382:26:447;-1:-1:-1;;;;;;;;;;;8401:6:447;8382:26;;;;2002:25:644;;1990:2;1975:18;;1856:177;8382:26:447;;;;;;;;8419:37;8439:4;8445:2;8449:6;8419:19;:37::i;5557:495:69:-;5645:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;5645:23:69;;;;;;;;;;;;5640:406;;5827:43;5857:7;-1:-1:-1;;;;;5827:43:69;5867:2;5827:21;:43::i;:::-;5941:40;5971:4;5978:2;5941:21;:40::i;:::-;5736:267;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;5736:267:69;;;;;;;;;;-1:-1:-1;;;5684:351:69;;;;;;;:::i;3475:152:70:-;3554:31;3571:4;3577:7;3554:16;:31::i;:::-;3595:25;3606:4;3612:7;3595:10;:25::i;2842:160:470:-;2895:7;2921:74;1595:95;2955:17;4386:12;;;4302:103;2955:17;4731:15;;3184:73;;;;;;42977:25:644;;;43018:18;;;43011:34;;;43061:18;;;43054:34;;;3228:13:470;43104:18:644;;;43097:34;3251:4:470;43147:19:644;;;43140:61;3148:7:470;;42949:19:644;;3184:73:470;;;;;;;;;;;;3174:84;;;;;;3167:91;;3008:257;;;;;;3205:157:70;3285:32;3303:4;3309:7;3285:17;:32::i;:::-;4084:11;4098:17;;;:11;:17;;;;;;;;-1:-1:-1;;;;;4098:34:70;;;;;:25;;;:34;;;;;;;;4150:30;;:25;;;;:30;;;;;4143:37;;-1:-1:-1;;;;;;4143:37:70;;;4197:34;;;;4190:41;2043:269:71;;:::o;4017:1469:450:-;5138:12;;4116:7;;;5185:240;5198:4;5192:3;:10;5185:240;;;5218:11;5232:34;5256:3;5261:4;5232:23;:34::i;:::-;5218:48;;5307:11;5284:5;5290:3;5284:10;;;;;;;;:::i;:::-;;;;;;;;;;:20;;;:34;5280:135;;;5345:3;5338:10;;5280:135;;;5393:7;:3;5399:1;5393:7;:::i;:::-;5387:13;;5280:135;5204:221;5185:240;;;5442:9;;:37;;5458:5;5464:8;5471:1;5464:4;:8;:::i;:::-;5458:15;;;;;;;;:::i;:::-;;;;;;;;;;:21;-1:-1:-1;;;5458:21:450;;-1:-1:-1;;;;;5458:21:450;5442:37;;;5454:1;5442:37;-1:-1:-1;;;;;5435:44:450;;4017:1469;-1:-1:-1;;;;;4017:1469:450:o;8074:160:326:-;8199:28;8211:7;8220:6;8199:11;:28::i;470:194:209:-;4910:13:436;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:436;;;;;;;:::i;:::-;572:26:209::1;:24;:26::i;:::-;608:49;640:16;608:31;:49::i;2061:125:452:-:0;4910:13:436;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:436;;;;;;;:::i;:::-;2145:34:452::1;2169:4;2145:34;;;;;;;;;;;;;-1:-1:-1::0;;;2145:34:452::1;;::::0;:23:::1;:34::i;2269:159:447:-:0;4910:13:436;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:436;;;;;;;:::i;:::-;2381:13:447;;::::1;::::0;:5:::1;::::0;:13:::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;2404:17:447;;::::1;::::0;:7:::1;::::0;:17:::1;::::0;::::1;::::0;::::1;:::i;:::-;;2269:159:::0;;:::o;1273:185:54:-;1339:21;1363:11;1339:35;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1384:18:54;;1339:35;;-1:-1:-1;1384:18:54;;:11;;-1:-1:-1;1384:18:54;;;;-1:-1:-1;1384:18:54;-1:-1:-1;1384:18:54;:::i;:::-;;1418:33;1437:7;1446:4;1418:33;;;;;;;:::i;1499:170:72:-;1578:9;:26;;-1:-1:-1;;;;;;1578:26:72;-1:-1:-1;;;;;1578:26:72;;;;;;;;1619:43;;;;-1:-1:-1;;1619:43:72;1499:170;:::o;7743:380:450:-;7827:23;7853:20;7863:9;7853;:20::i;:::-;7827:46;;7883:24;7910:20;7920:9;7910;:20::i;:::-;-1:-1:-1;;;;;7940:21:450;;;;;;;:10;:21;;;;;;:33;;-1:-1:-1;;;;;;7940:33:450;;;;;;;;;;7989:54;;7883:47;;-1:-1:-1;7940:33:450;7989:54;;;;;;7940:21;7989:54;8054:62;8071:15;8088:9;8099:16;8054;:62::i;15190:187:474:-;15246:6;15281:16;15272:25;;;15264:76;;;;-1:-1:-1;;;15264:76:474;;39516:2:644;15264:76:474;;;39498:21:644;39555:2;39535:18;;;39528:30;39594:34;39574:18;;;39567:62;-1:-1:-1;;;39645:18:644;;;39638:36;39691:19;;15264:76:474;39314:402:644;15264:76:474;-1:-1:-1;15364:5:474;15190:187::o;3129:261:71:-;3232:15;:26;;;3268:20;:44;;-1:-1:-1;;;;;;3268:44:71;-1:-1:-1;;;;;3268:44:71;;;;;3328:55;;;;;;3268:44;;3232:26;;3328:55;:::i;4815:356:326:-;5035:14;;5067:20;;;:68;;;5120:15;5107:9;5091:13;3668:12:447;;;3581:106;5091:13:326;:25;;;;:::i;:::-;:44;;5067:68;5059:105;;;;-1:-1:-1;;;5059:105:326;;39923:2:644;5059:105:326;;;39905:21:644;39962:2;39942:18;;;39935:30;-1:-1:-1;;;39981:18:644;;;39974:54;40045:18;;5059:105:326;39721:348:644;8923:111:326;8989:7;9015:12;:10;:12::i;5263:1292::-;5463:19;5459:103;;5506:9;:14;5498:33;;;;-1:-1:-1;;;5498:33:326;;40276:2:644;5498:33:326;;;40258:21:644;40315:1;40295:18;;;40288:29;-1:-1:-1;;;40333:18:644;;;40326:36;40379:18;;5498:33:326;40074:329:644;5498:33:326;5545:7;;5459:103;5573:28;5603:21;5628:20;:18;:20::i;:::-;5572:76;;-1:-1:-1;5572:76:326;-1:-1:-1;5659:21:326;-1:-1:-1;;;;;5683:35:326;;;:84;;5746:21;5683:84;;;5721:22;:20;:22::i;:::-;5659:108;-1:-1:-1;5868:18:326;5927:7;5890:33;5909:14;5890:16;:33;:::i;:::-;5889:45;;;;:::i;:::-;5868:66;;5965:1;5952:10;:14;5944:43;;;;-1:-1:-1;;;5944:43:326;;40832:2:644;5944:43:326;;;40814:21:644;40871:2;40851:18;;;40844:30;-1:-1:-1;;;40890:18:644;;;40883:46;40946:18;;5944:43:326;40630:340:644;5944:43:326;5998:20;2251:6;6022:27;;;;:10;:27;:::i;:::-;6021:39;;;;:::i;:::-;5998:62;-1:-1:-1;6071:18:326;-1:-1:-1;;;;;6103:45:326;;408:42:284;6103:45:326;6099:176;;;-1:-1:-1;6180:9:326;:23;;6099:176;;;-1:-1:-1;6250:9:326;:14;6099:176;6292:13;6284:43;;;;-1:-1:-1;;;6284:43:326;;41177:2:644;6284:43:326;;;41159:21:644;41216:2;41196:18;;;41189:30;-1:-1:-1;;;41235:18:644;;;41228:47;41292:18;;6284:43:326;40975:341:644;6284:43:326;6338:97;6375:9;6386:12;:10;:12::i;:::-;6400:20;6422:12;6338:36;:97::i;:::-;6445:103;6482:9;6493:12;:10;:12::i;:::-;6507:13;6522:25;6535:12;6522:10;:25;:::i;:::-;6445:36;:103::i;6610:180::-;6713:7;6732:33;6738:3;6743:21;6732:5;:33::i;:::-;-1:-1:-1;6782:1:326;6610:180;;;;:::o;8801:236:56:-;;;;;;;:::o;1119:455:466:-;1202:12;1234:37;1264:6;1234:29;:37::i;:::-;1226:88;;;;-1:-1:-1;;;1226:88:466;;41523:2:644;1226:88:466;;;41505:21:644;41562:2;41542:18;;;41535:30;41601:34;41581:18;;;41574:62;-1:-1:-1;;;41652:18:644;;;41645:36;41698:19;;1226:88:466;41321:402:644;1226:88:466;1385:12;1399:23;1426:6;-1:-1:-1;;;;;1426:19:466;1446:4;1426:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1384:67;;;;1468:99;1504:7;1513:10;1468:99;;;;;;;;;;;;;;;;;:35;:99::i;:::-;1461:106;1119:455;-1:-1:-1;;;;;1119:455:466:o;3698:157:71:-;3774:15;:26;;3792:8;;3774:15;-1:-1:-1;;;;3774:26:71;-1:-1:-1;;;3792:8:71;3774:26;;;;;;;;:::i;:::-;;;;;;3816:32;3839:8;3816:32;;;;;;:::i;:::-;;;;;;;;3698:157;:::o;3890:176:470:-;3967:7;3993:66;4026:20;:18;:20::i;:::-;4048:10;8710:57:469;;-1:-1:-1;;;8710:57:469;;;43470:27:644;43513:11;;;43506:27;;;43549:12;;;43542:28;;;8674:7:469;;43586:12:644;;8710:57:469;;;;;;;;;;;;8700:68;;;;;;8693:75;;8581:194;;;;;6925:270;7048:7;7068:17;7087:18;7109:25;7120:4;7126:1;7129;7132;7109:10;:25::i;:::-;7067:67;;;;7144:18;7156:5;7144:11;:18::i;:::-;-1:-1:-1;7179:9:469;-1:-1:-1;6925:270:469;;;;;;;:::o;3526:214:452:-;-1:-1:-1;;;;;3657:14:452;;3586:15;3657:14;;;:7;:14;;;;;929::465;;1061:1;1043:19;;;;929:14;3716:17:452;956:123:465;1058:401:209;1120:14;1150:30;1169:10;1150:18;:30::i;:::-;1146:307;;;-1:-1:-1;;;1352:14:209;1348:23;1335:37;1331:2;1327:46;1058:401;:::o;1146:307::-;-1:-1:-1;929:10:464;;3282:113:452:o;8511:406:326:-;8719:33;8727:12;;8749:1;8719:7;:33::i;:::-;8718:34;:56;;;;-1:-1:-1;;;;;;8756:18:326;;;;8718:56;:76;;;;-1:-1:-1;;;;;;8778:16:326;;;;8718:76;8714:197;;;8818:27;8826:12;;8840:4;8818:7;:27::i;:::-;:56;;;;8849:25;8857:12;;8871:2;8849:7;:25::i;:::-;8810:90;;;;-1:-1:-1;;;8810:90:326;;42209:2:644;8810:90:326;;;42191:21:644;42248:2;42228:18;;;42221:30;-1:-1:-1;;;42267:18:644;;;42260:51;42328:18;;8810:90:326;42007:345:644;8240:228:326;8418:43;8444:4;8450:2;8454:6;8418:25;:43::i;1565:441:292:-;1640:13;1665:19;1697:10;1701:6;1697:1;:10;:::i;:::-;:14;;1710:1;1697:14;:::i;:::-;-1:-1:-1;;;;;1687:25:292;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1687:25:292;;1665:47;;-1:-1:-1;;;1722:6:292;1729:1;1722:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1722:15:292;;;;;;;;;-1:-1:-1;;;1747:6:292;1754:1;1747:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1747:15:292;;;;;;;;-1:-1:-1;1777:9:292;1789:10;1793:6;1789:1;:10;:::i;:::-;:14;;1802:1;1789:14;:::i;:::-;1777:26;;1772:132;1809:1;1805;:5;1772:132;;;-1:-1:-1;;;1856:5:292;1864:3;1856:11;1843:25;;;;;;;:::i;:::-;;;;1831:6;1838:1;1831:9;;;;;;;;:::i;:::-;;;;:37;-1:-1:-1;;;;;1831:37:292;;;;;;;;-1:-1:-1;1892:1:292;1882:11;;;;;1812:3;;;:::i;:::-;;;1772:132;;;-1:-1:-1;1921:10:292;;1913:55;;;;-1:-1:-1;;;1913:55:292;;42559:2:644;1913:55:292;;;42541:21:644;;;42578:18;;;42571:30;42637:34;42617:18;;;42610:62;42689:18;;1913:55:292;42357:356:644;5036:168:69;5114:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;5114:23:69;;;;;;;;;;:30;;-1:-1:-1;;5114:30:69;5140:4;5114:30;;;5159:38;5186:10;;5123:4;;5159:38;;5114:14;5159:38;5036:168;;:::o;3690:253:70:-;3760:11;3774:17;;;:11;:17;;;;;:23;;;3834:1;;3774:17;3807:28;3834:1;3774:23;3807:28;:::i;:::-;;;;-1:-1:-1;;3846:17:70;;;;:11;:17;;;;;;;;:30;;;:25;;;:30;;;;;:40;;-1:-1:-1;;;;;3846:40:70;;;-1:-1:-1;;;;;;3846:40:70;;;;;;;3896:34;;;:25;;;;:34;;;;:40;3690:253::o;5253:204:69:-;5332:25;5343:4;5349:7;5332:10;:25::i;:::-;5374:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;5374:23:69;;;;;;;;;;5367:30;;-1:-1:-1;;5367:30:69;;;5412:38;5439:10;;5383:4;;5412:38;;5374:14;5412:38;5253:204;;:::o;817:153:473:-;879:7;952:11;962:1;953:5;;;952:11;:::i;:::-;942:21;;943:5;;;942:21;:::i;7009:190:450:-;7093:28;7105:7;7114:6;7093:11;:28::i;:::-;7132:60;7149:23;7174:9;7185:6;7132:16;:60::i;776:69:464:-;4910:13:436;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:436;;;;;;;:::i;:::-;776::464:o;670:242:209:-;4910:13:436;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:436;;;;;;;:::i;:::-;787:9:209::1;782:124;806:16;:23;802:1;:27;782:124;;;891:4;850:17;:38;868:16;885:1;868:19;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;-1:-1:-1;;;;;850:38:209::1;::::0;;;::::1;::::0;;;;;;-1:-1:-1;850:38:209;:45;;-1:-1:-1;;850:45:209::1;::::0;::::1;;::::0;;;::::1;::::0;;831:3;::::1;::::0;::::1;:::i;:::-;;;;782:124;;2459:297:470::0;4910:13:436;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:436;;;;;;;:::i;:::-;2592:22:470;;::::1;::::0;;::::1;::::0;2648:25;;;;;::::1;::::0;2683:12:::1;:25:::0;;;;2718:15:::1;:31:::0;2459:297::o;8129:627:450:-;8256:3;-1:-1:-1;;;;;8249:10:450;:3;-1:-1:-1;;;;;8249:10:450;;;:24;;;;;8272:1;8263:6;:10;8249:24;8245:505;;;-1:-1:-1;;;;;8293:17:450;;;8289:221;;-1:-1:-1;;;;;8388:17:450;;8331;8388;;;:12;:17;;;;;8331;;8371:54;;8407:9;8418:6;8371:16;:54::i;:::-;8330:95;;;;8469:3;-1:-1:-1;;;;;8448:47:450;;8474:9;8485;8448:47;;;;;;15875:25:644;;;15931:2;15916:18;;15909:34;15863:2;15848:18;;15701:248;8448:47:450;;;;;;;;8312:198;;8289:221;-1:-1:-1;;;;;8528:17:450;;;8524:216;;-1:-1:-1;;;;;8623:17:450;;8566;8623;;;:12;:17;;;;;8566;;8606:49;;8642:4;8648:6;8606:16;:49::i;:::-;8565:90;;;;8699:3;-1:-1:-1;;;;;8678:47:450;;8704:9;8715;8678:47;;;;;;15875:25:644;;;15931:2;15916:18;;15909:34;15863:2;15848:18;;15701:248;8678:47:450;;;;;;;;8547:193;;8129:627;;;:::o;508:385:284:-;659:12;655:49;;687:7;;655:49;-1:-1:-1;;;;;718:25:284;;408:42;718:25;714:173;;;759:37;783:3;788:7;759:23;:37::i;714:173::-;827:49;845:9;856:5;863:3;868:7;827:17;:49::i;7908:160:326:-;8033:28;8045:7;8054:6;8033:11;:28::i;6622:742:462:-;6768:12;6796:7;6792:566;;;-1:-1:-1;6826:10:462;6819:17;;6792:566;6937:17;;:21;6933:415;;7181:10;7175:17;7241:15;7228:10;7224:2;7220:19;7213:44;6933:415;7320:12;7313:20;;-1:-1:-1;;;7313:20:462;;;;;;;;:::i;5189:1603:469:-;5315:7;;-1:-1:-1;;;;;6226:79:469;;6222:161;;;-1:-1:-1;6337:1:469;;-1:-1:-1;6341:30:469;6321:51;;6222:161;6396:1;:7;;6401:2;6396:7;;:18;;;;;6407:1;:7;;6412:2;6407:7;;6396:18;6392:100;;;-1:-1:-1;6446:1:469;;-1:-1:-1;6450:30:469;6430:51;;6392:100;6603:24;;;6586:14;6603:24;;;;;;;;;43836:25:644;;;43909:4;43897:17;;43877:18;;;43870:45;;;;43931:18;;;43924:34;;;43974:18;;;43967:34;;;6603:24:469;;43808:19:644;;6603:24:469;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6603:24:469;;-1:-1:-1;;6603:24:469;;;-1:-1:-1;;;;;;;6641:20:469;;6637:101;;6693:1;6697:29;6677:50;;;;;;;6637:101;6756:6;-1:-1:-1;6764:20:469;;-1:-1:-1;5189:1603:469;;;;;;;;:::o;570:631::-;647:20;638:5;:29;;;;;;;;:::i;:::-;;634:561;;;570:631;:::o;634:561::-;743:29;734:5;:38;;;;;;;;:::i;:::-;;730:465;;;788:34;;-1:-1:-1;;;788:34:469;;44214:2:644;788:34:469;;;44196:21:644;44253:2;44233:18;;;44226:30;-1:-1:-1;;;44272:18:644;;;44265:54;44336:18;;788:34:469;44012:348:644;730:465:469;852:35;843:5;:44;;;;;;;;:::i;:::-;;839:356;;;903:41;;-1:-1:-1;;;903:41:469;;44567:2:644;903:41:469;;;44549:21:644;44606:2;44586:18;;;44579:30;44645:33;44625:18;;;44618:61;44696:18;;903:41:469;44365:355:644;839:356:469;974:30;965:5;:39;;;;;;;;:::i;:::-;;961:234;;;1020:44;;-1:-1:-1;;;1020:44:469;;44927:2:644;1020:44:469;;;44909:21:644;44966:2;44946:18;;;44939:30;45005:34;44985:18;;;44978:62;-1:-1:-1;;;45056:18:644;;;45049:32;45098:19;;1020:44:469;44725:398:644;961:234:469;1094:30;1085:5;:39;;;;;;;;:::i;:::-;;1081:114;;;1140:44;;-1:-1:-1;;;1140:44:469;;45330:2:644;1140:44:469;;;45312:21:644;45369:2;45349:18;;;45342:30;45408:34;45388:18;;;45381:62;-1:-1:-1;;;45459:18:644;;;45452:32;45501:19;;1140:44:469;45128:398:644;7332:254:450;7523:56;7540:15;7550:4;7540:9;:15::i;:::-;7557:13;7567:2;7557:9;:13::i;:::-;7572:6;7523:16;:56::i;9448:576:447:-;-1:-1:-1;;;;;9531:21:447;;9523:67;;;;-1:-1:-1;;;9523:67:447;;45733:2:644;9523:67:447;;;45715:21:644;45772:2;45752:18;;;45745:30;45811:34;45791:18;;;45784:62;-1:-1:-1;;;45862:18:644;;;45855:31;45903:19;;9523:67:447;45531:397:644;9523:67:447;9601:49;9622:7;9639:1;9643:6;9601:20;:49::i;:::-;-1:-1:-1;;;;;9686:18:447;;9661:22;9686:18;;;:9;:18;;;;;;9722:24;;;;9714:71;;;;-1:-1:-1;;;9714:71:447;;46135:2:644;9714:71:447;;;46117:21:644;46174:2;46154:18;;;46147:30;46213:34;46193:18;;;46186:62;-1:-1:-1;;;46264:18:644;;;46257:32;46306:19;;9714:71:447;45933:398:644;9714:71:447;-1:-1:-1;;;;;9819:18:447;;;;;;:9;:18;;;;;9840:23;;;9819:44;;9883:12;:22;;9857:6;;9819:18;9883:22;;9857:6;;9883:22;:::i;:::-;;;;-1:-1:-1;;9921:37:447;;2002:25:644;;;9947:1:447;;-1:-1:-1;;;;;9921:37:447;;;-1:-1:-1;;;;;;;;;;;9921:37:447;1990:2:644;1975:18;9921:37:447;;;;;;;9969:48;9989:7;10006:1;10010:6;9969:19;:48::i;9534:101:450:-;9597:7;9623:5;9627:1;9623;:5;:::i;8762:664::-;8994:12;;8932:17;;;;9028:8;;:35;;9043:5;9049:7;9055:1;9049:3;:7;:::i;:::-;9043:14;;;;;;;;:::i;:::-;;;;;;;;;;:20;-1:-1:-1;;;9043:20:450;;-1:-1:-1;;;;;9043:20:450;9028:35;;;9039:1;9028:35;-1:-1:-1;;;;;9016:47:450;;;9085:20;9088:9;9099:5;9085:2;:20;;:::i;:::-;9073:32;;9126:1;9120:3;:7;:51;;;;-1:-1:-1;9159:12:450;9131:5;9137:7;9143:1;9137:3;:7;:::i;:::-;9131:14;;;;;;;;:::i;:::-;;;;;;;;;;:24;;;:40;9120:51;9116:304;;;9210:40;9240:9;9210:29;:40::i;:::-;9187:5;9193:7;9199:1;9193:3;:7;:::i;:::-;9187:14;;;;;;;;:::i;:::-;;;;;;;;:20;;;:63;;;;;-1:-1:-1;;;;;9187:63:450;;;;;-1:-1:-1;;;;;9187:63:450;;;;;;9116:304;;;9281:5;9292:116;;;;;;;;9315:42;9344:12;9315:28;:42::i;:::-;9292:116;;;;;;9366:40;9396:9;9366:29;:40::i;:::-;-1:-1:-1;;;;;9292:116:450;;;;;;9281:128;;;;;;;-1:-1:-1;9281:128:450;;;;;;;;;;;;;;;;;;-1:-1:-1;;;9281:128:450;;;;;;;;;;;;9116:304;8970:456;8762:664;;;;;;:::o;9432:96::-;9490:7;9516:5;9520:1;9516;:5;:::i;2532:292:284:-;2714:12;2732:2;-1:-1:-1;;;;;2732:7:284;2748:5;2732:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2713:46;;;2777:7;2769:48;;;;-1:-1:-1;;;2769:48:284;;46748:2:644;2769:48:284;;;46730:21:644;46787:2;46767:18;;;46760:30;-1:-1:-1;;;46806:18:644;;;46799:58;46874:18;;2769:48:284;46546:352:644;2073:396:284;2234:3;-1:-1:-1;;;;;2225:12:284;:5;-1:-1:-1;;;;;2225:12:284;;2221:49;;;2253:7;;2221:49;-1:-1:-1;;;;;2284:22:284;;2301:4;2284:22;2280:183;;;2322:44;-1:-1:-1;;;;;2322:30:284;;2353:3;2358:7;2322:30;:44::i;2280:183::-;2397:55;-1:-1:-1;;;;;2397:34:284;;2432:5;2439:3;2444:7;2397:34;:55::i;6635:285:450:-;6719:28;6731:7;6740:6;6719:11;:28::i;:::-;3668:12:447;;-1:-1:-1;;;;;;6765:29:450;6757:90;;;;-1:-1:-1;;;6757:90:450;;47105:2:644;6757:90:450;;;47087:21:644;47144:2;47124:18;;;47117:30;47183:34;47163:18;;;47156:62;-1:-1:-1;;;47234:18:644;;;47227:46;47290:19;;6757:90:450;46903:412:644;6757:90:450;6858:55;6875:23;6900:4;6906:6;6858:16;:55::i;2762:192:474:-;2819:7;-1:-1:-1;;;;;2846:26:474;;;2838:78;;;;-1:-1:-1;;;2838:78:474;;47522:2:644;2838:78:474;;;47504:21:644;47561:2;47541:18;;;47534:30;47600:34;47580:18;;;47573:62;-1:-1:-1;;;47651:18:644;;;47644:37;47698:19;;2838:78:474;47320:403:644;735:205:226;847:86;867:5;897:23;;;922:2;926:5;874:58;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;874:58:226;;;;;;;;;;;;;;-1:-1:-1;;;;;874:58:226;-1:-1:-1;;;;;;874:58:226;;;;;;;;;;847:19;:86::i;946:241::-;1111:68;;-1:-1:-1;;;;;47986:15:644;;;1111:68:226;;;47968:34:644;48038:15;;48018:18;;;48011:43;48070:18;;;48063:34;;;1084:96:226;;1104:5;;-1:-1:-1;;;1134:27:226;47903:18:644;;1111:68:226;47728:375:644;8739:389:447;-1:-1:-1;;;;;8822:21:447;;8814:65;;;;-1:-1:-1;;;8814:65:447;;48310:2:644;8814:65:447;;;48292:21:644;48349:2;48329:18;;;48322:30;48388:33;48368:18;;;48361:61;48439:18;;8814:65:447;48108:355:644;8814:65:447;8890:49;8919:1;8923:7;8932:6;8890:20;:49::i;:::-;8966:6;8950:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8982:18:447;;;;;;:9;:18;;;;;:28;;9004:6;;8982:18;:28;;9004:6;;8982:28;:::i;:::-;;;;-1:-1:-1;;9025:37:447;;2002:25:644;;;-1:-1:-1;;;;;9025:37:447;;;9042:1;;-1:-1:-1;;;;;;;;;;;9025:37:447;1990:2:644;1975:18;9025:37:447;;;;;;;9073:48;9101:1;9105:7;9114:6;9073:19;:48::i;3241:706:226:-;3660:23;3686:69;3714:4;3686:69;;;;;;;;;;;;;;;;;3694:5;-1:-1:-1;;;;;3686:27:226;;;:69;;;;;:::i;:::-;3769:17;;3660:95;;-1:-1:-1;3769:21:226;3765:176;;3864:10;3853:30;;;;;;;;;;;;:::i;:::-;3845:85;;;;-1:-1:-1;;;3845:85:226;;48920:2:644;3845:85:226;;;48902:21:644;48959:2;48939:18;;;48932:30;48998:34;48978:18;;;48971:62;-1:-1:-1;;;49049:18:644;;;49042:40;49099:19;;3845:85:226;48718:406:644;3827:223:288;3960:12;3991:52;4013:6;4021:4;4027:1;4030:12;3960;5202:18;5213:6;5202:10;:18::i;:::-;5194:60;;;;-1:-1:-1;;;5194:60:288;;49738:2:644;5194:60:288;;;49720:21:644;49777:2;49757:18;;;49750:30;49816:31;49796:18;;;49789:59;49865:18;;5194:60:288;49536:353:644;5194:60:288;5266:12;5280:23;5307:6;-1:-1:-1;;;;;5307:11:288;5327:5;5335:4;5307:33;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5265:75;;;;5357:51;5374:7;5383:10;5395:12;5357:16;:51::i;:::-;5350:58;4914:501;-1:-1:-1;;;;;;;4914:501:288:o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:258:644;86:1;96:113;110:6;107:1;104:13;96:113;;;186:11;;;180:18;167:11;;;160:39;132:2;125:10;96:113;;;227:6;224:1;221:13;218:48;;;-1:-1:-1;;262:1:644;244:16;;237:27;14:258::o;277:::-;319:3;357:5;351:12;384:6;379:3;372:19;400:63;456:6;449:4;444:3;440:14;433:4;426:5;422:16;400:63;:::i;:::-;517:2;496:15;-1:-1:-1;;492:29:644;483:39;;;;524:4;479:50;;277:258;-1:-1:-1;;277:258:644:o;540:220::-;689:2;678:9;671:21;652:4;709:45;750:2;739:9;735:18;727:6;709:45;:::i;973:131::-;-1:-1:-1;;;;;1048:31:644;;1038:42;;1028:70;;1094:1;1091;1084:12;1109:134;1177:20;;1206:31;1177:20;1206:31;:::i;:::-;1109:134;;;:::o;1248:315::-;1316:6;1324;1377:2;1365:9;1356:7;1352:23;1348:32;1345:52;;;1393:1;1390;1383:12;1345:52;1432:9;1419:23;1451:31;1476:5;1451:31;:::i;:::-;1501:5;1553:2;1538:18;;;;1525:32;;-1:-1:-1;;;1248:315:644:o;2038:163::-;2105:5;2150:3;2141:6;2136:3;2132:16;2128:26;2125:46;;;2167:1;2164;2157:12;2206:854;2345:6;2353;2361;2369;2377;2385;2438:3;2426:9;2417:7;2413:23;2409:33;2406:53;;;2455:1;2452;2445:12;2406:53;2491:9;2478:23;2468:33;;2551:2;2540:9;2536:18;2523:32;2564:31;2589:5;2564:31;:::i;:::-;2614:5;-1:-1:-1;2666:2:644;2651:18;;2638:32;;-1:-1:-1;2722:2:644;2707:18;;2694:32;2735:33;2694:32;2735:33;:::i;:::-;2787:7;-1:-1:-1;2841:3:644;2826:19;;2813:33;;-1:-1:-1;2897:3:644;2882:19;;2869:33;-1:-1:-1;;;;;2914:30:644;;2911:50;;;2957:1;2954;2947:12;2911:50;2980:74;3046:7;3037:6;3026:9;3022:22;2980:74;:::i;:::-;2970:84;;;2206:854;;;;;;;;:::o;3065:456::-;3142:6;3150;3158;3211:2;3199:9;3190:7;3186:23;3182:32;3179:52;;;3227:1;3224;3217:12;3179:52;3266:9;3253:23;3285:31;3310:5;3285:31;:::i;:::-;3335:5;-1:-1:-1;3392:2:644;3377:18;;3364:32;3405:33;3364:32;3405:33;:::i;:::-;3065:456;;3457:7;;-1:-1:-1;;;3511:2:644;3496:18;;;;3483:32;;3065:456::o;3526:180::-;3585:6;3638:2;3626:9;3617:7;3613:23;3609:32;3606:52;;;3654:1;3651;3644:12;3606:52;-1:-1:-1;3677:23:644;;3526:180;-1:-1:-1;3526:180:644:o;3893:315::-;3961:6;3969;4022:2;4010:9;4001:7;3997:23;3993:32;3990:52;;;4038:1;4035;4028:12;3990:52;4074:9;4061:23;4051:33;;4134:2;4123:9;4119:18;4106:32;4147:31;4172:5;4147:31;:::i;:::-;4197:5;4187:15;;;3893:315;;;;;:::o;4587:127::-;4648:10;4643:3;4639:20;4636:1;4629:31;4679:4;4676:1;4669:15;4703:4;4700:1;4693:15;4719:275;4790:2;4784:9;4855:2;4836:13;;-1:-1:-1;;4832:27:644;4820:40;;-1:-1:-1;;;;;4875:34:644;;4911:22;;;4872:62;4869:88;;;4937:18;;:::i;:::-;4973:2;4966:22;4719:275;;-1:-1:-1;4719:275:644:o;4999:407::-;5064:5;-1:-1:-1;;;;;5090:6:644;5087:30;5084:56;;;5120:18;;:::i;:::-;5158:57;5203:2;5182:15;;-1:-1:-1;;5178:29:644;5209:4;5174:40;5158:57;:::i;:::-;5149:66;;5238:6;5231:5;5224:21;5278:3;5269:6;5264:3;5260:16;5257:25;5254:45;;;5295:1;5292;5285:12;5254:45;5344:6;5339:3;5332:4;5325:5;5321:16;5308:43;5398:1;5391:4;5382:6;5375:5;5371:18;5367:29;5360:40;4999:407;;;;;:::o;5411:222::-;5454:5;5507:3;5500:4;5492:6;5488:17;5484:27;5474:55;;5525:1;5522;5515:12;5474:55;5547:80;5623:3;5614:6;5601:20;5594:4;5586:6;5582:17;5547:80;:::i;5638:787::-;5692:5;5745:3;5738:4;5730:6;5726:17;5722:27;5712:55;;5763:1;5760;5753:12;5712:55;5799:6;5786:20;5825:4;-1:-1:-1;;;;;5844:2:644;5841:26;5838:52;;;5870:18;;:::i;:::-;5916:2;5913:1;5909:10;5939:28;5963:2;5959;5955:11;5939:28;:::i;:::-;6001:15;;;6071;;;6067:24;;;6032:12;;;;6103:15;;;6100:35;;;6131:1;6128;6121:12;6100:35;6167:2;6159:6;6155:15;6144:26;;6179:217;6195:6;6190:3;6187:15;6179:217;;;6275:3;6262:17;6292:31;6317:5;6292:31;:::i;:::-;6336:18;;6212:12;;;;6374;;;;6179:217;;6430:173;6498:20;;-1:-1:-1;;;;;6547:31:644;;6537:42;;6527:70;;6593:1;6590;6583:12;6608:1270;6785:6;6793;6801;6809;6817;6825;6833;6841;6894:3;6882:9;6873:7;6869:23;6865:33;6862:53;;;6911:1;6908;6901:12;6862:53;6934:29;6953:9;6934:29;:::i;:::-;6924:39;;7014:2;7003:9;6999:18;6986:32;-1:-1:-1;;;;;7078:2:644;7070:6;7067:14;7064:34;;;7094:1;7091;7084:12;7064:34;7117:50;7159:7;7150:6;7139:9;7135:22;7117:50;:::i;:::-;7107:60;;7220:2;7209:9;7205:18;7192:32;7176:48;;7249:2;7239:8;7236:16;7233:36;;;7265:1;7262;7255:12;7233:36;7288:52;7332:7;7321:8;7310:9;7306:24;7288:52;:::i;:::-;7278:62;;7393:2;7382:9;7378:18;7365:32;7349:48;;7422:2;7412:8;7409:16;7406:36;;;7438:1;7435;7428:12;7406:36;7461:52;7505:7;7494:8;7483:9;7479:24;7461:52;:::i;:::-;7451:62;;7566:3;7555:9;7551:19;7538:33;7522:49;;7596:2;7586:8;7583:16;7580:36;;;7612:1;7609;7602:12;7580:36;;7635:63;7690:7;7679:8;7668:9;7664:24;7635:63;:::i;:::-;7625:73;;;7717:39;7751:3;7740:9;7736:19;7717:39;:::i;:::-;7707:49;;7775:39;7809:3;7798:9;7794:19;7775:39;:::i;:::-;7765:49;;7833:39;7867:3;7856:9;7852:19;7833:39;:::i;:::-;7823:49;;6608:1270;;;;;;;;;;;:::o;7883:247::-;7942:6;7995:2;7983:9;7974:7;7970:23;7966:32;7963:52;;;8011:1;8008;8001:12;7963:52;8050:9;8037:23;8069:31;8094:5;8069:31;:::i;8135:826::-;8330:2;8319:9;8312:21;8375:6;8369:13;8364:2;8353:9;8349:18;8342:41;8437:2;8429:6;8425:15;8419:22;8414:2;8403:9;8399:18;8392:50;8496:2;8488:6;8484:15;8478:22;8473:2;8462:9;8458:18;8451:50;8556:2;8548:6;8544:15;8538:22;8532:3;8521:9;8517:19;8510:51;8616:3;8608:6;8604:16;8598:23;8592:3;8581:9;8577:19;8570:52;8677:3;8669:6;8665:16;8659:23;8653:3;8642:9;8638:19;8631:52;8766:1;8762;8757:3;8753:11;8749:19;8742:3;8734:6;8730:16;8724:23;8720:49;8714:3;8703:9;8699:19;8692:78;8293:4;8817:3;8809:6;8805:16;8799:23;8841:6;8883:2;8878;8867:9;8863:18;8856:30;;8903:52;8950:3;8939:9;8935:19;8921:12;8903:52;:::i;9163:390::-;9249:8;9259:6;9313:3;9306:4;9298:6;9294:17;9290:27;9280:55;;9331:1;9328;9321:12;9280:55;-1:-1:-1;9354:20:644;;-1:-1:-1;;;;;9386:30:644;;9383:50;;;9429:1;9426;9419:12;9383:50;9466:4;9458:6;9454:17;9442:29;;9526:3;9519:4;9509:6;9506:1;9502:14;9494:6;9490:27;9486:38;9483:47;9480:67;;;9543:1;9540;9533:12;9480:67;9163:390;;;;;:::o;9558:118::-;9644:5;9637:13;9630:21;9623:5;9620:32;9610:60;;9666:1;9663;9656:12;9681:624;9808:6;9816;9824;9877:2;9865:9;9856:7;9852:23;9848:32;9845:52;;;9893:1;9890;9883:12;9845:52;9933:9;9920:23;-1:-1:-1;;;;;9958:6:644;9955:30;9952:50;;;9998:1;9995;9988:12;9952:50;10037:93;10122:7;10113:6;10102:9;10098:22;10037:93;:::i;:::-;10149:8;;-1:-1:-1;10011:119:644;-1:-1:-1;;10234:2:644;10219:18;;10206:32;10247:28;10206:32;10247:28;:::i;:::-;10294:5;10284:15;;;9681:624;;;;;:::o;10310:1135::-;10458:6;10466;10474;10482;10490;10498;10551:3;10539:9;10530:7;10526:23;10522:33;10519:53;;;10568:1;10565;10558:12;10519:53;10607:9;10594:23;10626:31;10651:5;10626:31;:::i;:::-;10676:5;-1:-1:-1;10728:2:644;10713:18;;10700:32;;-1:-1:-1;10784:2:644;10769:18;;10756:32;10797:33;10756:32;10797:33;:::i;:::-;10849:7;-1:-1:-1;10903:2:644;10888:18;;10875:32;;-1:-1:-1;10958:3:644;10943:19;;10930:33;-1:-1:-1;;;;;11012:14:644;;;11009:34;;;11039:1;11036;11029:12;11009:34;11062:74;11128:7;11119:6;11108:9;11104:22;11062:74;:::i;:::-;11052:84;;11189:3;11178:9;11174:19;11161:33;11145:49;;11219:2;11209:8;11206:16;11203:36;;;11235:1;11232;11225:12;11203:36;-1:-1:-1;11258:24:644;;11313:4;11305:13;;11301:27;-1:-1:-1;11291:55:644;;11342:1;11339;11332:12;11291:55;11365:74;11431:7;11426:2;11413:16;11408:2;11404;11400:11;11365:74;:::i;11450:248::-;11518:6;11526;11579:2;11567:9;11558:7;11554:23;11550:32;11547:52;;;11595:1;11592;11585:12;11547:52;-1:-1:-1;;11618:23:644;;;11688:2;11673:18;;;11660:32;;-1:-1:-1;11450:248:644:o;11703:322::-;11772:6;11825:2;11813:9;11804:7;11800:23;11796:32;11793:52;;;11841:1;11838;11831:12;11793:52;11881:9;11868:23;-1:-1:-1;;;;;11906:6:644;11903:30;11900:50;;;11946:1;11943;11936:12;11900:50;11969;12011:7;12002:6;11991:9;11987:22;11969:50;:::i;12030:471::-;12127:6;12135;12188:2;12176:9;12167:7;12163:23;12159:32;12156:52;;;12204:1;12201;12194:12;12156:52;12244:9;12231:23;-1:-1:-1;;;;;12269:6:644;12266:30;12263:50;;;12309:1;12306;12299:12;12263:50;12348:93;12433:7;12424:6;12413:9;12409:22;12348:93;:::i;:::-;12460:8;;12322:119;;-1:-1:-1;12030:471:644;-1:-1:-1;;;;12030:471:644:o;12506:801::-;12666:4;12695:2;12735;12724:9;12720:18;12765:2;12754:9;12747:21;12788:6;12823;12817:13;12854:6;12846;12839:22;12892:2;12881:9;12877:18;12870:25;;12954:2;12944:6;12941:1;12937:14;12926:9;12922:30;12918:39;12904:53;;12992:2;12984:6;12980:15;13013:1;13023:255;13037:6;13034:1;13031:13;13023:255;;;13130:2;13126:7;13114:9;13106:6;13102:22;13098:36;13093:3;13086:49;13158:40;13191:6;13182;13176:13;13158:40;:::i;:::-;13148:50;-1:-1:-1;13256:12:644;;;;13221:15;;;;13059:1;13052:9;13023:255;;;-1:-1:-1;13295:6:644;;12506:801;-1:-1:-1;;;;;;;12506:801:644:o;13632:277::-;13712:6;13765:2;13753:9;13744:7;13740:23;13736:32;13733:52;;;13781:1;13778;13771:12;13733:52;13820:9;13807:23;13859:1;13852:5;13849:12;13839:40;;13875:1;13872;13865:12;13914:156;13980:20;;14040:4;14029:16;;14019:27;;14009:55;;14060:1;14057;14050:12;14075:592;14177:6;14185;14193;14201;14209;14217;14270:3;14258:9;14249:7;14245:23;14241:33;14238:53;;;14287:1;14284;14277:12;14238:53;14326:9;14313:23;14345:31;14370:5;14345:31;:::i;:::-;14395:5;-1:-1:-1;14447:2:644;14432:18;;14419:32;;-1:-1:-1;14498:2:644;14483:18;;14470:32;;-1:-1:-1;14521:36:644;14553:2;14538:18;;14521:36;:::i;:::-;14511:46;;14604:3;14593:9;14589:19;14576:33;14566:43;;14656:3;14645:9;14641:19;14628:33;14618:43;;14075:592;;;;;;;;:::o;14962:734::-;15073:6;15081;15089;15097;15105;15113;15121;15174:3;15162:9;15153:7;15149:23;15145:33;15142:53;;;15191:1;15188;15181:12;15142:53;15230:9;15217:23;15249:31;15274:5;15249:31;:::i;:::-;15299:5;-1:-1:-1;15356:2:644;15341:18;;15328:32;15369:33;15328:32;15369:33;:::i;:::-;15421:7;-1:-1:-1;15475:2:644;15460:18;;15447:32;;-1:-1:-1;15526:2:644;15511:18;;15498:32;;-1:-1:-1;15549:37:644;15581:3;15566:19;;15549:37;:::i;:::-;15539:47;;15633:3;15622:9;15618:19;15605:33;15595:43;;15685:3;15674:9;15670:19;15657:33;15647:43;;14962:734;;;;;;;;;;:::o;15954:388::-;16022:6;16030;16083:2;16071:9;16062:7;16058:23;16054:32;16051:52;;;16099:1;16096;16089:12;16051:52;16138:9;16125:23;16157:31;16182:5;16157:31;:::i;:::-;16207:5;-1:-1:-1;16264:2:644;16249:18;;16236:32;16277:33;16236:32;16277:33;:::i;16347:274::-;-1:-1:-1;;;;;16539:32:644;;;;16521:51;;16603:2;16588:18;;16581:34;16509:2;16494:18;;16347:274::o;16626:419::-;16693:6;16701;16754:2;16742:9;16733:7;16729:23;16725:32;16722:52;;;16770:1;16767;16760:12;16722:52;16809:9;16796:23;16828:31;16853:5;16828:31;:::i;:::-;16878:5;-1:-1:-1;16935:2:644;16920:18;;16907:32;16983:10;16970:24;;16958:37;;16948:65;;17009:1;17006;16999:12;17405:127;17466:10;17461:3;17457:20;17454:1;17447:31;17497:4;17494:1;17487:15;17521:4;17518:1;17511:15;17537:349;17690:2;17675:18;;17723:1;17712:13;;17702:144;;17768:10;17763:3;17759:20;17756:1;17749:31;17803:4;17800:1;17793:15;17831:4;17828:1;17821:15;17702:144;17855:25;;;17537:349;:::o;17891:380::-;17970:1;17966:12;;;;18013;;;18034:61;;18088:4;18080:6;18076:17;18066:27;;18034:61;18141:2;18133:6;18130:14;18110:18;18107:38;18104:161;;;18187:10;18182:3;18178:20;18175:1;18168:31;18222:4;18219:1;18212:15;18250:4;18247:1;18240:15;18276:338;18478:2;18460:21;;;18517:2;18497:18;;;18490:30;-1:-1:-1;;;18551:2:644;18536:18;;18529:44;18605:2;18590:18;;18276:338::o;18619:545::-;18712:4;18718:6;18778:11;18765:25;18872:2;18868:7;18857:8;18841:14;18837:29;18833:43;18813:18;18809:68;18799:96;;18891:1;18888;18881:12;18799:96;18918:33;;18970:20;;;-1:-1:-1;;;;;;19002:30:644;;18999:50;;;19045:1;19042;19035:12;18999:50;19078:4;19066:17;;-1:-1:-1;19129:1:644;19125:14;;;19109;19105:35;19095:46;;19092:66;;;19154:1;19151;19144:12;19975:127;20036:10;20031:3;20027:20;20024:1;20017:31;20067:4;20064:1;20057:15;20091:4;20088:1;20081:15;20107:128;20147:3;20178:1;20174:6;20171:1;20168:13;20165:39;;;20184:18;;:::i;:::-;-1:-1:-1;20220:9:644;;20107:128::o;21967:355::-;22169:2;22151:21;;;22208:2;22188:18;;;22181:30;22247:33;22242:2;22227:18;;22220:61;22313:2;22298:18;;21967:355::o;22941:127::-;23002:10;22997:3;22993:20;22990:1;22983:31;23033:4;23030:1;23023:15;23057:4;23054:1;23047:15;23073:333;23174:4;23232:11;23219:25;23326:3;23322:8;23311;23295:14;23291:29;23287:44;23267:18;23263:69;23253:97;;23346:1;23343;23336:12;23253:97;23367:33;;;;;23073:333;-1:-1:-1;;23073:333:644:o;24088:516::-;24160:4;24166:6;24226:11;24213:25;24320:2;24316:7;24305:8;24289:14;24285:29;24281:43;24261:18;24257:68;24247:96;;24339:1;24336;24329:12;24247:96;24366:33;;24418:20;;;-1:-1:-1;;;;;;24450:30:644;;24447:50;;;24493:1;24490;24483:12;24447:50;24526:4;24514:17;;-1:-1:-1;24557:14:644;24553:27;;;24543:38;;24540:58;;;24594:1;24591;24584:12;24735:545;24837:2;24832:3;24829:11;24826:448;;;24873:1;24898:5;24894:2;24887:17;24943:4;24939:2;24929:19;25013:2;25001:10;24997:19;24994:1;24990:27;24984:4;24980:38;25049:4;25037:10;25034:20;25031:47;;;-1:-1:-1;25072:4:644;25031:47;25127:2;25122:3;25118:12;25115:1;25111:20;25105:4;25101:31;25091:41;;25182:82;25200:2;25193:5;25190:13;25182:82;;;25245:17;;;25226:1;25215:13;25182:82;;25456:1190;-1:-1:-1;;;;;25559:3:644;25556:27;25553:53;;;25586:18;;:::i;:::-;25615:94;25705:3;25665:38;25697:4;25691:11;25665:38;:::i;:::-;25659:4;25615:94;:::i;:::-;25735:1;25760:2;25755:3;25752:11;25777:1;25772:616;;;;26432:1;26449:3;26446:93;;;-1:-1:-1;26505:19:644;;;26492:33;26446:93;-1:-1:-1;;25413:1:644;25409:11;;;25405:24;25401:29;25391:40;25437:1;25433:11;;;25388:57;26552:78;;25745:895;;25772:616;24682:1;24675:14;;;24719:4;24706:18;;-1:-1:-1;;25808:17:644;;;25909:9;25931:229;25945:7;25942:1;25939:14;25931:229;;;26034:19;;;26021:33;26006:49;;26141:4;26126:20;;;;26094:1;26082:14;;;;25961:12;25931:229;;;25935:3;26188;26179:7;26176:16;26173:159;;;26312:1;26308:6;26302:3;26296;26293:1;26289:11;26285:21;26281:34;26277:39;26264:9;26259:3;26255:19;26242:33;26238:79;26230:6;26223:95;26173:159;;;26375:1;26369:3;26366:1;26362:11;26358:19;26352:4;26345:33;25745:895;;;25456:1190;;;:::o;26651:950::-;26830:5;26817:19;26811:4;26804:33;26891:2;26884:5;26880:14;26867:28;26863:1;26857:4;26853:12;26846:50;26950:2;26943:5;26939:14;26926:28;26922:1;26916:4;26912:12;26905:50;27009:2;27002:5;26998:14;26985:28;26981:1;26975:4;26971:12;26964:50;27068:3;27061:5;27057:15;27044:29;27040:1;27034:4;27030:12;27023:51;27128:3;27121:5;27117:15;27104:29;27100:1;27094:4;27090:12;27083:51;27171:1;27165:4;27161:12;27221:3;27214:5;27210:15;27197:29;27235:33;27260:7;27235:33;:::i;:::-;27303:17;;-1:-1:-1;;;;;;27299:48:644;-1:-1:-1;;;;;27349:33:644;;;;27296:87;27277:107;;27427:60;27482:3;27471:15;;27475:5;27427:60;:::i;:::-;27496:99;27581:13;27568:11;27564:1;27558:4;27554:12;27496:99;:::i;27606:135::-;27645:3;-1:-1:-1;;27666:17:644;;27663:43;;;27686:18;;:::i;:::-;-1:-1:-1;27733:1:644;27722:13;;27606:135::o;27746:504::-;27805:5;27812:6;27872:3;27859:17;27958:2;27954:7;27943:8;27927:14;27923:29;27919:43;27899:18;27895:68;27885:96;;27977:1;27974;27967:12;27885:96;28005:33;;28109:4;28096:18;;;-1:-1:-1;28057:21:644;;-1:-1:-1;;;;;;28126:30:644;;28123:50;;;28169:1;28166;28159:12;28123:50;28219:6;28203:14;28199:27;28189:8;28185:42;28182:62;;;28240:1;28237;28230:12;28255:267;28344:6;28339:3;28332:19;28396:6;28389:5;28382:4;28377:3;28373:14;28360:43;-1:-1:-1;28448:1:644;28423:16;;;28441:4;28419:27;;;28412:38;;;;28504:2;28483:15;;;-1:-1:-1;;28479:29:644;28470:39;;;28466:50;;28255:267::o;28527:2051::-;28798:2;28850:21;;;28823:18;;;28906:22;;;28769:4;;28947:2;28965:18;;;29029:1;29025:14;;;29010:30;;29006:39;;29068:6;28769:4;;29123:1372;29139:6;29134:3;29131:15;29123:1372;;;29208:22;;;-1:-1:-1;;29204:36:644;29192:49;;29280:20;;29355:14;29351:27;;;-1:-1:-1;;29347:42:644;29323:67;;29313:95;;29404:1;29401;29394:12;29313:95;29434:31;;29522:19;;29507:35;;29565:4;29619:14;;;29606:28;29589:15;;;29582:53;29685:14;;;29672:28;29655:15;;;29648:53;29751:14;;;29738:28;29721:15;;;29714:53;29790:4;29844:14;;;29831:28;29814:15;;;29807:53;29883:4;29937:14;;;29924:28;29907:15;;;29900:53;29488:6;;29976:4;30021:14;;;30008:28;30049:33;30008:28;30049:33;:::i;:::-;-1:-1:-1;;;;;30119:33:644;30102:15;;;30095:58;30176:4;30227:54;30266:14;;;30270:5;30227:54;:::i;:::-;30193:88;;30318:2;30313;30305:6;30301:15;30294:27;30344:71;30411:2;30403:6;30399:15;30385:12;30371;30344:71;:::i;:::-;30473:12;;;;30334:81;-1:-1:-1;;;30438:15:644;;;;;-1:-1:-1;;29165:1:644;29156:11;29123:1372;;;-1:-1:-1;;;1638:13:644;;1631:21;30566:4;30551:20;;1619:34;30512:6;-1:-1:-1;30527:45:644;;-1:-1:-1;;;1568:91:644;30583:125;30623:4;30651:1;30648;30645:8;30642:34;;;30656:18;;:::i;:::-;-1:-1:-1;30693:9:644;;30583:125::o;32779:136::-;32818:3;32846:5;32836:39;;32855:18;;:::i;:::-;-1:-1:-1;;;32891:18:644;;32779:136::o;35725:168::-;35765:7;35831:1;35827;35823:6;35819:14;35816:1;35813:21;35808:1;35801:9;35794:17;35790:45;35787:71;;;35838:18;;:::i;:::-;-1:-1:-1;35878:9:644;;35725:168::o;37725:784::-;-1:-1:-1;;;38131:3:644;38124:36;38106:3;38189:6;38183:13;38205:62;38260:6;38255:2;38250:3;38246:12;38239:4;38231:6;38227:17;38205:62;:::i;:::-;-1:-1:-1;;;38326:2:644;38286:16;;;38318:11;;;38311:40;38376:13;;38398:63;38376:13;38447:2;38439:11;;38432:4;38420:17;;38398:63;:::i;:::-;38481:17;38500:2;38477:26;;37725:784;-1:-1:-1;;;;37725:784:644:o;38514:407::-;38716:2;38698:21;;;38755:2;38735:18;;;38728:30;38794:34;38789:2;38774:18;;38767:62;-1:-1:-1;;;38860:2:644;38845:18;;38838:41;38911:3;38896:19;;38514:407::o;38926:383::-;39123:2;39112:9;39105:21;39086:4;39149:45;39190:2;39179:9;39175:18;39167:6;39149:45;:::i;:::-;39242:9;39234:6;39230:22;39225:2;39214:9;39210:18;39203:50;39270:33;39296:6;39288;39270:33;:::i;40408:217::-;40448:1;40474;40464:132;;40518:10;40513:3;40509:20;40506:1;40499:31;40553:4;40550:1;40543:15;40581:4;40578:1;40571:15;40464:132;-1:-1:-1;40610:9:644;;40408:217::o;41728:274::-;41857:3;41895:6;41889:13;41911:53;41957:6;41952:3;41945:4;41937:6;41933:17;41911:53;:::i;48468:245::-;48535:6;48588:2;48576:9;48567:7;48563:23;48559:32;48556:52;;;48604:1;48601;48594:12;48556:52;48636:9;48630:16;48655:28;48677:5;48655:28;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "DEFAULT_ADMIN_ROLE()": "a217fddf",
    "DOMAIN_SEPARATOR()": "3644e515",
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "burn(uint256)": "42966c68",
    "burnFrom(address,uint256)": "79cc6790",
    "checkpoints(address,uint32)": "f1127ed8",
    "claim(address,uint256,address,uint256,(bytes32[],uint256,uint256,address),bytes)": "84bb1e42",
    "claimCondition()": "d637ed59",
    "contractType()": "cb2ef6f7",
    "contractURI()": "e8a3d485",
    "contractVersion()": "a0a8e460",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "delegate(address)": "5c19a95c",
    "delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": "c3cda520",
    "delegates(address)": "587cde1e",
    "getActiveClaimConditionId()": "c68907de",
    "getClaimConditionById(uint256)": "6f8934f4",
    "getFlatPlatformFeeInfo()": "e57553da",
    "getPastTotalSupply(uint256)": "8e539e8c",
    "getPastVotes(address,uint256)": "3a46b1a8",
    "getPlatformFeeInfo()": "d45573f6",
    "getPlatformFeeType()": "f28083c3",
    "getRoleAdmin(bytes32)": "248a9ca3",
    "getRoleMember(bytes32,uint256)": "9010d07c",
    "getRoleMemberCount(bytes32)": "ca15c873",
    "getSupplyClaimedByWallet(uint256,address)": "ad1eefc5",
    "getVotes(address)": "9ab24eb0",
    "grantRole(bytes32,address)": "2f2ff15d",
    "hasRole(bytes32,address)": "91d14854",
    "hasRoleWithSwitch(bytes32,address)": "a32fa5b3",
    "increaseAllowance(address,uint256)": "39509351",
    "initialize(address,string,string,string,address[],address,address,uint128)": "49c5c5b6",
    "isTrustedForwarder(address)": "572b6c05",
    "maxTotalSupply()": "2ab4d052",
    "multicall(bytes[])": "ac9650d8",
    "name()": "06fdde03",
    "nonces(address)": "7ecebe00",
    "numCheckpoints(address)": "6fcfff45",
    "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
    "primarySaleRecipient()": "079fe40e",
    "renounceRole(bytes32,address)": "36568abe",
    "revokeRole(bytes32,address)": "d547741f",
    "setClaimConditions((uint256,uint256,uint256,uint256,bytes32,uint256,address,string)[],bool)": "74bc7db7",
    "setContractURI(string)": "938e3d7b",
    "setFlatPlatformFeeInfo(address,uint256)": "7e54523c",
    "setMaxTotalSupply(uint256)": "3f3e4c11",
    "setPlatformFeeInfo(address,uint256)": "1e7ac488",
    "setPlatformFeeType(uint8)": "b6f10c79",
    "setPrimarySaleRecipient(address)": "6f4f2837",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd",
    "verifyClaim(uint256,address,uint256,address,uint256,(bytes32[],uint256,uint256,address))": "23a2902b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxClaimableSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"}],\"indexed\":false,\"internalType\":\"struct IClaimCondition.ClaimCondition[]\",\"name\":\"claimConditions\",\"type\":\"tuple[]\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"resetEligibility\",\"type\":\"bool\"}],\"name\":\"ClaimConditionsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"prevURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newURI\",\"type\":\"string\"}],\"name\":\"ContractURIUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"platformFeeRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"flatFee\",\"type\":\"uint256\"}],\"name\":\"FlatPlatformFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxTotalSupply\",\"type\":\"uint256\"}],\"name\":\"MaxTotalSupplyUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"platformFeeRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"platformFeeBps\",\"type\":\"uint256\"}],\"name\":\"PlatformFeeInfoUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"enum IPlatformFee.PlatformFeeType\",\"name\":\"feeType\",\"type\":\"uint8\"}],\"name\":\"PlatformFeeTypeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"PrimarySaleRecipientUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"claimConditionIndex\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantityClaimed\",\"type\":\"uint256\"}],\"name\":\"TokensClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"pos\",\"type\":\"uint32\"}],\"name\":\"checkpoints\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"fromBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint224\",\"name\":\"votes\",\"type\":\"uint224\"}],\"internalType\":\"struct ERC20VotesUpgradeable.Checkpoint\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_pricePerToken\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"internalType\":\"struct IDrop.AllowlistProof\",\"name\":\"_allowlistProof\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimCondition\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"currentStartId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractType\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractVersion\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getActiveClaimConditionId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_conditionId\",\"type\":\"uint256\"}],\"name\":\"getClaimConditionById\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxClaimableSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"}],\"internalType\":\"struct IClaimCondition.ClaimCondition\",\"name\":\"condition\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFlatPlatformFeeInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPlatformFeeInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPlatformFeeType\",\"outputs\":[{\"internalType\":\"enum IPlatformFee.PlatformFeeType\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_conditionId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_claimer\",\"type\":\"address\"}],\"name\":\"getSupplyClaimedByWallet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"supplyClaimedByWallet\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRoleWithSwitch\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_defaultAdmin\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_contractURI\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"_trustedForwarders\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"_saleRecipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_platformFeeRecipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"_platformFeeBps\",\"type\":\"uint128\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"numCheckpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"primarySaleRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxClaimableSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"}],\"internalType\":\"struct IClaimCondition.ClaimCondition[]\",\"name\":\"_conditions\",\"type\":\"tuple[]\"},{\"internalType\":\"bool\",\"name\":\"_resetClaimEligibility\",\"type\":\"bool\"}],\"name\":\"setClaimConditions\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"setContractURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_platformFeeRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_flatFee\",\"type\":\"uint256\"}],\"name\":\"setFlatPlatformFeeInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxTotalSupply\",\"type\":\"uint256\"}],\"name\":\"setMaxTotalSupply\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_platformFeeRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_platformFeeBps\",\"type\":\"uint256\"}],\"name\":\"setPlatformFeeInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IPlatformFee.PlatformFeeType\",\"name\":\"_feeType\",\"type\":\"uint8\"}],\"name\":\"setPlatformFeeType\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_saleRecipient\",\"type\":\"address\"}],\"name\":\"setPrimarySaleRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_conditionId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_claimer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_pricePerToken\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"internalType\":\"struct IDrop.AllowlistProof\",\"name\":\"_allowlistProof\",\"type\":\"tuple\"}],\"name\":\"verifyClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isOverride\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"MaxTotalSupplyUpdated(uint256)\":{\"details\":\"Emitted when the global max supply of tokens is updated.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"See {IERC20Permit-DOMAIN_SEPARATOR}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"checkpoints(address,uint32)\":{\"details\":\"Get the `pos`-th checkpoint for `account`.\"},\"claim(address,uint256,address,uint256,(bytes32[],uint256,uint256,address),bytes)\":{\"details\":\"Lets an account claim tokens.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"delegate(address)\":{\"details\":\"Delegate votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`\"},\"delegates(address)\":{\"details\":\"Get the address `account` is currently delegating to.\"},\"getActiveClaimConditionId()\":{\"details\":\"At any given moment, returns the uid for the active claim condition.\"},\"getClaimConditionById(uint256)\":{\"details\":\"Returns the claim condition at the given uid.\"},\"getFlatPlatformFeeInfo()\":{\"details\":\"Returns the platform fee bps and recipient.\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Retrieve the `totalSupply` at the end of `blockNumber`. Note, this value is the sum of all balances. It is but NOT the sum of all the delegated votes! Requirements: - `blockNumber` must have been already mined\"},\"getPastVotes(address,uint256)\":{\"details\":\"Retrieve the number of votes for `account` at the end of `blockNumber`. Requirements: - `blockNumber` must have been already mined\"},\"getPlatformFeeInfo()\":{\"details\":\"Returns the platform fee recipient and bps.\"},\"getPlatformFeeType()\":{\"details\":\"Returns the platform fee bps and recipient.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"See {grantRole} and {revokeRole}.                  To change a role's admin, use {_setRoleAdmin}.\",\"params\":{\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns `member` who has `role`, at `index` of role-members list.                  See struct {RoleMembers}, and mapping {roleMembers}\",\"params\":{\"index\":\"Index in list of current members for the role.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"},\"returns\":{\"member\":\" Address of account that has `role`\"}},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns `count` of accounts that have `role`.                  See struct {RoleMembers}, and mapping {roleMembers}\",\"params\":{\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"},\"returns\":{\"count\":\"  Total number of accounts that have `role`\"}},\"getSupplyClaimedByWallet(uint256,address)\":{\"details\":\"Returns the supply claimed by claimer for a given conditionId.\"},\"getVotes(address)\":{\"details\":\"Gets the current votes balance for `account`\"},\"grantRole(bytes32,address)\":{\"details\":\"Caller must have admin role for the `role`.                  Emits {RoleGranted Event}.\",\"params\":{\"account\":\"Address of the account to which the role is being granted.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\",\"params\":{\"account\":\"Address of the account for which the role is being checked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"hasRoleWithSwitch(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.                  Role restrictions can be swtiched on and off:                      - If address(0) has ROLE, then the ROLE restrictions                        don't apply.                      - If address(0) does not have ROLE, then the ROLE                        restrictions will apply.\",\"params\":{\"account\":\"Address of the account for which the role is being checked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"initialize(address,string,string,string,address[],address,address,uint128)\":{\"details\":\"Initializes the contract, like a constructor.\"},\"multicall(bytes[])\":{\"details\":\"Receives and executes a batch of function calls on this contract.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"See {IERC20Permit-nonces}.\"},\"numCheckpoints(address)\":{\"details\":\"Get number of checkpoints for `account`.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"See {IERC20Permit-permit}.\"},\"primarySaleRecipient()\":{\"details\":\"Returns primary sale recipient address.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Caller must have the `role`, with caller being the same as `account`.                  Emits {RoleRevoked Event}.\",\"params\":{\"account\":\"Address of the account from which the role is being revoked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"revokeRole(bytes32,address)\":{\"details\":\"Caller must have admin role for the `role`.                  Emits {RoleRevoked Event}.\",\"params\":{\"account\":\"Address of the account from which the role is being revoked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"setClaimConditions((uint256,uint256,uint256,uint256,bytes32,uint256,address,string)[],bool)\":{\"details\":\"Lets a contract admin set claim conditions.\"},\"setContractURI(string)\":{\"details\":\"Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.\",\"params\":{\"_uri\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"setMaxTotalSupply(uint256)\":{\"details\":\"Lets a contract admin set the global maximum supply for collection's NFTs.\"},\"setPlatformFeeInfo(address,uint256)\":{\"details\":\"Caller should be authorized to set platform fee info.                  See {_canSetPlatformFeeInfo}.                  Emits {PlatformFeeInfoUpdated Event}; See {_setupPlatformFeeInfo}.\",\"params\":{\"_platformFeeBps\":\"Updated platformFeeBps.\",\"_platformFeeRecipient\":\"Address to be set as new platformFeeRecipient.\"}},\"setPrimarySaleRecipient(address)\":{\"details\":\"Caller should be authorized to set primary sales info.                  See {_canSetPrimarySaleRecipient}.                  Emits {PrimarySaleRecipientUpdated Event}; See {_setupPrimarySaleRecipient}.\",\"params\":{\"_saleRecipient\":\"Address to be set as new recipient of primary sales.\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"verifyClaim(uint256,address,uint256,address,uint256,(bytes32[],uint256,uint256,address))\":{\"details\":\"Checks a request to claim NFTs against the active claim condition's criteria.\"}},\"stateVariables\":{\"MAX_BPS\":{\"details\":\"Max bps in the thirdweb system.\"},\"maxTotalSupply\":{\"details\":\"Global max total supply of tokens.\"},\"transferRole\":{\"details\":\"Only transfers to or from TRANSFER_ROLE holders are valid, when transfers are restricted.\"}},\"version\":1},\"userdoc\":{\"events\":{\"ClaimConditionsUpdated((uint256,uint256,uint256,uint256,bytes32,uint256,address,string)[],bool)\":{\"notice\":\"Emitted when the contract's claim conditions are updated.\"},\"TokensClaimed(uint256,address,address,uint256,uint256)\":{\"notice\":\"Emitted when tokens are claimed via `claim`.\"}},\"kind\":\"user\",\"methods\":{\"contractURI()\":{\"notice\":\"Returns the contract metadata URI.\"},\"getRoleAdmin(bytes32)\":{\"notice\":\"Returns the admin role that controls the specified role.\"},\"getRoleMember(bytes32,uint256)\":{\"notice\":\"Returns the role-member from a list of members for a role,                  at a given index.\"},\"getRoleMemberCount(bytes32)\":{\"notice\":\"Returns total number of accounts that have a role.\"},\"grantRole(bytes32,address)\":{\"notice\":\"Grants a role to an account, if not previously granted.\"},\"hasRole(bytes32,address)\":{\"notice\":\"Checks whether an account has a particular role.\"},\"hasRoleWithSwitch(bytes32,address)\":{\"notice\":\"Checks whether an account has a particular role;                  role restrictions can be swtiched on and off.\"},\"renounceRole(bytes32,address)\":{\"notice\":\"Revokes role from the account.\"},\"revokeRole(bytes32,address)\":{\"notice\":\"Revokes role from an account.\"},\"setContractURI(string)\":{\"notice\":\"Lets a contract admin set the URI for contract-level metadata.\"},\"setFlatPlatformFeeInfo(address,uint256)\":{\"notice\":\"Lets a module admin set a flat fee on primary sales.\"},\"setPlatformFeeInfo(address,uint256)\":{\"notice\":\"Updates the platform fee recipient and bps.\"},\"setPlatformFeeType(uint8)\":{\"notice\":\"Lets a module admin set platform fee type.\"},\"setPrimarySaleRecipient(address)\":{\"notice\":\"Updates primary sale recipient.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/prebuilts/drop/DropERC20.sol\":\"DropERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@std/=lib/forge-std/src/\",\":@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/\",\":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/\",\":contracts/=contracts/\",\":ds-test/=lib/ds-test/src/\",\":dynamic-contracts/=lib/dynamic-contracts/src/\",\":erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/ERC721A-Upgradeable/\",\":erc721a/=lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/\"]},\"sources\":{\"contracts/eip/interface/IERC20.sol\":{\"keccak256\":\"0x5bdd9dd97ba7d9d7c9a2953db287e4d9d7fa93a27a96bc2e72a8da4919b6f7ff\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://45527c265ee5de6bbb3ecfc052e7b1175531a82c2ac16172020aee855f7dd592\",\"dweb:/ipfs/QmVZthqbG916qUQSwv1LE8bB58ZGQ1VfQbLbbRV5urfEYA\"]},\"contracts/extension/ContractMetadata.sol\":{\"keccak256\":\"0xf53ab08ec3057056872c15e35a5610f7a43426bd2829786aed006d527177adfe\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ee132ae5efdd372152febfcd8fd3a7cb82c7019367d92c886f5096003a79f392\",\"dweb:/ipfs/QmRW1cGWmZAu57huZpTUwsWB8AxUFrBp6g4NqozXpbWsR6\"]},\"contracts/extension/Drop.sol\":{\"keccak256\":\"0x11e1f936e81e51b69d5130acc57a1b95c6428f55265492a7f8bbc1e76a7f9acc\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9d1ac7b9be364630343fc9d0509c67e8ba9de07a28a9520461a4c81fe122701c\",\"dweb:/ipfs/Qme1eucpamqAkL2xFfcYHWPmo4aNk8SNuWSfk2R2uW7pYZ\"]},\"contracts/extension/Permissions.sol\":{\"keccak256\":\"0xe7e18181f2d2c8bae4afc7ee69ce1d547e7aa583182e8e0853ca33c49a28c04d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://75d5f5a9356c290e398a5dd05914b59c3d09e6fedde2da80b6f1012aedf323f8\",\"dweb:/ipfs/QmNrrf8Uyq33XBsE2NqVTW6HVX3XixFTjCG8KGbGxdEE84\"]},\"contracts/extension/PermissionsEnumerable.sol\":{\"keccak256\":\"0x434a6ffc16ddc437ffb37b8fbe4c9696385252f15a617c4606b8c5e10561caf3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1a9d4dac4bf2ae3c3c086af1956dc25e8b149b0914125e660cc0648791c247cb\",\"dweb:/ipfs/QmTMEggPdBea1JCamsShwRf3en2FgVTXNTPJ2isFtBk4Kk\"]},\"contracts/extension/PlatformFee.sol\":{\"keccak256\":\"0x8db4537648987b88dce356120fc96c48cffe53eaa5988b9a7e8aa023f4258163\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9e30009e63be23e60e92bf25582143596e3f01b2a1f7e121664559119a9f5890\",\"dweb:/ipfs/Qma3bi4NfCNZaukacNQMQ3j5kXn6Ym4mDa57Tqc26ssahE\"]},\"contracts/extension/PrimarySale.sol\":{\"keccak256\":\"0x9ef1ad82fadf988a07f4034b92ccdb3281682693e41759a79042814d36095f42\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0d962b48453e1f50b808193135c2f14265324fa8b75fe3b405ef7836e38921f7\",\"dweb:/ipfs/QmZDLNsZQj9kNcb15nBuWRpPwDdDvJS2gtFwqEs2Lwxb1N\"]},\"contracts/extension/interface/IClaimCondition.sol\":{\"keccak256\":\"0x391e69970031edb30dfa59f8db33c7446b349cd5ec505fd99f0f0b672b19e6d6\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fd9eafca6098421f3aa25bf0a0b24386facc764b7ecb8e6ce4a890afa3c6d459\",\"dweb:/ipfs/QmPXTSX2ie5wsZ6FyXWS4YMa7aPpYNyza9Rym1n799B5LU\"]},\"contracts/extension/interface/IClaimConditionMultiPhase.sol\":{\"keccak256\":\"0x8388214d6cc8f1fd481aed7e062a8b23d5959e870a56076017fcf474404dbbfa\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://54c039ba9f0e674a6bdbb0ab015ad4054feffaea7eb3cc7c485aa95761156125\",\"dweb:/ipfs/QmTya89XYsc1iGAhfsHeZkgGaAv7ivA5Vr4jrGCifYHmKh\"]},\"contracts/extension/interface/IContractMetadata.sol\":{\"keccak256\":\"0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a\",\"dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr\"]},\"contracts/extension/interface/IDrop.sol\":{\"keccak256\":\"0xa8fa4a9fde50a512383c1608295dab741357852822bf089b64dfc8e89041bbad\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://67e26a8f07f05daeebae7a4a652bfe90d4b62d057b737e00a9d3c1782f5bb093\",\"dweb:/ipfs/QmR9b1N5BAuRibaK1iJkyUD7kXE7F3GocjM985oT9wPdZo\"]},\"contracts/extension/interface/IPermissions.sol\":{\"keccak256\":\"0xc0cd1f87bac474a06f85e2b341b9b57662aee957fc24180d42c872481c2f2ae3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7dec3eed451d63867531d693f0be3279fa2c9aef3130f0826c3520c06820fa5d\",\"dweb:/ipfs/QmTYANrcPdd9SCe99DWsKJ19evNRQKQGZeoS1Keew4M2cS\"]},\"contracts/extension/interface/IPermissionsEnumerable.sol\":{\"keccak256\":\"0x2e742c18a4481bad41d56424cd16c52def2fb415f69e5fb5f67d8d979300ff95\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d9be33bb865e3e82aca540a3e38cbc2bf2e431f9d1bf39c50d6c757e7b7bf3ee\",\"dweb:/ipfs/Qmdad1Xqj5SQ44Bk4bwD2uA36XnGHtqnVYSomKZQvnUBVG\"]},\"contracts/extension/interface/IPlatformFee.sol\":{\"keccak256\":\"0x8c23c2a223a3b94ccce125b418e5fabfb631695d927e336512bc8dca61bbc736\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://86dd8c93e75cb3a44d64c873154ee3857b604d1b07a9e52c120870172c2e9a34\",\"dweb:/ipfs/QmWXxEi7ygoRjN8yWYfVGbfhuwVg8bkLoHNzr3xMNa1VRv\"]},\"contracts/extension/interface/IPrimarySale.sol\":{\"keccak256\":\"0x77c89cb8d9b781b0a08b1fa81c95a0dd5c19200b2fb0dc884c1084b931624004\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a37b042af11a08ba5518dadf72c91745d1b5f42b1c20ea5282492bfd18f53869\",\"dweb:/ipfs/QmWEYYG5VqR8MRfr2rydDV98GLKmaJtCC8G1W7MzJ9qFnF\"]},\"contracts/external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol\":{\"keccak256\":\"0xdbc96b1264d2e2bd82cb7e697056929325e09d1641321145a8cec53b22b9567d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ca7ccf947d21d98878ec18e941b750cd2ae7c563e6d2a707da4f806038d67c8\",\"dweb:/ipfs/QmYVLYUPMD3b95vKrS5yjxcz2MDNNzkWJY9xc9bc9oTZdh\"]},\"contracts/external-deps/openzeppelin/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xa6149938a7c7c8af4244743aeaafcfb1fd9ce15ad45de58fa9576f0ed5599b2c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://839aa4ea6ef6d1972881bfd7420a9ddcd2f37139e3f0bf25310f93f48410702d\",\"dweb:/ipfs/QmSH65kStfbgMbfjFdfJqV412omPy6nB1JMvMt9q7SsytW\"]},\"contracts/infra/interface/IWETH.sol\":{\"keccak256\":\"0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1\",\"dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU\"]},\"contracts/lib/CurrencyTransferLib.sol\":{\"keccak256\":\"0x4a30bc9a8cd6cc8b855621fb1a651e2c3a1639b0ad153f1139c3ba463605672d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://417cc64ec6393f3cc89981ca9c32bbcc444a5f91363d69f84dd8ace888b2b859\",\"dweb:/ipfs/QmZeaQsYGx4VNoP8e1fcwC87PwvyakheWYeuwEwhFSJnvB\"]},\"contracts/lib/MerkleProof.sol\":{\"keccak256\":\"0xfeb51ecaba6f9c1649a143825dc3b7ca0eb9edff7787c7a54957dfd542f7ece0\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://8819ab0f7546a6a0dc126d5dbf019ba015563220689f661b1da4174f7ce87bbf\",\"dweb:/ipfs/QmT6Q9YQGMJbCWhE6G4ze8dsqjMyewnErTNGgLFSAHkFU7\"]},\"contracts/lib/TWAddress.sol\":{\"keccak256\":\"0x460f032cf3bf43d586e126ab2ec8be4335767f497ccb699741546a1cfba94a7e\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://28fcbf6dde6c2eeb9864f6ec6f21dcc81ec426877debf4b912f2f3bc5b0fc91e\",\"dweb:/ipfs/QmS1SHrZDfefX8EE7DdvszTY6VPCHydf4HM7NKJ2gP72e6\"]},\"contracts/lib/TWStrings.sol\":{\"keccak256\":\"0xef7e9954d888f99baffc10db1d9bf6a2beb66c842d81dea90352ddded22cbbf8\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://832415134684f5413f9d0f3f5536aa30848690cfe54769f7730a3807438f3bf9\",\"dweb:/ipfs/QmduTiUdtsnyJVMXpdomohEWDVg46aZhnS9uTURu4x1NYt\"]},\"contracts/prebuilts/drop/DropERC20.sol\":{\"keccak256\":\"0x67b31553bebd372da3c3c33f88c1463fa6cf10825bf69deaa2508436ef969c77\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b69717544dfb9a46484c52cb4118082e9bb6dbb12f16829f1c76fcc115184c90\",\"dweb:/ipfs/QmW1WVoAAvy3NeMWJ7ciZutiEoc18hVtrnvAFKzXUbts8U\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/governance/utils/IVotesUpgradeable.sol\":{\"keccak256\":\"0xe8e2d2f70db1913260634f710cc057d669b06eccf4dca27e18b79c3bbb101da6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dcc6f106f0058232420987d601f34bf004743c30806b63650a64399317c56268\",\"dweb:/ipfs/QmNYqmWHMk7ZHLkuYLPotB8bE5TVttvGL513KLGT8ayNoM\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x7c7ac0bc6c340a7f320524b9a4b4b079ee9da3c51258080d4bab237f329a427c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e7000057dd28a5fd92e5687c2ee6044181531bab0fcb0e5003cbe33ae024d06d\",\"dweb:/ipfs/QmZYhnjEQxVqVcLMJMS7VbhuMSCNM4YCgom1wg5borSp18\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":{\"keccak256\":\"0xea2c6f9d434127bf36b1e3e5ebaaf6d28a64dbaeea560508e570014e905a5ad2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3483370aa549810a946ace621a225616bb6d0b9ed22c3a99bbcf80dc4866ec39\",\"dweb:/ipfs/QmdgFnm6X2oQ574eJFLghVXVckwyC3SbiAUxXs934N1qvf\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/ERC20VotesUpgradeable.sol\":{\"keccak256\":\"0x440d61e36baa04fb3b2843f010fae4116f8e3b276f1f6629bd8327368e3743a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d90aa748f17c4bed78e83fbc3a3afe64541c0e052240c8cb9da081ac360d8b0\",\"dweb:/ipfs/QmaLWeLwt7mfUwd7TCZfLgFBxpDZFNnZ4249MB7yVPJg9r\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol\":{\"keccak256\":\"0x564385ebed633694decce3e13d687f3ac7e8eaef64f7a504bfb3f03ad210601f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41ed792f4ae2df9d1a32e57d6cde6d4e00232681ef573fde920bd7fa5f990aa9\",\"dweb:/ipfs/QmeQHwX8SxuqfMFAsLECuR9QkJMpceGTeymKdwQnVq9QdR\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol\":{\"keccak256\":\"0xcc70d8e2281fb3ff69e8ab242500f10142cd0a7fa8dd9e45882be270d4d09024\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17a4063bc918df0f7bb9cbf04c6f0bb4977afab3f2fc212bc138a178312a221d\",\"dweb:/ipfs/QmZMdvsHP5mDEAAdrK4bNeNh47TfmSFgN9qEBFTbie7zmm\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/CountersUpgradeable.sol\":{\"keccak256\":\"0x798741e231b22b81e2dd2eddaaf8832dee4baf5cd8e2dbaa5c1dd12a1c053c4d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c41e8a7a906b8f362c8b760a44edadc61782008ea2ecf377ac5b5325bf6c3912\",\"dweb:/ipfs/QmcXr19zuH3YLzD6RZNE6UTzvsKSckdxZQnagPoDGkCHu2\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/MulticallUpgradeable.sol\":{\"keccak256\":\"0xb8709268fac307114f6cbb5e3cee798d91cd0adfea4d337c4920f8f0b2414f15\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34975544d7bea644eee9ad6e9034b7bbbc0b165159b77f60d0c6004300ab601d\",\"dweb:/ipfs/QmUW5vLADhvVqSdBe96QFM6gzwtv9pagpaUkzXmaeQTWPQ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xea5339a7fff0ed42b45be56a88efdd0b2ddde9fa480dc99fef9a6a4c5b776863\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://841619682637df5579b4c396d281d6c55b26f1b1acce1d0ab67bead5e39cf60c\",\"dweb:/ipfs/QmNRtuKp43ZHJwswdyT3GivY4fDMvz3cxBe1FfDthG1JGj\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/ECDSAUpgradeable.sol\":{\"keccak256\":\"0xbf5daf926894541a40a64b43c3746aa1940c5a1b3b8d14a06465eea72a9b90cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fbdea6be4e36fc5406e81560d8f3f073a61c5d3cb5889b7c896ff5981e2128eb\",\"dweb:/ipfs/QmPpkPNkLEjDf4RZYjiypj9BrNyaXrb2U4pE9aq7sTG9km\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/draft-EIP712Upgradeable.sol\":{\"keccak256\":\"0xaf5a96100f421d61693605349511e43221d3c2e47d4b3efa87af2b936e2567fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://371fd95bad4416766089d3e621dee1fd86fece2b266ad3f9443fefe567e24e94\",\"dweb:/ipfs/QmNciwwtGev3Q8uVhnoE5PQUSCDpMp6KtVjiDgnGdqLmWX\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x3b39e1a87bb94b9145d91007bbd2c964438e99a659b4accc6ec6df6a1c62589a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c983bca009e0c413b39f851ca4728c20c42bcf5359252131d48f612ee5757a70\",\"dweb:/ipfs/QmP1c7MV6FdzTBYTFdosLNijvGa1dKeaGXy5Ax5UV381GZ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SafeCastUpgradeable.sol\":{\"keccak256\":\"0xd7ebe0f80affaa622b9efd95cc8db3e03e70d699176f7457b4a95e34a11f9834\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8cf00c5981b953e57af6f8d6dad38ff0c90c61f1f1b03042039a41797aa198b\",\"dweb:/ipfs/QmdngJRARxdVwxqG7vHDRf2QSBxK6294Ab16G6hsMoXqew\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.12+commit.f00d7308"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "struct IClaimCondition.ClaimCondition[]",
              "name": "claimConditions",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "startTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxClaimableSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "supplyClaimed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "merkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "metadata",
                  "type": "string"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "resetEligibility",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ClaimConditionsUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "prevURI",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "newURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ContractURIUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "delegator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "fromDelegate",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "toDelegate",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "DelegateChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "delegate",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "previousBalance",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newBalance",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DelegateVotesChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "platformFeeRecipient",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "flatFee",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "FlatPlatformFeeUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "maxTotalSupply",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MaxTotalSupplyUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "platformFeeRecipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "platformFeeBps",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PlatformFeeInfoUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "enum IPlatformFee.PlatformFeeType",
              "name": "feeType",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PlatformFeeTypeUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "PrimarySaleRecipientUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleAdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleGranted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleRevoked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "claimConditionIndex",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "claimer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "startTokenId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "quantityClaimed",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensClaimed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DEFAULT_ADMIN_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DOMAIN_SEPARATOR",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burnFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "pos",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "checkpoints",
          "outputs": [
            {
              "internalType": "struct ERC20VotesUpgradeable.Checkpoint",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "fromBlock",
                  "type": "uint32"
                },
                {
                  "internalType": "uint224",
                  "name": "votes",
                  "type": "uint224"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_quantity",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_currency",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "struct IDrop.AllowlistProof",
              "name": "_allowlistProof",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32[]",
                  "name": "proof",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "claim"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "claimCondition",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "currentStartId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "count",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "contractType",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "contractURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "contractVersion",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "delegatee",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "delegate"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "delegatee",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expiry",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "delegateBySig"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "delegates",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getActiveClaimConditionId",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_conditionId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getClaimConditionById",
          "outputs": [
            {
              "internalType": "struct IClaimCondition.ClaimCondition",
              "name": "condition",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "startTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxClaimableSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "supplyClaimed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "merkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "metadata",
                  "type": "string"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getFlatPlatformFeeInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "blockNumber",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPastTotalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "blockNumber",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPastVotes",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getPlatformFeeInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getPlatformFeeType",
          "outputs": [
            {
              "internalType": "enum IPlatformFee.PlatformFeeType",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleAdmin",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleMember",
          "outputs": [
            {
              "internalType": "address",
              "name": "member",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleMemberCount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "count",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_conditionId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_claimer",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getSupplyClaimedByWallet",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "supplyClaimedByWallet",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getVotes",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRole",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRoleWithSwitch",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_defaultAdmin",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_symbol",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_contractURI",
              "type": "string"
            },
            {
              "internalType": "address[]",
              "name": "_trustedForwarders",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "_saleRecipient",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_platformFeeRecipient",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "_platformFeeBps",
              "type": "uint128"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "forwarder",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isTrustedForwarder",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "maxTotalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes[]",
              "name": "data",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "multicall",
          "outputs": [
            {
              "internalType": "bytes[]",
              "name": "results",
              "type": "bytes[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "nonces",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "numCheckpoints",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "permit"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "primarySaleRecipient",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeRole"
        },
        {
          "inputs": [
            {
              "internalType": "struct IClaimCondition.ClaimCondition[]",
              "name": "_conditions",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "startTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxClaimableSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "supplyClaimed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "merkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "metadata",
                  "type": "string"
                }
              ]
            },
            {
              "internalType": "bool",
              "name": "_resetClaimEligibility",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setClaimConditions"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_uri",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setContractURI"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_platformFeeRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_flatFee",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setFlatPlatformFeeInfo"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_maxTotalSupply",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMaxTotalSupply"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_platformFeeRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_platformFeeBps",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPlatformFeeInfo"
        },
        {
          "inputs": [
            {
              "internalType": "enum IPlatformFee.PlatformFeeType",
              "name": "_feeType",
              "type": "uint8"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPlatformFeeType"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_saleRecipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPrimarySaleRecipient"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_conditionId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_claimer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_quantity",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_currency",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "struct IDrop.AllowlistProof",
              "name": "_allowlistProof",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32[]",
                  "name": "proof",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "verifyClaim",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isOverride",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "DOMAIN_SEPARATOR()": {
            "details": "See {IERC20Permit-DOMAIN_SEPARATOR}."
          },
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "burn(uint256)": {
            "details": "Destroys `amount` tokens from the caller. See {ERC20-_burn}."
          },
          "burnFrom(address,uint256)": {
            "details": "Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`."
          },
          "checkpoints(address,uint32)": {
            "details": "Get the `pos`-th checkpoint for `account`."
          },
          "claim(address,uint256,address,uint256,(bytes32[],uint256,uint256,address),bytes)": {
            "details": "Lets an account claim tokens."
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
          },
          "delegate(address)": {
            "details": "Delegate votes from the sender to `delegatee`."
          },
          "delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": {
            "details": "Delegates votes from signer to `delegatee`"
          },
          "delegates(address)": {
            "details": "Get the address `account` is currently delegating to."
          },
          "getActiveClaimConditionId()": {
            "details": "At any given moment, returns the uid for the active claim condition."
          },
          "getClaimConditionById(uint256)": {
            "details": "Returns the claim condition at the given uid."
          },
          "getFlatPlatformFeeInfo()": {
            "details": "Returns the platform fee bps and recipient."
          },
          "getPastTotalSupply(uint256)": {
            "details": "Retrieve the `totalSupply` at the end of `blockNumber`. Note, this value is the sum of all balances. It is but NOT the sum of all the delegated votes! Requirements: - `blockNumber` must have been already mined"
          },
          "getPastVotes(address,uint256)": {
            "details": "Retrieve the number of votes for `account` at the end of `blockNumber`. Requirements: - `blockNumber` must have been already mined"
          },
          "getPlatformFeeInfo()": {
            "details": "Returns the platform fee recipient and bps."
          },
          "getPlatformFeeType()": {
            "details": "Returns the platform fee bps and recipient."
          },
          "getRoleAdmin(bytes32)": {
            "details": "See {grantRole} and {revokeRole}.                  To change a role's admin, use {_setRoleAdmin}.",
            "params": {
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "getRoleMember(bytes32,uint256)": {
            "details": "Returns `member` who has `role`, at `index` of role-members list.                  See struct {RoleMembers}, and mapping {roleMembers}",
            "params": {
              "index": "Index in list of current members for the role.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            },
            "returns": {
              "member": " Address of account that has `role`"
            }
          },
          "getRoleMemberCount(bytes32)": {
            "details": "Returns `count` of accounts that have `role`.                  See struct {RoleMembers}, and mapping {roleMembers}",
            "params": {
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            },
            "returns": {
              "count": "  Total number of accounts that have `role`"
            }
          },
          "getSupplyClaimedByWallet(uint256,address)": {
            "details": "Returns the supply claimed by claimer for a given conditionId."
          },
          "getVotes(address)": {
            "details": "Gets the current votes balance for `account`"
          },
          "grantRole(bytes32,address)": {
            "details": "Caller must have admin role for the `role`.                  Emits {RoleGranted Event}.",
            "params": {
              "account": "Address of the account to which the role is being granted.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "hasRole(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`.",
            "params": {
              "account": "Address of the account for which the role is being checked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "hasRoleWithSwitch(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`.                  Role restrictions can be swtiched on and off:                      - If address(0) has ROLE, then the ROLE restrictions                        don't apply.                      - If address(0) does not have ROLE, then the ROLE                        restrictions will apply.",
            "params": {
              "account": "Address of the account for which the role is being checked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
          },
          "initialize(address,string,string,string,address[],address,address,uint128)": {
            "details": "Initializes the contract, like a constructor."
          },
          "multicall(bytes[])": {
            "details": "Receives and executes a batch of function calls on this contract."
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "nonces(address)": {
            "details": "See {IERC20Permit-nonces}."
          },
          "numCheckpoints(address)": {
            "details": "Get number of checkpoints for `account`."
          },
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "details": "See {IERC20Permit-permit}."
          },
          "primarySaleRecipient()": {
            "details": "Returns primary sale recipient address."
          },
          "renounceRole(bytes32,address)": {
            "details": "Caller must have the `role`, with caller being the same as `account`.                  Emits {RoleRevoked Event}.",
            "params": {
              "account": "Address of the account from which the role is being revoked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "revokeRole(bytes32,address)": {
            "details": "Caller must have admin role for the `role`.                  Emits {RoleRevoked Event}.",
            "params": {
              "account": "Address of the account from which the role is being revoked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "setClaimConditions((uint256,uint256,uint256,uint256,bytes32,uint256,address,string)[],bool)": {
            "details": "Lets a contract admin set claim conditions."
          },
          "setContractURI(string)": {
            "details": "Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.",
            "params": {
              "_uri": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "setMaxTotalSupply(uint256)": {
            "details": "Lets a contract admin set the global maximum supply for collection's NFTs."
          },
          "setPlatformFeeInfo(address,uint256)": {
            "details": "Caller should be authorized to set platform fee info.                  See {_canSetPlatformFeeInfo}.                  Emits {PlatformFeeInfoUpdated Event}; See {_setupPlatformFeeInfo}.",
            "params": {
              "_platformFeeBps": "Updated platformFeeBps.",
              "_platformFeeRecipient": "Address to be set as new platformFeeRecipient."
            }
          },
          "setPrimarySaleRecipient(address)": {
            "details": "Caller should be authorized to set primary sales info.                  See {_canSetPrimarySaleRecipient}.                  Emits {PrimarySaleRecipientUpdated Event}; See {_setupPrimarySaleRecipient}.",
            "params": {
              "_saleRecipient": "Address to be set as new recipient of primary sales."
            }
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
          },
          "verifyClaim(uint256,address,uint256,address,uint256,(bytes32[],uint256,uint256,address))": {
            "details": "Checks a request to claim NFTs against the active claim condition's criteria."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "contractURI()": {
            "notice": "Returns the contract metadata URI."
          },
          "getRoleAdmin(bytes32)": {
            "notice": "Returns the admin role that controls the specified role."
          },
          "getRoleMember(bytes32,uint256)": {
            "notice": "Returns the role-member from a list of members for a role,                  at a given index."
          },
          "getRoleMemberCount(bytes32)": {
            "notice": "Returns total number of accounts that have a role."
          },
          "grantRole(bytes32,address)": {
            "notice": "Grants a role to an account, if not previously granted."
          },
          "hasRole(bytes32,address)": {
            "notice": "Checks whether an account has a particular role."
          },
          "hasRoleWithSwitch(bytes32,address)": {
            "notice": "Checks whether an account has a particular role;                  role restrictions can be swtiched on and off."
          },
          "renounceRole(bytes32,address)": {
            "notice": "Revokes role from the account."
          },
          "revokeRole(bytes32,address)": {
            "notice": "Revokes role from an account."
          },
          "setContractURI(string)": {
            "notice": "Lets a contract admin set the URI for contract-level metadata."
          },
          "setFlatPlatformFeeInfo(address,uint256)": {
            "notice": "Lets a module admin set a flat fee on primary sales."
          },
          "setPlatformFeeInfo(address,uint256)": {
            "notice": "Updates the platform fee recipient and bps."
          },
          "setPlatformFeeType(uint8)": {
            "notice": "Lets a module admin set platform fee type."
          },
          "setPrimarySaleRecipient(address)": {
            "notice": "Updates primary sale recipient."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=lib/chainlink/",
        "@ds-test/=lib/ds-test/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@std/=lib/forge-std/src/",
        "@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/",
        "ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/",
        "ERC721A/=lib/ERC721A/contracts/",
        "chainlink/=lib/chainlink/",
        "contracts/=contracts/",
        "ds-test/=lib/ds-test/src/",
        "dynamic-contracts/=lib/dynamic-contracts/src/",
        "erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/",
        "erc721a-upgradeable/=lib/ERC721A-Upgradeable/",
        "erc721a/=lib/ERC721A/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/prebuilts/drop/DropERC20.sol": "DropERC20"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/eip/interface/IERC20.sol": {
        "keccak256": "0x5bdd9dd97ba7d9d7c9a2953db287e4d9d7fa93a27a96bc2e72a8da4919b6f7ff",
        "urls": [
          "bzz-raw://45527c265ee5de6bbb3ecfc052e7b1175531a82c2ac16172020aee855f7dd592",
          "dweb:/ipfs/QmVZthqbG916qUQSwv1LE8bB58ZGQ1VfQbLbbRV5urfEYA"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/ContractMetadata.sol": {
        "keccak256": "0xf53ab08ec3057056872c15e35a5610f7a43426bd2829786aed006d527177adfe",
        "urls": [
          "bzz-raw://ee132ae5efdd372152febfcd8fd3a7cb82c7019367d92c886f5096003a79f392",
          "dweb:/ipfs/QmRW1cGWmZAu57huZpTUwsWB8AxUFrBp6g4NqozXpbWsR6"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Drop.sol": {
        "keccak256": "0x11e1f936e81e51b69d5130acc57a1b95c6428f55265492a7f8bbc1e76a7f9acc",
        "urls": [
          "bzz-raw://9d1ac7b9be364630343fc9d0509c67e8ba9de07a28a9520461a4c81fe122701c",
          "dweb:/ipfs/Qme1eucpamqAkL2xFfcYHWPmo4aNk8SNuWSfk2R2uW7pYZ"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Permissions.sol": {
        "keccak256": "0xe7e18181f2d2c8bae4afc7ee69ce1d547e7aa583182e8e0853ca33c49a28c04d",
        "urls": [
          "bzz-raw://75d5f5a9356c290e398a5dd05914b59c3d09e6fedde2da80b6f1012aedf323f8",
          "dweb:/ipfs/QmNrrf8Uyq33XBsE2NqVTW6HVX3XixFTjCG8KGbGxdEE84"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/PermissionsEnumerable.sol": {
        "keccak256": "0x434a6ffc16ddc437ffb37b8fbe4c9696385252f15a617c4606b8c5e10561caf3",
        "urls": [
          "bzz-raw://1a9d4dac4bf2ae3c3c086af1956dc25e8b149b0914125e660cc0648791c247cb",
          "dweb:/ipfs/QmTMEggPdBea1JCamsShwRf3en2FgVTXNTPJ2isFtBk4Kk"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/PlatformFee.sol": {
        "keccak256": "0x8db4537648987b88dce356120fc96c48cffe53eaa5988b9a7e8aa023f4258163",
        "urls": [
          "bzz-raw://9e30009e63be23e60e92bf25582143596e3f01b2a1f7e121664559119a9f5890",
          "dweb:/ipfs/Qma3bi4NfCNZaukacNQMQ3j5kXn6Ym4mDa57Tqc26ssahE"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/PrimarySale.sol": {
        "keccak256": "0x9ef1ad82fadf988a07f4034b92ccdb3281682693e41759a79042814d36095f42",
        "urls": [
          "bzz-raw://0d962b48453e1f50b808193135c2f14265324fa8b75fe3b405ef7836e38921f7",
          "dweb:/ipfs/QmZDLNsZQj9kNcb15nBuWRpPwDdDvJS2gtFwqEs2Lwxb1N"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IClaimCondition.sol": {
        "keccak256": "0x391e69970031edb30dfa59f8db33c7446b349cd5ec505fd99f0f0b672b19e6d6",
        "urls": [
          "bzz-raw://fd9eafca6098421f3aa25bf0a0b24386facc764b7ecb8e6ce4a890afa3c6d459",
          "dweb:/ipfs/QmPXTSX2ie5wsZ6FyXWS4YMa7aPpYNyza9Rym1n799B5LU"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IClaimConditionMultiPhase.sol": {
        "keccak256": "0x8388214d6cc8f1fd481aed7e062a8b23d5959e870a56076017fcf474404dbbfa",
        "urls": [
          "bzz-raw://54c039ba9f0e674a6bdbb0ab015ad4054feffaea7eb3cc7c485aa95761156125",
          "dweb:/ipfs/QmTya89XYsc1iGAhfsHeZkgGaAv7ivA5Vr4jrGCifYHmKh"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IContractMetadata.sol": {
        "keccak256": "0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2",
        "urls": [
          "bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a",
          "dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IDrop.sol": {
        "keccak256": "0xa8fa4a9fde50a512383c1608295dab741357852822bf089b64dfc8e89041bbad",
        "urls": [
          "bzz-raw://67e26a8f07f05daeebae7a4a652bfe90d4b62d057b737e00a9d3c1782f5bb093",
          "dweb:/ipfs/QmR9b1N5BAuRibaK1iJkyUD7kXE7F3GocjM985oT9wPdZo"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPermissions.sol": {
        "keccak256": "0xc0cd1f87bac474a06f85e2b341b9b57662aee957fc24180d42c872481c2f2ae3",
        "urls": [
          "bzz-raw://7dec3eed451d63867531d693f0be3279fa2c9aef3130f0826c3520c06820fa5d",
          "dweb:/ipfs/QmTYANrcPdd9SCe99DWsKJ19evNRQKQGZeoS1Keew4M2cS"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPermissionsEnumerable.sol": {
        "keccak256": "0x2e742c18a4481bad41d56424cd16c52def2fb415f69e5fb5f67d8d979300ff95",
        "urls": [
          "bzz-raw://d9be33bb865e3e82aca540a3e38cbc2bf2e431f9d1bf39c50d6c757e7b7bf3ee",
          "dweb:/ipfs/Qmdad1Xqj5SQ44Bk4bwD2uA36XnGHtqnVYSomKZQvnUBVG"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPlatformFee.sol": {
        "keccak256": "0x8c23c2a223a3b94ccce125b418e5fabfb631695d927e336512bc8dca61bbc736",
        "urls": [
          "bzz-raw://86dd8c93e75cb3a44d64c873154ee3857b604d1b07a9e52c120870172c2e9a34",
          "dweb:/ipfs/QmWXxEi7ygoRjN8yWYfVGbfhuwVg8bkLoHNzr3xMNa1VRv"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPrimarySale.sol": {
        "keccak256": "0x77c89cb8d9b781b0a08b1fa81c95a0dd5c19200b2fb0dc884c1084b931624004",
        "urls": [
          "bzz-raw://a37b042af11a08ba5518dadf72c91745d1b5f42b1c20ea5282492bfd18f53869",
          "dweb:/ipfs/QmWEYYG5VqR8MRfr2rydDV98GLKmaJtCC8G1W7MzJ9qFnF"
        ],
        "license": "Apache-2.0"
      },
      "contracts/external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol": {
        "keccak256": "0xdbc96b1264d2e2bd82cb7e697056929325e09d1641321145a8cec53b22b9567d",
        "urls": [
          "bzz-raw://7ca7ccf947d21d98878ec18e941b750cd2ae7c563e6d2a707da4f806038d67c8",
          "dweb:/ipfs/QmYVLYUPMD3b95vKrS5yjxcz2MDNNzkWJY9xc9bc9oTZdh"
        ],
        "license": "MIT"
      },
      "contracts/external-deps/openzeppelin/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xa6149938a7c7c8af4244743aeaafcfb1fd9ce15ad45de58fa9576f0ed5599b2c",
        "urls": [
          "bzz-raw://839aa4ea6ef6d1972881bfd7420a9ddcd2f37139e3f0bf25310f93f48410702d",
          "dweb:/ipfs/QmSH65kStfbgMbfjFdfJqV412omPy6nB1JMvMt9q7SsytW"
        ],
        "license": "MIT"
      },
      "contracts/infra/interface/IWETH.sol": {
        "keccak256": "0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b",
        "urls": [
          "bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1",
          "dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/CurrencyTransferLib.sol": {
        "keccak256": "0x4a30bc9a8cd6cc8b855621fb1a651e2c3a1639b0ad153f1139c3ba463605672d",
        "urls": [
          "bzz-raw://417cc64ec6393f3cc89981ca9c32bbcc444a5f91363d69f84dd8ace888b2b859",
          "dweb:/ipfs/QmZeaQsYGx4VNoP8e1fcwC87PwvyakheWYeuwEwhFSJnvB"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/MerkleProof.sol": {
        "keccak256": "0xfeb51ecaba6f9c1649a143825dc3b7ca0eb9edff7787c7a54957dfd542f7ece0",
        "urls": [
          "bzz-raw://8819ab0f7546a6a0dc126d5dbf019ba015563220689f661b1da4174f7ce87bbf",
          "dweb:/ipfs/QmT6Q9YQGMJbCWhE6G4ze8dsqjMyewnErTNGgLFSAHkFU7"
        ],
        "license": "Apache 2.0"
      },
      "contracts/lib/TWAddress.sol": {
        "keccak256": "0x460f032cf3bf43d586e126ab2ec8be4335767f497ccb699741546a1cfba94a7e",
        "urls": [
          "bzz-raw://28fcbf6dde6c2eeb9864f6ec6f21dcc81ec426877debf4b912f2f3bc5b0fc91e",
          "dweb:/ipfs/QmS1SHrZDfefX8EE7DdvszTY6VPCHydf4HM7NKJ2gP72e6"
        ],
        "license": "Apache 2.0"
      },
      "contracts/lib/TWStrings.sol": {
        "keccak256": "0xef7e9954d888f99baffc10db1d9bf6a2beb66c842d81dea90352ddded22cbbf8",
        "urls": [
          "bzz-raw://832415134684f5413f9d0f3f5536aa30848690cfe54769f7730a3807438f3bf9",
          "dweb:/ipfs/QmduTiUdtsnyJVMXpdomohEWDVg46aZhnS9uTURu4x1NYt"
        ],
        "license": "Apache 2.0"
      },
      "contracts/prebuilts/drop/DropERC20.sol": {
        "keccak256": "0x67b31553bebd372da3c3c33f88c1463fa6cf10825bf69deaa2508436ef969c77",
        "urls": [
          "bzz-raw://b69717544dfb9a46484c52cb4118082e9bb6dbb12f16829f1c76fcc115184c90",
          "dweb:/ipfs/QmW1WVoAAvy3NeMWJ7ciZutiEoc18hVtrnvAFKzXUbts8U"
        ],
        "license": "Apache-2.0"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/governance/utils/IVotesUpgradeable.sol": {
        "keccak256": "0xe8e2d2f70db1913260634f710cc057d669b06eccf4dca27e18b79c3bbb101da6",
        "urls": [
          "bzz-raw://dcc6f106f0058232420987d601f34bf004743c30806b63650a64399317c56268",
          "dweb:/ipfs/QmNYqmWHMk7ZHLkuYLPotB8bE5TVttvGL513KLGT8ayNoM"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e",
        "urls": [
          "bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497",
          "dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol": {
        "keccak256": "0x7c7ac0bc6c340a7f320524b9a4b4b079ee9da3c51258080d4bab237f329a427c",
        "urls": [
          "bzz-raw://e7000057dd28a5fd92e5687c2ee6044181531bab0fcb0e5003cbe33ae024d06d",
          "dweb:/ipfs/QmZYhnjEQxVqVcLMJMS7VbhuMSCNM4YCgom1wg5borSp18"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol": {
        "keccak256": "0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff",
        "urls": [
          "bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2",
          "dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/ERC20BurnableUpgradeable.sol": {
        "keccak256": "0xea2c6f9d434127bf36b1e3e5ebaaf6d28a64dbaeea560508e570014e905a5ad2",
        "urls": [
          "bzz-raw://3483370aa549810a946ace621a225616bb6d0b9ed22c3a99bbcf80dc4866ec39",
          "dweb:/ipfs/QmdgFnm6X2oQ574eJFLghVXVckwyC3SbiAUxXs934N1qvf"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/ERC20VotesUpgradeable.sol": {
        "keccak256": "0x440d61e36baa04fb3b2843f010fae4116f8e3b276f1f6629bd8327368e3743a3",
        "urls": [
          "bzz-raw://9d90aa748f17c4bed78e83fbc3a3afe64541c0e052240c8cb9da081ac360d8b0",
          "dweb:/ipfs/QmaLWeLwt7mfUwd7TCZfLgFBxpDZFNnZ4249MB7yVPJg9r"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/IERC20MetadataUpgradeable.sol": {
        "keccak256": "0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb",
        "urls": [
          "bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d",
          "dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol": {
        "keccak256": "0x564385ebed633694decce3e13d687f3ac7e8eaef64f7a504bfb3f03ad210601f",
        "urls": [
          "bzz-raw://41ed792f4ae2df9d1a32e57d6cde6d4e00232681ef573fde920bd7fa5f990aa9",
          "dweb:/ipfs/QmeQHwX8SxuqfMFAsLECuR9QkJMpceGTeymKdwQnVq9QdR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol": {
        "keccak256": "0xcc70d8e2281fb3ff69e8ab242500f10142cd0a7fa8dd9e45882be270d4d09024",
        "urls": [
          "bzz-raw://17a4063bc918df0f7bb9cbf04c6f0bb4977afab3f2fc212bc138a178312a221d",
          "dweb:/ipfs/QmZMdvsHP5mDEAAdrK4bNeNh47TfmSFgN9qEBFTbie7zmm"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3",
        "urls": [
          "bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4",
          "dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/CountersUpgradeable.sol": {
        "keccak256": "0x798741e231b22b81e2dd2eddaaf8832dee4baf5cd8e2dbaa5c1dd12a1c053c4d",
        "urls": [
          "bzz-raw://c41e8a7a906b8f362c8b760a44edadc61782008ea2ecf377ac5b5325bf6c3912",
          "dweb:/ipfs/QmcXr19zuH3YLzD6RZNE6UTzvsKSckdxZQnagPoDGkCHu2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/MulticallUpgradeable.sol": {
        "keccak256": "0xb8709268fac307114f6cbb5e3cee798d91cd0adfea4d337c4920f8f0b2414f15",
        "urls": [
          "bzz-raw://34975544d7bea644eee9ad6e9034b7bbbc0b165159b77f60d0c6004300ab601d",
          "dweb:/ipfs/QmUW5vLADhvVqSdBe96QFM6gzwtv9pagpaUkzXmaeQTWPQ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol": {
        "keccak256": "0xea5339a7fff0ed42b45be56a88efdd0b2ddde9fa480dc99fef9a6a4c5b776863",
        "urls": [
          "bzz-raw://841619682637df5579b4c396d281d6c55b26f1b1acce1d0ab67bead5e39cf60c",
          "dweb:/ipfs/QmNRtuKp43ZHJwswdyT3GivY4fDMvz3cxBe1FfDthG1JGj"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/ECDSAUpgradeable.sol": {
        "keccak256": "0xbf5daf926894541a40a64b43c3746aa1940c5a1b3b8d14a06465eea72a9b90cc",
        "urls": [
          "bzz-raw://fbdea6be4e36fc5406e81560d8f3f073a61c5d3cb5889b7c896ff5981e2128eb",
          "dweb:/ipfs/QmPpkPNkLEjDf4RZYjiypj9BrNyaXrb2U4pE9aq7sTG9km"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/draft-EIP712Upgradeable.sol": {
        "keccak256": "0xaf5a96100f421d61693605349511e43221d3c2e47d4b3efa87af2b936e2567fc",
        "urls": [
          "bzz-raw://371fd95bad4416766089d3e621dee1fd86fece2b266ad3f9443fefe567e24e94",
          "dweb:/ipfs/QmNciwwtGev3Q8uVhnoE5PQUSCDpMp6KtVjiDgnGdqLmWX"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/MathUpgradeable.sol": {
        "keccak256": "0x3b39e1a87bb94b9145d91007bbd2c964438e99a659b4accc6ec6df6a1c62589a",
        "urls": [
          "bzz-raw://c983bca009e0c413b39f851ca4728c20c42bcf5359252131d48f612ee5757a70",
          "dweb:/ipfs/QmP1c7MV6FdzTBYTFdosLNijvGa1dKeaGXy5Ax5UV381GZ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SafeCastUpgradeable.sol": {
        "keccak256": "0xd7ebe0f80affaa622b9efd95cc8db3e03e70d699176f7457b4a95e34a11f9834",
        "urls": [
          "bzz-raw://f8cf00c5981b953e57af6f8d6dad38ff0c90c61f1f1b03042039a41797aa198b",
          "dweb:/ipfs/QmdngJRARxdVwxqG7vHDRf2QSBxK6294Ab16G6hsMoXqew"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/prebuilts/drop/DropERC20.sol",
    "id": 73420,
    "exportedSymbols": {
      "AddressUpgradeable": [
        155768
      ],
      "ContextUpgradeable": [
        156044
      ],
      "ContractMetadata": [
        17526
      ],
      "CountersUpgradeable": [
        156118
      ],
      "CurrencyTransferLib": [
        63578
      ],
      "Drop": [
        18332
      ],
      "DropERC20": [
        73419
      ],
      "ECDSAUpgradeable": [
        157055
      ],
      "EIP712Upgradeable": [
        157205
      ],
      "ERC20BurnableUpgradeable": [
        152846
      ],
      "ERC20PermitUpgradeable": [
        153719
      ],
      "ERC20Upgradeable": [
        152704
      ],
      "ERC20VotesUpgradeable": [
        153503
      ],
      "ERC2771ContextUpgradeable": [
        45607
      ],
      "IClaimCondition": [
        32285
      ],
      "IClaimConditionMultiPhase": [
        32308
      ],
      "IContractMetadata": [
        32437
      ],
      "IDrop": [
        32573
      ],
      "IERC20": [
        13899
      ],
      "IERC20MetadataUpgradeable": [
        153528
      ],
      "IERC20PermitUpgradeable": [
        153755
      ],
      "IERC20Upgradeable": [
        152782
      ],
      "IPermissions": [
        33256
      ],
      "IPermissionsEnumerable": [
        33281
      ],
      "IPlatformFee": [
        33324
      ],
      "IPrimarySale": [
        33345
      ],
      "IVotesUpgradeable": [
        150029
      ],
      "IWETH": [
        54557
      ],
      "Initializable": [
        150199
      ],
      "MathUpgradeable": [
        157765
      ],
      "MerkleProof": [
        63678
      ],
      "MulticallUpgradeable": [
        156227
      ],
      "Permissions": [
        21500
      ],
      "PermissionsEnumerable": [
        21799
      ],
      "PlatformFee": [
        22005
      ],
      "PrimarySale": [
        22067
      ],
      "SafeCastUpgradeable": [
        159616
      ],
      "SafeERC20": [
        48369
      ],
      "StringsUpgradeable": [
        156453
      ],
      "TWAddress": [
        64152
      ],
      "TWStrings": [
        64852
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:9468:326",
    "nodes": [
      {
        "id": 72858,
        "nodeType": "PragmaDirective",
        "src": "39:24:326",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".11"
        ]
      },
      {
        "id": 72859,
        "nodeType": "ImportDirective",
        "src": "774:97:326",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/ERC20BurnableUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 73420,
        "sourceUnit": 152847,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 72860,
        "nodeType": "ImportDirective",
        "src": "872:94:326",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/ERC20VotesUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 73420,
        "sourceUnit": 153504,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 72861,
        "nodeType": "ImportDirective",
        "src": "968:76:326",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/utils/MulticallUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/utils/MulticallUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 73420,
        "sourceUnit": 156228,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 72862,
        "nodeType": "ImportDirective",
        "src": "1045:74:326",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 73420,
        "sourceUnit": 156454,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 72863,
        "nodeType": "ImportDirective",
        "src": "1169:79:326",
        "nodes": [],
        "absolutePath": "contracts/external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol",
        "file": "../../external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 73420,
        "sourceUnit": 45608,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 72864,
        "nodeType": "ImportDirective",
        "src": "1249:43:326",
        "nodes": [],
        "absolutePath": "contracts/lib/CurrencyTransferLib.sol",
        "file": "../../lib/CurrencyTransferLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 73420,
        "sourceUnit": 63579,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 72865,
        "nodeType": "ImportDirective",
        "src": "1334:46:326",
        "nodes": [],
        "absolutePath": "contracts/extension/ContractMetadata.sol",
        "file": "../../extension/ContractMetadata.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 73420,
        "sourceUnit": 17527,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 72866,
        "nodeType": "ImportDirective",
        "src": "1381:41:326",
        "nodes": [],
        "absolutePath": "contracts/extension/PlatformFee.sol",
        "file": "../../extension/PlatformFee.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 73420,
        "sourceUnit": 22006,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 72867,
        "nodeType": "ImportDirective",
        "src": "1423:41:326",
        "nodes": [],
        "absolutePath": "contracts/extension/PrimarySale.sol",
        "file": "../../extension/PrimarySale.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 73420,
        "sourceUnit": 22068,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 72868,
        "nodeType": "ImportDirective",
        "src": "1465:51:326",
        "nodes": [],
        "absolutePath": "contracts/extension/PermissionsEnumerable.sol",
        "file": "../../extension/PermissionsEnumerable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 73420,
        "sourceUnit": 21800,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 72869,
        "nodeType": "ImportDirective",
        "src": "1517:34:326",
        "nodes": [],
        "absolutePath": "contracts/extension/Drop.sol",
        "file": "../../extension/Drop.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 73420,
        "sourceUnit": 18333,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 73419,
        "nodeType": "ContractDefinition",
        "src": "1553:7953:326",
        "nodes": [
          {
            "id": 72892,
            "nodeType": "UsingForDirective",
            "src": "1806:37:326",
            "nodes": [],
            "libraryName": {
              "id": 72890,
              "name": "StringsUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 156453,
              "src": "1812:18:326"
            },
            "typeName": {
              "id": 72891,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1835:7:326",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 72895,
            "nodeType": "VariableDeclaration",
            "src": "2136:28:326",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 72893,
              "nodeType": "StructuredDocumentation",
              "src": "2033:98:326",
              "text": "@dev Only transfers to or from TRANSFER_ROLE holders are valid, when transfers are restricted."
            },
            "mutability": "mutable",
            "name": "transferRole",
            "nameLocation": "2152:12:326",
            "scope": 73419,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 72894,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2136:7:326",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "id": 72899,
            "nodeType": "VariableDeclaration",
            "src": "2216:41:326",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 72896,
              "nodeType": "StructuredDocumentation",
              "src": "2171:40:326",
              "text": "@dev Max bps in the thirdweb system."
            },
            "mutability": "constant",
            "name": "MAX_BPS",
            "nameLocation": "2241:7:326",
            "scope": 73419,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 72897,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2216:7:326",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31305f303030",
              "id": 72898,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2251:6:326",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000_by_1",
                "typeString": "int_const 10000"
              },
              "value": "10_000"
            },
            "visibility": "private"
          },
          {
            "id": 72902,
            "nodeType": "VariableDeclaration",
            "src": "2312:29:326",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 72900,
              "nodeType": "StructuredDocumentation",
              "src": "2264:43:326",
              "text": "@dev Global max total supply of tokens."
            },
            "functionSelector": "2ab4d052",
            "mutability": "mutable",
            "name": "maxTotalSupply",
            "nameLocation": "2327:14:326",
            "scope": 73419,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 72901,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2312:7:326",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 72907,
            "nodeType": "EventDefinition",
            "src": "2418:52:326",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 72903,
              "nodeType": "StructuredDocumentation",
              "src": "2348:65:326",
              "text": "@dev Emitted when the global max supply of tokens is updated."
            },
            "name": "MaxTotalSupplyUpdated",
            "nameLocation": "2424:21:326",
            "parameters": {
              "id": 72906,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 72905,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "maxTotalSupply",
                  "nameLocation": "2454:14:326",
                  "nodeType": "VariableDeclaration",
                  "scope": 72907,
                  "src": "2446:22:326",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 72904,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2446:7:326",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2445:24:326"
            }
          },
          {
            "id": 72913,
            "nodeType": "FunctionDefinition",
            "src": "2668:28:326",
            "nodes": [],
            "body": {
              "id": 72912,
              "nodeType": "Block",
              "src": "2694:2:326",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "id": 72910,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 72909,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 150119,
                  "src": "2682:11:326"
                },
                "nodeType": "ModifierInvocation",
                "src": "2682:11:326"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 72908,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2679:2:326"
            },
            "returnParameters": {
              "id": 72911,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2694:0:326"
            },
            "scope": 73419,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 72991,
            "nodeType": "FunctionDefinition",
            "src": "2761:958:326",
            "nodes": [],
            "body": {
              "id": 72990,
              "nodeType": "Block",
              "src": "3084:635:326",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    72937
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 72937,
                      "mutability": "mutable",
                      "name": "_transferRole",
                      "nameLocation": "3102:13:326",
                      "nodeType": "VariableDeclaration",
                      "scope": 72990,
                      "src": "3094:21:326",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 72936,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3094:7:326",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 72941,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "5452414e534645525f524f4c45",
                        "id": 72939,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3128:15:326",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c",
                          "typeString": "literal_string \"TRANSFER_ROLE\""
                        },
                        "value": "TRANSFER_ROLE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c",
                          "typeString": "literal_string \"TRANSFER_ROLE\""
                        }
                      ],
                      "id": 72938,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "3118:9:326",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 72940,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3118:26:326",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3094:50:326"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 72943,
                        "name": "_trustedForwarders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72925,
                        "src": "3252:18:326",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      ],
                      "id": 72942,
                      "name": "__ERC2771Context_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45514,
                      "src": "3230:21:326",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address[] memory)"
                      }
                    },
                    "id": 72944,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3230:41:326",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 72945,
                  "nodeType": "ExpressionStatement",
                  "src": "3230:41:326"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 72947,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72918,
                        "src": "3300:5:326",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 72946,
                      "name": "__ERC20Permit_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 153576,
                      "src": "3281:18:326",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 72948,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3281:25:326",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 72949,
                  "nodeType": "ExpressionStatement",
                  "src": "3281:25:326"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 72951,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72918,
                        "src": "3339:5:326",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 72952,
                        "name": "_symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72920,
                        "src": "3346:7:326",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 72950,
                      "name": "__ERC20_init_unchained",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 152158,
                      "src": "3316:22:326",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 72953,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3316:38:326",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 72954,
                  "nodeType": "ExpressionStatement",
                  "src": "3316:38:326"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 72956,
                        "name": "_contractURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72922,
                        "src": "3383:12:326",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 72955,
                      "name": "_setupContractURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17519,
                      "src": "3365:17:326",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 72957,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3365:31:326",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 72958,
                  "nodeType": "ExpressionStatement",
                  "src": "3365:31:326"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 72960,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21176,
                        "src": "3418:18:326",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 72961,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72916,
                        "src": "3438:13:326",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 72959,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        21723
                      ],
                      "referencedDeclaration": 21723,
                      "src": "3407:10:326",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 72962,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3407:45:326",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 72963,
                  "nodeType": "ExpressionStatement",
                  "src": "3407:45:326"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 72965,
                        "name": "_transferRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72937,
                        "src": "3473:13:326",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 72966,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72916,
                        "src": "3488:13:326",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 72964,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        21723
                      ],
                      "referencedDeclaration": 21723,
                      "src": "3462:10:326",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 72967,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3462:40:326",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 72968,
                  "nodeType": "ExpressionStatement",
                  "src": "3462:40:326"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 72970,
                        "name": "_transferRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72937,
                        "src": "3523:13:326",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 72973,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3546:1:326",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 72972,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3538:7:326",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 72971,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3538:7:326",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 72974,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3538:10:326",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 72969,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        21723
                      ],
                      "referencedDeclaration": 21723,
                      "src": "3512:10:326",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 72975,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3512:37:326",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 72976,
                  "nodeType": "ExpressionStatement",
                  "src": "3512:37:326"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 72978,
                        "name": "_platformFeeRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72929,
                        "src": "3582:21:326",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 72979,
                        "name": "_platformFeeBps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72931,
                        "src": "3605:15:326",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 72977,
                      "name": "_setupPlatformFeeInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21916,
                      "src": "3560:21:326",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 72980,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3560:61:326",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 72981,
                  "nodeType": "ExpressionStatement",
                  "src": "3560:61:326"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 72983,
                        "name": "_saleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72927,
                        "src": "3658:14:326",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 72982,
                      "name": "_setupPrimarySaleRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22060,
                      "src": "3631:26:326",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 72984,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3631:42:326",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 72985,
                  "nodeType": "ExpressionStatement",
                  "src": "3631:42:326"
                },
                {
                  "expression": {
                    "id": 72988,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 72986,
                      "name": "transferRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 72895,
                      "src": "3684:12:326",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 72987,
                      "name": "_transferRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 72937,
                      "src": "3699:13:326",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "3684:28:326",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 72989,
                  "nodeType": "ExpressionStatement",
                  "src": "3684:28:326"
                }
              ]
            },
            "documentation": {
              "id": 72914,
              "nodeType": "StructuredDocumentation",
              "src": "2702:54:326",
              "text": "@dev Initializes the contract, like a constructor."
            },
            "functionSelector": "49c5c5b6",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 72934,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 72933,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 150119,
                  "src": "3072:11:326"
                },
                "nodeType": "ModifierInvocation",
                "src": "3072:11:326"
              }
            ],
            "name": "initialize",
            "nameLocation": "2770:10:326",
            "parameters": {
              "id": 72932,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 72916,
                  "mutability": "mutable",
                  "name": "_defaultAdmin",
                  "nameLocation": "2798:13:326",
                  "nodeType": "VariableDeclaration",
                  "scope": 72991,
                  "src": "2790:21:326",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 72915,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2790:7:326",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 72918,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "2835:5:326",
                  "nodeType": "VariableDeclaration",
                  "scope": 72991,
                  "src": "2821:19:326",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 72917,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2821:6:326",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 72920,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "2864:7:326",
                  "nodeType": "VariableDeclaration",
                  "scope": 72991,
                  "src": "2850:21:326",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 72919,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2850:6:326",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 72922,
                  "mutability": "mutable",
                  "name": "_contractURI",
                  "nameLocation": "2895:12:326",
                  "nodeType": "VariableDeclaration",
                  "scope": 72991,
                  "src": "2881:26:326",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 72921,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2881:6:326",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 72925,
                  "mutability": "mutable",
                  "name": "_trustedForwarders",
                  "nameLocation": "2934:18:326",
                  "nodeType": "VariableDeclaration",
                  "scope": 72991,
                  "src": "2917:35:326",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 72923,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2917:7:326",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 72924,
                    "nodeType": "ArrayTypeName",
                    "src": "2917:9:326",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 72927,
                  "mutability": "mutable",
                  "name": "_saleRecipient",
                  "nameLocation": "2970:14:326",
                  "nodeType": "VariableDeclaration",
                  "scope": 72991,
                  "src": "2962:22:326",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 72926,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2962:7:326",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 72929,
                  "mutability": "mutable",
                  "name": "_platformFeeRecipient",
                  "nameLocation": "3002:21:326",
                  "nodeType": "VariableDeclaration",
                  "scope": 72991,
                  "src": "2994:29:326",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 72928,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2994:7:326",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 72931,
                  "mutability": "mutable",
                  "name": "_platformFeeBps",
                  "nameLocation": "3041:15:326",
                  "nodeType": "VariableDeclaration",
                  "scope": 72991,
                  "src": "3033:23:326",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 72930,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "3033:7:326",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2780:282:326"
            },
            "returnParameters": {
              "id": 72935,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3084:0:326"
            },
            "scope": 73419,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 73002,
            "nodeType": "FunctionDefinition",
            "src": "3910:100:326",
            "nodes": [],
            "body": {
              "id": 73001,
              "nodeType": "Block",
              "src": "3966:44:326",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "44726f704552433230",
                        "id": 72998,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3991:11:326",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dfbb3c555ae493474b67a295ee4f5abc15e7f7131b2a17d805d5b3c9795be7dd",
                          "typeString": "literal_string \"DropERC20\""
                        },
                        "value": "DropERC20"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_dfbb3c555ae493474b67a295ee4f5abc15e7f7131b2a17d805d5b3c9795be7dd",
                          "typeString": "literal_string \"DropERC20\""
                        }
                      ],
                      "id": 72997,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3983:7:326",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes32_$",
                        "typeString": "type(bytes32)"
                      },
                      "typeName": {
                        "id": 72996,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3983:7:326",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 72999,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3983:20:326",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 72995,
                  "id": 73000,
                  "nodeType": "Return",
                  "src": "3976:27:326"
                }
              ]
            },
            "functionSelector": "cb2ef6f7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "contractType",
            "nameLocation": "3919:12:326",
            "parameters": {
              "id": 72992,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3931:2:326"
            },
            "returnParameters": {
              "id": 72995,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 72994,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 73002,
                  "src": "3957:7:326",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 72993,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3957:7:326",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3956:9:326"
            },
            "scope": 73419,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 73013,
            "nodeType": "FunctionDefinition",
            "src": "4016:89:326",
            "nodes": [],
            "body": {
              "id": 73012,
              "nodeType": "Block",
              "src": "4073:32:326",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "34",
                        "id": 73009,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4096:1:326",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_4_by_1",
                          "typeString": "int_const 4"
                        },
                        "value": "4"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_4_by_1",
                          "typeString": "int_const 4"
                        }
                      ],
                      "id": 73008,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "4090:5:326",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint8_$",
                        "typeString": "type(uint8)"
                      },
                      "typeName": {
                        "id": 73007,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "4090:5:326",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 73010,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4090:8:326",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 73006,
                  "id": 73011,
                  "nodeType": "Return",
                  "src": "4083:15:326"
                }
              ]
            },
            "functionSelector": "a0a8e460",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "contractVersion",
            "nameLocation": "4025:15:326",
            "parameters": {
              "id": 73003,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4040:2:326"
            },
            "returnParameters": {
              "id": 73006,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73005,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 73013,
                  "src": "4066:5:326",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 73004,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "4066:5:326",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4065:7:326"
            },
            "scope": 73419,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 73031,
            "nodeType": "FunctionDefinition",
            "src": "4380:192:326",
            "nodes": [],
            "body": {
              "id": 73030,
              "nodeType": "Block",
              "src": "4470:102:326",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 73024,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 73022,
                      "name": "maxTotalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 72902,
                      "src": "4480:14:326",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 73023,
                      "name": "_maxTotalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73016,
                      "src": "4497:15:326",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4480:32:326",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 73025,
                  "nodeType": "ExpressionStatement",
                  "src": "4480:32:326"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 73027,
                        "name": "_maxTotalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73016,
                        "src": "4549:15:326",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 73026,
                      "name": "MaxTotalSupplyUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 72907,
                      "src": "4527:21:326",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 73028,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4527:38:326",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73029,
                  "nodeType": "EmitStatement",
                  "src": "4522:43:326"
                }
              ]
            },
            "documentation": {
              "id": 73014,
              "nodeType": "StructuredDocumentation",
              "src": "4292:83:326",
              "text": "@dev Lets a contract admin set the global maximum supply for collection's NFTs."
            },
            "functionSelector": "3f3e4c11",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 73019,
                    "name": "DEFAULT_ADMIN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 21176,
                    "src": "4450:18:326",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 73020,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 73018,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21189,
                  "src": "4441:8:326"
                },
                "nodeType": "ModifierInvocation",
                "src": "4441:28:326"
              }
            ],
            "name": "setMaxTotalSupply",
            "nameLocation": "4389:17:326",
            "parameters": {
              "id": 73017,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73016,
                  "mutability": "mutable",
                  "name": "_maxTotalSupply",
                  "nameLocation": "4415:15:326",
                  "nodeType": "VariableDeclaration",
                  "scope": 73031,
                  "src": "4407:23:326",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 73015,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4407:7:326",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4406:25:326"
            },
            "returnParameters": {
              "id": 73021,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4470:0:326"
            },
            "scope": 73419,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 73068,
            "nodeType": "FunctionDefinition",
            "src": "4815:356:326",
            "nodes": [],
            "body": {
              "id": 73067,
              "nodeType": "Block",
              "src": "4999:172:326",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    73050
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 73050,
                      "mutability": "mutable",
                      "name": "_maxTotalSupply",
                      "nameLocation": "5017:15:326",
                      "nodeType": "VariableDeclaration",
                      "scope": 73067,
                      "src": "5009:23:326",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 73049,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5009:7:326",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 73052,
                  "initialValue": {
                    "id": 73051,
                    "name": "maxTotalSupply",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 72902,
                    "src": "5035:14:326",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5009:40:326"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 73063,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 73056,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 73054,
                            "name": "_maxTotalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73050,
                            "src": "5067:15:326",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 73055,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5086:1:326",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "5067:20:326",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 73062,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 73060,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 73057,
                                "name": "totalSupply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 152198,
                                "src": "5091:11:326",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                  "typeString": "function () view returns (uint256)"
                                }
                              },
                              "id": 73058,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5091:13:326",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 73059,
                              "name": "_quantity",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 73036,
                              "src": "5107:9:326",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "5091:25:326",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "id": 73061,
                            "name": "_maxTotalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73050,
                            "src": "5120:15:326",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5091:44:326",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "5067:68:326",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "657863656564206d617820746f74616c20737570706c792e",
                        "id": 73064,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5137:26:326",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b4e319661650d6a0137f2c1e35ddbe3cec4727f8902befce5907bf3aef5c69d8",
                          "typeString": "literal_string \"exceed max total supply.\""
                        },
                        "value": "exceed max total supply."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b4e319661650d6a0137f2c1e35ddbe3cec4727f8902befce5907bf3aef5c69d8",
                          "typeString": "literal_string \"exceed max total supply.\""
                        }
                      ],
                      "id": 73053,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5059:7:326",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 73065,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5059:105:326",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73066,
                  "nodeType": "ExpressionStatement",
                  "src": "5059:105:326"
                }
              ]
            },
            "baseFunctions": [
              18285
            ],
            "documentation": {
              "id": 73032,
              "nodeType": "StructuredDocumentation",
              "src": "4761:49:326",
              "text": "@dev Runs before every `claim` function call."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeClaim",
            "nameLocation": "4824:12:326",
            "overrides": {
              "id": 73047,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4990:8:326"
            },
            "parameters": {
              "id": 73046,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73034,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 73068,
                  "src": "4846:7:326",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 73033,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4846:7:326",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73036,
                  "mutability": "mutable",
                  "name": "_quantity",
                  "nameLocation": "4871:9:326",
                  "nodeType": "VariableDeclaration",
                  "scope": 73068,
                  "src": "4863:17:326",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 73035,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4863:7:326",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73038,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 73068,
                  "src": "4890:7:326",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 73037,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4890:7:326",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73040,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 73068,
                  "src": "4907:7:326",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 73039,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4907:7:326",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73043,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 73068,
                  "src": "4924:23:326",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_AllowlistProof_$32523_calldata_ptr",
                    "typeString": "struct IDrop.AllowlistProof"
                  },
                  "typeName": {
                    "id": 73042,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 73041,
                      "name": "AllowlistProof",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 32523,
                      "src": "4924:14:326"
                    },
                    "referencedDeclaration": 32523,
                    "src": "4924:14:326",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_AllowlistProof_$32523_storage_ptr",
                      "typeString": "struct IDrop.AllowlistProof"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73045,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 73068,
                  "src": "4957:12:326",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 73044,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4957:5:326",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4836:139:326"
            },
            "returnParameters": {
              "id": 73048,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4999:0:326"
            },
            "scope": 73419,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 73192,
            "nodeType": "FunctionDefinition",
            "src": "5263:1292:326",
            "nodes": [],
            "body": {
              "id": 73191,
              "nodeType": "Block",
              "src": "5449:1106:326",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 73083,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 73081,
                      "name": "_pricePerToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73077,
                      "src": "5463:14:326",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 73082,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5481:1:326",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5463:19:326",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 73094,
                  "nodeType": "IfStatement",
                  "src": "5459:103:326",
                  "trueBody": {
                    "id": 73093,
                    "nodeType": "Block",
                    "src": "5484:78:326",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 73088,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 73085,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "5506:3:326",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 73086,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "5506:9:326",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 73087,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5519:1:326",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "5506:14:326",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "2156616c7565",
                              "id": 73089,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5522:8:326",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_208006903b0d1b8c530b3b2de29e1f765aa4311b3f136f1a342e9de039eda1b1",
                                "typeString": "literal_string \"!Value\""
                              },
                              "value": "!Value"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_208006903b0d1b8c530b3b2de29e1f765aa4311b3f136f1a342e9de039eda1b1",
                                "typeString": "literal_string \"!Value\""
                              }
                            ],
                            "id": 73084,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5498:7:326",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 73090,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5498:33:326",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 73091,
                        "nodeType": "ExpressionStatement",
                        "src": "5498:33:326"
                      },
                      {
                        "functionReturnParameters": 73080,
                        "id": 73092,
                        "nodeType": "Return",
                        "src": "5545:7:326"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    73096,
                    73098
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 73096,
                      "mutability": "mutable",
                      "name": "platformFeeRecipient",
                      "nameLocation": "5581:20:326",
                      "nodeType": "VariableDeclaration",
                      "scope": 73191,
                      "src": "5573:28:326",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 73095,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5573:7:326",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 73098,
                      "mutability": "mutable",
                      "name": "platformFeeBps",
                      "nameLocation": "5610:14:326",
                      "nodeType": "VariableDeclaration",
                      "scope": 73191,
                      "src": "5603:21:326",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "typeName": {
                        "id": 73097,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "5603:6:326",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 73101,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 73099,
                      "name": "getPlatformFeeInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21835,
                      "src": "5628:18:326",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$_t_uint16_$",
                        "typeString": "function () view returns (address,uint16)"
                      }
                    },
                    "id": 73100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5628:20:326",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_uint16_$",
                      "typeString": "tuple(address,uint16)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5572:76:326"
                },
                {
                  "assignments": [
                    73103
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 73103,
                      "mutability": "mutable",
                      "name": "saleRecipient",
                      "nameLocation": "5667:13:326",
                      "nodeType": "VariableDeclaration",
                      "scope": 73191,
                      "src": "5659:21:326",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 73102,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5659:7:326",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 73114,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 73109,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 73104,
                        "name": "_primarySaleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73071,
                        "src": "5683:21:326",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 73107,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5716:1:326",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 73106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5708:7:326",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 73105,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5708:7:326",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 73108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5708:10:326",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "5683:35:326",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 73112,
                      "name": "_primarySaleRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73071,
                      "src": "5746:21:326",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 73113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "5683:84:326",
                    "trueExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 73110,
                        "name": "primarySaleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22024,
                        "src": "5721:20:326",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 73111,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5721:22:326",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5659:108:326"
                },
                {
                  "assignments": [
                    73116
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 73116,
                      "mutability": "mutable",
                      "name": "totalPrice",
                      "nameLocation": "5876:10:326",
                      "nodeType": "VariableDeclaration",
                      "scope": 73191,
                      "src": "5868:18:326",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 73115,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5868:7:326",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 73123,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 73122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 73119,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 73117,
                            "name": "_quantityToClaim",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73073,
                            "src": "5890:16:326",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 73118,
                            "name": "_pricePerToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73077,
                            "src": "5909:14:326",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5890:33:326",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 73120,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "5889:35:326",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 73121,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5927:7:326",
                      "subdenomination": "ether",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "value": "1"
                    },
                    "src": "5889:45:326",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5868:66:326"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 73127,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 73125,
                          "name": "totalPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73116,
                          "src": "5952:10:326",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 73126,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5965:1:326",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5952:14:326",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7175616e7469747920746f6f206c6f77",
                        "id": 73128,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5968:18:326",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_95a3372d1911e2925e89e306668e1a589c72f142035fcdac95957bce7fe59721",
                          "typeString": "literal_string \"quantity too low\""
                        },
                        "value": "quantity too low"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_95a3372d1911e2925e89e306668e1a589c72f142035fcdac95957bce7fe59721",
                          "typeString": "literal_string \"quantity too low\""
                        }
                      ],
                      "id": 73124,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5944:7:326",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 73129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5944:43:326",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73130,
                  "nodeType": "ExpressionStatement",
                  "src": "5944:43:326"
                },
                {
                  "assignments": [
                    73132
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 73132,
                      "mutability": "mutable",
                      "name": "platformFees",
                      "nameLocation": "6006:12:326",
                      "nodeType": "VariableDeclaration",
                      "scope": 73191,
                      "src": "5998:20:326",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 73131,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5998:7:326",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 73139,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 73138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 73135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 73133,
                            "name": "totalPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73116,
                            "src": "6022:10:326",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 73134,
                            "name": "platformFeeBps",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73098,
                            "src": "6035:14:326",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "src": "6022:27:326",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 73136,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "6021:29:326",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 73137,
                      "name": "MAX_BPS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 72899,
                      "src": "6053:7:326",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6021:39:326",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5998:62:326"
                },
                {
                  "assignments": [
                    73141
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 73141,
                      "mutability": "mutable",
                      "name": "validMsgValue",
                      "nameLocation": "6076:13:326",
                      "nodeType": "VariableDeclaration",
                      "scope": 73191,
                      "src": "6071:18:326",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 73140,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "6071:4:326",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 73142,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6071:18:326"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 73146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 73143,
                      "name": "_currency",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73075,
                      "src": "6103:9:326",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 73144,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63578,
                        "src": "6116:19:326",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$63578_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 73145,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "NATIVE_TOKEN",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63346,
                      "src": "6116:32:326",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6103:45:326",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 73162,
                    "nodeType": "Block",
                    "src": "6220:55:326",
                    "statements": [
                      {
                        "expression": {
                          "id": 73160,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 73155,
                            "name": "validMsgValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73141,
                            "src": "6234:13:326",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 73159,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 73156,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6250:3:326",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 73157,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "6250:9:326",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 73158,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6263:1:326",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "6250:14:326",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "6234:30:326",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 73161,
                        "nodeType": "ExpressionStatement",
                        "src": "6234:30:326"
                      }
                    ]
                  },
                  "id": 73163,
                  "nodeType": "IfStatement",
                  "src": "6099:176:326",
                  "trueBody": {
                    "id": 73154,
                    "nodeType": "Block",
                    "src": "6150:64:326",
                    "statements": [
                      {
                        "expression": {
                          "id": 73152,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 73147,
                            "name": "validMsgValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73141,
                            "src": "6164:13:326",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 73151,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 73148,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6180:3:326",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 73149,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "6180:9:326",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 73150,
                              "name": "totalPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 73116,
                              "src": "6193:10:326",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "6180:23:326",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "6164:39:326",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 73153,
                        "nodeType": "ExpressionStatement",
                        "src": "6164:39:326"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 73165,
                        "name": "validMsgValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73141,
                        "src": "6292:13:326",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964206d73672076616c7565",
                        "id": 73166,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6307:19:326",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_de0d8376eff7771bcc57765656c140a92c651b9eeb4df686f809560770e7fe49",
                          "typeString": "literal_string \"Invalid msg value\""
                        },
                        "value": "Invalid msg value"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_de0d8376eff7771bcc57765656c140a92c651b9eeb4df686f809560770e7fe49",
                          "typeString": "literal_string \"Invalid msg value\""
                        }
                      ],
                      "id": 73164,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6284:7:326",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 73167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6284:43:326",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73168,
                  "nodeType": "ExpressionStatement",
                  "src": "6284:43:326"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 73172,
                        "name": "_currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73075,
                        "src": "6375:9:326",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 73173,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            73405
                          ],
                          "referencedDeclaration": 73405,
                          "src": "6386:10:326",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 73174,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6386:12:326",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 73175,
                        "name": "platformFeeRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73096,
                        "src": "6400:20:326",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 73176,
                        "name": "platformFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73132,
                        "src": "6422:12:326",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 73169,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63578,
                        "src": "6338:19:326",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$63578_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 73171,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferCurrency",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63383,
                      "src": "6338:36:326",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 73177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6338:97:326",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73178,
                  "nodeType": "ExpressionStatement",
                  "src": "6338:97:326"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 73182,
                        "name": "_currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73075,
                        "src": "6482:9:326",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 73183,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            73405
                          ],
                          "referencedDeclaration": 73405,
                          "src": "6493:10:326",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 73184,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6493:12:326",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 73185,
                        "name": "saleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73103,
                        "src": "6507:13:326",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 73188,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 73186,
                          "name": "totalPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73116,
                          "src": "6522:10:326",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 73187,
                          "name": "platformFees",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73132,
                          "src": "6535:12:326",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6522:25:326",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 73179,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63578,
                        "src": "6445:19:326",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$63578_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 73181,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferCurrency",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63383,
                      "src": "6445:36:326",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 73189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6445:103:326",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73190,
                  "nodeType": "ExpressionStatement",
                  "src": "6445:103:326"
                }
              ]
            },
            "baseFunctions": [
              18315
            ],
            "documentation": {
              "id": 73069,
              "nodeType": "StructuredDocumentation",
              "src": "5177:81:326",
              "text": "@dev Collects and distributes the primary sale value of tokens being claimed."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_collectPriceOnClaim",
            "nameLocation": "5272:20:326",
            "overrides": {
              "id": 73079,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5440:8:326"
            },
            "parameters": {
              "id": 73078,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73071,
                  "mutability": "mutable",
                  "name": "_primarySaleRecipient",
                  "nameLocation": "5310:21:326",
                  "nodeType": "VariableDeclaration",
                  "scope": 73192,
                  "src": "5302:29:326",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 73070,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5302:7:326",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73073,
                  "mutability": "mutable",
                  "name": "_quantityToClaim",
                  "nameLocation": "5349:16:326",
                  "nodeType": "VariableDeclaration",
                  "scope": 73192,
                  "src": "5341:24:326",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 73072,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5341:7:326",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73075,
                  "mutability": "mutable",
                  "name": "_currency",
                  "nameLocation": "5383:9:326",
                  "nodeType": "VariableDeclaration",
                  "scope": 73192,
                  "src": "5375:17:326",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 73074,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5375:7:326",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73077,
                  "mutability": "mutable",
                  "name": "_pricePerToken",
                  "nameLocation": "5410:14:326",
                  "nodeType": "VariableDeclaration",
                  "scope": 73192,
                  "src": "5402:22:326",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 73076,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5402:7:326",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5292:138:326"
            },
            "returnParameters": {
              "id": 73080,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5449:0:326"
            },
            "scope": 73419,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 73211,
            "nodeType": "FunctionDefinition",
            "src": "6610:180:326",
            "nodes": [],
            "body": {
              "id": 73210,
              "nodeType": "Block",
              "src": "6722:68:326",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 73204,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73195,
                        "src": "6738:3:326",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 73205,
                        "name": "_quantityBeingClaimed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73197,
                        "src": "6743:21:326",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 73203,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        73285
                      ],
                      "referencedDeclaration": 73285,
                      "src": "6732:5:326",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 73206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6732:33:326",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73207,
                  "nodeType": "ExpressionStatement",
                  "src": "6732:33:326"
                },
                {
                  "expression": {
                    "hexValue": "30",
                    "id": 73208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6782:1:326",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "functionReturnParameters": 73202,
                  "id": 73209,
                  "nodeType": "Return",
                  "src": "6775:8:326"
                }
              ]
            },
            "baseFunctions": [
              18325
            ],
            "documentation": {
              "id": 73193,
              "nodeType": "StructuredDocumentation",
              "src": "6561:44:326",
              "text": "@dev Transfers the tokens being claimed."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transferTokensOnClaim",
            "nameLocation": "6619:22:326",
            "overrides": {
              "id": 73199,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6695:8:326"
            },
            "parameters": {
              "id": 73198,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73195,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "6650:3:326",
                  "nodeType": "VariableDeclaration",
                  "scope": 73211,
                  "src": "6642:11:326",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 73194,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6642:7:326",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73197,
                  "mutability": "mutable",
                  "name": "_quantityBeingClaimed",
                  "nameLocation": "6663:21:326",
                  "nodeType": "VariableDeclaration",
                  "scope": 73211,
                  "src": "6655:29:326",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 73196,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6655:7:326",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6641:44:326"
            },
            "returnParameters": {
              "id": 73202,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73201,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 73211,
                  "src": "6713:7:326",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 73200,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6713:7:326",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6712:9:326"
            },
            "scope": 73419,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 73225,
            "nodeType": "FunctionDefinition",
            "src": "6885:137:326",
            "nodes": [],
            "body": {
              "id": 73224,
              "nodeType": "Block",
              "src": "6957:65:326",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 73219,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21176,
                        "src": "6982:18:326",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 73220,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            73405
                          ],
                          "referencedDeclaration": 73405,
                          "src": "7002:10:326",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 73221,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7002:12:326",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 73218,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21207,
                      "src": "6974:7:326",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 73222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6974:41:326",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 73217,
                  "id": 73223,
                  "nodeType": "Return",
                  "src": "6967:48:326"
                }
              ]
            },
            "baseFunctions": [
              22004
            ],
            "documentation": {
              "id": 73212,
              "nodeType": "StructuredDocumentation",
              "src": "6796:84:326",
              "text": "@dev Checks whether platform fee info can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetPlatformFeeInfo",
            "nameLocation": "6894:22:326",
            "overrides": {
              "id": 73214,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6933:8:326"
            },
            "parameters": {
              "id": 73213,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6916:2:326"
            },
            "returnParameters": {
              "id": 73217,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73216,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 73225,
                  "src": "6951:4:326",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 73215,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6951:4:326",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6950:6:326"
            },
            "scope": 73419,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 73239,
            "nodeType": "FunctionDefinition",
            "src": "7122:142:326",
            "nodes": [],
            "body": {
              "id": 73238,
              "nodeType": "Block",
              "src": "7199:65:326",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 73233,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21176,
                        "src": "7224:18:326",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 73234,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            73405
                          ],
                          "referencedDeclaration": 73405,
                          "src": "7244:10:326",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 73235,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7244:12:326",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 73232,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21207,
                      "src": "7216:7:326",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 73236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7216:41:326",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 73231,
                  "id": 73237,
                  "nodeType": "Return",
                  "src": "7209:48:326"
                }
              ]
            },
            "baseFunctions": [
              22066
            ],
            "documentation": {
              "id": 73226,
              "nodeType": "StructuredDocumentation",
              "src": "7028:89:326",
              "text": "@dev Checks whether primary sale recipient can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetPrimarySaleRecipient",
            "nameLocation": "7131:27:326",
            "overrides": {
              "id": 73228,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7175:8:326"
            },
            "parameters": {
              "id": 73227,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7158:2:326"
            },
            "returnParameters": {
              "id": 73231,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73230,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 73239,
                  "src": "7193:4:326",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 73229,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7193:4:326",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7192:6:326"
            },
            "scope": 73419,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 73253,
            "nodeType": "FunctionDefinition",
            "src": "7359:133:326",
            "nodes": [],
            "body": {
              "id": 73252,
              "nodeType": "Block",
              "src": "7427:65:326",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 73247,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21176,
                        "src": "7452:18:326",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 73248,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            73405
                          ],
                          "referencedDeclaration": 73405,
                          "src": "7472:10:326",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 73249,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7472:12:326",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 73246,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21207,
                      "src": "7444:7:326",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 73250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7444:41:326",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 73245,
                  "id": 73251,
                  "nodeType": "Return",
                  "src": "7437:48:326"
                }
              ]
            },
            "baseFunctions": [
              17525
            ],
            "documentation": {
              "id": 73240,
              "nodeType": "StructuredDocumentation",
              "src": "7270:84:326",
              "text": "@dev Checks whether contract metadata can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetContractURI",
            "nameLocation": "7368:18:326",
            "overrides": {
              "id": 73242,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7403:8:326"
            },
            "parameters": {
              "id": 73241,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7386:2:326"
            },
            "returnParameters": {
              "id": 73245,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73244,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 73253,
                  "src": "7421:4:326",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 73243,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7421:4:326",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7420:6:326"
            },
            "scope": 73419,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 73267,
            "nodeType": "FunctionDefinition",
            "src": "7587:137:326",
            "nodes": [],
            "body": {
              "id": 73266,
              "nodeType": "Block",
              "src": "7659:65:326",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 73261,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21176,
                        "src": "7684:18:326",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 73262,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            73405
                          ],
                          "referencedDeclaration": 73405,
                          "src": "7704:10:326",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 73263,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7704:12:326",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 73260,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21207,
                      "src": "7676:7:326",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 73264,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7676:41:326",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 73259,
                  "id": 73265,
                  "nodeType": "Return",
                  "src": "7669:48:326"
                }
              ]
            },
            "baseFunctions": [
              18331
            ],
            "documentation": {
              "id": 73254,
              "nodeType": "StructuredDocumentation",
              "src": "7498:84:326",
              "text": "@dev Checks whether platform fee info can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetClaimConditions",
            "nameLocation": "7596:22:326",
            "overrides": {
              "id": 73256,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7635:8:326"
            },
            "parameters": {
              "id": 73255,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7618:2:326"
            },
            "returnParameters": {
              "id": 73259,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73258,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 73267,
                  "src": "7653:4:326",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 73257,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7653:4:326",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7652:6:326"
            },
            "scope": 73419,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 73285,
            "nodeType": "FunctionDefinition",
            "src": "7908:160:326",
            "nodes": [],
            "body": {
              "id": 73284,
              "nodeType": "Block",
              "src": "8023:45:326",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 73280,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73269,
                        "src": "8045:7:326",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 73281,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73271,
                        "src": "8054:6:326",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 73277,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "8033:5:326",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_DropERC20_$73419_$",
                          "typeString": "type(contract super DropERC20)"
                        }
                      },
                      "id": 73279,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 153212,
                      "src": "8033:11:326",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 73282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8033:28:326",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73283,
                  "nodeType": "ExpressionStatement",
                  "src": "8033:28:326"
                }
              ]
            },
            "baseFunctions": [
              152516,
              153212
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nameLocation": "7917:5:326",
            "overrides": {
              "id": 73275,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 73273,
                  "name": "ERC20Upgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 152704,
                  "src": "7982:16:326"
                },
                {
                  "id": 73274,
                  "name": "ERC20VotesUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 153503,
                  "src": "8000:21:326"
                }
              ],
              "src": "7973:49:326"
            },
            "parameters": {
              "id": 73272,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73269,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "7931:7:326",
                  "nodeType": "VariableDeclaration",
                  "scope": 73285,
                  "src": "7923:15:326",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 73268,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7923:7:326",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73271,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "7948:6:326",
                  "nodeType": "VariableDeclaration",
                  "scope": 73285,
                  "src": "7940:14:326",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 73270,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7940:7:326",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7922:33:326"
            },
            "returnParameters": {
              "id": 73276,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8023:0:326"
            },
            "scope": 73419,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 73303,
            "nodeType": "FunctionDefinition",
            "src": "8074:160:326",
            "nodes": [],
            "body": {
              "id": 73302,
              "nodeType": "Block",
              "src": "8189:45:326",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 73298,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73287,
                        "src": "8211:7:326",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 73299,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73289,
                        "src": "8220:6:326",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 73295,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "8199:5:326",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_DropERC20_$73419_$",
                          "typeString": "type(contract super DropERC20)"
                        }
                      },
                      "id": 73297,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 153235,
                      "src": "8199:11:326",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 73300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8199:28:326",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73301,
                  "nodeType": "ExpressionStatement",
                  "src": "8199:28:326"
                }
              ]
            },
            "baseFunctions": [
              152588,
              153235
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nameLocation": "8083:5:326",
            "overrides": {
              "id": 73293,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 73291,
                  "name": "ERC20Upgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 152704,
                  "src": "8148:16:326"
                },
                {
                  "id": 73292,
                  "name": "ERC20VotesUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 153503,
                  "src": "8166:21:326"
                }
              ],
              "src": "8139:49:326"
            },
            "parameters": {
              "id": 73290,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73287,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "8097:7:326",
                  "nodeType": "VariableDeclaration",
                  "scope": 73303,
                  "src": "8089:15:326",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 73286,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8089:7:326",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73289,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8114:6:326",
                  "nodeType": "VariableDeclaration",
                  "scope": 73303,
                  "src": "8106:14:326",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 73288,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8106:7:326",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8088:33:326"
            },
            "returnParameters": {
              "id": 73294,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8189:0:326"
            },
            "scope": 73419,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 73324,
            "nodeType": "FunctionDefinition",
            "src": "8240:228:326",
            "nodes": [],
            "body": {
              "id": 73323,
              "nodeType": "Block",
              "src": "8408:60:326",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 73318,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73305,
                        "src": "8444:4:326",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 73319,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73307,
                        "src": "8450:2:326",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 73320,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73309,
                        "src": "8454:6:326",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 73315,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "8418:5:326",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_DropERC20_$73419_$",
                          "typeString": "type(contract super DropERC20)"
                        }
                      },
                      "id": 73317,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_afterTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 153265,
                      "src": "8418:25:326",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 73321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8418:43:326",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73322,
                  "nodeType": "ExpressionStatement",
                  "src": "8418:43:326"
                }
              ]
            },
            "baseFunctions": [
              152698,
              153265
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_afterTokenTransfer",
            "nameLocation": "8249:19:326",
            "overrides": {
              "id": 73313,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 73311,
                  "name": "ERC20Upgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 152704,
                  "src": "8367:16:326"
                },
                {
                  "id": 73312,
                  "name": "ERC20VotesUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 153503,
                  "src": "8385:21:326"
                }
              ],
              "src": "8358:49:326"
            },
            "parameters": {
              "id": 73310,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73305,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "8286:4:326",
                  "nodeType": "VariableDeclaration",
                  "scope": 73324,
                  "src": "8278:12:326",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 73304,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8278:7:326",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73307,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8308:2:326",
                  "nodeType": "VariableDeclaration",
                  "scope": 73324,
                  "src": "8300:10:326",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 73306,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8300:7:326",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73309,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8328:6:326",
                  "nodeType": "VariableDeclaration",
                  "scope": 73324,
                  "src": "8320:14:326",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 73308,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8320:7:326",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8268:72:326"
            },
            "returnParameters": {
              "id": 73314,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8408:0:326"
            },
            "scope": 73419,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 73382,
            "nodeType": "FunctionDefinition",
            "src": "8511:406:326",
            "nodes": [],
            "body": {
              "id": 73381,
              "nodeType": "Block",
              "src": "8649:268:326",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 73339,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73327,
                        "src": "8686:4:326",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 73340,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73329,
                        "src": "8692:2:326",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 73341,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73331,
                        "src": "8696:6:326",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 73336,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "8659:5:326",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_DropERC20_$73419_$",
                          "typeString": "type(contract super DropERC20)"
                        }
                      },
                      "id": 73338,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_beforeTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 152687,
                      "src": "8659:26:326",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 73342,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8659:44:326",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73343,
                  "nodeType": "ExpressionStatement",
                  "src": "8659:44:326"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 73365,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 73358,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 73351,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "8718:34:326",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 73345,
                              "name": "transferRole",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 72895,
                              "src": "8727:12:326",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 73348,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8749:1:326",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 73347,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8741:7:326",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 73346,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8741:7:326",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 73349,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8741:10:326",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 73344,
                            "name": "hasRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21207,
                            "src": "8719:7:326",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) view returns (bool)"
                            }
                          },
                          "id": 73350,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8719:33:326",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 73357,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 73352,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73327,
                          "src": "8756:4:326",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 73355,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8772:1:326",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 73354,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8764:7:326",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 73353,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8764:7:326",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 73356,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8764:10:326",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8756:18:326",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "8718:56:326",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 73364,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 73359,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73329,
                        "src": "8778:2:326",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 73362,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8792:1:326",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 73361,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8784:7:326",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 73360,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8784:7:326",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 73363,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8784:10:326",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "8778:16:326",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "8718:76:326",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 73380,
                  "nodeType": "IfStatement",
                  "src": "8714:197:326",
                  "trueBody": {
                    "id": 73379,
                    "nodeType": "Block",
                    "src": "8796:115:326",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 73375,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "id": 73368,
                                    "name": "transferRole",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 72895,
                                    "src": "8826:12:326",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "id": 73369,
                                    "name": "from",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 73327,
                                    "src": "8840:4:326",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 73367,
                                  "name": "hasRole",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 21207,
                                  "src": "8818:7:326",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                                    "typeString": "function (bytes32,address) view returns (bool)"
                                  }
                                },
                                "id": 73370,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8818:27:326",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "id": 73372,
                                    "name": "transferRole",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 72895,
                                    "src": "8857:12:326",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "id": 73373,
                                    "name": "to",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 73329,
                                    "src": "8871:2:326",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 73371,
                                  "name": "hasRole",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 21207,
                                  "src": "8849:7:326",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                                    "typeString": "function (bytes32,address) view returns (bool)"
                                  }
                                },
                                "id": 73374,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8849:25:326",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "8818:56:326",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "7472616e736665727320726573747269637465642e",
                              "id": 73376,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8876:23:326",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_72e11b0ed7b28c874f482b967f28c4c024d99b0b661cdb5de6e5ca1f32712e14",
                                "typeString": "literal_string \"transfers restricted.\""
                              },
                              "value": "transfers restricted."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_72e11b0ed7b28c874f482b967f28c4c024d99b0b661cdb5de6e5ca1f32712e14",
                                "typeString": "literal_string \"transfers restricted.\""
                              }
                            ],
                            "id": 73366,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "8810:7:326",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 73377,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8810:90:326",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 73378,
                        "nodeType": "ExpressionStatement",
                        "src": "8810:90:326"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              152687
            ],
            "documentation": {
              "id": 73325,
              "nodeType": "StructuredDocumentation",
              "src": "8474:32:326",
              "text": "@dev Runs on every transfer."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "8520:20:326",
            "overrides": {
              "id": 73334,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 73333,
                  "name": "ERC20Upgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 152704,
                  "src": "8631:16:326"
                }
              ],
              "src": "8622:26:326"
            },
            "parameters": {
              "id": 73332,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73327,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "8558:4:326",
                  "nodeType": "VariableDeclaration",
                  "scope": 73382,
                  "src": "8550:12:326",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 73326,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8550:7:326",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73329,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8580:2:326",
                  "nodeType": "VariableDeclaration",
                  "scope": 73382,
                  "src": "8572:10:326",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 73328,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8572:7:326",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73331,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8600:6:326",
                  "nodeType": "VariableDeclaration",
                  "scope": 73382,
                  "src": "8592:14:326",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 73330,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8592:7:326",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8540:72:326"
            },
            "returnParameters": {
              "id": 73335,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8649:0:326"
            },
            "scope": 73419,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 73392,
            "nodeType": "FunctionDefinition",
            "src": "8923:111:326",
            "nodes": [],
            "body": {
              "id": 73391,
              "nodeType": "Block",
              "src": "8998:36:326",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 73388,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        73405
                      ],
                      "referencedDeclaration": 73405,
                      "src": "9015:10:326",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 73389,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9015:12:326",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 73387,
                  "id": 73390,
                  "nodeType": "Return",
                  "src": "9008:19:326"
                }
              ]
            },
            "baseFunctions": [
              18267
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_dropMsgSender",
            "nameLocation": "8932:14:326",
            "overrides": {
              "id": 73384,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8971:8:326"
            },
            "parameters": {
              "id": 73383,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8946:2:326"
            },
            "returnParameters": {
              "id": 73387,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73386,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 73392,
                  "src": "8989:7:326",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 73385,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8989:7:326",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8988:9:326"
            },
            "scope": 73419,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 73405,
            "nodeType": "FunctionDefinition",
            "src": "9040:231:326",
            "nodes": [],
            "body": {
              "id": 73404,
              "nodeType": "Block",
              "src": "9209:62:326",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 73400,
                        "name": "ERC2771ContextUpgradeable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45607,
                        "src": "9226:25:326",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC2771ContextUpgradeable_$45607_$",
                          "typeString": "type(contract ERC2771ContextUpgradeable)"
                        }
                      },
                      "id": 73401,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_msgSender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45575,
                      "src": "9226:36:326",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 73402,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9226:38:326",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 73399,
                  "id": 73403,
                  "nodeType": "Return",
                  "src": "9219:45:326"
                }
              ]
            },
            "baseFunctions": [
              45575,
              156029
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgSender",
            "nameLocation": "9049:10:326",
            "overrides": {
              "id": 73396,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 73394,
                  "name": "ContextUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 156044,
                  "src": "9125:18:326"
                },
                {
                  "id": 73395,
                  "name": "ERC2771ContextUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 45607,
                  "src": "9145:25:326"
                }
              ],
              "src": "9116:55:326"
            },
            "parameters": {
              "id": 73393,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9059:2:326"
            },
            "returnParameters": {
              "id": 73399,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73398,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "9197:6:326",
                  "nodeType": "VariableDeclaration",
                  "scope": 73405,
                  "src": "9189:14:326",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 73397,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9189:7:326",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9188:16:326"
            },
            "scope": 73419,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 73418,
            "nodeType": "FunctionDefinition",
            "src": "9277:227:326",
            "nodes": [],
            "body": {
              "id": 73417,
              "nodeType": "Block",
              "src": "9444:60:326",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 73413,
                        "name": "ERC2771ContextUpgradeable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45607,
                        "src": "9461:25:326",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC2771ContextUpgradeable_$45607_$",
                          "typeString": "type(contract ERC2771ContextUpgradeable)"
                        }
                      },
                      "id": 73414,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_msgData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45602,
                      "src": "9461:34:326",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_calldata_ptr_$",
                        "typeString": "function () view returns (bytes calldata)"
                      }
                    },
                    "id": 73415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9461:36:326",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_calldata_ptr",
                      "typeString": "bytes calldata"
                    }
                  },
                  "functionReturnParameters": 73412,
                  "id": 73416,
                  "nodeType": "Return",
                  "src": "9454:43:326"
                }
              ]
            },
            "baseFunctions": [
              45602,
              156038
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgData",
            "nameLocation": "9286:8:326",
            "overrides": {
              "id": 73409,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 73407,
                  "name": "ContextUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 156044,
                  "src": "9360:18:326"
                },
                {
                  "id": 73408,
                  "name": "ERC2771ContextUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 45607,
                  "src": "9380:25:326"
                }
              ],
              "src": "9351:55:326"
            },
            "parameters": {
              "id": 73406,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9294:2:326"
            },
            "returnParameters": {
              "id": 73412,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73411,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 73418,
                  "src": "9424:14:326",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 73410,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "9424:5:326",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9423:16:326"
            },
            "scope": 73419,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 72870,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 150199,
              "src": "1579:13:326"
            },
            "id": 72871,
            "nodeType": "InheritanceSpecifier",
            "src": "1579:13:326"
          },
          {
            "baseName": {
              "id": 72872,
              "name": "ContractMetadata",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 17526,
              "src": "1598:16:326"
            },
            "id": 72873,
            "nodeType": "InheritanceSpecifier",
            "src": "1598:16:326"
          },
          {
            "baseName": {
              "id": 72874,
              "name": "PlatformFee",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 22005,
              "src": "1620:11:326"
            },
            "id": 72875,
            "nodeType": "InheritanceSpecifier",
            "src": "1620:11:326"
          },
          {
            "baseName": {
              "id": 72876,
              "name": "PrimarySale",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 22067,
              "src": "1637:11:326"
            },
            "id": 72877,
            "nodeType": "InheritanceSpecifier",
            "src": "1637:11:326"
          },
          {
            "baseName": {
              "id": 72878,
              "name": "PermissionsEnumerable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 21799,
              "src": "1654:21:326"
            },
            "id": 72879,
            "nodeType": "InheritanceSpecifier",
            "src": "1654:21:326"
          },
          {
            "baseName": {
              "id": 72880,
              "name": "Drop",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 18332,
              "src": "1681:4:326"
            },
            "id": 72881,
            "nodeType": "InheritanceSpecifier",
            "src": "1681:4:326"
          },
          {
            "baseName": {
              "id": 72882,
              "name": "ERC2771ContextUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 45607,
              "src": "1691:25:326"
            },
            "id": 72883,
            "nodeType": "InheritanceSpecifier",
            "src": "1691:25:326"
          },
          {
            "baseName": {
              "id": 72884,
              "name": "MulticallUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 156227,
              "src": "1722:20:326"
            },
            "id": 72885,
            "nodeType": "InheritanceSpecifier",
            "src": "1722:20:326"
          },
          {
            "baseName": {
              "id": 72886,
              "name": "ERC20BurnableUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 152846,
              "src": "1748:24:326"
            },
            "id": 72887,
            "nodeType": "InheritanceSpecifier",
            "src": "1748:24:326"
          },
          {
            "baseName": {
              "id": 72888,
              "name": "ERC20VotesUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 153503,
              "src": "1778:21:326"
            },
            "id": 72889,
            "nodeType": "InheritanceSpecifier",
            "src": "1778:21:326"
          }
        ],
        "canonicalName": "DropERC20",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          73419,
          153503,
          153719,
          157205,
          153755,
          152846,
          152704,
          153528,
          152782,
          156227,
          45607,
          156044,
          150029,
          18332,
          32573,
          32308,
          32285,
          21799,
          21500,
          33281,
          33256,
          22067,
          33345,
          22005,
          33324,
          17526,
          150199,
          32437
        ],
        "name": "DropERC20",
        "nameLocation": "1562:9:326",
        "scope": 73420,
        "usedErrors": []
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 326
}