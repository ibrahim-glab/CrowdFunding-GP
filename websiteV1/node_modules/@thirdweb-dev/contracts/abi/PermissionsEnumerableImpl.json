{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRoleMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "member",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "count",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRoleWithSwitch",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b50610cfc806100206000396000f3fe608060405234801561001057600080fd5b50600436106100835760003560e01c8063248a9ca3146100885780632f2ff15d146100ae57806336568abe146100c35780639010d07c146100d657806391d14854146100f6578063a217fddf14610119578063a32fa5b314610121578063ca15c87314610134578063d547741f14610147575b600080fd5b61009b610096366004610aa2565b61015a565b6040519081526020015b60405180910390f35b6100c16100bc366004610abb565b610178565b005b6100c16100d1366004610abb565b61022e565b6100e96100e4366004610af7565b61029d565b6040516100a59190610b19565b610109610104366004610abb565b6103ad565b60405190151581526020016100a5565b61009b600081565b61010961012f366004610abb565b6103e1565b61009b610142366004610aa2565b610444565b6100c1610155366004610abb565b6104e1565b60006101646104e8565b600092835260010160205250604090205490565b6101a36101836104e8565b6000848152600191909101602052604090205461019e610511565b61058f565b6101ab6104e8565b6000838152602091825260408082206001600160a01b0385168352909252205460ff16156102205760405162461bcd60e51b815260206004820152601d60248201527f43616e206f6e6c79206772616e7420746f206e6f6e20686f6c6465727300000060448201526064015b60405180910390fd5b61022a8282610614565b5050565b806001600160a01b0316610240610511565b6001600160a01b0316146102935760405162461bcd60e51b815260206004820152601a60248201527921b0b71037b7363c903932b737bab731b2903337b91039b2b63360311b6044820152606401610217565b61022a8282610628565b6000806102a861063c565b600085815260209190915260408120549150805b828110156103a35760006102ce61063c565b60008881526020918252604080822085835260010190925220546001600160a01b03161461034757848214156103355761030661063c565b600087815260209182526040808220938252600190930190915220546001600160a01b031692506103a7915050565b610340600183610b43565b9150610391565b6103528660006103ad565b801561037e575061036161063c565b600087815260209182526040808220828052600201909252205481145b156103915761038e600183610b43565b91505b61039c600182610b43565b90506102bc565b5050505b92915050565b60006103b76104e8565b6000938452602090815260408085206001600160a01b039490941685529290525090205460ff1690565b60006103eb6104e8565b600084815260209182526040808220828052909252205460ff1661043b576104116104e8565b6000848152602091825260408082206001600160a01b0386168352909252205460ff1690506103a7565b50600192915050565b60008061044f61063c565b6000848152602091909152604081205491505b818110156104bc57600061047461063c565b60008681526020918252604080822085835260010190925220546001600160a01b0316146104aa576104a7600184610b43565b92505b6104b5600182610b43565b9050610462565b506104c88360006103ad565b156104db576104d8600183610b43565b91505b50919050565b6102936101835b7f0a7b0f5c59907924802379ebe98cdc23e2ee7820f63d30126e10b3752010e50090565b905090565b60405163572b6c0560e01b8152600090309063572b6c0590610537903390600401610b19565b602060405180830381865afa158015610554573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105789190610b5b565b1561058a575060131936013560601c90565b503390565b6105976104e8565b6000838152602091825260408082206001600160a01b0385168352909252205460ff1661022a576105d2816001600160a01b03166014610646565b6105dd836020610646565b6040516020016105ee929190610bad565b60408051601f198184030181529082905262461bcd60e51b825261021791600401610c1a565b61061e82826107e9565b61022a828261086d565b610632828261092c565b61022a82826109b1565b600061050c610a40565b60606000610655836002610c4d565b610660906002610b43565b67ffffffffffffffff81111561067857610678610c6c565b6040519080825280601f01601f1916602001820160405280156106a2576020820181803683370190505b509050600360fc1b816000815181106106bd576106bd610c82565b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106106ec576106ec610c82565b60200101906001600160f81b031916908160001a9053506000610710846002610c4d565b61071b906001610b43565b90505b6001811115610793576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061074f5761074f610c82565b1a60f81b82828151811061076557610765610c82565b60200101906001600160f81b031916908160001a90535060049490941c9361078c81610c98565b905061071e565b5083156107e25760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610217565b9392505050565b60016107f36104e8565b6000848152602091825260408082206001600160a01b038616835290925220805460ff1916911515919091179055610829610511565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b600061087761063c565b600084815260209190915260409020549050600161089361063c565b60008581526020919091526040812080549091906108b2908490610b43565b909155508290506108c161063c565b6000858152602091825260408082208583526001019092522080546001600160a01b0319166001600160a01b03929092169190911790558061090161063c565b6000948552602090815260408086206001600160a01b03909516865260029094019052919092205550565b610936828261058f565b61093e6104e8565b6000838152602091825260408082206001600160a01b038516835290925220805460ff1916905561096d610511565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b60006109bb61063c565b6000848152602091825260408082206001600160a01b0386168352600201909252205490506109e861063c565b6000848152602091825260408082208483526001019092522080546001600160a01b0319169055610a1761063c565b6000938452602090815260408085206001600160a01b0390941685526002909301905250812055565b60008060ff19610a7160017f0c4ba382c0009cf238e4c1ca1a52f51c61e6248a70bdfb34e5ed49d5578a5c0c610caf565b604051602001610a8391815260200190565b60408051601f1981840301815291905280516020909101201692915050565b600060208284031215610ab457600080fd5b5035919050565b60008060408385031215610ace57600080fd5b8235915060208301356001600160a01b0381168114610aec57600080fd5b809150509250929050565b60008060408385031215610b0a57600080fd5b50508035926020909101359150565b6001600160a01b0391909116815260200190565b634e487b7160e01b600052601160045260246000fd5b60008219821115610b5657610b56610b2d565b500190565b600060208284031215610b6d57600080fd5b815180151581146107e257600080fd5b60005b83811015610b98578181015183820152602001610b80565b83811115610ba7576000848401525b50505050565b7402832b936b4b9b9b4b7b7399d1030b1b1b7bab73a1605d1b815260008351610bdd816015850160208801610b7d565b7001034b99036b4b9b9b4b733903937b6329607d1b6015918401918201528351610c0e816026840160208801610b7d565b01602601949350505050565b6020815260008251806020840152610c39816040850160208701610b7d565b601f01601f19169190910160400192915050565b6000816000190483118215151615610c6757610c67610b2d565b500290565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600081610ca757610ca7610b2d565b506000190190565b600082821015610cc157610cc1610b2d565b50039056fea2646970667358221220b15879114e196eaa91ad8a85ebd07e2cab381c7ffa73d4ab904010ff5e8a147b64736f6c634300080c0033",
    "sourceMap": "172:750:190:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100835760003560e01c8063248a9ca3146100885780632f2ff15d146100ae57806336568abe146100c35780639010d07c146100d657806391d14854146100f6578063a217fddf14610119578063a32fa5b314610121578063ca15c87314610134578063d547741f14610147575b600080fd5b61009b610096366004610aa2565b61015a565b6040519081526020015b60405180910390f35b6100c16100bc366004610abb565b610178565b005b6100c16100d1366004610abb565b61022e565b6100e96100e4366004610af7565b61029d565b6040516100a59190610b19565b610109610104366004610abb565b6103ad565b60405190151581526020016100a5565b61009b600081565b61010961012f366004610abb565b6103e1565b61009b610142366004610aa2565b610444565b6100c1610155366004610abb565b6104e1565b60006101646104e8565b600092835260010160205250604090205490565b6101a36101836104e8565b6000848152600191909101602052604090205461019e610511565b61058f565b6101ab6104e8565b6000838152602091825260408082206001600160a01b0385168352909252205460ff16156102205760405162461bcd60e51b815260206004820152601d60248201527f43616e206f6e6c79206772616e7420746f206e6f6e20686f6c6465727300000060448201526064015b60405180910390fd5b61022a8282610614565b5050565b806001600160a01b0316610240610511565b6001600160a01b0316146102935760405162461bcd60e51b815260206004820152601a60248201527921b0b71037b7363c903932b737bab731b2903337b91039b2b63360311b6044820152606401610217565b61022a8282610628565b6000806102a861063c565b600085815260209190915260408120549150805b828110156103a35760006102ce61063c565b60008881526020918252604080822085835260010190925220546001600160a01b03161461034757848214156103355761030661063c565b600087815260209182526040808220938252600190930190915220546001600160a01b031692506103a7915050565b610340600183610b43565b9150610391565b6103528660006103ad565b801561037e575061036161063c565b600087815260209182526040808220828052600201909252205481145b156103915761038e600183610b43565b91505b61039c600182610b43565b90506102bc565b5050505b92915050565b60006103b76104e8565b6000938452602090815260408085206001600160a01b039490941685529290525090205460ff1690565b60006103eb6104e8565b600084815260209182526040808220828052909252205460ff1661043b576104116104e8565b6000848152602091825260408082206001600160a01b0386168352909252205460ff1690506103a7565b50600192915050565b60008061044f61063c565b6000848152602091909152604081205491505b818110156104bc57600061047461063c565b60008681526020918252604080822085835260010190925220546001600160a01b0316146104aa576104a7600184610b43565b92505b6104b5600182610b43565b9050610462565b506104c88360006103ad565b156104db576104d8600183610b43565b91505b50919050565b6102936101835b7f0a7b0f5c59907924802379ebe98cdc23e2ee7820f63d30126e10b3752010e50090565b905090565b60405163572b6c0560e01b8152600090309063572b6c0590610537903390600401610b19565b602060405180830381865afa158015610554573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105789190610b5b565b1561058a575060131936013560601c90565b503390565b6105976104e8565b6000838152602091825260408082206001600160a01b0385168352909252205460ff1661022a576105d2816001600160a01b03166014610646565b6105dd836020610646565b6040516020016105ee929190610bad565b60408051601f198184030181529082905262461bcd60e51b825261021791600401610c1a565b61061e82826107e9565b61022a828261086d565b610632828261092c565b61022a82826109b1565b600061050c610a40565b60606000610655836002610c4d565b610660906002610b43565b67ffffffffffffffff81111561067857610678610c6c565b6040519080825280601f01601f1916602001820160405280156106a2576020820181803683370190505b509050600360fc1b816000815181106106bd576106bd610c82565b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106106ec576106ec610c82565b60200101906001600160f81b031916908160001a9053506000610710846002610c4d565b61071b906001610b43565b90505b6001811115610793576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061074f5761074f610c82565b1a60f81b82828151811061076557610765610c82565b60200101906001600160f81b031916908160001a90535060049490941c9361078c81610c98565b905061071e565b5083156107e25760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610217565b9392505050565b60016107f36104e8565b6000848152602091825260408082206001600160a01b038616835290925220805460ff1916911515919091179055610829610511565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b600061087761063c565b600084815260209190915260409020549050600161089361063c565b60008581526020919091526040812080549091906108b2908490610b43565b909155508290506108c161063c565b6000858152602091825260408082208583526001019092522080546001600160a01b0319166001600160a01b03929092169190911790558061090161063c565b6000948552602090815260408086206001600160a01b03909516865260029094019052919092205550565b610936828261058f565b61093e6104e8565b6000838152602091825260408082206001600160a01b038516835290925220805460ff1916905561096d610511565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b60006109bb61063c565b6000848152602091825260408082206001600160a01b0386168352600201909252205490506109e861063c565b6000848152602091825260408082208483526001019092522080546001600160a01b0319169055610a1761063c565b6000938452602090815260408085206001600160a01b0390941685526002909301905250812055565b60008060ff19610a7160017f0c4ba382c0009cf238e4c1ca1a52f51c61e6248a70bdfb34e5ed49d5578a5c0c610caf565b604051602001610a8391815260200190565b60408051601f1981840301815291905280516020909101201692915050565b600060208284031215610ab457600080fd5b5035919050565b60008060408385031215610ace57600080fd5b8235915060208301356001600160a01b0381168114610aec57600080fd5b809150509250929050565b60008060408385031215610b0a57600080fd5b50508035926020909101359150565b6001600160a01b0391909116815260200190565b634e487b7160e01b600052601160045260246000fd5b60008219821115610b5657610b56610b2d565b500190565b600060208284031215610b6d57600080fd5b815180151581146107e257600080fd5b60005b83811015610b98578181015183820152602001610b80565b83811115610ba7576000848401525b50505050565b7402832b936b4b9b9b4b7b7399d1030b1b1b7bab73a1605d1b815260008351610bdd816015850160208801610b7d565b7001034b99036b4b9b9b4b733903937b6329607d1b6015918401918201528351610c0e816026840160208801610b7d565b01602601949350505050565b6020815260008251806020840152610c39816040850160208701610b7d565b601f01601f19169190910160400192915050565b6000816000190483118215151615610c6757610c67610b2d565b500290565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600081610ca757610ca7610b2d565b506000190190565b600082821015610cc157610cc1610b2d565b50039056fea2646970667358221220b15879114e196eaa91ad8a85ebd07e2cab381c7ffa73d4ab904010ff5e8a147b64736f6c634300080c0033",
    "sourceMap": "172:750:190:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3365:142:179;;;;;;:::i;:::-;;:::i;:::-;;;345:25:644;;;333:2;318:18;3365:142:179;;;;;;;;3902:317;;;;;;:::i;:::-;;:::i;:::-;;5183:219;;;;;;:::i;:::-;;:::i;2167:791:180:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1883:153:179:-;;;;;;:::i;:::-;;:::i;:::-;;;1366:14:644;;1359:22;1341:41;;1329:2;1314:18;1883:153:179;1201:187:644;1299:49:179;;1344:4;1299:49;;2787:255;;;;;;:::i;:::-;;:::i;3365:462:180:-;;;;;;:::i;:::-;;:::i;4590:195:179:-;;;;;;:::i;:::-;;:::i;3365:142::-;3433:7;3459:21;:19;:21::i;:::-;:41;;;;:35;;:41;;-1:-1:-1;3459:41:179;;;;;3365:142::o;3902:317::-;3986:67;3997:21;:19;:21::i;:::-;:41;;;;:35;;;;;:41;;;;;;4040:12;:10;:12::i;:::-;3986:10;:67::i;:::-;4067:21;:19;:21::i;:::-;:30;:36;;;;;;;;;;;-1:-1:-1;;;;;4067:45:179;;;;;;;;;;;4063:115;;;4128:39;;-1:-1:-1;;;4128:39:179;;1777:2:644;4128:39:179;;;1759:21:644;1816:2;1796:18;;;1789:30;1855:31;1835:18;;;1828:59;1904:18;;4128:39:179;;;;;;;;4063:115;4187:25;4198:4;4204:7;4187:10;:25::i;:::-;3902:317;;:::o;5183:219::-;5290:7;-1:-1:-1;;;;;5274:23:179;:12;:10;:12::i;:::-;-1:-1:-1;;;;;5274:23:179;;5270:90;;5313:36;;-1:-1:-1;;;5313:36:179;;2135:2:644;5313:36:179;;;2117:21:644;2174:2;2154:18;;;2147:30;-1:-1:-1;;;2193:18:644;;;2186:56;2259:18;;5313:36:179;1933:350:644;5270:90:179;5369:26;5381:4;5387:7;5369:11;:26::i;2167:791:180:-;2251:14;2277:20;2300:31;:29;:31::i;:::-;:43;:49;;;;;;;;;;;:55;;-1:-1:-1;2300:43:180;2389:563;2413:12;2409:1;:16;2389:563;;;2525:1;2453:31;:29;:31::i;:::-;:43;:49;;;;;;;;;;;:60;;;:57;;:60;;;;;-1:-1:-1;;;;;2453:60:180;:74;2449:493;;2560:5;2551;:14;2547:165;;;2598:31;:29;:31::i;:::-;:43;:49;;;;;;;;;;;:60;;;:57;;;;:60;;;;;-1:-1:-1;;;;;2598:60:180;;-1:-1:-1;2680:13:180;;-1:-1:-1;;2680:13:180;2547:165;2729:10;2738:1;2729:10;;:::i;:::-;;;2449:493;;;2781:25;2789:4;2803:1;2781:7;:25::i;:::-;:103;;;;;2815:31;:29;:31::i;:::-;:43;:49;;;;;;;;;;;:69;;;:57;;:69;;;;;2810:74;;2781:103;2760:182;;;2917:10;2926:1;2917:10;;:::i;:::-;;;2760:182;2427:6;2432:1;2427:6;;:::i;:::-;;;2389:563;;;;2267:691;;2167:791;;;;;:::o;1883:153:179:-;1961:4;1984:21;:19;:21::i;:::-;:30;:36;;;;;;;;;;;-1:-1:-1;;;;;1984:45:179;;;;;;;;;-1:-1:-1;1984:45:179;;;;;;1883:153::o;2787:255::-;2866:4;2887:21;:19;:21::i;:::-;:30;:36;;;;;;;;;;;:48;;;;;;;;;;2882:132;;2958:21;:19;:21::i;:::-;:30;:36;;;;;;;;;;;-1:-1:-1;;;;;2958:45:179;;;;;;;;;;;;-1:-1:-1;2951:52:179;;2882:132;-1:-1:-1;3031:4:179;2787:255;;;;:::o;3365:462:180:-;3439:13;3464:20;3487:31;:29;:31::i;:::-;:43;:49;;;;;;;;;;;:55;;-1:-1:-1;3553:193:180;3577:12;3573:1;:16;3553:193;;;3689:1;3617:31;:29;:31::i;:::-;:43;:49;;;;;;;;;;;:60;;;:57;;:60;;;;;-1:-1:-1;;;;;3617:60:180;:74;3613:123;;3711:10;3720:1;3711:10;;:::i;:::-;;;3613:123;3591:6;3596:1;3591:6;;:::i;:::-;;;3553:193;;;;3759:25;3767:4;3781:1;3759:7;:25::i;:::-;3755:66;;;3800:10;3809:1;3800:10;;:::i;:::-;;;3755:66;3454:373;3365:462;;;:::o;4590:195:179:-;4675:67;4686:21;7765:141;559:66;;7765:141::o;7874:25::-;7867:32;;7765:141;:::o;238:416:190:-;322:61;;-1:-1:-1;;;322:61:190;;292:14;;346:4;;322:49;;:61;;372:10;;322:61;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;318:330;;;-1:-1:-1;;;555:14:190;551:23;538:37;534:2;530:46;238:416;:::o;318:330::-;-1:-1:-1;627:10:190;;238:416::o;6368:517:179:-;6456:21;:19;:21::i;:::-;:30;:36;;;;;;;;;;;-1:-1:-1;;;;;6456:45:179;;;;;;;;;;;6451:428;;6660:43;6690:7;-1:-1:-1;;;;;6660:43:179;6700:2;6660:21;:43::i;:::-;6774:40;6804:4;6811:2;6774:21;:40::i;:::-;6569:267;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;6569:267:179;;;;;;;;;;-1:-1:-1;;;6517:351:179;;;;;;;:::i;4229:160:180:-;4316:31;4333:4;4339:7;4316:16;:31::i;:::-;4357:25;4368:4;4374:7;4357:10;:25::i;3951:165::-;4039:32;4057:4;4063:7;4039:17;:32::i;:::-;4081:28;4095:4;4101:7;4081:13;:28::i;5286:171::-;5350:46;5415:35;:33;:35::i;1565:441:292:-;1640:13;1665:19;1697:10;1701:6;1697:1;:10;:::i;:::-;:14;;1710:1;1697:14;:::i;:::-;1687:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1687:25:292;;1665:47;;-1:-1:-1;;;1722:6:292;1729:1;1722:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1722:15:292;;;;;;;;;-1:-1:-1;;;1747:6:292;1754:1;1747:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1747:15:292;;;;;;;;-1:-1:-1;1777:9:292;1789:10;1793:6;1789:1;:10;:::i;:::-;:14;;1802:1;1789:14;:::i;:::-;1777:26;;1772:132;1809:1;1805;:5;1772:132;;;-1:-1:-1;;;1856:5:292;1864:3;1856:11;1843:25;;;;;;;:::i;:::-;;;;1831:6;1838:1;1831:9;;;;;;;;:::i;:::-;;;;:37;-1:-1:-1;;;;;1831:37:292;;;;;;;;-1:-1:-1;1892:1:292;1882:11;;;;;1812:3;;;:::i;:::-;;;1772:132;;;-1:-1:-1;1921:10:292;;1913:55;;;;-1:-1:-1;;;1913:55:292;;5055:2:644;1913:55:292;;;5037:21:644;;;5074:18;;;5067:30;5133:34;5113:18;;;5106:62;5185:18;;1913:55:292;4853:356:644;1913:55:292;1992:6;1565:441;-1:-1:-1;;;1565:441:292:o;5799:192:179:-;5925:4;5877:21;:19;:21::i;:::-;:30;:36;;;;;;;;;;;-1:-1:-1;;;;;5877:45:179;;;;;;;;:52;;-1:-1:-1;;5877:52:179;;;;;;;;;;5971:12;:10;:12::i;:::-;-1:-1:-1;;;;;5944:40:179;5962:7;-1:-1:-1;;;;;5944:40:179;5956:4;5944:40;;;;;;;;;;5799:192;;:::o;4452:381:180:-;4522:11;4536:31;:29;:31::i;:::-;:43;:49;;;;;;;;;;;:55;;-1:-1:-1;4660:1:180;4601:31;:29;:31::i;:::-;:43;:49;;;;;;;;;;;:60;;:49;;:43;:60;;;;;:::i;:::-;;;;-1:-1:-1;4737:7:180;;-1:-1:-1;4672:31:180;:29;:31::i;:::-;:43;:49;;;;;;;;;;;:62;;;:57;;:62;;;;:72;;-1:-1:-1;;;;;;4672:72:180;-1:-1:-1;;;;;4672:72:180;;;;;;;;;;:62;4754:31;:29;:31::i;:::-;:43;:49;;;;;;;;;;;-1:-1:-1;;;;;4754:66:180;;;;;:57;;;;:66;;;;;;:72;-1:-1:-1;4452:381:180:o;6040:228:179:-;6119:25;6130:4;6136:7;6119:10;:25::i;:::-;6161:21;:19;:21::i;:::-;:30;:36;;;;;;;;;;;-1:-1:-1;;;;;6161:45:179;;;;;;;;6154:52;;-1:-1:-1;;6154:52:179;;;6248:12;:10;:12::i;:::-;-1:-1:-1;;;;;6221:40:179;6239:7;-1:-1:-1;;;;;6221:40:179;6233:4;6221:40;;;;;;;;;;6040:228;;:::o;4901:323:180:-;4974:11;4988:31;:29;:31::i;:::-;:43;:49;;;;;;;;;;;-1:-1:-1;;;;;4988:66:180;;;;:57;;:66;;;;;;-1:-1:-1;5072:31:180;:29;:31::i;:::-;:43;:49;;;;;;;;;;;:62;;;:57;;:62;;;;5065:69;;-1:-1:-1;;;;;;5065:69:180;;;5151:31;:29;:31::i;:::-;:43;:49;;;;;;;;;;;-1:-1:-1;;;;;5151:66:180;;;;;:57;;;;:66;;-1:-1:-1;5151:66:180;;5144:73;4901:323::o;1354:198::-;1393:18;;-1:-1:-1;;619:56:180;674:1;627:43;619:56;:::i;:::-;608:68;;;;;;345:25:644;;333:2;318:18;;199:177;608:68:180;;;;-1:-1:-1;;608:68:180;;;;;;;;;598:79;;608:68;598:79;;;;:105;;1354:198;-1:-1:-1;;1354:198:180:o;14:180:644:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:644;;14:180;-1:-1:-1;14:180:644:o;381:354::-;449:6;457;510:2;498:9;489:7;485:23;481:32;478:52;;;526:1;523;516:12;478:52;549:23;;;-1:-1:-1;622:2:644;607:18;;594:32;-1:-1:-1;;;;;655:31:644;;645:42;;635:70;;701:1;698;691:12;635:70;724:5;714:15;;;381:354;;;;;:::o;740:248::-;808:6;816;869:2;857:9;848:7;844:23;840:32;837:52;;;885:1;882;875:12;837:52;-1:-1:-1;;908:23:644;;;978:2;963:18;;;950:32;;-1:-1:-1;740:248:644:o;993:203::-;-1:-1:-1;;;;;1157:32:644;;;;1139:51;;1127:2;1112:18;;993:203::o;2288:127::-;2349:10;2344:3;2340:20;2337:1;2330:31;2380:4;2377:1;2370:15;2404:4;2401:1;2394:15;2420:128;2460:3;2491:1;2487:6;2484:1;2481:13;2478:39;;;2497:18;;:::i;:::-;-1:-1:-1;2533:9:644;;2420:128::o;2553:277::-;2620:6;2673:2;2661:9;2652:7;2648:23;2644:32;2641:52;;;2689:1;2686;2679:12;2641:52;2721:9;2715:16;2774:5;2767:13;2760:21;2753:5;2750:32;2740:60;;2796:1;2793;2786:12;2835:258;2907:1;2917:113;2931:6;2928:1;2925:13;2917:113;;;3007:11;;;3001:18;2988:11;;;2981:39;2953:2;2946:10;2917:113;;;3048:6;3045:1;3042:13;3039:48;;;3083:1;3074:6;3069:3;3065:16;3058:27;3039:48;;2835:258;;;:::o;3098:784::-;-1:-1:-1;;;3504:3:644;3497:36;3479:3;3562:6;3556:13;3578:62;3633:6;3628:2;3623:3;3619:12;3612:4;3604:6;3600:17;3578:62;:::i;:::-;-1:-1:-1;;;3699:2:644;3659:16;;;3691:11;;;3684:40;3749:13;;3771:63;3749:13;3820:2;3812:11;;3805:4;3793:17;;3771:63;:::i;:::-;3854:17;3873:2;3850:26;;3098:784;-1:-1:-1;;;;3098:784:644:o;3887:383::-;4036:2;4025:9;4018:21;3999:4;4068:6;4062:13;4111:6;4106:2;4095:9;4091:18;4084:34;4127:66;4186:6;4181:2;4170:9;4166:18;4161:2;4153:6;4149:15;4127:66;:::i;:::-;4254:2;4233:15;-1:-1:-1;;4229:29:644;4214:45;;;;4261:2;4210:54;;3887:383;-1:-1:-1;;3887:383:644:o;4275:168::-;4315:7;4381:1;4377;4373:6;4369:14;4366:1;4363:21;4358:1;4351:9;4344:17;4340:45;4337:71;;;4388:18;;:::i;:::-;-1:-1:-1;4428:9:644;;4275:168::o;4448:127::-;4509:10;4504:3;4500:20;4497:1;4490:31;4540:4;4537:1;4530:15;4564:4;4561:1;4554:15;4580:127;4641:10;4636:3;4632:20;4629:1;4622:31;4672:4;4669:1;4662:15;4696:4;4693:1;4686:15;4712:136;4751:3;4779:5;4769:39;;4788:18;;:::i;:::-;-1:-1:-1;;;4824:18:644;;4712:136::o;5214:125::-;5254:4;5282:1;5279;5276:8;5273:34;;;5287:18;;:::i;:::-;-1:-1:-1;5324:9:644;;5214:125::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "DEFAULT_ADMIN_ROLE()": "a217fddf",
    "getRoleAdmin(bytes32)": "248a9ca3",
    "getRoleMember(bytes32,uint256)": "9010d07c",
    "getRoleMemberCount(bytes32)": "ca15c873",
    "grantRole(bytes32,address)": "2f2ff15d",
    "hasRole(bytes32,address)": "91d14854",
    "hasRoleWithSwitch(bytes32,address)": "a32fa5b3",
    "renounceRole(bytes32,address)": "36568abe",
    "revokeRole(bytes32,address)": "d547741f"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRoleWithSwitch\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"See {grantRole} and {revokeRole}.                  To change a role's admin, use {_setRoleAdmin}.\",\"params\":{\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns `member` who has `role`, at `index` of role-members list.                  See struct {RoleMembers}, and mapping {roleMembers}\",\"params\":{\"index\":\"Index in list of current members for the role.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"},\"returns\":{\"member\":\" Address of account that has `role`\"}},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns `count` of accounts that have `role`.                  See struct {RoleMembers}, and mapping {roleMembers}\",\"params\":{\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"},\"returns\":{\"count\":\"  Total number of accounts that have `role`\"}},\"grantRole(bytes32,address)\":{\"details\":\"Caller must have admin role for the `role`.                  Emits {RoleGranted Event}.\",\"params\":{\"account\":\"Address of the account to which the role is being granted.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\",\"params\":{\"account\":\"Address of the account for which the role is being checked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"hasRoleWithSwitch(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.                  Role restrictions can be swtiched on and off:                      - If address(0) has ROLE, then the ROLE restrictions                        don't apply.                      - If address(0) does not have ROLE, then the ROLE                        restrictions will apply.\",\"params\":{\"account\":\"Address of the account for which the role is being checked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"renounceRole(bytes32,address)\":{\"details\":\"Caller must have the `role`, with caller being the same as `account`.                  Emits {RoleRevoked Event}.\",\"params\":{\"account\":\"Address of the account from which the role is being revoked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"revokeRole(bytes32,address)\":{\"details\":\"Caller must have admin role for the `role`.                  Emits {RoleRevoked Event}.\",\"params\":{\"account\":\"Address of the account from which the role is being revoked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"notice\":\"Returns the admin role that controls the specified role.\"},\"getRoleMember(bytes32,uint256)\":{\"notice\":\"Returns the role-member from a list of members for a role,                  at a given index.\"},\"getRoleMemberCount(bytes32)\":{\"notice\":\"Returns total number of accounts that have a role.\"},\"grantRole(bytes32,address)\":{\"notice\":\"Grants a role to an account, if not previously granted.\"},\"hasRole(bytes32,address)\":{\"notice\":\"Checks whether an account has a particular role.\"},\"hasRoleWithSwitch(bytes32,address)\":{\"notice\":\"Checks whether an account has a particular role;                  role restrictions can be swtiched on and off.\"},\"renounceRole(bytes32,address)\":{\"notice\":\"Revokes role from the account.\"},\"revokeRole(bytes32,address)\":{\"notice\":\"Revokes role from an account.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/extension/upgradeable/impl/PermissionsEnumerableImpl.sol\":\"PermissionsEnumerableImpl\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@std/=lib/forge-std/src/\",\":@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/\",\":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/\",\":contracts/=contracts/\",\":ds-test/=lib/ds-test/src/\",\":dynamic-contracts/=lib/dynamic-contracts/src/\",\":erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/ERC721A-Upgradeable/\",\":erc721a/=lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/\"]},\"sources\":{\"contracts/extension/interface/IERC2771Context.sol\":{\"keccak256\":\"0x47c68c2b49d42008eb5fe42cf7cde539c380c37fc58927ca65711f846da28ca1\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e8a91fd4dd913f5d26dd9594c8159324efe2a3530e92d8d27753e61db5b1dc41\",\"dweb:/ipfs/QmZUgkaF894U6EK1wnNiLnGmEa7fJoVkhagAiAkxwRdAnp\"]},\"contracts/extension/interface/IPermissions.sol\":{\"keccak256\":\"0xc0cd1f87bac474a06f85e2b341b9b57662aee957fc24180d42c872481c2f2ae3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7dec3eed451d63867531d693f0be3279fa2c9aef3130f0826c3520c06820fa5d\",\"dweb:/ipfs/QmTYANrcPdd9SCe99DWsKJ19evNRQKQGZeoS1Keew4M2cS\"]},\"contracts/extension/interface/IPermissionsEnumerable.sol\":{\"keccak256\":\"0x2e742c18a4481bad41d56424cd16c52def2fb415f69e5fb5f67d8d979300ff95\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d9be33bb865e3e82aca540a3e38cbc2bf2e431f9d1bf39c50d6c757e7b7bf3ee\",\"dweb:/ipfs/Qmdad1Xqj5SQ44Bk4bwD2uA36XnGHtqnVYSomKZQvnUBVG\"]},\"contracts/extension/upgradeable/Permissions.sol\":{\"keccak256\":\"0x1ced1057ad0c07677db95c9ea291a8748c5cf14f1cce39423d28fab4413fb7fd\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://aeae206f911e13618737544b287d077f870d60c8d40f599aad20c5ffa5730c6e\",\"dweb:/ipfs/QmQ3yy9o7iWAfLrpEDMMB6uA6cw9HJxKCPGjxaEVG4AQrs\"]},\"contracts/extension/upgradeable/PermissionsEnumerable.sol\":{\"keccak256\":\"0xd69a09eb5078dc85e9fb3e59f578c267e7694f2bc9f995461225b596af93b07f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://08fa417baf97ef109876f76a0040e28d9c7b9edafb52189352642790f10a335c\",\"dweb:/ipfs/QmZDMmbLDuG48VUZLvAZnkUuNexyZ3ys1hoqFGn7hvtNyc\"]},\"contracts/extension/upgradeable/impl/PermissionsEnumerableImpl.sol\":{\"keccak256\":\"0x709981918a70e4bdb42473a84c54ad05f5b6f0d72b641e41031ca56a2baff35f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ed2f1b5bef515393ccc4373b51eddcbc94676dbf24522b561c85d37108e3f435\",\"dweb:/ipfs/QmZqiA5wALnh3QVLXA5XFLC2nLA7GDUwpR7wdkoBTLwiu2\"]},\"contracts/lib/TWStrings.sol\":{\"keccak256\":\"0xef7e9954d888f99baffc10db1d9bf6a2beb66c842d81dea90352ddded22cbbf8\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://832415134684f5413f9d0f3f5536aa30848690cfe54769f7730a3807438f3bf9\",\"dweb:/ipfs/QmduTiUdtsnyJVMXpdomohEWDVg46aZhnS9uTURu4x1NYt\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.12+commit.f00d7308"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleAdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleGranted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleRevoked",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DEFAULT_ADMIN_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleAdmin",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleMember",
          "outputs": [
            {
              "internalType": "address",
              "name": "member",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleMemberCount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "count",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRole",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRoleWithSwitch",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeRole"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "getRoleAdmin(bytes32)": {
            "details": "See {grantRole} and {revokeRole}.                  To change a role's admin, use {_setRoleAdmin}.",
            "params": {
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "getRoleMember(bytes32,uint256)": {
            "details": "Returns `member` who has `role`, at `index` of role-members list.                  See struct {RoleMembers}, and mapping {roleMembers}",
            "params": {
              "index": "Index in list of current members for the role.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            },
            "returns": {
              "member": " Address of account that has `role`"
            }
          },
          "getRoleMemberCount(bytes32)": {
            "details": "Returns `count` of accounts that have `role`.                  See struct {RoleMembers}, and mapping {roleMembers}",
            "params": {
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            },
            "returns": {
              "count": "  Total number of accounts that have `role`"
            }
          },
          "grantRole(bytes32,address)": {
            "details": "Caller must have admin role for the `role`.                  Emits {RoleGranted Event}.",
            "params": {
              "account": "Address of the account to which the role is being granted.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "hasRole(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`.",
            "params": {
              "account": "Address of the account for which the role is being checked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "hasRoleWithSwitch(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`.                  Role restrictions can be swtiched on and off:                      - If address(0) has ROLE, then the ROLE restrictions                        don't apply.                      - If address(0) does not have ROLE, then the ROLE                        restrictions will apply.",
            "params": {
              "account": "Address of the account for which the role is being checked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "renounceRole(bytes32,address)": {
            "details": "Caller must have the `role`, with caller being the same as `account`.                  Emits {RoleRevoked Event}.",
            "params": {
              "account": "Address of the account from which the role is being revoked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "revokeRole(bytes32,address)": {
            "details": "Caller must have admin role for the `role`.                  Emits {RoleRevoked Event}.",
            "params": {
              "account": "Address of the account from which the role is being revoked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "getRoleAdmin(bytes32)": {
            "notice": "Returns the admin role that controls the specified role."
          },
          "getRoleMember(bytes32,uint256)": {
            "notice": "Returns the role-member from a list of members for a role,                  at a given index."
          },
          "getRoleMemberCount(bytes32)": {
            "notice": "Returns total number of accounts that have a role."
          },
          "grantRole(bytes32,address)": {
            "notice": "Grants a role to an account, if not previously granted."
          },
          "hasRole(bytes32,address)": {
            "notice": "Checks whether an account has a particular role."
          },
          "hasRoleWithSwitch(bytes32,address)": {
            "notice": "Checks whether an account has a particular role;                  role restrictions can be swtiched on and off."
          },
          "renounceRole(bytes32,address)": {
            "notice": "Revokes role from the account."
          },
          "revokeRole(bytes32,address)": {
            "notice": "Revokes role from an account."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=lib/chainlink/",
        "@ds-test/=lib/ds-test/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@std/=lib/forge-std/src/",
        "@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/",
        "ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/",
        "ERC721A/=lib/ERC721A/contracts/",
        "chainlink/=lib/chainlink/",
        "contracts/=contracts/",
        "ds-test/=lib/ds-test/src/",
        "dynamic-contracts/=lib/dynamic-contracts/src/",
        "erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/",
        "erc721a-upgradeable/=lib/ERC721A-Upgradeable/",
        "erc721a/=lib/ERC721A/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/extension/upgradeable/impl/PermissionsEnumerableImpl.sol": "PermissionsEnumerableImpl"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/extension/interface/IERC2771Context.sol": {
        "keccak256": "0x47c68c2b49d42008eb5fe42cf7cde539c380c37fc58927ca65711f846da28ca1",
        "urls": [
          "bzz-raw://e8a91fd4dd913f5d26dd9594c8159324efe2a3530e92d8d27753e61db5b1dc41",
          "dweb:/ipfs/QmZUgkaF894U6EK1wnNiLnGmEa7fJoVkhagAiAkxwRdAnp"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPermissions.sol": {
        "keccak256": "0xc0cd1f87bac474a06f85e2b341b9b57662aee957fc24180d42c872481c2f2ae3",
        "urls": [
          "bzz-raw://7dec3eed451d63867531d693f0be3279fa2c9aef3130f0826c3520c06820fa5d",
          "dweb:/ipfs/QmTYANrcPdd9SCe99DWsKJ19evNRQKQGZeoS1Keew4M2cS"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPermissionsEnumerable.sol": {
        "keccak256": "0x2e742c18a4481bad41d56424cd16c52def2fb415f69e5fb5f67d8d979300ff95",
        "urls": [
          "bzz-raw://d9be33bb865e3e82aca540a3e38cbc2bf2e431f9d1bf39c50d6c757e7b7bf3ee",
          "dweb:/ipfs/Qmdad1Xqj5SQ44Bk4bwD2uA36XnGHtqnVYSomKZQvnUBVG"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/upgradeable/Permissions.sol": {
        "keccak256": "0x1ced1057ad0c07677db95c9ea291a8748c5cf14f1cce39423d28fab4413fb7fd",
        "urls": [
          "bzz-raw://aeae206f911e13618737544b287d077f870d60c8d40f599aad20c5ffa5730c6e",
          "dweb:/ipfs/QmQ3yy9o7iWAfLrpEDMMB6uA6cw9HJxKCPGjxaEVG4AQrs"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/upgradeable/PermissionsEnumerable.sol": {
        "keccak256": "0xd69a09eb5078dc85e9fb3e59f578c267e7694f2bc9f995461225b596af93b07f",
        "urls": [
          "bzz-raw://08fa417baf97ef109876f76a0040e28d9c7b9edafb52189352642790f10a335c",
          "dweb:/ipfs/QmZDMmbLDuG48VUZLvAZnkUuNexyZ3ys1hoqFGn7hvtNyc"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/upgradeable/impl/PermissionsEnumerableImpl.sol": {
        "keccak256": "0x709981918a70e4bdb42473a84c54ad05f5b6f0d72b641e41031ca56a2baff35f",
        "urls": [
          "bzz-raw://ed2f1b5bef515393ccc4373b51eddcbc94676dbf24522b561c85d37108e3f435",
          "dweb:/ipfs/QmZqiA5wALnh3QVLXA5XFLC2nLA7GDUwpR7wdkoBTLwiu2"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/TWStrings.sol": {
        "keccak256": "0xef7e9954d888f99baffc10db1d9bf6a2beb66c842d81dea90352ddded22cbbf8",
        "urls": [
          "bzz-raw://832415134684f5413f9d0f3f5536aa30848690cfe54769f7730a3807438f3bf9",
          "dweb:/ipfs/QmduTiUdtsnyJVMXpdomohEWDVg46aZhnS9uTURu4x1NYt"
        ],
        "license": "Apache 2.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/extension/upgradeable/impl/PermissionsEnumerableImpl.sol",
    "id": 43483,
    "exportedSymbols": {
      "IERC2771Context": [
        32785
      ],
      "IPermissions": [
        33256
      ],
      "IPermissionsEnumerable": [
        33281
      ],
      "Permissions": [
        41253
      ],
      "PermissionsEnumerable": [
        41631
      ],
      "PermissionsEnumerableImpl": [
        43482
      ],
      "PermissionsEnumerableStorage": [
        41314
      ],
      "PermissionsStorage": [
        40867
      ],
      "TWStrings": [
        64852
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:884:190",
    "nodes": [
      {
        "id": 43421,
        "nodeType": "PragmaDirective",
        "src": "39:23:190",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 43422,
        "nodeType": "ImportDirective",
        "src": "86:45:190",
        "nodes": [],
        "absolutePath": "contracts/extension/interface/IERC2771Context.sol",
        "file": "../../interface/IERC2771Context.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 43483,
        "sourceUnit": 32786,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 43423,
        "nodeType": "ImportDirective",
        "src": "132:38:190",
        "nodes": [],
        "absolutePath": "contracts/extension/upgradeable/PermissionsEnumerable.sol",
        "file": "../PermissionsEnumerable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 43483,
        "sourceUnit": 41632,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 43482,
        "nodeType": "ContractDefinition",
        "src": "172:750:190",
        "nodes": [
          {
            "id": 43449,
            "nodeType": "FunctionDefinition",
            "src": "238:416:190",
            "nodes": [],
            "body": {
              "id": 43448,
              "nodeType": "Block",
              "src": "308:346:190",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 43438,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "372:3:190",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 43439,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "372:10:190",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 43434,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "346:4:190",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_PermissionsEnumerableImpl_$43482",
                                  "typeString": "contract PermissionsEnumerableImpl"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_PermissionsEnumerableImpl_$43482",
                                  "typeString": "contract PermissionsEnumerableImpl"
                                }
                              ],
                              "id": 43433,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "338:7:190",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 43432,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "338:7:190",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 43435,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "338:13:190",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 43431,
                          "name": "IERC2771Context",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32785,
                          "src": "322:15:190",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC2771Context_$32785_$",
                            "typeString": "type(contract IERC2771Context)"
                          }
                        },
                        "id": 43436,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "322:30:190",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC2771Context_$32785",
                          "typeString": "contract IERC2771Context"
                        }
                      },
                      "id": 43437,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isTrustedForwarder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32784,
                      "src": "322:49:190",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view external returns (bool)"
                      }
                    },
                    "id": 43440,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "322:61:190",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 43446,
                    "nodeType": "Block",
                    "src": "606:42:190",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 43443,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "627:3:190",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 43444,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "627:10:190",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 43430,
                        "id": 43445,
                        "nodeType": "Return",
                        "src": "620:17:190"
                      }
                    ]
                  },
                  "id": 43447,
                  "nodeType": "IfStatement",
                  "src": "318:330:190",
                  "trueBody": {
                    "id": 43442,
                    "nodeType": "Block",
                    "src": "385:215:190",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "502:88:190",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "520:56:190",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "534:2:190",
                                    "type": "",
                                    "value": "96"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [],
                                            "functionName": {
                                              "name": "calldatasize",
                                              "nodeType": "YulIdentifier",
                                              "src": "555:12:190"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "555:14:190"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "571:2:190",
                                            "type": "",
                                            "value": "20"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nodeType": "YulIdentifier",
                                          "src": "551:3:190"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "551:23:190"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "calldataload",
                                      "nodeType": "YulIdentifier",
                                      "src": "538:12:190"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "538:37:190"
                                  }
                                ],
                                "functionName": {
                                  "name": "shr",
                                  "nodeType": "YulIdentifier",
                                  "src": "530:3:190"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "530:46:190"
                              },
                              "variableNames": [
                                {
                                  "name": "sender",
                                  "nodeType": "YulIdentifier",
                                  "src": "520:6:190"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "london",
                        "externalReferences": [
                          {
                            "declaration": 43429,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "520:6:190",
                            "valueSize": 1
                          }
                        ],
                        "id": 43441,
                        "nodeType": "InlineAssembly",
                        "src": "493:97:190"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              41229
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgSender",
            "nameLocation": "247:10:190",
            "overrides": {
              "id": 43427,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "274:8:190"
            },
            "parameters": {
              "id": 43426,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "257:2:190"
            },
            "returnParameters": {
              "id": 43430,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43429,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "300:6:190",
                  "nodeType": "VariableDeclaration",
                  "scope": 43449,
                  "src": "292:14:190",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 43428,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "292:7:190",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "291:16:190"
            },
            "scope": 43482,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 43481,
            "nodeType": "FunctionDefinition",
            "src": "660:260:190",
            "nodes": [],
            "body": {
              "id": 43480,
              "nodeType": "Block",
              "src": "728:192:190",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 43462,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "792:3:190",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 43463,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "792:10:190",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 43458,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "766:4:190",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_PermissionsEnumerableImpl_$43482",
                                  "typeString": "contract PermissionsEnumerableImpl"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_PermissionsEnumerableImpl_$43482",
                                  "typeString": "contract PermissionsEnumerableImpl"
                                }
                              ],
                              "id": 43457,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "758:7:190",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 43456,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "758:7:190",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 43459,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "758:13:190",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 43455,
                          "name": "IERC2771Context",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32785,
                          "src": "742:15:190",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC2771Context_$32785_$",
                            "typeString": "type(contract IERC2771Context)"
                          }
                        },
                        "id": 43460,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "742:30:190",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC2771Context_$32785",
                          "typeString": "contract IERC2771Context"
                        }
                      },
                      "id": 43461,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isTrustedForwarder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32784,
                      "src": "742:49:190",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view external returns (bool)"
                      }
                    },
                    "id": 43464,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "742:61:190",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 43478,
                    "nodeType": "Block",
                    "src": "874:40:190",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 43475,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "895:3:190",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 43476,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "data",
                          "nodeType": "MemberAccess",
                          "src": "895:8:190",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        "functionReturnParameters": 43454,
                        "id": 43477,
                        "nodeType": "Return",
                        "src": "888:15:190"
                      }
                    ]
                  },
                  "id": 43479,
                  "nodeType": "IfStatement",
                  "src": "738:176:190",
                  "trueBody": {
                    "id": 43474,
                    "nodeType": "Block",
                    "src": "805:63:190",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "expression": {
                              "id": 43465,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "826:3:190",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 43466,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "data",
                            "nodeType": "MemberAccess",
                            "src": "826:8:190",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          },
                          "endExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 43471,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "expression": {
                                  "id": 43467,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "836:3:190",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 43468,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "data",
                                "nodeType": "MemberAccess",
                                "src": "836:8:190",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_calldata_ptr",
                                  "typeString": "bytes calldata"
                                }
                              },
                              "id": 43469,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "836:15:190",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "3230",
                              "id": 43470,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "854:2:190",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_20_by_1",
                                "typeString": "int_const 20"
                              },
                              "value": "20"
                            },
                            "src": "836:20:190",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 43472,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexRangeAccess",
                          "src": "826:31:190",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr_slice",
                            "typeString": "bytes calldata slice"
                          }
                        },
                        "functionReturnParameters": 43454,
                        "id": 43473,
                        "nodeType": "Return",
                        "src": "819:38:190"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              41238
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgData",
            "nameLocation": "669:8:190",
            "overrides": {
              "id": 43451,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "694:8:190"
            },
            "parameters": {
              "id": 43450,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "677:2:190"
            },
            "returnParameters": {
              "id": 43454,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43453,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 43481,
                  "src": "712:14:190",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 43452,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "712:5:190",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "711:16:190"
            },
            "scope": 43482,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 43424,
              "name": "PermissionsEnumerable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 41631,
              "src": "210:21:190"
            },
            "id": 43425,
            "nodeType": "InheritanceSpecifier",
            "src": "210:21:190"
          }
        ],
        "canonicalName": "PermissionsEnumerableImpl",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          43482,
          41631,
          41253,
          33281,
          33256
        ],
        "name": "PermissionsEnumerableImpl",
        "nameLocation": "181:25:190",
        "scope": 43483,
        "usedErrors": []
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 190
}