{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "mintedTo",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "quantityMinted",
          "type": "uint256"
        }
      ],
      "name": "TokensMinted",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "cancel",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "getTotalMintedInLifetime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mintTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "revoke",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "cancel(address,uint256)": "98590ef9",
    "getTotalMintedInLifetime(address)": "a1699dc8",
    "mintTo(address,uint256)": "449a52f8",
    "revoke(address,uint256)": "eac449d9"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"mintedTo\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantityMinted\",\"type\":\"uint256\"}],\"name\":\"TokensMinted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"cancel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getTotalMintedInLifetime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mintTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"revoke\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"TokensMinted(address,uint256)\":{\"details\":\"Emitted when an account with MINTER_ROLE mints an NFT.\"}},\"kind\":\"dev\",\"methods\":{\"mintTo(address,uint256)\":{\"params\":{\"amount\":\"The amount of tokens to mint.\",\"to\":\"The address to mint tokens to.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"cancel(address,uint256)\":{\"notice\":\"Let's a loyalty points\\u00df owner or approved operator cancel the given amount of loyalty points.\"},\"getTotalMintedInLifetime(address)\":{\"notice\":\"Returns the total tokens minted to `owner` in the contract's lifetime.\"},\"mintTo(address,uint256)\":{\"notice\":\"Lets an account with MINTER_ROLE mint an NFT.\"},\"revoke(address,uint256)\":{\"notice\":\"Let's an approved party revoke a holder's loyalty points (no approval needed).\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/prebuilts/interface/ILoyaltyPoints.sol\":\"ILoyaltyPoints\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@std/=lib/forge-std/src/\",\":@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/\",\":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/\",\":contracts/=contracts/\",\":ds-test/=lib/ds-test/src/\",\":dynamic-contracts/=lib/dynamic-contracts/src/\",\":erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/ERC721A-Upgradeable/\",\":erc721a/=lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/\"]},\"sources\":{\"contracts/prebuilts/interface/ILoyaltyPoints.sol\":{\"keccak256\":\"0xb6496ef2bd4228f05b3af9479011c467e1942d7621fe0d6cae6afc20c9d32f94\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4afa2a9db584234c9e085e74afaea62e1cc8373d0f00a9658fd53a67ecf717d8\",\"dweb:/ipfs/QmXnByJbn2MGhccVnUgbtaUky7SnkMmgt3183fJuXFRWHa\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.12+commit.f00d7308"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "mintedTo",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "quantityMinted",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensMinted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "cancel"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getTotalMintedInLifetime",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mintTo"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revoke"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "mintTo(address,uint256)": {
            "params": {
              "amount": "The amount of tokens to mint.",
              "to": "The address to mint tokens to."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "cancel(address,uint256)": {
            "notice": "Let's a loyalty points√ü owner or approved operator cancel the given amount of loyalty points."
          },
          "getTotalMintedInLifetime(address)": {
            "notice": "Returns the total tokens minted to `owner` in the contract's lifetime."
          },
          "mintTo(address,uint256)": {
            "notice": "Lets an account with MINTER_ROLE mint an NFT."
          },
          "revoke(address,uint256)": {
            "notice": "Let's an approved party revoke a holder's loyalty points (no approval needed)."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=lib/chainlink/",
        "@ds-test/=lib/ds-test/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@std/=lib/forge-std/src/",
        "@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/",
        "ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/",
        "ERC721A/=lib/ERC721A/contracts/",
        "chainlink/=lib/chainlink/",
        "contracts/=contracts/",
        "ds-test/=lib/ds-test/src/",
        "dynamic-contracts/=lib/dynamic-contracts/src/",
        "erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/",
        "erc721a-upgradeable/=lib/ERC721A-Upgradeable/",
        "erc721a/=lib/ERC721A/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/prebuilts/interface/ILoyaltyPoints.sol": "ILoyaltyPoints"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/prebuilts/interface/ILoyaltyPoints.sol": {
        "keccak256": "0xb6496ef2bd4228f05b3af9479011c467e1942d7621fe0d6cae6afc20c9d32f94",
        "urls": [
          "bzz-raw://4afa2a9db584234c9e085e74afaea62e1cc8373d0f00a9658fd53a67ecf717d8",
          "dweb:/ipfs/QmXnByJbn2MGhccVnUgbtaUky7SnkMmgt3183fJuXFRWHa"
        ],
        "license": "Apache-2.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/prebuilts/interface/ILoyaltyPoints.sol",
    "id": 75256,
    "exportedSymbols": {
      "ILoyaltyPoints": [
        75255
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:946:332",
    "nodes": [
      {
        "id": 75215,
        "nodeType": "PragmaDirective",
        "src": "39:24:332",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".11"
        ]
      },
      {
        "id": 75255,
        "nodeType": "ContractDefinition",
        "src": "65:919:332",
        "nodes": [
          {
            "id": 75222,
            "nodeType": "EventDefinition",
            "src": "164:69:332",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 75216,
              "nodeType": "StructuredDocumentation",
              "src": "96:63:332",
              "text": "@dev Emitted when an account with MINTER_ROLE mints an NFT."
            },
            "name": "TokensMinted",
            "nameLocation": "170:12:332",
            "parameters": {
              "id": 75221,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75218,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "mintedTo",
                  "nameLocation": "199:8:332",
                  "nodeType": "VariableDeclaration",
                  "scope": 75222,
                  "src": "183:24:332",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 75217,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "183:7:332",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75220,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "quantityMinted",
                  "nameLocation": "217:14:332",
                  "nodeType": "VariableDeclaration",
                  "scope": 75222,
                  "src": "209:22:332",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 75219,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "209:7:332",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "182:50:332"
            }
          },
          {
            "id": 75230,
            "nodeType": "FunctionDefinition",
            "src": "326:81:332",
            "nodes": [],
            "documentation": {
              "id": 75223,
              "nodeType": "StructuredDocumentation",
              "src": "239:82:332",
              "text": "@notice Returns the total tokens minted to `owner` in the contract's lifetime."
            },
            "functionSelector": "a1699dc8",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getTotalMintedInLifetime",
            "nameLocation": "335:24:332",
            "parameters": {
              "id": 75226,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75225,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "368:5:332",
                  "nodeType": "VariableDeclaration",
                  "scope": 75230,
                  "src": "360:13:332",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 75224,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "360:7:332",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "359:15:332"
            },
            "returnParameters": {
              "id": 75229,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75228,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 75230,
                  "src": "398:7:332",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 75227,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "398:7:332",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "397:9:332"
            },
            "scope": 75255,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 75238,
            "nodeType": "FunctionDefinition",
            "src": "599:53:332",
            "nodes": [],
            "documentation": {
              "id": 75231,
              "nodeType": "StructuredDocumentation",
              "src": "413:181:332",
              "text": "  @notice Lets an account with MINTER_ROLE mint an NFT.\n  @param to The address to mint tokens to.\n  @param amount The amount of tokens to mint."
            },
            "functionSelector": "449a52f8",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "mintTo",
            "nameLocation": "608:6:332",
            "parameters": {
              "id": 75236,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75233,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "623:2:332",
                  "nodeType": "VariableDeclaration",
                  "scope": 75238,
                  "src": "615:10:332",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 75232,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "615:7:332",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75235,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "635:6:332",
                  "nodeType": "VariableDeclaration",
                  "scope": 75238,
                  "src": "627:14:332",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 75234,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "627:7:332",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "614:28:332"
            },
            "returnParameters": {
              "id": 75237,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "651:0:332"
            },
            "scope": 75255,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 75246,
            "nodeType": "FunctionDefinition",
            "src": "769:56:332",
            "nodes": [],
            "documentation": {
              "id": 75239,
              "nodeType": "StructuredDocumentation",
              "src": "658:106:332",
              "text": "@notice Let's a loyalty points√ü owner or approved operator cancel the given amount of loyalty points."
            },
            "functionSelector": "98590ef9",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "cancel",
            "nameLocation": "778:6:332",
            "parameters": {
              "id": 75244,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75241,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "793:5:332",
                  "nodeType": "VariableDeclaration",
                  "scope": 75246,
                  "src": "785:13:332",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 75240,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "785:7:332",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75243,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "808:6:332",
                  "nodeType": "VariableDeclaration",
                  "scope": 75246,
                  "src": "800:14:332",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 75242,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "800:7:332",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "784:31:332"
            },
            "returnParameters": {
              "id": 75245,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "824:0:332"
            },
            "scope": 75255,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 75254,
            "nodeType": "FunctionDefinition",
            "src": "926:56:332",
            "nodes": [],
            "documentation": {
              "id": 75247,
              "nodeType": "StructuredDocumentation",
              "src": "831:90:332",
              "text": "@notice Let's an approved party revoke a holder's loyalty points (no approval needed)."
            },
            "functionSelector": "eac449d9",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "revoke",
            "nameLocation": "935:6:332",
            "parameters": {
              "id": 75252,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75249,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "950:5:332",
                  "nodeType": "VariableDeclaration",
                  "scope": 75254,
                  "src": "942:13:332",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 75248,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "942:7:332",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75251,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "965:6:332",
                  "nodeType": "VariableDeclaration",
                  "scope": 75254,
                  "src": "957:14:332",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 75250,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "957:7:332",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "941:31:332"
            },
            "returnParameters": {
              "id": 75253,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "981:0:332"
            },
            "scope": 75255,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "ILoyaltyPoints",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          75255
        ],
        "name": "ILoyaltyPoints",
        "nameLocation": "75:14:332",
        "scope": 75256,
        "usedErrors": []
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 332
}