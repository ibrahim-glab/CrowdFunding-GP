{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "ApprovalCallerNotOwnerNorApproved",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ApprovalQueryForNonexistentToken",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ApprovalToCurrentOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ApproveToCaller",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BalanceQueryForZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MintToZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MintZeroQuantity",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OwnerQueryForNonexistentToken",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferCallerNotOwnerNorApproved",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferFromIncorrectOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferToNonERC721ReceiverImplementer",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferToZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "URIQueryForNonexistentToken",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_fromTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_toTokenId",
          "type": "uint256"
        }
      ],
      "name": "BatchMetadataUpdate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "prevURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "newURI",
          "type": "string"
        }
      ],
      "name": "ContractURIUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newRoyaltyRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newRoyaltyBps",
          "type": "uint256"
        }
      ],
      "name": "DefaultRoyalty",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "platformFeeRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "flatFee",
          "type": "uint256"
        }
      ],
      "name": "FlatPlatformFeeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "MetadataFrozen",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "MetadataUpdate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "prevOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnerUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "platformFeeRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "platformFeeBps",
          "type": "uint256"
        }
      ],
      "name": "PlatformFeeInfoUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "enum IPlatformFee.PlatformFeeType",
          "name": "feeType",
          "type": "uint8"
        }
      ],
      "name": "PlatformFeeTypeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "PrimarySaleRecipientUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "royaltyRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "royaltyBps",
          "type": "uint256"
        }
      ],
      "name": "RoyaltyForToken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "mintedTo",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenIdMinted",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "uri",
          "type": "string"
        }
      ],
      "name": "TokensMinted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "signer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "mintedTo",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenIdMinted",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "royaltyRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "royaltyBps",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "primarySaleRecipient",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "uri",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "quantity",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "validityStartTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "validityEndTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "bytes32",
              "name": "uid",
              "type": "bytes32"
            }
          ],
          "indexed": false,
          "internalType": "struct ISignatureMintERC721.MintRequest",
          "name": "mintRequest",
          "type": "tuple"
        }
      ],
      "name": "TokensMintedWithSignature",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "cancel",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "freezeMetadata",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDefaultRoyaltyInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getFlatPlatformFeeInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPlatformFeeInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPlatformFeeType",
      "outputs": [
        {
          "internalType": "enum IPlatformFee.PlatformFeeType",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRoleMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "member",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "count",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getRoyaltyInfoForToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRoleWithSwitch",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_defaultAdmin",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_contractURI",
          "type": "string"
        },
        {
          "internalType": "address[]",
          "name": "_trustedForwarders",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "_saleRecipient",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_royaltyRecipient",
          "type": "address"
        },
        {
          "internalType": "uint128",
          "name": "_royaltyBps",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "_platformFeeBps",
          "type": "uint128"
        },
        {
          "internalType": "address",
          "name": "_platformFeeRecipient",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "forwarder",
          "type": "address"
        }
      ],
      "name": "isTrustedForwarder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "mintTo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "tokenIdMinted",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "royaltyRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "royaltyBps",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "primarySaleRecipient",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "uri",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "quantity",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "validityStartTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "validityEndTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "bytes32",
              "name": "uid",
              "type": "bytes32"
            }
          ],
          "internalType": "struct ISignatureMintERC721.MintRequest",
          "name": "_req",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "mintWithSignature",
      "outputs": [
        {
          "internalType": "address",
          "name": "signer",
          "type": "address"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "multicall",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "results",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextTokenIdToMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "primarySaleRecipient",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "revoke",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "salePrice",
          "type": "uint256"
        }
      ],
      "name": "royaltyInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "royaltyAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "setContractURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_royaltyRecipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_royaltyBps",
          "type": "uint256"
        }
      ],
      "name": "setDefaultRoyaltyInfo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_platformFeeRecipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_flatFee",
          "type": "uint256"
        }
      ],
      "name": "setFlatPlatformFeeInfo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "setOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_platformFeeRecipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_platformFeeBps",
          "type": "uint256"
        }
      ],
      "name": "setPlatformFeeInfo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IPlatformFee.PlatformFeeType",
          "name": "_feeType",
          "type": "uint8"
        }
      ],
      "name": "setPlatformFeeType",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_saleRecipient",
          "type": "address"
        }
      ],
      "name": "setPrimarySaleRecipient",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_bps",
          "type": "uint256"
        }
      ],
      "name": "setRoyaltyInfoForToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "setTokenURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalMinted",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "uriFrozen",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "royaltyRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "royaltyBps",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "primarySaleRecipient",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "uri",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "quantity",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "validityStartTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "validityEndTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "bytes32",
              "name": "uid",
              "type": "bytes32"
            }
          ],
          "internalType": "struct ISignatureMintERC721.MintRequest",
          "name": "_req",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "verify",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "signer",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b50600a54610100900460ff1615808015620000335750600a54600160ff909116105b8062000063575062000050306200013d60201b62001a1d1760201c565b158015620000635750600a5460ff166001145b620000cb5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840160405180910390fd5b600a805460ff191660011790558015620000ef57600a805461ff0019166101001790555b80156200013657600a805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b506200014c565b6001600160a01b03163b151590565b614bf6806200015c6000396000f3fe6080604052600436106102695760003560e01c80636f4f28371161014b5780636f4f28371461061c57806370a082311461063c5780637e54523c1461065c5780638da5cb5b1461067c5780639010d07c1461069a57806391d14854146106ba578063938e3d7b146106da57806395d89b41146106fa5780639bcf7a151461070f578063a217fddf1461072f578063a22cb46514610744578063a2309ff814610511578063a32fa5b314610764578063ac9650d814610784578063b24f2d39146107b1578063b6f10c79146107dc578063b88d4fde146107fc578063c87b56dd1461081c578063ca15c8731461083c578063d111515d1461085c578063d45573f614610871578063d547741f14610886578063e1591634146108a6578063e57553da146108c6578063e8a3d485146108db578063e985e9c5146108f0578063f28083c31461093a57600080fd5b806275a3171461026e57806301ffc9a7146102a157806306fdde03146102d1578063079fe40e146102f3578063081812fc14610320578063095ea7b31461034057806313af403514610362578063162094c41461038257806318160ddd146103a25780631e7ac488146103bd57806320c5429b146103dd57806323b872dd146103fd578063248a9ca31461041d578063252e82e81461044a578063274e4a1d146104895780632a55205a146104a35780632f2ff15d146104d157806336568abe146104f15780633b1475a71461051157806340e58ee51461052757806342842e0e14610547578063439c7be5146105675780634cc157df1461057a578063572b6c05146105bc578063600dd5ea146105dc5780636352211e146105fc575b600080fd5b34801561027a57600080fd5b5061028e610289366004613eb4565b61095c565b6040519081526020015b60405180910390f35b3480156102ad57600080fd5b506102c16102bc366004613f1c565b6109d0565b6040519015158152602001610298565b3480156102dd57600080fd5b506102e66109fc565b6040516102989190613f91565b3480156102ff57600080fd5b50610308610a8f565b6040516001600160a01b039091168152602001610298565b34801561032c57600080fd5b5061030861033b366004613fb1565b610a9e565b34801561034c57600080fd5b5061036061035b366004613fca565b610ae3565b005b34801561036e57600080fd5b5061036061037d366004613ff4565b610b7c565b34801561038e57600080fd5b5061036061039d3660046140cc565b610bb5565b3480156103ae57600080fd5b5061010b5461010a540361028e565b3480156103c957600080fd5b506103606103d8366004613fca565b610c7f565b3480156103e957600080fd5b506103606103f8366004613fb1565b610cad565b34801561040957600080fd5b50610360610418366004614112565b610ccf565b34801561042957600080fd5b5061028e610438366004613fb1565b60009081526008602052604090205490565b34801561045657600080fd5b5061046a61046536600461414e565b610cda565b6040805192151583526001600160a01b03909116602083015201610298565b34801561049557600080fd5b5060a1546102c19060ff1681565b3480156104af57600080fd5b506104c36104be3660046141b2565b610d1e565b6040516102989291906141d4565b3480156104dd57600080fd5b506103606104ec3660046141ed565b610d5b565b3480156104fd57600080fd5b5061036061050c3660046141ed565b610df1565b34801561051d57600080fd5b5061010a5461028e565b34801561053357600080fd5b50610360610542366004613fb1565b610e50565b34801561055357600080fd5b50610360610562366004614112565b610e5b565b61030861057536600461414e565b610e76565b34801561058657600080fd5b5061059a610595366004613fb1565b611051565b604080516001600160a01b03909316835261ffff909116602083015201610298565b3480156105c857600080fd5b506102c16105d7366004613ff4565b6110bc565b3480156105e857600080fd5b506103606105f7366004613fca565b6110da565b34801561060857600080fd5b50610308610617366004613fb1565b611108565b34801561062857600080fd5b50610360610637366004613ff4565b61111a565b34801561064857600080fd5b5061028e610657366004613ff4565b611147565b34801561066857600080fd5b50610360610677366004613fca565b611196565b34801561068857600080fd5b506001546001600160a01b0316610308565b3480156106a657600080fd5b506103086106b53660046141b2565b6111c4565b3480156106c657600080fd5b506102c16106d53660046141ed565b6112b3565b3480156106e657600080fd5b506103606106f5366004614219565b6112de565b34801561070657600080fd5b506102e661130b565b34801561071b57600080fd5b5061036061072a36600461424d565b61131b565b34801561073b57600080fd5b5061028e600081565b34801561075057600080fd5b5061036061075f366004614280565b61134a565b34801561077057600080fd5b506102c161077f3660046141ed565b61141e565b34801561079057600080fd5b506107a461079f3660046142b7565b611474565b604051610298919061432b565b3480156107bd57600080fd5b506002546001600160a01b03811690600160a01b900461ffff1661059a565b3480156107e857600080fd5b506103606107f736600461438d565b611568565b34801561080857600080fd5b506103606108173660046143ae565b611595565b34801561082857600080fd5b506102e6610837366004613fb1565b6115e6565b34801561084857600080fd5b5061028e610857366004613fb1565b6115f1565b34801561086857600080fd5b5061036061167a565b34801561087d57600080fd5b5061059a61171c565b34801561089257600080fd5b506103606108a13660046141ed565b611739565b3480156108b257600080fd5b506103606108c13660046144bb565b611752565b3480156108d257600080fd5b506104c361196b565b3480156108e757600080fd5b506102e661197f565b3480156108fc57600080fd5b506102c161090b3660046145cd565b6001600160a01b0391821660009081526101116020908152604080832093909416825291909152205460ff1690565b34801561094657600080fd5b5061094f611a0d565b604051610298919061460d565b6000600080516020614b818339815191526109778133611a2c565b610982858585611aac565b915081856001600160a01b03167f9d89e36eadf856db0ad9ffb5a569e07f95634dddd9501141ecf04820484ad0dc86866040516109c092919061465e565b60405180910390a3509392505050565b60006109db82611b06565b806109f6575063152a902d60e11b6001600160e01b03198316145b92915050565b606061010c8054610a0c90614672565b80601f0160208091040260200160405190810160405280929190818152602001828054610a3890614672565b8015610a855780601f10610a5a57610100808354040283529160200191610a85565b820191906000526020600020905b815481529060010190602001808311610a6857829003601f168201915b5050505050905090565b6004546001600160a01b031690565b6000610aa982611b56565b610ac6576040516333d1c03960e21b815260040160405180910390fd5b50600090815261011060205260409020546001600160a01b031690565b6000610aee82611108565b9050806001600160a01b0316836001600160a01b03161415610b235760405163250fdee360e21b815260040160405180910390fd5b806001600160a01b0316610b35611b84565b6001600160a01b031614610b6c57610b4f8161090b611b84565b610b6c576040516367d9dca160e11b815260040160405180910390fd5b610b77838383611b93565b505050565b610b84611bf0565b610ba95760405162461bcd60e51b8152600401610ba0906146a7565b60405180910390fd5b610bb281611bfe565b50565b610bbd611c50565b610c1e5760405162461bcd60e51b815260206004820152602c60248201527f4e46544d657461646174613a206e6f7420617574686f72697a656420746f207360448201526b32ba1036b2ba30b230ba309760a11b6064820152608401610ba0565b60a15460ff1615610c715760405162461bcd60e51b815260206004820181905260248201527f4e46544d657461646174613a206d657461646174612069732066726f7a656e2e6044820152606401610ba0565b610c7b8282611c6c565b5050565b610c87611bf0565b610ca35760405162461bcd60e51b8152600401610ba0906146a7565b610c7b8282611d14565b600080516020614b1a833981519152610cc68133611a2c565b610c7b82611da2565b610b77838383611dad565b600080610ce8858585611fb9565b610140860135600090815260d7602052604090205490915060ff16158015610d145750610d148161201d565b9150935093915050565b600080600080610d2d86611051565b90945084925061ffff169050612710610d4682876146e5565b610d509190614704565b925050509250929050565b600082815260086020526040902054610d749033611a2c565b60008281526007602090815260408083206001600160a01b038516845290915290205460ff1615610de75760405162461bcd60e51b815260206004820152601d60248201527f43616e206f6e6c79206772616e7420746f206e6f6e20686f6c646572730000006044820152606401610ba0565b610c7b8282612037565b336001600160a01b03821614610e465760405162461bcd60e51b815260206004820152601a60248201527921b0b71037b7363c903932b737bab731b2903337b91039b2b63360311b6044820152606401610ba0565b610c7b828261204b565b610bb28160016120a2565b610b7783838360405180602001604052806000815250611595565b60006002600b541415610ecb5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610ba0565b6002600b55600160a085013514610f3d5760405162461bcd60e51b815260206004820152603060248201527f4c6f79616c7479436172643a206f6e6c792031204e46542063616e206265206d60448201526f34b73a32b21030ba1030903a34b6b29760811b6064820152608401610ba0565b610f48848484612286565b90506000610f596020860186613ff4565b90506000610f7382610f6e6080890189614726565b611aac565b90506000610f876040880160208901613ff4565b6001600160a01b031614158015610fa15750604086013515155b15610fc457610fc481610fba6040890160208a01613ff4565b886040013561240f565b610ff7610fd76080880160608901613ff4565b60a0880135610fed6101008a0160e08b01613ff4565b8960c001356124b6565b80826001600160a01b0316846001600160a01b03167fee0cf9c3e87795b1932d13f80f892f620f567b4465e768ced5d64aa44ca1d64c8960405161103b91906147b1565b60405180910390a450506001600b559392505050565b6000818152600360209081526040808320815180830190925280546001600160a01b03168083526001909101549282019290925282911561109857805160208201516110b2565b6002546001600160a01b03811690600160a01b900461ffff165b9250925050915091565b6001600160a01b03166000908152606f602052604090205460ff1690565b6110e2611bf0565b6110fe5760405162461bcd60e51b8152600401610ba0906146a7565b610c7b8282612688565b600061111382612705565b5192915050565b611122611bf0565b61113e5760405162461bcd60e51b8152600401610ba0906146a7565b610bb281612822565b60006001600160a01b038216611170576040516323d3ad8160e21b815260040160405180910390fd5b506001600160a01b0316600090815261010f60205260409020546001600160401b031690565b61119e611bf0565b6111ba5760405162461bcd60e51b8152600401610ba0906146a7565b610c7b828261286c565b60008281526009602052604081205481805b828110156112aa5760008681526009602090815260408083208484526001019091529020546001600160a01b03161561125357848214156112415760008681526009602090815260408083209383526001909301905220546001600160a01b031692506109f6915050565b61124c6001836148bf565b9150611298565b61125e8660006112b3565b80156112855750600086815260096020908152604080832083805260020190915290205481145b15611298576112956001836148bf565b91505b6112a36001826148bf565b90506111d6565b50505092915050565b60009182526007602090815260408084206001600160a01b0393909316845291905290205460ff1690565b6112e6611bf0565b6113025760405162461bcd60e51b8152600401610ba0906146a7565b610bb2816128be565b606061010d8054610a0c90614672565b611323611bf0565b61133f5760405162461bcd60e51b8152600401610ba0906146a7565b610b7783838361240f565b611352611b84565b6001600160a01b0316826001600160a01b031614156113845760405163b06307db60e01b815260040160405180910390fd5b806101116000611392611b84565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff1916921515929092179091556113d6611b84565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051611412911515815260200190565b60405180910390a35050565b600082815260076020908152604080832083805290915281205460ff1661146b575060008281526007602090815260408083206001600160a01b038516845290915290205460ff166109f6565b50600192915050565b6060816001600160401b0381111561148e5761148e61400f565b6040519080825280602002602001820160405280156114c157816020015b60608152602001906001900390816114ac5790505b50905060005b8281101561156157611531308585848181106114e5576114e56148d7565b90506020028101906114f79190614726565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061299392505050565b828281518110611543576115436148d7565b60200260200101819052508080611559906148ed565b9150506114c7565b5092915050565b611570611bf0565b61158c5760405162461bcd60e51b8152600401610ba0906146a7565b610bb2816129b8565b6115a0848484611dad565b6115b2836001600160a01b0316611a1d565b156115e0576115c384848484612a1c565b6115e0576040516368d2bf6b60e11b815260040160405180910390fd5b50505050565b60606109f682612b0a565b600081815260096020526040812054815b818110156116555760008481526009602090815260408083208484526001019091529020546001600160a01b031615611643576116406001846148bf565b92505b61164e6001826148bf565b9050611602565b506116618360006112b3565b15611674576116716001836148bf565b91505b50919050565b611682611c50565b6116e45760405162461bcd60e51b815260206004820152602d60248201527f4e46544d657461646174613a206e6f7420617574686f72697a656420746f206660448201526c7265657a65206d65746461746160981b6064820152608401610ba0565b60a1805460ff191660011790556040517feef043febddf4e1d1cf1f72ff1407b84e036e805aa0934418cb82095da8d716490600090a1565b6005546001600160a01b03811691600160a01b90910461ffff1690565b600082815260086020526040902054610e469033611a2c565b600a54610100900460ff16158080156117725750600a54600160ff909116105b80611793575061178130611a1d565b1580156117935750600a5460ff166001145b6117f65760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610ba0565b600a805460ff19166001179055801561181957600a805461ff0019166101001790555b61182287612bac565b61182c8a8a612be4565b611834612c15565b61183c612c8c565b611845886128be565b61184e8b611bfe565b61185960008c612037565b611871600080516020614b818339815191528c612037565b611889600080516020614afa8339815191528c612037565b6118a1600080516020614b3a8339815191528c612037565b6118b9600080516020614b3a83398151915280612cbb565b6118d1600080516020614b1a8339815191528c612037565b6118e9600080516020614b1a83398151915280612cbb565b6118fc82846001600160801b0316611d14565b61190f85856001600160801b0316612688565b61191886612822565b801561195e57600a805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050505050505050565b6005546006546001600160a01b0390911691565b6000805461198c90614672565b80601f01602080910402602001604051908101604052809291908181526020018280546119b890614672565b8015611a055780601f106119da57610100808354040283529160200191611a05565b820191906000526020600020905b8154815290600101906020018083116119e857829003601f168201915b505050505081565b600554600160b01b900460ff1690565b6001600160a01b03163b151590565b60008281526007602090815260408083206001600160a01b038516845290915290205460ff16610c7b57611a6a816001600160a01b03166014612d03565b611a75836020612d03565b604051602001611a86929190614908565b60408051601f198184030181529082905262461bcd60e51b8252610ba091600401613f91565b600061010a549050611af48184848080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611c6c92505050565b611aff846001612e9e565b9392505050565b60006001600160e01b031982166380ac58cd60e01b1480611b3757506001600160e01b03198216635b5e139f60e01b145b806109f657506301ffc9a760e01b6001600160e01b03198316146109f6565b600061010a54821080156109f6575050600090815261010e6020526040902054600160e01b900460ff161590565b6000611b8e612eb8565b905090565b6000828152610110602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6000611b8e816106d5611b84565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b6000611b8e600080516020614b3a8339815191526106d5611b84565b6000815111611cbc5760405162461bcd60e51b815260206004820152601c60248201527b27232a26b2ba30b230ba309d1032b6b83a3c9036b2ba30b230ba309760211b6044820152606401610ba0565b600082815260a2602090815260409091208251611cdb92840190613dbe565b506040518281527ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7906020015b60405180910390a15050565b612710811115611d365760405162461bcd60e51b8152600401610ba090614975565b600580546001600160b01b031916600160a01b61ffff8416026001600160a01b031916176001600160a01b0384169081179091556040518281527fe2497bd806ec41a6e0dd992c29a72efc0ef8fec9092d1978fd4a1e00b2f18304906020015b60405180910390a25050565b610bb28160006120a2565b6000611db882612705565b9050836001600160a01b031681600001516001600160a01b031614611def5760405162a1148160e81b815260040160405180910390fd5b6000846001600160a01b0316611e03611b84565b6001600160a01b03161480611e1f5750611e1f8561090b611b84565b80611e4a5750611e2d611b84565b6001600160a01b0316611e3f84610a9e565b6001600160a01b0316145b905080611e6a57604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b038416611e9157604051633a954ecd60e21b815260040160405180910390fd5b611e9e8585856001612eda565b611eaa60008487611b93565b6001600160a01b03858116600090815261010f6020908152604080832080546001600160401b03198082166001600160401b039283166000190183161790925589861680865283862080549384169383166001908101841694909417905589865261010e90945282852080546001600160e01b031916909417600160a01b42909216919091021783558701808452922080549193909116611f805761010a548214611f8057805460208601516001600160401b0316600160a01b026001600160e01b03199091166001600160a01b038a16171781555b50505082846001600160a01b0316866001600160a01b0316600080516020614ba183398151915260405160405180910390a45050505050565b600061201583838080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061200f92506120039150889050612f99565b805190602001206130e0565b9061312e565b949350505050565b60006109f6600080516020614b81833981519152836112b3565b6120418282613152565b610c7b82826131ad565b612055828261321a565b60008281526009602090815260408083206001600160a01b03851680855260028201808552838620805487526001909301855292852080546001600160a01b031916905584529152555050565b60006120ad83612705565b80519091508215612135576000816001600160a01b03166120cc611b84565b6001600160a01b031614806120e857506120e88261090b611b84565b8061211357506120f6611b84565b6001600160a01b031661210886610a9e565b6001600160a01b0316145b90508061213357604051632ce44b5f60e11b815260040160405180910390fd5b505b612143816000866001612eda565b61214f60008583611b93565b6001600160a01b03808216600081815261010f602090815260408083208054600160801b6000196001600160401b038084169190910181166001600160401b03198416811783900482166001908101831690930267ffffffffffffffff67ffffffffffffffff60801b0119909416179290921783558b865261010e909452828520805460ff60e01b1942909316600160a01b026001600160e01b03199091169097179690961716600160e01b17855591890180845292208054919490911661224c5761010a54821461224c57805460208701516001600160401b0316600160a01b026001600160e01b03199091166001600160a01b038716171781555b5050604051869250600091506001600160a01b03841690600080516020614ba1833981519152908390a4505061010b805460010190555050565b600080612294858585610cda565b92509050806122d35760405162461bcd60e51b815260206004820152600b60248201526a496e76616c69642072657160a81b6044820152606401610ba0565b426122e66101208701610100880161499e565b6001600160801b0316118061231457506123086101408601610120870161499e565b6001600160801b031642115b1561234f5760405162461bcd60e51b815260206004820152600b60248201526a14995c48195e1c1a5c995960aa1b6044820152606401610ba0565b600061235e6020870187613ff4565b6001600160a01b031614156123ab5760405162461bcd60e51b81526020600482015260136024820152721c9958da5c1a595b9d081d5b9919599a5b9959606a1b6044820152606401610ba0565b60008560a00135116123e75760405162461bcd60e51b8152602060048201526005602482015264302071747960d81b6044820152606401610ba0565b5061014090930135600090815260d760205260409020805460ff191660011790555090919050565b6127108111156124315760405162461bcd60e51b8152600401610ba090614975565b6040805180820182526001600160a01b038481168083526020808401868152600089815260038352869020945185546001600160a01b031916941693909317845591516001909301929092559151838152909185917f7365cf4122f072a3365c20d54eff9b38d73c096c28e1892ec8f5b0e403a0f12d910160405180910390a3505050565b806124f75734156124f25760405162461bcd60e51b81526020600482015260066024820152652156616c756560d01b6044820152606401610ba0565b6115e0565b600061250382856146e5565b905060006001600160a01b03841673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14156125355750348114612539565b5034155b8061257a5760405162461bcd60e51b8152602060048201526011602482015270496e76616c6964206d73672076616c756560781b6044820152606401610ba0565b60006001600160a01b038716156125915786612599565b612599610a8f565b905060008060006125a8611a0d565b905060018160018111156125be576125be6145f7565b14156125d5576125cc61196b565b93509150612603565b60006125df61171c565b90935090506127106125f561ffff8316896146e5565b6125ff9190614704565b9350505b8286101561264d5760405162461bcd60e51b8152602060048201526017602482015276466565732067726561746572207468616e20707269636560481b6044820152606401610ba0565b61266088612659611b84565b848661327c565b61267c8861266c611b84565b86612677878b6149b9565b61327c565b50505050505050505050565b6127108111156126aa5760405162461bcd60e51b8152600401610ba090614975565b600280546001600160a01b0384166001600160b01b03199091168117600160a01b61ffff851602179091556040518281527f90d7ec04bcb8978719414f82e52e4cb651db41d0e6f8cea6118c2191e6183adb90602001611d96565b60408051606081018252600080825260208201819052918101919091528161010a5481101561280957600081815261010e6020908152604091829020825160608101845290546001600160a01b0381168252600160a01b81046001600160401b031692820192909252600160e01b90910460ff161515918101829052906128075780516001600160a01b03161561279d579392505050565b5060001901600081815261010e6020908152604091829020825160608101845290546001600160a01b038116808352600160a01b82046001600160401b031693830193909352600160e01b900460ff1615159281019290925215612802579392505050565b61279d565b505b604051636f96cda160e11b815260040160405180910390fd5b600480546001600160a01b0319166001600160a01b0383169081179091556040517f299d17e95023f496e0ffc4909cff1a61f74bb5eb18de6f900f4155bfa1b3b33390600090a250565b6006819055600580546001600160a01b0319166001600160a01b0384161790556040517ff8086cee80709bd44c82f89dbca54115ebd05e840a88ab81df9cf5be9754eb6390611d0890849084906141d4565b60008080546128cc90614672565b80601f01602080910402602001604051908101604052809291908181526020018280546128f890614672565b80156129455780601f1061291a57610100808354040283529160200191612945565b820191906000526020600020905b81548152906001019060200180831161292857829003601f168201915b5050855193945061296193600093506020870192509050613dbe565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a168183604051611d089291906149d0565b6060611aff8383604051806060016040528060278152602001614b5a602791396132c1565b6005805482919060ff60b01b1916600160b01b8360018111156129dd576129dd6145f7565b02179055507fd246da9440709ce0dd3f4fd669abc85ada012ab9774b8ecdcc5059ba1486b9c181604051612a11919061460d565b60405180910390a150565b6000836001600160a01b031663150b7a02612a35611b84565b8786866040518563ffffffff1660e01b8152600401612a5794939291906149fe565b6020604051808303816000875af1925050508015612a92575060408051601f3d908101601f19168201909252612a8f91810190614a31565b60015b612aed573d808015612ac0576040519150601f19603f3d011682016040523d82523d6000602084013e612ac5565b606091505b508051612ae5576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050949350505050565b600081815260a260205260409020805460609190612b2790614672565b80601f0160208091040260200160405190810160405280929190818152602001828054612b5390614672565b8015612ba05780601f10612b7557610100808354040283529160200191612ba0565b820191906000526020600020905b815481529060010190602001808311612b8357829003601f168201915b50505050509050919050565b600a54610100900460ff16612bd35760405162461bcd60e51b8152600401610ba090614a4e565b612bdb61339c565b610bb2816133c3565b600a54610100900460ff16612c0b5760405162461bcd60e51b8152600401610ba090614a4e565b610c7b8282613452565b600a54610100900460ff16612c3c5760405162461bcd60e51b8152600401610ba090614a4e565b612c8a604051806040016040528060138152602001725369676e61747572654d696e7445524337323160681b815250604051806040016040528060018152602001603160f81b8152506134ad565b565b600a54610100900460ff16612cb35760405162461bcd60e51b8152600401610ba090614a4e565b612c8a6134de565b600082815260086020526040808220805490849055905190918391839186917fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff9190a4505050565b60606000612d128360026146e5565b612d1d9060026148bf565b6001600160401b03811115612d3457612d3461400f565b6040519080825280601f01601f191660200182016040528015612d5e576020820181803683370190505b509050600360fc1b81600081518110612d7957612d796148d7565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110612da857612da86148d7565b60200101906001600160f81b031916908160001a9053506000612dcc8460026146e5565b612dd79060016148bf565b90505b6001811115612e4f576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110612e0b57612e0b6148d7565b1a60f81b828281518110612e2157612e216148d7565b60200101906001600160f81b031916908160001a90535060049490941c93612e4881614a99565b9050612dda565b508315611aff5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610ba0565b610c7b82826040518060200160405280600081525061350c565b6000612ec3336110bc565b15612ed5575060131936013560601c90565b503390565b612ef3600080516020614afa83398151915260006112b3565b158015612f0857506001600160a01b03841615155b8015612f1c57506001600160a01b03831615155b156115e057612f39600080516020614afa833981519152856112b3565b158015612f5b5750612f59600080516020614afa833981519152846112b3565b155b156115e05760405162461bcd60e51b815260206004820152600e60248201526d215472616e736665722d526f6c6560901b6044820152606401610ba0565b60607fef2a0374db4a48b74209fd1a525c32d62e54c4185cbabd807193b07a40081d44612fc96020840184613ff4565b612fd96040850160208601613ff4565b6040850135612fee6080870160608801613ff4565b612ffb6080880188614726565b604051613009929190614ab0565b60405190819003902060a088013560c089013561302d6101008b0160e08c01613ff4565b61303f6101208c016101008d0161499e565b6130516101408d016101208e0161499e565b60408051602081019c909c526001600160a01b039a8b16908c015297891660608b015260808a019690965293871660a089015260c088019290925260e08701526101008601529092166101208401526001600160801b039182166101408085019190915291166101608301528301356101808201526101a0016040516020818303038152906040529050919050565b60006109f66130ed6136b6565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b600080600061313d8585613731565b9150915061314a81613777565b509392505050565b60008281526007602090815260408083206001600160a01b0385168085529252808320805460ff1916600117905551339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b6000828152600960205260408120805491600191906131cc83856148bf565b9091555050600092835260096020908152604080852083865260018101835281862080546001600160a01b039096166001600160a01b03199096168617905593855260029093019052912055565b6132248282611a2c565b60008281526007602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b80613286576115e0565b6001600160a01b03841673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14156132b5576124f2828261392d565b6115e0848484846139cf565b60606132cc84611a1d565b6133275760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610ba0565b600080856001600160a01b0316856040516133429190614ac0565b600060405180830381855af49150503d806000811461337d576040519150601f19603f3d011682016040523d82523d6000602084013e613382565b606091505b5091509150613392828286613a28565b9695505050505050565b600a54610100900460ff16612c8a5760405162461bcd60e51b8152600401610ba090614a4e565b600a54610100900460ff166133ea5760405162461bcd60e51b8152600401610ba090614a4e565b60005b8151811015610c7b576001606f600084848151811061340e5761340e6148d7565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790558061344a816148ed565b9150506133ed565b600a54610100900460ff166134795760405162461bcd60e51b8152600401610ba090614a4e565b815161348d9061010c906020850190613dbe565b5080516134a29061010d906020840190613dbe565b50600061010a555050565b600a54610100900460ff166134d45760405162461bcd60e51b8152600401610ba090614a4e565b610c7b8282613a61565b600a54610100900460ff166135055760405162461bcd60e51b8152600401610ba090614a4e565b6001600b55565b61010a546001600160a01b03841661353657604051622e076360e81b815260040160405180910390fd5b826135545760405163b562e8dd60e01b815260040160405180910390fd5b6135616000858386612eda565b6001600160a01b038416600081815261010f6020908152604080832080546001600160801b031981166001600160401b038083168b018116918217600160401b6001600160401b031990941690921783900481168b0181169092021790915585845261010e90925290912080546001600160e01b0319168317600160a01b42909316929092029190911790558190818501906135fc90611a1d565b15613673575b60405182906001600160a01b03881690600090600080516020614ba1833981519152908290a461363b6000878480600101955087612a1c565b613658576040516368d2bf6b60e11b815260040160405180910390fd5b808210613602578261010a541461366e57600080fd5b6136a6565b5b6040516001830192906001600160a01b03881690600090600080516020614ba1833981519152908290a4808210613674575b5061010a556115e0600085838684565b6000611b8e7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6136e560a35490565b60a4546040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b6000808251604114156137685760208301516040840151606085015160001a61375c87828585613aa2565b94509450505050613770565b506000905060025b9250929050565b600081600481111561378b5761378b6145f7565b14156137945750565b60018160048111156137a8576137a86145f7565b14156137f15760405162461bcd60e51b815260206004820152601860248201527745434453413a20696e76616c6964207369676e617475726560401b6044820152606401610ba0565b6002816004811115613805576138056145f7565b14156138535760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610ba0565b6003816004811115613867576138676145f7565b14156138c05760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610ba0565b60048160048111156138d4576138d46145f7565b1415610bb25760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610ba0565b6000826001600160a01b03168260405160006040518083038185875af1925050503d806000811461397a576040519150601f19603f3d011682016040523d82523d6000602084013e61397f565b606091505b5050905080610b775760405162461bcd60e51b815260206004820152601c60248201527b1b985d1a5d99481d1bdad95b881d1c985b9cd9995c8819985a5b195960221b6044820152606401610ba0565b816001600160a01b0316836001600160a01b031614156139ee576115e0565b6001600160a01b038316301415613a13576124f26001600160a01b0385168383613b85565b6115e06001600160a01b038516848484613bdb565b60608315613a37575081611aff565b825115613a475782518084602001fd5b8160405162461bcd60e51b8152600401610ba09190613f91565b600a54610100900460ff16613a885760405162461bcd60e51b8152600401610ba090614a4e565b81516020928301208151919092012060a39190915560a455565b6000806fa2a8918ca85bafe22016d0b997e4df60600160ff1b03831115613acf5750600090506003613b7c565b8460ff16601b14158015613ae757508460ff16601c14155b15613af85750600090506004613b7c565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015613b4c573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116613b7557600060019250925050613b7c565b9150600090505b94509492505050565b610b778363a9059cbb60e01b8484604051602401613ba49291906141d4565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152613c13565b6040516001600160a01b03808516602483015283166044820152606481018290526115e09085906323b872dd60e01b90608401613ba4565b6000613c68826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316613ce59092919063ffffffff16565b805190915015610b775780806020019051810190613c869190614adc565b610b775760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610ba0565b6060612015848460008585613cf985611a1d565b613d455760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610ba0565b600080866001600160a01b03168587604051613d619190614ac0565b60006040518083038185875af1925050503d8060008114613d9e576040519150601f19603f3d011682016040523d82523d6000602084013e613da3565b606091505b5091509150613db3828286613a28565b979650505050505050565b828054613dca90614672565b90600052602060002090601f016020900481019282613dec5760008555613e32565b82601f10613e0557805160ff1916838001178555613e32565b82800160010185558215613e32579182015b82811115613e32578251825591602001919060010190613e17565b50613e3e929150613e42565b5090565b5b80821115613e3e5760008155600101613e43565b80356001600160a01b0381168114613e6e57600080fd5b919050565b60008083601f840112613e8557600080fd5b5081356001600160401b03811115613e9c57600080fd5b60208301915083602082850101111561377057600080fd5b600080600060408486031215613ec957600080fd5b613ed284613e57565b925060208401356001600160401b03811115613eed57600080fd5b613ef986828701613e73565b9497909650939450505050565b6001600160e01b031981168114610bb257600080fd5b600060208284031215613f2e57600080fd5b8135611aff81613f06565b60005b83811015613f54578181015183820152602001613f3c565b838111156115e05750506000910152565b60008151808452613f7d816020860160208601613f39565b601f01601f19169290920160200192915050565b602081526000611aff6020830184613f65565b6001600160a01b03169052565b600060208284031215613fc357600080fd5b5035919050565b60008060408385031215613fdd57600080fd5b613fe683613e57565b946020939093013593505050565b60006020828403121561400657600080fd5b611aff82613e57565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171561404d5761404d61400f565b604052919050565b60006001600160401b0383111561406e5761406e61400f565b614081601f8401601f1916602001614025565b905082815283838301111561409557600080fd5b828260208301376000602084830101529392505050565b600082601f8301126140bd57600080fd5b611aff83833560208501614055565b600080604083850312156140df57600080fd5b8235915060208301356001600160401b038111156140fc57600080fd5b614108858286016140ac565b9150509250929050565b60008060006060848603121561412757600080fd5b61413084613e57565b925061413e60208501613e57565b9150604084013590509250925092565b60008060006040848603121561416357600080fd5b83356001600160401b038082111561417a57600080fd5b90850190610160828803121561418f57600080fd5b909350602085013590808211156141a557600080fd5b50613ef986828701613e73565b600080604083850312156141c557600080fd5b50508035926020909101359150565b6001600160a01b03929092168252602082015260400190565b6000806040838503121561420057600080fd5b8235915061421060208401613e57565b90509250929050565b60006020828403121561422b57600080fd5b81356001600160401b0381111561424157600080fd5b612015848285016140ac565b60008060006060848603121561426257600080fd5b8335925061413e60208501613e57565b8015158114610bb257600080fd5b6000806040838503121561429357600080fd5b61429c83613e57565b915060208301356142ac81614272565b809150509250929050565b600080602083850312156142ca57600080fd5b82356001600160401b03808211156142e157600080fd5b818501915085601f8301126142f557600080fd5b81358181111561430457600080fd5b8660208260051b850101111561431957600080fd5b60209290920196919550909350505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561438057603f1988860301845261436e858351613f65565b94509285019290850190600101614352565b5092979650505050505050565b60006020828403121561439f57600080fd5b813560028110611aff57600080fd5b600080600080608085870312156143c457600080fd5b6143cd85613e57565b93506143db60208601613e57565b92506040850135915060608501356001600160401b038111156143fd57600080fd5b8501601f8101871361440e57600080fd5b61441d87823560208401614055565b91505092959194509250565b600082601f83011261443a57600080fd5b813560206001600160401b038211156144555761445561400f565b8160051b614464828201614025565b928352848101820192828101908785111561447e57600080fd5b83870192505b84831015613db35761449583613e57565b82529183019190830190614484565b80356001600160801b0381168114613e6e57600080fd5b6000806000806000806000806000806101408b8d0312156144db57600080fd5b6144e48b613e57565b995060208b01356001600160401b038082111561450057600080fd5b61450c8e838f016140ac565b9a5060408d013591508082111561452257600080fd5b61452e8e838f016140ac565b995060608d013591508082111561454457600080fd5b6145508e838f016140ac565b985060808d013591508082111561456657600080fd5b506145738d828e01614429565b96505061458260a08c01613e57565b945061459060c08c01613e57565b935061459e60e08c016144a4565b92506145ad6101008c016144a4565b91506145bc6101208c01613e57565b90509295989b9194979a5092959850565b600080604083850312156145e057600080fd5b6145e983613e57565b915061421060208401613e57565b634e487b7160e01b600052602160045260246000fd5b602081016002831061462f57634e487b7160e01b600052602160045260246000fd5b91905290565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b602081526000612015602083018486614635565b600181811c9082168061468657607f821691505b6020821081141561167457634e487b7160e01b600052602260045260246000fd5b6020808252600e908201526d139bdd08185d5d1a1bdc9a5e995960921b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156146ff576146ff6146cf565b500290565b60008261472157634e487b7160e01b600052601260045260246000fd5b500490565b6000808335601e1984360301811261473d57600080fd5b8301803591506001600160401b0382111561475757600080fd5b60200191503681900382131561377057600080fd5b6000808335601e1984360301811261478357600080fd5b83016020810192503590506001600160401b038111156147a257600080fd5b80360383131561377057600080fd5b602081526147ca602082016147c584613e57565b613fa4565b60006147d860208401613e57565b6147e56040840182613fa4565b50604083013560608301526147fc60608401613e57565b6148096080840182613fa4565b50614817608084018461476c565b6101608060a086015261482f61018086018385614635565b925060a086013560c086015260c086013560e086015261485160e08701613e57565b915061010061486281870184613fa4565b61486d8188016144a4565b925050610120614887818701846001600160801b03169052565b6148928188016144a4565b9250506101406148ac818701846001600160801b03169052565b9590950135939094019290925250919050565b600082198211156148d2576148d26146cf565b500190565b634e487b7160e01b600052603260045260246000fd5b6000600019821415614901576149016146cf565b5060010190565b7402832b936b4b9b9b4b7b7399d1030b1b1b7bab73a1605d1b815260008351614938816015850160208801613f39565b7001034b99036b4b9b9b4b733903937b6329607d1b6015918401918201528351614969816026840160208801613f39565b01602601949350505050565b6020808252600f908201526e45786365656473206d61782062707360881b604082015260600190565b6000602082840312156149b057600080fd5b611aff826144a4565b6000828210156149cb576149cb6146cf565b500390565b6040815260006149e36040830185613f65565b82810360208401526149f58185613f65565b95945050505050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061339290830184613f65565b600060208284031215614a4357600080fd5b8151611aff81613f06565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b600081614aa857614aa86146cf565b506000190190565b8183823760009101908152919050565b60008251614ad2818460208701613f39565b9190910192915050565b600060208284031215614aee57600080fd5b8151611aff8161427256fe8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c5297e68f3a27f04914f2c6db0ad63b5e5c8173cebcc1a5341df045cf6dad7adc6bd6b5318a46e5fff572d5e4258a20774aab40cc35ac7680654b9081fcc82f80416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c65649f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220b58919b23f0a74769be319a6d26c87ee5dfcf01951c39dbb5f6da450652d7b2a64736f6c634300080c0033",
    "sourceMap": "2021:10664:353:-:0;;;3402:28;;;;;;;;;-1:-1:-1;3134:13:436;;;;;;;3133:14;;3179:34;;;;-1:-1:-1;3197:12:436;;3212:1;3197:12;;;;:16;3179:34;3178:108;;;;3220:44;3258:4;3220:29;;;;;:44;;:::i;:::-;3219:45;:66;;;;-1:-1:-1;3268:12:436;;;;;:17;3219:66;3157:201;;;;-1:-1:-1;;;3157:201:436;;216:2:644;3157:201:436;;;198:21:644;255:2;235:18;;;228:30;294:34;274:18;;;267:62;-1:-1:-1;;;345:18:644;;;338:44;399:19;;3157:201:436;;;;;;;;3368:12;:16;;-1:-1:-1;;3368:16:436;3383:1;3368:16;;;3394:65;;;;3428:13;:20;;-1:-1:-1;;3428:20:436;;;;;3394:65;3483:14;3479:99;;;3513:13;:21;;-1:-1:-1;;3513:21:436;;;3553:14;;-1:-1:-1;581:36:644;;3553:14:436;;569:2:644;554:18;3553:14:436;;;;;;;3479:99;3101:483;2021:10664:353;;1186:320:462;-1:-1:-1;;;;;1476:19:462;;:23;;;1186:320::o;429:194:644:-;2021:10664:353;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106102695760003560e01c80636f4f28371161014b5780636f4f28371461061c57806370a082311461063c5780637e54523c1461065c5780638da5cb5b1461067c5780639010d07c1461069a57806391d14854146106ba578063938e3d7b146106da57806395d89b41146106fa5780639bcf7a151461070f578063a217fddf1461072f578063a22cb46514610744578063a2309ff814610511578063a32fa5b314610764578063ac9650d814610784578063b24f2d39146107b1578063b6f10c79146107dc578063b88d4fde146107fc578063c87b56dd1461081c578063ca15c8731461083c578063d111515d1461085c578063d45573f614610871578063d547741f14610886578063e1591634146108a6578063e57553da146108c6578063e8a3d485146108db578063e985e9c5146108f0578063f28083c31461093a57600080fd5b806275a3171461026e57806301ffc9a7146102a157806306fdde03146102d1578063079fe40e146102f3578063081812fc14610320578063095ea7b31461034057806313af403514610362578063162094c41461038257806318160ddd146103a25780631e7ac488146103bd57806320c5429b146103dd57806323b872dd146103fd578063248a9ca31461041d578063252e82e81461044a578063274e4a1d146104895780632a55205a146104a35780632f2ff15d146104d157806336568abe146104f15780633b1475a71461051157806340e58ee51461052757806342842e0e14610547578063439c7be5146105675780634cc157df1461057a578063572b6c05146105bc578063600dd5ea146105dc5780636352211e146105fc575b600080fd5b34801561027a57600080fd5b5061028e610289366004613eb4565b61095c565b6040519081526020015b60405180910390f35b3480156102ad57600080fd5b506102c16102bc366004613f1c565b6109d0565b6040519015158152602001610298565b3480156102dd57600080fd5b506102e66109fc565b6040516102989190613f91565b3480156102ff57600080fd5b50610308610a8f565b6040516001600160a01b039091168152602001610298565b34801561032c57600080fd5b5061030861033b366004613fb1565b610a9e565b34801561034c57600080fd5b5061036061035b366004613fca565b610ae3565b005b34801561036e57600080fd5b5061036061037d366004613ff4565b610b7c565b34801561038e57600080fd5b5061036061039d3660046140cc565b610bb5565b3480156103ae57600080fd5b5061010b5461010a540361028e565b3480156103c957600080fd5b506103606103d8366004613fca565b610c7f565b3480156103e957600080fd5b506103606103f8366004613fb1565b610cad565b34801561040957600080fd5b50610360610418366004614112565b610ccf565b34801561042957600080fd5b5061028e610438366004613fb1565b60009081526008602052604090205490565b34801561045657600080fd5b5061046a61046536600461414e565b610cda565b6040805192151583526001600160a01b03909116602083015201610298565b34801561049557600080fd5b5060a1546102c19060ff1681565b3480156104af57600080fd5b506104c36104be3660046141b2565b610d1e565b6040516102989291906141d4565b3480156104dd57600080fd5b506103606104ec3660046141ed565b610d5b565b3480156104fd57600080fd5b5061036061050c3660046141ed565b610df1565b34801561051d57600080fd5b5061010a5461028e565b34801561053357600080fd5b50610360610542366004613fb1565b610e50565b34801561055357600080fd5b50610360610562366004614112565b610e5b565b61030861057536600461414e565b610e76565b34801561058657600080fd5b5061059a610595366004613fb1565b611051565b604080516001600160a01b03909316835261ffff909116602083015201610298565b3480156105c857600080fd5b506102c16105d7366004613ff4565b6110bc565b3480156105e857600080fd5b506103606105f7366004613fca565b6110da565b34801561060857600080fd5b50610308610617366004613fb1565b611108565b34801561062857600080fd5b50610360610637366004613ff4565b61111a565b34801561064857600080fd5b5061028e610657366004613ff4565b611147565b34801561066857600080fd5b50610360610677366004613fca565b611196565b34801561068857600080fd5b506001546001600160a01b0316610308565b3480156106a657600080fd5b506103086106b53660046141b2565b6111c4565b3480156106c657600080fd5b506102c16106d53660046141ed565b6112b3565b3480156106e657600080fd5b506103606106f5366004614219565b6112de565b34801561070657600080fd5b506102e661130b565b34801561071b57600080fd5b5061036061072a36600461424d565b61131b565b34801561073b57600080fd5b5061028e600081565b34801561075057600080fd5b5061036061075f366004614280565b61134a565b34801561077057600080fd5b506102c161077f3660046141ed565b61141e565b34801561079057600080fd5b506107a461079f3660046142b7565b611474565b604051610298919061432b565b3480156107bd57600080fd5b506002546001600160a01b03811690600160a01b900461ffff1661059a565b3480156107e857600080fd5b506103606107f736600461438d565b611568565b34801561080857600080fd5b506103606108173660046143ae565b611595565b34801561082857600080fd5b506102e6610837366004613fb1565b6115e6565b34801561084857600080fd5b5061028e610857366004613fb1565b6115f1565b34801561086857600080fd5b5061036061167a565b34801561087d57600080fd5b5061059a61171c565b34801561089257600080fd5b506103606108a13660046141ed565b611739565b3480156108b257600080fd5b506103606108c13660046144bb565b611752565b3480156108d257600080fd5b506104c361196b565b3480156108e757600080fd5b506102e661197f565b3480156108fc57600080fd5b506102c161090b3660046145cd565b6001600160a01b0391821660009081526101116020908152604080832093909416825291909152205460ff1690565b34801561094657600080fd5b5061094f611a0d565b604051610298919061460d565b6000600080516020614b818339815191526109778133611a2c565b610982858585611aac565b915081856001600160a01b03167f9d89e36eadf856db0ad9ffb5a569e07f95634dddd9501141ecf04820484ad0dc86866040516109c092919061465e565b60405180910390a3509392505050565b60006109db82611b06565b806109f6575063152a902d60e11b6001600160e01b03198316145b92915050565b606061010c8054610a0c90614672565b80601f0160208091040260200160405190810160405280929190818152602001828054610a3890614672565b8015610a855780601f10610a5a57610100808354040283529160200191610a85565b820191906000526020600020905b815481529060010190602001808311610a6857829003601f168201915b5050505050905090565b6004546001600160a01b031690565b6000610aa982611b56565b610ac6576040516333d1c03960e21b815260040160405180910390fd5b50600090815261011060205260409020546001600160a01b031690565b6000610aee82611108565b9050806001600160a01b0316836001600160a01b03161415610b235760405163250fdee360e21b815260040160405180910390fd5b806001600160a01b0316610b35611b84565b6001600160a01b031614610b6c57610b4f8161090b611b84565b610b6c576040516367d9dca160e11b815260040160405180910390fd5b610b77838383611b93565b505050565b610b84611bf0565b610ba95760405162461bcd60e51b8152600401610ba0906146a7565b60405180910390fd5b610bb281611bfe565b50565b610bbd611c50565b610c1e5760405162461bcd60e51b815260206004820152602c60248201527f4e46544d657461646174613a206e6f7420617574686f72697a656420746f207360448201526b32ba1036b2ba30b230ba309760a11b6064820152608401610ba0565b60a15460ff1615610c715760405162461bcd60e51b815260206004820181905260248201527f4e46544d657461646174613a206d657461646174612069732066726f7a656e2e6044820152606401610ba0565b610c7b8282611c6c565b5050565b610c87611bf0565b610ca35760405162461bcd60e51b8152600401610ba0906146a7565b610c7b8282611d14565b600080516020614b1a833981519152610cc68133611a2c565b610c7b82611da2565b610b77838383611dad565b600080610ce8858585611fb9565b610140860135600090815260d7602052604090205490915060ff16158015610d145750610d148161201d565b9150935093915050565b600080600080610d2d86611051565b90945084925061ffff169050612710610d4682876146e5565b610d509190614704565b925050509250929050565b600082815260086020526040902054610d749033611a2c565b60008281526007602090815260408083206001600160a01b038516845290915290205460ff1615610de75760405162461bcd60e51b815260206004820152601d60248201527f43616e206f6e6c79206772616e7420746f206e6f6e20686f6c646572730000006044820152606401610ba0565b610c7b8282612037565b336001600160a01b03821614610e465760405162461bcd60e51b815260206004820152601a60248201527921b0b71037b7363c903932b737bab731b2903337b91039b2b63360311b6044820152606401610ba0565b610c7b828261204b565b610bb28160016120a2565b610b7783838360405180602001604052806000815250611595565b60006002600b541415610ecb5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610ba0565b6002600b55600160a085013514610f3d5760405162461bcd60e51b815260206004820152603060248201527f4c6f79616c7479436172643a206f6e6c792031204e46542063616e206265206d60448201526f34b73a32b21030ba1030903a34b6b29760811b6064820152608401610ba0565b610f48848484612286565b90506000610f596020860186613ff4565b90506000610f7382610f6e6080890189614726565b611aac565b90506000610f876040880160208901613ff4565b6001600160a01b031614158015610fa15750604086013515155b15610fc457610fc481610fba6040890160208a01613ff4565b886040013561240f565b610ff7610fd76080880160608901613ff4565b60a0880135610fed6101008a0160e08b01613ff4565b8960c001356124b6565b80826001600160a01b0316846001600160a01b03167fee0cf9c3e87795b1932d13f80f892f620f567b4465e768ced5d64aa44ca1d64c8960405161103b91906147b1565b60405180910390a450506001600b559392505050565b6000818152600360209081526040808320815180830190925280546001600160a01b03168083526001909101549282019290925282911561109857805160208201516110b2565b6002546001600160a01b03811690600160a01b900461ffff165b9250925050915091565b6001600160a01b03166000908152606f602052604090205460ff1690565b6110e2611bf0565b6110fe5760405162461bcd60e51b8152600401610ba0906146a7565b610c7b8282612688565b600061111382612705565b5192915050565b611122611bf0565b61113e5760405162461bcd60e51b8152600401610ba0906146a7565b610bb281612822565b60006001600160a01b038216611170576040516323d3ad8160e21b815260040160405180910390fd5b506001600160a01b0316600090815261010f60205260409020546001600160401b031690565b61119e611bf0565b6111ba5760405162461bcd60e51b8152600401610ba0906146a7565b610c7b828261286c565b60008281526009602052604081205481805b828110156112aa5760008681526009602090815260408083208484526001019091529020546001600160a01b03161561125357848214156112415760008681526009602090815260408083209383526001909301905220546001600160a01b031692506109f6915050565b61124c6001836148bf565b9150611298565b61125e8660006112b3565b80156112855750600086815260096020908152604080832083805260020190915290205481145b15611298576112956001836148bf565b91505b6112a36001826148bf565b90506111d6565b50505092915050565b60009182526007602090815260408084206001600160a01b0393909316845291905290205460ff1690565b6112e6611bf0565b6113025760405162461bcd60e51b8152600401610ba0906146a7565b610bb2816128be565b606061010d8054610a0c90614672565b611323611bf0565b61133f5760405162461bcd60e51b8152600401610ba0906146a7565b610b7783838361240f565b611352611b84565b6001600160a01b0316826001600160a01b031614156113845760405163b06307db60e01b815260040160405180910390fd5b806101116000611392611b84565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff1916921515929092179091556113d6611b84565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051611412911515815260200190565b60405180910390a35050565b600082815260076020908152604080832083805290915281205460ff1661146b575060008281526007602090815260408083206001600160a01b038516845290915290205460ff166109f6565b50600192915050565b6060816001600160401b0381111561148e5761148e61400f565b6040519080825280602002602001820160405280156114c157816020015b60608152602001906001900390816114ac5790505b50905060005b8281101561156157611531308585848181106114e5576114e56148d7565b90506020028101906114f79190614726565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061299392505050565b828281518110611543576115436148d7565b60200260200101819052508080611559906148ed565b9150506114c7565b5092915050565b611570611bf0565b61158c5760405162461bcd60e51b8152600401610ba0906146a7565b610bb2816129b8565b6115a0848484611dad565b6115b2836001600160a01b0316611a1d565b156115e0576115c384848484612a1c565b6115e0576040516368d2bf6b60e11b815260040160405180910390fd5b50505050565b60606109f682612b0a565b600081815260096020526040812054815b818110156116555760008481526009602090815260408083208484526001019091529020546001600160a01b031615611643576116406001846148bf565b92505b61164e6001826148bf565b9050611602565b506116618360006112b3565b15611674576116716001836148bf565b91505b50919050565b611682611c50565b6116e45760405162461bcd60e51b815260206004820152602d60248201527f4e46544d657461646174613a206e6f7420617574686f72697a656420746f206660448201526c7265657a65206d65746461746160981b6064820152608401610ba0565b60a1805460ff191660011790556040517feef043febddf4e1d1cf1f72ff1407b84e036e805aa0934418cb82095da8d716490600090a1565b6005546001600160a01b03811691600160a01b90910461ffff1690565b600082815260086020526040902054610e469033611a2c565b600a54610100900460ff16158080156117725750600a54600160ff909116105b80611793575061178130611a1d565b1580156117935750600a5460ff166001145b6117f65760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610ba0565b600a805460ff19166001179055801561181957600a805461ff0019166101001790555b61182287612bac565b61182c8a8a612be4565b611834612c15565b61183c612c8c565b611845886128be565b61184e8b611bfe565b61185960008c612037565b611871600080516020614b818339815191528c612037565b611889600080516020614afa8339815191528c612037565b6118a1600080516020614b3a8339815191528c612037565b6118b9600080516020614b3a83398151915280612cbb565b6118d1600080516020614b1a8339815191528c612037565b6118e9600080516020614b1a83398151915280612cbb565b6118fc82846001600160801b0316611d14565b61190f85856001600160801b0316612688565b61191886612822565b801561195e57600a805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050505050505050565b6005546006546001600160a01b0390911691565b6000805461198c90614672565b80601f01602080910402602001604051908101604052809291908181526020018280546119b890614672565b8015611a055780601f106119da57610100808354040283529160200191611a05565b820191906000526020600020905b8154815290600101906020018083116119e857829003601f168201915b505050505081565b600554600160b01b900460ff1690565b6001600160a01b03163b151590565b60008281526007602090815260408083206001600160a01b038516845290915290205460ff16610c7b57611a6a816001600160a01b03166014612d03565b611a75836020612d03565b604051602001611a86929190614908565b60408051601f198184030181529082905262461bcd60e51b8252610ba091600401613f91565b600061010a549050611af48184848080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611c6c92505050565b611aff846001612e9e565b9392505050565b60006001600160e01b031982166380ac58cd60e01b1480611b3757506001600160e01b03198216635b5e139f60e01b145b806109f657506301ffc9a760e01b6001600160e01b03198316146109f6565b600061010a54821080156109f6575050600090815261010e6020526040902054600160e01b900460ff161590565b6000611b8e612eb8565b905090565b6000828152610110602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6000611b8e816106d5611b84565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b6000611b8e600080516020614b3a8339815191526106d5611b84565b6000815111611cbc5760405162461bcd60e51b815260206004820152601c60248201527b27232a26b2ba30b230ba309d1032b6b83a3c9036b2ba30b230ba309760211b6044820152606401610ba0565b600082815260a2602090815260409091208251611cdb92840190613dbe565b506040518281527ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7906020015b60405180910390a15050565b612710811115611d365760405162461bcd60e51b8152600401610ba090614975565b600580546001600160b01b031916600160a01b61ffff8416026001600160a01b031916176001600160a01b0384169081179091556040518281527fe2497bd806ec41a6e0dd992c29a72efc0ef8fec9092d1978fd4a1e00b2f18304906020015b60405180910390a25050565b610bb28160006120a2565b6000611db882612705565b9050836001600160a01b031681600001516001600160a01b031614611def5760405162a1148160e81b815260040160405180910390fd5b6000846001600160a01b0316611e03611b84565b6001600160a01b03161480611e1f5750611e1f8561090b611b84565b80611e4a5750611e2d611b84565b6001600160a01b0316611e3f84610a9e565b6001600160a01b0316145b905080611e6a57604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b038416611e9157604051633a954ecd60e21b815260040160405180910390fd5b611e9e8585856001612eda565b611eaa60008487611b93565b6001600160a01b03858116600090815261010f6020908152604080832080546001600160401b03198082166001600160401b039283166000190183161790925589861680865283862080549384169383166001908101841694909417905589865261010e90945282852080546001600160e01b031916909417600160a01b42909216919091021783558701808452922080549193909116611f805761010a548214611f8057805460208601516001600160401b0316600160a01b026001600160e01b03199091166001600160a01b038a16171781555b50505082846001600160a01b0316866001600160a01b0316600080516020614ba183398151915260405160405180910390a45050505050565b600061201583838080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061200f92506120039150889050612f99565b805190602001206130e0565b9061312e565b949350505050565b60006109f6600080516020614b81833981519152836112b3565b6120418282613152565b610c7b82826131ad565b612055828261321a565b60008281526009602090815260408083206001600160a01b03851680855260028201808552838620805487526001909301855292852080546001600160a01b031916905584529152555050565b60006120ad83612705565b80519091508215612135576000816001600160a01b03166120cc611b84565b6001600160a01b031614806120e857506120e88261090b611b84565b8061211357506120f6611b84565b6001600160a01b031661210886610a9e565b6001600160a01b0316145b90508061213357604051632ce44b5f60e11b815260040160405180910390fd5b505b612143816000866001612eda565b61214f60008583611b93565b6001600160a01b03808216600081815261010f602090815260408083208054600160801b6000196001600160401b038084169190910181166001600160401b03198416811783900482166001908101831690930267ffffffffffffffff67ffffffffffffffff60801b0119909416179290921783558b865261010e909452828520805460ff60e01b1942909316600160a01b026001600160e01b03199091169097179690961716600160e01b17855591890180845292208054919490911661224c5761010a54821461224c57805460208701516001600160401b0316600160a01b026001600160e01b03199091166001600160a01b038716171781555b5050604051869250600091506001600160a01b03841690600080516020614ba1833981519152908390a4505061010b805460010190555050565b600080612294858585610cda565b92509050806122d35760405162461bcd60e51b815260206004820152600b60248201526a496e76616c69642072657160a81b6044820152606401610ba0565b426122e66101208701610100880161499e565b6001600160801b0316118061231457506123086101408601610120870161499e565b6001600160801b031642115b1561234f5760405162461bcd60e51b815260206004820152600b60248201526a14995c48195e1c1a5c995960aa1b6044820152606401610ba0565b600061235e6020870187613ff4565b6001600160a01b031614156123ab5760405162461bcd60e51b81526020600482015260136024820152721c9958da5c1a595b9d081d5b9919599a5b9959606a1b6044820152606401610ba0565b60008560a00135116123e75760405162461bcd60e51b8152602060048201526005602482015264302071747960d81b6044820152606401610ba0565b5061014090930135600090815260d760205260409020805460ff191660011790555090919050565b6127108111156124315760405162461bcd60e51b8152600401610ba090614975565b6040805180820182526001600160a01b038481168083526020808401868152600089815260038352869020945185546001600160a01b031916941693909317845591516001909301929092559151838152909185917f7365cf4122f072a3365c20d54eff9b38d73c096c28e1892ec8f5b0e403a0f12d910160405180910390a3505050565b806124f75734156124f25760405162461bcd60e51b81526020600482015260066024820152652156616c756560d01b6044820152606401610ba0565b6115e0565b600061250382856146e5565b905060006001600160a01b03841673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14156125355750348114612539565b5034155b8061257a5760405162461bcd60e51b8152602060048201526011602482015270496e76616c6964206d73672076616c756560781b6044820152606401610ba0565b60006001600160a01b038716156125915786612599565b612599610a8f565b905060008060006125a8611a0d565b905060018160018111156125be576125be6145f7565b14156125d5576125cc61196b565b93509150612603565b60006125df61171c565b90935090506127106125f561ffff8316896146e5565b6125ff9190614704565b9350505b8286101561264d5760405162461bcd60e51b8152602060048201526017602482015276466565732067726561746572207468616e20707269636560481b6044820152606401610ba0565b61266088612659611b84565b848661327c565b61267c8861266c611b84565b86612677878b6149b9565b61327c565b50505050505050505050565b6127108111156126aa5760405162461bcd60e51b8152600401610ba090614975565b600280546001600160a01b0384166001600160b01b03199091168117600160a01b61ffff851602179091556040518281527f90d7ec04bcb8978719414f82e52e4cb651db41d0e6f8cea6118c2191e6183adb90602001611d96565b60408051606081018252600080825260208201819052918101919091528161010a5481101561280957600081815261010e6020908152604091829020825160608101845290546001600160a01b0381168252600160a01b81046001600160401b031692820192909252600160e01b90910460ff161515918101829052906128075780516001600160a01b03161561279d579392505050565b5060001901600081815261010e6020908152604091829020825160608101845290546001600160a01b038116808352600160a01b82046001600160401b031693830193909352600160e01b900460ff1615159281019290925215612802579392505050565b61279d565b505b604051636f96cda160e11b815260040160405180910390fd5b600480546001600160a01b0319166001600160a01b0383169081179091556040517f299d17e95023f496e0ffc4909cff1a61f74bb5eb18de6f900f4155bfa1b3b33390600090a250565b6006819055600580546001600160a01b0319166001600160a01b0384161790556040517ff8086cee80709bd44c82f89dbca54115ebd05e840a88ab81df9cf5be9754eb6390611d0890849084906141d4565b60008080546128cc90614672565b80601f01602080910402602001604051908101604052809291908181526020018280546128f890614672565b80156129455780601f1061291a57610100808354040283529160200191612945565b820191906000526020600020905b81548152906001019060200180831161292857829003601f168201915b5050855193945061296193600093506020870192509050613dbe565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a168183604051611d089291906149d0565b6060611aff8383604051806060016040528060278152602001614b5a602791396132c1565b6005805482919060ff60b01b1916600160b01b8360018111156129dd576129dd6145f7565b02179055507fd246da9440709ce0dd3f4fd669abc85ada012ab9774b8ecdcc5059ba1486b9c181604051612a11919061460d565b60405180910390a150565b6000836001600160a01b031663150b7a02612a35611b84565b8786866040518563ffffffff1660e01b8152600401612a5794939291906149fe565b6020604051808303816000875af1925050508015612a92575060408051601f3d908101601f19168201909252612a8f91810190614a31565b60015b612aed573d808015612ac0576040519150601f19603f3d011682016040523d82523d6000602084013e612ac5565b606091505b508051612ae5576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050949350505050565b600081815260a260205260409020805460609190612b2790614672565b80601f0160208091040260200160405190810160405280929190818152602001828054612b5390614672565b8015612ba05780601f10612b7557610100808354040283529160200191612ba0565b820191906000526020600020905b815481529060010190602001808311612b8357829003601f168201915b50505050509050919050565b600a54610100900460ff16612bd35760405162461bcd60e51b8152600401610ba090614a4e565b612bdb61339c565b610bb2816133c3565b600a54610100900460ff16612c0b5760405162461bcd60e51b8152600401610ba090614a4e565b610c7b8282613452565b600a54610100900460ff16612c3c5760405162461bcd60e51b8152600401610ba090614a4e565b612c8a604051806040016040528060138152602001725369676e61747572654d696e7445524337323160681b815250604051806040016040528060018152602001603160f81b8152506134ad565b565b600a54610100900460ff16612cb35760405162461bcd60e51b8152600401610ba090614a4e565b612c8a6134de565b600082815260086020526040808220805490849055905190918391839186917fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff9190a4505050565b60606000612d128360026146e5565b612d1d9060026148bf565b6001600160401b03811115612d3457612d3461400f565b6040519080825280601f01601f191660200182016040528015612d5e576020820181803683370190505b509050600360fc1b81600081518110612d7957612d796148d7565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110612da857612da86148d7565b60200101906001600160f81b031916908160001a9053506000612dcc8460026146e5565b612dd79060016148bf565b90505b6001811115612e4f576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110612e0b57612e0b6148d7565b1a60f81b828281518110612e2157612e216148d7565b60200101906001600160f81b031916908160001a90535060049490941c93612e4881614a99565b9050612dda565b508315611aff5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610ba0565b610c7b82826040518060200160405280600081525061350c565b6000612ec3336110bc565b15612ed5575060131936013560601c90565b503390565b612ef3600080516020614afa83398151915260006112b3565b158015612f0857506001600160a01b03841615155b8015612f1c57506001600160a01b03831615155b156115e057612f39600080516020614afa833981519152856112b3565b158015612f5b5750612f59600080516020614afa833981519152846112b3565b155b156115e05760405162461bcd60e51b815260206004820152600e60248201526d215472616e736665722d526f6c6560901b6044820152606401610ba0565b60607fef2a0374db4a48b74209fd1a525c32d62e54c4185cbabd807193b07a40081d44612fc96020840184613ff4565b612fd96040850160208601613ff4565b6040850135612fee6080870160608801613ff4565b612ffb6080880188614726565b604051613009929190614ab0565b60405190819003902060a088013560c089013561302d6101008b0160e08c01613ff4565b61303f6101208c016101008d0161499e565b6130516101408d016101208e0161499e565b60408051602081019c909c526001600160a01b039a8b16908c015297891660608b015260808a019690965293871660a089015260c088019290925260e08701526101008601529092166101208401526001600160801b039182166101408085019190915291166101608301528301356101808201526101a0016040516020818303038152906040529050919050565b60006109f66130ed6136b6565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b600080600061313d8585613731565b9150915061314a81613777565b509392505050565b60008281526007602090815260408083206001600160a01b0385168085529252808320805460ff1916600117905551339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b6000828152600960205260408120805491600191906131cc83856148bf565b9091555050600092835260096020908152604080852083865260018101835281862080546001600160a01b039096166001600160a01b03199096168617905593855260029093019052912055565b6132248282611a2c565b60008281526007602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b80613286576115e0565b6001600160a01b03841673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14156132b5576124f2828261392d565b6115e0848484846139cf565b60606132cc84611a1d565b6133275760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610ba0565b600080856001600160a01b0316856040516133429190614ac0565b600060405180830381855af49150503d806000811461337d576040519150601f19603f3d011682016040523d82523d6000602084013e613382565b606091505b5091509150613392828286613a28565b9695505050505050565b600a54610100900460ff16612c8a5760405162461bcd60e51b8152600401610ba090614a4e565b600a54610100900460ff166133ea5760405162461bcd60e51b8152600401610ba090614a4e565b60005b8151811015610c7b576001606f600084848151811061340e5761340e6148d7565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790558061344a816148ed565b9150506133ed565b600a54610100900460ff166134795760405162461bcd60e51b8152600401610ba090614a4e565b815161348d9061010c906020850190613dbe565b5080516134a29061010d906020840190613dbe565b50600061010a555050565b600a54610100900460ff166134d45760405162461bcd60e51b8152600401610ba090614a4e565b610c7b8282613a61565b600a54610100900460ff166135055760405162461bcd60e51b8152600401610ba090614a4e565b6001600b55565b61010a546001600160a01b03841661353657604051622e076360e81b815260040160405180910390fd5b826135545760405163b562e8dd60e01b815260040160405180910390fd5b6135616000858386612eda565b6001600160a01b038416600081815261010f6020908152604080832080546001600160801b031981166001600160401b038083168b018116918217600160401b6001600160401b031990941690921783900481168b0181169092021790915585845261010e90925290912080546001600160e01b0319168317600160a01b42909316929092029190911790558190818501906135fc90611a1d565b15613673575b60405182906001600160a01b03881690600090600080516020614ba1833981519152908290a461363b6000878480600101955087612a1c565b613658576040516368d2bf6b60e11b815260040160405180910390fd5b808210613602578261010a541461366e57600080fd5b6136a6565b5b6040516001830192906001600160a01b03881690600090600080516020614ba1833981519152908290a4808210613674575b5061010a556115e0600085838684565b6000611b8e7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6136e560a35490565b60a4546040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b6000808251604114156137685760208301516040840151606085015160001a61375c87828585613aa2565b94509450505050613770565b506000905060025b9250929050565b600081600481111561378b5761378b6145f7565b14156137945750565b60018160048111156137a8576137a86145f7565b14156137f15760405162461bcd60e51b815260206004820152601860248201527745434453413a20696e76616c6964207369676e617475726560401b6044820152606401610ba0565b6002816004811115613805576138056145f7565b14156138535760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610ba0565b6003816004811115613867576138676145f7565b14156138c05760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610ba0565b60048160048111156138d4576138d46145f7565b1415610bb25760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610ba0565b6000826001600160a01b03168260405160006040518083038185875af1925050503d806000811461397a576040519150601f19603f3d011682016040523d82523d6000602084013e61397f565b606091505b5050905080610b775760405162461bcd60e51b815260206004820152601c60248201527b1b985d1a5d99481d1bdad95b881d1c985b9cd9995c8819985a5b195960221b6044820152606401610ba0565b816001600160a01b0316836001600160a01b031614156139ee576115e0565b6001600160a01b038316301415613a13576124f26001600160a01b0385168383613b85565b6115e06001600160a01b038516848484613bdb565b60608315613a37575081611aff565b825115613a475782518084602001fd5b8160405162461bcd60e51b8152600401610ba09190613f91565b600a54610100900460ff16613a885760405162461bcd60e51b8152600401610ba090614a4e565b81516020928301208151919092012060a39190915560a455565b6000806fa2a8918ca85bafe22016d0b997e4df60600160ff1b03831115613acf5750600090506003613b7c565b8460ff16601b14158015613ae757508460ff16601c14155b15613af85750600090506004613b7c565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015613b4c573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116613b7557600060019250925050613b7c565b9150600090505b94509492505050565b610b778363a9059cbb60e01b8484604051602401613ba49291906141d4565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152613c13565b6040516001600160a01b03808516602483015283166044820152606481018290526115e09085906323b872dd60e01b90608401613ba4565b6000613c68826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316613ce59092919063ffffffff16565b805190915015610b775780806020019051810190613c869190614adc565b610b775760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610ba0565b6060612015848460008585613cf985611a1d565b613d455760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610ba0565b600080866001600160a01b03168587604051613d619190614ac0565b60006040518083038185875af1925050503d8060008114613d9e576040519150601f19603f3d011682016040523d82523d6000602084013e613da3565b606091505b5091509150613db3828286613a28565b979650505050505050565b828054613dca90614672565b90600052602060002090601f016020900481019282613dec5760008555613e32565b82601f10613e0557805160ff1916838001178555613e32565b82800160010185558215613e32579182015b82811115613e32578251825591602001919060010190613e17565b50613e3e929150613e42565b5090565b5b80821115613e3e5760008155600101613e43565b80356001600160a01b0381168114613e6e57600080fd5b919050565b60008083601f840112613e8557600080fd5b5081356001600160401b03811115613e9c57600080fd5b60208301915083602082850101111561377057600080fd5b600080600060408486031215613ec957600080fd5b613ed284613e57565b925060208401356001600160401b03811115613eed57600080fd5b613ef986828701613e73565b9497909650939450505050565b6001600160e01b031981168114610bb257600080fd5b600060208284031215613f2e57600080fd5b8135611aff81613f06565b60005b83811015613f54578181015183820152602001613f3c565b838111156115e05750506000910152565b60008151808452613f7d816020860160208601613f39565b601f01601f19169290920160200192915050565b602081526000611aff6020830184613f65565b6001600160a01b03169052565b600060208284031215613fc357600080fd5b5035919050565b60008060408385031215613fdd57600080fd5b613fe683613e57565b946020939093013593505050565b60006020828403121561400657600080fd5b611aff82613e57565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171561404d5761404d61400f565b604052919050565b60006001600160401b0383111561406e5761406e61400f565b614081601f8401601f1916602001614025565b905082815283838301111561409557600080fd5b828260208301376000602084830101529392505050565b600082601f8301126140bd57600080fd5b611aff83833560208501614055565b600080604083850312156140df57600080fd5b8235915060208301356001600160401b038111156140fc57600080fd5b614108858286016140ac565b9150509250929050565b60008060006060848603121561412757600080fd5b61413084613e57565b925061413e60208501613e57565b9150604084013590509250925092565b60008060006040848603121561416357600080fd5b83356001600160401b038082111561417a57600080fd5b90850190610160828803121561418f57600080fd5b909350602085013590808211156141a557600080fd5b50613ef986828701613e73565b600080604083850312156141c557600080fd5b50508035926020909101359150565b6001600160a01b03929092168252602082015260400190565b6000806040838503121561420057600080fd5b8235915061421060208401613e57565b90509250929050565b60006020828403121561422b57600080fd5b81356001600160401b0381111561424157600080fd5b612015848285016140ac565b60008060006060848603121561426257600080fd5b8335925061413e60208501613e57565b8015158114610bb257600080fd5b6000806040838503121561429357600080fd5b61429c83613e57565b915060208301356142ac81614272565b809150509250929050565b600080602083850312156142ca57600080fd5b82356001600160401b03808211156142e157600080fd5b818501915085601f8301126142f557600080fd5b81358181111561430457600080fd5b8660208260051b850101111561431957600080fd5b60209290920196919550909350505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561438057603f1988860301845261436e858351613f65565b94509285019290850190600101614352565b5092979650505050505050565b60006020828403121561439f57600080fd5b813560028110611aff57600080fd5b600080600080608085870312156143c457600080fd5b6143cd85613e57565b93506143db60208601613e57565b92506040850135915060608501356001600160401b038111156143fd57600080fd5b8501601f8101871361440e57600080fd5b61441d87823560208401614055565b91505092959194509250565b600082601f83011261443a57600080fd5b813560206001600160401b038211156144555761445561400f565b8160051b614464828201614025565b928352848101820192828101908785111561447e57600080fd5b83870192505b84831015613db35761449583613e57565b82529183019190830190614484565b80356001600160801b0381168114613e6e57600080fd5b6000806000806000806000806000806101408b8d0312156144db57600080fd5b6144e48b613e57565b995060208b01356001600160401b038082111561450057600080fd5b61450c8e838f016140ac565b9a5060408d013591508082111561452257600080fd5b61452e8e838f016140ac565b995060608d013591508082111561454457600080fd5b6145508e838f016140ac565b985060808d013591508082111561456657600080fd5b506145738d828e01614429565b96505061458260a08c01613e57565b945061459060c08c01613e57565b935061459e60e08c016144a4565b92506145ad6101008c016144a4565b91506145bc6101208c01613e57565b90509295989b9194979a5092959850565b600080604083850312156145e057600080fd5b6145e983613e57565b915061421060208401613e57565b634e487b7160e01b600052602160045260246000fd5b602081016002831061462f57634e487b7160e01b600052602160045260246000fd5b91905290565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b602081526000612015602083018486614635565b600181811c9082168061468657607f821691505b6020821081141561167457634e487b7160e01b600052602260045260246000fd5b6020808252600e908201526d139bdd08185d5d1a1bdc9a5e995960921b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156146ff576146ff6146cf565b500290565b60008261472157634e487b7160e01b600052601260045260246000fd5b500490565b6000808335601e1984360301811261473d57600080fd5b8301803591506001600160401b0382111561475757600080fd5b60200191503681900382131561377057600080fd5b6000808335601e1984360301811261478357600080fd5b83016020810192503590506001600160401b038111156147a257600080fd5b80360383131561377057600080fd5b602081526147ca602082016147c584613e57565b613fa4565b60006147d860208401613e57565b6147e56040840182613fa4565b50604083013560608301526147fc60608401613e57565b6148096080840182613fa4565b50614817608084018461476c565b6101608060a086015261482f61018086018385614635565b925060a086013560c086015260c086013560e086015261485160e08701613e57565b915061010061486281870184613fa4565b61486d8188016144a4565b925050610120614887818701846001600160801b03169052565b6148928188016144a4565b9250506101406148ac818701846001600160801b03169052565b9590950135939094019290925250919050565b600082198211156148d2576148d26146cf565b500190565b634e487b7160e01b600052603260045260246000fd5b6000600019821415614901576149016146cf565b5060010190565b7402832b936b4b9b9b4b7b7399d1030b1b1b7bab73a1605d1b815260008351614938816015850160208801613f39565b7001034b99036b4b9b9b4b733903937b6329607d1b6015918401918201528351614969816026840160208801613f39565b01602601949350505050565b6020808252600f908201526e45786365656473206d61782062707360881b604082015260600190565b6000602082840312156149b057600080fd5b611aff826144a4565b6000828210156149cb576149cb6146cf565b500390565b6040815260006149e36040830185613f65565b82810360208401526149f58185613f65565b95945050505050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061339290830184613f65565b600060208284031215614a4357600080fd5b8151611aff81613f06565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b600081614aa857614aa86146cf565b506000190190565b8183823760009101908152919050565b60008251614ad2818460208701613f39565b9190910192915050565b600060208284031215614aee57600080fd5b8151611aff8161427256fe8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c5297e68f3a27f04914f2c6db0ad63b5e5c8173cebcc1a5341df045cf6dad7adc6bd6b5318a46e5fff572d5e4258a20774aab40cc35ac7680654b9081fcc82f80416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c65649f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220b58919b23f0a74769be319a6d26c87ee5dfcf01951c39dbb5f6da450652d7b2a64736f6c634300080c0033",
    "sourceMap": "2021:10664:353:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6609:218;;;;;;;;;;-1:-1:-1;6609:218:353;;;;;:::i;:::-;;:::i;:::-;;;1181:25:644;;;1169:2;1154:18;6609:218:353;;;;;;;;5156:269;;;;;;;;;;-1:-1:-1;5156:269:353;;;;;:::i;:::-;;:::i;:::-;;;1768:14:644;;1761:22;1743:41;;1731:2;1716:18;5156:269:353;1603:187:644;6839:98:26;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;676:104:72:-;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;2819:32:644;;;2801:51;;2789:2;2774:18;676:104:72;2655:203:644;8336:200:26;;;;;;;;;;-1:-1:-1;8336:200:26;;;;;:::i;:::-;;:::i;7872:403::-;;;;;;;;;;-1:-1:-1;7872:403:26;;;;;:::i;:::-;;:::i;:::-;;1133:173:68;;;;;;;;;;-1:-1:-1;1133:173:68;;;;;:::i;:::-;;:::i;778:268:64:-;;;;;;;;;;-1:-1:-1;778:268:64;;;;;:::i;:::-;;:::i;2895:306:26:-;;;;;;;;;;-1:-1:-1;3154:12:26;;3138:13;;:28;2895:306;;2043:269:71;;;;;;;;;;-1:-1:-1;2043:269:71;;;;;:::i;:::-;;:::i;7134:112:353:-;;;;;;;;;;-1:-1:-1;7134:112:353;;;;;:::i;:::-;;:::i;9175:164:26:-;;;;;;;;;;-1:-1:-1;9175:164:26;;;;;:::i;:::-;;:::i;2740:120:69:-;;;;;;;;;;-1:-1:-1;2740:120:69;;;;;:::i;:::-;2808:7;2834:19;;;:13;:19;;;;;;;2740:120;1252:293:84;;;;;;;;;;-1:-1:-1;1252:293:84;;;;;:::i;:::-;;:::i;:::-;;;;6543:14:644;;6536:22;6518:41;;-1:-1:-1;;;;;6595:32:644;;;6590:2;6575:18;;6568:60;6491:18;1252:293:84;6350:284:644;156:21:64;;;;;;;;;;-1:-1:-1;156:21:64;;;;;;;;1421:347:75;;;;;;;;;;-1:-1:-1;1421:347:75;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;3255:271:69:-;;;;;;;;;;-1:-1:-1;3255:271:69;;;;;:::i;:::-;;:::i;4466:217::-;;;;;;;;;;-1:-1:-1;4466:217:69;;;;;:::i;:::-;;:::i;7743:98:353:-;;;;;;;;;;-1:-1:-1;7821:13:353;;7743:98;;6883:195;;;;;;;;;;-1:-1:-1;6883:195:353;;;;;:::i;:::-;;:::i;9405:179:26:-;;;;;;;;;;-1:-1:-1;9405:179:26;;;;;:::i;:::-;;:::i;5704:820:353:-;;;;;;:::i;:::-;;:::i;2008:381:75:-;;;;;;;;;;-1:-1:-1;2008:381:75;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;7620:32:644;;;7602:51;;7701:6;7689:19;;;7684:2;7669:18;;7662:47;7575:18;2008:381:75;7430:285:644;918:134:209;;;;;;;;;;-1:-1:-1;918:134:209;;;;;:::i;:::-;;:::i;3087:256:75:-;;;;;;;;;;-1:-1:-1;3087:256:75;;;;;:::i;:::-;;:::i;6654:123:26:-;;;;;;;;;;-1:-1:-1;6654:123:26;;;;;:::i;:::-;;:::i;1189:228:72:-;;;;;;;;;;-1:-1:-1;1189:228:72;;;;;:::i;:::-;;:::i;4080:203:26:-;;;;;;;;;;-1:-1:-1;4080:203:26;;;;;:::i;:::-;;:::i;2821:255:71:-;;;;;;;;;;-1:-1:-1;2821:255:71;;;;;:::i;:::-;;:::i;871:86:68:-;;;;;;;;;;-1:-1:-1;944:6:68;;-1:-1:-1;;;;;944:6:68;871:86;;1643:633:70;;;;;;;;;;-1:-1:-1;1643:633:70;;;;;:::i;:::-;;:::i;1324:131:69:-;;;;;;;;;;-1:-1:-1;1324:131:69;;;;;:::i;:::-;;:::i;1003:188:54:-;;;;;;;;;;-1:-1:-1;1003:188:54;;;;;:::i;:::-;;:::i;7001:102:26:-;;;;;;;;;;;;;:::i;4281:288:75:-;;;;;;;;;;-1:-1:-1;4281:288:75;;;;;:::i;:::-;;:::i;742:49:69:-;;;;;;;;;;-1:-1:-1;742:49:69;787:4;742:49;;8603:282:26;;;;;;;;;;-1:-1:-1;8603:282:26;;;;;:::i;:::-;;:::i;2206:211:69:-;;;;;;;;;;-1:-1:-1;2206:211:69;;;;;:::i;:::-;;:::i;698:319:63:-;;;;;;;;;;-1:-1:-1;698:319:63;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2499:144:75:-;;;;;;;;;;-1:-1:-1;2599:16:75;;-1:-1:-1;;;;;2599:16:75;;;-1:-1:-1;;;2624:10:75;;;;2499:144;;3455:200:71;;;;;;;;;;-1:-1:-1;3455:200:71;;;;;:::i;:::-;;:::i;9650:381:26:-;;;;;;;;;;-1:-1:-1;9650:381:26;;;;;:::i;:::-;;:::i;4998:127:353:-;;;;;;;;;;-1:-1:-1;4998:127:353;;;;;:::i;:::-;;:::i;2683:398:70:-;;;;;;;;;;-1:-1:-1;2683:398:70;;;;;:::i;:::-;;:::i;1052:193:64:-;;;;;;;;;;;;;:::i;1058:147:71:-;;;;;;;;;;;;;:::i;3897:171:69:-;;;;;;;;;;-1:-1:-1;3897:171:69;;;;;:::i;:::-;;:::i;3495:1256:353:-;;;;;;;;;;-1:-1:-1;3495:1256:353;;;;;:::i;:::-;;:::i;1268:136:71:-;;;;;;;;;;;;;:::i;565:34:54:-;;;;;;;;;;;;;:::i;8951:162:26:-;;;;;;;;;;-1:-1:-1;8951:162:26;;;;;:::i;:::-;-1:-1:-1;;;;;9071:25:26;;;9048:4;9071:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;8951:162;1467:107:71;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;6609:218:353:-;6700:21;-1:-1:-1;;;;;;;;;;;931:28:69;942:4;948:10;931;:28::i;:::-;6749:18:353::1;6757:3;6762:4;;6749:7;:18::i;:::-;6733:34;;6800:13;6795:3;-1:-1:-1::0;;;;;6782:38:353::1;;6815:4;;6782:38;;;;;;;:::i;:::-;;;;;;;;6609:218:::0;;;;;;:::o;5156:269::-;5310:4;5337:36;5361:11;5337:23;:36::i;:::-;:81;;;-1:-1:-1;;;;;;;;;;5377:41:353;;;5337:81;5330:88;5156:269;-1:-1:-1;;5156:269:353:o;6839:98:26:-;6893:13;6925:5;6918:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6839:98;:::o;676:104:72:-;764:9;;-1:-1:-1;;;;;764:9:72;;676:104::o;8336:200:26:-;8404:7;8428:16;8436:7;8428;:16::i;:::-;8423:64;;8453:34;;-1:-1:-1;;;8453:34:26;;;;;;;;;;;8423:64;-1:-1:-1;8505:24:26;;;;:15;:24;;;;;;-1:-1:-1;;;;;8505:24:26;;8336:200::o;7872:403::-;7952:13;7968:35;7995:7;7968:26;:35::i;:::-;7952:51;;8023:5;-1:-1:-1;;;;;8017:11:26;:2;-1:-1:-1;;;;;8017:11:26;;8013:48;;;8037:24;;-1:-1:-1;;;8037:24:26;;;;;;;;;;;8013:48;8092:5;-1:-1:-1;;;;;8076:21:26;:12;:10;:12::i;:::-;-1:-1:-1;;;;;8076:21:26;;8072:158;;8116:37;8133:5;8140:12;:10;:12::i;8116:37::-;8111:119;;8180:35;;-1:-1:-1;;;8180:35:26;;;;;;;;;;;8111:119;8240:28;8249:2;8253:7;8262:5;8240:8;:28::i;:::-;7942:333;7872:403;;:::o;1133:173:68:-;1203:14;:12;:14::i;:::-;1198:70;;1233:24;;-1:-1:-1;;;1233:24:68;;;;;;;:::i;:::-;;;;;;;;1198:70;1277:22;1289:9;1277:11;:22::i;:::-;1133:173;:::o;778:268:64:-;870:17;:15;:17::i;:::-;862:74;;;;-1:-1:-1;;;862:74:64;;15992:2:644;862:74:64;;;15974:21:644;16031:2;16011:18;;;16004:30;16070:34;16050:18;;;16043:62;-1:-1:-1;;;16121:18:644;;;16114:42;16173:19;;862:74:64;15790:408:644;862:74:64;955:9;;;;954:10;946:55;;;;-1:-1:-1;;;946:55:64;;16405:2:644;946:55:64;;;16387:21:644;;;16424:18;;;16417:30;16483:34;16463:18;;;16456:62;16535:18;;946:55:64;16203:356:644;946:55:64;1011:28;1024:8;1034:4;1011:12;:28::i;:::-;778:268;;:::o;2043:269:71:-;2160:24;:22;:24::i;:::-;2155:80;;2200:24;;-1:-1:-1;;;2200:24:71;;;;;;;:::i;2155:80::-;2244:61;2266:21;2289:15;2244:21;:61::i;7134:112:353:-;-1:-1:-1;;;;;;;;;;;931:28:69;942:4;948:10;931;:28::i;:::-;7225:14:353::1;7231:7;7225:5;:14::i;9175:164:26:-:0;9304:28;9314:4;9320:2;9324:7;9304:9;:28::i;1252:293:84:-;1384:12;1398:14;1437:33;1453:4;1459:10;;1437:15;:33::i;:::-;1498:8;;;;1491:16;;;;:6;:16;;;;;;1428:42;;-1:-1:-1;1491:16:84;;1490:17;:48;;;;;1511:27;1531:6;1511:19;:27::i;:::-;1480:58;;1252:293;;;;;;:::o;1421:347:75:-;1558:16;1576:21;1614:17;1633:11;1648:31;1671:7;1648:22;:31::i;:::-;1613:66;;-1:-1:-1;1613:66:75;;-1:-1:-1;1613:66:75;;;-1:-1:-1;1755:6:75;1736:15;1613:66;1736:9;:15;:::i;:::-;1735:26;;;;:::i;:::-;1719:42;;1603:165;;1421:347;;;;;:::o;3255:271:69:-;3350:19;;;;:13;:19;;;;;;3339:43;;3371:10;3339;:43::i;:::-;3396:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;3396:23:69;;;;;;;;;;;;3392:93;;;3435:39;;-1:-1:-1;;;3435:39:69;;17293:2:644;3435:39:69;;;17275:21:644;17332:2;17312:18;;;17305:30;17371:31;17351:18;;;17344:59;17420:18;;3435:39:69;17091:353:644;3392:93:69;3494:25;3505:4;3511:7;3494:10;:25::i;4466:217::-;4557:10;-1:-1:-1;;;;;4557:21:69;;;4553:88;;4594:36;;-1:-1:-1;;;4594:36:69;;17651:2:644;4594:36:69;;;17633:21:644;17690:2;17670:18;;;17663:30;-1:-1:-1;;;17709:18:644;;;17702:56;17775:18;;4594:36:69;17449:350:644;4553:88:69;4650:26;4662:4;4668:7;4650:11;:26::i;6883:195:353:-;7051:20;7057:7;7066:4;7051:5;:20::i;9405:179:26:-;9538:39;9555:4;9561:2;9565:7;9538:39;;;;;;;;;;;;:16;:39::i;5704:820:353:-;5856:14;1815:1:438;2569:7;;:19;;2561:63;;;;-1:-1:-1;;;2561:63:438;;18006:2:644;2561:63:438;;;17988:21:644;18045:2;18025:18;;;18018:30;18084:33;18064:18;;;18057:61;18135:18;;2561:63:438;17804:355:644;2561:63:438;1815:1;2699:7;:18;5911:1:353::1;5894:13;::::0;::::1;;:18;5886:79;;;::::0;-1:-1:-1;;;5886:79:353;;18366:2:644;5886:79:353::1;::::0;::::1;18348:21:644::0;18405:2;18385:18;;;18378:30;18444:34;18424:18;;;18417:62;-1:-1:-1;;;18495:18:644;;;18488:46;18551:19;;5886:79:353::1;18164:412:644::0;5886:79:353::1;5985:33;6001:4;6007:10;;5985:15;:33::i;:::-;5976:42:::0;-1:-1:-1;6028:16:353::1;6047:7;;::::0;::::1;:4:::0;:7:::1;:::i;:::-;6028:26:::0;-1:-1:-1;6064:21:353::1;6088:27;6028:26:::0;6106:8:::1;;::::0;::::1;:4:::0;:8:::1;:::i;:::-;6088:7;:27::i;:::-;6064:51:::0;-1:-1:-1;6204:1:353::1;6171:21;::::0;;;::::1;::::0;::::1;;:::i;:::-;-1:-1:-1::0;;;;;6171:35:353::1;;;:59;;;;-1:-1:-1::0;6210:15:353::1;::::0;::::1;;:20:::0;::::1;6171:59;6167:170;;;6246:80;6272:13:::0;6287:21:::1;::::0;;;::::1;::::0;::::1;;:::i;:::-;6310:4;:15;;;6246:25;:80::i;:::-;6347:90;6361:25;::::0;;;::::1;::::0;::::1;;:::i;:::-;6388:13;::::0;::::1;;6403;::::0;;;::::1;::::0;::::1;;:::i;:::-;6418:4;:18;;;6347:13;:90::i;:::-;6497:13;6487:8;-1:-1:-1::0;;;;;6453:64:353::1;6479:6;-1:-1:-1::0;;;;;6453:64:353::1;;6512:4;6453:64;;;;;;:::i;:::-;;;;;;;;-1:-1:-1::0;;1772:1:438;2872:7;:22;5704:820:353;;-1:-1:-1;;;5704:820:353:o;2008:381:75:-;2088:7;2152:29;;;:19;:29;;;;;;;;2115:66;;;;;;;;;;-1:-1:-1;;;;;2115:66:75;;;;;;;;;;;;;;;;2088:7;;2211:39;:171;;2327:25;;2361:19;;;;2211:171;;;2270:16;;-1:-1:-1;;;;;2270:16:75;;;-1:-1:-1;;;2295:10:75;;;;2211:171;2192:190;;;;;2008:381;;;:::o;918:134:209:-;-1:-1:-1;;;;;1017:28:209;994:4;1017:28;;;:17;:28;;;;;;;;;918:134::o;3087:256:75:-;3199:20;:18;:20::i;:::-;3194:76;;3235:24;;-1:-1:-1;;;3235:24:75;;;;;;;:::i;3194:76::-;3280:56;3305:17;3324:11;3280:24;:56::i;6654:123:26:-;6718:7;6744:21;6757:7;6744:12;:21::i;:::-;:26;;6654:123;-1:-1:-1;;6654:123:26:o;1189:228:72:-;1279:29;:27;:29::i;:::-;1274:85;;1324:24;;-1:-1:-1;;;1324:24:72;;;;;;;:::i;1274:85::-;1368:42;1395:14;1368:26;:42::i;4080:203:26:-;4144:7;-1:-1:-1;;;;;4167:19:26;;4163:60;;4195:28;;-1:-1:-1;;;4195:28:26;;;;;;;;;;;4163:60;-1:-1:-1;;;;;;4248:19:26;;;;;:12;:19;;;;;:27;-1:-1:-1;;;;;4248:27:26;;4080:203::o;2821:255:71:-;2926:24;:22;:24::i;:::-;2921:80;;2966:24;;-1:-1:-1;;;2966:24:71;;;;;;;:::i;2921:80::-;3011:58;3037:21;3060:8;3011:25;:58::i;1643:633:70:-;1727:14;1776:17;;;:11;:17;;;;;:23;1727:14;;1833:437;1857:12;1853:1;:16;1833:437;;;1937:1;1897:17;;;:11;:17;;;;;;;;:28;;;:25;;:28;;;;;;-1:-1:-1;;;;;1897:28:70;:42;1893:367;;1972:5;1963;:14;1959:133;;;2010:17;;;;:11;:17;;;;;;;;:28;;;:25;;;;:28;;;;-1:-1:-1;;;;;2010:28:70;;-1:-1:-1;2060:13:70;;-1:-1:-1;;2060:13:70;1959:133;2109:10;2118:1;2109:10;;:::i;:::-;;;1893:367;;;2144:25;2152:4;2166:1;2144:7;:25::i;:::-;:71;;;;-1:-1:-1;2178:17:70;;;;:11;:17;;;;;;;;:37;;;:25;;:37;;;;;;2173:42;;2144:71;2140:120;;;2235:10;2244:1;2235:10;;:::i;:::-;;;2140:120;1871:6;1876:1;1871:6;;:::i;:::-;;;1833:437;;;;1743:533;;1643:633;;;;:::o;1324:131:69:-;1402:4;1425:14;;;:8;:14;;;;;;;;-1:-1:-1;;;;;1425:23:69;;;;;;;;;;;;;;;1324:131::o;1003:188:54:-;1080:20;:18;:20::i;:::-;1075:76;;1116:24;;-1:-1:-1;;;1116:24:54;;;;;;;:::i;1075:76::-;1161:23;1179:4;1161:17;:23::i;7001:102:26:-;7057:13;7089:7;7082:14;;;;;:::i;4281:288:75:-;4428:20;:18;:20::i;:::-;4423:76;;4464:24;;-1:-1:-1;;;4464:24:75;;;;;;;:::i;4423:76::-;4509:53;4535:8;4545:10;4557:4;4509:25;:53::i;8603:282:26:-;8713:12;:10;:12::i;:::-;-1:-1:-1;;;;;8701:24:26;:8;-1:-1:-1;;;;;8701:24:26;;8697:54;;;8734:17;;-1:-1:-1;;;8734:17:26;;;;;;;;;;;8697:54;8807:8;8762:18;:32;8781:12;:10;:12::i;:::-;-1:-1:-1;;;;;8762:32:26;;;;;;;;;;;;;;;;;-1:-1:-1;8762:32:26;;;:42;;;;;;;;;;;;:53;;-1:-1:-1;;8762:53:26;;;;;;;;;;;8845:12;:10;:12::i;:::-;-1:-1:-1;;;;;8830:48:26;;8869:8;8830:48;;;;1768:14:644;1761:22;1743:41;;1731:2;1716:18;;1603:187;8830:48:26;;;;;;;;8603:282;;:::o;2206:211:69:-;2285:4;2306:14;;;:8;:14;;;;;;;;:26;;;;;;;;;;;2301:88;;-1:-1:-1;2355:14:69;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;2355:23:69;;;;;;;;;;;;2348:30;;2301:88;-1:-1:-1;2406:4:69;2206:211;;;;:::o;698:319:63:-;775:22;831:4;-1:-1:-1;;;;;819:24:63;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;809:34;;858:9;853:134;873:15;;;853:134;;;922:54;961:4;968;;973:1;968:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;922:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;922:30:63;;-1:-1:-1;;;922:54:63:i;:::-;909:7;917:1;909:10;;;;;;;;:::i;:::-;;;;;;:67;;;;890:3;;;;;:::i;:::-;;;;853:134;;;;698:319;;;;:::o;3455:200:71:-;3533:24;:22;:24::i;:::-;3528:80;;3573:24;;-1:-1:-1;;;3573:24:71;;;;;;;:::i;3528:80::-;3617:31;3639:8;3617:21;:31::i;9650:381:26:-;9811:28;9821:4;9827:2;9831:7;9811:9;:28::i;:::-;9853:15;:2;-1:-1:-1;;;;;9853:13:26;;:15::i;:::-;9849:176;;;9887:56;9918:4;9924:2;9928:7;9937:5;9887:30;:56::i;:::-;9882:143;;9970:40;;-1:-1:-1;;;9970:40:26;;;;;;;;;;;9882:143;9650:381;;;;:::o;4998:127:353:-;5064:13;5096:22;5109:8;5096:12;:22::i;2683:398:70:-;2757:13;2805:17;;;:11;:17;;;;;:23;2757:13;2839:161;2863:12;2859:1;:16;2839:161;;;2943:1;2903:17;;;:11;:17;;;;;;;;:28;;;:25;;:28;;;;;;-1:-1:-1;;;;;2903:28:70;:42;2899:91;;2965:10;2974:1;2965:10;;:::i;:::-;;;2899:91;2877:6;2882:1;2877:6;;:::i;:::-;;;2839:161;;;;3013:25;3021:4;3035:1;3013:7;:25::i;:::-;3009:66;;;3054:10;3063:1;3054:10;;:::i;:::-;;;3009:66;2772:309;2683:398;;;:::o;1052:193:64:-;1111:20;:18;:20::i;:::-;1103:78;;;;-1:-1:-1;;;1103:78:64;;22406:2:644;1103:78:64;;;22388:21:644;22445:2;22425:18;;;22418:30;22484:34;22464:18;;;22457:62;-1:-1:-1;;;22535:18:644;;;22528:43;22588:19;;1103:78:64;22204:409:644;1103:78:64;1191:9;:16;;-1:-1:-1;;1191:16:64;1203:4;1191:16;;;1222;;;;1191:9;;1222:16;1052:193::o;1058:147:71:-;1153:20;;-1:-1:-1;;;;;1153:20:71;;;-1:-1:-1;;;1182:14:71;;;;;;1058:147::o;3897:171:69:-;3993:19;;;;:13;:19;;;;;;3982:43;;4014:10;3982;:43::i;3495:1256:353:-;3134:13:436;;;;;;;3133:14;;3179:34;;;;-1:-1:-1;3197:12:436;;3212:1;3197:12;;;;:16;3179:34;3178:108;;;;3220:44;3258:4;3220:29;:44::i;:::-;3219:45;:66;;;;-1:-1:-1;3268:12:436;;;;;:17;3219:66;3157:201;;;;-1:-1:-1;;;3157:201:436;;22820:2:644;3157:201:436;;;22802:21:644;22859:2;22839:18;;;22832:30;22898:34;22878:18;;;22871:62;-1:-1:-1;;;22949:18:644;;;22942:44;23003:19;;3157:201:436;22618:410:644;3157:201:436;3368:12;:16;;-1:-1:-1;;3368:16:436;3383:1;3368:16;;;3394:65;;;;3428:13;:20;;-1:-1:-1;;3428:20:436;;;;;3394:65;3967:41:353::1;3989:18;3967:21;:41::i;:::-;4018:30;4033:5;4040:7;4018:14;:30::i;:::-;4058:28;:26;:28::i;:::-;4096:24;:22;:24::i;:::-;4131:31;4149:12;4131:17;:31::i;:::-;4172:26;4184:13;4172:11;:26::i;:::-;4209:45;787:4:69;4240:13:353::0;4209:10:::1;:45::i;:::-;4264:38;-1:-1:-1::0;;;;;;;;;;;4288:13:353::1;4264:10;:38::i;:::-;4312:40;-1:-1:-1::0;;;;;;;;;;;4338:13:353::1;4312:10;:40::i;:::-;4363;-1:-1:-1::0;;;;;;;;;;;4389:13:353::1;4363:10;:40::i;:::-;4413:43;-1:-1:-1::0;;;;;;;;;;;2952:26:353;4413:13:::1;:43::i;:::-;4467:38;-1:-1:-1::0;;;;;;;;;;;4491:13:353::1;4467:10;:38::i;:::-;4515:39;-1:-1:-1::0;;;;;;;;;;;3088:24:353;4515:13:::1;:39::i;:::-;4565:61;4587:21;4610:15;-1:-1:-1::0;;;;;4565:61:353::1;:21;:61::i;:::-;4636:56;4661:17;4680:11;-1:-1:-1::0;;;;;4636:56:353::1;:24;:56::i;:::-;4702:42;4729:14;4702:26;:42::i;:::-;3483:14:436::0;3479:99;;;3513:13;:21;;-1:-1:-1;;3513:21:436;;;3553:14;;-1:-1:-1;23185:36:644;;3553:14:436;;23173:2:644;23158:18;3553:14:436;;;;;;;3479:99;3101:483;3495:1256:353;;;;;;;;;;:::o;1268:136:71:-;1359:20;;1381:15;;-1:-1:-1;;;;;1359:20:71;;;;1268:136::o;565:34:54:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1467:107:71:-;1552:15;;-1:-1:-1;;;1552:15:71;;;;;1467:107::o;1186:320:462:-;-1:-1:-1;;;;;1476:19:462;;:23;;;1186:320::o;5557:495:69:-;5645:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;5645:23:69;;;;;;;;;;;;5640:406;;5827:43;5857:7;-1:-1:-1;;;;;5827:43:69;5867:2;5827:21;:43::i;:::-;5941:40;5971:4;5978:2;5941:21;:40::i;:::-;5736:267;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;5736:267:69;;;;;;;;;;-1:-1:-1;;;5684:351:69;;;;;;;:::i;9567:210:353:-;9637:21;9686:13;;9670:29;;9710:33;9723:13;9738:4;;9710:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9710:12:353;;-1:-1:-1;;;9710:33:353:i;:::-;9753:17;9763:3;9768:1;9753:9;:17::i;:::-;9567:210;;;;;:::o;3633:388:26:-;3797:4;-1:-1:-1;;;;;;3836:51:26;;-1:-1:-1;;;3836:51:26;;:126;;-1:-1:-1;;;;;;;3903:59:26;;-1:-1:-1;;;3903:59:26;3836:126;:178;;;-1:-1:-1;;;;;;;;;;1168:51:471;;;3978:36:26;1060:166:471;10277:172:26;10334:4;10397:13;;10387:7;:23;10357:85;;;;-1:-1:-1;;10415:20:26;;;;:11;:20;;;;;:27;-1:-1:-1;;;10415:27:26;;;;10414:28;;10277:172::o;12219:231:353:-;12368:14;12405:38;:36;:38::i;:::-;12398:45;;12219:231;:::o;19258:189:26:-;19368:24;;;;:15;:24;;;;;;:29;;-1:-1:-1;;;;;;19368:29:26;-1:-1:-1;;;;;19368:29:26;;;;;;;;;19412:28;;19368:24;;19412:28;;;;;;;19258:189;;;:::o;10964:127:353:-;11020:4;11043:41;11020:4;11071:12;:10;:12::i;1421:172:68:-;1501:6;;;-1:-1:-1;;;;;1517:18:68;;;-1:-1:-1;;;;;;1517:18:68;;;;;;;1551:35;;1501:6;;;1517:18;1501:6;;1551:35;;1480:18;;1551:35;1470:123;1421:172;:::o;11854:133:353:-;11921:4;11944:36;-1:-1:-1;;;;;;;;;;;11967:12:353;:10;:12::i;484:233:64:-;600:1;585:4;579:18;:22;571:63;;;;-1:-1:-1;;;571:63:64;;24223:2:644;571:63:64;;;24205:21:644;24262:2;24242:18;;;24235:30;-1:-1:-1;;;24281:18:644;;;24274:58;24349:18;;571:63:64;24021:352:644;571:63:64;644:19;;;;:9;:19;;;;;;;;:26;;;;;;;;:::i;:::-;-1:-1:-1;686:24:64;;1181:25:644;;;686:24:64;;1169:2:644;1154:18;686:24:64;;;;;;;;484:233;;:::o;2371:375:71:-;2499:6;2481:15;:24;2477:80;;;2521:25;;-1:-1:-1;;;2521:25:71;;;;;;;:::i;2477:80::-;2567:14;:40;;-1:-1:-1;;;;;;2617:44:71;-1:-1:-1;;;2567:40:71;;;;-1:-1:-1;;;;;;2617:44:71;;-1:-1:-1;;;;;2617:44:71;;;;;;;;2677:62;;1181:25:644;;;2677:62:71;;1169:2:644;1154:18;2677:62:71;;;;;;;;2371:375;;:::o;16488:87:26:-;16547:21;16553:7;16562:5;16547;:21::i;14333:2082::-;14443:35;14481:21;14494:7;14481:12;:21::i;:::-;14443:59;;14539:4;-1:-1:-1;;;;;14517:26:26;:13;:18;;;-1:-1:-1;;;;;14517:26:26;;14513:67;;14552:28;;-1:-1:-1;;;14552:28:26;;;;;;;;;;;14513:67;14591:22;14633:4;-1:-1:-1;;;;;14617:20:26;:12;:10;:12::i;:::-;-1:-1:-1;;;;;14617:20:26;;:72;;;;14653:36;14670:4;14676:12;:10;:12::i;14653:36::-;14617:124;;;;14729:12;:10;:12::i;:::-;-1:-1:-1;;;;;14705:36:26;:20;14717:7;14705:11;:20::i;:::-;-1:-1:-1;;;;;14705:36:26;;14617:124;14591:151;;14758:17;14753:66;;14784:35;;-1:-1:-1;;;14784:35:26;;;;;;;;;;;14753:66;-1:-1:-1;;;;;14833:16:26;;14829:52;;14858:23;;-1:-1:-1;;;14858:23:26;;;;;;;;;;;14829:52;14892:43;14914:4;14920:2;14924:7;14933:1;14892:21;:43::i;:::-;14997:35;15014:1;15018:7;15027:4;14997:8;:35::i;:::-;-1:-1:-1;;;;;15322:18:26;;;;;;;:12;:18;;;;;;;;:31;;-1:-1:-1;;;;;;15322:31:26;;;-1:-1:-1;;;;;15322:31:26;;;-1:-1:-1;;15322:31:26;;;;;;;15367:16;;;;;;;;;:29;;;;;;;;-1:-1:-1;15367:29:26;;;;;;;;;;;15445:20;;;:11;:20;;;;;;15479:18;;-1:-1:-1;;;;;;15511:49:26;;;;-1:-1:-1;;;15544:15:26;15511:49;;;;;;;;;;15830:11;;15889:24;;;;;15931:13;;15445:20;;15889:24;;15931:13;15927:377;;16138:13;;16123:11;:28;16119:171;;16175:20;;16243:28;;;;-1:-1:-1;;;;;16217:54:26;-1:-1:-1;;;16217:54:26;-1:-1:-1;;;;;;16217:54:26;;;-1:-1:-1;;;;;16175:20:26;;16217:54;;;;16119:171;15298:1016;;;16348:7;16344:2;-1:-1:-1;;;;;16329:27:26;16338:4;-1:-1:-1;;;;;16329:27:26;-1:-1:-1;;;;;;;;;;;16329:27:26;;;;;;;;;14433:1982;;14333:2082;;;:::o;2428:204:84:-;2530:7;2556:69;2614:10;;2556:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2556:49:84;;-1:-1:-1;2583:20:84;;-1:-1:-1;2598:4:84;;-1:-1:-1;2583:14:84;:20::i;:::-;2573:31;;;;;;2556:16;:49::i;:::-;:57;;:69::i;:::-;2549:76;2428:204;-1:-1:-1;;;;2428:204:84:o;11630:137:353:-;11708:4;11731:29;-1:-1:-1;;;;;;;;;;;11752:7:353;11731;:29::i;3475:152:70:-;3554:31;3571:4;3577:7;3554:16;:31::i;:::-;3595:25;3606:4;3612:7;3595:10;:25::i;3205:157::-;3285:32;3303:4;3309:7;3285:17;:32::i;:::-;4084:11;4098:17;;;:11;:17;;;;;;;;-1:-1:-1;;;;;4098:34:70;;;;;:25;;;:34;;;;;;;;4150:30;;:25;;;;:30;;;;;4143:37;;-1:-1:-1;;;;;;4143:37:70;;;4197:34;;;;4190:41;778:268:64;;:::o;16792:2355:26:-;16871:35;16909:21;16922:7;16909:12;:21::i;:::-;16956:18;;16871:59;;-1:-1:-1;16985:284:26;;;;17018:22;17060:4;-1:-1:-1;;;;;17044:20:26;:12;:10;:12::i;:::-;-1:-1:-1;;;;;17044:20:26;;:76;;;;17084:36;17101:4;17107:12;:10;:12::i;17084:36::-;17044:132;;;;17164:12;:10;:12::i;:::-;-1:-1:-1;;;;;17140:36:26;:20;17152:7;17140:11;:20::i;:::-;-1:-1:-1;;;;;17140:36:26;;17044:132;17018:159;;17197:17;17192:66;;17223:35;;-1:-1:-1;;;17223:35:26;;;;;;;;;;;17192:66;17004:265;16985:284;17279:51;17301:4;17315:1;17319:7;17328:1;17279:21;:51::i;:::-;17392:35;17409:1;17413:7;17422:4;17392:8;:35::i;:::-;-1:-1:-1;;;;;17751:18:26;;;17717:31;17751:18;;;:12;:18;;;;;;;;17783:24;;-1:-1:-1;;;;;;;;;;17783:24:26;;;;;;;;;-1:-1:-1;;;;;;17783:24:26;;;;17821:29;;;;;17806:1;17821:29;;;;;;;;-1:-1:-1;;;;;;17821:29:26;;;;;;;;;;17980:20;;;:11;:20;;;;;;18014;;-1:-1:-1;;;;18081:15:26;18048:49;;;-1:-1:-1;;;18048:49:26;-1:-1:-1;;;;;;18048:49:26;;;;;;;;;;18111:22;-1:-1:-1;;;18111:22:26;;;18399:11;;;18458:24;;;;;18500:13;;17751:18;;18458:24;;18500:13;18496:377;;18707:13;;18692:11;:28;18688:171;;18744:20;;18812:28;;;;-1:-1:-1;;;;;18786:54:26;-1:-1:-1;;;18786:54:26;-1:-1:-1;;;;;;18786:54:26;;;-1:-1:-1;;;;;18744:20:26;;18786:54;;;;18688:171;-1:-1:-1;;18898:35:26;;18925:7;;-1:-1:-1;18921:1:26;;-1:-1:-1;;;;;;18898:35:26;;;-1:-1:-1;;;;;;;;;;;18898:35:26;18921:1;;18898:35;-1:-1:-1;;19116:12:26;:14;;;;;;-1:-1:-1;;16792:2355:26:o;1792:562:84:-;1889:14;1915:12;1957:24;1964:4;1970:10;;1957:6;:24::i;:::-;1937:44;-1:-1:-1;1937:44:84;-1:-1:-1;1937:44:84;1992:60;;2020:21;;-1:-1:-1;;;2020:21:84;;24924:2:644;2020:21:84;;;24906::644;24963:2;24943:18;;;24936:30;-1:-1:-1;;;24982:18:644;;;24975:41;25033:18;;2020:21:84;24722:335:644;1992:60:84;2096:15;2066:27;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2066:45:84;;:92;;;-1:-1:-1;2133:25:84;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2115:43:84;:15;:43;2066:92;2062:144;;;2174:21;;-1:-1:-1;;;2174:21:84;;25455:2:644;2174:21:84;;;25437::644;25494:2;25474:18;;;25467:30;-1:-1:-1;;;25513:18:644;;;25506:41;25564:18;;2174:21:84;25253:335:644;2062:144:84;2242:1;2223:7;;;;:4;:7;:::i;:::-;-1:-1:-1;;;;;2223:21:84;;;2215:53;;;;-1:-1:-1;;;2215:53:84;;25795:2:644;2215:53:84;;;25777:21:644;25834:2;25814:18;;;25807:30;-1:-1:-1;;;25853:18:644;;;25846:49;25912:18;;2215:53:84;25593:343:644;2215:53:84;2302:1;2286:4;:13;;;:17;2278:35;;;;-1:-1:-1;;;2278:35:84;;26143:2:644;2278:35:84;;;26125:21:644;26182:1;26162:18;;;26155:29;-1:-1:-1;;;26200:18:644;;;26193:35;26245:18;;2278:35:84;25941:328:644;2278:35:84;-1:-1:-1;2331:8:84;;;;;2324:16;;;;:6;:16;;;;;:23;;-1:-1:-1;;2324:23:84;2343:4;2324:23;;;-1:-1:-1;1792:562:84;;;-1:-1:-1;1792:562:84:o;4671:362:75:-;4818:6;4811:4;:13;4807:69;;;4840:25;;-1:-1:-1;;;4840:25:75;;;;;;;:::i;4807:69::-;4918:49;;;;;;;;-1:-1:-1;;;;;4918:49:75;;;;;;;;;;;;;-1:-1:-1;4886:29:75;;;:19;:29;;;;;:81;;;;-1:-1:-1;;;;;;4886:81:75;;;;;;;;;;;-1:-1:-1;4886:81:75;;;;;;;4983:43;;1181:25:644;;;4918:49:75;;4886:29;;4983:43;;1154:18:644;4983:43:75;;;;;;;4671:362;;;:::o;8118:1409:353:-;8302:19;8298:103;;8345:9;:14;8337:33;;;;-1:-1:-1;;;8337:33:353;;26476:2:644;8337:33:353;;;26458:21:644;26515:1;26495:18;;;26488:29;-1:-1:-1;;;26533:18:644;;;26526:36;26579:18;;8337:33:353;26274:329:644;8337:33:353;8384:7;;8298:103;8411:18;8432:33;8451:14;8432:16;:33;:::i;:::-;8411:54;-1:-1:-1;8476:18:353;-1:-1:-1;;;;;8508:45:353;;408:42:284;8508:45:353;8504:176;;;-1:-1:-1;8585:9:353;:23;;8504:176;;;-1:-1:-1;8655:9:353;:14;8504:176;8697:13;8689:43;;;;-1:-1:-1;;;8689:43:353;;26810:2:644;8689:43:353;;;26792:21:644;26849:2;26829:18;;;26822:30;-1:-1:-1;;;26868:18:644;;;26861:47;26925:18;;8689:43:353;26608:341:644;8689:43:353;8743:21;-1:-1:-1;;;;;8767:35:353;;;:84;;8830:21;8767:84;;;8805:22;:20;:22::i;:::-;8743:108;;8862:12;8884:20;8915:23;8941:20;:18;:20::i;:::-;8915:46;-1:-1:-1;8986:20:353;8975:7;:31;;;;;;;;:::i;:::-;;8971:288;;;9045:24;:22;:24::i;:::-;9022:47;-1:-1:-1;9022:47:353;-1:-1:-1;8971:288:353;;;9100:21;9168:20;:18;:20::i;:::-;9135:53;;-1:-1:-1;9135:53:353;-1:-1:-1;3199:6:353;9210:27;;;;:10;:27;:::i;:::-;9209:39;;;;:::i;:::-;9202:46;;9086:173;8971:288;9291:4;9277:10;:18;;9269:54;;;;-1:-1:-1;;;9269:54:353;;27156:2:644;9269:54:353;;;27138:21:644;27195:2;27175:18;;;27168:30;-1:-1:-1;;;27214:18:644;;;27207:53;27277:18;;9269:54:353;26954:347:644;9269:54:353;9334:81;9371:9;9382:12;:10;:12::i;:::-;9396;9410:4;9334:36;:81::i;:::-;9425:95;9462:9;9473:12;:10;:12::i;:::-;9487:13;9502:17;9515:4;9502:10;:17;:::i;:::-;9425:36;:95::i;:::-;8288:1239;;;;;;8118:1409;;;;:::o;3430:334:75:-;3549:6;3535:11;:20;3531:76;;;3571:25;;-1:-1:-1;;;3571:25:75;;;;;;;:::i;3531:76::-;3617:16;:36;;-1:-1:-1;;;;;3617:36:75;;-1:-1:-1;;;;;;3663:32:75;;;;;-1:-1:-1;;;3663:32:75;;;;;;;;3711:46;;1181:25:644;;;3711:46:75;;1169:2:644;1154:18;3711:46:75;1035:177:644;5423:1174:26;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;5533:7:26;5631:13;;5624:4;:20;5620:913;;;5668:31;5702:17;;;:11;:17;;;;;;;;;5668:51;;;;;;;;;-1:-1:-1;;;;;5668:51:26;;;;-1:-1:-1;;;5668:51:26;;-1:-1:-1;;;;;5668:51:26;;;;;;;;-1:-1:-1;;;5668:51:26;;;;;;;;;;;;;;5741:774;;5794:14;;-1:-1:-1;;;;;5794:28:26;;5790:107;;5861:9;5423:1174;-1:-1:-1;;;5423:1174:26:o;5790:107::-;-1:-1:-1;;;6257:6:26;6305:17;;;;:11;:17;;;;;;;;;6293:29;;;;;;;;;-1:-1:-1;;;;;6293:29:26;;;;;-1:-1:-1;;;6293:29:26;;-1:-1:-1;;;;;6293:29:26;;;;;;;;-1:-1:-1;;;6293:29:26;;;;;;;;;;;;;6356:28;6352:115;;6427:9;5423:1174;-1:-1:-1;;;5423:1174:26:o;6352:115::-;6214:279;;;5646:887;5620:913;6559:31;;-1:-1:-1;;;6559:31:26;;;;;;;;;;;1499:170:72;1578:9;:26;;-1:-1:-1;;;;;;1578:26:72;-1:-1:-1;;;;;1578:26:72;;;;;;;;1619:43;;;;-1:-1:-1;;1619:43:72;1499:170;:::o;3129:261:71:-;3232:15;:26;;;3268:20;:44;;-1:-1:-1;;;;;;3268:44:71;-1:-1:-1;;;;;3268:44:71;;;;;3328:55;;;;;;3268:44;;3232:26;;3328:55;:::i;1273:185:54:-;1339:21;1363:11;1339:35;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1384:18:54;;1339:35;;-1:-1:-1;1384:18:54;;:11;;-1:-1:-1;1384:18:54;;;;-1:-1:-1;1384:18:54;-1:-1:-1;1384:18:54;:::i;:::-;;1418:33;1437:7;1446:4;1418:33;;;;;;;:::i;6538:198:288:-;6621:12;6652:77;6673:6;6681:4;6652:77;;;;;;;;;;;;;;;;;:20;:77::i;3698:157:71:-;3774:15;:26;;3792:8;;3774:15;-1:-1:-1;;;;3774:26:71;-1:-1:-1;;;3792:8:71;3774:26;;;;;;;;:::i;:::-;;;;;;3816:32;3839:8;3816:32;;;;;;:::i;:::-;;;;;;;;3698:157;:::o;19928:694:26:-;20086:4;20133:2;-1:-1:-1;;;;;20106:47:26;;20154:12;:10;:12::i;:::-;20168:4;20174:7;20183:5;20106:83;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;20106:83:26;;;;;;;;-1:-1:-1;;20106:83:26;;;;;;;;;;;;:::i;:::-;;;20102:514;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;20381:13:26;;20377:229;;20426:40;;-1:-1:-1;;;20426:40:26;;;;;;;;;;;20377:229;20566:6;20560:13;20551:6;20547:2;20543:15;20536:38;20102:514;-1:-1:-1;;;;;;20257:66:26;-1:-1:-1;;;20257:66:26;;-1:-1:-1;19928:694:26;;;;;;:::o;294:129:64:-;397:19;;;;:9;:19;;;;;390:26;;365:13;;397:19;390:26;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;294:129;;;:::o;470:194:209:-;4910:13:436;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:436;;;;;;;:::i;:::-;572:26:209::1;:24;:26::i;:::-;608:49;640:16;608:31;:49::i;2225:151:26:-:0;4910:13:436;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:436;;;;;;;:::i;:::-;2329:40:26::1;2354:5;2361:7;2329:24;:40::i;920:122:84:-:0;4910:13:436;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:436;;;;;;;:::i;:::-;994:41:84::1;;;;;;;;;;;;;;-1:-1:-1::0;;;994:41:84::1;;::::0;::::1;;;;;;;;;;;;;-1:-1:-1::0;;;994:41:84::1;;::::0;:13:::1;:41::i;:::-;920:122::o:0;1853:111:438:-;4910:13:436;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:436;;;;;;;:::i;:::-;1923:34:438::1;:32;:34::i;4743:245:69:-:0;4826:25;4854:19;;;:13;:19;;;;;;;;4883:31;;;;4929:52;;4854:19;;4905:9;;4854:19;;4868:4;;4929:52;;4826:25;4929:52;4816:172;4743:245;;:::o;1565:441:292:-;1640:13;1665:19;1697:10;1701:6;1697:1;:10;:::i;:::-;:14;;1710:1;1697:14;:::i;:::-;-1:-1:-1;;;;;1687:25:292;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1687:25:292;;1665:47;;-1:-1:-1;;;1722:6:292;1729:1;1722:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1722:15:292;;;;;;;;;-1:-1:-1;;;1747:6:292;1754:1;1747:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1747:15:292;;;;;;;;-1:-1:-1;1777:9:292;1789:10;1793:6;1789:1;:10;:::i;:::-;:14;;1802:1;1789:14;:::i;:::-;1777:26;;1772:132;1809:1;1805;:5;1772:132;;;-1:-1:-1;;;1856:5:292;1864:3;1856:11;1843:25;;;;;;;:::i;:::-;;;;1831:6;1838:1;1831:9;;;;;;;;:::i;:::-;;;;:37;-1:-1:-1;;;;;1831:37:292;;;;;;;;-1:-1:-1;1892:1:292;1882:11;;;;;1812:3;;;:::i;:::-;;;1772:132;;;-1:-1:-1;1921:10:292;;1913:55;;;;-1:-1:-1;;;1913:55:292;;29327:2:644;1913:55:292;;;29309:21:644;;;29346:18;;;29339:30;29405:34;29385:18;;;29378:62;29457:18;;1913:55:292;29125:356:644;10528:102:26;10596:27;10606:2;10610:8;10596:27;;;;;;;;;;;;:9;:27::i;1058:401:209:-;1120:14;1150:30;1169:10;1150:18;:30::i;:::-;1146:307;;;-1:-1:-1;;;1352:14:209;1348:23;1335:37;1331:2;1327:46;1058:401;:::o;1146:307::-;-1:-1:-1;929:10:464;;12219:231:353:o;9831:576::-;10176:34;-1:-1:-1;;;;;;;;;;;10207:1:353;10176:7;:34::i;:::-;10175:35;:57;;;;-1:-1:-1;;;;;;10214:18:353;;;;10175:57;:77;;;;-1:-1:-1;;;;;;10236:16:353;;;;10175:77;10171:230;;;10273:28;-1:-1:-1;;;;;;;;;;;10296:4:353;10273:7;:28::i;:::-;10272:29;:60;;;;;10306:26;-1:-1:-1;;;;;;;;;;;10329:2:353;10306:7;:26::i;:::-;10305:27;10272:60;10268:123;;;10352:24;;-1:-1:-1;;;10352:24:353;;29688:2:644;10352:24:353;;;29670:21:644;29727:2;29707:18;;;29700:30;-1:-1:-1;;;29746:18:644;;;29739:44;29800:18;;10352:24:353;29486:338:644;2704:570:84;2778:12;512:270;2875:7;;;;:4;:7;:::i;:::-;2900:21;;;;;;;;:::i;:::-;2939:15;;;;2972:25;;;;;;;;:::i;:::-;3031:8;;;;:4;:8;:::i;:::-;3015:26;;;;;;;:::i;:::-;;;;;;;;;3059:13;;;;3090:18;;;;3126:13;;;;;;;;:::i;:::-;3157:27;;;;;;;;:::i;:::-;3202:25;;;;;;;;:::i;:::-;2821:446;;;;;;30562:25:644;;;;-1:-1:-1;;;;;30661:15:644;;;30641:18;;;30634:43;30713:15;;;30693:18;;;30686:43;30745:18;;;30738:34;;;;30809:15;;;30788:19;;;30781:44;30841:19;;;30834:35;;;;30885:19;;;30878:35;30929:19;;;30922:35;30994:15;;;30973:19;;;30966:44;-1:-1:-1;;;;;31085:15:644;;;3245:8:84;31064:19:644;;;31057:44;;;;31138:16;;31117:19;;;31110:45;3245:8:84;;;31171:19:644;;;31164:36;30534:19;;2821:446:84;;;;;;;;;;;;2802:465;;2704:570;;;:::o;3890:176:470:-;3967:7;3993:66;4026:20;:18;:20::i;:::-;4048:10;8710:57:469;;-1:-1:-1;;;8710:57:469;;;32155:27:644;32198:11;;;32191:27;;;32234:12;;;32227:28;;;8674:7:469;;32271:12:644;;8710:57:469;;;;;;;;;;;;8700:68;;;;;;8693:75;;8581:194;;;;;3781:227;3859:7;3879:17;3898:18;3920:27;3931:4;3937:9;3920:10;:27::i;:::-;3878:69;;;;3957:18;3969:5;3957:11;:18::i;:::-;-1:-1:-1;3992:9:469;3781:227;-1:-1:-1;;;3781:227:469:o;5036:168:69:-;5114:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;5114:23:69;;;;;;;;;;:30;;-1:-1:-1;;5114:30:69;5140:4;5114:30;;;5159:38;5186:10;;5123:4;;5159:38;;5114:14;5159:38;5036:168;;:::o;3690:253:70:-;3760:11;3774:17;;;:11;:17;;;;;:23;;;3834:1;;3774:17;3807:28;3834:1;3774:23;3807:28;:::i;:::-;;;;-1:-1:-1;;3846:17:70;;;;:11;:17;;;;;;;;:30;;;:25;;;:30;;;;;:40;;-1:-1:-1;;;;;3846:40:70;;;-1:-1:-1;;;;;;3846:40:70;;;;;;;3896:34;;;:25;;;;:34;;;;:40;3690:253::o;5253:204:69:-;5332:25;5343:4;5349:7;5332:10;:25::i;:::-;5374:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;5374:23:69;;;;;;;;;;5367:30;;-1:-1:-1;;5367:30:69;;;5412:38;5439:10;;5383:4;;5412:38;;5374:14;5412:38;5253:204;;:::o;508:385:284:-;659:12;655:49;;687:7;;655:49;-1:-1:-1;;;;;718:25:284;;408:42;718:25;714:173;;;759:37;783:3;788:7;759:23;:37::i;714:173::-;827:49;845:9;856:5;863:3;868:7;827:17;:49::i;6922:387:288:-;7063:12;7095:18;7106:6;7095:10;:18::i;:::-;7087:69;;;;-1:-1:-1;;;7087:69:288;;31413:2:644;7087:69:288;;;31395:21:644;31452:2;31432:18;;;31425:30;31491:34;31471:18;;;31464:62;-1:-1:-1;;;31542:18:644;;;31535:36;31588:19;;7087:69:288;31211:402:644;7087:69:288;7168:12;7182:23;7209:6;-1:-1:-1;;;;;7209:19:288;7229:4;7209:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7167:67;;;;7251:51;7268:7;7277:10;7289:12;7251:16;:51::i;:::-;7244:58;6922:387;-1:-1:-1;;;;;;6922:387:288:o;776:69:464:-;4910:13:436;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:436;;;;;;;:::i;670:242:209:-;4910:13:436;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:436;;;;;;;:::i;:::-;787:9:209::1;782:124;806:16;:23;802:1;:27;782:124;;;891:4;850:17;:38;868:16;885:1;868:19;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;-1:-1:-1;;;;;850:38:209::1;::::0;;;::::1;::::0;;;;;;-1:-1:-1;850:38:209;:45;;-1:-1:-1;;850:45:209::1;::::0;::::1;;::::0;;;::::1;::::0;;831:3;::::1;::::0;::::1;:::i;:::-;;;;782:124;;2382:202:26::0;4910:13:436;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:436;;;;;;;:::i;:::-;2496:13:26;;::::1;::::0;:5:::1;::::0;:13:::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;2519:17:26;;::::1;::::0;:7:::1;::::0;:17:::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;2732:7:26;2546:13:::1;:31:::0;-1:-1:-1;;2382:202:26:o;2306:147:470:-;4910:13:436;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:436;;;;;;;:::i;:::-;2408:38:470::1;2432:4;2438:7;2408:23;:38::i;1970:109:438:-:0;4910:13:436;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:436;;;;;;;:::i;:::-;1772:1:438::1;2050:7;:22:::0;1970:109::o;10990:1708:26:-;11131:13;;-1:-1:-1;;;;;11158:16:26;;11154:48;;11183:19;;-1:-1:-1;;;11183:19:26;;;;;;;;;;;11154:48;11216:13;11212:44;;11238:18;;-1:-1:-1;;;11238:18:26;;;;;;;;;;;11212:44;11267:61;11297:1;11301:2;11305:12;11319:8;11267:21;:61::i;:::-;-1:-1:-1;;;;;11599:16:26;;;;;;:12;:16;;;;;;;;:44;;-1:-1:-1;;;;;;11657:49:26;;-1:-1:-1;;;;;11599:44:26;;;;;;;11657:49;;;-1:-1:-1;;;;;;;;;11599:44:26;;;;;;11657:49;;;;;;;;;;;;;;;;11721:25;;;:11;:25;;;;;;:35;;-1:-1:-1;;;;;;11770:66:26;;;-1:-1:-1;;;11820:15:26;11770:66;;;;;;;;;;;;;11721:25;;11914:23;;;;11956:15;;:13;:15::i;:::-;11952:618;;;11991:308;12021:38;;12046:12;;-1:-1:-1;;;;;12021:38:26;;;12038:1;;-1:-1:-1;;;;;;;;;;;12021:38:26;12038:1;;12021:38;12086:69;12125:1;12129:2;12133:14;;;;;;12149:5;12086:30;:69::i;:::-;12081:172;;12190:40;;-1:-1:-1;;;12190:40:26;;;;;;;;;;;12081:172;12294:3;12279:12;:18;11991:308;;12378:12;12361:13;;:29;12357:43;;12392:8;;;12357:43;11952:618;;;12439:117;12469:40;;12494:14;;;;;-1:-1:-1;;;;;12469:40:26;;;12486:1;;-1:-1:-1;;;;;;;;;;;12469:40:26;12486:1;;12469:40;12551:3;12536:12;:18;12439:117;;11952:618;-1:-1:-1;12583:13:26;:28;12631:60;12660:1;12664:2;12668:12;12682:8;12631:60;:::i;2842:160:470:-;2895:7;2921:74;1595:95;2955:17;4386:12;;;4302:103;2955:17;4731:15;;3184:73;;;;;;34639:25:644;;;34680:18;;;34673:34;;;34723:18;;;34716:34;;;3228:13:470;34766:18:644;;;34759:34;3251:4:470;34809:19:644;;;34802:61;3148:7:470;;34611:19:644;;3184:73:470;;;;;;;;;;;;3174:84;;;;;;3167:91;;3008:257;;;;;;2265:730:469;2346:7;2355:12;2383:9;:16;2403:2;2383:22;2379:610;;;2719:4;2704:20;;2698:27;2768:4;2753:20;;2747:27;2825:4;2810:20;;2804:27;2421:9;2796:36;2866:25;2877:4;2796:36;2698:27;2747;2866:10;:25::i;:::-;2859:32;;;;;;;;;2379:610;-1:-1:-1;2938:1:469;;-1:-1:-1;2942:35:469;2379:610;2265:730;;;;;:::o;570:631::-;647:20;638:5;:29;;;;;;;;:::i;:::-;;634:561;;;570:631;:::o;634:561::-;743:29;734:5;:38;;;;;;;;:::i;:::-;;730:465;;;788:34;;-1:-1:-1;;;788:34:469;;32496:2:644;788:34:469;;;32478:21:644;32535:2;32515:18;;;32508:30;-1:-1:-1;;;32554:18:644;;;32547:54;32618:18;;788:34:469;32294:348:644;730:465:469;852:35;843:5;:44;;;;;;;;:::i;:::-;;839:356;;;903:41;;-1:-1:-1;;;903:41:469;;32849:2:644;903:41:469;;;32831:21:644;32888:2;32868:18;;;32861:30;32927:33;32907:18;;;32900:61;32978:18;;903:41:469;32647:355:644;839:356:469;974:30;965:5;:39;;;;;;;;:::i;:::-;;961:234;;;1020:44;;-1:-1:-1;;;1020:44:469;;33209:2:644;1020:44:469;;;33191:21:644;33248:2;33228:18;;;33221:30;33287:34;33267:18;;;33260:62;-1:-1:-1;;;33338:18:644;;;33331:32;33380:19;;1020:44:469;33007:398:644;961:234:469;1094:30;1085:5;:39;;;;;;;;:::i;:::-;;1081:114;;;1140:44;;-1:-1:-1;;;1140:44:469;;33612:2:644;1140:44:469;;;33594:21:644;33651:2;33631:18;;;33624:30;33690:34;33670:18;;;33663:62;-1:-1:-1;;;33741:18:644;;;33734:32;33783:19;;1140:44:469;33410:398:644;2532:292:284;2714:12;2732:2;-1:-1:-1;;;;;2732:7:284;2748:5;2732:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2713:46;;;2777:7;2769:48;;;;-1:-1:-1;;;2769:48:284;;34225:2:644;2769:48:284;;;34207:21:644;34264:2;34244:18;;;34237:30;-1:-1:-1;;;34283:18:644;;;34276:58;34351:18;;2769:48:284;34023:352:644;2073:396:284;2234:3;-1:-1:-1;;;;;2225:12:284;:5;-1:-1:-1;;;;;2225:12:284;;2221:49;;;2253:7;;2221:49;-1:-1:-1;;;;;2284:22:284;;2301:4;2284:22;2280:183;;;2322:44;-1:-1:-1;;;;;2322:30:284;;2353:3;2358:7;2322:30;:44::i;2280:183::-;2397:55;-1:-1:-1;;;;;2397:34:284;;2432:5;2439:3;2444:7;2397:34;:55::i;7529:692:288:-;7675:12;7703:7;7699:516;;;-1:-1:-1;7733:10:288;7726:17;;7699:516;7844:17;;:21;7840:365;;8038:10;8032:17;8098:15;8085:10;8081:2;8077:19;8070:44;7840:365;8177:12;8170:20;;-1:-1:-1;;;8170:20:288;;;;;;;;:::i;2459:297:470:-;4910:13:436;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:436;;;;;;;:::i;:::-;2592:22:470;;::::1;::::0;;::::1;::::0;2648:25;;;;;::::1;::::0;2683:12:::1;:25:::0;;;;2718:15:::1;:31:::0;2459:297::o;5189:1603:469:-;5315:7;;-1:-1:-1;;;;;6226:79:469;;6222:161;;;-1:-1:-1;6337:1:469;;-1:-1:-1;6341:30:469;6321:51;;6222:161;6396:1;:7;;6401:2;6396:7;;:18;;;;;6407:1;:7;;6412:2;6407:7;;6396:18;6392:100;;;-1:-1:-1;6446:1:469;;-1:-1:-1;6450:30:469;6430:51;;6392:100;6603:24;;;6586:14;6603:24;;;;;;;;;35101:25:644;;;35174:4;35162:17;;35142:18;;;35135:45;;;;35196:18;;;35189:34;;;35239:18;;;35232:34;;;6603:24:469;;35073:19:644;;6603:24:469;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6603:24:469;;-1:-1:-1;;6603:24:469;;;-1:-1:-1;;;;;;;6641:20:469;;6637:101;;6693:1;6697:29;6677:50;;;;;;;6637:101;6756:6;-1:-1:-1;6764:20:469;;-1:-1:-1;5189:1603:469;;;;;;;;:::o;735:205:226:-;847:86;867:5;897:23;;;922:2;926:5;874:58;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;874:58:226;;;;;;;;;;;;;;-1:-1:-1;;;;;874:58:226;-1:-1:-1;;;;;;874:58:226;;;;;;;;;;847:19;:86::i;946:241::-;1111:68;;-1:-1:-1;;;;;35535:15:644;;;1111:68:226;;;35517:34:644;35587:15;;35567:18;;;35560:43;35619:18;;;35612:34;;;1084:96:226;;1104:5;;-1:-1:-1;;;1134:27:226;35452:18:644;;1111:68:226;35277:375:644;3241:706:226;3660:23;3686:69;3714:4;3686:69;;;;;;;;;;;;;;;;;3694:5;-1:-1:-1;;;;;3686:27:226;;;:69;;;;;:::i;:::-;3769:17;;3660:95;;-1:-1:-1;3769:21:226;3765:176;;3864:10;3853:30;;;;;;;;;;;;:::i;:::-;3845:85;;;;-1:-1:-1;;;3845:85:226;;36109:2:644;3845:85:226;;;36091:21:644;36148:2;36128:18;;;36121:30;36187:34;36167:18;;;36160:62;-1:-1:-1;;;36238:18:644;;;36231:40;36288:19;;3845:85:226;35907:406:644;3827:223:288;3960:12;3991:52;4013:6;4021:4;4027:1;4030:12;3960;5202:18;5213:6;5202:10;:18::i;:::-;5194:60;;;;-1:-1:-1;;;5194:60:288;;36927:2:644;5194:60:288;;;36909:21:644;36966:2;36946:18;;;36939:30;37005:31;36985:18;;;36978:59;37054:18;;5194:60:288;36725:353:644;5194:60:288;5266:12;5280:23;5307:6;-1:-1:-1;;;;;5307:11:288;5327:5;5335:4;5307:33;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5265:75;;;;5357:51;5374:7;5383:10;5395:12;5357:16;:51::i;:::-;5350:58;4914:501;-1:-1:-1;;;;;;;4914:501:288:o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:173:644;82:20;;-1:-1:-1;;;;;131:31:644;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:348::-;244:8;254:6;308:3;301:4;293:6;289:17;285:27;275:55;;326:1;323;316:12;275:55;-1:-1:-1;349:20:644;;-1:-1:-1;;;;;381:30:644;;378:50;;;424:1;421;414:12;378:50;461:4;453:6;449:17;437:29;;513:3;506:4;497:6;489;485:19;481:30;478:39;475:59;;;530:1;527;520:12;545:485;625:6;633;641;694:2;682:9;673:7;669:23;665:32;662:52;;;710:1;707;700:12;662:52;733:29;752:9;733:29;:::i;:::-;723:39;;813:2;802:9;798:18;785:32;-1:-1:-1;;;;;832:6:644;829:30;826:50;;;872:1;869;862:12;826:50;911:59;962:7;953:6;942:9;938:22;911:59;:::i;:::-;545:485;;989:8;;-1:-1:-1;885:85:644;;-1:-1:-1;;;;545:485:644:o;1217:131::-;-1:-1:-1;;;;;;1291:32:644;;1281:43;;1271:71;;1338:1;1335;1328:12;1353:245;1411:6;1464:2;1452:9;1443:7;1439:23;1435:32;1432:52;;;1480:1;1477;1470:12;1432:52;1519:9;1506:23;1538:30;1562:5;1538:30;:::i;1795:258::-;1867:1;1877:113;1891:6;1888:1;1885:13;1877:113;;;1967:11;;;1961:18;1948:11;;;1941:39;1913:2;1906:10;1877:113;;;2008:6;2005:1;2002:13;1999:48;;;-1:-1:-1;;2043:1:644;2025:16;;2018:27;1795:258::o;2058:::-;2100:3;2138:5;2132:12;2165:6;2160:3;2153:19;2181:63;2237:6;2230:4;2225:3;2221:14;2214:4;2207:5;2203:16;2181:63;:::i;:::-;2298:2;2277:15;-1:-1:-1;;2273:29:644;2264:39;;;;2305:4;2260:50;;2058:258;-1:-1:-1;;2058:258:644:o;2321:220::-;2470:2;2459:9;2452:21;2433:4;2490:45;2531:2;2520:9;2516:18;2508:6;2490:45;:::i;2546:104::-;-1:-1:-1;;;;;2612:31:644;2600:44;;2546:104::o;2863:180::-;2922:6;2975:2;2963:9;2954:7;2950:23;2946:32;2943:52;;;2991:1;2988;2981:12;2943:52;-1:-1:-1;3014:23:644;;2863:180;-1:-1:-1;2863:180:644:o;3048:254::-;3116:6;3124;3177:2;3165:9;3156:7;3152:23;3148:32;3145:52;;;3193:1;3190;3183:12;3145:52;3216:29;3235:9;3216:29;:::i;:::-;3206:39;3292:2;3277:18;;;;3264:32;;-1:-1:-1;;;3048:254:644:o;3307:186::-;3366:6;3419:2;3407:9;3398:7;3394:23;3390:32;3387:52;;;3435:1;3432;3425:12;3387:52;3458:29;3477:9;3458:29;:::i;3498:127::-;3559:10;3554:3;3550:20;3547:1;3540:31;3590:4;3587:1;3580:15;3614:4;3611:1;3604:15;3630:275;3701:2;3695:9;3766:2;3747:13;;-1:-1:-1;;3743:27:644;3731:40;;-1:-1:-1;;;;;3786:34:644;;3822:22;;;3783:62;3780:88;;;3848:18;;:::i;:::-;3884:2;3877:22;3630:275;;-1:-1:-1;3630:275:644:o;3910:407::-;3975:5;-1:-1:-1;;;;;4001:6:644;3998:30;3995:56;;;4031:18;;:::i;:::-;4069:57;4114:2;4093:15;;-1:-1:-1;;4089:29:644;4120:4;4085:40;4069:57;:::i;:::-;4060:66;;4149:6;4142:5;4135:21;4189:3;4180:6;4175:3;4171:16;4168:25;4165:45;;;4206:1;4203;4196:12;4165:45;4255:6;4250:3;4243:4;4236:5;4232:16;4219:43;4309:1;4302:4;4293:6;4286:5;4282:18;4278:29;4271:40;3910:407;;;;;:::o;4322:222::-;4365:5;4418:3;4411:4;4403:6;4399:17;4395:27;4385:55;;4436:1;4433;4426:12;4385:55;4458:80;4534:3;4525:6;4512:20;4505:4;4497:6;4493:17;4458:80;:::i;4549:390::-;4627:6;4635;4688:2;4676:9;4667:7;4663:23;4659:32;4656:52;;;4704:1;4701;4694:12;4656:52;4740:9;4727:23;4717:33;;4801:2;4790:9;4786:18;4773:32;-1:-1:-1;;;;;4820:6:644;4817:30;4814:50;;;4860:1;4857;4850:12;4814:50;4883;4925:7;4916:6;4905:9;4901:22;4883:50;:::i;:::-;4873:60;;;4549:390;;;;;:::o;4944:328::-;5021:6;5029;5037;5090:2;5078:9;5069:7;5065:23;5061:32;5058:52;;;5106:1;5103;5096:12;5058:52;5129:29;5148:9;5129:29;:::i;:::-;5119:39;;5177:38;5211:2;5200:9;5196:18;5177:38;:::i;:::-;5167:48;;5262:2;5251:9;5247:18;5234:32;5224:42;;4944:328;;;;;:::o;5644:701::-;5755:6;5763;5771;5824:2;5812:9;5803:7;5799:23;5795:32;5792:52;;;5840:1;5837;5830:12;5792:52;5880:9;5867:23;-1:-1:-1;;;;;5950:2:644;5942:6;5939:14;5936:34;;;5966:1;5963;5956:12;5936:34;5989:22;;;;6045:3;6027:16;;;6023:26;6020:46;;;6062:1;6059;6052:12;6020:46;6085:2;;-1:-1:-1;6140:2:644;6125:18;;6112:32;;6156:16;;;6153:36;;;6185:1;6182;6175:12;6153:36;;6224:61;6277:7;6266:8;6255:9;6251:24;6224:61;:::i;6639:248::-;6707:6;6715;6768:2;6756:9;6747:7;6743:23;6739:32;6736:52;;;6784:1;6781;6774:12;6736:52;-1:-1:-1;;6807:23:644;;;6877:2;6862:18;;;6849:32;;-1:-1:-1;6639:248:644:o;6892:274::-;-1:-1:-1;;;;;7084:32:644;;;;7066:51;;7148:2;7133:18;;7126:34;7054:2;7039:18;;6892:274::o;7171:254::-;7239:6;7247;7300:2;7288:9;7279:7;7275:23;7271:32;7268:52;;;7316:1;7313;7306:12;7268:52;7352:9;7339:23;7329:33;;7381:38;7415:2;7404:9;7400:18;7381:38;:::i;:::-;7371:48;;7171:254;;;;;:::o;7973:322::-;8042:6;8095:2;8083:9;8074:7;8070:23;8066:32;8063:52;;;8111:1;8108;8101:12;8063:52;8151:9;8138:23;-1:-1:-1;;;;;8176:6:644;8173:30;8170:50;;;8216:1;8213;8206:12;8170:50;8239;8281:7;8272:6;8261:9;8257:22;8239:50;:::i;8300:322::-;8377:6;8385;8393;8446:2;8434:9;8425:7;8421:23;8417:32;8414:52;;;8462:1;8459;8452:12;8414:52;8498:9;8485:23;8475:33;;8527:38;8561:2;8550:9;8546:18;8527:38;:::i;8627:118::-;8713:5;8706:13;8699:21;8692:5;8689:32;8679:60;;8735:1;8732;8725:12;8750:315;8815:6;8823;8876:2;8864:9;8855:7;8851:23;8847:32;8844:52;;;8892:1;8889;8882:12;8844:52;8915:29;8934:9;8915:29;:::i;:::-;8905:39;;8994:2;8983:9;8979:18;8966:32;9007:28;9029:5;9007:28;:::i;:::-;9054:5;9044:15;;;8750:315;;;;;:::o;9070:626::-;9167:6;9175;9228:2;9216:9;9207:7;9203:23;9199:32;9196:52;;;9244:1;9241;9234:12;9196:52;9284:9;9271:23;-1:-1:-1;;;;;9354:2:644;9346:6;9343:14;9340:34;;;9370:1;9367;9360:12;9340:34;9408:6;9397:9;9393:22;9383:32;;9453:7;9446:4;9442:2;9438:13;9434:27;9424:55;;9475:1;9472;9465:12;9424:55;9515:2;9502:16;9541:2;9533:6;9530:14;9527:34;;;9557:1;9554;9547:12;9527:34;9610:7;9605:2;9595:6;9592:1;9588:14;9584:2;9580:23;9576:32;9573:45;9570:65;;;9631:1;9628;9621:12;9570:65;9662:2;9654:11;;;;;9684:6;;-1:-1:-1;9070:626:644;;-1:-1:-1;;;;9070:626:644:o;9701:801::-;9861:4;9890:2;9930;9919:9;9915:18;9960:2;9949:9;9942:21;9983:6;10018;10012:13;10049:6;10041;10034:22;10087:2;10076:9;10072:18;10065:25;;10149:2;10139:6;10136:1;10132:14;10121:9;10117:30;10113:39;10099:53;;10187:2;10179:6;10175:15;10208:1;10218:255;10232:6;10229:1;10226:13;10218:255;;;10325:2;10321:7;10309:9;10301:6;10297:22;10293:36;10288:3;10281:49;10353:40;10386:6;10377;10371:13;10353:40;:::i;:::-;10343:50;-1:-1:-1;10451:12:644;;;;10416:15;;;;10254:1;10247:9;10218:255;;;-1:-1:-1;10490:6:644;;9701:801;-1:-1:-1;;;;;;;9701:801:644:o;10507:277::-;10587:6;10640:2;10628:9;10619:7;10615:23;10611:32;10608:52;;;10656:1;10653;10646:12;10608:52;10695:9;10682:23;10734:1;10727:5;10724:12;10714:40;;10750:1;10747;10740:12;10789:667;10884:6;10892;10900;10908;10961:3;10949:9;10940:7;10936:23;10932:33;10929:53;;;10978:1;10975;10968:12;10929:53;11001:29;11020:9;11001:29;:::i;:::-;10991:39;;11049:38;11083:2;11072:9;11068:18;11049:38;:::i;:::-;11039:48;;11134:2;11123:9;11119:18;11106:32;11096:42;;11189:2;11178:9;11174:18;11161:32;-1:-1:-1;;;;;11208:6:644;11205:30;11202:50;;;11248:1;11245;11238:12;11202:50;11271:22;;11324:4;11316:13;;11312:27;-1:-1:-1;11302:55:644;;11353:1;11350;11343:12;11302:55;11376:74;11442:7;11437:2;11424:16;11419:2;11415;11411:11;11376:74;:::i;:::-;11366:84;;;10789:667;;;;;;;:::o;11461:718::-;11515:5;11568:3;11561:4;11553:6;11549:17;11545:27;11535:55;;11586:1;11583;11576:12;11535:55;11622:6;11609:20;11648:4;-1:-1:-1;;;;;11667:2:644;11664:26;11661:52;;;11693:18;;:::i;:::-;11739:2;11736:1;11732:10;11762:28;11786:2;11782;11778:11;11762:28;:::i;:::-;11824:15;;;11894;;;11890:24;;;11855:12;;;;11926:15;;;11923:35;;;11954:1;11951;11944:12;11923:35;11990:2;11982:6;11978:15;11967:26;;12002:148;12018:6;12013:3;12010:15;12002:148;;;12084:23;12103:3;12084:23;:::i;:::-;12072:36;;12035:12;;;;12128;;;;12002:148;;12184:173;12252:20;;-1:-1:-1;;;;;12301:31:644;;12291:42;;12281:70;;12347:1;12344;12337:12;12362:1420;12557:6;12565;12573;12581;12589;12597;12605;12613;12621;12629;12682:3;12670:9;12661:7;12657:23;12653:33;12650:53;;;12699:1;12696;12689:12;12650:53;12722:29;12741:9;12722:29;:::i;:::-;12712:39;;12802:2;12791:9;12787:18;12774:32;-1:-1:-1;;;;;12866:2:644;12858:6;12855:14;12852:34;;;12882:1;12879;12872:12;12852:34;12905:50;12947:7;12938:6;12927:9;12923:22;12905:50;:::i;:::-;12895:60;;13008:2;12997:9;12993:18;12980:32;12964:48;;13037:2;13027:8;13024:16;13021:36;;;13053:1;13050;13043:12;13021:36;13076:52;13120:7;13109:8;13098:9;13094:24;13076:52;:::i;:::-;13066:62;;13181:2;13170:9;13166:18;13153:32;13137:48;;13210:2;13200:8;13197:16;13194:36;;;13226:1;13223;13216:12;13194:36;13249:52;13293:7;13282:8;13271:9;13267:24;13249:52;:::i;:::-;13239:62;;13354:3;13343:9;13339:19;13326:33;13310:49;;13384:2;13374:8;13371:16;13368:36;;;13400:1;13397;13390:12;13368:36;;13423:63;13478:7;13467:8;13456:9;13452:24;13423:63;:::i;:::-;13413:73;;;13505:39;13539:3;13528:9;13524:19;13505:39;:::i;:::-;13495:49;;13563:39;13597:3;13586:9;13582:19;13563:39;:::i;:::-;13553:49;;13621:39;13655:3;13644:9;13640:19;13621:39;:::i;:::-;13611:49;;13679:39;13713:3;13702:9;13698:19;13679:39;:::i;:::-;13669:49;;13737:39;13771:3;13760:9;13756:19;13737:39;:::i;:::-;13727:49;;12362:1420;;;;;;;;;;;;;:::o;13787:260::-;13855:6;13863;13916:2;13904:9;13895:7;13891:23;13887:32;13884:52;;;13932:1;13929;13922:12;13884:52;13955:29;13974:9;13955:29;:::i;:::-;13945:39;;14003:38;14037:2;14026:9;14022:18;14003:38;:::i;14052:127::-;14113:10;14108:3;14104:20;14101:1;14094:31;14144:4;14141:1;14134:15;14168:4;14165:1;14158:15;14184:349;14337:2;14322:18;;14370:1;14359:13;;14349:144;;14415:10;14410:3;14406:20;14403:1;14396:31;14450:4;14447:1;14440:15;14478:4;14475:1;14468:15;14349:144;14502:25;;;14184:349;:::o;14538:267::-;14627:6;14622:3;14615:19;14679:6;14672:5;14665:4;14660:3;14656:14;14643:43;-1:-1:-1;14731:1:644;14706:16;;;14724:4;14702:27;;;14695:38;;;;14787:2;14766:15;;;-1:-1:-1;;14762:29:644;14753:39;;;14749:50;;14538:267::o;14810:247::-;14969:2;14958:9;14951:21;14932:4;14989:62;15047:2;15036:9;15032:18;15024:6;15016;14989:62;:::i;15062:380::-;15141:1;15137:12;;;;15184;;;15205:61;;15259:4;15251:6;15247:17;15237:27;;15205:61;15312:2;15304:6;15301:14;15281:18;15278:38;15275:161;;;15358:10;15353:3;15349:20;15346:1;15339:31;15393:4;15390:1;15383:15;15421:4;15418:1;15411:15;15447:338;15649:2;15631:21;;;15688:2;15668:18;;;15661:30;-1:-1:-1;;;15722:2:644;15707:18;;15700:44;15776:2;15761:18;;15447:338::o;16564:127::-;16625:10;16620:3;16616:20;16613:1;16606:31;16656:4;16653:1;16646:15;16680:4;16677:1;16670:15;16696:168;16736:7;16802:1;16798;16794:6;16790:14;16787:1;16784:21;16779:1;16772:9;16765:17;16761:45;16758:71;;;16809:18;;:::i;:::-;-1:-1:-1;16849:9:644;;16696:168::o;16869:217::-;16909:1;16935;16925:132;;16979:10;16974:3;16970:20;16967:1;16960:31;17014:4;17011:1;17004:15;17042:4;17039:1;17032:15;16925:132;-1:-1:-1;17071:9:644;;16869:217::o;18581:522::-;18659:4;18665:6;18725:11;18712:25;18819:2;18815:7;18804:8;18788:14;18784:29;18780:43;18760:18;18756:68;18746:96;;18838:1;18835;18828:12;18746:96;18865:33;;18917:20;;;-1:-1:-1;;;;;;18949:30:644;;18946:50;;;18992:1;18989;18982:12;18946:50;19025:4;19013:17;;-1:-1:-1;19056:14:644;19052:27;;;19042:38;;19039:58;;;19093:1;19090;19083:12;19108:504;19167:5;19174:6;19234:3;19221:17;19320:2;19316:7;19305:8;19289:14;19285:29;19281:43;19261:18;19257:68;19247:96;;19339:1;19336;19329:12;19247:96;19367:33;;19471:4;19458:18;;;-1:-1:-1;19419:21:644;;-1:-1:-1;;;;;;19488:30:644;;19485:50;;;19531:1;19528;19521:12;19485:50;19581:6;19565:14;19561:27;19551:8;19547:42;19544:62;;;19602:1;19599;19592:12;19726:1542;19917:2;19906:9;19899:21;19929:66;19991:2;19980:9;19976:18;19948:26;19967:6;19948:26;:::i;:::-;19929:66;:::i;:::-;19880:4;20024:35;20055:2;20047:6;20043:15;20024:35;:::i;:::-;20068:52;20116:2;20105:9;20101:18;20087:12;20068:52;:::i;:::-;;20181:2;20173:6;20169:15;20156:29;20151:2;20140:9;20136:18;20129:57;20217:35;20248:2;20240:6;20236:15;20217:35;:::i;:::-;20261:55;20311:3;20300:9;20296:19;20280:14;20261:55;:::i;:::-;;20361:57;20413:3;20405:6;20401:16;20393:6;20361:57;:::i;:::-;20437:6;20480:2;20474:3;20463:9;20459:19;20452:31;20506:77;20578:3;20567:9;20563:19;20549:12;20533:14;20506:77;:::i;:::-;20492:91;;20645:3;20637:6;20633:16;20620:30;20614:3;20603:9;20599:19;20592:59;20713:3;20705:6;20701:16;20688:30;20682:3;20671:9;20667:19;20660:59;20750:36;20781:3;20773:6;20769:16;20750:36;:::i;:::-;20728:58;;20805:3;20817:54;20867:2;20856:9;20852:18;20836:14;20817:54;:::i;:::-;20902:35;20933:2;20925:6;20921:15;20902:35;:::i;:::-;20880:57;;;20956:3;20968:54;21018:2;21007:9;21003:18;20987:14;-1:-1:-1;;;;;19683:31:644;19671:44;;19617:104;20968:54;21053:35;21084:2;21076:6;21072:15;21053:35;:::i;:::-;21031:57;;;21107:3;21119:54;21169:2;21158:9;21154:18;21138:14;-1:-1:-1;;;;;19683:31:644;19671:44;;19617:104;21119:54;21222:15;;;;21209:29;21189:18;;;;21182:57;;;;-1:-1:-1;21256:6:644;19726:1542;-1:-1:-1;19726:1542:644:o;21273:128::-;21313:3;21344:1;21340:6;21337:1;21334:13;21331:39;;;21350:18;;:::i;:::-;-1:-1:-1;21386:9:644;;21273:128::o;21406:127::-;21467:10;21462:3;21458:20;21455:1;21448:31;21498:4;21495:1;21488:15;21522:4;21519:1;21512:15;22064:135;22103:3;-1:-1:-1;;22124:17:644;;22121:43;;;22144:18;;:::i;:::-;-1:-1:-1;22191:1:644;22180:13;;22064:135::o;23232:784::-;-1:-1:-1;;;23638:3:644;23631:36;23613:3;23696:6;23690:13;23712:62;23767:6;23762:2;23757:3;23753:12;23746:4;23738:6;23734:17;23712:62;:::i;:::-;-1:-1:-1;;;23833:2:644;23793:16;;;23825:11;;;23818:40;23883:13;;23905:63;23883:13;23954:2;23946:11;;23939:4;23927:17;;23905:63;:::i;:::-;23988:17;24007:2;23984:26;;23232:784;-1:-1:-1;;;;23232:784:644:o;24378:339::-;24580:2;24562:21;;;24619:2;24599:18;;;24592:30;-1:-1:-1;;;24653:2:644;24638:18;;24631:45;24708:2;24693:18;;24378:339::o;25062:186::-;25121:6;25174:2;25162:9;25153:7;25149:23;25145:32;25142:52;;;25190:1;25187;25180:12;25142:52;25213:29;25232:9;25213:29;:::i;27306:125::-;27346:4;27374:1;27371;27368:8;27365:34;;;27379:18;;:::i;:::-;-1:-1:-1;27416:9:644;;27306:125::o;27436:383::-;27633:2;27622:9;27615:21;27596:4;27659:45;27700:2;27689:9;27685:18;27677:6;27659:45;:::i;:::-;27752:9;27744:6;27740:22;27735:2;27724:9;27720:18;27713:50;27780:33;27806:6;27798;27780:33;:::i;:::-;27772:41;27436:383;-1:-1:-1;;;;;27436:383:644:o;27824:489::-;-1:-1:-1;;;;;28093:15:644;;;28075:34;;28145:15;;28140:2;28125:18;;28118:43;28192:2;28177:18;;28170:34;;;28240:3;28235:2;28220:18;;28213:31;;;28018:4;;28261:46;;28287:19;;28279:6;28261:46;:::i;28318:249::-;28387:6;28440:2;28428:9;28419:7;28415:23;28411:32;28408:52;;;28456:1;28453;28446:12;28408:52;28488:9;28482:16;28507:30;28531:5;28507:30;:::i;28572:407::-;28774:2;28756:21;;;28813:2;28793:18;;;28786:30;28852:34;28847:2;28832:18;;28825:62;-1:-1:-1;;;28918:2:644;28903:18;;28896:41;28969:3;28954:19;;28572:407::o;28984:136::-;29023:3;29051:5;29041:39;;29060:18;;:::i;:::-;-1:-1:-1;;;29096:18:644;;28984:136::o;29829:271::-;30012:6;30004;29999:3;29986:33;29968:3;30038:16;;30063:13;;;30038:16;29829:271;-1:-1:-1;29829:271:644:o;31618:274::-;31747:3;31785:6;31779:13;31801:53;31847:6;31842:3;31835:4;31827:6;31823:17;31801:53;:::i;:::-;31870:16;;;;;31618:274;-1:-1:-1;;31618:274:644:o;35657:245::-;35724:6;35777:2;35765:9;35756:7;35752:23;35748:32;35745:52;;;35793:1;35790;35783:12;35745:52;35825:9;35819:16;35844:28;35866:5;35844:28;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "DEFAULT_ADMIN_ROLE()": "a217fddf",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "cancel(uint256)": "40e58ee5",
    "contractURI()": "e8a3d485",
    "freezeMetadata()": "d111515d",
    "getApproved(uint256)": "081812fc",
    "getDefaultRoyaltyInfo()": "b24f2d39",
    "getFlatPlatformFeeInfo()": "e57553da",
    "getPlatformFeeInfo()": "d45573f6",
    "getPlatformFeeType()": "f28083c3",
    "getRoleAdmin(bytes32)": "248a9ca3",
    "getRoleMember(bytes32,uint256)": "9010d07c",
    "getRoleMemberCount(bytes32)": "ca15c873",
    "getRoyaltyInfoForToken(uint256)": "4cc157df",
    "grantRole(bytes32,address)": "2f2ff15d",
    "hasRole(bytes32,address)": "91d14854",
    "hasRoleWithSwitch(bytes32,address)": "a32fa5b3",
    "initialize(address,string,string,string,address[],address,address,uint128,uint128,address)": "e1591634",
    "isApprovedForAll(address,address)": "e985e9c5",
    "isTrustedForwarder(address)": "572b6c05",
    "mintTo(address,string)": "0075a317",
    "mintWithSignature((address,address,uint256,address,string,uint256,uint256,address,uint128,uint128,bytes32),bytes)": "439c7be5",
    "multicall(bytes[])": "ac9650d8",
    "name()": "06fdde03",
    "nextTokenIdToMint()": "3b1475a7",
    "owner()": "8da5cb5b",
    "ownerOf(uint256)": "6352211e",
    "primarySaleRecipient()": "079fe40e",
    "renounceRole(bytes32,address)": "36568abe",
    "revoke(uint256)": "20c5429b",
    "revokeRole(bytes32,address)": "d547741f",
    "royaltyInfo(uint256,uint256)": "2a55205a",
    "safeTransferFrom(address,address,uint256)": "42842e0e",
    "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
    "setApprovalForAll(address,bool)": "a22cb465",
    "setContractURI(string)": "938e3d7b",
    "setDefaultRoyaltyInfo(address,uint256)": "600dd5ea",
    "setFlatPlatformFeeInfo(address,uint256)": "7e54523c",
    "setOwner(address)": "13af4035",
    "setPlatformFeeInfo(address,uint256)": "1e7ac488",
    "setPlatformFeeType(uint8)": "b6f10c79",
    "setPrimarySaleRecipient(address)": "6f4f2837",
    "setRoyaltyInfoForToken(uint256,address,uint256)": "9bcf7a15",
    "setTokenURI(uint256,string)": "162094c4",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "tokenURI(uint256)": "c87b56dd",
    "totalMinted()": "a2309ff8",
    "totalSupply()": "18160ddd",
    "transferFrom(address,address,uint256)": "23b872dd",
    "uriFrozen()": "274e4a1d",
    "verify((address,address,uint256,address,string,uint256,uint256,address,uint128,uint128,bytes32),bytes)": "252e82e8"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalToCurrentOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApproveToCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"prevURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newURI\",\"type\":\"string\"}],\"name\":\"ContractURIUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newRoyaltyRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newRoyaltyBps\",\"type\":\"uint256\"}],\"name\":\"DefaultRoyalty\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"platformFeeRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"flatFee\",\"type\":\"uint256\"}],\"name\":\"FlatPlatformFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"MetadataFrozen\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"prevOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"platformFeeRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"platformFeeBps\",\"type\":\"uint256\"}],\"name\":\"PlatformFeeInfoUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"enum IPlatformFee.PlatformFeeType\",\"name\":\"feeType\",\"type\":\"uint8\"}],\"name\":\"PlatformFeeTypeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"PrimarySaleRecipientUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"royaltyRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"royaltyBps\",\"type\":\"uint256\"}],\"name\":\"RoyaltyForToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"mintedTo\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenIdMinted\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"TokensMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"mintedTo\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenIdMinted\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"royaltyRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyBps\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"primarySaleRecipient\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"validityStartTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"validityEndTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"indexed\":false,\"internalType\":\"struct ISignatureMintERC721.MintRequest\",\"name\":\"mintRequest\",\"type\":\"tuple\"}],\"name\":\"TokensMintedWithSignature\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"cancel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"freezeMetadata\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDefaultRoyaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFlatPlatformFeeInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPlatformFeeInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPlatformFeeType\",\"outputs\":[{\"internalType\":\"enum IPlatformFee.PlatformFeeType\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getRoyaltyInfoForToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRoleWithSwitch\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_defaultAdmin\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_contractURI\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"_trustedForwarders\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"_saleRecipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_royaltyRecipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"_royaltyBps\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"_platformFeeBps\",\"type\":\"uint128\"},{\"internalType\":\"address\",\"name\":\"_platformFeeRecipient\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"mintTo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenIdMinted\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"royaltyRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyBps\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"primarySaleRecipient\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"validityStartTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"validityEndTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"internalType\":\"struct ISignatureMintERC721.MintRequest\",\"name\":\"_req\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"mintWithSignature\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextTokenIdToMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"primarySaleRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"revoke\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"setContractURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_royaltyRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_royaltyBps\",\"type\":\"uint256\"}],\"name\":\"setDefaultRoyaltyInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_platformFeeRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_flatFee\",\"type\":\"uint256\"}],\"name\":\"setFlatPlatformFeeInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_platformFeeRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_platformFeeBps\",\"type\":\"uint256\"}],\"name\":\"setPlatformFeeInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IPlatformFee.PlatformFeeType\",\"name\":\"_feeType\",\"type\":\"uint8\"}],\"name\":\"setPlatformFeeType\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_saleRecipient\",\"type\":\"address\"}],\"name\":\"setPrimarySaleRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_bps\",\"type\":\"uint256\"}],\"name\":\"setRoyaltyInfoForToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"setTokenURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uriFrozen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"royaltyRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyBps\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"primarySaleRecipient\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"validityStartTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"validityEndTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"internalType\":\"struct ISignatureMintERC721.MintRequest\",\"name\":\"_req\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"verify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:description\":\"This contract is a loyalty card NFT collection. Each NFT represents a loyalty card, and the NFT's metadata                      contains the loyalty card's information. A loyalty card's metadata can be updated by an admin of the contract.                      A loyalty card can be cancelled (i.e. 'burned') by its owner or an approved operator. A loyalty card can be revoked                      (i.e. 'burned') without its owner's approval, by an admin of the contract.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"cancel(uint256)\":{\"details\":\"Burns `tokenId`. See {ERC721-_burn}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"getFlatPlatformFeeInfo()\":{\"details\":\"Returns the platform fee bps and recipient.\"},\"getPlatformFeeInfo()\":{\"details\":\"Returns the platform fee recipient and bps.\"},\"getPlatformFeeType()\":{\"details\":\"Returns the platform fee bps and recipient.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"See {grantRole} and {revokeRole}.                  To change a role's admin, use {_setRoleAdmin}.\",\"params\":{\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns `member` who has `role`, at `index` of role-members list.                  See struct {RoleMembers}, and mapping {roleMembers}\",\"params\":{\"index\":\"Index in list of current members for the role.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"},\"returns\":{\"member\":\" Address of account that has `role`\"}},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns `count` of accounts that have `role`.                  See struct {RoleMembers}, and mapping {roleMembers}\",\"params\":{\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"},\"returns\":{\"count\":\"  Total number of accounts that have `role`\"}},\"getRoyaltyInfoForToken(uint256)\":{\"details\":\"Returns royalty recipient and bps for `_tokenId`.\",\"params\":{\"_tokenId\":\"The tokenID of the NFT for which to query royalty info.\"}},\"grantRole(bytes32,address)\":{\"details\":\"Caller must have admin role for the `role`.                  Emits {RoleGranted Event}.\",\"params\":{\"account\":\"Address of the account to which the role is being granted.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\",\"params\":{\"account\":\"Address of the account for which the role is being checked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"hasRoleWithSwitch(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.                  Role restrictions can be swtiched on and off:                      - If address(0) has ROLE, then the ROLE restrictions                        don't apply.                      - If address(0) does not have ROLE, then the ROLE                        restrictions will apply.\",\"params\":{\"account\":\"Address of the account for which the role is being checked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"initialize(address,string,string,string,address[],address,address,uint128,uint128,address)\":{\"details\":\"Initializes the contract, like a constructor.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"mintTo(address,string)\":{\"details\":\"Lets an account with MINTER_ROLE mint an NFT. Always mints 1 NFT.\"},\"mintWithSignature((address,address,uint256,address,string,uint256,uint256,address,uint128,uint128,bytes32),bytes)\":{\"details\":\"Mints an NFT according to the provided mint request. Always mints 1 NFT.\"},\"multicall(bytes[])\":{\"details\":\"Receives and executes a batch of function calls on this contract.\",\"params\":{\"data\":\"The bytes data that makes up the batch of function calls to execute.\"},\"returns\":{\"results\":\"The bytes data that makes up the result of the batch of function calls executed.\"}},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"nextTokenIdToMint()\":{\"details\":\"The tokenId of the next NFT that will be minted / lazy minted.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"primarySaleRecipient()\":{\"details\":\"Returns primary sale recipient address.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Caller must have the `role`, with caller being the same as `account`.                  Emits {RoleRevoked Event}.\",\"params\":{\"account\":\"Address of the account from which the role is being revoked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"revoke(uint256)\":{\"details\":\"Burns `tokenId`. See {ERC721-_burn}.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Caller must have admin role for the `role`.                  Emits {RoleRevoked Event}.\",\"params\":{\"account\":\"Address of the account from which the role is being revoked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"royaltyInfo(uint256,uint256)\":{\"details\":\"Returns royalty amount and recipient for `tokenId` and `salePrice`.\",\"params\":{\"salePrice\":\"Sale price of the token.\",\"tokenId\":\"The tokenID of the NFT for which to query royalty info.\"},\"returns\":{\"receiver\":\"       Address of royalty recipient account.\",\"royaltyAmount\":\"  Royalty amount calculated at current royaltyBps value.\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"setContractURI(string)\":{\"details\":\"Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.\",\"params\":{\"_uri\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"setDefaultRoyaltyInfo(address,uint256)\":{\"details\":\"Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {DefaultRoyalty Event}; See {_setupDefaultRoyaltyInfo}.\",\"params\":{\"_royaltyBps\":\"Updated royalty bps.\",\"_royaltyRecipient\":\"Address to be set as default royalty recipient.\"}},\"setOwner(address)\":{\"params\":{\"_newOwner\":\"The address to set as the new owner of the contract.\"}},\"setPlatformFeeInfo(address,uint256)\":{\"details\":\"Caller should be authorized to set platform fee info.                  See {_canSetPlatformFeeInfo}.                  Emits {PlatformFeeInfoUpdated Event}; See {_setupPlatformFeeInfo}.\",\"params\":{\"_platformFeeBps\":\"Updated platformFeeBps.\",\"_platformFeeRecipient\":\"Address to be set as new platformFeeRecipient.\"}},\"setPrimarySaleRecipient(address)\":{\"details\":\"Caller should be authorized to set primary sales info.                  See {_canSetPrimarySaleRecipient}.                  Emits {PrimarySaleRecipientUpdated Event}; See {_setupPrimarySaleRecipient}.\",\"params\":{\"_saleRecipient\":\"Address to be set as new recipient of primary sales.\"}},\"setRoyaltyInfoForToken(uint256,address,uint256)\":{\"details\":\"Sets royalty info for `_tokenId`. Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {RoyaltyForToken Event}; See {_setupRoyaltyInfoForToken}.\",\"params\":{\"_bps\":\"Updated royalty bps for the token Id.\",\"_recipient\":\"Address to be set as royalty recipient for given token Id.\"}},\"supportsInterface(bytes4)\":{\"details\":\"See ERC 165\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the URI for a given tokenId.\"},\"totalMinted()\":{\"details\":\"Returns the total amount of tokens minted in the contract.\"},\"totalSupply()\":{\"details\":\"Burned tokens are calculated here, use _totalMinted() if you want to count just minted tokens.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"verify((address,address,uint256,address,string,uint256,uint256,address,uint128,uint128,bytes32),bytes)\":{\"details\":\"Verifies that a mint request is signed by an account holding MINTER_ROLE (at the time of the function call).\"}},\"stateVariables\":{\"MAX_BPS\":{\"details\":\"Max bps in the thirdweb system.\"},\"METADATA_ROLE\":{\"details\":\"Only METADATA_ROLE holders can update NFT metadata.\"},\"MINTER_ROLE\":{\"details\":\"Only MINTER_ROLE holders can sign off on `MintRequest`s.\"},\"REVOKE_ROLE\":{\"details\":\"Only REVOKE_ROLE holders can revoke a loyalty card.\"},\"TRANSFER_ROLE\":{\"details\":\"Only TRANSFER_ROLE holders can have tokens transferred from or to them, during restricted transfers.\"}},\"title\":\"LoyaltyCard\",\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"ApprovalToCurrentOwner()\":[{\"notice\":\"The caller cannot approve to the current owner.\"}],\"ApproveToCaller()\":[{\"notice\":\"The caller cannot approve to their own address.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{\"contractURI()\":{\"notice\":\"Returns the contract metadata URI.\"},\"freezeMetadata()\":{\"notice\":\"Freezes the metadata URI for a given NFT.\"},\"getDefaultRoyaltyInfo()\":{\"notice\":\"Returns the defualt royalty recipient and BPS for this contract's NFTs.\"},\"getRoleAdmin(bytes32)\":{\"notice\":\"Returns the admin role that controls the specified role.\"},\"getRoleMember(bytes32,uint256)\":{\"notice\":\"Returns the role-member from a list of members for a role,                  at a given index.\"},\"getRoleMemberCount(bytes32)\":{\"notice\":\"Returns total number of accounts that have a role.\"},\"getRoyaltyInfoForToken(uint256)\":{\"notice\":\"View royalty info for a given token.\"},\"grantRole(bytes32,address)\":{\"notice\":\"Grants a role to an account, if not previously granted.\"},\"hasRole(bytes32,address)\":{\"notice\":\"Checks whether an account has a particular role.\"},\"hasRoleWithSwitch(bytes32,address)\":{\"notice\":\"Checks whether an account has a particular role;                  role restrictions can be swtiched on and off.\"},\"multicall(bytes[])\":{\"notice\":\"Receives and executes a batch of function calls on this contract.\"},\"owner()\":{\"notice\":\"Returns the owner of the contract.\"},\"renounceRole(bytes32,address)\":{\"notice\":\"Revokes role from the account.\"},\"revokeRole(bytes32,address)\":{\"notice\":\"Revokes role from an account.\"},\"royaltyInfo(uint256,uint256)\":{\"notice\":\"View royalty info for a given token and sale price.\"},\"setContractURI(string)\":{\"notice\":\"Lets a contract admin set the URI for contract-level metadata.\"},\"setDefaultRoyaltyInfo(address,uint256)\":{\"notice\":\"Updates default royalty recipient and bps.\"},\"setFlatPlatformFeeInfo(address,uint256)\":{\"notice\":\"Lets a module admin set a flat fee on primary sales.\"},\"setOwner(address)\":{\"notice\":\"Lets an authorized wallet set a new owner for the contract.\"},\"setPlatformFeeInfo(address,uint256)\":{\"notice\":\"Updates the platform fee recipient and bps.\"},\"setPlatformFeeType(uint8)\":{\"notice\":\"Lets a module admin set platform fee type.\"},\"setPrimarySaleRecipient(address)\":{\"notice\":\"Updates primary sale recipient.\"},\"setRoyaltyInfoForToken(uint256,address,uint256)\":{\"notice\":\"Updates default royalty recipient and bps for a particular token.\"},\"setTokenURI(uint256,string)\":{\"notice\":\"Sets the metadata URI for a given NFT.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/prebuilts/loyalty/LoyaltyCard.sol\":\"LoyaltyCard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@std/=lib/forge-std/src/\",\":@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/\",\":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/\",\":contracts/=contracts/\",\":ds-test/=lib/ds-test/src/\",\":dynamic-contracts/=lib/dynamic-contracts/src/\",\":erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/ERC721A-Upgradeable/\",\":erc721a/=lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/\"]},\"sources\":{\"contracts/eip/ERC721AVirtualApproveUpgradeable.sol\":{\"keccak256\":\"0xf644dda26330df06c005afaa856130ca1717813da3801c295a8684d1d185dfbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c3c26d8e93ae85fe8c955cab7b6eb4ab8e624fe3ace08e497cd8d077c0b53eb\",\"dweb:/ipfs/QmPrwqtYsrvW35ZWhWFhzBWQD24EUGoRdd6cGhgTPE7Fag\"]},\"contracts/eip/interface/IERC165.sol\":{\"keccak256\":\"0x35d0a916f70344a5fcc6c67cb531b6150d2fce43e72a6282385eab02020f2f49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75ccd8b9a8b52a93b8097fcb8181b7afb6d72bbe6eaabf434f0481a7a207cc8a\",\"dweb:/ipfs/QmPUZAEE4nwkijcE2amAXAWEVGVG5XaKWGhpgnRwpAf93R\"]},\"contracts/eip/interface/IERC20.sol\":{\"keccak256\":\"0x5bdd9dd97ba7d9d7c9a2953db287e4d9d7fa93a27a96bc2e72a8da4919b6f7ff\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://45527c265ee5de6bbb3ecfc052e7b1175531a82c2ac16172020aee855f7dd592\",\"dweb:/ipfs/QmVZthqbG916qUQSwv1LE8bB58ZGQ1VfQbLbbRV5urfEYA\"]},\"contracts/eip/interface/IERC2981.sol\":{\"keccak256\":\"0x7886c17b1bc3df885201378fd070d2f00d05fa54f20f7daf10382ec6ff4bd0c9\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://a0802623ba9555f6d186bab5fd139203b643e88ea31d78f4f05cddd4008ac6cf\",\"dweb:/ipfs/QmYbqzSKkKmF2xYeH1zGNewBDNAhukuaZEUVAvYgnKt1He\"]},\"contracts/eip/interface/IERC4906.sol\":{\"keccak256\":\"0xa31c36a97c9133c8a451aaec1aa585537cacd71760eb6c5ce402155313efb392\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f3d6fee0ee338d9d0041e7a094efe2f0cd1d4a05b8b127e4f8928f5d3bac8fc4\",\"dweb:/ipfs/Qmcrgw6xMNvsFBfYh51FmFnRP14EEThSSp4n6F6QeKLhy3\"]},\"contracts/eip/interface/IERC721.sol\":{\"keccak256\":\"0xbd9f2dd131e8f1e4e50b1b116eae917510ab9bf5d4356de37c5daf4cffdfa049\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ac3530b317083464271b100de1976ed9179b9e7d5a4fc3d992c61c80676a676\",\"dweb:/ipfs/QmUq1AVzymvp7Y8H1eypGEGU4icjzn5vDSvKMNpXnoaeMT\"]},\"contracts/extension/ContractMetadata.sol\":{\"keccak256\":\"0xf53ab08ec3057056872c15e35a5610f7a43426bd2829786aed006d527177adfe\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ee132ae5efdd372152febfcd8fd3a7cb82c7019367d92c886f5096003a79f392\",\"dweb:/ipfs/QmRW1cGWmZAu57huZpTUwsWB8AxUFrBp6g4NqozXpbWsR6\"]},\"contracts/extension/Multicall.sol\":{\"keccak256\":\"0x737a71c74307fa360863550d64bbaef599bbcb47829b19c3743ed1ff22b9af55\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://7e82a79ee183dffa3ec01faac0907e04d72a185e55b7c24bff8e8e952b05f4c2\",\"dweb:/ipfs/QmQ9neZqpcgJtGgm84FBzMqFntZ1Sk1KFTWhjCMq8vnKDg\"]},\"contracts/extension/NFTMetadata.sol\":{\"keccak256\":\"0x03ae860f70403ad02737ef79abf0501d1cb532923452eaf8360f62b02d79ef74\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://73b1747bddf59114617b6cfa09cf31abd18d829e0f9c6564e07fb463863bc548\",\"dweb:/ipfs/QmPJaQ8AKWf6f76Du2XD3zsqLZxotRzXR7Lvx5Xu6G9gWs\"]},\"contracts/extension/Ownable.sol\":{\"keccak256\":\"0x45447691686861237d5e1acb9d723d861a3fb3d561335e4f385d1547f25e27a5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5142293e36c736f744c73aaecab5f7be8e2d5ac70acc67851e0cea5171fd6782\",\"dweb:/ipfs/QmVJT5B84o5vFc5E2VteZdBhrT1HMutc7Ax72UKD1aZatJ\"]},\"contracts/extension/Permissions.sol\":{\"keccak256\":\"0xe7e18181f2d2c8bae4afc7ee69ce1d547e7aa583182e8e0853ca33c49a28c04d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://75d5f5a9356c290e398a5dd05914b59c3d09e6fedde2da80b6f1012aedf323f8\",\"dweb:/ipfs/QmNrrf8Uyq33XBsE2NqVTW6HVX3XixFTjCG8KGbGxdEE84\"]},\"contracts/extension/PermissionsEnumerable.sol\":{\"keccak256\":\"0x434a6ffc16ddc437ffb37b8fbe4c9696385252f15a617c4606b8c5e10561caf3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1a9d4dac4bf2ae3c3c086af1956dc25e8b149b0914125e660cc0648791c247cb\",\"dweb:/ipfs/QmTMEggPdBea1JCamsShwRf3en2FgVTXNTPJ2isFtBk4Kk\"]},\"contracts/extension/PlatformFee.sol\":{\"keccak256\":\"0x8db4537648987b88dce356120fc96c48cffe53eaa5988b9a7e8aa023f4258163\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9e30009e63be23e60e92bf25582143596e3f01b2a1f7e121664559119a9f5890\",\"dweb:/ipfs/Qma3bi4NfCNZaukacNQMQ3j5kXn6Ym4mDa57Tqc26ssahE\"]},\"contracts/extension/PrimarySale.sol\":{\"keccak256\":\"0x9ef1ad82fadf988a07f4034b92ccdb3281682693e41759a79042814d36095f42\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0d962b48453e1f50b808193135c2f14265324fa8b75fe3b405ef7836e38921f7\",\"dweb:/ipfs/QmZDLNsZQj9kNcb15nBuWRpPwDdDvJS2gtFwqEs2Lwxb1N\"]},\"contracts/extension/Royalty.sol\":{\"keccak256\":\"0xcc3110048db91d4ecd05afcc6721fce6ade5eee8c2da0af8955e86ece8754350\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a1e830502fda46ab7618b65e155341d42bf007717edb27711b09bf6250ce1485\",\"dweb:/ipfs/QmY5fKpg7aCubR7fENu9htRFspU8hpSo7CVUNJxQdh8kv1\"]},\"contracts/extension/SignatureMintERC721Upgradeable.sol\":{\"keccak256\":\"0x1f9f0cdf37800f14e331b01721130d503d55e60ff86cd3faae15d75e9cb4c8f3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7a1dce41c6e7522b39c8648742e70867f6ef9ebbadf01249f4d47f850af653a3\",\"dweb:/ipfs/QmX3znQxZSiA9GFvGkCeEHPrA1dy1pAo6tFyAoa2GtKAKM\"]},\"contracts/extension/interface/IContractMetadata.sol\":{\"keccak256\":\"0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a\",\"dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr\"]},\"contracts/extension/interface/IMulticall.sol\":{\"keccak256\":\"0xe2bbd37b8fdb9cc8b933e598512a068ebb214b3f5abc2bc634916def55be4ef3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://012352099c262348ac755a53b082af520babc6c66dc5f1251fc23609728340ca\",\"dweb:/ipfs/QmcXEgzQ53jdJX5ZNy8zivvUjDq7J8WTnR1yAiwTpkQ2ar\"]},\"contracts/extension/interface/INFTMetadata.sol\":{\"keccak256\":\"0x5c3ebcaa3bb1a7f685d620acb0a0383239a326e719d3f9667790a71750391261\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2f4f702934d117edc04cb31bd212aea52341ee05ce0467e758dd9d96e805ad5a\",\"dweb:/ipfs/QmRtHuDx9bZku2qT4HS5CWLzYmyg2q8kFcc4KFWr4U1fNU\"]},\"contracts/extension/interface/IOwnable.sol\":{\"keccak256\":\"0xd659a64da6264fdd50ee379be032fea4917eba4fadfd6d366107fb17e46907f3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c15940c4a3d229f4fdd1226fe297a58fde10b07b86a34de1ed11a8802dd5dea9\",\"dweb:/ipfs/QmS8p8CxWiahLkYsCWNhFjCnmQzuc4ck3kjYYuCFj8LsmC\"]},\"contracts/extension/interface/IPermissions.sol\":{\"keccak256\":\"0xc0cd1f87bac474a06f85e2b341b9b57662aee957fc24180d42c872481c2f2ae3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7dec3eed451d63867531d693f0be3279fa2c9aef3130f0826c3520c06820fa5d\",\"dweb:/ipfs/QmTYANrcPdd9SCe99DWsKJ19evNRQKQGZeoS1Keew4M2cS\"]},\"contracts/extension/interface/IPermissionsEnumerable.sol\":{\"keccak256\":\"0x2e742c18a4481bad41d56424cd16c52def2fb415f69e5fb5f67d8d979300ff95\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d9be33bb865e3e82aca540a3e38cbc2bf2e431f9d1bf39c50d6c757e7b7bf3ee\",\"dweb:/ipfs/Qmdad1Xqj5SQ44Bk4bwD2uA36XnGHtqnVYSomKZQvnUBVG\"]},\"contracts/extension/interface/IPlatformFee.sol\":{\"keccak256\":\"0x8c23c2a223a3b94ccce125b418e5fabfb631695d927e336512bc8dca61bbc736\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://86dd8c93e75cb3a44d64c873154ee3857b604d1b07a9e52c120870172c2e9a34\",\"dweb:/ipfs/QmWXxEi7ygoRjN8yWYfVGbfhuwVg8bkLoHNzr3xMNa1VRv\"]},\"contracts/extension/interface/IPrimarySale.sol\":{\"keccak256\":\"0x77c89cb8d9b781b0a08b1fa81c95a0dd5c19200b2fb0dc884c1084b931624004\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a37b042af11a08ba5518dadf72c91745d1b5f42b1c20ea5282492bfd18f53869\",\"dweb:/ipfs/QmWEYYG5VqR8MRfr2rydDV98GLKmaJtCC8G1W7MzJ9qFnF\"]},\"contracts/extension/interface/IRoyalty.sol\":{\"keccak256\":\"0x13912ba3970fdedd1eb5bf8bf0bcc5e64e43f2cadb8d22c3d6fb695fd9877385\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b84d19df7aa9cb7460cca50ab050cdcfffb62f53c246daf35df276cad7088e9b\",\"dweb:/ipfs/QmNPPHJuiW1KCcq3aXELnA4X8NaSPM9S2vHbsBEEDYiwP8\"]},\"contracts/extension/interface/ISignatureMintERC721.sol\":{\"keccak256\":\"0xc1142e0742252123cff0b0c45ede1e70d43cf01d677abc32d4a16064d5161822\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b8f0a32af882458e1c2b040ebe1bc399bdd765e8a29c35fb881494d414c95cb2\",\"dweb:/ipfs/QmR4Z1N29sPXstFaQrubGjNiQhf26VztyVFHjpDjFLfFAi\"]},\"contracts/external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol\":{\"keccak256\":\"0xdbc96b1264d2e2bd82cb7e697056929325e09d1641321145a8cec53b22b9567d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ca7ccf947d21d98878ec18e941b750cd2ae7c563e6d2a707da4f806038d67c8\",\"dweb:/ipfs/QmYVLYUPMD3b95vKrS5yjxcz2MDNNzkWJY9xc9bc9oTZdh\"]},\"contracts/external-deps/openzeppelin/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xa6149938a7c7c8af4244743aeaafcfb1fd9ce15ad45de58fa9576f0ed5599b2c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://839aa4ea6ef6d1972881bfd7420a9ddcd2f37139e3f0bf25310f93f48410702d\",\"dweb:/ipfs/QmSH65kStfbgMbfjFdfJqV412omPy6nB1JMvMt9q7SsytW\"]},\"contracts/infra/interface/IWETH.sol\":{\"keccak256\":\"0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1\",\"dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU\"]},\"contracts/lib/CurrencyTransferLib.sol\":{\"keccak256\":\"0x4a30bc9a8cd6cc8b855621fb1a651e2c3a1639b0ad153f1139c3ba463605672d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://417cc64ec6393f3cc89981ca9c32bbcc444a5f91363d69f84dd8ace888b2b859\",\"dweb:/ipfs/QmZeaQsYGx4VNoP8e1fcwC87PwvyakheWYeuwEwhFSJnvB\"]},\"contracts/lib/TWAddress.sol\":{\"keccak256\":\"0x460f032cf3bf43d586e126ab2ec8be4335767f497ccb699741546a1cfba94a7e\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://28fcbf6dde6c2eeb9864f6ec6f21dcc81ec426877debf4b912f2f3bc5b0fc91e\",\"dweb:/ipfs/QmS1SHrZDfefX8EE7DdvszTY6VPCHydf4HM7NKJ2gP72e6\"]},\"contracts/lib/TWStrings.sol\":{\"keccak256\":\"0xef7e9954d888f99baffc10db1d9bf6a2beb66c842d81dea90352ddded22cbbf8\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://832415134684f5413f9d0f3f5536aa30848690cfe54769f7730a3807438f3bf9\",\"dweb:/ipfs/QmduTiUdtsnyJVMXpdomohEWDVg46aZhnS9uTURu4x1NYt\"]},\"contracts/prebuilts/interface/ILoyaltyCard.sol\":{\"keccak256\":\"0xc06c5e877821127439906a062207c15b94677a154184fd3500bf3d2fd14057b5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3b105a63abfb1dfdcf14003583a3bfada3d880e5c438e36e0c31657b3c5f2b56\",\"dweb:/ipfs/QmZEBwkpcbFNj8tg8dDbc5EuqYtL79dChjqPeQfNCM97VA\"]},\"contracts/prebuilts/loyalty/LoyaltyCard.sol\":{\"keccak256\":\"0x719c2cea03d5620379780a72c66e9d3976e0b108c886c5f4a28283229771ee6c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5b487131be35319a8c985004694047feb552da16c7317109a14dcfb640e25bbb\",\"dweb:/ipfs/QmUVwqZQn2HnZnbsMWJuzVkuqd1XbD7DE3wxNs5KQNn1ga\"]},\"lib/ERC721A-Upgradeable/contracts/IERC721AUpgradeable.sol\":{\"keccak256\":\"0x89447bfc4f1417953e3664234d896b42ebc7d68b3cc27f86f7cdd7addfdd5c1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3916917efc838814adb1e459c968d442d26e304f28af181ff35cffb5ca3ec0be\",\"dweb:/ipfs/QmcVwcrhenj31MCbDn6yvaYsFNkyJmA3isWaJiGhgQeEmQ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x8cc03c5ac17e8a7396e487cda41fc1f1dfdb91db7d528e6da84bee3b6dd7e167\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://607818f1b44548c2d8268176f73cdb290e1faed971b1061930d92698366e2a11\",\"dweb:/ipfs/QmQibMe3r5no95b6q7isGT5R75V8xSofWEDLXzp95b7LgZ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721ReceiverUpgradeable.sol\":{\"keccak256\":\"0xbb2ed8106d94aeae6858e2551a1e7174df73994b77b13ebd120ccaaef80155f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8bc3c6a456dba727d8dd9fd33420febede490abb49a07469f61d2a3ace66a95a\",\"dweb:/ipfs/QmVAWtEVj7K5AbvgJa9Dz22KiDq9eoptCjnVZqsTMtKXyd\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721Upgradeable.sol\":{\"keccak256\":\"0x016298e66a5810253c6c905e61966bb31c8775c3f3517bf946ff56ee31d6c005\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1723de5ae414f210db039b19e6487c19c2d643483c9be7c445cf481a80c199d2\",\"dweb:/ipfs/QmcBLbmPdZsNngYhA1KDadNUqQZoGACytFWuUH74RC4AXC\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/extensions/IERC721MetadataUpgradeable.sol\":{\"keccak256\":\"0x95a471796eb5f030fdc438660bebec121ad5d063763e64d92376ffb4b5ce8b70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ffbd627e6958983d288801acdedbf3491ee0ebf1a430338bce47c96481ce9e3\",\"dweb:/ipfs/QmUM1vpmNgBV34sYf946SthDJNGhwwqjoRggmj4TUUQmdB\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xea5339a7fff0ed42b45be56a88efdd0b2ddde9fa480dc99fef9a6a4c5b776863\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://841619682637df5579b4c396d281d6c55b26f1b1acce1d0ab67bead5e39cf60c\",\"dweb:/ipfs/QmNRtuKp43ZHJwswdyT3GivY4fDMvz3cxBe1FfDthG1JGj\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/ECDSAUpgradeable.sol\":{\"keccak256\":\"0xbf5daf926894541a40a64b43c3746aa1940c5a1b3b8d14a06465eea72a9b90cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fbdea6be4e36fc5406e81560d8f3f073a61c5d3cb5889b7c896ff5981e2128eb\",\"dweb:/ipfs/QmPpkPNkLEjDf4RZYjiypj9BrNyaXrb2U4pE9aq7sTG9km\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/draft-EIP712Upgradeable.sol\":{\"keccak256\":\"0xaf5a96100f421d61693605349511e43221d3c2e47d4b3efa87af2b936e2567fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://371fd95bad4416766089d3e621dee1fd86fece2b266ad3f9443fefe567e24e94\",\"dweb:/ipfs/QmNciwwtGev3Q8uVhnoE5PQUSCDpMp6KtVjiDgnGdqLmWX\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7\",\"dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.12+commit.f00d7308"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ApprovalCallerNotOwnerNorApproved"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ApprovalQueryForNonexistentToken"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ApprovalToCurrentOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ApproveToCaller"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BalanceQueryForZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MintToZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MintZeroQuantity"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OwnerQueryForNonexistentToken"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferCallerNotOwnerNorApproved"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferFromIncorrectOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferToNonERC721ReceiverImplementer"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferToZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "URIQueryForNonexistentToken"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "approved",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_fromTokenId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_toTokenId",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "BatchMetadataUpdate",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "prevURI",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "newURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ContractURIUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newRoyaltyRecipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newRoyaltyBps",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DefaultRoyalty",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "platformFeeRecipient",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "flatFee",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "FlatPlatformFeeUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [],
          "type": "event",
          "name": "MetadataFrozen",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MetadataUpdate",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "prevOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnerUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "platformFeeRecipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "platformFeeBps",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PlatformFeeInfoUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "enum IPlatformFee.PlatformFeeType",
              "name": "feeType",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PlatformFeeTypeUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "PrimarySaleRecipientUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleAdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleGranted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleRevoked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "royaltyRecipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "royaltyBps",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RoyaltyForToken",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "mintedTo",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenIdMinted",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "string",
              "name": "uri",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensMinted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "signer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "mintedTo",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenIdMinted",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "struct ISignatureMintERC721.MintRequest",
              "name": "mintRequest",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "royaltyRecipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "royaltyBps",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "primarySaleRecipient",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "uri",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "quantity",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "uint128",
                  "name": "validityStartTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "validityEndTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensMintedWithSignature",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DEFAULT_ADMIN_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "cancel"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "contractURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "freezeMetadata"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getApproved",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getDefaultRoyaltyInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getFlatPlatformFeeInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getPlatformFeeInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getPlatformFeeType",
          "outputs": [
            {
              "internalType": "enum IPlatformFee.PlatformFeeType",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleAdmin",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleMember",
          "outputs": [
            {
              "internalType": "address",
              "name": "member",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleMemberCount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "count",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoyaltyInfoForToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRole",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRoleWithSwitch",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_defaultAdmin",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_symbol",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_contractURI",
              "type": "string"
            },
            {
              "internalType": "address[]",
              "name": "_trustedForwarders",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "_saleRecipient",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_royaltyRecipient",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "_royaltyBps",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "_platformFeeBps",
              "type": "uint128"
            },
            {
              "internalType": "address",
              "name": "_platformFeeRecipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "forwarder",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isTrustedForwarder",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "_uri",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mintTo",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "tokenIdMinted",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct ISignatureMintERC721.MintRequest",
              "name": "_req",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "royaltyRecipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "royaltyBps",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "primarySaleRecipient",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "uri",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "quantity",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "uint128",
                  "name": "validityStartTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "validityEndTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "_signature",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "mintWithSignature",
          "outputs": [
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes[]",
              "name": "data",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "multicall",
          "outputs": [
            {
              "internalType": "bytes[]",
              "name": "results",
              "type": "bytes[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nextTokenIdToMint",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "primarySaleRecipient",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceRole"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revoke"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeRole"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "salePrice",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "royaltyInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "royaltyAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_uri",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setContractURI"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_royaltyRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_royaltyBps",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDefaultRoyaltyInfo"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_platformFeeRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_flatFee",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setFlatPlatformFeeInfo"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_platformFeeRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_platformFeeBps",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPlatformFeeInfo"
        },
        {
          "inputs": [
            {
              "internalType": "enum IPlatformFee.PlatformFeeType",
              "name": "_feeType",
              "type": "uint8"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPlatformFeeType"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_saleRecipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPrimarySaleRecipient"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_bps",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRoyaltyInfoForToken"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "_uri",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setTokenURI"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalMinted",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "uriFrozen",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct ISignatureMintERC721.MintRequest",
              "name": "_req",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "royaltyRecipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "royaltyBps",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "primarySaleRecipient",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "uri",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "quantity",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "uint128",
                  "name": "validityStartTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "validityEndTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "_signature",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "verify",
          "outputs": [
            {
              "internalType": "bool",
              "name": "success",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "approve(address,uint256)": {
            "details": "See {IERC721-approve}."
          },
          "balanceOf(address)": {
            "details": "See {IERC721-balanceOf}."
          },
          "cancel(uint256)": {
            "details": "Burns `tokenId`. See {ERC721-_burn}."
          },
          "getApproved(uint256)": {
            "details": "See {IERC721-getApproved}."
          },
          "getFlatPlatformFeeInfo()": {
            "details": "Returns the platform fee bps and recipient."
          },
          "getPlatformFeeInfo()": {
            "details": "Returns the platform fee recipient and bps."
          },
          "getPlatformFeeType()": {
            "details": "Returns the platform fee bps and recipient."
          },
          "getRoleAdmin(bytes32)": {
            "details": "See {grantRole} and {revokeRole}.                  To change a role's admin, use {_setRoleAdmin}.",
            "params": {
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "getRoleMember(bytes32,uint256)": {
            "details": "Returns `member` who has `role`, at `index` of role-members list.                  See struct {RoleMembers}, and mapping {roleMembers}",
            "params": {
              "index": "Index in list of current members for the role.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            },
            "returns": {
              "member": " Address of account that has `role`"
            }
          },
          "getRoleMemberCount(bytes32)": {
            "details": "Returns `count` of accounts that have `role`.                  See struct {RoleMembers}, and mapping {roleMembers}",
            "params": {
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            },
            "returns": {
              "count": "  Total number of accounts that have `role`"
            }
          },
          "getRoyaltyInfoForToken(uint256)": {
            "details": "Returns royalty recipient and bps for `_tokenId`.",
            "params": {
              "_tokenId": "The tokenID of the NFT for which to query royalty info."
            }
          },
          "grantRole(bytes32,address)": {
            "details": "Caller must have admin role for the `role`.                  Emits {RoleGranted Event}.",
            "params": {
              "account": "Address of the account to which the role is being granted.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "hasRole(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`.",
            "params": {
              "account": "Address of the account for which the role is being checked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "hasRoleWithSwitch(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`.                  Role restrictions can be swtiched on and off:                      - If address(0) has ROLE, then the ROLE restrictions                        don't apply.                      - If address(0) does not have ROLE, then the ROLE                        restrictions will apply.",
            "params": {
              "account": "Address of the account for which the role is being checked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "initialize(address,string,string,string,address[],address,address,uint128,uint128,address)": {
            "details": "Initializes the contract, like a constructor."
          },
          "isApprovedForAll(address,address)": {
            "details": "See {IERC721-isApprovedForAll}."
          },
          "mintTo(address,string)": {
            "details": "Lets an account with MINTER_ROLE mint an NFT. Always mints 1 NFT."
          },
          "mintWithSignature((address,address,uint256,address,string,uint256,uint256,address,uint128,uint128,bytes32),bytes)": {
            "details": "Mints an NFT according to the provided mint request. Always mints 1 NFT."
          },
          "multicall(bytes[])": {
            "details": "Receives and executes a batch of function calls on this contract.",
            "params": {
              "data": "The bytes data that makes up the batch of function calls to execute."
            },
            "returns": {
              "results": "The bytes data that makes up the result of the batch of function calls executed."
            }
          },
          "name()": {
            "details": "See {IERC721Metadata-name}."
          },
          "nextTokenIdToMint()": {
            "details": "The tokenId of the next NFT that will be minted / lazy minted."
          },
          "ownerOf(uint256)": {
            "details": "See {IERC721-ownerOf}."
          },
          "primarySaleRecipient()": {
            "details": "Returns primary sale recipient address."
          },
          "renounceRole(bytes32,address)": {
            "details": "Caller must have the `role`, with caller being the same as `account`.                  Emits {RoleRevoked Event}.",
            "params": {
              "account": "Address of the account from which the role is being revoked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "revoke(uint256)": {
            "details": "Burns `tokenId`. See {ERC721-_burn}."
          },
          "revokeRole(bytes32,address)": {
            "details": "Caller must have admin role for the `role`.                  Emits {RoleRevoked Event}.",
            "params": {
              "account": "Address of the account from which the role is being revoked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "royaltyInfo(uint256,uint256)": {
            "details": "Returns royalty amount and recipient for `tokenId` and `salePrice`.",
            "params": {
              "salePrice": "Sale price of the token.",
              "tokenId": "The tokenID of the NFT for which to query royalty info."
            },
            "returns": {
              "receiver": "       Address of royalty recipient account.",
              "royaltyAmount": "  Royalty amount calculated at current royaltyBps value."
            }
          },
          "safeTransferFrom(address,address,uint256)": {
            "details": "See {IERC721-safeTransferFrom}."
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            "details": "See {IERC721-safeTransferFrom}."
          },
          "setApprovalForAll(address,bool)": {
            "details": "See {IERC721-setApprovalForAll}."
          },
          "setContractURI(string)": {
            "details": "Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.",
            "params": {
              "_uri": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "setDefaultRoyaltyInfo(address,uint256)": {
            "details": "Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {DefaultRoyalty Event}; See {_setupDefaultRoyaltyInfo}.",
            "params": {
              "_royaltyBps": "Updated royalty bps.",
              "_royaltyRecipient": "Address to be set as default royalty recipient."
            }
          },
          "setOwner(address)": {
            "params": {
              "_newOwner": "The address to set as the new owner of the contract."
            }
          },
          "setPlatformFeeInfo(address,uint256)": {
            "details": "Caller should be authorized to set platform fee info.                  See {_canSetPlatformFeeInfo}.                  Emits {PlatformFeeInfoUpdated Event}; See {_setupPlatformFeeInfo}.",
            "params": {
              "_platformFeeBps": "Updated platformFeeBps.",
              "_platformFeeRecipient": "Address to be set as new platformFeeRecipient."
            }
          },
          "setPrimarySaleRecipient(address)": {
            "details": "Caller should be authorized to set primary sales info.                  See {_canSetPrimarySaleRecipient}.                  Emits {PrimarySaleRecipientUpdated Event}; See {_setupPrimarySaleRecipient}.",
            "params": {
              "_saleRecipient": "Address to be set as new recipient of primary sales."
            }
          },
          "setRoyaltyInfoForToken(uint256,address,uint256)": {
            "details": "Sets royalty info for `_tokenId`. Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {RoyaltyForToken Event}; See {_setupRoyaltyInfoForToken}.",
            "params": {
              "_bps": "Updated royalty bps for the token Id.",
              "_recipient": "Address to be set as royalty recipient for given token Id."
            }
          },
          "supportsInterface(bytes4)": {
            "details": "See ERC 165"
          },
          "symbol()": {
            "details": "See {IERC721Metadata-symbol}."
          },
          "tokenURI(uint256)": {
            "details": "Returns the URI for a given tokenId."
          },
          "totalMinted()": {
            "details": "Returns the total amount of tokens minted in the contract."
          },
          "totalSupply()": {
            "details": "Burned tokens are calculated here, use _totalMinted() if you want to count just minted tokens."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC721-transferFrom}."
          },
          "verify((address,address,uint256,address,string,uint256,uint256,address,uint128,uint128,bytes32),bytes)": {
            "details": "Verifies that a mint request is signed by an account holding MINTER_ROLE (at the time of the function call)."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "contractURI()": {
            "notice": "Returns the contract metadata URI."
          },
          "freezeMetadata()": {
            "notice": "Freezes the metadata URI for a given NFT."
          },
          "getDefaultRoyaltyInfo()": {
            "notice": "Returns the defualt royalty recipient and BPS for this contract's NFTs."
          },
          "getRoleAdmin(bytes32)": {
            "notice": "Returns the admin role that controls the specified role."
          },
          "getRoleMember(bytes32,uint256)": {
            "notice": "Returns the role-member from a list of members for a role,                  at a given index."
          },
          "getRoleMemberCount(bytes32)": {
            "notice": "Returns total number of accounts that have a role."
          },
          "getRoyaltyInfoForToken(uint256)": {
            "notice": "View royalty info for a given token."
          },
          "grantRole(bytes32,address)": {
            "notice": "Grants a role to an account, if not previously granted."
          },
          "hasRole(bytes32,address)": {
            "notice": "Checks whether an account has a particular role."
          },
          "hasRoleWithSwitch(bytes32,address)": {
            "notice": "Checks whether an account has a particular role;                  role restrictions can be swtiched on and off."
          },
          "multicall(bytes[])": {
            "notice": "Receives and executes a batch of function calls on this contract."
          },
          "owner()": {
            "notice": "Returns the owner of the contract."
          },
          "renounceRole(bytes32,address)": {
            "notice": "Revokes role from the account."
          },
          "revokeRole(bytes32,address)": {
            "notice": "Revokes role from an account."
          },
          "royaltyInfo(uint256,uint256)": {
            "notice": "View royalty info for a given token and sale price."
          },
          "setContractURI(string)": {
            "notice": "Lets a contract admin set the URI for contract-level metadata."
          },
          "setDefaultRoyaltyInfo(address,uint256)": {
            "notice": "Updates default royalty recipient and bps."
          },
          "setFlatPlatformFeeInfo(address,uint256)": {
            "notice": "Lets a module admin set a flat fee on primary sales."
          },
          "setOwner(address)": {
            "notice": "Lets an authorized wallet set a new owner for the contract."
          },
          "setPlatformFeeInfo(address,uint256)": {
            "notice": "Updates the platform fee recipient and bps."
          },
          "setPlatformFeeType(uint8)": {
            "notice": "Lets a module admin set platform fee type."
          },
          "setPrimarySaleRecipient(address)": {
            "notice": "Updates primary sale recipient."
          },
          "setRoyaltyInfoForToken(uint256,address,uint256)": {
            "notice": "Updates default royalty recipient and bps for a particular token."
          },
          "setTokenURI(uint256,string)": {
            "notice": "Sets the metadata URI for a given NFT."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=lib/chainlink/",
        "@ds-test/=lib/ds-test/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@std/=lib/forge-std/src/",
        "@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/",
        "ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/",
        "ERC721A/=lib/ERC721A/contracts/",
        "chainlink/=lib/chainlink/",
        "contracts/=contracts/",
        "ds-test/=lib/ds-test/src/",
        "dynamic-contracts/=lib/dynamic-contracts/src/",
        "erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/",
        "erc721a-upgradeable/=lib/ERC721A-Upgradeable/",
        "erc721a/=lib/ERC721A/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/prebuilts/loyalty/LoyaltyCard.sol": "LoyaltyCard"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/eip/ERC721AVirtualApproveUpgradeable.sol": {
        "keccak256": "0xf644dda26330df06c005afaa856130ca1717813da3801c295a8684d1d185dfbf",
        "urls": [
          "bzz-raw://9c3c26d8e93ae85fe8c955cab7b6eb4ab8e624fe3ace08e497cd8d077c0b53eb",
          "dweb:/ipfs/QmPrwqtYsrvW35ZWhWFhzBWQD24EUGoRdd6cGhgTPE7Fag"
        ],
        "license": "MIT"
      },
      "contracts/eip/interface/IERC165.sol": {
        "keccak256": "0x35d0a916f70344a5fcc6c67cb531b6150d2fce43e72a6282385eab02020f2f49",
        "urls": [
          "bzz-raw://75ccd8b9a8b52a93b8097fcb8181b7afb6d72bbe6eaabf434f0481a7a207cc8a",
          "dweb:/ipfs/QmPUZAEE4nwkijcE2amAXAWEVGVG5XaKWGhpgnRwpAf93R"
        ],
        "license": "MIT"
      },
      "contracts/eip/interface/IERC20.sol": {
        "keccak256": "0x5bdd9dd97ba7d9d7c9a2953db287e4d9d7fa93a27a96bc2e72a8da4919b6f7ff",
        "urls": [
          "bzz-raw://45527c265ee5de6bbb3ecfc052e7b1175531a82c2ac16172020aee855f7dd592",
          "dweb:/ipfs/QmVZthqbG916qUQSwv1LE8bB58ZGQ1VfQbLbbRV5urfEYA"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC2981.sol": {
        "keccak256": "0x7886c17b1bc3df885201378fd070d2f00d05fa54f20f7daf10382ec6ff4bd0c9",
        "urls": [
          "bzz-raw://a0802623ba9555f6d186bab5fd139203b643e88ea31d78f4f05cddd4008ac6cf",
          "dweb:/ipfs/QmYbqzSKkKmF2xYeH1zGNewBDNAhukuaZEUVAvYgnKt1He"
        ],
        "license": "Apache 2.0"
      },
      "contracts/eip/interface/IERC4906.sol": {
        "keccak256": "0xa31c36a97c9133c8a451aaec1aa585537cacd71760eb6c5ce402155313efb392",
        "urls": [
          "bzz-raw://f3d6fee0ee338d9d0041e7a094efe2f0cd1d4a05b8b127e4f8928f5d3bac8fc4",
          "dweb:/ipfs/Qmcrgw6xMNvsFBfYh51FmFnRP14EEThSSp4n6F6QeKLhy3"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC721.sol": {
        "keccak256": "0xbd9f2dd131e8f1e4e50b1b116eae917510ab9bf5d4356de37c5daf4cffdfa049",
        "urls": [
          "bzz-raw://8ac3530b317083464271b100de1976ed9179b9e7d5a4fc3d992c61c80676a676",
          "dweb:/ipfs/QmUq1AVzymvp7Y8H1eypGEGU4icjzn5vDSvKMNpXnoaeMT"
        ],
        "license": "MIT"
      },
      "contracts/extension/ContractMetadata.sol": {
        "keccak256": "0xf53ab08ec3057056872c15e35a5610f7a43426bd2829786aed006d527177adfe",
        "urls": [
          "bzz-raw://ee132ae5efdd372152febfcd8fd3a7cb82c7019367d92c886f5096003a79f392",
          "dweb:/ipfs/QmRW1cGWmZAu57huZpTUwsWB8AxUFrBp6g4NqozXpbWsR6"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Multicall.sol": {
        "keccak256": "0x737a71c74307fa360863550d64bbaef599bbcb47829b19c3743ed1ff22b9af55",
        "urls": [
          "bzz-raw://7e82a79ee183dffa3ec01faac0907e04d72a185e55b7c24bff8e8e952b05f4c2",
          "dweb:/ipfs/QmQ9neZqpcgJtGgm84FBzMqFntZ1Sk1KFTWhjCMq8vnKDg"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/NFTMetadata.sol": {
        "keccak256": "0x03ae860f70403ad02737ef79abf0501d1cb532923452eaf8360f62b02d79ef74",
        "urls": [
          "bzz-raw://73b1747bddf59114617b6cfa09cf31abd18d829e0f9c6564e07fb463863bc548",
          "dweb:/ipfs/QmPJaQ8AKWf6f76Du2XD3zsqLZxotRzXR7Lvx5Xu6G9gWs"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Ownable.sol": {
        "keccak256": "0x45447691686861237d5e1acb9d723d861a3fb3d561335e4f385d1547f25e27a5",
        "urls": [
          "bzz-raw://5142293e36c736f744c73aaecab5f7be8e2d5ac70acc67851e0cea5171fd6782",
          "dweb:/ipfs/QmVJT5B84o5vFc5E2VteZdBhrT1HMutc7Ax72UKD1aZatJ"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Permissions.sol": {
        "keccak256": "0xe7e18181f2d2c8bae4afc7ee69ce1d547e7aa583182e8e0853ca33c49a28c04d",
        "urls": [
          "bzz-raw://75d5f5a9356c290e398a5dd05914b59c3d09e6fedde2da80b6f1012aedf323f8",
          "dweb:/ipfs/QmNrrf8Uyq33XBsE2NqVTW6HVX3XixFTjCG8KGbGxdEE84"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/PermissionsEnumerable.sol": {
        "keccak256": "0x434a6ffc16ddc437ffb37b8fbe4c9696385252f15a617c4606b8c5e10561caf3",
        "urls": [
          "bzz-raw://1a9d4dac4bf2ae3c3c086af1956dc25e8b149b0914125e660cc0648791c247cb",
          "dweb:/ipfs/QmTMEggPdBea1JCamsShwRf3en2FgVTXNTPJ2isFtBk4Kk"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/PlatformFee.sol": {
        "keccak256": "0x8db4537648987b88dce356120fc96c48cffe53eaa5988b9a7e8aa023f4258163",
        "urls": [
          "bzz-raw://9e30009e63be23e60e92bf25582143596e3f01b2a1f7e121664559119a9f5890",
          "dweb:/ipfs/Qma3bi4NfCNZaukacNQMQ3j5kXn6Ym4mDa57Tqc26ssahE"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/PrimarySale.sol": {
        "keccak256": "0x9ef1ad82fadf988a07f4034b92ccdb3281682693e41759a79042814d36095f42",
        "urls": [
          "bzz-raw://0d962b48453e1f50b808193135c2f14265324fa8b75fe3b405ef7836e38921f7",
          "dweb:/ipfs/QmZDLNsZQj9kNcb15nBuWRpPwDdDvJS2gtFwqEs2Lwxb1N"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Royalty.sol": {
        "keccak256": "0xcc3110048db91d4ecd05afcc6721fce6ade5eee8c2da0af8955e86ece8754350",
        "urls": [
          "bzz-raw://a1e830502fda46ab7618b65e155341d42bf007717edb27711b09bf6250ce1485",
          "dweb:/ipfs/QmY5fKpg7aCubR7fENu9htRFspU8hpSo7CVUNJxQdh8kv1"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/SignatureMintERC721Upgradeable.sol": {
        "keccak256": "0x1f9f0cdf37800f14e331b01721130d503d55e60ff86cd3faae15d75e9cb4c8f3",
        "urls": [
          "bzz-raw://7a1dce41c6e7522b39c8648742e70867f6ef9ebbadf01249f4d47f850af653a3",
          "dweb:/ipfs/QmX3znQxZSiA9GFvGkCeEHPrA1dy1pAo6tFyAoa2GtKAKM"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IContractMetadata.sol": {
        "keccak256": "0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2",
        "urls": [
          "bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a",
          "dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IMulticall.sol": {
        "keccak256": "0xe2bbd37b8fdb9cc8b933e598512a068ebb214b3f5abc2bc634916def55be4ef3",
        "urls": [
          "bzz-raw://012352099c262348ac755a53b082af520babc6c66dc5f1251fc23609728340ca",
          "dweb:/ipfs/QmcXEgzQ53jdJX5ZNy8zivvUjDq7J8WTnR1yAiwTpkQ2ar"
        ],
        "license": "MIT"
      },
      "contracts/extension/interface/INFTMetadata.sol": {
        "keccak256": "0x5c3ebcaa3bb1a7f685d620acb0a0383239a326e719d3f9667790a71750391261",
        "urls": [
          "bzz-raw://2f4f702934d117edc04cb31bd212aea52341ee05ce0467e758dd9d96e805ad5a",
          "dweb:/ipfs/QmRtHuDx9bZku2qT4HS5CWLzYmyg2q8kFcc4KFWr4U1fNU"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IOwnable.sol": {
        "keccak256": "0xd659a64da6264fdd50ee379be032fea4917eba4fadfd6d366107fb17e46907f3",
        "urls": [
          "bzz-raw://c15940c4a3d229f4fdd1226fe297a58fde10b07b86a34de1ed11a8802dd5dea9",
          "dweb:/ipfs/QmS8p8CxWiahLkYsCWNhFjCnmQzuc4ck3kjYYuCFj8LsmC"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPermissions.sol": {
        "keccak256": "0xc0cd1f87bac474a06f85e2b341b9b57662aee957fc24180d42c872481c2f2ae3",
        "urls": [
          "bzz-raw://7dec3eed451d63867531d693f0be3279fa2c9aef3130f0826c3520c06820fa5d",
          "dweb:/ipfs/QmTYANrcPdd9SCe99DWsKJ19evNRQKQGZeoS1Keew4M2cS"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPermissionsEnumerable.sol": {
        "keccak256": "0x2e742c18a4481bad41d56424cd16c52def2fb415f69e5fb5f67d8d979300ff95",
        "urls": [
          "bzz-raw://d9be33bb865e3e82aca540a3e38cbc2bf2e431f9d1bf39c50d6c757e7b7bf3ee",
          "dweb:/ipfs/Qmdad1Xqj5SQ44Bk4bwD2uA36XnGHtqnVYSomKZQvnUBVG"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPlatformFee.sol": {
        "keccak256": "0x8c23c2a223a3b94ccce125b418e5fabfb631695d927e336512bc8dca61bbc736",
        "urls": [
          "bzz-raw://86dd8c93e75cb3a44d64c873154ee3857b604d1b07a9e52c120870172c2e9a34",
          "dweb:/ipfs/QmWXxEi7ygoRjN8yWYfVGbfhuwVg8bkLoHNzr3xMNa1VRv"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPrimarySale.sol": {
        "keccak256": "0x77c89cb8d9b781b0a08b1fa81c95a0dd5c19200b2fb0dc884c1084b931624004",
        "urls": [
          "bzz-raw://a37b042af11a08ba5518dadf72c91745d1b5f42b1c20ea5282492bfd18f53869",
          "dweb:/ipfs/QmWEYYG5VqR8MRfr2rydDV98GLKmaJtCC8G1W7MzJ9qFnF"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IRoyalty.sol": {
        "keccak256": "0x13912ba3970fdedd1eb5bf8bf0bcc5e64e43f2cadb8d22c3d6fb695fd9877385",
        "urls": [
          "bzz-raw://b84d19df7aa9cb7460cca50ab050cdcfffb62f53c246daf35df276cad7088e9b",
          "dweb:/ipfs/QmNPPHJuiW1KCcq3aXELnA4X8NaSPM9S2vHbsBEEDYiwP8"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/ISignatureMintERC721.sol": {
        "keccak256": "0xc1142e0742252123cff0b0c45ede1e70d43cf01d677abc32d4a16064d5161822",
        "urls": [
          "bzz-raw://b8f0a32af882458e1c2b040ebe1bc399bdd765e8a29c35fb881494d414c95cb2",
          "dweb:/ipfs/QmR4Z1N29sPXstFaQrubGjNiQhf26VztyVFHjpDjFLfFAi"
        ],
        "license": "Apache-2.0"
      },
      "contracts/external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol": {
        "keccak256": "0xdbc96b1264d2e2bd82cb7e697056929325e09d1641321145a8cec53b22b9567d",
        "urls": [
          "bzz-raw://7ca7ccf947d21d98878ec18e941b750cd2ae7c563e6d2a707da4f806038d67c8",
          "dweb:/ipfs/QmYVLYUPMD3b95vKrS5yjxcz2MDNNzkWJY9xc9bc9oTZdh"
        ],
        "license": "MIT"
      },
      "contracts/external-deps/openzeppelin/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xa6149938a7c7c8af4244743aeaafcfb1fd9ce15ad45de58fa9576f0ed5599b2c",
        "urls": [
          "bzz-raw://839aa4ea6ef6d1972881bfd7420a9ddcd2f37139e3f0bf25310f93f48410702d",
          "dweb:/ipfs/QmSH65kStfbgMbfjFdfJqV412omPy6nB1JMvMt9q7SsytW"
        ],
        "license": "MIT"
      },
      "contracts/infra/interface/IWETH.sol": {
        "keccak256": "0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b",
        "urls": [
          "bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1",
          "dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/CurrencyTransferLib.sol": {
        "keccak256": "0x4a30bc9a8cd6cc8b855621fb1a651e2c3a1639b0ad153f1139c3ba463605672d",
        "urls": [
          "bzz-raw://417cc64ec6393f3cc89981ca9c32bbcc444a5f91363d69f84dd8ace888b2b859",
          "dweb:/ipfs/QmZeaQsYGx4VNoP8e1fcwC87PwvyakheWYeuwEwhFSJnvB"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/TWAddress.sol": {
        "keccak256": "0x460f032cf3bf43d586e126ab2ec8be4335767f497ccb699741546a1cfba94a7e",
        "urls": [
          "bzz-raw://28fcbf6dde6c2eeb9864f6ec6f21dcc81ec426877debf4b912f2f3bc5b0fc91e",
          "dweb:/ipfs/QmS1SHrZDfefX8EE7DdvszTY6VPCHydf4HM7NKJ2gP72e6"
        ],
        "license": "Apache 2.0"
      },
      "contracts/lib/TWStrings.sol": {
        "keccak256": "0xef7e9954d888f99baffc10db1d9bf6a2beb66c842d81dea90352ddded22cbbf8",
        "urls": [
          "bzz-raw://832415134684f5413f9d0f3f5536aa30848690cfe54769f7730a3807438f3bf9",
          "dweb:/ipfs/QmduTiUdtsnyJVMXpdomohEWDVg46aZhnS9uTURu4x1NYt"
        ],
        "license": "Apache 2.0"
      },
      "contracts/prebuilts/interface/ILoyaltyCard.sol": {
        "keccak256": "0xc06c5e877821127439906a062207c15b94677a154184fd3500bf3d2fd14057b5",
        "urls": [
          "bzz-raw://3b105a63abfb1dfdcf14003583a3bfada3d880e5c438e36e0c31657b3c5f2b56",
          "dweb:/ipfs/QmZEBwkpcbFNj8tg8dDbc5EuqYtL79dChjqPeQfNCM97VA"
        ],
        "license": "Apache-2.0"
      },
      "contracts/prebuilts/loyalty/LoyaltyCard.sol": {
        "keccak256": "0x719c2cea03d5620379780a72c66e9d3976e0b108c886c5f4a28283229771ee6c",
        "urls": [
          "bzz-raw://5b487131be35319a8c985004694047feb552da16c7317109a14dcfb640e25bbb",
          "dweb:/ipfs/QmUVwqZQn2HnZnbsMWJuzVkuqd1XbD7DE3wxNs5KQNn1ga"
        ],
        "license": "Apache-2.0"
      },
      "lib/ERC721A-Upgradeable/contracts/IERC721AUpgradeable.sol": {
        "keccak256": "0x89447bfc4f1417953e3664234d896b42ebc7d68b3cc27f86f7cdd7addfdd5c1c",
        "urls": [
          "bzz-raw://3916917efc838814adb1e459c968d442d26e304f28af181ff35cffb5ca3ec0be",
          "dweb:/ipfs/QmcVwcrhenj31MCbDn6yvaYsFNkyJmA3isWaJiGhgQeEmQ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e",
        "urls": [
          "bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497",
          "dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol": {
        "keccak256": "0x8cc03c5ac17e8a7396e487cda41fc1f1dfdb91db7d528e6da84bee3b6dd7e167",
        "urls": [
          "bzz-raw://607818f1b44548c2d8268176f73cdb290e1faed971b1061930d92698366e2a11",
          "dweb:/ipfs/QmQibMe3r5no95b6q7isGT5R75V8xSofWEDLXzp95b7LgZ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721ReceiverUpgradeable.sol": {
        "keccak256": "0xbb2ed8106d94aeae6858e2551a1e7174df73994b77b13ebd120ccaaef80155f5",
        "urls": [
          "bzz-raw://8bc3c6a456dba727d8dd9fd33420febede490abb49a07469f61d2a3ace66a95a",
          "dweb:/ipfs/QmVAWtEVj7K5AbvgJa9Dz22KiDq9eoptCjnVZqsTMtKXyd"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721Upgradeable.sol": {
        "keccak256": "0x016298e66a5810253c6c905e61966bb31c8775c3f3517bf946ff56ee31d6c005",
        "urls": [
          "bzz-raw://1723de5ae414f210db039b19e6487c19c2d643483c9be7c445cf481a80c199d2",
          "dweb:/ipfs/QmcBLbmPdZsNngYhA1KDadNUqQZoGACytFWuUH74RC4AXC"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/extensions/IERC721MetadataUpgradeable.sol": {
        "keccak256": "0x95a471796eb5f030fdc438660bebec121ad5d063763e64d92376ffb4b5ce8b70",
        "urls": [
          "bzz-raw://4ffbd627e6958983d288801acdedbf3491ee0ebf1a430338bce47c96481ce9e3",
          "dweb:/ipfs/QmUM1vpmNgBV34sYf946SthDJNGhwwqjoRggmj4TUUQmdB"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3",
        "urls": [
          "bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4",
          "dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol": {
        "keccak256": "0xea5339a7fff0ed42b45be56a88efdd0b2ddde9fa480dc99fef9a6a4c5b776863",
        "urls": [
          "bzz-raw://841619682637df5579b4c396d281d6c55b26f1b1acce1d0ab67bead5e39cf60c",
          "dweb:/ipfs/QmNRtuKp43ZHJwswdyT3GivY4fDMvz3cxBe1FfDthG1JGj"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/ECDSAUpgradeable.sol": {
        "keccak256": "0xbf5daf926894541a40a64b43c3746aa1940c5a1b3b8d14a06465eea72a9b90cc",
        "urls": [
          "bzz-raw://fbdea6be4e36fc5406e81560d8f3f073a61c5d3cb5889b7c896ff5981e2128eb",
          "dweb:/ipfs/QmPpkPNkLEjDf4RZYjiypj9BrNyaXrb2U4pE9aq7sTG9km"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/draft-EIP712Upgradeable.sol": {
        "keccak256": "0xaf5a96100f421d61693605349511e43221d3c2e47d4b3efa87af2b936e2567fc",
        "urls": [
          "bzz-raw://371fd95bad4416766089d3e621dee1fd86fece2b266ad3f9443fefe567e24e94",
          "dweb:/ipfs/QmNciwwtGev3Q8uVhnoE5PQUSCDpMp6KtVjiDgnGdqLmWX"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol": {
        "keccak256": "0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a",
        "urls": [
          "bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7",
          "dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol": {
        "keccak256": "0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09",
        "urls": [
          "bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758",
          "dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/prebuilts/loyalty/LoyaltyCard.sol",
    "id": 77307,
    "exportedSymbols": {
      "AddressUpgradeable": [
        155768
      ],
      "ContextUpgradeable": [
        156044
      ],
      "ContractMetadata": [
        17526
      ],
      "CurrencyTransferLib": [
        63578
      ],
      "ECDSAUpgradeable": [
        157055
      ],
      "EIP712Upgradeable": [
        157205
      ],
      "ERC165Upgradeable": [
        157249
      ],
      "ERC2771ContextUpgradeable": [
        45607
      ],
      "ERC721AUpgradeable": [
        13623
      ],
      "IContractMetadata": [
        32437
      ],
      "IERC165": [
        13829
      ],
      "IERC165Upgradeable": [
        157261
      ],
      "IERC20": [
        13899
      ],
      "IERC2981": [
        13973
      ],
      "IERC4906": [
        13992
      ],
      "IERC721": [
        14105
      ],
      "IERC721AUpgradeable": [
        102239
      ],
      "IERC721MetadataUpgradeable": [
        155478
      ],
      "IERC721ReceiverUpgradeable": [
        154946
      ],
      "IERC721Upgradeable": [
        155062
      ],
      "ILoyaltyCard": [
        75213
      ],
      "IMulticall": [
        32926
      ],
      "INFTMetadata": [
        32947
      ],
      "IOwnable": [
        33183
      ],
      "IPermissions": [
        33256
      ],
      "IPermissionsEnumerable": [
        33281
      ],
      "IPlatformFee": [
        33324
      ],
      "IPrimarySale": [
        33345
      ],
      "IRoyalty": [
        33409
      ],
      "ISignatureMintERC721": [
        33903
      ],
      "IWETH": [
        54557
      ],
      "Initializable": [
        150199
      ],
      "LoyaltyCard": [
        77306
      ],
      "Multicall": [
        20595
      ],
      "NFTMetadata": [
        20704
      ],
      "Ownable": [
        21153
      ],
      "Permissions": [
        21500
      ],
      "PermissionsEnumerable": [
        21799
      ],
      "PlatformFee": [
        22005
      ],
      "PrimarySale": [
        22067
      ],
      "ReentrancyGuardUpgradeable": [
        150385
      ],
      "Royalty": [
        22395
      ],
      "SafeERC20": [
        48369
      ],
      "SignatureMintERC721Upgradeable": [
        24157
      ],
      "StringsUpgradeable": [
        156453
      ],
      "TWAddress": [
        64152
      ],
      "TWStrings": [
        64852
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:12647:353",
    "nodes": [
      {
        "id": 76556,
        "nodeType": "PragmaDirective",
        "src": "39:24:353",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".11"
        ]
      },
      {
        "id": 76557,
        "nodeType": "ImportDirective",
        "src": "740:39:353",
        "nodes": [],
        "absolutePath": "contracts/prebuilts/interface/ILoyaltyCard.sol",
        "file": "../interface/ILoyaltyCard.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 77307,
        "sourceUnit": 75214,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 76558,
        "nodeType": "ImportDirective",
        "src": "789:56:353",
        "nodes": [],
        "absolutePath": "contracts/eip/ERC721AVirtualApproveUpgradeable.sol",
        "file": "../../eip/ERC721AVirtualApproveUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 77307,
        "sourceUnit": 13624,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 76559,
        "nodeType": "ImportDirective",
        "src": "854:43:353",
        "nodes": [],
        "absolutePath": "contracts/lib/CurrencyTransferLib.sol",
        "file": "../../lib/CurrencyTransferLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 77307,
        "sourceUnit": 63579,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 76560,
        "nodeType": "ImportDirective",
        "src": "913:41:353",
        "nodes": [],
        "absolutePath": "contracts/extension/NFTMetadata.sol",
        "file": "../../extension/NFTMetadata.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 77307,
        "sourceUnit": 20705,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 76561,
        "nodeType": "ImportDirective",
        "src": "955:60:353",
        "nodes": [],
        "absolutePath": "contracts/extension/SignatureMintERC721Upgradeable.sol",
        "file": "../../extension/SignatureMintERC721Upgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 77307,
        "sourceUnit": 24158,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 76562,
        "nodeType": "ImportDirective",
        "src": "1016:46:353",
        "nodes": [],
        "absolutePath": "contracts/extension/ContractMetadata.sol",
        "file": "../../extension/ContractMetadata.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 77307,
        "sourceUnit": 17527,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 76563,
        "nodeType": "ImportDirective",
        "src": "1063:37:353",
        "nodes": [],
        "absolutePath": "contracts/extension/Ownable.sol",
        "file": "../../extension/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 77307,
        "sourceUnit": 21154,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 76564,
        "nodeType": "ImportDirective",
        "src": "1101:37:353",
        "nodes": [],
        "absolutePath": "contracts/extension/Royalty.sol",
        "file": "../../extension/Royalty.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 77307,
        "sourceUnit": 22396,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 76565,
        "nodeType": "ImportDirective",
        "src": "1139:41:353",
        "nodes": [],
        "absolutePath": "contracts/extension/PrimarySale.sol",
        "file": "../../extension/PrimarySale.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 77307,
        "sourceUnit": 22068,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 76566,
        "nodeType": "ImportDirective",
        "src": "1181:41:353",
        "nodes": [],
        "absolutePath": "contracts/extension/PlatformFee.sol",
        "file": "../../extension/PlatformFee.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 77307,
        "sourceUnit": 22006,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 76567,
        "nodeType": "ImportDirective",
        "src": "1223:39:353",
        "nodes": [],
        "absolutePath": "contracts/extension/Multicall.sol",
        "file": "../../extension/Multicall.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 77307,
        "sourceUnit": 20596,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 76568,
        "nodeType": "ImportDirective",
        "src": "1263:51:353",
        "nodes": [],
        "absolutePath": "contracts/extension/PermissionsEnumerable.sol",
        "file": "../../extension/PermissionsEnumerable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 77307,
        "sourceUnit": 21800,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 76569,
        "nodeType": "ImportDirective",
        "src": "1315:79:353",
        "nodes": [],
        "absolutePath": "contracts/external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol",
        "file": "../../external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 77307,
        "sourceUnit": 45608,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 76570,
        "nodeType": "ImportDirective",
        "src": "1395:85:353",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 77307,
        "sourceUnit": 150386,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 77306,
        "nodeType": "ContractDefinition",
        "src": "2021:10664:353",
        "nodes": [
          {
            "id": 76603,
            "nodeType": "VariableDeclaration",
            "src": "2634:67:353",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 76598,
              "nodeType": "StructuredDocumentation",
              "src": "2520:109:353",
              "text": "@dev Only TRANSFER_ROLE holders can have tokens transferred from or to them, during restricted transfers."
            },
            "mutability": "constant",
            "name": "TRANSFER_ROLE",
            "nameLocation": "2659:13:353",
            "scope": 77306,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 76599,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2634:7:353",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "5452414e534645525f524f4c45",
                  "id": 76601,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2685:15:353",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c",
                    "typeString": "literal_string \"TRANSFER_ROLE\""
                  },
                  "value": "TRANSFER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c",
                    "typeString": "literal_string \"TRANSFER_ROLE\""
                  }
                ],
                "id": 76600,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "2675:9:353",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 76602,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2675:26:353",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "id": 76609,
            "nodeType": "VariableDeclaration",
            "src": "2777:63:353",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 76604,
              "nodeType": "StructuredDocumentation",
              "src": "2707:65:353",
              "text": "@dev Only MINTER_ROLE holders can sign off on `MintRequest`s."
            },
            "mutability": "constant",
            "name": "MINTER_ROLE",
            "nameLocation": "2802:11:353",
            "scope": 77306,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 76605,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2777:7:353",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "4d494e5445525f524f4c45",
                  "id": 76607,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2826:13:353",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                    "typeString": "literal_string \"MINTER_ROLE\""
                  },
                  "value": "MINTER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                    "typeString": "literal_string \"MINTER_ROLE\""
                  }
                ],
                "id": 76606,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "2816:9:353",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 76608,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2816:24:353",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "id": 76615,
            "nodeType": "VariableDeclaration",
            "src": "2911:67:353",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 76610,
              "nodeType": "StructuredDocumentation",
              "src": "2846:60:353",
              "text": "@dev Only METADATA_ROLE holders can update NFT metadata."
            },
            "mutability": "constant",
            "name": "METADATA_ROLE",
            "nameLocation": "2936:13:353",
            "scope": 77306,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 76611,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2911:7:353",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "4d455441444154415f524f4c45",
                  "id": 76613,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2962:15:353",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_6bd6b5318a46e5fff572d5e4258a20774aab40cc35ac7680654b9081fcc82f80",
                    "typeString": "literal_string \"METADATA_ROLE\""
                  },
                  "value": "METADATA_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_6bd6b5318a46e5fff572d5e4258a20774aab40cc35ac7680654b9081fcc82f80",
                    "typeString": "literal_string \"METADATA_ROLE\""
                  }
                ],
                "id": 76612,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "2952:9:353",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 76614,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2952:26:353",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "id": 76621,
            "nodeType": "VariableDeclaration",
            "src": "3049:63:353",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 76616,
              "nodeType": "StructuredDocumentation",
              "src": "2984:60:353",
              "text": "@dev Only REVOKE_ROLE holders can revoke a loyalty card."
            },
            "mutability": "constant",
            "name": "REVOKE_ROLE",
            "nameLocation": "3074:11:353",
            "scope": 77306,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 76617,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "3049:7:353",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "5245564f4b455f524f4c45",
                  "id": 76619,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3098:13:353",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_5297e68f3a27f04914f2c6db0ad63b5e5c8173cebcc1a5341df045cf6dad7adc",
                    "typeString": "literal_string \"REVOKE_ROLE\""
                  },
                  "value": "REVOKE_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_5297e68f3a27f04914f2c6db0ad63b5e5c8173cebcc1a5341df045cf6dad7adc",
                    "typeString": "literal_string \"REVOKE_ROLE\""
                  }
                ],
                "id": 76618,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "3088:9:353",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 76620,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "3088:24:353",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "id": 76625,
            "nodeType": "VariableDeclaration",
            "src": "3164:41:353",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 76622,
              "nodeType": "StructuredDocumentation",
              "src": "3119:40:353",
              "text": "@dev Max bps in the thirdweb system."
            },
            "mutability": "constant",
            "name": "MAX_BPS",
            "nameLocation": "3189:7:353",
            "scope": 77306,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 76623,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3164:7:353",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31305f303030",
              "id": 76624,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "3199:6:353",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000_by_1",
                "typeString": "int_const 10000"
              },
              "value": "10_000"
            },
            "visibility": "private"
          },
          {
            "id": 76631,
            "nodeType": "FunctionDefinition",
            "src": "3402:28:353",
            "nodes": [],
            "body": {
              "id": 76630,
              "nodeType": "Block",
              "src": "3428:2:353",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "id": 76628,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 76627,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 150119,
                  "src": "3416:11:353"
                },
                "nodeType": "ModifierInvocation",
                "src": "3416:11:353"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 76626,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3413:2:353"
            },
            "returnParameters": {
              "id": 76629,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3428:0:353"
            },
            "scope": 77306,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 76731,
            "nodeType": "FunctionDefinition",
            "src": "3495:1256:353",
            "nodes": [],
            "body": {
              "id": 76730,
              "nodeType": "Block",
              "src": "3882:869:353",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 76659,
                        "name": "_trustedForwarders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76643,
                        "src": "3989:18:353",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      ],
                      "id": 76658,
                      "name": "__ERC2771Context_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45514,
                      "src": "3967:21:353",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address[] memory)"
                      }
                    },
                    "id": 76660,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3967:41:353",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76661,
                  "nodeType": "ExpressionStatement",
                  "src": "3967:41:353"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 76663,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76636,
                        "src": "4033:5:353",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 76664,
                        "name": "_symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76638,
                        "src": "4040:7:353",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 76662,
                      "name": "__ERC721A_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12291,
                      "src": "4018:14:353",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 76665,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4018:30:353",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76666,
                  "nodeType": "ExpressionStatement",
                  "src": "4018:30:353"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 76667,
                      "name": "__SignatureMintERC721_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23968,
                      "src": "4058:26:353",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 76668,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4058:28:353",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76669,
                  "nodeType": "ExpressionStatement",
                  "src": "4058:28:353"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 76670,
                      "name": "__ReentrancyGuard_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 150349,
                      "src": "4096:22:353",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 76671,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4096:24:353",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76672,
                  "nodeType": "ExpressionStatement",
                  "src": "4096:24:353"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 76674,
                        "name": "_contractURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76640,
                        "src": "4149:12:353",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 76673,
                      "name": "_setupContractURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17519,
                      "src": "4131:17:353",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 76675,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4131:31:353",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76676,
                  "nodeType": "ExpressionStatement",
                  "src": "4131:31:353"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 76678,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76634,
                        "src": "4184:13:353",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 76677,
                      "name": "_setupOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21146,
                      "src": "4172:11:353",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 76679,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4172:26:353",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76680,
                  "nodeType": "ExpressionStatement",
                  "src": "4172:26:353"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 76682,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21176,
                        "src": "4220:18:353",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 76683,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76634,
                        "src": "4240:13:353",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 76681,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        21723
                      ],
                      "referencedDeclaration": 21723,
                      "src": "4209:10:353",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 76684,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4209:45:353",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76685,
                  "nodeType": "ExpressionStatement",
                  "src": "4209:45:353"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 76687,
                        "name": "MINTER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76609,
                        "src": "4275:11:353",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 76688,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76634,
                        "src": "4288:13:353",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 76686,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        21723
                      ],
                      "referencedDeclaration": 21723,
                      "src": "4264:10:353",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 76689,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4264:38:353",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76690,
                  "nodeType": "ExpressionStatement",
                  "src": "4264:38:353"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 76692,
                        "name": "TRANSFER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76603,
                        "src": "4323:13:353",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 76693,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76634,
                        "src": "4338:13:353",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 76691,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        21723
                      ],
                      "referencedDeclaration": 21723,
                      "src": "4312:10:353",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 76694,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4312:40:353",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76695,
                  "nodeType": "ExpressionStatement",
                  "src": "4312:40:353"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 76697,
                        "name": "METADATA_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76615,
                        "src": "4374:13:353",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 76698,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76634,
                        "src": "4389:13:353",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 76696,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        21723
                      ],
                      "referencedDeclaration": 21723,
                      "src": "4363:10:353",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 76699,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4363:40:353",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76700,
                  "nodeType": "ExpressionStatement",
                  "src": "4363:40:353"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 76702,
                        "name": "METADATA_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76615,
                        "src": "4427:13:353",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 76703,
                        "name": "METADATA_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76615,
                        "src": "4442:13:353",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 76701,
                      "name": "_setRoleAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21360,
                      "src": "4413:13:353",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32,bytes32)"
                      }
                    },
                    "id": 76704,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4413:43:353",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76705,
                  "nodeType": "ExpressionStatement",
                  "src": "4413:43:353"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 76707,
                        "name": "REVOKE_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76621,
                        "src": "4478:11:353",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 76708,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76634,
                        "src": "4491:13:353",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 76706,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        21723
                      ],
                      "referencedDeclaration": 21723,
                      "src": "4467:10:353",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 76709,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4467:38:353",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76710,
                  "nodeType": "ExpressionStatement",
                  "src": "4467:38:353"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 76712,
                        "name": "REVOKE_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76621,
                        "src": "4529:11:353",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 76713,
                        "name": "REVOKE_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76621,
                        "src": "4542:11:353",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 76711,
                      "name": "_setRoleAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21360,
                      "src": "4515:13:353",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32,bytes32)"
                      }
                    },
                    "id": 76714,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4515:39:353",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76715,
                  "nodeType": "ExpressionStatement",
                  "src": "4515:39:353"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 76717,
                        "name": "_platformFeeRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76653,
                        "src": "4587:21:353",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 76718,
                        "name": "_platformFeeBps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76651,
                        "src": "4610:15:353",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 76716,
                      "name": "_setupPlatformFeeInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21916,
                      "src": "4565:21:353",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 76719,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4565:61:353",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76720,
                  "nodeType": "ExpressionStatement",
                  "src": "4565:61:353"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 76722,
                        "name": "_royaltyRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76647,
                        "src": "4661:17:353",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 76723,
                        "name": "_royaltyBps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76649,
                        "src": "4680:11:353",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 76721,
                      "name": "_setupDefaultRoyaltyInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22326,
                      "src": "4636:24:353",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 76724,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4636:56:353",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76725,
                  "nodeType": "ExpressionStatement",
                  "src": "4636:56:353"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 76727,
                        "name": "_saleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76645,
                        "src": "4729:14:353",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 76726,
                      "name": "_setupPrimarySaleRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22060,
                      "src": "4702:26:353",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 76728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4702:42:353",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76729,
                  "nodeType": "ExpressionStatement",
                  "src": "4702:42:353"
                }
              ]
            },
            "documentation": {
              "id": 76632,
              "nodeType": "StructuredDocumentation",
              "src": "3436:54:353",
              "text": "@dev Initializes the contract, like a constructor."
            },
            "functionSelector": "e1591634",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 76656,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 76655,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 150119,
                  "src": "3870:11:353"
                },
                "nodeType": "ModifierInvocation",
                "src": "3870:11:353"
              }
            ],
            "name": "initialize",
            "nameLocation": "3504:10:353",
            "parameters": {
              "id": 76654,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76634,
                  "mutability": "mutable",
                  "name": "_defaultAdmin",
                  "nameLocation": "3532:13:353",
                  "nodeType": "VariableDeclaration",
                  "scope": 76731,
                  "src": "3524:21:353",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 76633,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3524:7:353",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 76636,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "3569:5:353",
                  "nodeType": "VariableDeclaration",
                  "scope": 76731,
                  "src": "3555:19:353",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 76635,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3555:6:353",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 76638,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "3598:7:353",
                  "nodeType": "VariableDeclaration",
                  "scope": 76731,
                  "src": "3584:21:353",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 76637,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3584:6:353",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 76640,
                  "mutability": "mutable",
                  "name": "_contractURI",
                  "nameLocation": "3629:12:353",
                  "nodeType": "VariableDeclaration",
                  "scope": 76731,
                  "src": "3615:26:353",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 76639,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3615:6:353",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 76643,
                  "mutability": "mutable",
                  "name": "_trustedForwarders",
                  "nameLocation": "3668:18:353",
                  "nodeType": "VariableDeclaration",
                  "scope": 76731,
                  "src": "3651:35:353",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 76641,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3651:7:353",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 76642,
                    "nodeType": "ArrayTypeName",
                    "src": "3651:9:353",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 76645,
                  "mutability": "mutable",
                  "name": "_saleRecipient",
                  "nameLocation": "3704:14:353",
                  "nodeType": "VariableDeclaration",
                  "scope": 76731,
                  "src": "3696:22:353",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 76644,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3696:7:353",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 76647,
                  "mutability": "mutable",
                  "name": "_royaltyRecipient",
                  "nameLocation": "3736:17:353",
                  "nodeType": "VariableDeclaration",
                  "scope": 76731,
                  "src": "3728:25:353",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 76646,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3728:7:353",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 76649,
                  "mutability": "mutable",
                  "name": "_royaltyBps",
                  "nameLocation": "3771:11:353",
                  "nodeType": "VariableDeclaration",
                  "scope": 76731,
                  "src": "3763:19:353",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 76648,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "3763:7:353",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 76651,
                  "mutability": "mutable",
                  "name": "_platformFeeBps",
                  "nameLocation": "3800:15:353",
                  "nodeType": "VariableDeclaration",
                  "scope": 76731,
                  "src": "3792:23:353",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 76650,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "3792:7:353",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 76653,
                  "mutability": "mutable",
                  "name": "_platformFeeRecipient",
                  "nameLocation": "3833:21:353",
                  "nodeType": "VariableDeclaration",
                  "scope": 76731,
                  "src": "3825:29:353",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 76652,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3825:7:353",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3514:346:353"
            },
            "returnParameters": {
              "id": 76657,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3882:0:353"
            },
            "scope": 77306,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 76745,
            "nodeType": "FunctionDefinition",
            "src": "4998:127:353",
            "nodes": [],
            "body": {
              "id": 76744,
              "nodeType": "Block",
              "src": "5079:46:353",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 76741,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76734,
                        "src": "5109:8:353",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 76740,
                      "name": "_getTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20619,
                      "src": "5096:12:353",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (uint256) view returns (string memory)"
                      }
                    },
                    "id": 76742,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5096:22:353",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 76739,
                  "id": 76743,
                  "nodeType": "Return",
                  "src": "5089:29:353"
                }
              ]
            },
            "baseFunctions": [
              12627
            ],
            "documentation": {
              "id": 76732,
              "nodeType": "StructuredDocumentation",
              "src": "4948:45:353",
              "text": "@dev Returns the URI for a given tokenId."
            },
            "functionSelector": "c87b56dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "5007:8:353",
            "overrides": {
              "id": 76736,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5046:8:353"
            },
            "parameters": {
              "id": 76735,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76734,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "5024:8:353",
                  "nodeType": "VariableDeclaration",
                  "scope": 76745,
                  "src": "5016:16:353",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 76733,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5016:7:353",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5015:18:353"
            },
            "returnParameters": {
              "id": 76739,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76738,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 76745,
                  "src": "5064:13:353",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 76737,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5064:6:353",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5063:15:353"
            },
            "scope": 77306,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 76769,
            "nodeType": "FunctionDefinition",
            "src": "5156:269:353",
            "nodes": [],
            "body": {
              "id": 76768,
              "nodeType": "Block",
              "src": "5320:105:353",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 76766,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 76758,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76748,
                          "src": "5361:11:353",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 76756,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -25,
                          "src": "5337:5:353",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_LoyaltyCard_$77306_$",
                            "typeString": "type(contract super LoyaltyCard)"
                          }
                        },
                        "id": 76757,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 12383,
                        "src": "5337:23:353",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view returns (bool)"
                        }
                      },
                      "id": 76759,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5337:36:353",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 76765,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 76761,
                              "name": "IERC2981",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13973,
                              "src": "5382:8:353",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC2981_$13973_$",
                                "typeString": "type(contract IERC2981)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_IERC2981_$13973_$",
                                "typeString": "type(contract IERC2981)"
                              }
                            ],
                            "id": 76760,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "5377:4:353",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 76762,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5377:14:353",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_IERC2981_$13973",
                            "typeString": "type(contract IERC2981)"
                          }
                        },
                        "id": 76763,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "interfaceId",
                        "nodeType": "MemberAccess",
                        "src": "5377:26:353",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 76764,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76748,
                        "src": "5407:11:353",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "src": "5377:41:353",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5337:81:353",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 76755,
                  "id": 76767,
                  "nodeType": "Return",
                  "src": "5330:88:353"
                }
              ]
            },
            "baseFunctions": [
              12383,
              13828
            ],
            "documentation": {
              "id": 76746,
              "nodeType": "StructuredDocumentation",
              "src": "5131:20:353",
              "text": "@dev See ERC 165"
            },
            "functionSelector": "01ffc9a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "5165:17:353",
            "overrides": {
              "id": 76752,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 76750,
                  "name": "ERC721AUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 13623,
                  "src": "5264:18:353"
                },
                {
                  "id": 76751,
                  "name": "IERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 13829,
                  "src": "5284:7:353"
                }
              ],
              "src": "5255:37:353"
            },
            "parameters": {
              "id": 76749,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76748,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "5190:11:353",
                  "nodeType": "VariableDeclaration",
                  "scope": 76769,
                  "src": "5183:18:353",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 76747,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "5183:6:353",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5182:20:353"
            },
            "returnParameters": {
              "id": 76755,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76754,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 76769,
                  "src": "5310:4:353",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 76753,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5310:4:353",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5309:6:353"
            },
            "scope": 77306,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 76851,
            "nodeType": "FunctionDefinition",
            "src": "5704:820:353",
            "nodes": [],
            "body": {
              "id": 76850,
              "nodeType": "Block",
              "src": "5876:648:353",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 76786,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 76783,
                            "name": "_req",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76773,
                            "src": "5894:4:353",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_MintRequest_$33866_calldata_ptr",
                              "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                            }
                          },
                          "id": 76784,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "quantity",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 33855,
                          "src": "5894:13:353",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 76785,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5911:1:353",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "5894:18:353",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c6f79616c7479436172643a206f6e6c792031204e46542063616e206265206d696e74656420617420612074696d652e",
                        "id": 76787,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5914:50:353",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8c72bf067baf14b911ac4accf767bf2651ab7577f317b202b4aa30817420f5db",
                          "typeString": "literal_string \"LoyaltyCard: only 1 NFT can be minted at a time.\""
                        },
                        "value": "LoyaltyCard: only 1 NFT can be minted at a time."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8c72bf067baf14b911ac4accf767bf2651ab7577f317b202b4aa30817420f5db",
                          "typeString": "literal_string \"LoyaltyCard: only 1 NFT can be minted at a time.\""
                        }
                      ],
                      "id": 76782,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5886:7:353",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 76788,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5886:79:353",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76789,
                  "nodeType": "ExpressionStatement",
                  "src": "5886:79:353"
                },
                {
                  "expression": {
                    "id": 76795,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 76790,
                      "name": "signer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76780,
                      "src": "5976:6:353",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 76792,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76773,
                          "src": "6001:4:353",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$33866_calldata_ptr",
                            "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                          }
                        },
                        {
                          "id": 76793,
                          "name": "_signature",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76775,
                          "src": "6007:10:353",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_MintRequest_$33866_calldata_ptr",
                            "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                          },
                          {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        ],
                        "id": 76791,
                        "name": "_processRequest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24091,
                        "src": "5985:15:353",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_MintRequest_$33866_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_address_$",
                          "typeString": "function (struct ISignatureMintERC721.MintRequest calldata,bytes calldata) returns (address)"
                        }
                      },
                      "id": 76794,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5985:33:353",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5976:42:353",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 76796,
                  "nodeType": "ExpressionStatement",
                  "src": "5976:42:353"
                },
                {
                  "assignments": [
                    76798
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 76798,
                      "mutability": "mutable",
                      "name": "receiver",
                      "nameLocation": "6036:8:353",
                      "nodeType": "VariableDeclaration",
                      "scope": 76850,
                      "src": "6028:16:353",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 76797,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6028:7:353",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 76801,
                  "initialValue": {
                    "expression": {
                      "id": 76799,
                      "name": "_req",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76773,
                      "src": "6047:4:353",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MintRequest_$33866_calldata_ptr",
                        "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                      }
                    },
                    "id": 76800,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "to",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 33845,
                    "src": "6047:7:353",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6028:26:353"
                },
                {
                  "assignments": [
                    76803
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 76803,
                      "mutability": "mutable",
                      "name": "tokenIdMinted",
                      "nameLocation": "6072:13:353",
                      "nodeType": "VariableDeclaration",
                      "scope": 76850,
                      "src": "6064:21:353",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 76802,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6064:7:353",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 76809,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 76805,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76798,
                        "src": "6096:8:353",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 76806,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76773,
                          "src": "6106:4:353",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$33866_calldata_ptr",
                            "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                          }
                        },
                        "id": 76807,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "uri",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 33853,
                        "src": "6106:8:353",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "id": 76804,
                      "name": "_mintTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 77102,
                      "src": "6088:7:353",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_string_calldata_ptr_$returns$_t_uint256_$",
                        "typeString": "function (address,string calldata) returns (uint256)"
                      }
                    },
                    "id": 76808,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6088:27:353",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6064:51:353"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 76821,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 76816,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 76810,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76773,
                          "src": "6171:4:353",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$33866_calldata_ptr",
                            "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                          }
                        },
                        "id": 76811,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "royaltyRecipient",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 33847,
                        "src": "6171:21:353",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 76814,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6204:1:353",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 76813,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6196:7:353",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 76812,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6196:7:353",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 76815,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6196:10:353",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "6171:35:353",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 76820,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 76817,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76773,
                          "src": "6210:4:353",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$33866_calldata_ptr",
                            "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                          }
                        },
                        "id": 76818,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "royaltyBps",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 33849,
                        "src": "6210:15:353",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 76819,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6229:1:353",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "6210:20:353",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "6171:59:353",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 76831,
                  "nodeType": "IfStatement",
                  "src": "6167:170:353",
                  "trueBody": {
                    "id": 76830,
                    "nodeType": "Block",
                    "src": "6232:105:353",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 76823,
                              "name": "tokenIdMinted",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76803,
                              "src": "6272:13:353",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 76824,
                                "name": "_req",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 76773,
                                "src": "6287:4:353",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_MintRequest_$33866_calldata_ptr",
                                  "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                                }
                              },
                              "id": 76825,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "royaltyRecipient",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 33847,
                              "src": "6287:21:353",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 76826,
                                "name": "_req",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 76773,
                                "src": "6310:4:353",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_MintRequest_$33866_calldata_ptr",
                                  "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                                }
                              },
                              "id": 76827,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "royaltyBps",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 33849,
                              "src": "6310:15:353",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 76822,
                            "name": "_setupRoyaltyInfoForToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22388,
                            "src": "6246:25:353",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,address,uint256)"
                            }
                          },
                          "id": 76828,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6246:80:353",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 76829,
                        "nodeType": "ExpressionStatement",
                        "src": "6246:80:353"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 76833,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76773,
                          "src": "6361:4:353",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$33866_calldata_ptr",
                            "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                          }
                        },
                        "id": 76834,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "primarySaleRecipient",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 33851,
                        "src": "6361:25:353",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 76835,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76773,
                          "src": "6388:4:353",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$33866_calldata_ptr",
                            "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                          }
                        },
                        "id": 76836,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "quantity",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 33855,
                        "src": "6388:13:353",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 76837,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76773,
                          "src": "6403:4:353",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$33866_calldata_ptr",
                            "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                          }
                        },
                        "id": 76838,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "currency",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 33859,
                        "src": "6403:13:353",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 76839,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76773,
                          "src": "6418:4:353",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$33866_calldata_ptr",
                            "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                          }
                        },
                        "id": 76840,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "pricePerToken",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 33857,
                        "src": "6418:18:353",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 76832,
                      "name": "_collectPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 77077,
                      "src": "6347:13:353",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,address,uint256)"
                      }
                    },
                    "id": 76841,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6347:90:353",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76842,
                  "nodeType": "ExpressionStatement",
                  "src": "6347:90:353"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 76844,
                        "name": "signer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76780,
                        "src": "6479:6:353",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 76845,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76798,
                        "src": "6487:8:353",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 76846,
                        "name": "tokenIdMinted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76803,
                        "src": "6497:13:353",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 76847,
                        "name": "_req",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76773,
                        "src": "6512:4:353",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MintRequest_$33866_calldata_ptr",
                          "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_MintRequest_$33866_calldata_ptr",
                          "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                        }
                      ],
                      "id": 76843,
                      "name": "TokensMintedWithSignature",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33878,
                      "src": "6453:25:353",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_struct$_MintRequest_$33866_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,struct ISignatureMintERC721.MintRequest memory)"
                      }
                    },
                    "id": 76848,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6453:64:353",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76849,
                  "nodeType": "EmitStatement",
                  "src": "6448:69:353"
                }
              ]
            },
            "baseFunctions": [
              33902
            ],
            "documentation": {
              "id": 76770,
              "nodeType": "StructuredDocumentation",
              "src": "5618:81:353",
              "text": "@dev Mints an NFT according to the provided mint request. Always mints 1 NFT."
            },
            "functionSelector": "439c7be5",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 76778,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 76777,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 150379,
                  "src": "5826:12:353"
                },
                "nodeType": "ModifierInvocation",
                "src": "5826:12:353"
              }
            ],
            "name": "mintWithSignature",
            "nameLocation": "5713:17:353",
            "parameters": {
              "id": 76776,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76773,
                  "mutability": "mutable",
                  "name": "_req",
                  "nameLocation": "5752:4:353",
                  "nodeType": "VariableDeclaration",
                  "scope": 76851,
                  "src": "5731:25:353",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_MintRequest_$33866_calldata_ptr",
                    "typeString": "struct ISignatureMintERC721.MintRequest"
                  },
                  "typeName": {
                    "id": 76772,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 76771,
                      "name": "MintRequest",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 33866,
                      "src": "5731:11:353"
                    },
                    "referencedDeclaration": 33866,
                    "src": "5731:11:353",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MintRequest_$33866_storage_ptr",
                      "typeString": "struct ISignatureMintERC721.MintRequest"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 76775,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "5773:10:353",
                  "nodeType": "VariableDeclaration",
                  "scope": 76851,
                  "src": "5758:25:353",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 76774,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5758:5:353",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5730:54:353"
            },
            "returnParameters": {
              "id": 76781,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76780,
                  "mutability": "mutable",
                  "name": "signer",
                  "nameLocation": "5864:6:353",
                  "nodeType": "VariableDeclaration",
                  "scope": 76851,
                  "src": "5856:14:353",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 76779,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5856:7:353",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5855:16:353"
            },
            "scope": 77306,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 76878,
            "nodeType": "FunctionDefinition",
            "src": "6609:218:353",
            "nodes": [],
            "body": {
              "id": 76877,
              "nodeType": "Block",
              "src": "6723:104:353",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 76869,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 76864,
                      "name": "tokenIdMinted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76862,
                      "src": "6733:13:353",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 76866,
                          "name": "_to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76854,
                          "src": "6757:3:353",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 76867,
                          "name": "_uri",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76856,
                          "src": "6762:4:353",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_calldata_ptr",
                            "typeString": "string calldata"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_string_calldata_ptr",
                            "typeString": "string calldata"
                          }
                        ],
                        "id": 76865,
                        "name": "_mintTo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77102,
                        "src": "6749:7:353",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_string_calldata_ptr_$returns$_t_uint256_$",
                          "typeString": "function (address,string calldata) returns (uint256)"
                        }
                      },
                      "id": 76868,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6749:18:353",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6733:34:353",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 76870,
                  "nodeType": "ExpressionStatement",
                  "src": "6733:34:353"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 76872,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76854,
                        "src": "6795:3:353",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 76873,
                        "name": "tokenIdMinted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76862,
                        "src": "6800:13:353",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 76874,
                        "name": "_uri",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76856,
                        "src": "6815:4:353",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "id": 76871,
                      "name": "TokensMinted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75190,
                      "src": "6782:12:353",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,string memory)"
                      }
                    },
                    "id": 76875,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6782:38:353",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76876,
                  "nodeType": "EmitStatement",
                  "src": "6777:43:353"
                }
              ]
            },
            "baseFunctions": [
              75200
            ],
            "documentation": {
              "id": 76852,
              "nodeType": "StructuredDocumentation",
              "src": "6530:74:353",
              "text": "@dev Lets an account with MINTER_ROLE mint an NFT. Always mints 1 NFT."
            },
            "functionSelector": "0075a317",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 76859,
                    "name": "MINTER_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 76609,
                    "src": "6678:11:353",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 76860,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 76858,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21189,
                  "src": "6669:8:353"
                },
                "nodeType": "ModifierInvocation",
                "src": "6669:21:353"
              }
            ],
            "name": "mintTo",
            "nameLocation": "6618:6:353",
            "parameters": {
              "id": 76857,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76854,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "6633:3:353",
                  "nodeType": "VariableDeclaration",
                  "scope": 76878,
                  "src": "6625:11:353",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 76853,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6625:7:353",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 76856,
                  "mutability": "mutable",
                  "name": "_uri",
                  "nameLocation": "6654:4:353",
                  "nodeType": "VariableDeclaration",
                  "scope": 76878,
                  "src": "6638:20:353",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 76855,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6638:6:353",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6624:35:353"
            },
            "returnParameters": {
              "id": 76863,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76862,
                  "mutability": "mutable",
                  "name": "tokenIdMinted",
                  "nameLocation": "6708:13:353",
                  "nodeType": "VariableDeclaration",
                  "scope": 76878,
                  "src": "6700:21:353",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 76861,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6700:7:353",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6699:23:353"
            },
            "scope": 77306,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 76891,
            "nodeType": "FunctionDefinition",
            "src": "6883:195:353",
            "nodes": [],
            "body": {
              "id": 76890,
              "nodeType": "Block",
              "src": "6942:136:353",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 76886,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76881,
                        "src": "7057:7:353",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 76887,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7066:4:353",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 76885,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        13331,
                        13513
                      ],
                      "referencedDeclaration": 13513,
                      "src": "7051:5:353",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (uint256,bool)"
                      }
                    },
                    "id": 76888,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7051:20:353",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76889,
                  "nodeType": "ExpressionStatement",
                  "src": "7051:20:353"
                }
              ]
            },
            "baseFunctions": [
              75206
            ],
            "documentation": {
              "id": 76879,
              "nodeType": "StructuredDocumentation",
              "src": "6833:45:353",
              "text": "@dev Burns `tokenId`. See {ERC721-_burn}."
            },
            "functionSelector": "40e58ee5",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "cancel",
            "nameLocation": "6892:6:353",
            "overrides": {
              "id": 76883,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6933:8:353"
            },
            "parameters": {
              "id": 76882,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76881,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "6907:7:353",
                  "nodeType": "VariableDeclaration",
                  "scope": 76891,
                  "src": "6899:15:353",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 76880,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6899:7:353",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6898:17:353"
            },
            "returnParameters": {
              "id": 76884,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6942:0:353"
            },
            "scope": 77306,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 76906,
            "nodeType": "FunctionDefinition",
            "src": "7134:112:353",
            "nodes": [],
            "body": {
              "id": 76905,
              "nodeType": "Block",
              "src": "7215:31:353",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 76902,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76894,
                        "src": "7231:7:353",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 76901,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        13331,
                        13513
                      ],
                      "referencedDeclaration": 13331,
                      "src": "7225:5:353",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 76903,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7225:14:353",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76904,
                  "nodeType": "ExpressionStatement",
                  "src": "7225:14:353"
                }
              ]
            },
            "baseFunctions": [
              75212
            ],
            "documentation": {
              "id": 76892,
              "nodeType": "StructuredDocumentation",
              "src": "7084:45:353",
              "text": "@dev Burns `tokenId`. See {ERC721-_burn}."
            },
            "functionSelector": "20c5429b",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 76898,
                    "name": "REVOKE_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 76621,
                    "src": "7202:11:353",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 76899,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 76897,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21189,
                  "src": "7193:8:353"
                },
                "nodeType": "ModifierInvocation",
                "src": "7193:21:353"
              }
            ],
            "name": "revoke",
            "nameLocation": "7143:6:353",
            "overrides": {
              "id": 76896,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7184:8:353"
            },
            "parameters": {
              "id": 76895,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76894,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "7158:7:353",
                  "nodeType": "VariableDeclaration",
                  "scope": 76906,
                  "src": "7150:15:353",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 76893,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7150:7:353",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7149:17:353"
            },
            "returnParameters": {
              "id": 76900,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7215:0:353"
            },
            "scope": 77306,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 76919,
            "nodeType": "FunctionDefinition",
            "src": "7517:144:353",
            "nodes": [],
            "body": {
              "id": 76918,
              "nodeType": "Block",
              "src": "7572:89:353",
              "nodes": [],
              "statements": [
                {
                  "id": 76917,
                  "nodeType": "UncheckedBlock",
                  "src": "7582:73:353",
                  "statements": [
                    {
                      "expression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 76915,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 76912,
                          "name": "_currentIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12250,
                          "src": "7613:13:353",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 76913,
                            "name": "_startTokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12323,
                            "src": "7629:13:353",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 76914,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7629:15:353",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7613:31:353",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "functionReturnParameters": 76911,
                      "id": 76916,
                      "nodeType": "Return",
                      "src": "7606:38:353"
                    }
                  ]
                }
              ]
            },
            "documentation": {
              "id": 76907,
              "nodeType": "StructuredDocumentation",
              "src": "7430:82:353",
              "text": " @dev Returns the total amount of tokens minted in the contract."
            },
            "functionSelector": "a2309ff8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalMinted",
            "nameLocation": "7526:11:353",
            "parameters": {
              "id": 76908,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7537:2:353"
            },
            "returnParameters": {
              "id": 76911,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76910,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 76919,
                  "src": "7563:7:353",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 76909,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7563:7:353",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7562:9:353"
            },
            "scope": 77306,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 76928,
            "nodeType": "FunctionDefinition",
            "src": "7743:98:353",
            "nodes": [],
            "body": {
              "id": 76927,
              "nodeType": "Block",
              "src": "7804:37:353",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 76925,
                    "name": "_currentIndex",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12250,
                    "src": "7821:13:353",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 76924,
                  "id": 76926,
                  "nodeType": "Return",
                  "src": "7814:20:353"
                }
              ]
            },
            "documentation": {
              "id": 76920,
              "nodeType": "StructuredDocumentation",
              "src": "7667:71:353",
              "text": "@dev The tokenId of the next NFT that will be minted / lazy minted."
            },
            "functionSelector": "3b1475a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "nextTokenIdToMint",
            "nameLocation": "7752:17:353",
            "parameters": {
              "id": 76921,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7769:2:353"
            },
            "returnParameters": {
              "id": 76924,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76923,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 76928,
                  "src": "7795:7:353",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 76922,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7795:7:353",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7794:9:353"
            },
            "scope": 77306,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 77077,
            "nodeType": "FunctionDefinition",
            "src": "8118:1409:353",
            "nodes": [],
            "body": {
              "id": 77076,
              "nodeType": "Block",
              "src": "8288:1239:353",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 76942,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 76940,
                      "name": "_pricePerToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76937,
                      "src": "8302:14:353",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 76941,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8320:1:353",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8302:19:353",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 76953,
                  "nodeType": "IfStatement",
                  "src": "8298:103:353",
                  "trueBody": {
                    "id": 76952,
                    "nodeType": "Block",
                    "src": "8323:78:353",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 76947,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 76944,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "8345:3:353",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 76945,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "8345:9:353",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 76946,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8358:1:353",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "8345:14:353",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "2156616c7565",
                              "id": 76948,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8361:8:353",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_208006903b0d1b8c530b3b2de29e1f765aa4311b3f136f1a342e9de039eda1b1",
                                "typeString": "literal_string \"!Value\""
                              },
                              "value": "!Value"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_208006903b0d1b8c530b3b2de29e1f765aa4311b3f136f1a342e9de039eda1b1",
                                "typeString": "literal_string \"!Value\""
                              }
                            ],
                            "id": 76943,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "8337:7:353",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 76949,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8337:33:353",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 76950,
                        "nodeType": "ExpressionStatement",
                        "src": "8337:33:353"
                      },
                      {
                        "functionReturnParameters": 76939,
                        "id": 76951,
                        "nodeType": "Return",
                        "src": "8384:7:353"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    76955
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 76955,
                      "mutability": "mutable",
                      "name": "totalPrice",
                      "nameLocation": "8419:10:353",
                      "nodeType": "VariableDeclaration",
                      "scope": 77076,
                      "src": "8411:18:353",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 76954,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8411:7:353",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 76959,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 76958,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 76956,
                      "name": "_quantityToClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76933,
                      "src": "8432:16:353",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 76957,
                      "name": "_pricePerToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76937,
                      "src": "8451:14:353",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8432:33:353",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8411:54:353"
                },
                {
                  "assignments": [
                    76961
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 76961,
                      "mutability": "mutable",
                      "name": "validMsgValue",
                      "nameLocation": "8481:13:353",
                      "nodeType": "VariableDeclaration",
                      "scope": 77076,
                      "src": "8476:18:353",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 76960,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "8476:4:353",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 76962,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8476:18:353"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 76966,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 76963,
                      "name": "_currency",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76935,
                      "src": "8508:9:353",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 76964,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63578,
                        "src": "8521:19:353",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$63578_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 76965,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "NATIVE_TOKEN",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63346,
                      "src": "8521:32:353",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8508:45:353",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 76982,
                    "nodeType": "Block",
                    "src": "8625:55:353",
                    "statements": [
                      {
                        "expression": {
                          "id": 76980,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 76975,
                            "name": "validMsgValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76961,
                            "src": "8639:13:353",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 76979,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 76976,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "8655:3:353",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 76977,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "8655:9:353",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 76978,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8668:1:353",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "8655:14:353",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "8639:30:353",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 76981,
                        "nodeType": "ExpressionStatement",
                        "src": "8639:30:353"
                      }
                    ]
                  },
                  "id": 76983,
                  "nodeType": "IfStatement",
                  "src": "8504:176:353",
                  "trueBody": {
                    "id": 76974,
                    "nodeType": "Block",
                    "src": "8555:64:353",
                    "statements": [
                      {
                        "expression": {
                          "id": 76972,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 76967,
                            "name": "validMsgValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76961,
                            "src": "8569:13:353",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 76971,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 76968,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "8585:3:353",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 76969,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "8585:9:353",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 76970,
                              "name": "totalPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76955,
                              "src": "8598:10:353",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "8585:23:353",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "8569:39:353",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 76973,
                        "nodeType": "ExpressionStatement",
                        "src": "8569:39:353"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 76985,
                        "name": "validMsgValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76961,
                        "src": "8697:13:353",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964206d73672076616c7565",
                        "id": 76986,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8712:19:353",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_de0d8376eff7771bcc57765656c140a92c651b9eeb4df686f809560770e7fe49",
                          "typeString": "literal_string \"Invalid msg value\""
                        },
                        "value": "Invalid msg value"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_de0d8376eff7771bcc57765656c140a92c651b9eeb4df686f809560770e7fe49",
                          "typeString": "literal_string \"Invalid msg value\""
                        }
                      ],
                      "id": 76984,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8689:7:353",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 76987,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8689:43:353",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76988,
                  "nodeType": "ExpressionStatement",
                  "src": "8689:43:353"
                },
                {
                  "assignments": [
                    76990
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 76990,
                      "mutability": "mutable",
                      "name": "saleRecipient",
                      "nameLocation": "8751:13:353",
                      "nodeType": "VariableDeclaration",
                      "scope": 77076,
                      "src": "8743:21:353",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 76989,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8743:7:353",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 77001,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 76996,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 76991,
                        "name": "_primarySaleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76931,
                        "src": "8767:21:353",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 76994,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8800:1:353",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 76993,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8792:7:353",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 76992,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8792:7:353",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 76995,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8792:10:353",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "8767:35:353",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 76999,
                      "name": "_primarySaleRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76931,
                      "src": "8830:21:353",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 77000,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "8767:84:353",
                    "trueExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 76997,
                        "name": "primarySaleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22024,
                        "src": "8805:20:353",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 76998,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8805:22:353",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8743:108:353"
                },
                {
                  "assignments": [
                    77003
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 77003,
                      "mutability": "mutable",
                      "name": "fees",
                      "nameLocation": "8870:4:353",
                      "nodeType": "VariableDeclaration",
                      "scope": 77076,
                      "src": "8862:12:353",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 77002,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8862:7:353",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 77004,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8862:12:353"
                },
                {
                  "assignments": [
                    77006
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 77006,
                      "mutability": "mutable",
                      "name": "feeRecipient",
                      "nameLocation": "8892:12:353",
                      "nodeType": "VariableDeclaration",
                      "scope": 77076,
                      "src": "8884:20:353",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 77005,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8884:7:353",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 77007,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8884:20:353"
                },
                {
                  "assignments": [
                    77010
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 77010,
                      "mutability": "mutable",
                      "name": "feeType",
                      "nameLocation": "8931:7:353",
                      "nodeType": "VariableDeclaration",
                      "scope": 77076,
                      "src": "8915:23:353",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PlatformFeeType_$33287",
                        "typeString": "enum IPlatformFee.PlatformFeeType"
                      },
                      "typeName": {
                        "id": 77009,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 77008,
                          "name": "PlatformFeeType",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 33287,
                          "src": "8915:15:353"
                        },
                        "referencedDeclaration": 33287,
                        "src": "8915:15:353",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PlatformFeeType_$33287",
                          "typeString": "enum IPlatformFee.PlatformFeeType"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 77013,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 77011,
                      "name": "getPlatformFeeType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21858,
                      "src": "8941:18:353",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_enum$_PlatformFeeType_$33287_$",
                        "typeString": "function () view returns (enum IPlatformFee.PlatformFeeType)"
                      }
                    },
                    "id": 77012,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8941:20:353",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_PlatformFeeType_$33287",
                      "typeString": "enum IPlatformFee.PlatformFeeType"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8915:46:353"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_PlatformFeeType_$33287",
                      "typeString": "enum IPlatformFee.PlatformFeeType"
                    },
                    "id": 77017,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 77014,
                      "name": "feeType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 77010,
                      "src": "8975:7:353",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PlatformFeeType_$33287",
                        "typeString": "enum IPlatformFee.PlatformFeeType"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 77015,
                        "name": "PlatformFeeType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33287,
                        "src": "8986:15:353",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_PlatformFeeType_$33287_$",
                          "typeString": "type(enum IPlatformFee.PlatformFeeType)"
                        }
                      },
                      "id": 77016,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Flat",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 33286,
                      "src": "8986:20:353",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PlatformFeeType_$33287",
                        "typeString": "enum IPlatformFee.PlatformFeeType"
                      }
                    },
                    "src": "8975:31:353",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 77045,
                    "nodeType": "Block",
                    "src": "9086:173:353",
                    "statements": [
                      {
                        "assignments": [
                          77027
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 77027,
                            "mutability": "mutable",
                            "name": "platformFeeBps",
                            "nameLocation": "9107:14:353",
                            "nodeType": "VariableDeclaration",
                            "scope": 77045,
                            "src": "9100:21:353",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            },
                            "typeName": {
                              "id": 77026,
                              "name": "uint16",
                              "nodeType": "ElementaryTypeName",
                              "src": "9100:6:353",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 77028,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9100:21:353"
                      },
                      {
                        "expression": {
                          "id": 77034,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 77029,
                                "name": "feeRecipient",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 77006,
                                "src": "9136:12:353",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 77030,
                                "name": "platformFeeBps",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 77027,
                                "src": "9150:14:353",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                }
                              }
                            ],
                            "id": 77031,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "9135:30:353",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_address_$_t_uint16_$",
                              "typeString": "tuple(address,uint16)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 77032,
                              "name": "getPlatformFeeInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21835,
                              "src": "9168:18:353",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$_t_uint16_$",
                                "typeString": "function () view returns (address,uint16)"
                              }
                            },
                            "id": 77033,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9168:20:353",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_address_$_t_uint16_$",
                              "typeString": "tuple(address,uint16)"
                            }
                          },
                          "src": "9135:53:353",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 77035,
                        "nodeType": "ExpressionStatement",
                        "src": "9135:53:353"
                      },
                      {
                        "expression": {
                          "id": 77043,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 77036,
                            "name": "fees",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 77003,
                            "src": "9202:4:353",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 77042,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 77039,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 77037,
                                    "name": "totalPrice",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 76955,
                                    "src": "9210:10:353",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 77038,
                                    "name": "platformFeeBps",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 77027,
                                    "src": "9223:14:353",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint16",
                                      "typeString": "uint16"
                                    }
                                  },
                                  "src": "9210:27:353",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 77040,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "9209:29:353",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "id": 77041,
                              "name": "MAX_BPS",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76625,
                              "src": "9241:7:353",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "9209:39:353",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9202:46:353",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 77044,
                        "nodeType": "ExpressionStatement",
                        "src": "9202:46:353"
                      }
                    ]
                  },
                  "id": 77046,
                  "nodeType": "IfStatement",
                  "src": "8971:288:353",
                  "trueBody": {
                    "id": 77025,
                    "nodeType": "Block",
                    "src": "9008:72:353",
                    "statements": [
                      {
                        "expression": {
                          "id": 77023,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 77018,
                                "name": "feeRecipient",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 77006,
                                "src": "9023:12:353",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 77019,
                                "name": "fees",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 77003,
                                "src": "9037:4:353",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 77020,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "9022:20:353",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                              "typeString": "tuple(address,uint256)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 77021,
                              "name": "getFlatPlatformFeeInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21848,
                              "src": "9045:22:353",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$_t_uint256_$",
                                "typeString": "function () view returns (address,uint256)"
                              }
                            },
                            "id": 77022,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9045:24:353",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                              "typeString": "tuple(address,uint256)"
                            }
                          },
                          "src": "9022:47:353",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 77024,
                        "nodeType": "ExpressionStatement",
                        "src": "9022:47:353"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 77050,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 77048,
                          "name": "totalPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76955,
                          "src": "9277:10:353",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 77049,
                          "name": "fees",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 77003,
                          "src": "9291:4:353",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9277:18:353",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "466565732067726561746572207468616e207072696365",
                        "id": 77051,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9297:25:353",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d55f709a5efe1a6fca97f3309a92039d75dd7d70b6ea87d836b06bc4b1f3db5b",
                          "typeString": "literal_string \"Fees greater than price\""
                        },
                        "value": "Fees greater than price"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d55f709a5efe1a6fca97f3309a92039d75dd7d70b6ea87d836b06bc4b1f3db5b",
                          "typeString": "literal_string \"Fees greater than price\""
                        }
                      ],
                      "id": 77047,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9269:7:353",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 77052,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9269:54:353",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77053,
                  "nodeType": "ExpressionStatement",
                  "src": "9269:54:353"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77057,
                        "name": "_currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76935,
                        "src": "9371:9:353",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 77058,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            77292
                          ],
                          "referencedDeclaration": 77292,
                          "src": "9382:10:353",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 77059,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9382:12:353",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 77060,
                        "name": "feeRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77006,
                        "src": "9396:12:353",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 77061,
                        "name": "fees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77003,
                        "src": "9410:4:353",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 77054,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63578,
                        "src": "9334:19:353",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$63578_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 77056,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferCurrency",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63383,
                      "src": "9334:36:353",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 77062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9334:81:353",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77063,
                  "nodeType": "ExpressionStatement",
                  "src": "9334:81:353"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77067,
                        "name": "_currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76935,
                        "src": "9462:9:353",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 77068,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            77292
                          ],
                          "referencedDeclaration": 77292,
                          "src": "9473:10:353",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 77069,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9473:12:353",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 77070,
                        "name": "saleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76990,
                        "src": "9487:13:353",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 77073,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 77071,
                          "name": "totalPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76955,
                          "src": "9502:10:353",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 77072,
                          "name": "fees",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 77003,
                          "src": "9515:4:353",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9502:17:353",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 77064,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63578,
                        "src": "9425:19:353",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$63578_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 77066,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferCurrency",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63383,
                      "src": "9425:36:353",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 77074,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9425:95:353",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77075,
                  "nodeType": "ExpressionStatement",
                  "src": "9425:95:353"
                }
              ]
            },
            "documentation": {
              "id": 76929,
              "nodeType": "StructuredDocumentation",
              "src": "8034:79:353",
              "text": "@dev Collects and distributes the primary sale value of NFTs being claimed."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_collectPrice",
            "nameLocation": "8127:13:353",
            "parameters": {
              "id": 76938,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76931,
                  "mutability": "mutable",
                  "name": "_primarySaleRecipient",
                  "nameLocation": "8158:21:353",
                  "nodeType": "VariableDeclaration",
                  "scope": 77077,
                  "src": "8150:29:353",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 76930,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8150:7:353",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 76933,
                  "mutability": "mutable",
                  "name": "_quantityToClaim",
                  "nameLocation": "8197:16:353",
                  "nodeType": "VariableDeclaration",
                  "scope": 77077,
                  "src": "8189:24:353",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 76932,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8189:7:353",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 76935,
                  "mutability": "mutable",
                  "name": "_currency",
                  "nameLocation": "8231:9:353",
                  "nodeType": "VariableDeclaration",
                  "scope": 77077,
                  "src": "8223:17:353",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 76934,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8223:7:353",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 76937,
                  "mutability": "mutable",
                  "name": "_pricePerToken",
                  "nameLocation": "8258:14:353",
                  "nodeType": "VariableDeclaration",
                  "scope": 77077,
                  "src": "8250:22:353",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 76936,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8250:7:353",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8140:138:353"
            },
            "returnParameters": {
              "id": 76939,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8288:0:353"
            },
            "scope": 77306,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 77102,
            "nodeType": "FunctionDefinition",
            "src": "9567:210:353",
            "nodes": [],
            "body": {
              "id": 77101,
              "nodeType": "Block",
              "src": "9660:117:353",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 77089,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 77087,
                      "name": "tokenIdToMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 77085,
                      "src": "9670:13:353",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 77088,
                      "name": "_currentIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12250,
                      "src": "9686:13:353",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9670:29:353",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 77090,
                  "nodeType": "ExpressionStatement",
                  "src": "9670:29:353"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77092,
                        "name": "tokenIdToMint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77085,
                        "src": "9723:13:353",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 77093,
                        "name": "_uri",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77082,
                        "src": "9738:4:353",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "id": 77091,
                      "name": "_setTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20649,
                      "src": "9710:12:353",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 77094,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9710:33:353",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77095,
                  "nodeType": "ExpressionStatement",
                  "src": "9710:33:353"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77097,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77080,
                        "src": "9763:3:353",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 77098,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9768:1:353",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 77096,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        12868,
                        13031
                      ],
                      "referencedDeclaration": 12868,
                      "src": "9753:9:353",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 77099,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9753:17:353",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77100,
                  "nodeType": "ExpressionStatement",
                  "src": "9753:17:353"
                }
              ]
            },
            "documentation": {
              "id": 77078,
              "nodeType": "StructuredDocumentation",
              "src": "9533:29:353",
              "text": "@dev Mints an NFT to `to`"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mintTo",
            "nameLocation": "9576:7:353",
            "parameters": {
              "id": 77083,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77080,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "9592:3:353",
                  "nodeType": "VariableDeclaration",
                  "scope": 77102,
                  "src": "9584:11:353",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 77079,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9584:7:353",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77082,
                  "mutability": "mutable",
                  "name": "_uri",
                  "nameLocation": "9613:4:353",
                  "nodeType": "VariableDeclaration",
                  "scope": 77102,
                  "src": "9597:20:353",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 77081,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "9597:6:353",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9583:35:353"
            },
            "returnParameters": {
              "id": 77086,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77085,
                  "mutability": "mutable",
                  "name": "tokenIdToMint",
                  "nameLocation": "9645:13:353",
                  "nodeType": "VariableDeclaration",
                  "scope": 77102,
                  "src": "9637:21:353",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 77084,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9637:7:353",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9636:23:353"
            },
            "scope": 77306,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 77166,
            "nodeType": "FunctionDefinition",
            "src": "9831:576:353",
            "nodes": [],
            "body": {
              "id": 77165,
              "nodeType": "Block",
              "src": "9992:415:353",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77118,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77105,
                        "src": "10030:4:353",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 77119,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77107,
                        "src": "10036:2:353",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 77120,
                        "name": "startTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77109,
                        "src": "10040:12:353",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 77121,
                        "name": "quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77111,
                        "src": "10054:8:353",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 77115,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "10002:5:353",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_LoyaltyCard_$77306_$",
                          "typeString": "type(contract super LoyaltyCard)"
                        }
                      },
                      "id": 77117,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_beforeTokenTransfers",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13604,
                      "src": "10002:27:353",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 77122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10002:61:353",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77123,
                  "nodeType": "ExpressionStatement",
                  "src": "10002:61:353"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 77145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 77138,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 77131,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "10175:35:353",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 77125,
                              "name": "TRANSFER_ROLE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76603,
                              "src": "10184:13:353",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 77128,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "10207:1:353",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 77127,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "10199:7:353",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 77126,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "10199:7:353",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 77129,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10199:10:353",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 77124,
                            "name": "hasRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21207,
                            "src": "10176:7:353",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) view returns (bool)"
                            }
                          },
                          "id": 77130,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10176:34:353",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 77137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 77132,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 77105,
                          "src": "10214:4:353",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 77135,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10230:1:353",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 77134,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10222:7:353",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 77133,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10222:7:353",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 77136,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10222:10:353",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10214:18:353",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "10175:57:353",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 77144,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 77139,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77107,
                        "src": "10236:2:353",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 77142,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10250:1:353",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 77141,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10242:7:353",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 77140,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10242:7:353",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 77143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10242:10:353",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "10236:16:353",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "10175:77:353",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 77164,
                  "nodeType": "IfStatement",
                  "src": "10171:230:353",
                  "trueBody": {
                    "id": 77163,
                    "nodeType": "Block",
                    "src": "10254:147:353",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 77156,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 77150,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "10272:29:353",
                            "subExpression": {
                              "arguments": [
                                {
                                  "id": 77147,
                                  "name": "TRANSFER_ROLE",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 76603,
                                  "src": "10281:13:353",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "id": 77148,
                                  "name": "from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 77105,
                                  "src": "10296:4:353",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 77146,
                                "name": "hasRole",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 21207,
                                "src": "10273:7:353",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (bytes32,address) view returns (bool)"
                                }
                              },
                              "id": 77149,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10273:28:353",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "id": 77155,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "10305:27:353",
                            "subExpression": {
                              "arguments": [
                                {
                                  "id": 77152,
                                  "name": "TRANSFER_ROLE",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 76603,
                                  "src": "10314:13:353",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "id": 77153,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 77107,
                                  "src": "10329:2:353",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 77151,
                                "name": "hasRole",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 21207,
                                "src": "10306:7:353",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (bytes32,address) view returns (bool)"
                                }
                              },
                              "id": 77154,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10306:26:353",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "10272:60:353",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 77162,
                        "nodeType": "IfStatement",
                        "src": "10268:123:353",
                        "trueBody": {
                          "id": 77161,
                          "nodeType": "Block",
                          "src": "10334:57:353",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "hexValue": "215472616e736665722d526f6c65",
                                    "id": 77158,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "10359:16:353",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_580e0c4592c88fed8ee4d517df979aadb8488f3871dc6e505bc9673b5984355e",
                                      "typeString": "literal_string \"!Transfer-Role\""
                                    },
                                    "value": "!Transfer-Role"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_580e0c4592c88fed8ee4d517df979aadb8488f3871dc6e505bc9673b5984355e",
                                      "typeString": "literal_string \"!Transfer-Role\""
                                    }
                                  ],
                                  "id": 77157,
                                  "name": "revert",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -19,
                                    -19
                                  ],
                                  "referencedDeclaration": -19,
                                  "src": "10352:6:353",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (string memory) pure"
                                  }
                                },
                                "id": 77159,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10352:24:353",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 77160,
                              "nodeType": "ExpressionStatement",
                              "src": "10352:24:353"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              13604
            ],
            "documentation": {
              "id": 77103,
              "nodeType": "StructuredDocumentation",
              "src": "9783:43:353",
              "text": "@dev See {ERC721-_beforeTokenTransfer}."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfers",
            "nameLocation": "9840:21:353",
            "overrides": {
              "id": 77113,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9983:8:353"
            },
            "parameters": {
              "id": 77112,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77105,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "9879:4:353",
                  "nodeType": "VariableDeclaration",
                  "scope": 77166,
                  "src": "9871:12:353",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 77104,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9871:7:353",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77107,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "9901:2:353",
                  "nodeType": "VariableDeclaration",
                  "scope": 77166,
                  "src": "9893:10:353",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 77106,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9893:7:353",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77109,
                  "mutability": "mutable",
                  "name": "startTokenId",
                  "nameLocation": "9921:12:353",
                  "nodeType": "VariableDeclaration",
                  "scope": 77166,
                  "src": "9913:20:353",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 77108,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9913:7:353",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77111,
                  "mutability": "mutable",
                  "name": "quantity",
                  "nameLocation": "9951:8:353",
                  "nodeType": "VariableDeclaration",
                  "scope": 77166,
                  "src": "9943:16:353",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 77110,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9943:7:353",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9861:104:353"
            },
            "returnParameters": {
              "id": 77114,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9992:0:353"
            },
            "scope": 77306,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 77180,
            "nodeType": "FunctionDefinition",
            "src": "10502:137:353",
            "nodes": [],
            "body": {
              "id": 77179,
              "nodeType": "Block",
              "src": "10574:65:353",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77174,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21176,
                        "src": "10599:18:353",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 77175,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            77292
                          ],
                          "referencedDeclaration": 77292,
                          "src": "10619:10:353",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 77176,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10619:12:353",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 77173,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21207,
                      "src": "10591:7:353",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 77177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10591:41:353",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 77172,
                  "id": 77178,
                  "nodeType": "Return",
                  "src": "10584:48:353"
                }
              ]
            },
            "baseFunctions": [
              22004
            ],
            "documentation": {
              "id": 77167,
              "nodeType": "StructuredDocumentation",
              "src": "10413:84:353",
              "text": "@dev Checks whether platform fee info can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetPlatformFeeInfo",
            "nameLocation": "10511:22:353",
            "overrides": {
              "id": 77169,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10550:8:353"
            },
            "parameters": {
              "id": 77168,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10533:2:353"
            },
            "returnParameters": {
              "id": 77172,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77171,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 77180,
                  "src": "10568:4:353",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 77170,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10568:4:353",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10567:6:353"
            },
            "scope": 77306,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 77194,
            "nodeType": "FunctionDefinition",
            "src": "10739:142:353",
            "nodes": [],
            "body": {
              "id": 77193,
              "nodeType": "Block",
              "src": "10816:65:353",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77188,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21176,
                        "src": "10841:18:353",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 77189,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            77292
                          ],
                          "referencedDeclaration": 77292,
                          "src": "10861:10:353",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 77190,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10861:12:353",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 77187,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21207,
                      "src": "10833:7:353",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 77191,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10833:41:353",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 77186,
                  "id": 77192,
                  "nodeType": "Return",
                  "src": "10826:48:353"
                }
              ]
            },
            "baseFunctions": [
              22066
            ],
            "documentation": {
              "id": 77181,
              "nodeType": "StructuredDocumentation",
              "src": "10645:89:353",
              "text": "@dev Checks whether primary sale recipient can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetPrimarySaleRecipient",
            "nameLocation": "10748:27:353",
            "overrides": {
              "id": 77183,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10792:8:353"
            },
            "parameters": {
              "id": 77182,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10775:2:353"
            },
            "returnParameters": {
              "id": 77186,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77185,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 77194,
                  "src": "10810:4:353",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 77184,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10810:4:353",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10809:6:353"
            },
            "scope": 77306,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 77208,
            "nodeType": "FunctionDefinition",
            "src": "10964:127:353",
            "nodes": [],
            "body": {
              "id": 77207,
              "nodeType": "Block",
              "src": "11026:65:353",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77202,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21176,
                        "src": "11051:18:353",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 77203,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            77292
                          ],
                          "referencedDeclaration": 77292,
                          "src": "11071:10:353",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 77204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11071:12:353",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 77201,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21207,
                      "src": "11043:7:353",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 77205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11043:41:353",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 77200,
                  "id": 77206,
                  "nodeType": "Return",
                  "src": "11036:48:353"
                }
              ]
            },
            "baseFunctions": [
              21152
            ],
            "documentation": {
              "id": 77195,
              "nodeType": "StructuredDocumentation",
              "src": "10887:72:353",
              "text": "@dev Checks whether owner can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetOwner",
            "nameLocation": "10973:12:353",
            "overrides": {
              "id": 77197,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "11002:8:353"
            },
            "parameters": {
              "id": 77196,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10985:2:353"
            },
            "returnParameters": {
              "id": 77200,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77199,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 77208,
                  "src": "11020:4:353",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 77198,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11020:4:353",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11019:6:353"
            },
            "scope": 77306,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 77222,
            "nodeType": "FunctionDefinition",
            "src": "11181:133:353",
            "nodes": [],
            "body": {
              "id": 77221,
              "nodeType": "Block",
              "src": "11249:65:353",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77216,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21176,
                        "src": "11274:18:353",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 77217,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            77292
                          ],
                          "referencedDeclaration": 77292,
                          "src": "11294:10:353",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 77218,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11294:12:353",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 77215,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21207,
                      "src": "11266:7:353",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 77219,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11266:41:353",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 77214,
                  "id": 77220,
                  "nodeType": "Return",
                  "src": "11259:48:353"
                }
              ]
            },
            "baseFunctions": [
              22394
            ],
            "documentation": {
              "id": 77209,
              "nodeType": "StructuredDocumentation",
              "src": "11097:79:353",
              "text": "@dev Checks whether royalty info can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetRoyaltyInfo",
            "nameLocation": "11190:18:353",
            "overrides": {
              "id": 77211,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "11225:8:353"
            },
            "parameters": {
              "id": 77210,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11208:2:353"
            },
            "returnParameters": {
              "id": 77214,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77213,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 77222,
                  "src": "11243:4:353",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 77212,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11243:4:353",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11242:6:353"
            },
            "scope": 77306,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 77236,
            "nodeType": "FunctionDefinition",
            "src": "11409:133:353",
            "nodes": [],
            "body": {
              "id": 77235,
              "nodeType": "Block",
              "src": "11477:65:353",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77230,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21176,
                        "src": "11502:18:353",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 77231,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            77292
                          ],
                          "referencedDeclaration": 77292,
                          "src": "11522:10:353",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 77232,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11522:12:353",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 77229,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21207,
                      "src": "11494:7:353",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 77233,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11494:41:353",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 77228,
                  "id": 77234,
                  "nodeType": "Return",
                  "src": "11487:48:353"
                }
              ]
            },
            "baseFunctions": [
              17525
            ],
            "documentation": {
              "id": 77223,
              "nodeType": "StructuredDocumentation",
              "src": "11320:84:353",
              "text": "@dev Checks whether contract metadata can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetContractURI",
            "nameLocation": "11418:18:353",
            "overrides": {
              "id": 77225,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "11453:8:353"
            },
            "parameters": {
              "id": 77224,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11436:2:353"
            },
            "returnParameters": {
              "id": 77228,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77227,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 77236,
                  "src": "11471:4:353",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 77226,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11471:4:353",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11470:6:353"
            },
            "scope": 77306,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 77251,
            "nodeType": "FunctionDefinition",
            "src": "11630:137:353",
            "nodes": [],
            "body": {
              "id": 77250,
              "nodeType": "Block",
              "src": "11714:53:353",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77246,
                        "name": "MINTER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76609,
                        "src": "11739:11:353",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 77247,
                        "name": "_signer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77239,
                        "src": "11752:7:353",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 77245,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21207,
                      "src": "11731:7:353",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 77248,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11731:29:353",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 77244,
                  "id": 77249,
                  "nodeType": "Return",
                  "src": "11724:36:353"
                }
              ]
            },
            "baseFunctions": [
              24016
            ],
            "documentation": {
              "id": 77237,
              "nodeType": "StructuredDocumentation",
              "src": "11548:77:353",
              "text": "@dev Returns whether a given address is authorized to sign mint requests."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isAuthorizedSigner",
            "nameLocation": "11639:19:353",
            "overrides": {
              "id": 77241,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "11690:8:353"
            },
            "parameters": {
              "id": 77240,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77239,
                  "mutability": "mutable",
                  "name": "_signer",
                  "nameLocation": "11667:7:353",
                  "nodeType": "VariableDeclaration",
                  "scope": 77251,
                  "src": "11659:15:353",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 77238,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11659:7:353",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11658:17:353"
            },
            "returnParameters": {
              "id": 77244,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77243,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 77251,
                  "src": "11708:4:353",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 77242,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11708:4:353",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11707:6:353"
            },
            "scope": 77306,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 77265,
            "nodeType": "FunctionDefinition",
            "src": "11854:133:353",
            "nodes": [],
            "body": {
              "id": 77264,
              "nodeType": "Block",
              "src": "11927:60:353",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77259,
                        "name": "METADATA_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76615,
                        "src": "11952:13:353",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 77260,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            77292
                          ],
                          "referencedDeclaration": 77292,
                          "src": "11967:10:353",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 77261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11967:12:353",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 77258,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21207,
                      "src": "11944:7:353",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 77262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11944:36:353",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 77257,
                  "id": 77263,
                  "nodeType": "Return",
                  "src": "11937:43:353"
                }
              ]
            },
            "baseFunctions": [
              20698
            ],
            "documentation": {
              "id": 77252,
              "nodeType": "StructuredDocumentation",
              "src": "11773:76:353",
              "text": "@dev Returns whether metadata can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetMetadata",
            "nameLocation": "11863:15:353",
            "overrides": {
              "id": 77254,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "11903:8:353"
            },
            "parameters": {
              "id": 77253,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11878:2:353"
            },
            "returnParameters": {
              "id": 77257,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77256,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 77265,
                  "src": "11921:4:353",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 77255,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11921:4:353",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11920:6:353"
            },
            "scope": 77306,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 77279,
            "nodeType": "FunctionDefinition",
            "src": "12077:136:353",
            "nodes": [],
            "body": {
              "id": 77278,
              "nodeType": "Block",
              "src": "12153:60:353",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77273,
                        "name": "METADATA_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76615,
                        "src": "12178:13:353",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 77274,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            77292
                          ],
                          "referencedDeclaration": 77292,
                          "src": "12193:10:353",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 77275,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12193:12:353",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 77272,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21207,
                      "src": "12170:7:353",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 77276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12170:36:353",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 77271,
                  "id": 77277,
                  "nodeType": "Return",
                  "src": "12163:43:353"
                }
              ]
            },
            "baseFunctions": [
              20703
            ],
            "documentation": {
              "id": 77266,
              "nodeType": "StructuredDocumentation",
              "src": "11993:79:353",
              "text": "@dev Returns whether metadata can be frozen in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canFreezeMetadata",
            "nameLocation": "12086:18:353",
            "overrides": {
              "id": 77268,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "12129:8:353"
            },
            "parameters": {
              "id": 77267,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12104:2:353"
            },
            "returnParameters": {
              "id": 77271,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77270,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 77279,
                  "src": "12147:4:353",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 77269,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12147:4:353",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12146:6:353"
            },
            "scope": 77306,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 77292,
            "nodeType": "FunctionDefinition",
            "src": "12219:231:353",
            "nodes": [],
            "body": {
              "id": 77291,
              "nodeType": "Block",
              "src": "12388:62:353",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 77287,
                        "name": "ERC2771ContextUpgradeable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45607,
                        "src": "12405:25:353",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC2771ContextUpgradeable_$45607_$",
                          "typeString": "type(contract ERC2771ContextUpgradeable)"
                        }
                      },
                      "id": 77288,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_msgSender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45575,
                      "src": "12405:36:353",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 77289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12405:38:353",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 77286,
                  "id": 77290,
                  "nodeType": "Return",
                  "src": "12398:45:353"
                }
              ]
            },
            "baseFunctions": [
              45575,
              156029
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgSender",
            "nameLocation": "12228:10:353",
            "overrides": {
              "id": 77283,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 77281,
                  "name": "ContextUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 156044,
                  "src": "12304:18:353"
                },
                {
                  "id": 77282,
                  "name": "ERC2771ContextUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 45607,
                  "src": "12324:25:353"
                }
              ],
              "src": "12295:55:353"
            },
            "parameters": {
              "id": 77280,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12238:2:353"
            },
            "returnParameters": {
              "id": 77286,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77285,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "12376:6:353",
                  "nodeType": "VariableDeclaration",
                  "scope": 77292,
                  "src": "12368:14:353",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 77284,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12368:7:353",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12367:16:353"
            },
            "scope": 77306,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 77305,
            "nodeType": "FunctionDefinition",
            "src": "12456:227:353",
            "nodes": [],
            "body": {
              "id": 77304,
              "nodeType": "Block",
              "src": "12623:60:353",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 77300,
                        "name": "ERC2771ContextUpgradeable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45607,
                        "src": "12640:25:353",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC2771ContextUpgradeable_$45607_$",
                          "typeString": "type(contract ERC2771ContextUpgradeable)"
                        }
                      },
                      "id": 77301,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_msgData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45602,
                      "src": "12640:34:353",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_calldata_ptr_$",
                        "typeString": "function () view returns (bytes calldata)"
                      }
                    },
                    "id": 77302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12640:36:353",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_calldata_ptr",
                      "typeString": "bytes calldata"
                    }
                  },
                  "functionReturnParameters": 77299,
                  "id": 77303,
                  "nodeType": "Return",
                  "src": "12633:43:353"
                }
              ]
            },
            "baseFunctions": [
              45602,
              156038
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgData",
            "nameLocation": "12465:8:353",
            "overrides": {
              "id": 77296,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 77294,
                  "name": "ContextUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 156044,
                  "src": "12539:18:353"
                },
                {
                  "id": 77295,
                  "name": "ERC2771ContextUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 45607,
                  "src": "12559:25:353"
                }
              ],
              "src": "12530:55:353"
            },
            "parameters": {
              "id": 77293,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12473:2:353"
            },
            "returnParameters": {
              "id": 77299,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77298,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 77305,
                  "src": "12603:14:353",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 77297,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "12603:5:353",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12602:16:353"
            },
            "scope": 77306,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 76572,
              "name": "ILoyaltyCard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 75213,
              "src": "2049:12:353"
            },
            "id": 76573,
            "nodeType": "InheritanceSpecifier",
            "src": "2049:12:353"
          },
          {
            "baseName": {
              "id": 76574,
              "name": "ContractMetadata",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 17526,
              "src": "2067:16:353"
            },
            "id": 76575,
            "nodeType": "InheritanceSpecifier",
            "src": "2067:16:353"
          },
          {
            "baseName": {
              "id": 76576,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 21153,
              "src": "2089:7:353"
            },
            "id": 76577,
            "nodeType": "InheritanceSpecifier",
            "src": "2089:7:353"
          },
          {
            "baseName": {
              "id": 76578,
              "name": "Royalty",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 22395,
              "src": "2102:7:353"
            },
            "id": 76579,
            "nodeType": "InheritanceSpecifier",
            "src": "2102:7:353"
          },
          {
            "baseName": {
              "id": 76580,
              "name": "PrimarySale",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 22067,
              "src": "2115:11:353"
            },
            "id": 76581,
            "nodeType": "InheritanceSpecifier",
            "src": "2115:11:353"
          },
          {
            "baseName": {
              "id": 76582,
              "name": "PlatformFee",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 22005,
              "src": "2132:11:353"
            },
            "id": 76583,
            "nodeType": "InheritanceSpecifier",
            "src": "2132:11:353"
          },
          {
            "baseName": {
              "id": 76584,
              "name": "Multicall",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 20595,
              "src": "2149:9:353"
            },
            "id": 76585,
            "nodeType": "InheritanceSpecifier",
            "src": "2149:9:353"
          },
          {
            "baseName": {
              "id": 76586,
              "name": "PermissionsEnumerable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 21799,
              "src": "2164:21:353"
            },
            "id": 76587,
            "nodeType": "InheritanceSpecifier",
            "src": "2164:21:353"
          },
          {
            "baseName": {
              "id": 76588,
              "name": "ReentrancyGuardUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 150385,
              "src": "2191:26:353"
            },
            "id": 76589,
            "nodeType": "InheritanceSpecifier",
            "src": "2191:26:353"
          },
          {
            "baseName": {
              "id": 76590,
              "name": "ERC2771ContextUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 45607,
              "src": "2223:25:353"
            },
            "id": 76591,
            "nodeType": "InheritanceSpecifier",
            "src": "2223:25:353"
          },
          {
            "baseName": {
              "id": 76592,
              "name": "NFTMetadata",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 20704,
              "src": "2254:11:353"
            },
            "id": 76593,
            "nodeType": "InheritanceSpecifier",
            "src": "2254:11:353"
          },
          {
            "baseName": {
              "id": 76594,
              "name": "SignatureMintERC721Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 24157,
              "src": "2271:30:353"
            },
            "id": 76595,
            "nodeType": "InheritanceSpecifier",
            "src": "2271:30:353"
          },
          {
            "baseName": {
              "id": 76596,
              "name": "ERC721AUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 13623,
              "src": "2307:18:353"
            },
            "id": 76597,
            "nodeType": "InheritanceSpecifier",
            "src": "2307:18:353"
          }
        ],
        "canonicalName": "LoyaltyCard",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 76571,
          "nodeType": "StructuredDocumentation",
          "src": "1482:538:353",
          "text": "  @title LoyaltyCard\n  @custom:description This contract is a loyalty card NFT collection. Each NFT represents a loyalty card, and the NFT's metadata\n                      contains the loyalty card's information. A loyalty card's metadata can be updated by an admin of the contract.\n                      A loyalty card can be cancelled (i.e. 'burned') by its owner or an approved operator. A loyalty card can be revoked\n                      (i.e. 'burned') without its owner's approval, by an admin of the contract."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          77306,
          13623,
          102239,
          155478,
          155062,
          157249,
          157261,
          24157,
          33903,
          157205,
          20704,
          32947,
          13992,
          45607,
          156044,
          150385,
          150199,
          21799,
          21500,
          33281,
          33256,
          20595,
          32926,
          22005,
          33324,
          22067,
          33345,
          22395,
          33409,
          13973,
          13829,
          21153,
          33183,
          17526,
          32437,
          75213
        ],
        "name": "LoyaltyCard",
        "nameLocation": "2030:11:353",
        "scope": 77307,
        "usedErrors": [
          102180,
          102183,
          102186,
          102189,
          102192,
          102195,
          102198,
          102201,
          102204,
          102207,
          102210,
          102213,
          102216
        ]
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 353
}