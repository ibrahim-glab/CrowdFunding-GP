{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_defaultAdmin",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_timeUnit",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_rewardsPerUnitTime",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_stakingToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_rewardToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_nativeTokenWrapper",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "prevURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "newURI",
          "type": "string"
        }
      ],
      "name": "ContractURIUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "prevOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnerUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rewardAmount",
          "type": "uint256"
        }
      ],
      "name": "RewardsClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256[]",
          "name": "tokenIds",
          "type": "uint256[]"
        }
      ],
      "name": "TokensStaked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256[]",
          "name": "tokenIds",
          "type": "uint256[]"
        }
      ],
      "name": "TokensWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldRewardsPerUnitTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newRewardsPerUnitTime",
          "type": "uint256"
        }
      ],
      "name": "UpdatedRewardsPerUnitTime",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldTimeUnit",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newTimeUnit",
          "type": "uint256"
        }
      ],
      "name": "UpdatedTimeUnit",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "claimRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "depositRewardTokens",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRewardTokenBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRewardsPerUnitTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_rewardsPerUnitTime",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_staker",
          "type": "address"
        }
      ],
      "name": "getStakeInfo",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "_tokensStaked",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "_rewards",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTimeUnit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_timeUnit",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "indexedTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "isIndexed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "multicall",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "results",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nativeTokenWrapper",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "setContractURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "setOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_rewardsPerUnitTime",
          "type": "uint256"
        }
      ],
      "name": "setRewardsPerUnitTime",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_timeUnit",
          "type": "uint256"
        }
      ],
      "name": "setTimeUnit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "_tokenIds",
          "type": "uint256[]"
        }
      ],
      "name": "stake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "stakerAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "stakers",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "amountStaked",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "conditionIdOflastUpdate",
          "type": "uint64"
        },
        {
          "internalType": "uint128",
          "name": "timeOfLastUpdate",
          "type": "uint128"
        },
        {
          "internalType": "uint256",
          "name": "unclaimedRewards",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "stakersArray",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakingToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "_tokenIds",
          "type": "uint256[]"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawRewardTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "1637:5300:19:-:0;;;743:28:90;;;-1:-1:-1;;;;743:28:90;-1:-1:-1;;;743:28:90;;;2048:429:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;202:1:218;307:7;:22;2270:13:19;-1:-1:-1;;;;;1683:36:90;::::1;1675:69;;;::::0;-1:-1:-1;;;1675:69:90;;991:2:644;1675:69:90::1;::::0;::::1;973:21:644::0;1030:2;1010:18;;;1003:30;1069:22;1049:18;;;1042:50;1109:18;;1675:69:90::1;;;;;;;;;1754:12;:28:::0;;-1:-1:-1;;;;;;1754:28:90::1;-1:-1:-1::0;;;;;1754:28:90;;;::::1;::::0;;;::::1;::::0;;2295:26:19::1;2307:13:::0;2295:11:::1;:26::i;:::-;2331:52;2352:9:::0;2363:19;2331:20:::1;:52::i;:::-;2394:11;:26:::0;;-1:-1:-1;;;;;2394:26:19;;::::1;-1:-1:-1::0;;;;;;2394:26:19;;::::1;;::::0;;;2430:18:::1;:40:::0;;;;;::::1;::::0;::::1;;::::0;;-1:-1:-1;1637:5300:19;;-1:-1:-1;;;1637:5300:19;1421:172:68;1501:6;;;-1:-1:-1;;;;;1517:18:68;;;-1:-1:-1;;;;;;1517:18:68;;;;;;;1551:35;;1501:6;;;1517:18;1501:6;;1551:35;;1480:18;;1551:35;1470:123;1421:172;:::o;10140:589:90:-;10253:14;10245:47;;;;-1:-1:-1;;;10245:47:90;;1340:2:644;10245:47:90;;;1322:21:644;1379:2;1359:18;;;1352:30;1418:22;1398:18;;;1391:50;1458:18;;10245:47:90;1138:344:644;10245:47:90;10324:15;;;-1:-1:-1;;;10324:15:90;;-1:-1:-1;;;;;10324:15:90;;10368:1;;10324:15;10349:20;10368:1;10324:15;10349:20;:::i;:::-;;;-1:-1:-1;;;;;10349:20:90;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10413:188:90;;;;;;;;;;;;;;;;;;10546:15;10413:188;;;;;;-1:-1:-1;10413:188:90;;;;;;10380:30;;;:17;:30;;;;;;;:221;;;;;-1:-1:-1;10380:221:90;;;;;;;;;;;;;;;;10616:15;;10612:111;;10697:15;10647:17;:34;10665:15;10679:1;10665:11;:15;:::i;:::-;10647:34;;;;;;;;;;;-1:-1:-1;10647:34:90;:47;;:65;10612:111;10235:494;10140:589;;:::o;14:177:644:-;93:13;;-1:-1:-1;;;;;135:31:644;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:588::-;311:6;319;327;335;343;351;404:3;392:9;383:7;379:23;375:33;372:53;;;421:1;418;411:12;372:53;444:40;474:9;444:40;:::i;:::-;434:50;;524:2;513:9;509:18;503:25;493:35;;568:2;557:9;553:18;547:25;537:35;;591:49;636:2;625:9;621:18;591:49;:::i;:::-;581:59;;659:50;704:3;693:9;689:19;659:50;:::i;:::-;649:60;;728:50;773:3;762:9;758:19;728:50;:::i;:::-;718:60;;196:588;;;;;;;;:::o;1487:127::-;1548:10;1543:3;1539:20;1536:1;1529:31;1579:4;1576:1;1569:15;1603:4;1600:1;1593:15;1619:236;1658:3;-1:-1:-1;;;;;1724:10:644;;;1754;;;1784:12;;;1776:21;;1773:47;;;1800:18;;:::i;:::-;1836:13;;1619:236;-1:-1:-1;;;;1619:236:644:o;1860:125::-;1900:4;1928:1;1925;1922:8;1919:34;;;1933:18;;:::i;:::-;-1:-1:-1;1970:9:644;;1860:125::o;:::-;1637:5300:19;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106101355760003560e01c806301ffc9a7146101a05780630e8b229b146101d55780630fbf0a93146101f857806313af403514610218578063150b7a021461023857806316c621e01461027157806323ef258014610284578063372500ab146102a45780635357e916146102b95780636360106f146102e657806372f702f3146103065780638da5cb5b146103265780639168ae721461033b578063938e3d7b146103d157806393ce5343146103f15780639406704514610406578063961004d31461043c578063983d95ce1461045c578063ac9650d81461047c578063c3453153146104a9578063cb43b2dd146104d7578063d68124c7146104f7578063e8a3d4851461050c578063f7c618c11461052e578063f9ea29cb1461054e578063fd48ba171461056e57600080fd5b3661019b57600b546001600160a01b031633146101995760405162461bcd60e51b815260206004820181905260248201527f63616c6c6572206e6f74206e617469766520746f6b656e20777261707065722e60448201526064015b60405180910390fd5b005b600080fd5b3480156101ac57600080fd5b506101c06101bb366004612717565b61059e565b60405190151581526020015b60405180910390f35b3480156101e157600080fd5b506101ea6105d5565b6040519081526020016101cc565b34801561020457600080fd5b50610199610213366004612785565b61061d565b34801561022457600080fd5b506101996102333660046127dd565b610656565b34801561024457600080fd5b506102586102533660046127f8565b610686565b6040516001600160e01b031990911681526020016101cc565b61019961027f366004612892565b6106e9565b34801561029057600080fd5b5061019961029f366004612892565b610720565b3480156102b057600080fd5b50610199610848565b3480156102c557600080fd5b506102d96102d4366004612892565b61087d565b6040516101cc91906128ab565b3480156102f257600080fd5b50610199610301366004612892565b6108a7565b34801561031257600080fd5b506003546102d9906001600160a01b031681565b34801561033257600080fd5b506102d96109d0565b34801561034757600080fd5b506103986103563660046127dd565b600760205260009081526040902080546001909101546001600160401b0380831692600160401b810490911691600160801b9091046001600160801b03169084565b604080516001600160401b0395861681529490931660208501526001600160801b039091169183019190915260608201526080016101cc565b3480156103dd57600080fd5b506101996103ec3660046128d5565b6109df565b3480156103fd57600080fd5b50600c546101ea565b34801561041257600080fd5b506102d9610421366004612892565b6008602052600090815260409020546001600160a01b031681565b34801561044857600080fd5b506101ea610457366004612892565b610a0c565b34801561046857600080fd5b50610199610477366004612785565b610a2d565b34801561048857600080fd5b5061049c610497366004612785565b610a5d565b6040516101cc91906129dd565b3480156104b557600080fd5b506104c96104c43660046127dd565b610b51565b6040516101cc929190612a3f565b3480156104e357600080fd5b506101996104f2366004612892565b610d93565b34801561050357600080fd5b506101ea610dc2565b34801561051857600080fd5b50610521610e0a565b6040516101cc9190612a87565b34801561053a57600080fd5b50600a546102d9906001600160a01b031681565b34801561055a57600080fd5b50600b546102d9906001600160a01b031681565b34801561057a57600080fd5b506101c0610589366004612892565b60066020526000908152604090205460ff1681565b60006001600160e01b03198216630a85bd0160e11b14806105cf57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6000600960006001600360159054906101000a90046001600160401b03166105fd9190612ab0565b6001600160401b0316815260200190815260200160002060010154905090565b60028054141561063f5760405162461bcd60e51b815260040161019090612ad8565b6002805561064d8282610e98565b50506001600255565b61065e611251565b61067a5760405162461bcd60e51b815260040161019090612b0f565b61068381611274565b50565b600354600090600160a01b900460ff166002146106d75760405162461bcd60e51b815260206004820152600f60248201526e2234b932b1ba103a3930b739b332b960891b6044820152606401610190565b50630a85bd0160e11b95945050505050565b60028054141561070b5760405162461bcd60e51b815260040161019090612ad8565b60028055610718816112c6565b506001600255565b610728611251565b6107445760405162461bcd60e51b815260040161019090612b0f565b6000600960006001600360159054906101000a90046001600160401b031661076c9190612ab0565b6001600160401b031681526020808201929092526040908101600020815160808101835281548152600182015493810184905260028201549281019290925260030154606082015291508214156107f95760405162461bcd60e51b81526020600482015260116024820152702932bbb0b932103ab731b430b733b2b21760791b6044820152606401610190565b80516108059083611474565b602080820151604080519182529181018490527f243c4656edc72b2c7ec8575d464d955b2f42c1b205960c6c2fb7eecda5419cf691015b60405180910390a15050565b60028054141561086a5760405162461bcd60e51b815260040161019090612ad8565b60028055610876611579565b6001600255565b6005818154811061088d57600080fd5b6000918252602090912001546001600160a01b0316905081565b6108af611251565b6108cb5760405162461bcd60e51b815260040161019090612b0f565b6000600960006001600360159054906101000a90046001600160401b03166108f39190612ab0565b6001600160401b031681526020019081526020016000206040518060800160405290816000820154815260200160018201548152602001600282015481526020016003820154815250509050806000015182141561098a5760405162461bcd60e51b81526020600482015260146024820152732a34b6b296bab734ba103ab731b430b733b2b21760611b6044820152606401610190565b610998828260200151611474565b805160408051918252602082018490527fd968de290ed68f978b9e4816f7d4be9ef46189fe8eeb3eeb86199e7229cf2de0910161083c565b6001546001600160a01b031690565b6109e7611251565b610a035760405162461bcd60e51b815260040161019090612b0f565b610683816116a6565b60048181548110610a1c57600080fd5b600091825260209091200154905081565b600280541415610a4f5760405162461bcd60e51b815260040161019090612ad8565b6002805561064d828261177b565b6060816001600160401b03811115610a7757610a776128bf565b604051908082528060200260200182016040528015610aaa57816020015b6060815260200190600190039081610a955790505b50905060005b82811015610b4a57610b1a30858584818110610ace57610ace612b37565b9050602002810190610ae09190612b4d565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611bab92505050565b828281518110610b2c57610b2c612b37565b60200260200101819052508080610b4290612b93565b915050610ab0565b5092915050565b60606000806004805480602002602001604051908101604052809291908181526020018280548015610ba257602002820191906000526020600020905b815481526020019060010190808311610b8e575b50505050509050600081516001600160401b03811115610bc457610bc46128bf565b604051908082528060200260200182016040528015610bed578160200160208202803683370190505b5082519091506000805b82811015610cb657876001600160a01b031660086000878481518110610c1f57610c1f612b37565b6020026020010151815260200190815260200160002060009054906101000a90046001600160a01b03166001600160a01b031614848281518110610c6557610c65612b37565b602002602001019015159081151581525050838181518110610c8957610c89612b37565b602002602001015115610ca457610ca1600183612bae565b91505b80610cae81612b93565b915050610bf7565b50806001600160401b03811115610ccf57610ccf6128bf565b604051908082528060200260200182016040528015610cf8578160200160208202803683370190505b5095506000805b83811015610d7d57848181518110610d1957610d19612b37565b602002602001015115610d6b57858181518110610d3857610d38612b37565b6020026020010151888381518110610d5257610d52612b37565b6020908102919091010152610d68600183612bae565b91505b80610d7581612b93565b915050610cff565b50610d8788611bd7565b95505050505050915091565b600280541415610db55760405162461bcd60e51b815260040161019090612ad8565b6002805561071881611c50565b6000600960006001600360159054906101000a90046001600160401b0316610dea9190612ab0565b6001600160401b0316815260200190815260200160002060000154905090565b60008054610e1790612bc6565b80601f0160208091040260200160405190810160405280929190818152602001828054610e4390612bc6565b8015610e905780601f10610e6557610100808354040283529160200191610e90565b820191906000526020600020905b815481529060010190602001808311610e7357829003601f168201915b505050505081565b806001600160401b038116610ee25760405162461bcd60e51b815260206004820152601060248201526f5374616b696e67203020746f6b656e7360801b6044820152606401610190565b600354336000908152600760205260409020546001600160a01b03909116906001600160401b031615610f1d57610f1833611ccc565b610fdd565b6005805460018082019092557f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0018054336001600160a01b0319909116811790915560009081526007602052604090208054426001600160801b03908116600160801b029116179055600354610fa491906001600160401b03600160a81b90910416612ab0565b33600090815260076020526040902080546001600160401b0392909216600160401b02600160401b600160801b03199092169190911790555b60005b826001600160401b03168110156111aa576003805460ff60a01b1916600160a11b1790556001600160a01b0382166342842e0e333088888681811061102757611027612b37565b905060200201356040518463ffffffff1660e01b815260040161104c93929190612c01565b600060405180830381600087803b15801561106657600080fd5b505af115801561107a573d6000803e3d6000fd5b50506003805460ff60a01b1916600160a01b1790555061109990503390565b600860008787858181106110af576110af612b37565b90506020020135815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b03160217905550600660008686848181106110fe576110fe612b37565b602090810292909201358352508101919091526040016000205460ff1661119a5760016006600087878581811061113757611137612b37565b90506020020135815260200190815260200160002060006101000a81548160ff021916908315150217905550600485858381811061117757611177612b37565b835460018101855560009485526020948590209190940292909201359190920155505b6111a381612b93565b9050610fe0565b5033600090815260076020526040812080548492906111d39084906001600160401b0316612c25565b92506101000a8154816001600160401b0302191690836001600160401b031602179055508383604051611207929190612c50565b60405180910390206112163390565b6001600160a01b03167f540cd34f06460fd67aeca9d19e0a56cd3a7c1cde8dc2263f265b68b2ef3495d260405160405180910390a350505050565b600061125b6109d0565b6001600160a01b0316336001600160a01b031614905090565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b6112ce6109d0565b6001600160a01b0316336001600160a01b0316146112fe5760405162461bcd60e51b815260040161019090612b0f565b600a546000906001600160a01b031673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1461133857600a546001600160a01b0316611345565b600b546001600160a01b03165b90506000816001600160a01b03166370a08231306040518263ffffffff1660e01b815260040161137591906128ab565b602060405180830381865afa158015611392573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113b69190612c7c565b600a54600b549192506113db916001600160a01b039182169133913091889116611da2565b600081836001600160a01b03166370a08231306040518263ffffffff1660e01b815260040161140a91906128ab565b602060405180830381865afa158015611427573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061144b9190612c7c565b6114559190612c95565b905080600c60008282546114699190612bae565b909155505050505050565b816114b85760405162461bcd60e51b8152602060048201526014602482015273074696d652d756e69742063616e277420626520360641b6044820152606401610190565b60038054600160a81b90046001600160401b03169060019060156114dc8385612c25565b82546001600160401b039182166101009390930a9283029190920219909116179055506040805160808101825284815260208082018581524283850190815260006060850181815287825260099094529490942092518355516001830155915160028201559051600390910155801561157457426009600061155f600185612c95565b81526020810191909152604001600020600301555b505050565b600061158433611f19565b336000908152600760205260409020600101546115a19190612bae565b9050806115dd5760405162461bcd60e51b815260206004820152600a6024820152694e6f207265776172647360b01b6044820152606401610190565b3360009081526007602052604081208054426001600160801b03908116600160801b02911617815560019081019190915560035461162b9190600160a81b90046001600160401b0316612ab0565b33600081815260076020526040902080546001600160401b0393909316600160401b02600160401b600160801b03199093169290921790915561166e90826120a9565b60405181815233907ffc30cddea38e2bf4d6ea7d3f9ed3b6ad7f176419f4963bd81318067a4aee73fe9060200160405180910390a250565b60008080546116b490612bc6565b80601f01602080910402602001604051908101604052809291908181526020018280546116e090612bc6565b801561172d5780601f106117025761010080835404028352916020019161172d565b820191906000526020600020905b81548152906001019060200180831161171057829003601f168201915b505085519394506117499360009350602087019250905061267e565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a16818360405161083c929190612cac565b336000908152600760205260409020546001600160401b0390811690829081166117de5760405162461bcd60e51b81526020600482015260146024820152735769746864726177696e67203020746f6b656e7360601b6044820152606401610190565b806001600160401b03168210156118365760405162461bcd60e51b815260206004820152601c60248201527b15da5d1a191c985dda5b99c81b5bdc99481d1a185b881cdd185ad95960221b6044820152606401610190565b6003546001600160a01b031661184b33611ccc565b816001600160401b03168314156119ad57600060058054806020026020016040519081016040528092919081815260200182805480156118b457602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611896575b5050505050905060005b81518110156119aa57336001600160a01b03168282815181106118e3576118e3612b37565b60200260200101516001600160a01b0316141561199a5781600183516119099190612c95565b8151811061191957611919612b37565b60200260200101516005828154811061193457611934612b37565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550600580548061197357611973612cda565b600082815260209020810160001990810180546001600160a01b03191690550190556119aa565b6119a381612b93565b90506118be565b50505b33600090815260076020526040812080548492906119d59084906001600160401b0316612ab0565b92506101000a8154816001600160401b0302191690836001600160401b0316021790555060005b826001600160401b0316811015611b4f573360086000888885818110611a2457611a24612b37565b60209081029290920135835250810191909152604001600020546001600160a01b031614611a815760405162461bcd60e51b815260206004820152600a6024820152692737ba1039ba30b5b2b960b11b6044820152606401610190565b600060086000888885818110611a9957611a99612b37565b6020908102929092013583525081019190915260400160002080546001600160a01b0319166001600160a01b0392831617905582166342842e0e3033898986818110611ae757611ae7612b37565b905060200201356040518463ffffffff1660e01b8152600401611b0c93929190612c01565b600060405180830381600087803b158015611b2657600080fd5b505af1158015611b3a573d6000803e3d6000fd5b5050505080611b4890612b93565b90506119fc565b508484604051611b60929190612c50565b6040518091039020611b6f3390565b6001600160a01b03167f09ba0ae49142860d7eec1f3ce54722d70b60910facbe018cccb1099e4e84755c60405160405180910390a35050505050565b6060611bd08383604051806060016040528060278152602001612d8660279139612133565b9392505050565b6001600160a01b0381166000908152600760205260408120546001600160401b0316611c1c57506001600160a01b031660009081526007602052604090206001015490565b611c2582611f19565b6001600160a01b0383166000908152600760205260409020600101546105cf9190612bae565b919050565b611c586109d0565b6001600160a01b0316336001600160a01b031614611c885760405162461bcd60e51b815260040161019090612b0f565b600c548111611ca45780600c54611c9f9190612c95565b611ca7565b60005b600c55600a54600b54610683916001600160a01b039081169130913391869116611da2565b6000611cd782611f19565b6001600160a01b038316600090815260076020526040812060010180549293508392909190611d07908490612bae565b90915550506001600160a01b038216600090815260076020526040902080546001600160801b03428116600160801b029116179055600354611d5c906001906001600160401b03600160a81b90910416612ab0565b6001600160a01b03909216600090815260076020526040902080546001600160401b0393909316600160401b02600160401b600160801b03199093169290921790915550565b81611dac57611f12565b6001600160a01b03851673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1415611f06576001600160a01b038416301415611e4c57604051632e1a7d4d60e01b8152600481018390526001600160a01b03821690632e1a7d4d90602401600060405180830381600087803b158015611e2457600080fd5b505af1158015611e38573d6000803e3d6000fd5b50505050611e4783838361220e565b611f12565b6001600160a01b038316301415611efb57348214611ea25760405162461bcd60e51b81526020600482015260136024820152721b5cd9cb9d985b1d5948084f48185b5bdd5b9d606a1b6044820152606401610190565b806001600160a01b031663d0e30db0836040518263ffffffff1660e01b81526004016000604051808303818588803b158015611edd57600080fd5b505af1158015611ef1573d6000803e3d6000fd5b5050505050611f12565b611e4783838361220e565b611f12858585856122d9565b5050505050565b6001600160a01b0381166000908152600760209081526040808320815160808101835281546001600160401b038082168352600160401b82048116958301869052600160801b9091046001600160801b0316938201939093526001909101546060820152600354909291600160a81b90910416815b818110156120a05760008181526009602090815260408083208151608081018352815481526001820154938101939093526002810154918301919091526003015460608201529084831415611ff05785604001516001600160801b0316611ff6565b81604001515b9050600082606001516000141561200d5742612013565b82606001515b905060008061204989600001516001600160401b031685856120359190612c95565b61203f9190612cf0565b8660200151612337565b915091506000806120698c8860000151856120649190612d25565b61237f565b915091508380156120775750815b612081578b612083565b805b9b50505050505050506001816120999190612bae565b9050611f8e565b50505050919050565b600c548111156120f65760405162461bcd60e51b81526020600482015260186024820152774e6f7420656e6f7567682072657761726420746f6b656e7360401b6044820152606401610190565b80600c60008282546121089190612c95565b9091555050600a54600b5461212f916001600160a01b039081169130918691869116611da2565b5050565b606061213e8461239a565b6121995760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610190565b600080856001600160a01b0316856040516121b49190612d47565b600060405180830381855af49150503d80600081146121ef576040519150601f19603f3d011682016040523d82523d6000602084013e6121f4565b606091505b50915091506122048282866123a9565b9695505050505050565b6000836001600160a01b03168360405160006040518083038185875af1925050503d806000811461225b576040519150601f19603f3d011682016040523d82523d6000602084013e612260565b606091505b50509050806122d357816001600160a01b031663d0e30db0846040518263ffffffff1660e01b81526004016000604051808303818588803b1580156122a457600080fd5b505af11580156122b8573d6000803e3d6000fd5b506122d3935050506001600160a01b038416905085856123e2565b50505050565b816001600160a01b0316836001600160a01b031614156122f8576122d3565b6001600160a01b0383163014156123225761231d6001600160a01b03851683836123e2565b6122d3565b6122d36001600160a01b038516848484612445565b6000808361234b5750600190506000612378565b8383028385828161235e5761235e612d0f565b0414612371576000809250925050612378565b6001925090505b9250929050565b60008083830184811015612371576000809250925050612378565b6001600160a01b03163b151590565b606083156123b8575081611bd0565b8251156123c85782518084602001fd5b8160405162461bcd60e51b81526004016101909190612a87565b6040516001600160a01b03831660248201526044810182905261157490849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152612466565b6122d3846323b872dd60e01b85858560405160240161240e93929190612c01565b60006124bb826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166125389092919063ffffffff16565b80519091501561157457808060200190518101906124d99190612d63565b6115745760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610190565b6060612547848460008561254f565b949350505050565b6060824710156125b05760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610190565b6125b98561239a565b6126055760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610190565b600080866001600160a01b031685876040516126219190612d47565b60006040518083038185875af1925050503d806000811461265e576040519150601f19603f3d011682016040523d82523d6000602084013e612663565b606091505b50915091506126738282866123a9565b979650505050505050565b82805461268a90612bc6565b90600052602060002090601f0160209004810192826126ac57600085556126f2565b82601f106126c557805160ff19168380011785556126f2565b828001600101855582156126f2579182015b828111156126f25782518255916020019190600101906126d7565b506126fe929150612702565b5090565b5b808211156126fe5760008155600101612703565b60006020828403121561272957600080fd5b81356001600160e01b031981168114611bd057600080fd5b60008083601f84011261275357600080fd5b5081356001600160401b0381111561276a57600080fd5b6020830191508360208260051b850101111561237857600080fd5b6000806020838503121561279857600080fd5b82356001600160401b038111156127ae57600080fd5b6127ba85828601612741565b90969095509350505050565b80356001600160a01b0381168114611c4b57600080fd5b6000602082840312156127ef57600080fd5b611bd0826127c6565b60008060008060006080868803121561281057600080fd5b612819866127c6565b9450612827602087016127c6565b93506040860135925060608601356001600160401b038082111561284a57600080fd5b818801915088601f83011261285e57600080fd5b81358181111561286d57600080fd5b89602082850101111561287f57600080fd5b9699959850939650602001949392505050565b6000602082840312156128a457600080fd5b5035919050565b6001600160a01b0391909116815260200190565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156128e757600080fd5b81356001600160401b03808211156128fe57600080fd5b818401915084601f83011261291257600080fd5b813581811115612924576129246128bf565b604051601f8201601f19908116603f0116810190838211818310171561294c5761294c6128bf565b8160405282815287602084870101111561296557600080fd5b826020860160208301376000928101602001929092525095945050505050565b60005b838110156129a0578181015183820152602001612988565b838111156122d35750506000910152565b600081518084526129c9816020860160208601612985565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015612a3257603f19888603018452612a208583516129b1565b94509285019290850190600101612a04565b5092979650505050505050565b604080825283519082018190526000906020906060840190828701845b82811015612a7857815184529284019290840190600101612a5c565b50505092019290925292915050565b602081526000611bd060208301846129b1565b634e487b7160e01b600052601160045260246000fd5b60006001600160401b0383811690831681811015612ad057612ad0612a9a565b039392505050565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b6020808252600e908201526d139bdd08185d5d1a1bdc9a5e995960921b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b6000808335601e19843603018112612b6457600080fd5b8301803591506001600160401b03821115612b7e57600080fd5b60200191503681900382131561237857600080fd5b6000600019821415612ba757612ba7612a9a565b5060010190565b60008219821115612bc157612bc1612a9a565b500190565b600181811c90821680612bda57607f821691505b60208210811415612bfb57634e487b7160e01b600052602260045260246000fd5b50919050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b60006001600160401b03808316818516808303821115612c4757612c47612a9a565b01949350505050565b60006001600160fb1b03831115612c6657600080fd5b8260051b80858437600092019182525092915050565b600060208284031215612c8e57600080fd5b5051919050565b600082821015612ca757612ca7612a9a565b500390565b604081526000612cbf60408301856129b1565b8281036020840152612cd181856129b1565b95945050505050565b634e487b7160e01b600052603160045260246000fd5b6000816000190483118215151615612d0a57612d0a612a9a565b500290565b634e487b7160e01b600052601260045260246000fd5b600082612d4257634e487b7160e01b600052601260045260246000fd5b500490565b60008251612d59818460208701612985565b9190910192915050565b600060208284031215612d7557600080fd5b81518015158114611bd057600080fdfe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220f49c05d851241f5fa4334d06e0abca7b559a94d64e943dff22f6b670fe80116f64736f6c634300080c0033",
    "sourceMap": "1637:5300:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2620:18;;-1:-1:-1;;;;;2620:18:19;2606:10;:32;2598:77;;;;-1:-1:-1;;;2598:77:19;;216:2:644;2598:77:19;;;198:21:644;;;235:18;;;228:30;294:34;274:18;;;267:62;346:18;;2598:77:19;;;;;;;;;1637:5300;;;;;3772:203;;;;;;;;;;-1:-1:-1;3772:203:19;;;;;:::i;:::-;;:::i;:::-;;;831:14:644;;824:22;806:41;;794:2;779:18;3772:203:19;;;;;;;;5822:179:90;;;;;;;;;;;;;:::i;:::-;;;1004:25:644;;;992:2;977:18;5822:179:90;858:177:644;2182:101:90;;;;;;;;;;-1:-1:-1;2182:101:90;;;;;:::i;:::-;;:::i;1133:173:68:-;;;;;;;;;;-1:-1:-1;1133:173:68;;;;;:::i;:::-;;:::i;3505:261:19:-;;;;;;;;;;-1:-1:-1;3505:261:19;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;;3198:33:644;;;3180:52;;3168:2;3153:18;3505:261:19;3036:202:644;2731:165:19;;;;;;:::i;:::-;;:::i;3933:513:90:-;;;;;;;;;;-1:-1:-1;3933:513:90;;;;;:::i;:::-;;:::i;2831:78::-;;;;;;;;;;;;;:::i;1035:29::-;;;;;;;;;;-1:-1:-1;1035:29:90;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3187:446::-;;;;;;;;;;-1:-1:-1;3187:446:90;;;;;:::i;:::-;;:::i;646:27::-;;;;;;;;;;-1:-1:-1;646:27:90;;;;-1:-1:-1;;;;;646:27:90;;;871:86:68;;;;;;;;;;;;;:::i;1277:41:90:-;;;;;;;;;;-1:-1:-1;1277:41:90;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1277:41:90;;;;-1:-1:-1;;;1277:41:90;;;;;;-1:-1:-1;;;1277:41:90;;;-1:-1:-1;;;;;1277:41:90;;;;;;;;-1:-1:-1;;;;;3918:15:644;;;3900:34;;3970:15;;;;3965:2;3950:18;;3943:43;-1:-1:-1;;;;;4022:32:644;;;4002:18;;;3995:60;;;;4086:2;4071:18;;4064:34;3850:3;3835:19;1277:41:90;3636:468:644;1003:188:54;;;;;;;;;;-1:-1:-1;1003:188:54;;;;;:::i;:::-;;:::i;3191:124:19:-;;;;;;;;;;-1:-1:-1;3290:18:19;;3191:124;;1386:48:90;;;;;;;;;;-1:-1:-1;1386:48:90;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;1386:48:90;;;939:30;;;;;;;;;;-1:-1:-1;939:30:90;;;;;:::i;:::-;;:::i;2495:107::-;;;;;;;;;;-1:-1:-1;2495:107:90;;;;;:::i;:::-;;:::i;698:319:63:-;;;;;;;;;;-1:-1:-1;698:319:63;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4738:933:90:-;;;;;;;;;;-1:-1:-1;4738:933:90;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;2956:159:19:-;;;;;;;;;;-1:-1:-1;2956:159:19;;;;;:::i;:::-;;:::i;5677:139:90:-;;;;;;;;;;;;;:::i;565:34:54:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;1811:26:19:-;;;;;;;;;;-1:-1:-1;1811:26:19;;;;-1:-1:-1;;;;;1811:26:19;;;1907:33;;;;;;;;;;-1:-1:-1;1907:33:19;;;;-1:-1:-1;;;;;1907:33:19;;;1138:41:90;;;;;;;;;;-1:-1:-1;1138:41:90;;;;;:::i;:::-;;;;;;;;;;;;;;;;3772:203:19;3857:4;-1:-1:-1;;;;;;3880:48:19;;-1:-1:-1;;;3880:48:19;;:88;;-1:-1:-1;;;;;;;;;;947:40:22;;;3932:36:19;3873:95;3772:203;-1:-1:-1;;3772:203:19:o;5822:179:90:-;5876:27;5937:17;:38;5973:1;5955:15;;;;;;;;;-1:-1:-1;;;;;5955:15:90;:19;;;;:::i;:::-;-1:-1:-1;;;;;5937:38:90;;;;;;;;;;;;:57;;;5915:79;;5822:179;:::o;2182:101::-;245:1:218;548:7;;:19;;540:63;;;;-1:-1:-1;;;540:63:218;;;;;;;:::i;:::-;245:1;678:18;;2259:17:90::1;2266:9:::0;;2259:6:::1;:17::i;:::-;-1:-1:-1::0;;202:1:218;851:7;:22;2182:101:90:o;1133:173:68:-;1203:14;:12;:14::i;:::-;1198:70;;1233:24;;-1:-1:-1;;;1233:24:68;;;;;;;:::i;1198:70::-;1277:22;1289:9;1277:11;:22::i;:::-;1133:173;:::o;3505:261:19:-;3678:9;;3652:6;;-1:-1:-1;;;3678:9:19;;;;3691:1;3678:14;3670:42;;;;-1:-1:-1;;;3670:42:19;;9156:2:644;3670:42:19;;;9138:21:644;9195:2;9175:18;;;9168:30;-1:-1:-1;;;9214:18:644;;;9207:45;9269:18;;3670:42:19;8954:339:644;3670:42:19;-1:-1:-1;;;;3505:261:19;;;;;;;:::o;2731:165::-;245:1:218;548:7;;:19;;540:63;;;;-1:-1:-1;;;540:63:218;;;;;;;:::i;:::-;245:1;678:18;;2825:29:19::1;2846:7:::0;2825:20:::1;:29::i;:::-;-1:-1:-1::0;202:1:218;851:7;:22;2731:165:19:o;3933:513:90:-;4025:24;:22;:24::i;:::-;4020:80;;4065:24;;-1:-1:-1;;;4065:24:90;;;;;;;:::i;4020:80::-;4110:33;4146:17;:38;4182:1;4164:15;;;;;;;;;-1:-1:-1;;;;;4164:15:90;:19;;;;:::i;:::-;-1:-1:-1;;;;;4146:38:90;;;;;;;;;;;;;;;-1:-1:-1;4146:38:90;4110:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4202:51:90;;;4194:81;;;;-1:-1:-1;;;4194:81:90;;9500:2:644;4194:81:90;;;9482:21:644;9539:2;9519:18;;;9512:30;-1:-1:-1;;;9558:18:644;;;9551:47;9615:18;;4194:81:90;9298:341:644;4194:81:90;4307:18;;4286:61;;4327:19;4286:20;:61::i;:::-;4389:28;;;;;4363:76;;;9818:25:644;;;9859:18;;;9852:34;;;4363:76:90;;9791:18:644;4363:76:90;;;;;;;;4010:436;3933:513;:::o;2831:78::-;245:1:218;548:7;;:19;;540:63;;;;-1:-1:-1;;;540:63:218;;;;;;;:::i;:::-;245:1;678:18;;2887:15:90::1;:13;:15::i;:::-;202:1:218::0;851:7;:22;2831:78:90:o;1035:29::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1035:29:90;;-1:-1:-1;1035:29:90;:::o;3187:446::-;3259:24;:22;:24::i;:::-;3254:80;;3299:24;;-1:-1:-1;;;3299:24:90;;;;;;;:::i;3254:80::-;3344:33;3380:17;:38;3416:1;3398:15;;;;;;;;;-1:-1:-1;;;;;3398:15:90;:19;;;;:::i;:::-;-1:-1:-1;;;;;3380:38:90;;;;;;;;;;;;3344:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3449:9;:18;;;3436:9;:31;;3428:64;;;;-1:-1:-1;;;3428:64:90;;10099:2:644;3428:64:90;;;10081:21:644;10138:2;10118:18;;;10111:30;-1:-1:-1;;;10157:18:644;;;10150:50;10217:18;;3428:64:90;9897:344:644;3428:64:90;3503:61;3524:9;3535;:28;;;3503:20;:61::i;:::-;3596:18;;3580:46;;;9818:25:644;;;9874:2;9859:18;;9852:34;;;3580:46:90;;9791:18:644;3580:46:90;9644:248:644;871:86:68;944:6;;-1:-1:-1;;;;;944:6:68;;871:86::o;1003:188:54:-;1080:20;:18;:20::i;:::-;1075:76;;1116:24;;-1:-1:-1;;;1116:24:54;;;;;;;:::i;1075:76::-;1161:23;1179:4;1161:17;:23::i;939:30:90:-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;939:30:90;:::o;2495:107::-;245:1:218;548:7;;:19;;540:63;;;;-1:-1:-1;;;540:63:218;;;;;;;:::i;:::-;245:1;678:18;;2575:20:90::1;2585:9:::0;;2575::::1;:20::i;698:319:63:-:0;775:22;831:4;-1:-1:-1;;;;;819:24:63;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;809:34;;858:9;853:134;873:15;;;853:134;;;922:54;961:4;968;;973:1;968:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;922:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;922:30:63;;-1:-1:-1;;;922:54:63:i;:::-;909:7;917:1;909:10;;;;;;;;:::i;:::-;;;;;;:67;;;;890:3;;;;;:::i;:::-;;;;853:134;;;;698:319;;;;:::o;4738:933:90:-;4840:30;4872:16;4904:31;4938:13;4904:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4961:28;5003:14;:21;-1:-1:-1;;;;;4992:33:90;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4992:33:90;-1:-1:-1;5063:21:90;;4961:64;;-1:-1:-1;5035:25:90;;5133:194;5157:17;5153:1;:21;5133:194;;;5251:7;-1:-1:-1;;;;;5215:43:90;:13;:32;5229:14;5244:1;5229:17;;;;;;;;:::i;:::-;;;;;;;5215:32;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5215:32:90;-1:-1:-1;;;;;5215:43:90;;5195:14;5210:1;5195:17;;;;;;;;:::i;:::-;;;;;;:63;;;;;;;;;;;5276:14;5291:1;5276:17;;;;;;;;:::i;:::-;;;;;;;5272:44;;;5295:21;5315:1;5295:21;;:::i;:::-;;;5272:44;5176:3;;;;:::i;:::-;;;;5133:194;;;;5367:16;-1:-1:-1;;;;;5353:31:90;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5353:31:90;;5337:47;;5394:13;5426:9;5421:196;5445:17;5441:1;:21;5421:196;;;5487:14;5502:1;5487:17;;;;;;;;:::i;:::-;;;;;;;5483:124;;;5547:14;5562:1;5547:17;;;;;;;;:::i;:::-;;;;;;;5524:13;5538:5;5524:20;;;;;;;;:::i;:::-;;;;;;;;;;:40;5582:10;5591:1;5582:10;;:::i;:::-;;;5483:124;5464:3;;;;:::i;:::-;;;;5421:196;;;;5638:26;5656:7;5638:17;:26::i;:::-;5627:37;;4894:777;;;;;4738:933;;;:::o;2956:159:19:-;245:1:218;548:7;;:19;;540:63;;;;-1:-1:-1;;;540:63:218;;;;;;;:::i;:::-;245:1;678:18;;3043:30:19::1;3065:7:::0;3043:21:::1;:30::i;5677:139:90:-:0;5721:17;5762;:38;5798:1;5780:15;;;;;;;;;-1:-1:-1;;;;;5780:15:90;:19;;;;:::i;:::-;-1:-1:-1;;;;;5762:38:90;;;;;;;;;;;;:47;;;5750:59;;5677:139;:::o;565:34:54:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6252:1125:90:-;6345:9;-1:-1:-1;;;;;6380:8:90;;6372:37;;;;-1:-1:-1;;;6372:37:90;;11764:2:644;6372:37:90;;;11746:21:644;11803:2;11783:18;;;11776:30;-1:-1:-1;;;11822:18:644;;;11815:46;11878:18;;6372:37:90;11562:340:644;6372:37:90;6444:12;;12213:10;6420:21;6471:26;;;:7;:26;;;;;:39;-1:-1:-1;;;;;6444:12:90;;;;-1:-1:-1;;;;;6471:39:90;:43;6467:362;;6530:51;12213:10;6530:32;:51::i;:::-;6467:362;;;6612:12;:36;;;;;;;;;;;;;12213:10;-1:-1:-1;;;;;;6612:36:90;;;;;;;;-1:-1:-1;6662:26:90;;;:7;6612:36;6662:26;;;;:70;;6716:15;-1:-1:-1;;;;;6662:70:90;;;-1:-1:-1;;;6662:70:90;;;;;;6799:15;;:19;;6612:36;-1:-1:-1;;;;;;;;6799:15:90;;;;:19;:::i;:::-;12213:10;6746:26;;;;:7;:26;;;;;:72;;-1:-1:-1;;;;;6746:72:90;;;;-1:-1:-1;;;6746:72:90;-1:-1:-1;;;;;;;;6746:72:90;;;;;;;;;6467:362;6843:9;6838:419;6862:3;-1:-1:-1;;;;;6858:7:90;:1;:7;6838:419;;;6886:9;:13;;-1:-1:-1;;;;6886:13:90;-1:-1:-1;;;6886:13:90;;;-1:-1:-1;;;;;6913:39:90;;;12213:10;6980:4;6987:9;;6997:1;6987:12;;;;;;;:::i;:::-;;;;;;;6913:87;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7014:9:90;:13;;-1:-1:-1;;;;7014:13:90;-1:-1:-1;;;7014:13:90;;;-1:-1:-1;7072:17:90;;-1:-1:-1;12213:10:90;;12134:96;7072:17;7042:13;:27;7056:9;;7066:1;7056:12;;;;;;;:::i;:::-;;;;;;;7042:27;;;;;;;;;;;;:47;;;;;-1:-1:-1;;;;;7042:47:90;;;;;-1:-1:-1;;;;;7042:47:90;;;;;;7109:9;:23;7119:9;;7129:1;7119:12;;;;;;;:::i;:::-;;;;;;;;;;7109:23;;-1:-1:-1;7109:23:90;;;;;;;;-1:-1:-1;7109:23:90;;;;7104:143;;7178:4;7152:9;:23;7162:9;;7172:1;7162:12;;;;;;;:::i;:::-;;;;;;;7152:23;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;7200:13;7219:9;;7229:1;7219:12;;;;;;;:::i;:::-;7200:32;;;;;;;-1:-1:-1;7200:32:90;;;7219:12;7200:32;;;;7219:12;;;;;;;;;7200:32;;;;;-1:-1:-1;7104:143:90;6867:3;;;:::i;:::-;;;6838:419;;;-1:-1:-1;12213:10:90;7266:26;;;;:7;:26;;;;;:46;;7309:3;;7266:26;:46;;7309:3;;-1:-1:-1;;;;;7266:46:90;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;7266:46:90;;;;;-1:-1:-1;;;;;7266:46:90;;;;;;7360:9;;7328:42;;;;;;;:::i;:::-;;;;;;;;7341:17;12213:10;;12134:96;7341:17;-1:-1:-1;;;;;7328:42:90;;;;;;;;;;;6315:1062;;6252:1125;;:::o;6820:115:19:-;6884:4;6921:7;:5;:7::i;:::-;-1:-1:-1;;;;;6907:21:19;:10;-1:-1:-1;;;;;6907:21:19;;6900:28;;6820:115;:::o;1421:172:68:-;1501:6;;;-1:-1:-1;;;;;1517:18:68;;;-1:-1:-1;;;;;;1517:18:68;;;;;;;1551:35;;1501:6;;;1517:18;1501:6;;1551:35;;1480:18;;1551:35;1470:123;1421:172;:::o;5069:660:19:-;5165:7;:5;:7::i;:::-;-1:-1:-1;;;;;5151:21:19;:10;-1:-1:-1;;;;;5151:21:19;;5143:48;;;;-1:-1:-1;;;5143:48:19;;;;;;;:::i;:::-;5225:11;;5202:20;;-1:-1:-1;;;;;5225:11:19;408:42:284;5225:47:19;:82;;5296:11;;-1:-1:-1;;;;;5296:11:19;5225:82;;;5275:18;;-1:-1:-1;;;;;5275:18:19;5225:82;5202:105;;5318:21;5349:12;-1:-1:-1;;;;;5342:30:19;;5381:4;5342:45;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5458:11;;5555:18;;5318:69;;-1:-1:-1;5397:186:19;;-1:-1:-1;;;;;5458:11:19;;;;5483:10;;5515:4;;5534:7;;5555:18;5397:47;:186::i;:::-;5593:20;5664:13;5623:12;-1:-1:-1;;;;;5616:30:19;;5655:4;5616:45;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:61;;;;:::i;:::-;5593:84;;5710:12;5688:18;;:34;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;5069:660:19:o;10140:589:90:-;10253:14;10245:47;;;;-1:-1:-1;;;10245:47:90;;13454:2:644;10245:47:90;;;13436:21:644;13493:2;13473:18;;;13466:30;-1:-1:-1;;;13512:18:644;;;13505:50;13572:18;;10245:47:90;13252:344:644;10245:47:90;10324:15;;;-1:-1:-1;;;10324:15:90;;-1:-1:-1;;;;;10324:15:90;;10368:1;;10324:15;10349:20;10368:1;10324:15;10349:20;:::i;:::-;;;-1:-1:-1;;;;;10349:20:90;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10413:188:90;;;;;;;;;;;;;;;;;;10546:15;10413:188;;;;;;-1:-1:-1;10413:188:90;;;;;;10380:30;;;:17;:30;;;;;;;:221;;;;;-1:-1:-1;10380:221:90;;;;;;;;;;;;;;;;10616:15;;10612:111;;10697:15;10647:17;:34;10665:15;10679:1;10665:11;:15;:::i;:::-;10647:34;;;;;;;;;;;-1:-1:-1;10647:34:90;:47;;:65;10612:111;10235:494;10140:589;;:::o;8765:534::-;8817:15;8881:36;12213:10;8881:17;:36::i;:::-;12213:10;8835:26;;;;:7;:26;;;;;:43;;;:82;;;;:::i;:::-;8817:100;-1:-1:-1;8936:12:90;8928:35;;;;-1:-1:-1;;;8928:35:90;;13803:2:644;8928:35:90;;;13785:21:644;13842:2;13822:18;;;13815:30;-1:-1:-1;;;13861:18:644;;;13854:40;13911:18;;8928:35:90;13601:334:644;8928:35:90;12213:10;8974:26;;;;:7;:26;;;;;:70;;9028:15;-1:-1:-1;;;;;8974:70:90;;;-1:-1:-1;;;8974:70:90;;;;;;-1:-1:-1;9054:43:90;;;:47;;;;9164:15;;:19;;-1:-1:-1;;;;9164:15:90;;-1:-1:-1;;;;;9164:15:90;:19;:::i;:::-;12213:10;9111:26;;;;:7;:26;;;;;:72;;-1:-1:-1;;;;;9111:72:90;;;;-1:-1:-1;;;9111:72:90;-1:-1:-1;;;;;;;;9111:72:90;;;;;;;;;;9194:40;;9226:7;9194:12;:40::i;:::-;9250:42;;1004:25:644;;;12213:10:90;;9250:42;;992:2:644;977:18;9250:42:90;;;;;;;8807:492;8765:534::o;1273:185:54:-;1339:21;1363:11;1339:35;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1384:18:54;;1339:35;;-1:-1:-1;1384:18:54;;:11;;-1:-1:-1;1384:18:54;;;;-1:-1:-1;1384:18:54;-1:-1:-1;1384:18:54;:::i;:::-;;1418:33;1437:7;1446:4;1418:33;;;;;;;:::i;7442:1246:90:-;12213:10;7518:21;7542:26;;;:7;:26;;;;;:39;-1:-1:-1;;;;;7542:39:90;;;;7611:9;;7646:8;;7638:41;;;;-1:-1:-1;;;7638:41:90;;14528:2:644;7638:41:90;;;14510:21:644;14567:2;14547:18;;;14540:30;-1:-1:-1;;;14586:18:644;;;14579:50;14646:18;;7638:41:90;14326:344:644;7638:41:90;7714:3;-1:-1:-1;;;;;7697:20:90;:13;:20;;7689:61;;;;-1:-1:-1;;;7689:61:90;;14877:2:644;7689:61:90;;;14859:21:644;14916:2;14896:18;;;14889:30;-1:-1:-1;;;14935:18:644;;;14928:58;15003:18;;7689:61:90;14675:352:644;7689:61:90;7785:12;;-1:-1:-1;;;;;7785:12:90;7808:51;12213:10;6530:32;:51::i;7808:::-;7891:3;-1:-1:-1;;;;;7874:20:90;:13;:20;7870:400;;;7910:30;7943:12;7910:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7910:45:90;;;;;;;;;;;;;;;;;;;;;;;7974:9;7969:291;7993:13;:20;7989:1;:24;7969:291;;;12213:10;-1:-1:-1;;;;;8042:37:90;:13;8056:1;8042:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;8042:37:90;;8038:208;;;8121:13;8158:1;8135:13;:20;:24;;;;:::i;:::-;8121:39;;;;;;;;:::i;:::-;;;;;;;8103:12;8116:1;8103:15;;;;;;;;:::i;:::-;;;;;;;;;:57;;;;;-1:-1:-1;;;;;8103:57:90;;;;;-1:-1:-1;;;;;8103:57:90;;;;;;8182:12;:18;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;8182:18:90;;;;;-1:-1:-1;;;;;;8182:18:90;;;;;;8222:5;;8038:208;8015:3;;;:::i;:::-;;;7969:291;;;;7896:374;7870:400;12213:10;8279:26;;;;:7;:26;;;;;:46;;8322:3;;8279:26;:46;;8322:3;;-1:-1:-1;;;;;8279:46:90;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;8279:46:90;;;;;-1:-1:-1;;;;;8279:46:90;;;;;;8341:9;8336:285;8360:3;-1:-1:-1;;;;;8356:7:90;:1;:7;8336:285;;;12213:10;8392:13;:27;8406:9;;8416:1;8406:12;;;;;;;:::i;:::-;;;;;;;;;;8392:27;;-1:-1:-1;8392:27:90;;;;;;;;-1:-1:-1;8392:27:90;;-1:-1:-1;;;;;8392:27:90;:48;8384:71;;;;-1:-1:-1;;;8384:71:90;;15366:2:644;8384:71:90;;;15348:21:644;15405:2;15385:18;;;15378:30;-1:-1:-1;;;15424:18:644;;;15417:40;15474:18;;8384:71:90;15164:334:644;8384:71:90;8507:1;8469:13;:27;8483:9;;8493:1;8483:12;;;;;;;:::i;:::-;;;;;;;;;;8469:27;;-1:-1:-1;8469:27:90;;;;;;;;-1:-1:-1;8469:27:90;:40;;-1:-1:-1;;;;;;8469:40:90;-1:-1:-1;;;;;8469:40:90;;;;;;8523:39;;;8571:4;12213:10;8597:9;;8607:1;8597:12;;;;;;;:::i;:::-;;;;;;;8523:87;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8365:3;;;;:::i;:::-;;;8336:285;;;;8671:9;;8636:45;;;;;;;:::i;:::-;;;;;;;;8652:17;12213:10;;12134:96;8652:17;-1:-1:-1;;;;;8636:45:90;;;;;;;;;;;7508:1180;;;7442:1246;;:::o;6538:198:288:-;6621:12;6652:77;6673:6;6681:4;6652:77;;;;;;;;;;;;;;;;;:20;:77::i;:::-;6645:84;6538:198;-1:-1:-1;;;6538:198:288:o;9353:312:90:-;-1:-1:-1;;;;;9458:14:90;;9426:16;9458:14;;;:7;:14;;;;;:27;-1:-1:-1;;;;;9458:27:90;9454:205;;-1:-1:-1;;;;;;9517:14:90;;;;;:7;:14;;;;;:31;;;;9353:312::o;9454:205::-;9624:24;9642:5;9624:17;:24::i;:::-;-1:-1:-1;;;;;9590:14:90;;;;;;:7;:14;;;;;:31;;;:58;;;;:::i;9454:205::-;9353:312;;;:::o;5818:481:19:-;5915:7;:5;:7::i;:::-;-1:-1:-1;;;;;5901:21:19;:10;-1:-1:-1;;;;;5901:21:19;;5893:48;;;;-1:-1:-1;;;5893:48:19;;;;;;;:::i;:::-;6042:18;;6032:7;:28;:63;;6088:7;6067:18;;:28;;;;:::i;:::-;6032:63;;;6063:1;6032:63;6011:18;:84;6167:11;;6264:18;;6106:186;;-1:-1:-1;;;;;6167:11:19;;;;6200:4;;6219:10;;6243:7;;6264:18;6106:47;:186::i;9764:333:90:-;9850:15;9868:26;9886:7;9868:17;:26::i;:::-;-1:-1:-1;;;;;9904:16:90;;;;;;:7;:16;;;;;:33;;:44;;9850;;-1:-1:-1;9850:44:90;;9904:33;;:16;:44;;9850;;9904;:::i;:::-;;;;-1:-1:-1;;;;;;;9958:16:90;;;;;;:7;:16;;;;;:60;;-1:-1:-1;;;;;10002:15:90;9958:60;;-1:-1:-1;;;9958:60:90;;;;;;10071:15;;:19;;-1:-1:-1;;;;;;;;;;10071:15:90;;;;:19;:::i;:::-;-1:-1:-1;;;;;10028:16:90;;;;;;;:7;:16;;;;;:62;;-1:-1:-1;;;;;10028:62:90;;;;-1:-1:-1;;;10028:62:90;-1:-1:-1;;;;;;;;10028:62:90;;;;;;;;;;-1:-1:-1;9764:333:90:o;979:1021:284:-;1178:12;1174:49;;1206:7;;1174:49;-1:-1:-1;;;;;1237:25:284;;408:42;1237:25;1233:761;;;-1:-1:-1;;;;;1282:22:284;;1299:4;1282:22;1278:626;;;1412:44;;-1:-1:-1;;;1412:44:284;;;;;1004:25:644;;;-1:-1:-1;;;;;1412:35:284;;;;;977:18:644;;1412:44:284;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1474:69;1509:3;1514:7;1523:19;1474:34;:69::i;:::-;1233:761;;1278:626;-1:-1:-1;;;;;1568:20:284;;1583:4;1568:20;1564:340;;;1676:9;1665:7;:20;1657:52;;;;-1:-1:-1;;;1657:52:284;;15705:2:644;1657:52:284;;;15687:21:644;15744:2;15724:18;;;15717:30;-1:-1:-1;;;15763:18:644;;;15756:49;15822:18;;1657:52:284;15503:343:644;1657:52:284;1733:19;-1:-1:-1;;;;;1727:34:284;;1770:7;1727:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1233:761;;1564:340;1820:69;1855:3;1860:7;1869:19;1820:34;:69::i;1233:761::-;1934:49;1952:9;1963:5;1970:3;1975:7;1934:17;:49::i;:::-;979:1021;;;;;:::o;10780:1047:90:-;-1:-1:-1;;;;;10906:16:90;;10855;10906;;;:7;:16;;;;;;;;10883:39;;;;;;;;;-1:-1:-1;;;;;10883:39:90;;;;;-1:-1:-1;;;10883:39:90;;;;;;;;;;-1:-1:-1;;;10883:39:90;;;-1:-1:-1;;;;;10883:39:90;;;;;;;;;;;;;;;;;11029:15;;10883:39;;;-1:-1:-1;;;11029:15:90;;;;10883:39;11055:766;11096:16;11092:1;:20;11055:766;;;11136:33;11172:20;;;:17;:20;;;;;;;;11136:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11227:23;;;;:76;;11280:6;:23;;;-1:-1:-1;;;;;11227:76:90;;;;11253:9;:24;;;11227:76;11207:96;;11317:15;11335:9;:22;;;11361:1;11335:27;;:70;;11390:15;11335:70;;;11365:9;:22;;;11335:70;11317:88;;11421:22;11445;11471:136;11528:6;:19;;;-1:-1:-1;;;;;11504:43:90;11515:9;11505:7;:19;;;;:::i;:::-;11504:43;;;;:::i;:::-;11565:9;:28;;;11471:15;:136::i;:::-;11420:187;;;;11622:18;11642;11664:62;11680:8;11707:9;:18;;;11690:14;:35;;;;:::i;:::-;11664:15;:62::i;:::-;11621:105;;;;11752:17;:34;;;;;11773:13;11752:34;:58;;11802:8;11752:58;;;11789:10;11752:58;11741:69;;11122:699;;;;;;;11119:1;11114:6;;;;;:::i;:::-;;;11055:766;;;;10873:954;;;10780:1047;;;:::o;4402:401:19:-;4515:18;;4503:8;:30;;4495:67;;;;-1:-1:-1;;;4495:67:19;;16580:2:644;4495:67:19;;;16562:21:644;16619:2;16599:18;;;16592:30;-1:-1:-1;;;16638:18:644;;;16631:54;16702:18;;4495:67:19;16378:348:644;4495:67:19;4594:8;4572:18;;:30;;;;;;;:::i;:::-;;;;-1:-1:-1;;4673:11:19;;4768:18;;4612:184;;-1:-1:-1;;;;;4673:11:19;;;;4706:4;;4725:7;;4746:8;;4768:18;4612:47;:184::i;:::-;4402:401;;:::o;6922:387:288:-;7063:12;7095:18;7106:6;7095:10;:18::i;:::-;7087:69;;;;-1:-1:-1;;;7087:69:288;;16933:2:644;7087:69:288;;;16915:21:644;16972:2;16952:18;;;16945:30;17011:34;16991:18;;;16984:62;-1:-1:-1;;;17062:18:644;;;17055:36;17108:19;;7087:69:288;16731:402:644;7087:69:288;7168:12;7182:23;7209:6;-1:-1:-1;;;;;7209:19:288;7229:4;7209:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7167:67;;;;7251:51;7268:7;7277:10;7289:12;7251:16;:51::i;:::-;7244:58;6922:387;-1:-1:-1;;;;;;6922:387:288:o;2916:469:284:-;3168:12;3186:2;-1:-1:-1;;;;;3186:7:284;3202:5;3186:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3167:46;;;3228:7;3223:156;;3257:19;-1:-1:-1;;;;;3251:34:284;;3294:5;3251:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3317:51:284;;-1:-1:-1;;;;;;;;3317:40:284;;;-1:-1:-1;3358:2:284;3362:5;3317:40;:51::i;:::-;3055:330;2916:469;;;:::o;2073:396::-;2234:3;-1:-1:-1;;;;;2225:12:284;:5;-1:-1:-1;;;;;2225:12:284;;2221:49;;;2253:7;;2221:49;-1:-1:-1;;;;;2284:22:284;;2301:4;2284:22;2280:183;;;2322:44;-1:-1:-1;;;;;2322:30:284;;2353:3;2358:7;2322:30;:44::i;:::-;2280:183;;;2397:55;-1:-1:-1;;;;;2397:34:284;;2432:5;2439:3;2444:7;2397:34;:55::i;1339:493:241:-;1400:4;;1683:6;1679:28;;-1:-1:-1;1699:4:241;;-1:-1:-1;1705:1:241;1691:16;;1679:28;1733:5;;;1737:1;1733;:5;:1;1756:5;;;;:::i;:::-;;:10;1752:33;;1776:5;1783:1;1768:17;;;;;;;1752:33;1807:4;;-1:-1:-1;1813:1:241;-1:-1:-1;1339:493:241;;;;;;:::o;641:216::-;702:4;;763:5;;;786;;;782:28;;;801:5;808:1;793:17;;;;;;;1137:320:288;-1:-1:-1;;;;;1427:19:288;;:23;;;1137:320::o;7529:692::-;7675:12;7703:7;7699:516;;;-1:-1:-1;7733:10:288;7726:17;;7699:516;7844:17;;:21;7840:365;;8038:10;8032:17;8098:15;8085:10;8081:2;8077:19;8070:44;7840:365;8177:12;8170:20;;-1:-1:-1;;;8170:20:288;;;;;;;;:::i;735:205:226:-;874:58;;-1:-1:-1;;;;;17819:32:644;;874:58:226;;;17801:51:644;17868:18;;;17861:34;;;847:86:226;;867:5;;-1:-1:-1;;;897:23:226;17774:18:644;;874:58:226;;;;-1:-1:-1;;874:58:226;;;;;;;;;;;;;;-1:-1:-1;;;;;874:58:226;-1:-1:-1;;;;;;874:58:226;;;;;;;;;;847:19;:86::i;946:241::-;1084:96;1104:5;1134:27;;;1163:4;1169:2;1173:5;1111:68;;;;;;;;;;:::i;3241:706::-;3660:23;3686:69;3714:4;3686:69;;;;;;;;;;;;;;;;;3694:5;-1:-1:-1;;;;;3686:27:226;;;:69;;;;;:::i;:::-;3769:17;;3660:95;;-1:-1:-1;3769:21:226;3765:176;;3864:10;3853:30;;;;;;;;;;;;:::i;:::-;3845:85;;;;-1:-1:-1;;;3845:85:226;;18390:2:644;3845:85:226;;;18372:21:644;18429:2;18409:18;;;18402:30;18468:34;18448:18;;;18441:62;-1:-1:-1;;;18519:18:644;;;18512:40;18569:19;;3845:85:226;18188:406:644;3827:223:288;3960:12;3991:52;4013:6;4021:4;4027:1;4030:12;3991:21;:52::i;:::-;3984:59;3827:223;-1:-1:-1;;;;3827:223:288:o;4914:501::-;5079:12;5136:5;5111:21;:30;;5103:81;;;;-1:-1:-1;;;5103:81:288;;18801:2:644;5103:81:288;;;18783:21:644;18840:2;18820:18;;;18813:30;18879:34;18859:18;;;18852:62;-1:-1:-1;;;18930:18:644;;;18923:36;18976:19;;5103:81:288;18599:402:644;5103:81:288;5202:18;5213:6;5202:10;:18::i;:::-;5194:60;;;;-1:-1:-1;;;5194:60:288;;19208:2:644;5194:60:288;;;19190:21:644;19247:2;19227:18;;;19220:30;19286:31;19266:18;;;19259:59;19335:18;;5194:60:288;19006:353:644;5194:60:288;5266:12;5280:23;5307:6;-1:-1:-1;;;;;5307:11:288;5327:5;5335:4;5307:33;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5265:75;;;;5357:51;5374:7;5383:10;5395:12;5357:16;:51::i;:::-;5350:58;4914:501;-1:-1:-1;;;;;;;4914:501:288:o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;375:286:644;433:6;486:2;474:9;465:7;461:23;457:32;454:52;;;502:1;499;492:12;454:52;528:23;;-1:-1:-1;;;;;;580:32:644;;570:43;;560:71;;627:1;624;617:12;1040:367;1103:8;1113:6;1167:3;1160:4;1152:6;1148:17;1144:27;1134:55;;1185:1;1182;1175:12;1134:55;-1:-1:-1;1208:20:644;;-1:-1:-1;;;;;1240:30:644;;1237:50;;;1283:1;1280;1273:12;1237:50;1320:4;1312:6;1308:17;1296:29;;1380:3;1373:4;1363:6;1360:1;1356:14;1348:6;1344:27;1340:38;1337:47;1334:67;;;1397:1;1394;1387:12;1412:437;1498:6;1506;1559:2;1547:9;1538:7;1534:23;1530:32;1527:52;;;1575:1;1572;1565:12;1527:52;1615:9;1602:23;-1:-1:-1;;;;;1640:6:644;1637:30;1634:50;;;1680:1;1677;1670:12;1634:50;1719:70;1781:7;1772:6;1761:9;1757:22;1719:70;:::i;:::-;1808:8;;1693:96;;-1:-1:-1;1412:437:644;-1:-1:-1;;;;1412:437:644:o;1854:173::-;1922:20;;-1:-1:-1;;;;;1971:31:644;;1961:42;;1951:70;;2017:1;2014;2007:12;2032:186;2091:6;2144:2;2132:9;2123:7;2119:23;2115:32;2112:52;;;2160:1;2157;2150:12;2112:52;2183:29;2202:9;2183:29;:::i;2223:808::-;2320:6;2328;2336;2344;2352;2405:3;2393:9;2384:7;2380:23;2376:33;2373:53;;;2422:1;2419;2412:12;2373:53;2445:29;2464:9;2445:29;:::i;:::-;2435:39;;2493:38;2527:2;2516:9;2512:18;2493:38;:::i;:::-;2483:48;;2578:2;2567:9;2563:18;2550:32;2540:42;;2633:2;2622:9;2618:18;2605:32;-1:-1:-1;;;;;2697:2:644;2689:6;2686:14;2683:34;;;2713:1;2710;2703:12;2683:34;2751:6;2740:9;2736:22;2726:32;;2796:7;2789:4;2785:2;2781:13;2777:27;2767:55;;2818:1;2815;2808:12;2767:55;2858:2;2845:16;2884:2;2876:6;2873:14;2870:34;;;2900:1;2897;2890:12;2870:34;2945:7;2940:2;2931:6;2927:2;2923:15;2919:24;2916:37;2913:57;;;2966:1;2963;2956:12;2913:57;2223:808;;;;-1:-1:-1;2223:808:644;;-1:-1:-1;2997:2:644;2989:11;;3019:6;2223:808;-1:-1:-1;;;2223:808:644:o;3243:180::-;3302:6;3355:2;3343:9;3334:7;3330:23;3326:32;3323:52;;;3371:1;3368;3361:12;3323:52;-1:-1:-1;3394:23:644;;3243:180;-1:-1:-1;3243:180:644:o;3428:203::-;-1:-1:-1;;;;;3592:32:644;;;;3574:51;;3562:2;3547:18;;3428:203::o;4109:127::-;4170:10;4165:3;4161:20;4158:1;4151:31;4201:4;4198:1;4191:15;4225:4;4222:1;4215:15;4241:922;4310:6;4363:2;4351:9;4342:7;4338:23;4334:32;4331:52;;;4379:1;4376;4369:12;4331:52;4419:9;4406:23;-1:-1:-1;;;;;4489:2:644;4481:6;4478:14;4475:34;;;4505:1;4502;4495:12;4475:34;4543:6;4532:9;4528:22;4518:32;;4588:7;4581:4;4577:2;4573:13;4569:27;4559:55;;4610:1;4607;4600:12;4559:55;4646:2;4633:16;4668:2;4664;4661:10;4658:36;;;4674:18;;:::i;:::-;4749:2;4743:9;4717:2;4803:13;;-1:-1:-1;;4799:22:644;;;4823:2;4795:31;4791:40;4779:53;;;4847:18;;;4867:22;;;4844:46;4841:72;;;4893:18;;:::i;:::-;4933:10;4929:2;4922:22;4968:2;4960:6;4953:18;5008:7;5003:2;4998;4994;4990:11;4986:20;4983:33;4980:53;;;5029:1;5026;5019:12;4980:53;5085:2;5080;5076;5072:11;5067:2;5059:6;5055:15;5042:46;5130:1;5108:15;;;5125:2;5104:24;5097:35;;;;-1:-1:-1;5112:6:644;4241:922;-1:-1:-1;;;;;4241:922:644:o;5621:258::-;5693:1;5703:113;5717:6;5714:1;5711:13;5703:113;;;5793:11;;;5787:18;5774:11;;;5767:39;5739:2;5732:10;5703:113;;;5834:6;5831:1;5828:13;5825:48;;;-1:-1:-1;;5869:1:644;5851:16;;5844:27;5621:258::o;5884:257::-;5925:3;5963:5;5957:12;5990:6;5985:3;5978:19;6006:63;6062:6;6055:4;6050:3;6046:14;6039:4;6032:5;6028:16;6006:63;:::i;:::-;6123:2;6102:15;-1:-1:-1;;6098:29:644;6089:39;;;;6130:4;6085:50;;5884:257;-1:-1:-1;;5884:257:644:o;6146:800::-;6306:4;6335:2;6375;6364:9;6360:18;6405:2;6394:9;6387:21;6428:6;6463;6457:13;6494:6;6486;6479:22;6532:2;6521:9;6517:18;6510:25;;6594:2;6584:6;6581:1;6577:14;6566:9;6562:30;6558:39;6544:53;;6632:2;6624:6;6620:15;6653:1;6663:254;6677:6;6674:1;6671:13;6663:254;;;6770:2;6766:7;6754:9;6746:6;6742:22;6738:36;6733:3;6726:49;6798:39;6830:6;6821;6815:13;6798:39;:::i;:::-;6788:49;-1:-1:-1;6895:12:644;;;;6860:15;;;;6699:1;6692:9;6663:254;;;-1:-1:-1;6934:6:644;;6146:800;-1:-1:-1;;;;;;;6146:800:644:o;6951:705::-;7169:2;7181:21;;;7251:13;;7154:18;;;7273:22;;;7121:4;;7348;;7326:2;7311:18;;;7375:15;;;7121:4;7418:169;7432:6;7429:1;7426:13;7418:169;;;7493:13;;7481:26;;7527:12;;;;7562:15;;;;7454:1;7447:9;7418:169;;;-1:-1:-1;;;7623:18:644;;7616:34;;;;7604:3;6951:705;-1:-1:-1;;6951:705:644:o;7661:219::-;7810:2;7799:9;7792:21;7773:4;7830:44;7870:2;7859:9;7855:18;7847:6;7830:44;:::i;7885:127::-;7946:10;7941:3;7937:20;7934:1;7927:31;7977:4;7974:1;7967:15;8001:4;7998:1;7991:15;8017:229;8056:4;-1:-1:-1;;;;;8153:10:644;;;;8123;;8175:12;;;8172:38;;;8190:18;;:::i;:::-;8227:13;;8017:229;-1:-1:-1;;;8017:229:644:o;8251:355::-;8453:2;8435:21;;;8492:2;8472:18;;;8465:30;8531:33;8526:2;8511:18;;8504:61;8597:2;8582:18;;8251:355::o;8611:338::-;8813:2;8795:21;;;8852:2;8832:18;;;8825:30;-1:-1:-1;;;8886:2:644;8871:18;;8864:44;8940:2;8925:18;;8611:338::o;10246:127::-;10307:10;10302:3;10298:20;10295:1;10288:31;10338:4;10335:1;10328:15;10362:4;10359:1;10352:15;10378:521;10455:4;10461:6;10521:11;10508:25;10615:2;10611:7;10600:8;10584:14;10580:29;10576:43;10556:18;10552:68;10542:96;;10634:1;10631;10624:12;10542:96;10661:33;;10713:20;;;-1:-1:-1;;;;;;10745:30:644;;10742:50;;;10788:1;10785;10778:12;10742:50;10821:4;10809:17;;-1:-1:-1;10852:14:644;10848:27;;;10838:38;;10835:58;;;10889:1;10886;10879:12;10904:135;10943:3;-1:-1:-1;;10964:17:644;;10961:43;;;10984:18;;:::i;:::-;-1:-1:-1;11031:1:644;11020:13;;10904:135::o;11044:128::-;11084:3;11115:1;11111:6;11108:1;11105:13;11102:39;;;11121:18;;:::i;:::-;-1:-1:-1;11157:9:644;;11044:128::o;11177:380::-;11256:1;11252:12;;;;11299;;;11320:61;;11374:4;11366:6;11362:17;11352:27;;11320:61;11427:2;11419:6;11416:14;11396:18;11393:38;11390:161;;;11473:10;11468:3;11464:20;11461:1;11454:31;11508:4;11505:1;11498:15;11536:4;11533:1;11526:15;11390:161;;11177:380;;;:::o;11907:375::-;-1:-1:-1;;;;;12165:15:644;;;12147:34;;12217:15;;;;12212:2;12197:18;;12190:43;12264:2;12249:18;;12242:34;;;;12097:2;12082:18;;11907:375::o;12287:236::-;12326:3;-1:-1:-1;;;;;12399:2:644;12396:1;12392:10;12429:2;12426:1;12422:10;12460:3;12456:2;12452:12;12447:3;12444:21;12441:47;;;12468:18;;:::i;:::-;12504:13;;12287:236;-1:-1:-1;;;;12287:236:644:o;12528:400::-;12699:3;-1:-1:-1;;;;;12720:31:644;;12717:51;;;12764:1;12761;12754:12;12717:51;12798:6;12795:1;12791:14;12840:6;12832;12827:3;12814:33;12902:1;12866:16;;12891:13;;;-1:-1:-1;12866:16:644;12528:400;-1:-1:-1;;12528:400:644:o;12933:184::-;13003:6;13056:2;13044:9;13035:7;13031:23;13027:32;13024:52;;;13072:1;13069;13062:12;13024:52;-1:-1:-1;13095:16:644;;12933:184;-1:-1:-1;12933:184:644:o;13122:125::-;13162:4;13190:1;13187;13184:8;13181:34;;;13195:18;;:::i;:::-;-1:-1:-1;13232:9:644;;13122:125::o;13940:381::-;14137:2;14126:9;14119:21;14100:4;14163:44;14203:2;14192:9;14188:18;14180:6;14163:44;:::i;:::-;14255:9;14247:6;14243:22;14238:2;14227:9;14223:18;14216:50;14283:32;14308:6;14300;14283:32;:::i;:::-;14275:40;13940:381;-1:-1:-1;;;;;13940:381:644:o;15032:127::-;15093:10;15088:3;15084:20;15081:1;15074:31;15124:4;15121:1;15114:15;15148:4;15145:1;15138:15;15851:168;15891:7;15957:1;15953;15949:6;15945:14;15942:1;15939:21;15934:1;15927:9;15920:17;15916:45;15913:71;;;15964:18;;:::i;:::-;-1:-1:-1;16004:9:644;;15851:168::o;16024:127::-;16085:10;16080:3;16076:20;16073:1;16066:31;16116:4;16113:1;16106:15;16140:4;16137:1;16130:15;16156:217;16196:1;16222;16212:132;;16266:10;16261:3;16257:20;16254:1;16247:31;16301:4;16298:1;16291:15;16329:4;16326:1;16319:15;16212:132;-1:-1:-1;16358:9:644;;16156:217::o;17138:274::-;17267:3;17305:6;17299:13;17321:53;17367:6;17362:3;17355:4;17347:6;17343:17;17321:53;:::i;:::-;17390:16;;;;;17138:274;-1:-1:-1;;17138:274:644:o;17906:277::-;17973:6;18026:2;18014:9;18005:7;18001:23;17997:32;17994:52;;;18042:1;18039;18032:12;17994:52;18074:9;18068:16;18127:5;18120:13;18113:21;18106:5;18103:32;18093:60;;18149:1;18146;18139:12",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "claimRewards()": "372500ab",
    "contractURI()": "e8a3d485",
    "depositRewardTokens(uint256)": "16c621e0",
    "getRewardTokenBalance()": "93ce5343",
    "getRewardsPerUnitTime()": "0e8b229b",
    "getStakeInfo(address)": "c3453153",
    "getTimeUnit()": "d68124c7",
    "indexedTokens(uint256)": "961004d3",
    "isIndexed(uint256)": "fd48ba17",
    "multicall(bytes[])": "ac9650d8",
    "nativeTokenWrapper()": "f9ea29cb",
    "onERC721Received(address,address,uint256,bytes)": "150b7a02",
    "owner()": "8da5cb5b",
    "rewardToken()": "f7c618c1",
    "setContractURI(string)": "938e3d7b",
    "setOwner(address)": "13af4035",
    "setRewardsPerUnitTime(uint256)": "23ef2580",
    "setTimeUnit(uint256)": "6360106f",
    "stake(uint256[])": "0fbf0a93",
    "stakerAddress(uint256)": "94067045",
    "stakers(address)": "9168ae72",
    "stakersArray(uint256)": "5357e916",
    "stakingToken()": "72f702f3",
    "supportsInterface(bytes4)": "01ffc9a7",
    "withdraw(uint256[])": "983d95ce",
    "withdrawRewardTokens(uint256)": "cb43b2dd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_defaultAdmin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_timeUnit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_rewardsPerUnitTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_stakingToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rewardToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_nativeTokenWrapper\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"prevURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newURI\",\"type\":\"string\"}],\"name\":\"ContractURIUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"prevOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"}],\"name\":\"RewardsClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"}],\"name\":\"TokensStaked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"}],\"name\":\"TokensWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldRewardsPerUnitTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newRewardsPerUnitTime\",\"type\":\"uint256\"}],\"name\":\"UpdatedRewardsPerUnitTime\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldTimeUnit\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newTimeUnit\",\"type\":\"uint256\"}],\"name\":\"UpdatedTimeUnit\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"claimRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"depositRewardTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRewardTokenBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRewardsPerUnitTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_rewardsPerUnitTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_staker\",\"type\":\"address\"}],\"name\":\"getStakeInfo\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_tokensStaked\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"_rewards\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTimeUnit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_timeUnit\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"indexedTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"isIndexed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nativeTokenWrapper\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"setContractURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rewardsPerUnitTime\",\"type\":\"uint256\"}],\"name\":\"setRewardsPerUnitTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_timeUnit\",\"type\":\"uint256\"}],\"name\":\"setTimeUnit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_tokenIds\",\"type\":\"uint256[]\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stakerAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakers\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"amountStaked\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"conditionIdOflastUpdate\",\"type\":\"uint64\"},{\"internalType\":\"uint128\",\"name\":\"timeOfLastUpdate\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"unclaimedRewards\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stakersArray\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_tokenIds\",\"type\":\"uint256[]\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawRewardTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"claimRewards()\":{\"details\":\"See {_claimRewards}. Override that to implement custom logic.             See {_calculateRewards} for reward-calculation logic.\"},\"depositRewardTokens(uint256)\":{\"details\":\"Admin deposits reward tokens.\"},\"getStakeInfo(address)\":{\"params\":{\"_staker\":\"Address for which to calculated rewards.\"},\"returns\":{\"_rewards\":\"       Available reward amount.\",\"_tokensStaked\":\"  List of token-ids staked by staker.\"}},\"multicall(bytes[])\":{\"details\":\"Receives and executes a batch of function calls on this contract.\",\"params\":{\"data\":\"The bytes data that makes up the batch of function calls to execute.\"},\"returns\":{\"results\":\"The bytes data that makes up the result of the batch of function calls executed.\"}},\"setContractURI(string)\":{\"details\":\"Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.\",\"params\":{\"_uri\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"setOwner(address)\":{\"params\":{\"_newOwner\":\"The address to set as the new owner of the contract.\"}},\"setRewardsPerUnitTime(uint256)\":{\"details\":\"Only admin/authorized-account can call it.\",\"params\":{\"_rewardsPerUnitTime\":\"New rewards per unit time.\"}},\"setTimeUnit(uint256)\":{\"details\":\"Only admin/authorized-account can call it.\",\"params\":{\"_timeUnit\":\"New time unit.\"}},\"stake(uint256[])\":{\"details\":\"See {_stake}. Override that to implement custom logic.\",\"params\":{\"_tokenIds\":\"List of tokens to stake.\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"withdraw(uint256[])\":{\"details\":\"See {_withdraw}. Override that to implement custom logic.\",\"params\":{\"_tokenIds\":\"List of tokens to withdraw.\"}},\"withdrawRewardTokens(uint256)\":{\"details\":\"Admin can withdraw excess reward tokens.\"}},\"stateVariables\":{\"nativeTokenWrapper\":{\"details\":\"The address of the native token wrapper contract.\"},\"rewardToken\":{\"details\":\"ERC20 Reward Token address. See {_mintRewards} below.\"},\"rewardTokenBalance\":{\"details\":\"Total amount of reward tokens in the contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"claimRewards()\":{\"notice\":\"Claim accumulated rewards.\"},\"contractURI()\":{\"notice\":\"Returns the contract metadata URI.\"},\"getRewardTokenBalance()\":{\"notice\":\"View total rewards available in the staking contract.\"},\"getStakeInfo(address)\":{\"notice\":\"View amount staked and total rewards for a user.\"},\"multicall(bytes[])\":{\"notice\":\"Receives and executes a batch of function calls on this contract.\"},\"owner()\":{\"notice\":\"Returns the owner of the contract.\"},\"setContractURI(string)\":{\"notice\":\"Lets a contract admin set the URI for contract-level metadata.\"},\"setOwner(address)\":{\"notice\":\"Lets an authorized wallet set a new owner for the contract.\"},\"setRewardsPerUnitTime(uint256)\":{\"notice\":\"Set rewards per unit of time.           Interpreted as x rewards per second/per day/etc based on time-unit.\"},\"setTimeUnit(uint256)\":{\"notice\":\"Set time unit. Set as a number of seconds.           Could be specified as -- x * 1 hours, x * 1 days, etc.\"},\"stake(uint256[])\":{\"notice\":\"Stake ERC721 Tokens.\"},\"withdraw(uint256[])\":{\"notice\":\"Withdraw staked tokens.\"}},\"notice\":\"note: This contract is provided as a base contract.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/base/Staking721Base.sol\":\"Staking721Base\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@std/=lib/forge-std/src/\",\":@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/\",\":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/\",\":contracts/=contracts/\",\":ds-test/=lib/ds-test/src/\",\":dynamic-contracts/=lib/dynamic-contracts/src/\",\":erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/ERC721A-Upgradeable/\",\":erc721a/=lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/\"]},\"sources\":{\"contracts/base/Staking721Base.sol\":{\"keccak256\":\"0xe37e7d836b6bef5c503e43788e05af1e4383b05678c7d2165d19e4e339939f23\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fac8d795f1b7180b4a043a48a9ac005521ac30d1467a2f4bdc1b12e845e94ff1\",\"dweb:/ipfs/Qmdd9s882UvKDd91dwDY8w5Dn2MFnPrWNoy8uJCj3oGJBS\"]},\"contracts/eip/ERC165.sol\":{\"keccak256\":\"0x0ea604ea6ebe99809a2f620009c8dead82d7fb17ab12b734e1e29c8ceb85938b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d9d109154c913e34d107db2cec5608dd8a55075dee35ae77aa78ebb9ff7d856c\",\"dweb:/ipfs/QmW8QKw4kag1Bv68FjSZiGvPP8WDocjdhLSd3ssUXZ5Kgr\"]},\"contracts/eip/interface/IERC165.sol\":{\"keccak256\":\"0x35d0a916f70344a5fcc6c67cb531b6150d2fce43e72a6282385eab02020f2f49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75ccd8b9a8b52a93b8097fcb8181b7afb6d72bbe6eaabf434f0481a7a207cc8a\",\"dweb:/ipfs/QmPUZAEE4nwkijcE2amAXAWEVGVG5XaKWGhpgnRwpAf93R\"]},\"contracts/eip/interface/IERC20.sol\":{\"keccak256\":\"0x5bdd9dd97ba7d9d7c9a2953db287e4d9d7fa93a27a96bc2e72a8da4919b6f7ff\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://45527c265ee5de6bbb3ecfc052e7b1175531a82c2ac16172020aee855f7dd592\",\"dweb:/ipfs/QmVZthqbG916qUQSwv1LE8bB58ZGQ1VfQbLbbRV5urfEYA\"]},\"contracts/eip/interface/IERC721.sol\":{\"keccak256\":\"0xbd9f2dd131e8f1e4e50b1b116eae917510ab9bf5d4356de37c5daf4cffdfa049\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ac3530b317083464271b100de1976ed9179b9e7d5a4fc3d992c61c80676a676\",\"dweb:/ipfs/QmUq1AVzymvp7Y8H1eypGEGU4icjzn5vDSvKMNpXnoaeMT\"]},\"contracts/eip/interface/IERC721Receiver.sol\":{\"keccak256\":\"0xd5fa74b4fb323776fa4a8158800fec9d5ac0fec0d6dd046dd93798632ada265f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33017a30a99cc5411a9e376622c31fc4a55cfc6a335e2f57f00cbf24a817ff3f\",\"dweb:/ipfs/QmWNQtWTPhA7Lo8nbxbc8KFMvZwbFYB8fSeEQ3vuapSV4a\"]},\"contracts/extension/ContractMetadata.sol\":{\"keccak256\":\"0xf53ab08ec3057056872c15e35a5610f7a43426bd2829786aed006d527177adfe\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ee132ae5efdd372152febfcd8fd3a7cb82c7019367d92c886f5096003a79f392\",\"dweb:/ipfs/QmRW1cGWmZAu57huZpTUwsWB8AxUFrBp6g4NqozXpbWsR6\"]},\"contracts/extension/Multicall.sol\":{\"keccak256\":\"0x737a71c74307fa360863550d64bbaef599bbcb47829b19c3743ed1ff22b9af55\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://7e82a79ee183dffa3ec01faac0907e04d72a185e55b7c24bff8e8e952b05f4c2\",\"dweb:/ipfs/QmQ9neZqpcgJtGgm84FBzMqFntZ1Sk1KFTWhjCMq8vnKDg\"]},\"contracts/extension/Ownable.sol\":{\"keccak256\":\"0x45447691686861237d5e1acb9d723d861a3fb3d561335e4f385d1547f25e27a5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5142293e36c736f744c73aaecab5f7be8e2d5ac70acc67851e0cea5171fd6782\",\"dweb:/ipfs/QmVJT5B84o5vFc5E2VteZdBhrT1HMutc7Ax72UKD1aZatJ\"]},\"contracts/extension/Staking721.sol\":{\"keccak256\":\"0x9ab7e70f91c448bd91c5b0ddbc4b3cb91fd2b6cb310bed657c569fcbea143e7b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://dc2d86d951df35f81c0a2b2f6e220ba35ae7f03d565689281a89fa6fcda6ad65\",\"dweb:/ipfs/QmTCSBnKVo3TR8ahG19XF3iZLFbpyNGyvC6N79Myof5weS\"]},\"contracts/extension/interface/IContractMetadata.sol\":{\"keccak256\":\"0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a\",\"dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr\"]},\"contracts/extension/interface/IMulticall.sol\":{\"keccak256\":\"0xe2bbd37b8fdb9cc8b933e598512a068ebb214b3f5abc2bc634916def55be4ef3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://012352099c262348ac755a53b082af520babc6c66dc5f1251fc23609728340ca\",\"dweb:/ipfs/QmcXEgzQ53jdJX5ZNy8zivvUjDq7J8WTnR1yAiwTpkQ2ar\"]},\"contracts/extension/interface/IOwnable.sol\":{\"keccak256\":\"0xd659a64da6264fdd50ee379be032fea4917eba4fadfd6d366107fb17e46907f3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c15940c4a3d229f4fdd1226fe297a58fde10b07b86a34de1ed11a8802dd5dea9\",\"dweb:/ipfs/QmS8p8CxWiahLkYsCWNhFjCnmQzuc4ck3kjYYuCFj8LsmC\"]},\"contracts/extension/interface/IStaking721.sol\":{\"keccak256\":\"0x8d0d1508daad0e427ccd002fdd7adc25261930bb32e21bdb90af354ed37f7076\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://00e7d2ebe66cdd849690933146070e65f36ebb59487a4028bca4b9d8d4635e89\",\"dweb:/ipfs/QmRfSUDHE2rVGkfHuYtHLbJpvtTc1gw4SUcpuyqL8pH2iS\"]},\"contracts/external-deps/openzeppelin/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x2030bba0e41fb3daead24cdba39cd9d8ce2748de68e57f1c811420419a739afb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a64e19e10d66555abcf0b5392bb27f9e65f674d7688761f02f2c8b508490623\",\"dweb:/ipfs/QmNhMchAD6kuHFAAgdwCwuNUS3uaUD2gwofT5kxQAQeWH6\"]},\"contracts/external-deps/openzeppelin/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xa6149938a7c7c8af4244743aeaafcfb1fd9ce15ad45de58fa9576f0ed5599b2c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://839aa4ea6ef6d1972881bfd7420a9ddcd2f37139e3f0bf25310f93f48410702d\",\"dweb:/ipfs/QmSH65kStfbgMbfjFdfJqV412omPy6nB1JMvMt9q7SsytW\"]},\"contracts/external-deps/openzeppelin/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"contracts/infra/interface/IWETH.sol\":{\"keccak256\":\"0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1\",\"dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU\"]},\"contracts/lib/CurrencyTransferLib.sol\":{\"keccak256\":\"0x4a30bc9a8cd6cc8b855621fb1a651e2c3a1639b0ad153f1139c3ba463605672d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://417cc64ec6393f3cc89981ca9c32bbcc444a5f91363d69f84dd8ace888b2b859\",\"dweb:/ipfs/QmZeaQsYGx4VNoP8e1fcwC87PwvyakheWYeuwEwhFSJnvB\"]},\"contracts/lib/TWAddress.sol\":{\"keccak256\":\"0x460f032cf3bf43d586e126ab2ec8be4335767f497ccb699741546a1cfba94a7e\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://28fcbf6dde6c2eeb9864f6ec6f21dcc81ec426877debf4b912f2f3bc5b0fc91e\",\"dweb:/ipfs/QmS1SHrZDfefX8EE7DdvszTY6VPCHydf4HM7NKJ2gP72e6\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.12+commit.f00d7308"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_defaultAdmin",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_timeUnit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_rewardsPerUnitTime",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_stakingToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_rewardToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_nativeTokenWrapper",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "prevURI",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "newURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ContractURIUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "prevOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnerUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "rewardAmount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RewardsClaimed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256[]",
              "name": "tokenIds",
              "type": "uint256[]",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "TokensStaked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256[]",
              "name": "tokenIds",
              "type": "uint256[]",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "TokensWithdrawn",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "oldRewardsPerUnitTime",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newRewardsPerUnitTime",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "UpdatedRewardsPerUnitTime",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "oldTimeUnit",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newTimeUnit",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "UpdatedTimeUnit",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimRewards"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "contractURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "depositRewardTokens"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getRewardTokenBalance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getRewardsPerUnitTime",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "_rewardsPerUnitTime",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_staker",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getStakeInfo",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "_tokensStaked",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256",
              "name": "_rewards",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getTimeUnit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "_timeUnit",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "indexedTokens",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isIndexed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes[]",
              "name": "data",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "multicall",
          "outputs": [
            {
              "internalType": "bytes[]",
              "name": "results",
              "type": "bytes[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nativeTokenWrapper",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "onERC721Received",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "rewardToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_uri",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setContractURI"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOwner"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_rewardsPerUnitTime",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRewardsPerUnitTime"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_timeUnit",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setTimeUnit"
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "_tokenIds",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "stake"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "stakerAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "stakers",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "amountStaked",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "conditionIdOflastUpdate",
              "type": "uint64"
            },
            {
              "internalType": "uint128",
              "name": "timeOfLastUpdate",
              "type": "uint128"
            },
            {
              "internalType": "uint256",
              "name": "unclaimedRewards",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "stakersArray",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "stakingToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "_tokenIds",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawRewardTokens"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "claimRewards()": {
            "details": "See {_claimRewards}. Override that to implement custom logic.             See {_calculateRewards} for reward-calculation logic."
          },
          "depositRewardTokens(uint256)": {
            "details": "Admin deposits reward tokens."
          },
          "getStakeInfo(address)": {
            "params": {
              "_staker": "Address for which to calculated rewards."
            },
            "returns": {
              "_rewards": "       Available reward amount.",
              "_tokensStaked": "  List of token-ids staked by staker."
            }
          },
          "multicall(bytes[])": {
            "details": "Receives and executes a batch of function calls on this contract.",
            "params": {
              "data": "The bytes data that makes up the batch of function calls to execute."
            },
            "returns": {
              "results": "The bytes data that makes up the result of the batch of function calls executed."
            }
          },
          "setContractURI(string)": {
            "details": "Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.",
            "params": {
              "_uri": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "setOwner(address)": {
            "params": {
              "_newOwner": "The address to set as the new owner of the contract."
            }
          },
          "setRewardsPerUnitTime(uint256)": {
            "details": "Only admin/authorized-account can call it.",
            "params": {
              "_rewardsPerUnitTime": "New rewards per unit time."
            }
          },
          "setTimeUnit(uint256)": {
            "details": "Only admin/authorized-account can call it.",
            "params": {
              "_timeUnit": "New time unit."
            }
          },
          "stake(uint256[])": {
            "details": "See {_stake}. Override that to implement custom logic.",
            "params": {
              "_tokenIds": "List of tokens to stake."
            }
          },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          },
          "withdraw(uint256[])": {
            "details": "See {_withdraw}. Override that to implement custom logic.",
            "params": {
              "_tokenIds": "List of tokens to withdraw."
            }
          },
          "withdrawRewardTokens(uint256)": {
            "details": "Admin can withdraw excess reward tokens."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "claimRewards()": {
            "notice": "Claim accumulated rewards."
          },
          "contractURI()": {
            "notice": "Returns the contract metadata URI."
          },
          "getRewardTokenBalance()": {
            "notice": "View total rewards available in the staking contract."
          },
          "getStakeInfo(address)": {
            "notice": "View amount staked and total rewards for a user."
          },
          "multicall(bytes[])": {
            "notice": "Receives and executes a batch of function calls on this contract."
          },
          "owner()": {
            "notice": "Returns the owner of the contract."
          },
          "setContractURI(string)": {
            "notice": "Lets a contract admin set the URI for contract-level metadata."
          },
          "setOwner(address)": {
            "notice": "Lets an authorized wallet set a new owner for the contract."
          },
          "setRewardsPerUnitTime(uint256)": {
            "notice": "Set rewards per unit of time.           Interpreted as x rewards per second/per day/etc based on time-unit."
          },
          "setTimeUnit(uint256)": {
            "notice": "Set time unit. Set as a number of seconds.           Could be specified as -- x * 1 hours, x * 1 days, etc."
          },
          "stake(uint256[])": {
            "notice": "Stake ERC721 Tokens."
          },
          "withdraw(uint256[])": {
            "notice": "Withdraw staked tokens."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=lib/chainlink/",
        "@ds-test/=lib/ds-test/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@std/=lib/forge-std/src/",
        "@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/",
        "ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/",
        "ERC721A/=lib/ERC721A/contracts/",
        "chainlink/=lib/chainlink/",
        "contracts/=contracts/",
        "ds-test/=lib/ds-test/src/",
        "dynamic-contracts/=lib/dynamic-contracts/src/",
        "erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/",
        "erc721a-upgradeable/=lib/ERC721A-Upgradeable/",
        "erc721a/=lib/ERC721A/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/base/Staking721Base.sol": "Staking721Base"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/base/Staking721Base.sol": {
        "keccak256": "0xe37e7d836b6bef5c503e43788e05af1e4383b05678c7d2165d19e4e339939f23",
        "urls": [
          "bzz-raw://fac8d795f1b7180b4a043a48a9ac005521ac30d1467a2f4bdc1b12e845e94ff1",
          "dweb:/ipfs/Qmdd9s882UvKDd91dwDY8w5Dn2MFnPrWNoy8uJCj3oGJBS"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/ERC165.sol": {
        "keccak256": "0x0ea604ea6ebe99809a2f620009c8dead82d7fb17ab12b734e1e29c8ceb85938b",
        "urls": [
          "bzz-raw://d9d109154c913e34d107db2cec5608dd8a55075dee35ae77aa78ebb9ff7d856c",
          "dweb:/ipfs/QmW8QKw4kag1Bv68FjSZiGvPP8WDocjdhLSd3ssUXZ5Kgr"
        ],
        "license": "MIT"
      },
      "contracts/eip/interface/IERC165.sol": {
        "keccak256": "0x35d0a916f70344a5fcc6c67cb531b6150d2fce43e72a6282385eab02020f2f49",
        "urls": [
          "bzz-raw://75ccd8b9a8b52a93b8097fcb8181b7afb6d72bbe6eaabf434f0481a7a207cc8a",
          "dweb:/ipfs/QmPUZAEE4nwkijcE2amAXAWEVGVG5XaKWGhpgnRwpAf93R"
        ],
        "license": "MIT"
      },
      "contracts/eip/interface/IERC20.sol": {
        "keccak256": "0x5bdd9dd97ba7d9d7c9a2953db287e4d9d7fa93a27a96bc2e72a8da4919b6f7ff",
        "urls": [
          "bzz-raw://45527c265ee5de6bbb3ecfc052e7b1175531a82c2ac16172020aee855f7dd592",
          "dweb:/ipfs/QmVZthqbG916qUQSwv1LE8bB58ZGQ1VfQbLbbRV5urfEYA"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC721.sol": {
        "keccak256": "0xbd9f2dd131e8f1e4e50b1b116eae917510ab9bf5d4356de37c5daf4cffdfa049",
        "urls": [
          "bzz-raw://8ac3530b317083464271b100de1976ed9179b9e7d5a4fc3d992c61c80676a676",
          "dweb:/ipfs/QmUq1AVzymvp7Y8H1eypGEGU4icjzn5vDSvKMNpXnoaeMT"
        ],
        "license": "MIT"
      },
      "contracts/eip/interface/IERC721Receiver.sol": {
        "keccak256": "0xd5fa74b4fb323776fa4a8158800fec9d5ac0fec0d6dd046dd93798632ada265f",
        "urls": [
          "bzz-raw://33017a30a99cc5411a9e376622c31fc4a55cfc6a335e2f57f00cbf24a817ff3f",
          "dweb:/ipfs/QmWNQtWTPhA7Lo8nbxbc8KFMvZwbFYB8fSeEQ3vuapSV4a"
        ],
        "license": "MIT"
      },
      "contracts/extension/ContractMetadata.sol": {
        "keccak256": "0xf53ab08ec3057056872c15e35a5610f7a43426bd2829786aed006d527177adfe",
        "urls": [
          "bzz-raw://ee132ae5efdd372152febfcd8fd3a7cb82c7019367d92c886f5096003a79f392",
          "dweb:/ipfs/QmRW1cGWmZAu57huZpTUwsWB8AxUFrBp6g4NqozXpbWsR6"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Multicall.sol": {
        "keccak256": "0x737a71c74307fa360863550d64bbaef599bbcb47829b19c3743ed1ff22b9af55",
        "urls": [
          "bzz-raw://7e82a79ee183dffa3ec01faac0907e04d72a185e55b7c24bff8e8e952b05f4c2",
          "dweb:/ipfs/QmQ9neZqpcgJtGgm84FBzMqFntZ1Sk1KFTWhjCMq8vnKDg"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/Ownable.sol": {
        "keccak256": "0x45447691686861237d5e1acb9d723d861a3fb3d561335e4f385d1547f25e27a5",
        "urls": [
          "bzz-raw://5142293e36c736f744c73aaecab5f7be8e2d5ac70acc67851e0cea5171fd6782",
          "dweb:/ipfs/QmVJT5B84o5vFc5E2VteZdBhrT1HMutc7Ax72UKD1aZatJ"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Staking721.sol": {
        "keccak256": "0x9ab7e70f91c448bd91c5b0ddbc4b3cb91fd2b6cb310bed657c569fcbea143e7b",
        "urls": [
          "bzz-raw://dc2d86d951df35f81c0a2b2f6e220ba35ae7f03d565689281a89fa6fcda6ad65",
          "dweb:/ipfs/QmTCSBnKVo3TR8ahG19XF3iZLFbpyNGyvC6N79Myof5weS"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IContractMetadata.sol": {
        "keccak256": "0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2",
        "urls": [
          "bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a",
          "dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IMulticall.sol": {
        "keccak256": "0xe2bbd37b8fdb9cc8b933e598512a068ebb214b3f5abc2bc634916def55be4ef3",
        "urls": [
          "bzz-raw://012352099c262348ac755a53b082af520babc6c66dc5f1251fc23609728340ca",
          "dweb:/ipfs/QmcXEgzQ53jdJX5ZNy8zivvUjDq7J8WTnR1yAiwTpkQ2ar"
        ],
        "license": "MIT"
      },
      "contracts/extension/interface/IOwnable.sol": {
        "keccak256": "0xd659a64da6264fdd50ee379be032fea4917eba4fadfd6d366107fb17e46907f3",
        "urls": [
          "bzz-raw://c15940c4a3d229f4fdd1226fe297a58fde10b07b86a34de1ed11a8802dd5dea9",
          "dweb:/ipfs/QmS8p8CxWiahLkYsCWNhFjCnmQzuc4ck3kjYYuCFj8LsmC"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IStaking721.sol": {
        "keccak256": "0x8d0d1508daad0e427ccd002fdd7adc25261930bb32e21bdb90af354ed37f7076",
        "urls": [
          "bzz-raw://00e7d2ebe66cdd849690933146070e65f36ebb59487a4028bca4b9d8d4635e89",
          "dweb:/ipfs/QmRfSUDHE2rVGkfHuYtHLbJpvtTc1gw4SUcpuyqL8pH2iS"
        ],
        "license": "Apache-2.0"
      },
      "contracts/external-deps/openzeppelin/security/ReentrancyGuard.sol": {
        "keccak256": "0x2030bba0e41fb3daead24cdba39cd9d8ce2748de68e57f1c811420419a739afb",
        "urls": [
          "bzz-raw://1a64e19e10d66555abcf0b5392bb27f9e65f674d7688761f02f2c8b508490623",
          "dweb:/ipfs/QmNhMchAD6kuHFAAgdwCwuNUS3uaUD2gwofT5kxQAQeWH6"
        ],
        "license": "MIT"
      },
      "contracts/external-deps/openzeppelin/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xa6149938a7c7c8af4244743aeaafcfb1fd9ce15ad45de58fa9576f0ed5599b2c",
        "urls": [
          "bzz-raw://839aa4ea6ef6d1972881bfd7420a9ddcd2f37139e3f0bf25310f93f48410702d",
          "dweb:/ipfs/QmSH65kStfbgMbfjFdfJqV412omPy6nB1JMvMt9q7SsytW"
        ],
        "license": "MIT"
      },
      "contracts/external-deps/openzeppelin/utils/math/SafeMath.sol": {
        "keccak256": "0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e",
        "urls": [
          "bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65",
          "dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN"
        ],
        "license": "MIT"
      },
      "contracts/infra/interface/IWETH.sol": {
        "keccak256": "0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b",
        "urls": [
          "bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1",
          "dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/CurrencyTransferLib.sol": {
        "keccak256": "0x4a30bc9a8cd6cc8b855621fb1a651e2c3a1639b0ad153f1139c3ba463605672d",
        "urls": [
          "bzz-raw://417cc64ec6393f3cc89981ca9c32bbcc444a5f91363d69f84dd8ace888b2b859",
          "dweb:/ipfs/QmZeaQsYGx4VNoP8e1fcwC87PwvyakheWYeuwEwhFSJnvB"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/TWAddress.sol": {
        "keccak256": "0x460f032cf3bf43d586e126ab2ec8be4335767f497ccb699741546a1cfba94a7e",
        "urls": [
          "bzz-raw://28fcbf6dde6c2eeb9864f6ec6f21dcc81ec426877debf4b912f2f3bc5b0fc91e",
          "dweb:/ipfs/QmS1SHrZDfefX8EE7DdvszTY6VPCHydf4HM7NKJ2gP72e6"
        ],
        "license": "Apache 2.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/base/Staking721Base.sol",
    "id": 6758,
    "exportedSymbols": {
      "ContractMetadata": [
        17526
      ],
      "CurrencyTransferLib": [
        63578
      ],
      "ERC165": [
        7823
      ],
      "IContractMetadata": [
        32437
      ],
      "IERC165": [
        13829
      ],
      "IERC20": [
        13899
      ],
      "IERC721": [
        14105
      ],
      "IERC721Receiver": [
        14240
      ],
      "IMulticall": [
        32926
      ],
      "IOwnable": [
        33183
      ],
      "IStaking721": [
        34214
      ],
      "Multicall": [
        20595
      ],
      "Ownable": [
        21153
      ],
      "ReentrancyGuard": [
        46484
      ],
      "SafeMath": [
        50692
      ],
      "Staking721": [
        30124
      ],
      "Staking721Base": [
        6757
      ],
      "TWAddress": [
        64152
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:6899:19",
    "nodes": [
      {
        "id": 6406,
        "nodeType": "PragmaDirective",
        "src": "39:23:19",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 6407,
        "nodeType": "ImportDirective",
        "src": "86:43:19",
        "nodes": [],
        "absolutePath": "contracts/extension/ContractMetadata.sol",
        "file": "../extension/ContractMetadata.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6758,
        "sourceUnit": 17527,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 6408,
        "nodeType": "ImportDirective",
        "src": "130:36:19",
        "nodes": [],
        "absolutePath": "contracts/extension/Multicall.sol",
        "file": "../extension/Multicall.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6758,
        "sourceUnit": 20596,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 6409,
        "nodeType": "ImportDirective",
        "src": "167:34:19",
        "nodes": [],
        "absolutePath": "contracts/extension/Ownable.sol",
        "file": "../extension/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6758,
        "sourceUnit": 21154,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 6410,
        "nodeType": "ImportDirective",
        "src": "202:37:19",
        "nodes": [],
        "absolutePath": "contracts/extension/Staking721.sol",
        "file": "../extension/Staking721.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6758,
        "sourceUnit": 30125,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 6411,
        "nodeType": "ImportDirective",
        "src": "241:27:19",
        "nodes": [],
        "absolutePath": "contracts/eip/ERC165.sol",
        "file": "../eip/ERC165.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6758,
        "sourceUnit": 7824,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 6412,
        "nodeType": "ImportDirective",
        "src": "269:37:19",
        "nodes": [],
        "absolutePath": "contracts/eip/interface/IERC20.sol",
        "file": "../eip/interface/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6758,
        "sourceUnit": 13900,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 6413,
        "nodeType": "ImportDirective",
        "src": "307:46:19",
        "nodes": [],
        "absolutePath": "contracts/eip/interface/IERC721Receiver.sol",
        "file": "../eip/interface/IERC721Receiver.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6758,
        "sourceUnit": 14241,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 6415,
        "nodeType": "ImportDirective",
        "src": "355:69:19",
        "nodes": [],
        "absolutePath": "contracts/lib/CurrencyTransferLib.sol",
        "file": "../lib/CurrencyTransferLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6758,
        "sourceUnit": 63579,
        "symbolAliases": [
          {
            "foreign": {
              "id": 6414,
              "name": "CurrencyTransferLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 63578,
              "src": "364:19:19",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$63578_$",
                "typeString": "type(library CurrencyTransferLib)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 6757,
        "nodeType": "ContractDefinition",
        "src": "1637:5300:19",
        "nodes": [
          {
            "id": 6431,
            "nodeType": "VariableDeclaration",
            "src": "1811:26:19",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 6429,
              "nodeType": "StructuredDocumentation",
              "src": "1744:62:19",
              "text": "@dev ERC20 Reward Token address. See {_mintRewards} below."
            },
            "functionSelector": "f7c618c1",
            "mutability": "mutable",
            "name": "rewardToken",
            "nameLocation": "1826:11:19",
            "scope": 6757,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 6430,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1811:7:19",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 6434,
            "nodeType": "VariableDeclaration",
            "src": "1907:33:19",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 6432,
              "nodeType": "StructuredDocumentation",
              "src": "1844:58:19",
              "text": "@dev The address of the native token wrapper contract."
            },
            "functionSelector": "f9ea29cb",
            "mutability": "mutable",
            "name": "nativeTokenWrapper",
            "nameLocation": "1922:18:19",
            "scope": 6757,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 6433,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1907:7:19",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 6437,
            "nodeType": "VariableDeclaration",
            "src": "2007:34:19",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 6435,
              "nodeType": "StructuredDocumentation",
              "src": "1947:55:19",
              "text": "@dev Total amount of reward tokens in the contract."
            },
            "mutability": "mutable",
            "name": "rewardTokenBalance",
            "nameLocation": "2023:18:19",
            "scope": 6757,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 6436,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2007:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "id": 6473,
            "nodeType": "FunctionDefinition",
            "src": "2048:429:19",
            "nodes": [],
            "body": {
              "id": 6472,
              "nodeType": "Block",
              "src": "2285:192:19",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6456,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6439,
                        "src": "2307:13:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 6455,
                      "name": "_setupOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21146,
                      "src": "2295:11:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 6457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2295:26:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6458,
                  "nodeType": "ExpressionStatement",
                  "src": "2295:26:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6460,
                        "name": "_timeUnit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6441,
                        "src": "2352:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 6461,
                        "name": "_rewardsPerUnitTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6443,
                        "src": "2363:19:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6459,
                      "name": "_setStakingCondition",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29986,
                      "src": "2331:20:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 6462,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2331:52:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6463,
                  "nodeType": "ExpressionStatement",
                  "src": "2331:52:19"
                },
                {
                  "expression": {
                    "id": 6466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6464,
                      "name": "rewardToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6431,
                      "src": "2394:11:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6465,
                      "name": "_rewardToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6447,
                      "src": "2408:12:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2394:26:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 6467,
                  "nodeType": "ExpressionStatement",
                  "src": "2394:26:19"
                },
                {
                  "expression": {
                    "id": 6470,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6468,
                      "name": "nativeTokenWrapper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6434,
                      "src": "2430:18:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6469,
                      "name": "_nativeTokenWrapper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6449,
                      "src": "2451:19:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2430:40:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 6471,
                  "nodeType": "ExpressionStatement",
                  "src": "2430:40:19"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 6452,
                    "name": "_stakingToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6445,
                    "src": "2270:13:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 6453,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 6451,
                  "name": "Staking721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 30124,
                  "src": "2259:10:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "2259:25:19"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 6450,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6439,
                  "mutability": "mutable",
                  "name": "_defaultAdmin",
                  "nameLocation": "2077:13:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 6473,
                  "src": "2069:21:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6438,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2069:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6441,
                  "mutability": "mutable",
                  "name": "_timeUnit",
                  "nameLocation": "2108:9:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 6473,
                  "src": "2100:17:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6440,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2100:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6443,
                  "mutability": "mutable",
                  "name": "_rewardsPerUnitTime",
                  "nameLocation": "2135:19:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 6473,
                  "src": "2127:27:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6442,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2127:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6445,
                  "mutability": "mutable",
                  "name": "_stakingToken",
                  "nameLocation": "2172:13:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 6473,
                  "src": "2164:21:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6444,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2164:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6447,
                  "mutability": "mutable",
                  "name": "_rewardToken",
                  "nameLocation": "2203:12:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 6473,
                  "src": "2195:20:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6446,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2195:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6449,
                  "mutability": "mutable",
                  "name": "_nativeTokenWrapper",
                  "nameLocation": "2233:19:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 6473,
                  "src": "2225:27:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6448,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2225:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2059:199:19"
            },
            "returnParameters": {
              "id": 6454,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2285:0:19"
            },
            "scope": 6757,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 6486,
            "nodeType": "FunctionDefinition",
            "src": "2553:129:19",
            "nodes": [],
            "body": {
              "id": 6485,
              "nodeType": "Block",
              "src": "2588:94:19",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 6481,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 6478,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2606:3:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 6479,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2606:10:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 6480,
                          "name": "nativeTokenWrapper",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6434,
                          "src": "2620:18:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2606:32:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63616c6c6572206e6f74206e617469766520746f6b656e20777261707065722e",
                        "id": 6482,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2640:34:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fff6f4088a14dc9fb6c418ac7dfb6aa2cb5091cf5954b1f93aeb20616b356a54",
                          "typeString": "literal_string \"caller not native token wrapper.\""
                        },
                        "value": "caller not native token wrapper."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fff6f4088a14dc9fb6c418ac7dfb6aa2cb5091cf5954b1f93aeb20616b356a54",
                          "typeString": "literal_string \"caller not native token wrapper.\""
                        }
                      ],
                      "id": 6477,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2598:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6483,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2598:77:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6484,
                  "nodeType": "ExpressionStatement",
                  "src": "2598:77:19"
                }
              ]
            },
            "documentation": {
              "id": 6474,
              "nodeType": "StructuredDocumentation",
              "src": "2483:65:19",
              "text": "@dev Lets the contract receive ether to unwrap native tokens."
            },
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 6475,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2560:2:19"
            },
            "returnParameters": {
              "id": 6476,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2588:0:19"
            },
            "scope": 6757,
            "stateMutability": "payable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 6499,
            "nodeType": "FunctionDefinition",
            "src": "2731:165:19",
            "nodes": [],
            "body": {
              "id": 6498,
              "nodeType": "Block",
              "src": "2815:81:19",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6495,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6489,
                        "src": "2846:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6494,
                      "name": "_depositRewardTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6673,
                      "src": "2825:20:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 6496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2825:29:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6497,
                  "nodeType": "ExpressionStatement",
                  "src": "2825:29:19"
                }
              ]
            },
            "documentation": {
              "id": 6487,
              "nodeType": "StructuredDocumentation",
              "src": "2688:38:19",
              "text": "@dev Admin deposits reward tokens."
            },
            "functionSelector": "16c621e0",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 6492,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 6491,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46483,
                  "src": "2802:12:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "2802:12:19"
              }
            ],
            "name": "depositRewardTokens",
            "nameLocation": "2740:19:19",
            "parameters": {
              "id": 6490,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6489,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2768:7:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 6499,
                  "src": "2760:15:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6488,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2760:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2759:17:19"
            },
            "returnParameters": {
              "id": 6493,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2815:0:19"
            },
            "scope": 6757,
            "stateMutability": "payable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 6512,
            "nodeType": "FunctionDefinition",
            "src": "2956:159:19",
            "nodes": [],
            "body": {
              "id": 6511,
              "nodeType": "Block",
              "src": "3033:82:19",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6508,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6502,
                        "src": "3065:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6507,
                      "name": "_withdrawRewardTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6714,
                      "src": "3043:21:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 6509,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3043:30:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6510,
                  "nodeType": "ExpressionStatement",
                  "src": "3043:30:19"
                }
              ]
            },
            "documentation": {
              "id": 6500,
              "nodeType": "StructuredDocumentation",
              "src": "2902:49:19",
              "text": "@dev Admin can withdraw excess reward tokens."
            },
            "functionSelector": "cb43b2dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 6505,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 6504,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46483,
                  "src": "3020:12:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "3020:12:19"
              }
            ],
            "name": "withdrawRewardTokens",
            "nameLocation": "2965:20:19",
            "parameters": {
              "id": 6503,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6502,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2994:7:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 6512,
                  "src": "2986:15:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6501,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2986:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2985:17:19"
            },
            "returnParameters": {
              "id": 6506,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3033:0:19"
            },
            "scope": 6757,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 6522,
            "nodeType": "FunctionDefinition",
            "src": "3191:124:19",
            "nodes": [],
            "body": {
              "id": 6521,
              "nodeType": "Block",
              "src": "3273:42:19",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 6519,
                    "name": "rewardTokenBalance",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6437,
                    "src": "3290:18:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 6518,
                  "id": 6520,
                  "nodeType": "Return",
                  "src": "3283:25:19"
                }
              ]
            },
            "baseFunctions": [
              30109
            ],
            "documentation": {
              "id": 6513,
              "nodeType": "StructuredDocumentation",
              "src": "3121:65:19",
              "text": "@notice View total rewards available in the staking contract."
            },
            "functionSelector": "93ce5343",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRewardTokenBalance",
            "nameLocation": "3200:21:19",
            "overrides": {
              "id": 6515,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3246:8:19"
            },
            "parameters": {
              "id": 6514,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3221:2:19"
            },
            "returnParameters": {
              "id": 6518,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6517,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6522,
                  "src": "3264:7:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6516,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3264:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3263:9:19"
            },
            "scope": 6757,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 6548,
            "nodeType": "FunctionDefinition",
            "src": "3505:261:19",
            "nodes": [],
            "body": {
              "id": 6547,
              "nodeType": "Block",
              "src": "3660:106:19",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 6539,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 6537,
                          "name": "isStaking",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29143,
                          "src": "3678:9:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 6538,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3691:1:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "3678:14:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "446972656374207472616e73666572",
                        "id": 6540,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3694:17:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1535664c0eb3bd430bcee25184abb0c36f1be46b8c14441f80835d2db87cf6ba",
                          "typeString": "literal_string \"Direct transfer\""
                        },
                        "value": "Direct transfer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1535664c0eb3bd430bcee25184abb0c36f1be46b8c14441f80835d2db87cf6ba",
                          "typeString": "literal_string \"Direct transfer\""
                        }
                      ],
                      "id": 6536,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3670:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6541,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3670:42:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6542,
                  "nodeType": "ExpressionStatement",
                  "src": "3670:42:19"
                },
                {
                  "expression": {
                    "expression": {
                      "expression": {
                        "id": 6543,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
                        "src": "3729:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Staking721Base_$6757",
                          "typeString": "contract Staking721Base"
                        }
                      },
                      "id": 6544,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "onERC721Received",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6548,
                      "src": "3729:21:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                        "typeString": "function (address,address,uint256,bytes memory) view external returns (bytes4)"
                      }
                    },
                    "id": 6545,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "selector",
                    "nodeType": "MemberAccess",
                    "src": "3729:30:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "functionReturnParameters": 6535,
                  "id": 6546,
                  "nodeType": "Return",
                  "src": "3722:37:19"
                }
              ]
            },
            "baseFunctions": [
              14239
            ],
            "functionSelector": "150b7a02",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "onERC721Received",
            "nameLocation": "3514:16:19",
            "overrides": {
              "id": 6532,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3634:8:19"
            },
            "parameters": {
              "id": 6531,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6524,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6548,
                  "src": "3540:7:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6523,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3540:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6526,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6548,
                  "src": "3557:7:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6525,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3557:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6528,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6548,
                  "src": "3574:7:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6527,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3574:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6530,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6548,
                  "src": "3591:14:19",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 6529,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3591:5:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3530:81:19"
            },
            "returnParameters": {
              "id": 6535,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6534,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6548,
                  "src": "3652:6:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 6533,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "3652:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3651:8:19"
            },
            "scope": 6757,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 6569,
            "nodeType": "FunctionDefinition",
            "src": "3772:203:19",
            "nodes": [],
            "body": {
              "id": 6568,
              "nodeType": "Block",
              "src": "3863:112:19",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 6566,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 6561,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 6556,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6550,
                        "src": "3880:11:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 6558,
                              "name": "IERC721Receiver",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14240,
                              "src": "3900:15:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$14240_$",
                                "typeString": "type(contract IERC721Receiver)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$14240_$",
                                "typeString": "type(contract IERC721Receiver)"
                              }
                            ],
                            "id": 6557,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "3895:4:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 6559,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3895:21:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Receiver_$14240",
                            "typeString": "type(contract IERC721Receiver)"
                          }
                        },
                        "id": 6560,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "interfaceId",
                        "nodeType": "MemberAccess",
                        "src": "3895:33:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "src": "3880:48:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 6564,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6550,
                          "src": "3956:11:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 6562,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -25,
                          "src": "3932:5:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_Staking721Base_$6757_$",
                            "typeString": "type(contract super Staking721Base)"
                          }
                        },
                        "id": 6563,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7822,
                        "src": "3932:23:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view returns (bool)"
                        }
                      },
                      "id": 6565,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3932:36:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3880:88:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 6555,
                  "id": 6567,
                  "nodeType": "Return",
                  "src": "3873:95:19"
                }
              ]
            },
            "baseFunctions": [
              7822
            ],
            "functionSelector": "01ffc9a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "3781:17:19",
            "overrides": {
              "id": 6552,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3839:8:19"
            },
            "parameters": {
              "id": 6551,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6550,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "3806:11:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 6569,
                  "src": "3799:18:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 6549,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "3799:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3798:20:19"
            },
            "returnParameters": {
              "id": 6555,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6554,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6569,
                  "src": "3857:4:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6553,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3857:4:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3856:6:19"
            },
            "scope": 6757,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 6603,
            "nodeType": "FunctionDefinition",
            "src": "4402:401:19",
            "nodes": [],
            "body": {
              "id": 6602,
              "nodeType": "Block",
              "src": "4485:318:19",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 6581,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 6579,
                          "name": "_rewards",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6574,
                          "src": "4503:8:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 6580,
                          "name": "rewardTokenBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6437,
                          "src": "4515:18:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4503:30:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f7567682072657761726420746f6b656e73",
                        "id": 6582,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4535:26:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f9f034c0209f69095b9daea6fa2bfb48319f16f6cf36946d2a2348944ff59120",
                          "typeString": "literal_string \"Not enough reward tokens\""
                        },
                        "value": "Not enough reward tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f9f034c0209f69095b9daea6fa2bfb48319f16f6cf36946d2a2348944ff59120",
                          "typeString": "literal_string \"Not enough reward tokens\""
                        }
                      ],
                      "id": 6578,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4495:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6583,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4495:67:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6584,
                  "nodeType": "ExpressionStatement",
                  "src": "4495:67:19"
                },
                {
                  "expression": {
                    "id": 6587,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6585,
                      "name": "rewardTokenBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6437,
                      "src": "4572:18:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 6586,
                      "name": "_rewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6574,
                      "src": "4594:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4572:30:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6588,
                  "nodeType": "ExpressionStatement",
                  "src": "4572:30:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6592,
                        "name": "rewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6431,
                        "src": "4673:11:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 6595,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4706:4:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Staking721Base_$6757",
                              "typeString": "contract Staking721Base"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Staking721Base_$6757",
                              "typeString": "contract Staking721Base"
                            }
                          ],
                          "id": 6594,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4698:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 6593,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4698:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 6596,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4698:13:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6597,
                        "name": "_staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6572,
                        "src": "4725:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6598,
                        "name": "_rewards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6574,
                        "src": "4746:8:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 6599,
                        "name": "nativeTokenWrapper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6434,
                        "src": "4768:18:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 6589,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63578,
                        "src": "4612:19:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$63578_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 6591,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferCurrencyWithWrapper",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63469,
                      "src": "4612:47:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address,uint256,address)"
                      }
                    },
                    "id": 6600,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4612:184:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6601,
                  "nodeType": "ExpressionStatement",
                  "src": "4612:184:19"
                }
              ]
            },
            "baseFunctions": [
              30117
            ],
            "documentation": {
              "id": 6570,
              "nodeType": "StructuredDocumentation",
              "src": "4158:239:19",
              "text": "  @dev    Mint ERC20 rewards to the staker. Override for custom logic.\n  @param _staker    Address for which to calculated rewards.\n  @param _rewards   Amount of tokens to be given out as reward."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mintRewards",
            "nameLocation": "4411:12:19",
            "overrides": {
              "id": 6576,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4476:8:19"
            },
            "parameters": {
              "id": 6575,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6572,
                  "mutability": "mutable",
                  "name": "_staker",
                  "nameLocation": "4432:7:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 6603,
                  "src": "4424:15:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6571,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4424:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6574,
                  "mutability": "mutable",
                  "name": "_rewards",
                  "nameLocation": "4449:8:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 6603,
                  "src": "4441:16:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6573,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4441:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4423:35:19"
            },
            "returnParameters": {
              "id": 6577,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4485:0:19"
            },
            "scope": 6757,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 6673,
            "nodeType": "FunctionDefinition",
            "src": "5069:660:19",
            "nodes": [],
            "body": {
              "id": 6672,
              "nodeType": "Block",
              "src": "5133:596:19",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 6614,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 6610,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5151:3:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 6611,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5151:10:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 6612,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21105,
                            "src": "5165:5:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 6613,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5165:7:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5151:21:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420617574686f72697a6564",
                        "id": 6615,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5174:16:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
                          "typeString": "literal_string \"Not authorized\""
                        },
                        "value": "Not authorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
                          "typeString": "literal_string \"Not authorized\""
                        }
                      ],
                      "id": 6609,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5143:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6616,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5143:48:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6617,
                  "nodeType": "ExpressionStatement",
                  "src": "5143:48:19"
                },
                {
                  "assignments": [
                    6619
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6619,
                      "mutability": "mutable",
                      "name": "_rewardToken",
                      "nameLocation": "5210:12:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 6672,
                      "src": "5202:20:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 6618,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5202:7:19",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6627,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 6623,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 6620,
                        "name": "rewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6431,
                        "src": "5225:11:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 6621,
                          "name": "CurrencyTransferLib",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63578,
                          "src": "5240:19:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$63578_$",
                            "typeString": "type(library CurrencyTransferLib)"
                          }
                        },
                        "id": 6622,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "NATIVE_TOKEN",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 63346,
                        "src": "5240:32:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "5225:47:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 6625,
                      "name": "rewardToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6431,
                      "src": "5296:11:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 6626,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "5225:82:19",
                    "trueExpression": {
                      "id": 6624,
                      "name": "nativeTokenWrapper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6434,
                      "src": "5275:18:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5202:105:19"
                },
                {
                  "assignments": [
                    6629
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6629,
                      "mutability": "mutable",
                      "name": "balanceBefore",
                      "nameLocation": "5326:13:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 6672,
                      "src": "5318:21:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6628,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5318:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6639,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 6636,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5381:4:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Staking721Base_$6757",
                              "typeString": "contract Staking721Base"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Staking721Base_$6757",
                              "typeString": "contract Staking721Base"
                            }
                          ],
                          "id": 6635,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5373:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 6634,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5373:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 6637,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5373:13:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 6631,
                            "name": "_rewardToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6619,
                            "src": "5349:12:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 6630,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13899,
                          "src": "5342:6:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$13899_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 6632,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5342:20:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$13899",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 6633,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13844,
                      "src": "5342:30:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 6638,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5342:45:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5318:69:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6643,
                        "name": "rewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6431,
                        "src": "5458:11:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 6644,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5483:3:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 6645,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5483:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 6648,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5515:4:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Staking721Base_$6757",
                              "typeString": "contract Staking721Base"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Staking721Base_$6757",
                              "typeString": "contract Staking721Base"
                            }
                          ],
                          "id": 6647,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5507:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 6646,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5507:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 6649,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5507:13:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6650,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6606,
                        "src": "5534:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 6651,
                        "name": "nativeTokenWrapper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6434,
                        "src": "5555:18:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 6640,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63578,
                        "src": "5397:19:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$63578_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 6642,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferCurrencyWithWrapper",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63469,
                      "src": "5397:47:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address,uint256,address)"
                      }
                    },
                    "id": 6652,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5397:186:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6653,
                  "nodeType": "ExpressionStatement",
                  "src": "5397:186:19"
                },
                {
                  "assignments": [
                    6655
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6655,
                      "mutability": "mutable",
                      "name": "actualAmount",
                      "nameLocation": "5601:12:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 6672,
                      "src": "5593:20:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6654,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5593:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6667,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6666,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 6662,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "5655:4:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Staking721Base_$6757",
                                "typeString": "contract Staking721Base"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Staking721Base_$6757",
                                "typeString": "contract Staking721Base"
                              }
                            ],
                            "id": 6661,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5647:7:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 6660,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5647:7:19",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 6663,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5647:13:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 6657,
                              "name": "_rewardToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6619,
                              "src": "5623:12:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 6656,
                            "name": "IERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13899,
                            "src": "5616:6:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC20_$13899_$",
                              "typeString": "type(contract IERC20)"
                            }
                          },
                          "id": 6658,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5616:20:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$13899",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 6659,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 13844,
                        "src": "5616:30:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 6664,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5616:45:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 6665,
                      "name": "balanceBefore",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6629,
                      "src": "5664:13:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5616:61:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5593:84:19"
                },
                {
                  "expression": {
                    "id": 6670,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6668,
                      "name": "rewardTokenBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6437,
                      "src": "5688:18:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 6669,
                      "name": "actualAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6655,
                      "src": "5710:12:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5688:34:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6671,
                  "nodeType": "ExpressionStatement",
                  "src": "5688:34:19"
                }
              ]
            },
            "documentation": {
              "id": 6604,
              "nodeType": "StructuredDocumentation",
              "src": "4997:67:19",
              "text": "@dev Admin deposits reward tokens -- override for custom logic."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_depositRewardTokens",
            "nameLocation": "5078:20:19",
            "parameters": {
              "id": 6607,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6606,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "5107:7:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 6673,
                  "src": "5099:15:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6605,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5099:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5098:17:19"
            },
            "returnParameters": {
              "id": 6608,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5133:0:19"
            },
            "scope": 6757,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 6714,
            "nodeType": "FunctionDefinition",
            "src": "5818:481:19",
            "nodes": [],
            "body": {
              "id": 6713,
              "nodeType": "Block",
              "src": "5883:416:19",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 6684,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 6680,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5901:3:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 6681,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5901:10:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 6682,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21105,
                            "src": "5915:5:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 6683,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5915:7:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5901:21:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420617574686f72697a6564",
                        "id": 6685,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5924:16:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
                          "typeString": "literal_string \"Not authorized\""
                        },
                        "value": "Not authorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
                          "typeString": "literal_string \"Not authorized\""
                        }
                      ],
                      "id": 6679,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5893:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6686,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5893:48:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6687,
                  "nodeType": "ExpressionStatement",
                  "src": "5893:48:19"
                },
                {
                  "expression": {
                    "id": 6697,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6688,
                      "name": "rewardTokenBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6437,
                      "src": "6011:18:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 6691,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 6689,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6676,
                          "src": "6032:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "id": 6690,
                          "name": "rewardTokenBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6437,
                          "src": "6042:18:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6032:28:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 6695,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 6693,
                          "name": "rewardTokenBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6437,
                          "src": "6067:18:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 6694,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6676,
                          "src": "6088:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6067:28:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 6696,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "Conditional",
                      "src": "6032:63:19",
                      "trueExpression": {
                        "hexValue": "30",
                        "id": 6692,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6063:1:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6011:84:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6698,
                  "nodeType": "ExpressionStatement",
                  "src": "6011:84:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6702,
                        "name": "rewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6431,
                        "src": "6167:11:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 6705,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "6200:4:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Staking721Base_$6757",
                              "typeString": "contract Staking721Base"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Staking721Base_$6757",
                              "typeString": "contract Staking721Base"
                            }
                          ],
                          "id": 6704,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6192:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 6703,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6192:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 6706,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6192:13:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 6707,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6219:3:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 6708,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6219:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6709,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6676,
                        "src": "6243:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 6710,
                        "name": "nativeTokenWrapper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6434,
                        "src": "6264:18:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 6699,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63578,
                        "src": "6106:19:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$63578_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 6701,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferCurrencyWithWrapper",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63469,
                      "src": "6106:47:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address,uint256,address)"
                      }
                    },
                    "id": 6711,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6106:186:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6712,
                  "nodeType": "ExpressionStatement",
                  "src": "6106:186:19"
                }
              ]
            },
            "documentation": {
              "id": 6674,
              "nodeType": "StructuredDocumentation",
              "src": "5735:78:19",
              "text": "@dev Admin can withdraw excess reward tokens -- override for custom logic."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_withdrawRewardTokens",
            "nameLocation": "5827:21:19",
            "parameters": {
              "id": 6677,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6676,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "5857:7:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 6714,
                  "src": "5849:15:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6675,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5849:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5848:17:19"
            },
            "returnParameters": {
              "id": 6678,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5883:0:19"
            },
            "scope": 6757,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 6728,
            "nodeType": "FunctionDefinition",
            "src": "6394:125:19",
            "nodes": [],
            "body": {
              "id": 6727,
              "nodeType": "Block",
              "src": "6474:45:19",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 6725,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 6721,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "6491:3:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 6722,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "6491:10:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 6723,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21105,
                        "src": "6505:5:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 6724,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6505:7:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6491:21:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 6720,
                  "id": 6726,
                  "nodeType": "Return",
                  "src": "6484:28:19"
                }
              ]
            },
            "baseFunctions": [
              30123
            ],
            "documentation": {
              "id": 6715,
              "nodeType": "StructuredDocumentation",
              "src": "6305:84:19",
              "text": "@dev Returns whether staking restrictions can be set in given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetStakeConditions",
            "nameLocation": "6403:22:19",
            "overrides": {
              "id": 6717,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6450:8:19"
            },
            "parameters": {
              "id": 6716,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6425:2:19"
            },
            "returnParameters": {
              "id": 6720,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6719,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6728,
                  "src": "6468:4:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6718,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6468:4:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6467:6:19"
            },
            "scope": 6757,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 6742,
            "nodeType": "FunctionDefinition",
            "src": "6615:121:19",
            "nodes": [],
            "body": {
              "id": 6741,
              "nodeType": "Block",
              "src": "6691:45:19",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 6739,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 6735,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "6708:3:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 6736,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "6708:10:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 6737,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21105,
                        "src": "6722:5:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 6738,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6722:7:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6708:21:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 6734,
                  "id": 6740,
                  "nodeType": "Return",
                  "src": "6701:28:19"
                }
              ]
            },
            "baseFunctions": [
              17525
            ],
            "documentation": {
              "id": 6729,
              "nodeType": "StructuredDocumentation",
              "src": "6525:85:19",
              "text": "@dev Returns whether contract metadata can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetContractURI",
            "nameLocation": "6624:18:19",
            "overrides": {
              "id": 6731,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6667:8:19"
            },
            "parameters": {
              "id": 6730,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6642:2:19"
            },
            "returnParameters": {
              "id": 6734,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6733,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6742,
                  "src": "6685:4:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6732,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6685:4:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6684:6:19"
            },
            "scope": 6757,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 6756,
            "nodeType": "FunctionDefinition",
            "src": "6820:115:19",
            "nodes": [],
            "body": {
              "id": 6755,
              "nodeType": "Block",
              "src": "6890:45:19",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 6753,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 6749,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "6907:3:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 6750,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "6907:10:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 6751,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21105,
                        "src": "6921:5:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 6752,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6921:7:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6907:21:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 6748,
                  "id": 6754,
                  "nodeType": "Return",
                  "src": "6900:28:19"
                }
              ]
            },
            "baseFunctions": [
              21152
            ],
            "documentation": {
              "id": 6743,
              "nodeType": "StructuredDocumentation",
              "src": "6742:73:19",
              "text": "@dev Returns whether owner can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetOwner",
            "nameLocation": "6829:12:19",
            "overrides": {
              "id": 6745,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6866:8:19"
            },
            "parameters": {
              "id": 6744,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6841:2:19"
            },
            "returnParameters": {
              "id": 6748,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6747,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6756,
                  "src": "6884:4:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6746,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6884:4:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6883:6:19"
            },
            "scope": 6757,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 6417,
              "name": "ContractMetadata",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 17526,
              "src": "1664:16:19"
            },
            "id": 6418,
            "nodeType": "InheritanceSpecifier",
            "src": "1664:16:19"
          },
          {
            "baseName": {
              "id": 6419,
              "name": "Multicall",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 20595,
              "src": "1682:9:19"
            },
            "id": 6420,
            "nodeType": "InheritanceSpecifier",
            "src": "1682:9:19"
          },
          {
            "baseName": {
              "id": 6421,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 21153,
              "src": "1693:7:19"
            },
            "id": 6422,
            "nodeType": "InheritanceSpecifier",
            "src": "1693:7:19"
          },
          {
            "baseName": {
              "id": 6423,
              "name": "Staking721",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 30124,
              "src": "1702:10:19"
            },
            "id": 6424,
            "nodeType": "InheritanceSpecifier",
            "src": "1702:10:19"
          },
          {
            "baseName": {
              "id": 6425,
              "name": "ERC165",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7823,
              "src": "1714:6:19"
            },
            "id": 6426,
            "nodeType": "InheritanceSpecifier",
            "src": "1714:6:19"
          },
          {
            "baseName": {
              "id": 6427,
              "name": "IERC721Receiver",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 14240,
              "src": "1722:15:19"
            },
            "id": 6428,
            "nodeType": "InheritanceSpecifier",
            "src": "1722:15:19"
          }
        ],
        "canonicalName": "Staking721Base",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 6416,
          "nodeType": "StructuredDocumentation",
          "src": "1309:56:19",
          "text": "note: This contract is provided as a base contract."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          6757,
          14240,
          7823,
          13829,
          30124,
          34214,
          46484,
          21153,
          33183,
          20595,
          32926,
          17526,
          32437
        ],
        "name": "Staking721Base",
        "nameLocation": "1646:14:19",
        "scope": 6758,
        "usedErrors": []
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 19
}