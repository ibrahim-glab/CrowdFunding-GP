{
  "abi": [
    {
      "inputs": [],
      "name": "ApprovalCallerNotOwnerNorApproved",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ApprovalQueryForNonexistentToken",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ApprovalToCurrentOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ApproveToCaller",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BalanceQueryForZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MintToZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MintZeroQuantity",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OwnerQueryForNonexistentToken",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferCallerNotOwnerNorApproved",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferFromIncorrectOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferToNonERC721ReceiverImplementer",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferToZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "URIQueryForNonexistentToken",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_fromTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_toTokenId",
          "type": "uint256"
        }
      ],
      "name": "BatchMetadataUpdate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "startTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxClaimableSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "supplyClaimed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "merkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "metadata",
              "type": "string"
            }
          ],
          "indexed": false,
          "internalType": "struct IClaimCondition.ClaimCondition",
          "name": "condition",
          "type": "tuple"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "resetEligibility",
          "type": "bool"
        }
      ],
      "name": "ClaimConditionUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "prevURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "newURI",
          "type": "string"
        }
      ],
      "name": "ContractURIUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newRoyaltyRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newRoyaltyBps",
          "type": "uint256"
        }
      ],
      "name": "DefaultRoyalty",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "platformFeeRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "flatFee",
          "type": "uint256"
        }
      ],
      "name": "FlatPlatformFeeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "MetadataFrozen",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "prevOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnerUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "platformFeeRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "platformFeeBps",
          "type": "uint256"
        }
      ],
      "name": "PlatformFeeInfoUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "enum IPlatformFee.PlatformFeeType",
          "name": "feeType",
          "type": "uint8"
        }
      ],
      "name": "PlatformFeeTypeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "PrimarySaleRecipientUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "royaltyRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "royaltyBps",
          "type": "uint256"
        }
      ],
      "name": "RoyaltyForToken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "revealedURI",
          "type": "string"
        }
      ],
      "name": "TokenURIRevealed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "claimer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "startTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "quantityClaimed",
          "type": "uint256"
        }
      ],
      "name": "TokensClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "startTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "endTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "baseURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "encryptedBaseURI",
          "type": "bytes"
        }
      ],
      "name": "TokensLazyMinted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "signer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "mintedTo",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenIdMinted",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "royaltyRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "royaltyBps",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "primarySaleRecipient",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "uri",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "quantity",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "validityStartTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "validityEndTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "bytes32",
              "name": "uid",
              "type": "bytes32"
            }
          ],
          "indexed": false,
          "internalType": "struct ISignatureMintERC721.MintRequest",
          "name": "mintRequest",
          "type": "tuple"
        }
      ],
      "name": "TokensMintedWithSignature",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "batchFrozen",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_quantity",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_currency",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_pricePerToken",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            }
          ],
          "internalType": "struct IDropSinglePhase.AllowlistProof",
          "name": "_allowlistProof",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "claim",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimCondition",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "startTimestamp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxClaimableSupply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "supplyClaimed",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "quantityLimitPerWallet",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "merkleRoot",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "pricePerToken",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "currency",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "metadata",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractType",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractVersion",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "key",
          "type": "bytes"
        }
      ],
      "name": "encryptDecrypt",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "result",
          "type": "bytes"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "encryptedData",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBaseURICount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getBatchIdAtIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDefaultRoyaltyInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getFlatPlatformFeeInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPlatformFeeInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPlatformFeeType",
      "outputs": [
        {
          "internalType": "enum IPlatformFee.PlatformFeeType",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_batchId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_key",
          "type": "bytes"
        }
      ],
      "name": "getRevealURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "revealedURI",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRoleMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "member",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "count",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getRoyaltyInfoForToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_claimer",
          "type": "address"
        }
      ],
      "name": "getSupplyClaimedByWallet",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRoleWithSwitch",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_defaultAdmin",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_contractURI",
          "type": "string"
        },
        {
          "internalType": "address[]",
          "name": "_trustedForwarders",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "_saleRecipient",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_royaltyRecipient",
          "type": "address"
        },
        {
          "internalType": "uint128",
          "name": "_royaltyBps",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "_platformFeeBps",
          "type": "uint128"
        },
        {
          "internalType": "address",
          "name": "_platformFeeRecipient",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_batchId",
          "type": "uint256"
        }
      ],
      "name": "isEncryptedBatch",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "forwarder",
          "type": "address"
        }
      ],
      "name": "isTrustedForwarder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_baseURIForTokens",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "lazyMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "batchId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "royaltyRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "royaltyBps",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "primarySaleRecipient",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "uri",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "quantity",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "validityStartTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "validityEndTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "bytes32",
              "name": "uid",
              "type": "bytes32"
            }
          ],
          "internalType": "struct ISignatureMintERC721.MintRequest",
          "name": "_req",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "mintWithSignature",
      "outputs": [
        {
          "internalType": "address",
          "name": "signer",
          "type": "address"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "multicall",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "results",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextTokenIdToMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "primarySaleRecipient",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_key",
          "type": "bytes"
        }
      ],
      "name": "reveal",
      "outputs": [
        {
          "internalType": "string",
          "name": "revealedURI",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "salePrice",
          "type": "uint256"
        }
      ],
      "name": "royaltyInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "royaltyAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "startTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxClaimableSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "supplyClaimed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "merkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "metadata",
              "type": "string"
            }
          ],
          "internalType": "struct IClaimCondition.ClaimCondition",
          "name": "_condition",
          "type": "tuple"
        },
        {
          "internalType": "bool",
          "name": "_resetClaimEligibility",
          "type": "bool"
        }
      ],
      "name": "setClaimConditions",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "setContractURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_royaltyRecipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_royaltyBps",
          "type": "uint256"
        }
      ],
      "name": "setDefaultRoyaltyInfo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_platformFeeRecipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_flatFee",
          "type": "uint256"
        }
      ],
      "name": "setFlatPlatformFeeInfo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "setOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_platformFeeRecipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_platformFeeBps",
          "type": "uint256"
        }
      ],
      "name": "setPlatformFeeInfo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IPlatformFee.PlatformFeeType",
          "name": "_feeType",
          "type": "uint8"
        }
      ],
      "name": "setPlatformFeeType",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_saleRecipient",
          "type": "address"
        }
      ],
      "name": "setPrimarySaleRecipient",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_bps",
          "type": "uint256"
        }
      ],
      "name": "setRoyaltyInfoForToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalMinted",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "royaltyRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "royaltyBps",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "primarySaleRecipient",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "uri",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "quantity",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "validityStartTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "validityEndTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "bytes32",
              "name": "uid",
              "type": "bytes32"
            }
          ],
          "internalType": "struct ISignatureMintERC721.MintRequest",
          "name": "_req",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "verify",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "signer",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_claimer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_quantity",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_currency",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_pricePerToken",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            }
          ],
          "internalType": "struct IDropSinglePhase.AllowlistProof",
          "name": "_allowlistProof",
          "type": "tuple"
        }
      ],
      "name": "verifyClaim",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isOverride",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b50615ff580620000216000396000f3fe6080604052600436106102e35760003560e01c80638da5cb5b116101825780638da5cb5b146107735780639010d07c1461079157806391d14854146107b1578063938e3d7b146107d157806395d89b41146107f15780639bcf7a15146108065780639fc4d68f14610826578063a05112fc14610846578063a0a8e46014610866578063a217fddf14610882578063a22cb46514610897578063a2309ff8146108b7578063a32fa5b3146108cd578063ac9650d8146108ed578063b24f2d391461091a578063b6f10c7914610945578063b88d4fde14610965578063c87b56dd14610985578063ca15c873146109a5578063cb2ef6f7146109c5578063ce805642146109e8578063d37c353b14610a08578063d45573f614610a28578063d547741f14610a3d578063d637ed5914610a5d578063e159163414610a86578063e57553da14610aa6578063e715032214610aca578063e8a3d48514610aea578063e985e9c514610aff578063eec8897c14610b49578063f28083c314610b6957600080fd5b806301ffc9a7146102e857806306fdde031461031d578063079fe40e1461033f578063081812fc1461036c578063095ea7b31461038c57806313af4035146103ae57806318160ddd146103ce5780631e7ac488146103f357806323b872dd146104135780632419f51b14610433578063248a9ca314610453578063252e82e8146104805780632a55205a146104bf5780632f2ff15d146104ed57806335b65e1f1461050d57806336568abe146105515780633b1475a714610571578063426cfaf31461058657806342842e0e146105a657806342966c68146105c6578063439c7be5146105e6578063492e224b146105f95780634cc157df14610619578063572b6c051461065b578063600dd5ea1461067b5780636352211e1461069b57806363b45e2d146106bb5780636f4f2837146106d057806370a08231146106f05780637e54523c14610710578063830405321461073057806384bb1e4214610760575b600080fd5b3480156102f457600080fd5b50610308610303366004614e2a565b610b90565b60405190151581526020015b60405180910390f35b34801561032957600080fd5b50610332610bbc565b6040516103149190614e9f565b34801561034b57600080fd5b50610354610c4f565b6040516001600160a01b039091168152602001610314565b34801561037857600080fd5b50610354610387366004614ebf565b610c5e565b34801561039857600080fd5b506103ac6103a7366004614ef4565b610ca3565b005b3480156103ba57600080fd5b506103ac6103c9366004614f1e565b610d3c565b3480156103da57600080fd5b506101185461011754035b604051908152602001610314565b3480156103ff57600080fd5b506103ac61040e366004614ef4565b610d75565b34801561041f57600080fd5b506103ac61042e366004614f39565b610da7565b34801561043f57600080fd5b506103e561044e366004614ebf565b610db2565b34801561045f57600080fd5b506103e561046e366004614ebf565b6000908152600e602052604090205490565b34801561048c57600080fd5b506104a061049b366004614fb6565b610e20565b6040805192151583526001600160a01b03909116602083015201610314565b3480156104cb57600080fd5b506104df6104da366004615027565b610e64565b604051610314929190615049565b3480156104f957600080fd5b506103ac610508366004615062565b610ea1565b34801561051957600080fd5b506103e5610528366004614f1e565b60185460009081526019602090815260408083206001600160a01b039094168352929052205490565b34801561055d57600080fd5b506103ac61056c366004615062565b610f37565b34801561057d57600080fd5b50600c546103e5565b34801561059257600080fd5b506103ac6105a136600461509c565b610f96565b3480156105b257600080fd5b506103ac6105c1366004614f39565b6111ad565b3480156105d257600080fd5b506103ac6105e1366004614ebf565b6111c8565b6103546105f4366004614fb6565b6111d3565b34801561060557600080fd5b50610308610614366004614ebf565b61130d565b34801561062557600080fd5b50610639610634366004614ebf565b611333565b604080516001600160a01b03909316835261ffff909116602083015201610314565b34801561066757600080fd5b50610308610676366004614f1e565b61139e565b34801561068757600080fd5b506103ac610696366004614ef4565b6113bc565b3480156106a757600080fd5b506103546106b6366004614ebf565b6113ea565b3480156106c757600080fd5b506009546103e5565b3480156106dc57600080fd5b506103ac6106eb366004614f1e565b6113fc565b3480156106fc57600080fd5b506103e561070b366004614f1e565b611429565b34801561071c57600080fd5b506103ac61072b366004614ef4565b611478565b34801561073c57600080fd5b5061030861074b366004614ebf565b600b6020526000908152604090205460ff1681565b6103ac61076e3660046151c8565b6114a6565b34801561077f57600080fd5b506007546001600160a01b0316610354565b34801561079d57600080fd5b506103546107ac366004615027565b6115ad565b3480156107bd57600080fd5b506103086107cc366004615062565b61169c565b3480156107dd57600080fd5b506103ac6107ec36600461525e565b6116c7565b3480156107fd57600080fd5b506103326116f4565b34801561081257600080fd5b506103ac610821366004615292565b611704565b34801561083257600080fd5b506103326108413660046152b7565b611733565b34801561085257600080fd5b50610332610861366004614ebf565b6118b4565b34801561087257600080fd5b5060405160058152602001610314565b34801561088e57600080fd5b506103e5600081565b3480156108a357600080fd5b506103ac6108b23660046152f5565b61194e565b3480156108c357600080fd5b50610117546103e5565b3480156108d957600080fd5b506103086108e8366004615062565b611a22565b3480156108f957600080fd5b5061090d610908366004615311565b611a78565b6040516103149190615385565b34801561092657600080fd5b506004546001600160a01b03811690600160a01b900461ffff16610639565b34801561095157600080fd5b506103ac6109603660046153e7565b611b6c565b34801561097157600080fd5b506103ac610980366004615408565b611b99565b34801561099157600080fd5b506103326109a0366004614ebf565b611bea565b3480156109b157600080fd5b506103e56109c0366004614ebf565b611c59565b3480156109d157600080fd5b506c05369676e617475726544726f7609c1b6103e5565b3480156109f457600080fd5b50610332610a033660046152b7565b611ce2565b348015610a1457600080fd5b506103e5610a2336600461546f565b611d70565b348015610a3457600080fd5b50610639611e08565b348015610a4957600080fd5b506103ac610a58366004615062565b611e25565b348015610a6957600080fd5b50610a72611e3e565b6040516103149897969594939291906154e8565b348015610a9257600080fd5b506103ac610aa13660046155cf565b611efd565b348015610ab257600080fd5b506104df6002546003546001600160a01b0390911691565b348015610ad657600080fd5b50610332610ae53660046156e1565b6120ea565b348015610af657600080fd5b5061033261215f565b348015610b0b57600080fd5b50610308610b1a36600461572f565b6001600160a01b03918216600090815261011e6020908152604080832093909416825291909152205460ff1690565b348015610b5557600080fd5b50610308610b64366004615759565b61216c565b348015610b7557600080fd5b50600254600160b01b900460ff1660405161031491906157e0565b6000610b9b82612517565b80610bb6575063152a902d60e11b6001600160e01b03198316145b92915050565b60606101198054610bcc90615808565b80601f0160208091040260200160405190810160405280929190818152602001828054610bf890615808565b8015610c455780601f10610c1a57610100808354040283529160200191610c45565b820191906000526020600020905b815481529060010190602001808311610c2857829003601f168201915b5050505050905090565b6006546001600160a01b031690565b6000610c6982612567565b610c86576040516333d1c03960e21b815260040160405180910390fd5b50600090815261011d60205260409020546001600160a01b031690565b6000610cae826113ea565b9050806001600160a01b0316836001600160a01b03161415610ce35760405163250fdee360e21b815260040160405180910390fd5b806001600160a01b0316610cf5612595565b6001600160a01b031614610d2c57610d0f81610b1a612595565b610d2c576040516367d9dca160e11b815260040160405180910390fd5b610d378383836125a4565b505050565b610d44612601565b610d695760405162461bcd60e51b8152600401610d609061583d565b60405180910390fd5b610d728161260f565b50565b610d7d612601565b610d995760405162461bcd60e51b8152600401610d609061583d565b610da38282612661565b5050565b610d378383836126ef565b6000610dbd60095490565b8210610dfb5760405162461bcd60e51b815260206004820152600d60248201526c092dcecc2d8d2c840d2dcc8caf609b1b6044820152606401610d60565b60098281548110610e0e57610e0e615865565b90600052602060002001549050919050565b600080610e2e8585856128fb565b6101408601356000908152604e602052604090205490915060ff16158015610e5a5750610e5a81612961565b9150935093915050565b600080600080610e7386611333565b90945084925061ffff169050612710610e8c8287615891565b610e9691906158c6565b925050509250929050565b6000828152600e6020526040902054610eba9033612970565b6000828152600d602090815260408083206001600160a01b038516845290915290205460ff1615610f2d5760405162461bcd60e51b815260206004820152601d60248201527f43616e206f6e6c79206772616e7420746f206e6f6e20686f6c646572730000006044820152606401610d60565b610da382826129f0565b336001600160a01b03821614610f8c5760405162461bcd60e51b815260206004820152601a60248201527921b0b71037b7363c903932b737bab731b2903337b91039b2b63360311b6044820152606401610d60565b610da38282612a04565b610f9e612601565b610fba5760405162461bcd60e51b8152600401610d609061583d565b601854601254821561100b57506000610fd1612a5b565b60405160609190911b6001600160601b03191660208201524360348201526054016040516020818303038152906040528051906020012091505b83602001358111156110545760405162461bcd60e51b81526020600482015260126024820152711b585e081cdd5c1c1b1e4818db185a5b595960721b6044820152606401610d60565b604051806101000160405280856000013581526020018560200135815260200182815260200185606001358152602001856080013581526020018560a0013581526020018560c00160208101906110ab9190614f1e565b6001600160a01b031681526020016110c660e08701876158da565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050509152508051601090815560208083015160115560408301516012556060830151601355608083015160145560a083015160155560c0830151601680546001600160a01b0319166001600160a01b0390921691909117905560e08301518051611165926017920190614d7b565b50505060188290556040517f6dab9d7d05d468100139089b2516cb8ff286c3972ff070d3b509e371f0d0d4b89061119f908690869061598e565b60405180910390a150505050565b610d3783838360405180602001604052806000815250611b99565b610d72816001612a65565b61011754600c54600091906111ec60a087013583615a25565b111561120a5760405162461bcd60e51b8152600401610d6090615a3d565b611215858585612c49565b915060006112266020870187614f1e565b905061125b61123b6080880160608901614f1e565b60a08801356112516101008a0160e08b01614f1e565b8960c00135612dd2565b600061126d6040880160208901614f1e565b6001600160a01b0316141580156112875750604086013515155b156112aa576112aa826112a06040890160208a01614f1e565b8860400135612f12565b6112b8818760a00135612fb9565b81816001600160a01b0316846001600160a01b03167fee0cf9c3e87795b1932d13f80f892f620f567b4465e768ced5d64aa44ca1d64c896040516112fc9190615a5e565b60405180910390a450509392505050565b6000818152600860205260408120805482919061132990615808565b9050119050919050565b6000818152600560209081526040808320815180830190925280546001600160a01b03168083526001909101549282019290925282911561137a5780516020820151611394565b6004546001600160a01b03811690600160a01b900461ffff165b9250925050915091565b6001600160a01b031660009081526081602052604090205460ff1690565b6113c4612601565b6113e05760405162461bcd60e51b8152600401610d609061583d565b610da38282612fd3565b60006113f582613050565b5192915050565b611404612601565b6114205760405162461bcd60e51b8152600401610d609061583d565b610d728161316d565b60006001600160a01b038216611452576040516323d3ad8160e21b815260040160405180910390fd5b506001600160a01b0316600090815261011c60205260409020546001600160401b031690565b611480612601565b61149c5760405162461bcd60e51b8152600401610d609061583d565b610da382826131b7565b6114b4868686868686613215565b6018546114cb6114c2612a5b565b8787878761216c565b5085601060020160008282546114e19190615a25565b9091555050600081815260196020526040812087916114fe612a5b565b6001600160a01b03166001600160a01b03168152602001908152602001600020600082825461152d9190615a25565b9091555061154090506000878787612dd2565b600061154c888861324d565b905080886001600160a01b0316611561612a5b565b6001600160a01b03167fff097c7d8b1957a4ff09ef1361b5fb54dcede3941ba836d0beb9d10bec725de68a60405161159b91815260200190565b60405180910390a45050505050505050565b6000828152600f602052604081205481805b82811015611693576000868152600f602090815260408083208484526001019091529020546001600160a01b03161561163c578482141561162a576000868152600f602090815260408083209383526001909301905220546001600160a01b03169250610bb6915050565b611635600183615a25565b9150611681565b61164786600061169c565b801561166e57506000868152600f6020908152604080832083805260020190915290205481145b156116815761167e600183615a25565b91505b61168c600182615a25565b90506115bf565b50505092915050565b6000918252600d602090815260408084206001600160a01b0393909316845291905290205460ff1690565b6116cf612601565b6116eb5760405162461bcd60e51b8152600401610d609061583d565b610d728161325b565b606061011a8054610bcc90615808565b61170c612601565b6117285760405162461bcd60e51b8152600401610d609061583d565b610d37838383612f12565b60008381526008602052604081208054606092919061175190615808565b80601f016020809104026020016040519081016040528092919081815260200182805461177d90615808565b80156117ca5780601f1061179f576101008083540402835291602001916117ca565b820191906000526020600020905b8154815290600101906020018083116117ad57829003601f168201915b505050505090508051600014156118175760405162461bcd60e51b8152602060048201526011602482015270139bdd1a1a5b99c81d1bc81c995d99585b607a1b6044820152606401610d60565b6000808280602001905181019061182e9190615b6c565b9150915061183d8287876120ea565b935080848787466040516020016118579493929190615bec565b60405160208183030381529060405280519060200120146118aa5760405162461bcd60e51b815260206004820152600d60248201526c496e636f7272656374206b657960981b6044820152606401610d60565b5050509392505050565b600860205260009081526040902080546118cd90615808565b80601f01602080910402602001604051908101604052809291908181526020018280546118f990615808565b80156119465780601f1061191b57610100808354040283529160200191611946565b820191906000526020600020905b81548152906001019060200180831161192957829003601f168201915b505050505081565b611956612595565b6001600160a01b0316826001600160a01b031614156119885760405163b06307db60e01b815260040160405180910390fd5b8061011e6000611996612595565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff1916921515929092179091556119da612595565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051611a16911515815260200190565b60405180910390a35050565b6000828152600d6020908152604080832083805290915281205460ff16611a6f57506000828152600d602090815260408083206001600160a01b038516845290915290205460ff16610bb6565b50600192915050565b6060816001600160401b03811115611a9257611a92615105565b604051908082528060200260200182016040528015611ac557816020015b6060815260200190600190039081611ab05790505b50905060005b82811015611b6557611b3530858584818110611ae957611ae9615865565b9050602002810190611afb91906158da565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061333192505050565b828281518110611b4757611b47615865565b60200260200101819052508080611b5d90615c15565b915050611acb565b5092915050565b611b74612601565b611b905760405162461bcd60e51b8152600401610d609061583d565b610d7281613423565b611ba48484846126ef565b611bb6836001600160a01b0316613487565b15611be457611bc784848484613496565b611be4576040516368d2bf6b60e11b815260040160405180910390fd5b50505050565b60606000611bf783613585565b5090506000611c058461368a565b9050611c108261130d565b15611c3e5780604051602001611c269190615c30565b60405160208183030381529060405292505050919050565b80611c48856137eb565b604051602001611c26929190615c55565b6000818152600f6020526040812054815b81811015611cbd576000848152600f602090815260408083208484526001019091529020546001600160a01b031615611cab57611ca8600184615a25565b92505b611cb6600182615a25565b9050611c6a565b50611cc983600061169c565b15611cdc57611cd9600183615a25565b91505b50919050565b606061014a54611cf28133612970565b6000611cfd86610db2565b9050611d0a818686611733565b9250611d2581604051806020016040528060008152506138e8565b611d2f8184613907565b857f6df1d8db2a036436ffe0b2d1833f2c5f1e624818dfce2578c0faa4b83ef9998d84604051611d5f9190614e9f565b60405180910390a250509392505050565b60008115611df157600080611d8784860186615c84565b915091508151600014158015611d9c57508015155b15611dee57611dee88600c54611db29190615a25565b86868080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506138e892505050565b50505b611dfe86868686866139b3565b9695505050505050565b6002546001600160a01b03811691600160a01b90910461ffff1690565b6000828152600e6020526040902054610f8c9033612970565b60108054601154601254601354601454601554601654601780549798969795969495939492936001600160a01b039092169291611e7a90615808565b80601f0160208091040260200160405190810160405280929190818152602001828054611ea690615808565b8015611ef35780601f10611ec857610100808354040283529160200191611ef3565b820191906000526020600020905b815481529060010190602001808311611ed657829003601f168201915b5050505050905088565b600054610100900460ff1615808015611f1d5750600054600160ff909116105b80611f3e5750611f2c30613487565b158015611f3e575060005460ff166001145b611fa15760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610d60565b6000805460ff191660011790558015611fc4576000805461ff0019166101001790555b7f8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a661200f89613abd565b6120198c8c613af5565b612021613b26565b61202a8a61325b565b6120338d61260f565b61203e60008e6129f0565b612048818e6129f0565b612052828e6129f0565b61205d8260006129f0565b61207084866001600160801b0316612661565b61208387876001600160801b0316612fd3565b61208c8861316d565b6101499190915561014a5580156120dd576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050505050505050565b8251604080518083016020019091528181529060005b8181101561215657600085858360405160200161211f93929190615cc8565b60408051601f1981840301815291905280516020918201208884018201511885840182015261214f915082615a25565b9050612100565b50509392505050565b600180546118cd90615808565b60408051610100810182526010805482526011546020830152601254928201929092526013546060820152601454608082015260155460a08201526016546001600160a01b031660c082015260178054600093849392909160e0840191906121d390615808565b80601f01602080910402602001604051908101604052809291908181526020018280546121ff90615808565b801561224c5780601f106122215761010080835404028352916020019161224c565b820191906000526020600020905b81548152906001019060200180831161222f57829003601f168201915b50505091909252505050606081015160a082015160c0830151608084015193945091929091901561232c576123286122848780615cda565b80806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250505060808088015191508d9060208b01359060408c0135906122d9908d0160608e01614f1e565b6040516001600160601b0319606095861b811660208301526034820194909452605481019290925290921b16607482015260880160405160208183030381529060405280519060200120613b9d565b5094505b84156123b15760208601356123415782612347565b85602001355b92506000198660400135141561235d5781612363565b85604001355b9150600019866040013514158015612394575060006123886080880160608901614f1e565b6001600160a01b031614155b61239e57806123ae565b6123ae6080870160608801614f1e565b90505b60185460009081526019602090815260408083206001600160a01b03808f168552925290912054908981169083161415806123ec5750828814155b1561242c5760405162461bcd60e51b815260206004820152601060248201526f2150726963654f7243757272656e637960801b6044820152606401610d60565b89158061244157508361243f828c615a25565b115b156124775760405162461bcd60e51b8152600401610d60906020808252600490820152632151747960e01b604082015260600190565b84602001518a866040015161248c9190615a25565b11156124c75760405162461bcd60e51b815260206004820152600a602482015269214d6178537570706c7960b01b6044820152606401610d60565b84514210156125095760405162461bcd60e51b815260206004820152600e60248201526d18d85b9d0818db185a5b481e595d60921b6044820152606401610d60565b505050505095945050505050565b60006001600160e01b031982166380ac58cd60e01b148061254857506001600160e01b03198216635b5e139f60e01b145b80610bb657506301ffc9a760e01b6001600160e01b0319831614610bb6565b60006101175482108015610bb6575050600090815261011b6020526040902054600160e01b900460ff161590565b600061259f613c6b565b905090565b600082815261011d602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b600061259f816107cc612595565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b6127108111156126835760405162461bcd60e51b8152600401610d6090615d23565b600280546001600160b01b031916600160a01b61ffff8416026001600160a01b031916176001600160a01b0384169081179091556040518281527fe2497bd806ec41a6e0dd992c29a72efc0ef8fec9092d1978fd4a1e00b2f18304906020015b60405180910390a25050565b60006126fa82613050565b9050836001600160a01b031681600001516001600160a01b0316146127315760405162a1148160e81b815260040160405180910390fd5b6000846001600160a01b0316612745612595565b6001600160a01b03161480612761575061276185610b1a612595565b8061278c575061276f612595565b6001600160a01b031661278184610c5e565b6001600160a01b0316145b9050806127ac57604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b0384166127d357604051633a954ecd60e21b815260040160405180910390fd5b6127e08585856001613c8d565b6127ec600084876125a4565b6001600160a01b03858116600090815261011c6020908152604080832080546001600160401b03198082166001600160401b039283166000190183161790925589861680865283862080549384169383166001908101841694909417905589865261011b90945282852080546001600160e01b031916909417600160a01b429092169190910217835587018084529220805491939091166128c2576101175482146128c257805460208601516001600160401b0316600160a01b026001600160e01b03199091166001600160a01b038a16171781555b50505082846001600160a01b0316866001600160a01b0316600080516020615fa083398151915260405160405180910390a45050505050565b600061295783838080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061295192506129459150889050613d2b565b80519060200120613e72565b90613ec0565b90505b9392505050565b6000610bb661014a548361169c565b6000828152600d602090815260408083206001600160a01b038516845290915290205460ff16610da3576129ae816001600160a01b03166014613ee4565b6129b9836020613ee4565b6040516020016129ca929190615d4c565b60408051601f198184030181529082905262461bcd60e51b8252610d6091600401614e9f565b6129fa828261407f565b610da382826140da565b612a0e8282614147565b6000828152600f602090815260408083206001600160a01b03851680855260028201808552838620805487526001909301855292852080546001600160a01b031916905584529152555050565b600061259f612595565b6000612a7083613050565b80519091508215612af8576000816001600160a01b0316612a8f612595565b6001600160a01b03161480612aab5750612aab82610b1a612595565b80612ad65750612ab9612595565b6001600160a01b0316612acb86610c5e565b6001600160a01b0316145b905080612af657604051632ce44b5f60e11b815260040160405180910390fd5b505b612b06816000866001613c8d565b612b12600085836125a4565b6001600160a01b03808216600081815261011c602090815260408083208054600160801b6000196001600160401b038084169190910181166001600160401b03198416811783900482166001908101831690930267ffffffffffffffff67ffffffffffffffff60801b0119909416179290921783558b865261011b909452828520805460ff60e01b1942909316600160a01b026001600160e01b03199091169097179690961716600160e01b178555918901808452922080549194909116612c0f57610117548214612c0f57805460208701516001600160401b0316600160a01b026001600160e01b03199091166001600160a01b038716171781555b5050604051869250600091506001600160a01b03841690600080516020615fa0833981519152908390a45050610118805460010190555050565b600080612c57858585610e20565b9250905080612c965760405162461bcd60e51b815260206004820152600b60248201526a496e76616c69642072657160a81b6044820152606401610d60565b42612ca961012087016101008801615db9565b6001600160801b03161180612cd75750612ccb61014086016101208701615db9565b6001600160801b031642115b15612d125760405162461bcd60e51b815260206004820152600b60248201526a14995c48195e1c1a5c995960aa1b6044820152606401610d60565b6000612d216020870187614f1e565b6001600160a01b03161415612d6e5760405162461bcd60e51b81526020600482015260136024820152721c9958da5c1a595b9d081d5b9919599a5b9959606a1b6044820152606401610d60565b60008560a0013511612daa5760405162461bcd60e51b8152602060048201526005602482015264302071747960d81b6044820152606401610d60565b50610140909301356000908152604e60205260409020805460ff191660011790555090919050565b80612dfa573415612df55760405162461bcd60e51b8152600401610d6090615dd4565b611be4565b600080612e05611e08565b909250905060006001600160a01b03871615612e215786612e29565b612e29610c4f565b90506000612e378588615891565b90506000612710612e4c61ffff861684615891565b612e5691906158c6565b90506001600160a01b03871673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1415612eba57813414612eb55760405162461bcd60e51b815260206004820152600660248201526521507269636560d01b6044820152606401610d60565b612ed8565b3415612ed85760405162461bcd60e51b8152600401610d6090615dd4565b612eeb87612ee4612595565b87846141a9565b612f0787612ef7612595565b85612f028587615df4565b6141a9565b505050505050505050565b612710811115612f345760405162461bcd60e51b8152600401610d6090615d23565b6040805180820182526001600160a01b038481168083526020808401868152600089815260058352869020945185546001600160a01b031916941693909317845591516001909301929092559151838152909185917f7365cf4122f072a3365c20d54eff9b38d73c096c28e1892ec8f5b0e403a0f12d910160405180910390a3505050565b610da38282604051806020016040528060008152506141ee565b612710811115612ff55760405162461bcd60e51b8152600401610d6090615d23565b600480546001600160a01b0384166001600160b01b03199091168117600160a01b61ffff851602179091556040518281527f90d7ec04bcb8978719414f82e52e4cb651db41d0e6f8cea6118c2191e6183adb906020016126e3565b6040805160608101825260008082526020820181905291810191909152816101175481101561315457600081815261011b6020908152604091829020825160608101845290546001600160a01b0381168252600160a01b81046001600160401b031692820192909252600160e01b90910460ff161515918101829052906131525780516001600160a01b0316156130e8579392505050565b5060001901600081815261011b6020908152604091829020825160608101845290546001600160a01b038116808352600160a01b82046001600160401b031693830193909352600160e01b900460ff161515928101929092521561314d579392505050565b6130e8565b505b604051636f96cda160e11b815260040160405180910390fd5b600680546001600160a01b0319166001600160a01b0383169081179091556040517f299d17e95023f496e0ffc4909cff1a61f74bb5eb18de6f900f4155bfa1b3b33390600090a250565b6003819055600280546001600160a01b0319166001600160a01b0384161790556040517ff8086cee80709bd44c82f89dbca54115ebd05e840a88ab81df9cf5be9754eb63906132099084908490615049565b60405180910390a15050565b600c5485610117546132279190615a25565b11156132455760405162461bcd60e51b8152600401610d6090615a3d565b505050505050565b61011754610bb68383612fb9565b60006001805461326a90615808565b80601f016020809104026020016040519081016040528092919081815260200182805461329690615808565b80156132e35780601f106132b8576101008083540402835291602001916132e3565b820191906000526020600020905b8154815290600101906020018083116132c657829003601f168201915b505085519394506132ff93600193506020870192509050614d7b565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a168183604051613209929190615e0b565b606061333c83613487565b6133975760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610d60565b600080846001600160a01b0316846040516133b29190615e30565b600060405180830381855af49150503d80600081146133ed576040519150601f19603f3d011682016040523d82523d6000602084013e6133f2565b606091505b509150915061341a8282604051806060016040528060278152602001615f7960279139614398565b95945050505050565b6002805482919060ff60b01b1916600160b01b836001811115613448576134486157ca565b02179055507fd246da9440709ce0dd3f4fd669abc85ada012ab9774b8ecdcc5059ba1486b9c18160405161347c91906157e0565b60405180910390a150565b6001600160a01b03163b151590565b6000836001600160a01b031663150b7a026134af612595565b8786866040518563ffffffff1660e01b81526004016134d19493929190615e4c565b6020604051808303816000875af192505050801561350c575060408051601f3d908101601f1916820190925261350991810190615e7f565b60015b613567573d80801561353a576040519150601f19603f3d011682016040523d82523d6000602084013e61353f565b606091505b50805161355f576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490505b949350505050565b600080600061359360095490565b9050600060098054806020026020016040519081016040528092919081815260200182805480156135e357602002820191906000526020600020905b8154815260200190600101908083116135cf575b5050505050905060005b8281101561364f5781818151811061360757613607615865565b602002602001015186101561363d5780935081818151811061362b5761362b615865565b60200260200101519450505050915091565b613648600182615a25565b90506135ed565b5060405162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a59081d1bdad95b9259608a1b6044820152606401610d60565b6060600061369760095490565b9050600060098054806020026020016040519081016040528092919081815260200182805480156136e757602002820191906000526020600020905b8154815260200190600101908083116136d3575b5050505050905060005b8281101561364f5781818151811061370b5761370b615865565b60200260200101518510156137d957600a600083838151811061373057613730615865565b60200260200101518152602001908152602001600020805461375190615808565b80601f016020809104026020016040519081016040528092919081815260200182805461377d90615808565b80156137ca5780601f1061379f576101008083540402835291602001916137ca565b820191906000526020600020905b8154815290600101906020018083116137ad57829003601f168201915b50505050509350505050919050565b6137e4600182615a25565b90506136f1565b60608161380f5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115613839578061382381615c15565b91506138329050600a836158c6565b9150613813565b6000816001600160401b0381111561385357613853615105565b6040519080825280601f01601f19166020018201604052801561387d576020820181803683370190505b5090505b841561357d57613892600183615df4565b915061389f600a86615e9c565b6138aa906030615a25565b60f81b8183815181106138bf576138bf615865565b60200101906001600160f81b031916908160001a9053506138e1600a866158c6565b9450613881565b60008281526008602090815260409091208251610d3792840190614d7b565b6000828152600b602052604090205460ff16156139555760405162461bcd60e51b815260206004820152600c60248201526b2130ba31b410333937bd32b760a11b6044820152606401610d60565b6000828152600a60209081526040909120825161397492840190614d7b565b507f6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c61399f836143d1565b604080519182526020820185905201613209565b60006139bd6144ec565b6139d95760405162461bcd60e51b8152600401610d609061583d565b85613a0e5760405162461bcd60e51b81526020600482015260056024820152640c08185b5d60da1b6044820152606401610d60565b6000600c549050613a56818888888080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506144fd92505050565b600c919091559150807f2a0365091ef1a40953c670dce28177e37520648a6fdc91506bffac0ab045570d6001613a8c8a84615a25565b613a969190615df4565b88888888604051613aab959493929190615eb0565b60405180910390a25095945050505050565b600054610100900460ff16613ae45760405162461bcd60e51b8152600401610d6090615ee9565b613aec61456a565b610d7281614591565b600054610100900460ff16613b1c5760405162461bcd60e51b8152600401610d6090615ee9565b610da38282614620565b600054610100900460ff16613b4d5760405162461bcd60e51b8152600401610d6090615ee9565b613b9b604051806040016040528060138152602001725369676e61747572654d696e7445524337323160681b815250604051806040016040528060018152602001603160f81b81525061467b565b565b6000808281805b8751811015613c5f57613bb8600283615891565b91506000888281518110613bce57613bce615865565b60200260200101519050808411613c10576040805160208101869052908101829052606001604051602081830303815290604052805190602001209350613c4c565b6040805160208101839052908101859052606001604051602081830303815290604052805190602001209350600183613c499190615a25565b92505b5080613c5781615c15565b915050613ba4565b50941495939450505050565b6000613c763361139e565b15613c88575060131936013560601c90565b503390565b613c9b61014954600061169c565b158015613cb057506001600160a01b03841615155b8015613cc457506001600160a01b03831615155b15611be457613cd6610149548561169c565b158015613ced5750613ceb610149548461169c565b155b15611be45760405162461bcd60e51b815260206004820152600e60248201526d215472616e736665722d526f6c6560901b6044820152606401610d60565b60607fef2a0374db4a48b74209fd1a525c32d62e54c4185cbabd807193b07a40081d44613d5b6020840184614f1e565b613d6b6040850160208601614f1e565b6040850135613d806080870160608801614f1e565b613d8d60808801886158da565b604051613d9b929190615f34565b60405190819003902060a088013560c0890135613dbf6101008b0160e08c01614f1e565b613dd16101208c016101008d01615db9565b613de36101408d016101208e01615db9565b60408051602081019c909c526001600160a01b039a8b16908c015297891660608b015260808a019690965293871660a089015260c088019290925260e08701526101008601529092166101208401526001600160801b039182166101408085019190915291166101608301528301356101808201526101a0016040516020818303038152906040529050919050565b6000610bb6613e7f6146ac565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b6000806000613ecf8585614727565b91509150613edc8161476d565b509392505050565b60606000613ef3836002615891565b613efe906002615a25565b6001600160401b03811115613f1557613f15615105565b6040519080825280601f01601f191660200182016040528015613f3f576020820181803683370190505b509050600360fc1b81600081518110613f5a57613f5a615865565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110613f8957613f89615865565b60200101906001600160f81b031916908160001a9053506000613fad846002615891565b613fb8906001615a25565b90505b6001811115614030576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110613fec57613fec615865565b1a60f81b82828151811061400257614002615865565b60200101906001600160f81b031916908160001a90535060049490941c9361402981615f44565b9050613fbb565b50831561295a5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610d60565b6000828152600d602090815260408083206001600160a01b0385168085529252808320805460ff1916600117905551339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b6000828152600f60205260408120805491600191906140f98385615a25565b90915550506000928352600f6020908152604080852083865260018101835281862080546001600160a01b039096166001600160a01b03199096168617905593855260029093019052912055565b6141518282612970565b6000828152600d602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b806141b357611be4565b6001600160a01b03841673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14156141e257612df58282614923565b611be4848484846149c5565b610117546001600160a01b03841661421857604051622e076360e81b815260040160405180910390fd5b826142365760405163b562e8dd60e01b815260040160405180910390fd5b6142436000858386613c8d565b6001600160a01b038416600081815261011c6020908152604080832080546001600160801b031981166001600160401b038083168b018116918217600160401b6001600160401b031990941690921783900481168b0181169092021790915585845261011b90925290912080546001600160e01b0319168317600160a01b42909316929092029190911790558190818501906142de90613487565b15614355575b60405182906001600160a01b03881690600090600080516020615fa0833981519152908290a461431d6000878480600101955087613496565b61433a576040516368d2bf6b60e11b815260040160405180910390fd5b8082106142e45782610117541461435057600080fd5b614388565b5b6040516001830192906001600160a01b03881690600090600080516020615fa0833981519152908290a4808210614356575b5061011755611be4600085838684565b606083156143a757508161295a565b8251156143b75782518084602001fd5b8160405162461bcd60e51b8152600401610d609190614e9f565b6000806143dd60095490565b90506000600980548060200260200160405190810160405280929190818152602001828054801561442d57602002820191906000526020600020905b815481526020019060010190808311614419575b5050505050905060005b828110156144b15781818151811061445157614451615865565b602002602001015185141561449f5780156144945781614472600183615df4565b8151811061448257614482615865565b60200260200101519350505050919050565b506000949350505050565b806144a981615c15565b915050614437565b5060405162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a590818985d18da1259608a1b6044820152606401610d60565b600061259f61014a546107cc612595565b60008061450a8486615a25565b60098054600181019091557f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af018190556000818152600a602090815260409091208551929450849350614561929091860190614d7b565b50935093915050565b600054610100900460ff16613b9b5760405162461bcd60e51b8152600401610d6090615ee9565b600054610100900460ff166145b85760405162461bcd60e51b8152600401610d6090615ee9565b60005b8151811015610da3576001608160008484815181106145dc576145dc615865565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790558061461881615c15565b9150506145bb565b600054610100900460ff166146475760405162461bcd60e51b8152600401610d6090615ee9565b815161465b90610119906020850190614d7b565b5080516146709061011a906020840190614d7b565b506000610117555050565b600054610100900460ff166146a25760405162461bcd60e51b8152600401610d6090615ee9565b610da38282614a1e565b600061259f7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6146db601a5490565b601b546040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b60008082516041141561475e5760208301516040840151606085015160001a61475287828585614a5f565b94509450505050614766565b506000905060025b9250929050565b6000816004811115614781576147816157ca565b141561478a5750565b600181600481111561479e5761479e6157ca565b14156147e75760405162461bcd60e51b815260206004820152601860248201527745434453413a20696e76616c6964207369676e617475726560401b6044820152606401610d60565b60028160048111156147fb576147fb6157ca565b14156148495760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610d60565b600381600481111561485d5761485d6157ca565b14156148b65760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610d60565b60048160048111156148ca576148ca6157ca565b1415610d725760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610d60565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114614970576040519150601f19603f3d011682016040523d82523d6000602084013e614975565b606091505b5050905080610d375760405162461bcd60e51b815260206004820152601c60248201527b1b985d1a5d99481d1bdad95b881d1c985b9cd9995c8819985a5b195960221b6044820152606401610d60565b816001600160a01b0316836001600160a01b031614156149e457611be4565b6001600160a01b038316301415614a0957612df56001600160a01b0385168383614b42565b611be46001600160a01b038516848484614b98565b600054610100900460ff16614a455760405162461bcd60e51b8152600401610d6090615ee9565b815160209283012081519190920120601a91909155601b55565b6000806fa2a8918ca85bafe22016d0b997e4df60600160ff1b03831115614a8c5750600090506003614b39565b8460ff16601b14158015614aa457508460ff16601c14155b15614ab55750600090506004614b39565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015614b09573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116614b3257600060019250925050614b39565b9150600090505b94509492505050565b610d378363a9059cbb60e01b8484604051602401614b61929190615049565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152614bd0565b6040516001600160a01b0380851660248301528316604482015260648101829052611be49085906323b872dd60e01b90608401614b61565b6000614c25826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316614ca29092919063ffffffff16565b805190915015610d375780806020019051810190614c439190615f5b565b610d375760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610d60565b6060612957848460008585614cb685613487565b614d025760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610d60565b600080866001600160a01b03168587604051614d1e9190615e30565b60006040518083038185875af1925050503d8060008114614d5b576040519150601f19603f3d011682016040523d82523d6000602084013e614d60565b606091505b5091509150614d70828286614398565b979650505050505050565b828054614d8790615808565b90600052602060002090601f016020900481019282614da95760008555614def565b82601f10614dc257805160ff1916838001178555614def565b82800160010185558215614def579182015b82811115614def578251825591602001919060010190614dd4565b50614dfb929150614dff565b5090565b5b80821115614dfb5760008155600101614e00565b6001600160e01b031981168114610d7257600080fd5b600060208284031215614e3c57600080fd5b813561295a81614e14565b60005b83811015614e62578181015183820152602001614e4a565b83811115611be45750506000910152565b60008151808452614e8b816020860160208601614e47565b601f01601f19169290920160200192915050565b60208152600061295a6020830184614e73565b6001600160a01b03169052565b600060208284031215614ed157600080fd5b5035919050565b80356001600160a01b0381168114614eef57600080fd5b919050565b60008060408385031215614f0757600080fd5b614f1083614ed8565b946020939093013593505050565b600060208284031215614f3057600080fd5b61295a82614ed8565b600080600060608486031215614f4e57600080fd5b614f5784614ed8565b9250614f6560208501614ed8565b9150604084013590509250925092565b60008083601f840112614f8757600080fd5b5081356001600160401b03811115614f9e57600080fd5b60208301915083602082850101111561476657600080fd5b600080600060408486031215614fcb57600080fd5b83356001600160401b0380821115614fe257600080fd5b908501906101608288031215614ff757600080fd5b9093506020850135908082111561500d57600080fd5b5061501a86828701614f75565b9497909650939450505050565b6000806040838503121561503a57600080fd5b50508035926020909101359150565b6001600160a01b03929092168252602082015260400190565b6000806040838503121561507557600080fd5b8235915061508560208401614ed8565b90509250929050565b8015158114610d7257600080fd5b600080604083850312156150af57600080fd5b82356001600160401b038111156150c557600080fd5b830161010081860312156150d857600080fd5b915060208301356150e88161508e565b809150509250929050565b600060808284031215611cdc57600080fd5b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171561514357615143615105565b604052919050565b60006001600160401b0382111561516457615164615105565b50601f01601f191660200190565b600082601f83011261518357600080fd5b81356151966151918261514b565b61511b565b8181528460208386010111156151ab57600080fd5b816020850160208301376000918101602001919091529392505050565b60008060008060008060c087890312156151e157600080fd5b6151ea87614ed8565b9550602087013594506151ff60408801614ed8565b93506060870135925060808701356001600160401b038082111561522257600080fd5b61522e8a838b016150f3565b935060a089013591508082111561524457600080fd5b5061525189828a01615172565b9150509295509295509295565b60006020828403121561527057600080fd5b81356001600160401b0381111561528657600080fd5b61357d84828501615172565b6000806000606084860312156152a757600080fd5b83359250614f6560208501614ed8565b6000806000604084860312156152cc57600080fd5b8335925060208401356001600160401b038111156152e957600080fd5b61501a86828701614f75565b6000806040838503121561530857600080fd5b6150d883614ed8565b6000806020838503121561532457600080fd5b82356001600160401b038082111561533b57600080fd5b818501915085601f83011261534f57600080fd5b81358181111561535e57600080fd5b8660208260051b850101111561537357600080fd5b60209290920196919550909350505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156153da57603f198886030184526153c8858351614e73565b945092850192908501906001016153ac565b5092979650505050505050565b6000602082840312156153f957600080fd5b81356002811061295a57600080fd5b6000806000806080858703121561541e57600080fd5b61542785614ed8565b935061543560208601614ed8565b92506040850135915060608501356001600160401b0381111561545757600080fd5b61546387828801615172565b91505092959194509250565b60008060008060006060868803121561548757600080fd5b8535945060208601356001600160401b03808211156154a557600080fd5b6154b189838a01614f75565b909650945060408801359150808211156154ca57600080fd5b506154d788828901614f75565b969995985093965092949392505050565b60006101008a83528960208401528860408401528760608401528660808401528560a084015260018060a01b03851660c08401528060e084015261552e81840185614e73565b9b9a5050505050505050505050565b600082601f83011261554e57600080fd5b813560206001600160401b0382111561556957615569615105565b8160051b61557882820161511b565b928352848101820192828101908785111561559257600080fd5b83870192505b84831015614d70576155a983614ed8565b82529183019190830190615598565b80356001600160801b0381168114614eef57600080fd5b6000806000806000806000806000806101408b8d0312156155ef57600080fd5b6155f88b614ed8565b995060208b01356001600160401b038082111561561457600080fd5b6156208e838f01615172565b9a5060408d013591508082111561563657600080fd5b6156428e838f01615172565b995060608d013591508082111561565857600080fd5b6156648e838f01615172565b985060808d013591508082111561567a57600080fd5b506156878d828e0161553d565b96505061569660a08c01614ed8565b94506156a460c08c01614ed8565b93506156b260e08c016155b8565b92506156c16101008c016155b8565b91506156d06101208c01614ed8565b90509295989b9194979a5092959850565b6000806000604084860312156156f657600080fd5b83356001600160401b038082111561570d57600080fd5b61571987838801615172565b9450602086013591508082111561500d57600080fd5b6000806040838503121561574257600080fd5b61574b83614ed8565b915061508560208401614ed8565b600080600080600060a0868803121561577157600080fd5b61577a86614ed8565b94506020860135935061578f60408701614ed8565b92506060860135915060808601356001600160401b038111156157b157600080fd5b6157bd888289016150f3565b9150509295509295909350565b634e487b7160e01b600052602160045260246000fd5b602081016002831061580257634e487b7160e01b600052602160045260246000fd5b91905290565b600181811c9082168061581c57607f821691505b60208210811415611cdc57634e487b7160e01b600052602260045260246000fd5b6020808252600e908201526d139bdd08185d5d1a1bdc9a5e995960921b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156158ab576158ab61587b565b500290565b634e487b7160e01b600052601260045260246000fd5b6000826158d5576158d56158b0565b500490565b6000808335601e198436030181126158f157600080fd5b8301803591506001600160401b0382111561590b57600080fd5b60200191503681900382131561476657600080fd5b6000808335601e1984360301811261593757600080fd5b83016020810192503590506001600160401b0381111561595657600080fd5b80360383131561476657600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60408152823560408201526020830135606082015260408301356080820152606083013560a0820152608083013560c082015260a083013560e082015260006159d960c08501614ed8565b6001600160a01b038116610100848101919091526159fa60e0870187615920565b925081610120860152615a1261014086018483615965565b935050505061295a602083018415159052565b60008219821115615a3857615a3861587b565b500190565b60208082526007908201526621546f6b656e7360c81b604082015260600190565b60208152615a7760208201615a7284614ed8565b614eb2565b6000615a8560208401614ed8565b615a926040840182614eb2565b5060408301356060830152615aa960608401614ed8565b615ab66080840182614eb2565b50615ac46080840184615920565b6101608060a0860152615adc61018086018385615965565b925060a086013560c086015260c086013560e0860152615afe60e08701614ed8565b9150610100615b0f81870184614eb2565b615b1a8188016155b8565b925050610120615b34818701846001600160801b03169052565b615b3f8188016155b8565b925050610140615b59818701846001600160801b03169052565b9590950135939094019290925250919050565b60008060408385031215615b7f57600080fd5b82516001600160401b03811115615b9557600080fd5b8301601f81018513615ba657600080fd5b8051615bb46151918261514b565b818152866020838501011115615bc957600080fd5b615bda826020830160208601614e47565b60209590950151949694955050505050565b60008551615bfe818460208a01614e47565b820184868237909301918252506020019392505050565b6000600019821415615c2957615c2961587b565b5060010190565b60008251615c42818460208701614e47565b600360fc1b920191825250600101919050565b60008351615c67818460208801614e47565b835190830190615c7b818360208801614e47565b01949350505050565b60008060408385031215615c9757600080fd5b82356001600160401b03811115615cad57600080fd5b615cb985828601615172565b95602094909401359450505050565b82848237909101908152602001919050565b6000808335601e19843603018112615cf157600080fd5b8301803591506001600160401b03821115615d0b57600080fd5b6020019150600581901b360382131561476657600080fd5b6020808252600f908201526e45786365656473206d61782062707360881b604082015260600190565b7402832b936b4b9b9b4b7b7399d1030b1b1b7bab73a1605d1b815260008351615d7c816015850160208801614e47565b7001034b99036b4b9b9b4b733903937b6329607d1b6015918401918201528351615dad816026840160208801614e47565b01602601949350505050565b600060208284031215615dcb57600080fd5b61295a826155b8565b6020808252600690820152652156616c756560d01b604082015260600190565b600082821015615e0657615e0661587b565b500390565b604081526000615e1e6040830185614e73565b828103602084015261341a8185614e73565b60008251615e42818460208701614e47565b9190910192915050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611dfe90830184614e73565b600060208284031215615e9157600080fd5b815161295a81614e14565b600082615eab57615eab6158b0565b500690565b858152606060208201526000615eca606083018688615965565b8281036040840152615edd818587615965565b98975050505050505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b8183823760009101908152919050565b600081615f5357615f5361587b565b506000190190565b600060208284031215615f6d57600080fd5b815161295a8161508e56fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220286451442bd6f53b210acd6ff13e89a2f97770da71dd88dcc8decd0f9153765464736f6c634300080c0033",
    "sourceMap": "1736:12027:367:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106102e35760003560e01c80638da5cb5b116101825780638da5cb5b146107735780639010d07c1461079157806391d14854146107b1578063938e3d7b146107d157806395d89b41146107f15780639bcf7a15146108065780639fc4d68f14610826578063a05112fc14610846578063a0a8e46014610866578063a217fddf14610882578063a22cb46514610897578063a2309ff8146108b7578063a32fa5b3146108cd578063ac9650d8146108ed578063b24f2d391461091a578063b6f10c7914610945578063b88d4fde14610965578063c87b56dd14610985578063ca15c873146109a5578063cb2ef6f7146109c5578063ce805642146109e8578063d37c353b14610a08578063d45573f614610a28578063d547741f14610a3d578063d637ed5914610a5d578063e159163414610a86578063e57553da14610aa6578063e715032214610aca578063e8a3d48514610aea578063e985e9c514610aff578063eec8897c14610b49578063f28083c314610b6957600080fd5b806301ffc9a7146102e857806306fdde031461031d578063079fe40e1461033f578063081812fc1461036c578063095ea7b31461038c57806313af4035146103ae57806318160ddd146103ce5780631e7ac488146103f357806323b872dd146104135780632419f51b14610433578063248a9ca314610453578063252e82e8146104805780632a55205a146104bf5780632f2ff15d146104ed57806335b65e1f1461050d57806336568abe146105515780633b1475a714610571578063426cfaf31461058657806342842e0e146105a657806342966c68146105c6578063439c7be5146105e6578063492e224b146105f95780634cc157df14610619578063572b6c051461065b578063600dd5ea1461067b5780636352211e1461069b57806363b45e2d146106bb5780636f4f2837146106d057806370a08231146106f05780637e54523c14610710578063830405321461073057806384bb1e4214610760575b600080fd5b3480156102f457600080fd5b50610308610303366004614e2a565b610b90565b60405190151581526020015b60405180910390f35b34801561032957600080fd5b50610332610bbc565b6040516103149190614e9f565b34801561034b57600080fd5b50610354610c4f565b6040516001600160a01b039091168152602001610314565b34801561037857600080fd5b50610354610387366004614ebf565b610c5e565b34801561039857600080fd5b506103ac6103a7366004614ef4565b610ca3565b005b3480156103ba57600080fd5b506103ac6103c9366004614f1e565b610d3c565b3480156103da57600080fd5b506101185461011754035b604051908152602001610314565b3480156103ff57600080fd5b506103ac61040e366004614ef4565b610d75565b34801561041f57600080fd5b506103ac61042e366004614f39565b610da7565b34801561043f57600080fd5b506103e561044e366004614ebf565b610db2565b34801561045f57600080fd5b506103e561046e366004614ebf565b6000908152600e602052604090205490565b34801561048c57600080fd5b506104a061049b366004614fb6565b610e20565b6040805192151583526001600160a01b03909116602083015201610314565b3480156104cb57600080fd5b506104df6104da366004615027565b610e64565b604051610314929190615049565b3480156104f957600080fd5b506103ac610508366004615062565b610ea1565b34801561051957600080fd5b506103e5610528366004614f1e565b60185460009081526019602090815260408083206001600160a01b039094168352929052205490565b34801561055d57600080fd5b506103ac61056c366004615062565b610f37565b34801561057d57600080fd5b50600c546103e5565b34801561059257600080fd5b506103ac6105a136600461509c565b610f96565b3480156105b257600080fd5b506103ac6105c1366004614f39565b6111ad565b3480156105d257600080fd5b506103ac6105e1366004614ebf565b6111c8565b6103546105f4366004614fb6565b6111d3565b34801561060557600080fd5b50610308610614366004614ebf565b61130d565b34801561062557600080fd5b50610639610634366004614ebf565b611333565b604080516001600160a01b03909316835261ffff909116602083015201610314565b34801561066757600080fd5b50610308610676366004614f1e565b61139e565b34801561068757600080fd5b506103ac610696366004614ef4565b6113bc565b3480156106a757600080fd5b506103546106b6366004614ebf565b6113ea565b3480156106c757600080fd5b506009546103e5565b3480156106dc57600080fd5b506103ac6106eb366004614f1e565b6113fc565b3480156106fc57600080fd5b506103e561070b366004614f1e565b611429565b34801561071c57600080fd5b506103ac61072b366004614ef4565b611478565b34801561073c57600080fd5b5061030861074b366004614ebf565b600b6020526000908152604090205460ff1681565b6103ac61076e3660046151c8565b6114a6565b34801561077f57600080fd5b506007546001600160a01b0316610354565b34801561079d57600080fd5b506103546107ac366004615027565b6115ad565b3480156107bd57600080fd5b506103086107cc366004615062565b61169c565b3480156107dd57600080fd5b506103ac6107ec36600461525e565b6116c7565b3480156107fd57600080fd5b506103326116f4565b34801561081257600080fd5b506103ac610821366004615292565b611704565b34801561083257600080fd5b506103326108413660046152b7565b611733565b34801561085257600080fd5b50610332610861366004614ebf565b6118b4565b34801561087257600080fd5b5060405160058152602001610314565b34801561088e57600080fd5b506103e5600081565b3480156108a357600080fd5b506103ac6108b23660046152f5565b61194e565b3480156108c357600080fd5b50610117546103e5565b3480156108d957600080fd5b506103086108e8366004615062565b611a22565b3480156108f957600080fd5b5061090d610908366004615311565b611a78565b6040516103149190615385565b34801561092657600080fd5b506004546001600160a01b03811690600160a01b900461ffff16610639565b34801561095157600080fd5b506103ac6109603660046153e7565b611b6c565b34801561097157600080fd5b506103ac610980366004615408565b611b99565b34801561099157600080fd5b506103326109a0366004614ebf565b611bea565b3480156109b157600080fd5b506103e56109c0366004614ebf565b611c59565b3480156109d157600080fd5b506c05369676e617475726544726f7609c1b6103e5565b3480156109f457600080fd5b50610332610a033660046152b7565b611ce2565b348015610a1457600080fd5b506103e5610a2336600461546f565b611d70565b348015610a3457600080fd5b50610639611e08565b348015610a4957600080fd5b506103ac610a58366004615062565b611e25565b348015610a6957600080fd5b50610a72611e3e565b6040516103149897969594939291906154e8565b348015610a9257600080fd5b506103ac610aa13660046155cf565b611efd565b348015610ab257600080fd5b506104df6002546003546001600160a01b0390911691565b348015610ad657600080fd5b50610332610ae53660046156e1565b6120ea565b348015610af657600080fd5b5061033261215f565b348015610b0b57600080fd5b50610308610b1a36600461572f565b6001600160a01b03918216600090815261011e6020908152604080832093909416825291909152205460ff1690565b348015610b5557600080fd5b50610308610b64366004615759565b61216c565b348015610b7557600080fd5b50600254600160b01b900460ff1660405161031491906157e0565b6000610b9b82612517565b80610bb6575063152a902d60e11b6001600160e01b03198316145b92915050565b60606101198054610bcc90615808565b80601f0160208091040260200160405190810160405280929190818152602001828054610bf890615808565b8015610c455780601f10610c1a57610100808354040283529160200191610c45565b820191906000526020600020905b815481529060010190602001808311610c2857829003601f168201915b5050505050905090565b6006546001600160a01b031690565b6000610c6982612567565b610c86576040516333d1c03960e21b815260040160405180910390fd5b50600090815261011d60205260409020546001600160a01b031690565b6000610cae826113ea565b9050806001600160a01b0316836001600160a01b03161415610ce35760405163250fdee360e21b815260040160405180910390fd5b806001600160a01b0316610cf5612595565b6001600160a01b031614610d2c57610d0f81610b1a612595565b610d2c576040516367d9dca160e11b815260040160405180910390fd5b610d378383836125a4565b505050565b610d44612601565b610d695760405162461bcd60e51b8152600401610d609061583d565b60405180910390fd5b610d728161260f565b50565b610d7d612601565b610d995760405162461bcd60e51b8152600401610d609061583d565b610da38282612661565b5050565b610d378383836126ef565b6000610dbd60095490565b8210610dfb5760405162461bcd60e51b815260206004820152600d60248201526c092dcecc2d8d2c840d2dcc8caf609b1b6044820152606401610d60565b60098281548110610e0e57610e0e615865565b90600052602060002001549050919050565b600080610e2e8585856128fb565b6101408601356000908152604e602052604090205490915060ff16158015610e5a5750610e5a81612961565b9150935093915050565b600080600080610e7386611333565b90945084925061ffff169050612710610e8c8287615891565b610e9691906158c6565b925050509250929050565b6000828152600e6020526040902054610eba9033612970565b6000828152600d602090815260408083206001600160a01b038516845290915290205460ff1615610f2d5760405162461bcd60e51b815260206004820152601d60248201527f43616e206f6e6c79206772616e7420746f206e6f6e20686f6c646572730000006044820152606401610d60565b610da382826129f0565b336001600160a01b03821614610f8c5760405162461bcd60e51b815260206004820152601a60248201527921b0b71037b7363c903932b737bab731b2903337b91039b2b63360311b6044820152606401610d60565b610da38282612a04565b610f9e612601565b610fba5760405162461bcd60e51b8152600401610d609061583d565b601854601254821561100b57506000610fd1612a5b565b60405160609190911b6001600160601b03191660208201524360348201526054016040516020818303038152906040528051906020012091505b83602001358111156110545760405162461bcd60e51b81526020600482015260126024820152711b585e081cdd5c1c1b1e4818db185a5b595960721b6044820152606401610d60565b604051806101000160405280856000013581526020018560200135815260200182815260200185606001358152602001856080013581526020018560a0013581526020018560c00160208101906110ab9190614f1e565b6001600160a01b031681526020016110c660e08701876158da565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050509152508051601090815560208083015160115560408301516012556060830151601355608083015160145560a083015160155560c0830151601680546001600160a01b0319166001600160a01b0390921691909117905560e08301518051611165926017920190614d7b565b50505060188290556040517f6dab9d7d05d468100139089b2516cb8ff286c3972ff070d3b509e371f0d0d4b89061119f908690869061598e565b60405180910390a150505050565b610d3783838360405180602001604052806000815250611b99565b610d72816001612a65565b61011754600c54600091906111ec60a087013583615a25565b111561120a5760405162461bcd60e51b8152600401610d6090615a3d565b611215858585612c49565b915060006112266020870187614f1e565b905061125b61123b6080880160608901614f1e565b60a08801356112516101008a0160e08b01614f1e565b8960c00135612dd2565b600061126d6040880160208901614f1e565b6001600160a01b0316141580156112875750604086013515155b156112aa576112aa826112a06040890160208a01614f1e565b8860400135612f12565b6112b8818760a00135612fb9565b81816001600160a01b0316846001600160a01b03167fee0cf9c3e87795b1932d13f80f892f620f567b4465e768ced5d64aa44ca1d64c896040516112fc9190615a5e565b60405180910390a450509392505050565b6000818152600860205260408120805482919061132990615808565b9050119050919050565b6000818152600560209081526040808320815180830190925280546001600160a01b03168083526001909101549282019290925282911561137a5780516020820151611394565b6004546001600160a01b03811690600160a01b900461ffff165b9250925050915091565b6001600160a01b031660009081526081602052604090205460ff1690565b6113c4612601565b6113e05760405162461bcd60e51b8152600401610d609061583d565b610da38282612fd3565b60006113f582613050565b5192915050565b611404612601565b6114205760405162461bcd60e51b8152600401610d609061583d565b610d728161316d565b60006001600160a01b038216611452576040516323d3ad8160e21b815260040160405180910390fd5b506001600160a01b0316600090815261011c60205260409020546001600160401b031690565b611480612601565b61149c5760405162461bcd60e51b8152600401610d609061583d565b610da382826131b7565b6114b4868686868686613215565b6018546114cb6114c2612a5b565b8787878761216c565b5085601060020160008282546114e19190615a25565b9091555050600081815260196020526040812087916114fe612a5b565b6001600160a01b03166001600160a01b03168152602001908152602001600020600082825461152d9190615a25565b9091555061154090506000878787612dd2565b600061154c888861324d565b905080886001600160a01b0316611561612a5b565b6001600160a01b03167fff097c7d8b1957a4ff09ef1361b5fb54dcede3941ba836d0beb9d10bec725de68a60405161159b91815260200190565b60405180910390a45050505050505050565b6000828152600f602052604081205481805b82811015611693576000868152600f602090815260408083208484526001019091529020546001600160a01b03161561163c578482141561162a576000868152600f602090815260408083209383526001909301905220546001600160a01b03169250610bb6915050565b611635600183615a25565b9150611681565b61164786600061169c565b801561166e57506000868152600f6020908152604080832083805260020190915290205481145b156116815761167e600183615a25565b91505b61168c600182615a25565b90506115bf565b50505092915050565b6000918252600d602090815260408084206001600160a01b0393909316845291905290205460ff1690565b6116cf612601565b6116eb5760405162461bcd60e51b8152600401610d609061583d565b610d728161325b565b606061011a8054610bcc90615808565b61170c612601565b6117285760405162461bcd60e51b8152600401610d609061583d565b610d37838383612f12565b60008381526008602052604081208054606092919061175190615808565b80601f016020809104026020016040519081016040528092919081815260200182805461177d90615808565b80156117ca5780601f1061179f576101008083540402835291602001916117ca565b820191906000526020600020905b8154815290600101906020018083116117ad57829003601f168201915b505050505090508051600014156118175760405162461bcd60e51b8152602060048201526011602482015270139bdd1a1a5b99c81d1bc81c995d99585b607a1b6044820152606401610d60565b6000808280602001905181019061182e9190615b6c565b9150915061183d8287876120ea565b935080848787466040516020016118579493929190615bec565b60405160208183030381529060405280519060200120146118aa5760405162461bcd60e51b815260206004820152600d60248201526c496e636f7272656374206b657960981b6044820152606401610d60565b5050509392505050565b600860205260009081526040902080546118cd90615808565b80601f01602080910402602001604051908101604052809291908181526020018280546118f990615808565b80156119465780601f1061191b57610100808354040283529160200191611946565b820191906000526020600020905b81548152906001019060200180831161192957829003601f168201915b505050505081565b611956612595565b6001600160a01b0316826001600160a01b031614156119885760405163b06307db60e01b815260040160405180910390fd5b8061011e6000611996612595565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff1916921515929092179091556119da612595565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051611a16911515815260200190565b60405180910390a35050565b6000828152600d6020908152604080832083805290915281205460ff16611a6f57506000828152600d602090815260408083206001600160a01b038516845290915290205460ff16610bb6565b50600192915050565b6060816001600160401b03811115611a9257611a92615105565b604051908082528060200260200182016040528015611ac557816020015b6060815260200190600190039081611ab05790505b50905060005b82811015611b6557611b3530858584818110611ae957611ae9615865565b9050602002810190611afb91906158da565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061333192505050565b828281518110611b4757611b47615865565b60200260200101819052508080611b5d90615c15565b915050611acb565b5092915050565b611b74612601565b611b905760405162461bcd60e51b8152600401610d609061583d565b610d7281613423565b611ba48484846126ef565b611bb6836001600160a01b0316613487565b15611be457611bc784848484613496565b611be4576040516368d2bf6b60e11b815260040160405180910390fd5b50505050565b60606000611bf783613585565b5090506000611c058461368a565b9050611c108261130d565b15611c3e5780604051602001611c269190615c30565b60405160208183030381529060405292505050919050565b80611c48856137eb565b604051602001611c26929190615c55565b6000818152600f6020526040812054815b81811015611cbd576000848152600f602090815260408083208484526001019091529020546001600160a01b031615611cab57611ca8600184615a25565b92505b611cb6600182615a25565b9050611c6a565b50611cc983600061169c565b15611cdc57611cd9600183615a25565b91505b50919050565b606061014a54611cf28133612970565b6000611cfd86610db2565b9050611d0a818686611733565b9250611d2581604051806020016040528060008152506138e8565b611d2f8184613907565b857f6df1d8db2a036436ffe0b2d1833f2c5f1e624818dfce2578c0faa4b83ef9998d84604051611d5f9190614e9f565b60405180910390a250509392505050565b60008115611df157600080611d8784860186615c84565b915091508151600014158015611d9c57508015155b15611dee57611dee88600c54611db29190615a25565b86868080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506138e892505050565b50505b611dfe86868686866139b3565b9695505050505050565b6002546001600160a01b03811691600160a01b90910461ffff1690565b6000828152600e6020526040902054610f8c9033612970565b60108054601154601254601354601454601554601654601780549798969795969495939492936001600160a01b039092169291611e7a90615808565b80601f0160208091040260200160405190810160405280929190818152602001828054611ea690615808565b8015611ef35780601f10611ec857610100808354040283529160200191611ef3565b820191906000526020600020905b815481529060010190602001808311611ed657829003601f168201915b5050505050905088565b600054610100900460ff1615808015611f1d5750600054600160ff909116105b80611f3e5750611f2c30613487565b158015611f3e575060005460ff166001145b611fa15760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610d60565b6000805460ff191660011790558015611fc4576000805461ff0019166101001790555b7f8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a661200f89613abd565b6120198c8c613af5565b612021613b26565b61202a8a61325b565b6120338d61260f565b61203e60008e6129f0565b612048818e6129f0565b612052828e6129f0565b61205d8260006129f0565b61207084866001600160801b0316612661565b61208387876001600160801b0316612fd3565b61208c8861316d565b6101499190915561014a5580156120dd576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050505050505050565b8251604080518083016020019091528181529060005b8181101561215657600085858360405160200161211f93929190615cc8565b60408051601f1981840301815291905280516020918201208884018201511885840182015261214f915082615a25565b9050612100565b50509392505050565b600180546118cd90615808565b60408051610100810182526010805482526011546020830152601254928201929092526013546060820152601454608082015260155460a08201526016546001600160a01b031660c082015260178054600093849392909160e0840191906121d390615808565b80601f01602080910402602001604051908101604052809291908181526020018280546121ff90615808565b801561224c5780601f106122215761010080835404028352916020019161224c565b820191906000526020600020905b81548152906001019060200180831161222f57829003601f168201915b50505091909252505050606081015160a082015160c0830151608084015193945091929091901561232c576123286122848780615cda565b80806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250505060808088015191508d9060208b01359060408c0135906122d9908d0160608e01614f1e565b6040516001600160601b0319606095861b811660208301526034820194909452605481019290925290921b16607482015260880160405160208183030381529060405280519060200120613b9d565b5094505b84156123b15760208601356123415782612347565b85602001355b92506000198660400135141561235d5781612363565b85604001355b9150600019866040013514158015612394575060006123886080880160608901614f1e565b6001600160a01b031614155b61239e57806123ae565b6123ae6080870160608801614f1e565b90505b60185460009081526019602090815260408083206001600160a01b03808f168552925290912054908981169083161415806123ec5750828814155b1561242c5760405162461bcd60e51b815260206004820152601060248201526f2150726963654f7243757272656e637960801b6044820152606401610d60565b89158061244157508361243f828c615a25565b115b156124775760405162461bcd60e51b8152600401610d60906020808252600490820152632151747960e01b604082015260600190565b84602001518a866040015161248c9190615a25565b11156124c75760405162461bcd60e51b815260206004820152600a602482015269214d6178537570706c7960b01b6044820152606401610d60565b84514210156125095760405162461bcd60e51b815260206004820152600e60248201526d18d85b9d0818db185a5b481e595d60921b6044820152606401610d60565b505050505095945050505050565b60006001600160e01b031982166380ac58cd60e01b148061254857506001600160e01b03198216635b5e139f60e01b145b80610bb657506301ffc9a760e01b6001600160e01b0319831614610bb6565b60006101175482108015610bb6575050600090815261011b6020526040902054600160e01b900460ff161590565b600061259f613c6b565b905090565b600082815261011d602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b600061259f816107cc612595565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b6127108111156126835760405162461bcd60e51b8152600401610d6090615d23565b600280546001600160b01b031916600160a01b61ffff8416026001600160a01b031916176001600160a01b0384169081179091556040518281527fe2497bd806ec41a6e0dd992c29a72efc0ef8fec9092d1978fd4a1e00b2f18304906020015b60405180910390a25050565b60006126fa82613050565b9050836001600160a01b031681600001516001600160a01b0316146127315760405162a1148160e81b815260040160405180910390fd5b6000846001600160a01b0316612745612595565b6001600160a01b03161480612761575061276185610b1a612595565b8061278c575061276f612595565b6001600160a01b031661278184610c5e565b6001600160a01b0316145b9050806127ac57604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b0384166127d357604051633a954ecd60e21b815260040160405180910390fd5b6127e08585856001613c8d565b6127ec600084876125a4565b6001600160a01b03858116600090815261011c6020908152604080832080546001600160401b03198082166001600160401b039283166000190183161790925589861680865283862080549384169383166001908101841694909417905589865261011b90945282852080546001600160e01b031916909417600160a01b429092169190910217835587018084529220805491939091166128c2576101175482146128c257805460208601516001600160401b0316600160a01b026001600160e01b03199091166001600160a01b038a16171781555b50505082846001600160a01b0316866001600160a01b0316600080516020615fa083398151915260405160405180910390a45050505050565b600061295783838080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061295192506129459150889050613d2b565b80519060200120613e72565b90613ec0565b90505b9392505050565b6000610bb661014a548361169c565b6000828152600d602090815260408083206001600160a01b038516845290915290205460ff16610da3576129ae816001600160a01b03166014613ee4565b6129b9836020613ee4565b6040516020016129ca929190615d4c565b60408051601f198184030181529082905262461bcd60e51b8252610d6091600401614e9f565b6129fa828261407f565b610da382826140da565b612a0e8282614147565b6000828152600f602090815260408083206001600160a01b03851680855260028201808552838620805487526001909301855292852080546001600160a01b031916905584529152555050565b600061259f612595565b6000612a7083613050565b80519091508215612af8576000816001600160a01b0316612a8f612595565b6001600160a01b03161480612aab5750612aab82610b1a612595565b80612ad65750612ab9612595565b6001600160a01b0316612acb86610c5e565b6001600160a01b0316145b905080612af657604051632ce44b5f60e11b815260040160405180910390fd5b505b612b06816000866001613c8d565b612b12600085836125a4565b6001600160a01b03808216600081815261011c602090815260408083208054600160801b6000196001600160401b038084169190910181166001600160401b03198416811783900482166001908101831690930267ffffffffffffffff67ffffffffffffffff60801b0119909416179290921783558b865261011b909452828520805460ff60e01b1942909316600160a01b026001600160e01b03199091169097179690961716600160e01b178555918901808452922080549194909116612c0f57610117548214612c0f57805460208701516001600160401b0316600160a01b026001600160e01b03199091166001600160a01b038716171781555b5050604051869250600091506001600160a01b03841690600080516020615fa0833981519152908390a45050610118805460010190555050565b600080612c57858585610e20565b9250905080612c965760405162461bcd60e51b815260206004820152600b60248201526a496e76616c69642072657160a81b6044820152606401610d60565b42612ca961012087016101008801615db9565b6001600160801b03161180612cd75750612ccb61014086016101208701615db9565b6001600160801b031642115b15612d125760405162461bcd60e51b815260206004820152600b60248201526a14995c48195e1c1a5c995960aa1b6044820152606401610d60565b6000612d216020870187614f1e565b6001600160a01b03161415612d6e5760405162461bcd60e51b81526020600482015260136024820152721c9958da5c1a595b9d081d5b9919599a5b9959606a1b6044820152606401610d60565b60008560a0013511612daa5760405162461bcd60e51b8152602060048201526005602482015264302071747960d81b6044820152606401610d60565b50610140909301356000908152604e60205260409020805460ff191660011790555090919050565b80612dfa573415612df55760405162461bcd60e51b8152600401610d6090615dd4565b611be4565b600080612e05611e08565b909250905060006001600160a01b03871615612e215786612e29565b612e29610c4f565b90506000612e378588615891565b90506000612710612e4c61ffff861684615891565b612e5691906158c6565b90506001600160a01b03871673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1415612eba57813414612eb55760405162461bcd60e51b815260206004820152600660248201526521507269636560d01b6044820152606401610d60565b612ed8565b3415612ed85760405162461bcd60e51b8152600401610d6090615dd4565b612eeb87612ee4612595565b87846141a9565b612f0787612ef7612595565b85612f028587615df4565b6141a9565b505050505050505050565b612710811115612f345760405162461bcd60e51b8152600401610d6090615d23565b6040805180820182526001600160a01b038481168083526020808401868152600089815260058352869020945185546001600160a01b031916941693909317845591516001909301929092559151838152909185917f7365cf4122f072a3365c20d54eff9b38d73c096c28e1892ec8f5b0e403a0f12d910160405180910390a3505050565b610da38282604051806020016040528060008152506141ee565b612710811115612ff55760405162461bcd60e51b8152600401610d6090615d23565b600480546001600160a01b0384166001600160b01b03199091168117600160a01b61ffff851602179091556040518281527f90d7ec04bcb8978719414f82e52e4cb651db41d0e6f8cea6118c2191e6183adb906020016126e3565b6040805160608101825260008082526020820181905291810191909152816101175481101561315457600081815261011b6020908152604091829020825160608101845290546001600160a01b0381168252600160a01b81046001600160401b031692820192909252600160e01b90910460ff161515918101829052906131525780516001600160a01b0316156130e8579392505050565b5060001901600081815261011b6020908152604091829020825160608101845290546001600160a01b038116808352600160a01b82046001600160401b031693830193909352600160e01b900460ff161515928101929092521561314d579392505050565b6130e8565b505b604051636f96cda160e11b815260040160405180910390fd5b600680546001600160a01b0319166001600160a01b0383169081179091556040517f299d17e95023f496e0ffc4909cff1a61f74bb5eb18de6f900f4155bfa1b3b33390600090a250565b6003819055600280546001600160a01b0319166001600160a01b0384161790556040517ff8086cee80709bd44c82f89dbca54115ebd05e840a88ab81df9cf5be9754eb63906132099084908490615049565b60405180910390a15050565b600c5485610117546132279190615a25565b11156132455760405162461bcd60e51b8152600401610d6090615a3d565b505050505050565b61011754610bb68383612fb9565b60006001805461326a90615808565b80601f016020809104026020016040519081016040528092919081815260200182805461329690615808565b80156132e35780601f106132b8576101008083540402835291602001916132e3565b820191906000526020600020905b8154815290600101906020018083116132c657829003601f168201915b505085519394506132ff93600193506020870192509050614d7b565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a168183604051613209929190615e0b565b606061333c83613487565b6133975760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610d60565b600080846001600160a01b0316846040516133b29190615e30565b600060405180830381855af49150503d80600081146133ed576040519150601f19603f3d011682016040523d82523d6000602084013e6133f2565b606091505b509150915061341a8282604051806060016040528060278152602001615f7960279139614398565b95945050505050565b6002805482919060ff60b01b1916600160b01b836001811115613448576134486157ca565b02179055507fd246da9440709ce0dd3f4fd669abc85ada012ab9774b8ecdcc5059ba1486b9c18160405161347c91906157e0565b60405180910390a150565b6001600160a01b03163b151590565b6000836001600160a01b031663150b7a026134af612595565b8786866040518563ffffffff1660e01b81526004016134d19493929190615e4c565b6020604051808303816000875af192505050801561350c575060408051601f3d908101601f1916820190925261350991810190615e7f565b60015b613567573d80801561353a576040519150601f19603f3d011682016040523d82523d6000602084013e61353f565b606091505b50805161355f576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490505b949350505050565b600080600061359360095490565b9050600060098054806020026020016040519081016040528092919081815260200182805480156135e357602002820191906000526020600020905b8154815260200190600101908083116135cf575b5050505050905060005b8281101561364f5781818151811061360757613607615865565b602002602001015186101561363d5780935081818151811061362b5761362b615865565b60200260200101519450505050915091565b613648600182615a25565b90506135ed565b5060405162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a59081d1bdad95b9259608a1b6044820152606401610d60565b6060600061369760095490565b9050600060098054806020026020016040519081016040528092919081815260200182805480156136e757602002820191906000526020600020905b8154815260200190600101908083116136d3575b5050505050905060005b8281101561364f5781818151811061370b5761370b615865565b60200260200101518510156137d957600a600083838151811061373057613730615865565b60200260200101518152602001908152602001600020805461375190615808565b80601f016020809104026020016040519081016040528092919081815260200182805461377d90615808565b80156137ca5780601f1061379f576101008083540402835291602001916137ca565b820191906000526020600020905b8154815290600101906020018083116137ad57829003601f168201915b50505050509350505050919050565b6137e4600182615a25565b90506136f1565b60608161380f5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115613839578061382381615c15565b91506138329050600a836158c6565b9150613813565b6000816001600160401b0381111561385357613853615105565b6040519080825280601f01601f19166020018201604052801561387d576020820181803683370190505b5090505b841561357d57613892600183615df4565b915061389f600a86615e9c565b6138aa906030615a25565b60f81b8183815181106138bf576138bf615865565b60200101906001600160f81b031916908160001a9053506138e1600a866158c6565b9450613881565b60008281526008602090815260409091208251610d3792840190614d7b565b6000828152600b602052604090205460ff16156139555760405162461bcd60e51b815260206004820152600c60248201526b2130ba31b410333937bd32b760a11b6044820152606401610d60565b6000828152600a60209081526040909120825161397492840190614d7b565b507f6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c61399f836143d1565b604080519182526020820185905201613209565b60006139bd6144ec565b6139d95760405162461bcd60e51b8152600401610d609061583d565b85613a0e5760405162461bcd60e51b81526020600482015260056024820152640c08185b5d60da1b6044820152606401610d60565b6000600c549050613a56818888888080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506144fd92505050565b600c919091559150807f2a0365091ef1a40953c670dce28177e37520648a6fdc91506bffac0ab045570d6001613a8c8a84615a25565b613a969190615df4565b88888888604051613aab959493929190615eb0565b60405180910390a25095945050505050565b600054610100900460ff16613ae45760405162461bcd60e51b8152600401610d6090615ee9565b613aec61456a565b610d7281614591565b600054610100900460ff16613b1c5760405162461bcd60e51b8152600401610d6090615ee9565b610da38282614620565b600054610100900460ff16613b4d5760405162461bcd60e51b8152600401610d6090615ee9565b613b9b604051806040016040528060138152602001725369676e61747572654d696e7445524337323160681b815250604051806040016040528060018152602001603160f81b81525061467b565b565b6000808281805b8751811015613c5f57613bb8600283615891565b91506000888281518110613bce57613bce615865565b60200260200101519050808411613c10576040805160208101869052908101829052606001604051602081830303815290604052805190602001209350613c4c565b6040805160208101839052908101859052606001604051602081830303815290604052805190602001209350600183613c499190615a25565b92505b5080613c5781615c15565b915050613ba4565b50941495939450505050565b6000613c763361139e565b15613c88575060131936013560601c90565b503390565b613c9b61014954600061169c565b158015613cb057506001600160a01b03841615155b8015613cc457506001600160a01b03831615155b15611be457613cd6610149548561169c565b158015613ced5750613ceb610149548461169c565b155b15611be45760405162461bcd60e51b815260206004820152600e60248201526d215472616e736665722d526f6c6560901b6044820152606401610d60565b60607fef2a0374db4a48b74209fd1a525c32d62e54c4185cbabd807193b07a40081d44613d5b6020840184614f1e565b613d6b6040850160208601614f1e565b6040850135613d806080870160608801614f1e565b613d8d60808801886158da565b604051613d9b929190615f34565b60405190819003902060a088013560c0890135613dbf6101008b0160e08c01614f1e565b613dd16101208c016101008d01615db9565b613de36101408d016101208e01615db9565b60408051602081019c909c526001600160a01b039a8b16908c015297891660608b015260808a019690965293871660a089015260c088019290925260e08701526101008601529092166101208401526001600160801b039182166101408085019190915291166101608301528301356101808201526101a0016040516020818303038152906040529050919050565b6000610bb6613e7f6146ac565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b6000806000613ecf8585614727565b91509150613edc8161476d565b509392505050565b60606000613ef3836002615891565b613efe906002615a25565b6001600160401b03811115613f1557613f15615105565b6040519080825280601f01601f191660200182016040528015613f3f576020820181803683370190505b509050600360fc1b81600081518110613f5a57613f5a615865565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110613f8957613f89615865565b60200101906001600160f81b031916908160001a9053506000613fad846002615891565b613fb8906001615a25565b90505b6001811115614030576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110613fec57613fec615865565b1a60f81b82828151811061400257614002615865565b60200101906001600160f81b031916908160001a90535060049490941c9361402981615f44565b9050613fbb565b50831561295a5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610d60565b6000828152600d602090815260408083206001600160a01b0385168085529252808320805460ff1916600117905551339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b6000828152600f60205260408120805491600191906140f98385615a25565b90915550506000928352600f6020908152604080852083865260018101835281862080546001600160a01b039096166001600160a01b03199096168617905593855260029093019052912055565b6141518282612970565b6000828152600d602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b806141b357611be4565b6001600160a01b03841673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14156141e257612df58282614923565b611be4848484846149c5565b610117546001600160a01b03841661421857604051622e076360e81b815260040160405180910390fd5b826142365760405163b562e8dd60e01b815260040160405180910390fd5b6142436000858386613c8d565b6001600160a01b038416600081815261011c6020908152604080832080546001600160801b031981166001600160401b038083168b018116918217600160401b6001600160401b031990941690921783900481168b0181169092021790915585845261011b90925290912080546001600160e01b0319168317600160a01b42909316929092029190911790558190818501906142de90613487565b15614355575b60405182906001600160a01b03881690600090600080516020615fa0833981519152908290a461431d6000878480600101955087613496565b61433a576040516368d2bf6b60e11b815260040160405180910390fd5b8082106142e45782610117541461435057600080fd5b614388565b5b6040516001830192906001600160a01b03881690600090600080516020615fa0833981519152908290a4808210614356575b5061011755611be4600085838684565b606083156143a757508161295a565b8251156143b75782518084602001fd5b8160405162461bcd60e51b8152600401610d609190614e9f565b6000806143dd60095490565b90506000600980548060200260200160405190810160405280929190818152602001828054801561442d57602002820191906000526020600020905b815481526020019060010190808311614419575b5050505050905060005b828110156144b15781818151811061445157614451615865565b602002602001015185141561449f5780156144945781614472600183615df4565b8151811061448257614482615865565b60200260200101519350505050919050565b506000949350505050565b806144a981615c15565b915050614437565b5060405162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a590818985d18da1259608a1b6044820152606401610d60565b600061259f61014a546107cc612595565b60008061450a8486615a25565b60098054600181019091557f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af018190556000818152600a602090815260409091208551929450849350614561929091860190614d7b565b50935093915050565b600054610100900460ff16613b9b5760405162461bcd60e51b8152600401610d6090615ee9565b600054610100900460ff166145b85760405162461bcd60e51b8152600401610d6090615ee9565b60005b8151811015610da3576001608160008484815181106145dc576145dc615865565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790558061461881615c15565b9150506145bb565b600054610100900460ff166146475760405162461bcd60e51b8152600401610d6090615ee9565b815161465b90610119906020850190614d7b565b5080516146709061011a906020840190614d7b565b506000610117555050565b600054610100900460ff166146a25760405162461bcd60e51b8152600401610d6090615ee9565b610da38282614a1e565b600061259f7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6146db601a5490565b601b546040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b60008082516041141561475e5760208301516040840151606085015160001a61475287828585614a5f565b94509450505050614766565b506000905060025b9250929050565b6000816004811115614781576147816157ca565b141561478a5750565b600181600481111561479e5761479e6157ca565b14156147e75760405162461bcd60e51b815260206004820152601860248201527745434453413a20696e76616c6964207369676e617475726560401b6044820152606401610d60565b60028160048111156147fb576147fb6157ca565b14156148495760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610d60565b600381600481111561485d5761485d6157ca565b14156148b65760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610d60565b60048160048111156148ca576148ca6157ca565b1415610d725760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610d60565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114614970576040519150601f19603f3d011682016040523d82523d6000602084013e614975565b606091505b5050905080610d375760405162461bcd60e51b815260206004820152601c60248201527b1b985d1a5d99481d1bdad95b881d1c985b9cd9995c8819985a5b195960221b6044820152606401610d60565b816001600160a01b0316836001600160a01b031614156149e457611be4565b6001600160a01b038316301415614a0957612df56001600160a01b0385168383614b42565b611be46001600160a01b038516848484614b98565b600054610100900460ff16614a455760405162461bcd60e51b8152600401610d6090615ee9565b815160209283012081519190920120601a91909155601b55565b6000806fa2a8918ca85bafe22016d0b997e4df60600160ff1b03831115614a8c5750600090506003614b39565b8460ff16601b14158015614aa457508460ff16601c14155b15614ab55750600090506004614b39565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015614b09573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116614b3257600060019250925050614b39565b9150600090505b94509492505050565b610d378363a9059cbb60e01b8484604051602401614b61929190615049565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152614bd0565b6040516001600160a01b0380851660248301528316604482015260648101829052611be49085906323b872dd60e01b90608401614b61565b6000614c25826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316614ca29092919063ffffffff16565b805190915015610d375780806020019051810190614c439190615f5b565b610d375760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610d60565b6060612957848460008585614cb685613487565b614d025760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610d60565b600080866001600160a01b03168587604051614d1e9190615e30565b60006040518083038185875af1925050503d8060008114614d5b576040519150601f19603f3d011682016040523d82523d6000602084013e614d60565b606091505b5091509150614d70828286614398565b979650505050505050565b828054614d8790615808565b90600052602060002090601f016020900481019282614da95760008555614def565b82601f10614dc257805160ff1916838001178555614def565b82800160010185558215614def579182015b82811115614def578251825591602001919060010190614dd4565b50614dfb929150614dff565b5090565b5b80821115614dfb5760008155600101614e00565b6001600160e01b031981168114610d7257600080fd5b600060208284031215614e3c57600080fd5b813561295a81614e14565b60005b83811015614e62578181015183820152602001614e4a565b83811115611be45750506000910152565b60008151808452614e8b816020860160208601614e47565b601f01601f19169290920160200192915050565b60208152600061295a6020830184614e73565b6001600160a01b03169052565b600060208284031215614ed157600080fd5b5035919050565b80356001600160a01b0381168114614eef57600080fd5b919050565b60008060408385031215614f0757600080fd5b614f1083614ed8565b946020939093013593505050565b600060208284031215614f3057600080fd5b61295a82614ed8565b600080600060608486031215614f4e57600080fd5b614f5784614ed8565b9250614f6560208501614ed8565b9150604084013590509250925092565b60008083601f840112614f8757600080fd5b5081356001600160401b03811115614f9e57600080fd5b60208301915083602082850101111561476657600080fd5b600080600060408486031215614fcb57600080fd5b83356001600160401b0380821115614fe257600080fd5b908501906101608288031215614ff757600080fd5b9093506020850135908082111561500d57600080fd5b5061501a86828701614f75565b9497909650939450505050565b6000806040838503121561503a57600080fd5b50508035926020909101359150565b6001600160a01b03929092168252602082015260400190565b6000806040838503121561507557600080fd5b8235915061508560208401614ed8565b90509250929050565b8015158114610d7257600080fd5b600080604083850312156150af57600080fd5b82356001600160401b038111156150c557600080fd5b830161010081860312156150d857600080fd5b915060208301356150e88161508e565b809150509250929050565b600060808284031215611cdc57600080fd5b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171561514357615143615105565b604052919050565b60006001600160401b0382111561516457615164615105565b50601f01601f191660200190565b600082601f83011261518357600080fd5b81356151966151918261514b565b61511b565b8181528460208386010111156151ab57600080fd5b816020850160208301376000918101602001919091529392505050565b60008060008060008060c087890312156151e157600080fd5b6151ea87614ed8565b9550602087013594506151ff60408801614ed8565b93506060870135925060808701356001600160401b038082111561522257600080fd5b61522e8a838b016150f3565b935060a089013591508082111561524457600080fd5b5061525189828a01615172565b9150509295509295509295565b60006020828403121561527057600080fd5b81356001600160401b0381111561528657600080fd5b61357d84828501615172565b6000806000606084860312156152a757600080fd5b83359250614f6560208501614ed8565b6000806000604084860312156152cc57600080fd5b8335925060208401356001600160401b038111156152e957600080fd5b61501a86828701614f75565b6000806040838503121561530857600080fd5b6150d883614ed8565b6000806020838503121561532457600080fd5b82356001600160401b038082111561533b57600080fd5b818501915085601f83011261534f57600080fd5b81358181111561535e57600080fd5b8660208260051b850101111561537357600080fd5b60209290920196919550909350505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156153da57603f198886030184526153c8858351614e73565b945092850192908501906001016153ac565b5092979650505050505050565b6000602082840312156153f957600080fd5b81356002811061295a57600080fd5b6000806000806080858703121561541e57600080fd5b61542785614ed8565b935061543560208601614ed8565b92506040850135915060608501356001600160401b0381111561545757600080fd5b61546387828801615172565b91505092959194509250565b60008060008060006060868803121561548757600080fd5b8535945060208601356001600160401b03808211156154a557600080fd5b6154b189838a01614f75565b909650945060408801359150808211156154ca57600080fd5b506154d788828901614f75565b969995985093965092949392505050565b60006101008a83528960208401528860408401528760608401528660808401528560a084015260018060a01b03851660c08401528060e084015261552e81840185614e73565b9b9a5050505050505050505050565b600082601f83011261554e57600080fd5b813560206001600160401b0382111561556957615569615105565b8160051b61557882820161511b565b928352848101820192828101908785111561559257600080fd5b83870192505b84831015614d70576155a983614ed8565b82529183019190830190615598565b80356001600160801b0381168114614eef57600080fd5b6000806000806000806000806000806101408b8d0312156155ef57600080fd5b6155f88b614ed8565b995060208b01356001600160401b038082111561561457600080fd5b6156208e838f01615172565b9a5060408d013591508082111561563657600080fd5b6156428e838f01615172565b995060608d013591508082111561565857600080fd5b6156648e838f01615172565b985060808d013591508082111561567a57600080fd5b506156878d828e0161553d565b96505061569660a08c01614ed8565b94506156a460c08c01614ed8565b93506156b260e08c016155b8565b92506156c16101008c016155b8565b91506156d06101208c01614ed8565b90509295989b9194979a5092959850565b6000806000604084860312156156f657600080fd5b83356001600160401b038082111561570d57600080fd5b61571987838801615172565b9450602086013591508082111561500d57600080fd5b6000806040838503121561574257600080fd5b61574b83614ed8565b915061508560208401614ed8565b600080600080600060a0868803121561577157600080fd5b61577a86614ed8565b94506020860135935061578f60408701614ed8565b92506060860135915060808601356001600160401b038111156157b157600080fd5b6157bd888289016150f3565b9150509295509295909350565b634e487b7160e01b600052602160045260246000fd5b602081016002831061580257634e487b7160e01b600052602160045260246000fd5b91905290565b600181811c9082168061581c57607f821691505b60208210811415611cdc57634e487b7160e01b600052602260045260246000fd5b6020808252600e908201526d139bdd08185d5d1a1bdc9a5e995960921b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156158ab576158ab61587b565b500290565b634e487b7160e01b600052601260045260246000fd5b6000826158d5576158d56158b0565b500490565b6000808335601e198436030181126158f157600080fd5b8301803591506001600160401b0382111561590b57600080fd5b60200191503681900382131561476657600080fd5b6000808335601e1984360301811261593757600080fd5b83016020810192503590506001600160401b0381111561595657600080fd5b80360383131561476657600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60408152823560408201526020830135606082015260408301356080820152606083013560a0820152608083013560c082015260a083013560e082015260006159d960c08501614ed8565b6001600160a01b038116610100848101919091526159fa60e0870187615920565b925081610120860152615a1261014086018483615965565b935050505061295a602083018415159052565b60008219821115615a3857615a3861587b565b500190565b60208082526007908201526621546f6b656e7360c81b604082015260600190565b60208152615a7760208201615a7284614ed8565b614eb2565b6000615a8560208401614ed8565b615a926040840182614eb2565b5060408301356060830152615aa960608401614ed8565b615ab66080840182614eb2565b50615ac46080840184615920565b6101608060a0860152615adc61018086018385615965565b925060a086013560c086015260c086013560e0860152615afe60e08701614ed8565b9150610100615b0f81870184614eb2565b615b1a8188016155b8565b925050610120615b34818701846001600160801b03169052565b615b3f8188016155b8565b925050610140615b59818701846001600160801b03169052565b9590950135939094019290925250919050565b60008060408385031215615b7f57600080fd5b82516001600160401b03811115615b9557600080fd5b8301601f81018513615ba657600080fd5b8051615bb46151918261514b565b818152866020838501011115615bc957600080fd5b615bda826020830160208601614e47565b60209590950151949694955050505050565b60008551615bfe818460208a01614e47565b820184868237909301918252506020019392505050565b6000600019821415615c2957615c2961587b565b5060010190565b60008251615c42818460208701614e47565b600360fc1b920191825250600101919050565b60008351615c67818460208801614e47565b835190830190615c7b818360208801614e47565b01949350505050565b60008060408385031215615c9757600080fd5b82356001600160401b03811115615cad57600080fd5b615cb985828601615172565b95602094909401359450505050565b82848237909101908152602001919050565b6000808335601e19843603018112615cf157600080fd5b8301803591506001600160401b03821115615d0b57600080fd5b6020019150600581901b360382131561476657600080fd5b6020808252600f908201526e45786365656473206d61782062707360881b604082015260600190565b7402832b936b4b9b9b4b7b7399d1030b1b1b7bab73a1605d1b815260008351615d7c816015850160208801614e47565b7001034b99036b4b9b9b4b733903937b6329607d1b6015918401918201528351615dad816026840160208801614e47565b01602601949350505050565b600060208284031215615dcb57600080fd5b61295a826155b8565b6020808252600690820152652156616c756560d01b604082015260600190565b600082821015615e0657615e0661587b565b500390565b604081526000615e1e6040830185614e73565b828103602084015261341a8185614e73565b60008251615e42818460208701614e47565b9190910192915050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611dfe90830184614e73565b600060208284031215615e9157600080fd5b815161295a81614e14565b600082615eab57615eab6158b0565b500690565b858152606060208201526000615eca606083018688615965565b8281036040840152615edd818587615965565b98975050505050505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b8183823760009101908152919050565b600081615f5357615f5361587b565b506000190190565b600060208284031215615f6d57600080fd5b815161295a8161508e56fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220286451442bd6f53b210acd6ff13e89a2f97770da71dd88dcc8decd0f9153765464736f6c634300080c0033",
    "sourceMap": "1736:12027:367:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4835:280;;;;;;;;;;-1:-1:-1;4835:280:367;;;;;:::i;:::-;;:::i;:::-;;;661:14:644;;654:22;636:41;;624:2;609:18;4835:280:367;;;;;;;;6619:98:389;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;676:104:72:-;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;1712:32:644;;;1694:51;;1682:2;1667:18;676:104:72;1548:203:644;8087:200:389;;;;;;;;;;-1:-1:-1;8087:200:389;;;;;:::i;:::-;;:::i;7652:374::-;;;;;;;;;;-1:-1:-1;7652:374:389;;;;;:::i;:::-;;:::i;:::-;;1133:173:68;;;;;;;;;;-1:-1:-1;1133:173:68;;;;;:::i;:::-;;:::i;2807:306:389:-;;;;;;;;;;-1:-1:-1;3066:12:389;;3050:13;;:28;2807:306;;;2715:25:644;;;2703:2;2688:18;2807:306:389;2569:177:644;2043:269:71;;;;;;;;;;-1:-1:-1;2043:269:71;;;;;:::i;:::-;;:::i;8926:164:389:-;;;;;;;;;;-1:-1:-1;8926:164:389;;;;;:::i;:::-;;:::i;1973:203:52:-;;;;;;;;;;-1:-1:-1;1973:203:52;;;;;:::i;:::-;;:::i;2740:120:69:-;;;;;;;;;;-1:-1:-1;2740:120:69;;;;;:::i;:::-;2808:7;2834:19;;;:13;:19;;;;;;;2740:120;1252:293:84;;;;;;;;;;-1:-1:-1;1252:293:84;;;;;:::i;:::-;;:::i;:::-;;;;4701:14:644;;4694:22;4676:41;;-1:-1:-1;;;;;4753:32:644;;;4748:2;4733:18;;4726:60;4649:18;1252:293:84;4508:284:644;1421:347:75;;;;;;;;;;-1:-1:-1;1421:347:75;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;3255:271:69:-;;;;;;;;;;-1:-1:-1;3255:271:69;;;;;:::i;:::-;;:::i;5881:150:58:-;;;;;;;;;;-1:-1:-1;5881:150:58;;;;;:::i;:::-;6002:11;;5954:7;5980:34;;;:21;:34;;;;;;;;-1:-1:-1;;;;;5980:44:58;;;;;;;;;;;5881:150;4466:217:69;;;;;;;;;;-1:-1:-1;4466:217:69;;;;;:::i;:::-;;:::i;12201:106:367:-;;;;;;;;;;-1:-1:-1;12279:21:367;;12201:106;;2330:1219:58;;;;;;;;;;-1:-1:-1;2330:1219:58;;;;;:::i;:::-;;:::i;9156:179:389:-;;;;;;;;;;-1:-1:-1;9156:179:389;;;;;:::i;:::-;;:::i;12363:184:367:-;;;;;;;;;;-1:-1:-1;12363:184:367;;;;;:::i;:::-;;:::i;6989:947::-;;;;;;:::i;:::-;;:::i;3937:129:55:-;;;;;;;;;;-1:-1:-1;3937:129:55;;;;;:::i;:::-;;:::i;2008:381:75:-;;;;;;;;;;-1:-1:-1;2008:381:75;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;6430:32:644;;;6412:51;;6511:6;6499:19;;;6494:2;6479:18;;6472:47;6385:18;2008:381:75;6240:285:644;918:134:209;;;;;;;;;;-1:-1:-1;918:134:209;;;;;:::i;:::-;;:::i;3087:256:75:-;;;;;;;;;;-1:-1:-1;3087:256:75;;;;;:::i;:::-;;:::i;6434:123:389:-;;;;;;;;;;-1:-1:-1;6434:123:389;;;;;:::i;:::-;;:::i;1655:96:52:-;;;;;;;;;;-1:-1:-1;1729:8:52;:15;1655:96;;1189:228:72;;;;;;;;;;-1:-1:-1;1189:228:72;;;;;:::i;:::-;;:::i;3948:203:389:-;;;;;;;;;;-1:-1:-1;3948:203:389;;;;;:::i;:::-;;:::i;2821:255:71:-;;;;;;;;;;-1:-1:-1;2821:255:71;;;;;:::i;:::-;;:::i;898:43:52:-;;;;;;;;;;-1:-1:-1;898:43:52;;;;;:::i;:::-;;;;;;;;;;;;;;;;1181:1086:58;;;;;;:::i;:::-;;:::i;871:86:68:-;;;;;;;;;;-1:-1:-1;944:6:68;;-1:-1:-1;;;;;944:6:68;871:86;;1643:633:70;;;;;;;;;;-1:-1:-1;1643:633:70;;;;;:::i;:::-;;:::i;1324:131:69:-;;;;;;;;;;-1:-1:-1;1324:131:69;;;;;:::i;:::-;;:::i;1003:188:54:-;;;;;;;;;;-1:-1:-1;1003:188:54;;;;;:::i;:::-;;:::i;6781:102:389:-;;;;;;;;;;;;;:::i;4281:288:75:-;;;;;;;;;;-1:-1:-1;4281:288:75;;;;;:::i;:::-;;:::i;1383:534:55:-;;;;;;;;;;-1:-1:-1;1383:534:55;;;;;:::i;:::-;;:::i;568:46::-;;;;;;;;;;-1:-1:-1;568:46:55;;;;;:::i;:::-;;:::i;5231:89:367:-;;;;;;;;;;-1:-1:-1;5231:89:367;;5311:1;10403:36:644;;10391:2;10376:18;5231:89:367;10261:184:644;742:49:69;;;;;;;;;;-1:-1:-1;742:49:69;787:4;742:49;;8354:282:389;;;;;;;;;;-1:-1:-1;8354:282:389;;;;;:::i;:::-;;:::i;11975:144:367:-;;;;;;;;;;-1:-1:-1;12071:13:367;;11975:144;;2206:211:69;;;;;;;;;;-1:-1:-1;2206:211:69;;;;;:::i;:::-;;:::i;632:301:466:-;;;;;;;;;;-1:-1:-1;632:301:466;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2499:144:75:-;;;;;;;;;;-1:-1:-1;2599:16:75;;-1:-1:-1;;;;;2599:16:75;;;-1:-1:-1;;;2624:10:75;;;;2499:144;;3455:200:71;;;;;;;;;;-1:-1:-1;3455:200:71;;;;;:::i;:::-;;:::i;9401:360:389:-;;;;;;;;;;-1:-1:-1;9401:360:389;;;;;:::i;:::-;;:::i;4402:402:367:-;;;;;;;;;;-1:-1:-1;4402:402:367;;;;;:::i;:::-;;:::i;2683:398:70:-;;;;;;;;;;-1:-1:-1;2683:398:70;;;;;:::i;:::-;;:::i;5121:104:367:-;;;;;;;;;;-1:-1:-1;;;;5121:104:367;;6341:395;;;;;;;;;;-1:-1:-1;6341:395:367;;;;;:::i;:::-;;:::i;5694:540::-;;;;;;;;;;-1:-1:-1;5694:540:367;;;;;:::i;:::-;;:::i;1058:147:71:-;;;;;;;;;;;;;:::i;3897:171:69:-;;;;;;;;;;-1:-1:-1;3897:171:69;;;;;:::i;:::-;;:::i;463:36:58:-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;2898:1257:367:-;;;;;;;;;;-1:-1:-1;2898:1257:367;;;;;:::i;:::-;;:::i;1268:136:71:-;;;;;;;;;;;;1359:20;;1381:15;;-1:-1:-1;;;;;1359:20:71;;;;1268:136;2409:1283:55;;;;;;;;;;-1:-1:-1;2409:1283:55;;;;;:::i;:::-;;:::i;565:34:54:-;;;;;;;;;;;;;:::i;8702:162:389:-;;;;;;;;;;-1:-1:-1;8702:162:389;;;;;:::i;:::-;-1:-1:-1;;;;;8822:25:389;;;8799:4;8822:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;8702:162;3646:2154:58;;;;;;;;;;-1:-1:-1;3646:2154:58;;;;;:::i;:::-;;:::i;1467:107:71:-;;;;;;;;;;-1:-1:-1;1552:15:71;;-1:-1:-1;;;1552:15:71;;;;1467:107;;;;;;:::i;4835:280:367:-;4989:4;5016:36;5040:11;5016:23;:36::i;:::-;:92;;;-1:-1:-1;;;;;;;;;;5056:52:367;;;5016:92;5009:99;4835:280;-1:-1:-1;;4835:280:367:o;6619:98:389:-;6673:13;6705:5;6698:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6619:98;:::o;676:104:72:-;764:9;;-1:-1:-1;;;;;764:9:72;;676:104::o;8087:200:389:-;8155:7;8179:16;8187:7;8179;:16::i;:::-;8174:64;;8204:34;;-1:-1:-1;;;8204:34:389;;;;;;;;;;;8174:64;-1:-1:-1;8256:24:389;;;;:15;:24;;;;;;-1:-1:-1;;;;;8256:24:389;;8087:200::o;7652:374::-;7724:13;7740:35;7767:7;7740:26;:35::i;:::-;7724:51;;7795:5;-1:-1:-1;;;;;7789:11:389;:2;-1:-1:-1;;;;;7789:11:389;;7785:48;;;7809:24;;-1:-1:-1;;;7809:24:389;;;;;;;;;;;7785:48;7864:5;-1:-1:-1;;;;;7848:21:389;:12;:10;:12::i;:::-;-1:-1:-1;;;;;7848:21:389;;7844:137;;7875:37;7892:5;7899:12;:10;:12::i;7875:37::-;7871:110;;7935:35;;-1:-1:-1;;;7935:35:389;;;;;;;;;;;7871:110;7991:28;8000:2;8004:7;8013:5;7991:8;:28::i;:::-;7714:312;7652:374;;:::o;1133:173:68:-;1203:14;:12;:14::i;:::-;1198:70;;1233:24;;-1:-1:-1;;;1233:24:68;;;;;;;:::i;:::-;;;;;;;;1198:70;1277:22;1289:9;1277:11;:22::i;:::-;1133:173;:::o;2043:269:71:-;2160:24;:22;:24::i;:::-;2155:80;;2200:24;;-1:-1:-1;;;2200:24:71;;;;;;;:::i;2155:80::-;2244:61;2266:21;2289:15;2244:21;:61::i;:::-;2043:269;;:::o;8926:164:389:-;9055:28;9065:4;9071:2;9075:7;9055:9;:28::i;1973:203:52:-;2037:7;2070:17;1729:8;:15;;1655:96;2070:17;2060:6;:27;2056:81;;2103:23;;-1:-1:-1;;;2103:23:52;;19895:2:644;2103:23:52;;;19877:21:644;19934:2;19914:18;;;19907:30;-1:-1:-1;;;19953:18:644;;;19946:43;20006:18;;2103:23:52;19693:337:644;2056:81:52;2153:8;2162:6;2153:16;;;;;;;;:::i;:::-;;;;;;;;;2146:23;;1973:203;;;:::o;1252:293:84:-;1384:12;1398:14;1437:33;1453:4;1459:10;;1437:15;:33::i;:::-;1498:8;;;;1491:16;;;;:6;:16;;;;;;1428:42;;-1:-1:-1;1491:16:84;;1490:17;:48;;;;;1511:27;1531:6;1511:19;:27::i;:::-;1480:58;;1252:293;;;;;;:::o;1421:347:75:-;1558:16;1576:21;1614:17;1633:11;1648:31;1671:7;1648:22;:31::i;:::-;1613:66;;-1:-1:-1;1613:66:75;;-1:-1:-1;1613:66:75;;;-1:-1:-1;1755:6:75;1736:15;1613:66;1736:9;:15;:::i;:::-;1735:26;;;;:::i;:::-;1719:42;;1603:165;;1421:347;;;;;:::o;3255:271:69:-;3350:19;;;;:13;:19;;;;;;3339:43;;3371:10;3339;:43::i;:::-;3396:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;3396:23:69;;;;;;;;;;;;3392:93;;;3435:39;;-1:-1:-1;;;3435:39:69;;20931:2:644;3435:39:69;;;20913:21:644;20970:2;20950:18;;;20943:30;21009:31;20989:18;;;20982:59;21058:18;;3435:39:69;20729:353:644;3392:93:69;3494:25;3505:4;3511:7;3494:10;:25::i;4466:217::-;4557:10;-1:-1:-1;;;;;4557:21:69;;;4553:88;;4594:36;;-1:-1:-1;;;4594:36:69;;21289:2:644;4594:36:69;;;21271:21:644;21328:2;21308:18;;;21301:30;-1:-1:-1;;;21347:18:644;;;21340:56;21413:18;;4594:36:69;21087:350:644;4553:88:69;4650:26;4662:4;4668:7;4650:11;:26::i;2330:1219:58:-;2456:24;:22;:24::i;:::-;2451:80;;2496:24;;-1:-1:-1;;;2496:24:58;;;;;;;:::i;2451:80::-;2569:11;;2621:28;;2660:170;;;;-1:-1:-1;2725:1:58;2787:16;:14;:16::i;:::-;2770:48;;21644:2:644;21615:15;;;;-1:-1:-1;;;;;;21611:45:644;2770:48:58;;;21599:58:644;2805:12:58;21673::644;;;21666:28;21710:12;;2770:48:58;;;;;;;;;;;;2760:59;;;;;;2740:79;;2660:170;2867:10;:29;;;2844:20;:52;2840:111;;;2912:28;;-1:-1:-1;;;2912:28:58;;21935:2:644;2912:28:58;;;21917:21:644;21974:2;21954:18;;;21947:30;-1:-1:-1;;;21993:18:644;;;21986:48;22051:18;;2912:28:58;21733:342:644;2840:111:58;2978:450;;;;;;;;3023:10;:25;;;2978:450;;;;3082:10;:29;;;2978:450;;;;3140:20;2978:450;;;;3198:10;:33;;;2978:450;;;;3257:10;:21;;;2978:450;;;;3307:10;:24;;;2978:450;;;;3355:10;:19;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2978:450:58;;;;;3398:19;;;;:10;:19;:::i;:::-;2978:450;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2978:450:58;;-1:-1:-1;2961:467:58;;:14;:467;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2961:467:58;-1:-1:-1;;;;;2961:467:58;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;3438:11:58;:31;;;3485:57;;;;;;3507:10;;3519:22;;3485:57;:::i;:::-;;;;;;;;2441:1108;;2330:1219;;:::o;9156:179:389:-;9289:39;9306:4;9312:2;9316:7;9289:39;;;;;;;;;;;;:16;:39::i;12363:184:367:-;12520:20;12526:7;12535:4;12520:5;:20::i;6989:947::-;7174:13;;7233:21;;7120:14;;7174:13;7201:29;7217:13;;;;7174;7201:29;:::i;:::-;:53;7197:101;;;7270:17;;-1:-1:-1;;;7270:17:367;;;;;;;:::i;7197:101::-;7356:33;7372:4;7378:10;;7356:15;:33::i;:::-;7347:42;-1:-1:-1;7400:16:367;7419:7;;;;:4;:7;:::i;:::-;7400:26;-1:-1:-1;7462:97:367;7483:25;;;;;;;;:::i;:::-;7510:13;;;;7525;;;;;;;;:::i;:::-;7540:4;:18;;;7462:20;:97::i;:::-;7648:1;7615:21;;;;;;;;:::i;:::-;-1:-1:-1;;;;;7615:35:367;;;:59;;;;-1:-1:-1;7654:15:367;;;;:20;;7615:59;7611:170;;;7690:80;7716:13;7731:21;;;;;;;;:::i;:::-;7754:4;:15;;;7690:25;:80::i;:::-;7815:34;7825:8;7835:4;:13;;;7815:9;:34::i;:::-;7909:13;7899:8;-1:-1:-1;;;;;7865:64:367;7891:6;-1:-1:-1;;;;;7865:64:367;;7924:4;7865:64;;;;;;:::i;:::-;;;;;;;;7140:796;;6989:947;;;;;:::o;3937:129:55:-;4002:4;4025:23;;;:13;:23;;;;;:30;;4002:4;;4025:23;:30;;;:::i;:::-;;;:34;4018:41;;3937:129;;;:::o;2008:381:75:-;2088:7;2152:29;;;:19;:29;;;;;;;;2115:66;;;;;;;;;;-1:-1:-1;;;;;2115:66:75;;;;;;;;;;;;;;;;2088:7;;2211:39;:171;;2327:25;;2361:19;;;;2211:171;;;2270:16;;-1:-1:-1;;;;;2270:16:75;;;-1:-1:-1;;;2295:10:75;;;;2211:171;2192:190;;;;;2008:381;;;:::o;918:134:209:-;-1:-1:-1;;;;;1017:28:209;994:4;1017:28;;;:17;:28;;;;;;;;;918:134::o;3087:256:75:-;3199:20;:18;:20::i;:::-;3194:76;;3235:24;;-1:-1:-1;;;3235:24:75;;;;;;;:::i;3194:76::-;3280:56;3305:17;3324:11;3280:24;:56::i;6434:123:389:-;6498:7;6524:21;6537:7;6524:12;:21::i;:::-;:26;;6434:123;-1:-1:-1;;6434:123:389:o;1189:228:72:-;1279:29;:27;:29::i;:::-;1274:85;;1324:24;;-1:-1:-1;;;1324:24:72;;;;;;;:::i;1274:85::-;1368:42;1395:14;1368:26;:42::i;3948:203:389:-;4012:7;-1:-1:-1;;;;;4035:19:389;;4031:60;;4063:28;;-1:-1:-1;;;4063:28:389;;;;;;;;;;;4031:60;-1:-1:-1;;;;;;4116:19:389;;;;;:12;:19;;;;;:27;-1:-1:-1;;;;;4116:27:389;;3948:203::o;2821:255:71:-;2926:24;:22;:24::i;:::-;2921:80;;2966:24;;-1:-1:-1;;;2966:24:71;;;;;;;:::i;2921:80::-;3011:58;3037:21;3060:8;3011:25;:58::i;1181:1086:58:-;1434:85;1447:9;1458;1469;1480:14;1496:15;1513:5;1434:12;:85::i;:::-;1558:11;;1580:84;1592:16;:14;:16::i;:::-;1610:9;1621;1632:14;1648:15;1580:11;:84::i;:::-;;1741:9;1709:14;:28;;;:41;;;;;;;:::i;:::-;;;;-1:-1:-1;;1760:40:58;;;;:21;:40;;;;;1822:9;;1801:16;:14;:16::i;:::-;-1:-1:-1;;;;;1760:58:58;-1:-1:-1;;;;;1760:58:58;;;;;;;;;;;;;:71;;;;;;;:::i;:::-;;;;-1:-1:-1;1888:70:58;;-1:-1:-1;1917:1:58;1921:9;1932;1943:14;1888:20;:70::i;:::-;2015:20;2038:44;2061:9;2072;2038:22;:44::i;:::-;2015:67;;2141:12;2130:9;-1:-1:-1;;;;;2098:67:58;2112:16;:14;:16::i;:::-;-1:-1:-1;;;;;2098:67:58;;2155:9;2098:67;;;;2715:25:644;;2703:2;2688:18;;2569:177;2098:67:58;;;;;;;;1424:843;;1181:1086;;;;;;:::o;1643:633:70:-;1727:14;1776:17;;;:11;:17;;;;;:23;1727:14;;1833:437;1857:12;1853:1;:16;1833:437;;;1937:1;1897:17;;;:11;:17;;;;;;;;:28;;;:25;;:28;;;;;;-1:-1:-1;;;;;1897:28:70;:42;1893:367;;1972:5;1963;:14;1959:133;;;2010:17;;;;:11;:17;;;;;;;;:28;;;:25;;;;:28;;;;-1:-1:-1;;;;;2010:28:70;;-1:-1:-1;2060:13:70;;-1:-1:-1;;2060:13:70;1959:133;2109:10;2118:1;2109:10;;:::i;:::-;;;1893:367;;;2144:25;2152:4;2166:1;2144:7;:25::i;:::-;:71;;;;-1:-1:-1;2178:17:70;;;;:11;:17;;;;;;;;:37;;;:25;;:37;;;;;;2173:42;;2144:71;2140:120;;;2235:10;2244:1;2235:10;;:::i;:::-;;;2140:120;1871:6;1876:1;1871:6;;:::i;:::-;;;1833:437;;;;1743:533;;1643:633;;;;:::o;1324:131:69:-;1402:4;1425:14;;;:8;:14;;;;;;;;-1:-1:-1;;;;;1425:23:69;;;;;;;;;;;;;;;1324:131::o;1003:188:54:-;1080:20;:18;:20::i;:::-;1075:76;;1116:24;;-1:-1:-1;;;1116:24:54;;;;;;;:::i;1075:76::-;1161:23;1179:4;1161:17;:23::i;6781:102:389:-;6837:13;6869:7;6862:14;;;;;:::i;4281:288:75:-;4428:20;:18;:20::i;:::-;4423:76;;4464:24;;-1:-1:-1;;;4464:24:75;;;;;;;:::i;4423:76::-;4509:53;4535:8;4545:10;4557:4;4509:25;:53::i;1383:534:55:-;1502:17;1522:23;;;:13;:23;;;;;1502:43;;1465:25;;1502:17;1522:23;1502:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1559:4;:11;1574:1;1559:16;1555:74;;;1591:27;;-1:-1:-1;;;1591:27:55;;26797:2:644;1591:27:55;;;26779:21:644;26836:2;26816:18;;;26809:30;-1:-1:-1;;;26855:18:644;;;26848:47;26912:18;;1591:27:55;26595:341:644;1555:74:55;1640:25;1667:22;1704:4;1693:34;;;;;;;;;;;;:::i;:::-;1639:88;;;;1759:34;1774:12;1788:4;;1759:14;:34::i;:::-;1738:56;;1878:14;1840:11;1853:4;;1859:13;1823:50;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1813:61;;;;;;:79;1805:105;;;;-1:-1:-1;;;1805:105:55;;28381:2:644;1805:105:55;;;28363:21:644;28420:2;28400:18;;;28393:30;-1:-1:-1;;;28439:18:644;;;28432:43;28492:18;;1805:105:55;28179:337:644;1805:105:55;1492:425;;;1383:534;;;;;:::o;568:46::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;8354:282:389:-;8464:12;:10;:12::i;:::-;-1:-1:-1;;;;;8452:24:389;:8;-1:-1:-1;;;;;8452:24:389;;8448:54;;;8485:17;;-1:-1:-1;;;8485:17:389;;;;;;;;;;;8448:54;8558:8;8513:18;:32;8532:12;:10;:12::i;:::-;-1:-1:-1;;;;;8513:32:389;;;;;;;;;;;;;;;;;-1:-1:-1;8513:32:389;;;:42;;;;;;;;;;;;:53;;-1:-1:-1;;8513:53:389;;;;;;;;;;;8596:12;:10;:12::i;:::-;-1:-1:-1;;;;;8581:48:389;;8620:8;8581:48;;;;661:14:644;654:22;636:41;;624:2;609:18;;496:187;8581:48:389;;;;;;;;8354:282;;:::o;2206:211:69:-;2285:4;2306:14;;;:8;:14;;;;;;;;:26;;;;;;;;;;;2301:88;;-1:-1:-1;2355:14:69;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;2355:23:69;;;;;;;;;;;;2348:30;;2301:88;-1:-1:-1;2406:4:69;2206:211;;;;:::o;632:301:466:-;700:22;756:4;-1:-1:-1;;;;;744:24:466;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;734:34;;783:9;778:125;798:15;;;778:125;;;847:45;877:4;884;;889:1;884:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;847:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;847:21:466;;-1:-1:-1;;;847:45:466:i;:::-;834:7;842:1;834:10;;;;;;;;:::i;:::-;;;;;;:58;;;;815:3;;;;;:::i;:::-;;;;778:125;;;;632:301;;;;:::o;3455:200:71:-;3533:24;:22;:24::i;:::-;3528:80;;3573:24;;-1:-1:-1;;;3573:24:71;;;;;;;:::i;3528:80::-;3617:31;3639:8;3617:21;:31::i;9401:360:389:-;9562:28;9572:4;9578:2;9582:7;9562:9;:28::i;:::-;9604:15;:2;-1:-1:-1;;;;;9604:13:389;;:15::i;:::-;9600:155;;;9625:56;9656:4;9662:2;9666:7;9675:5;9625:30;:56::i;:::-;9621:134;;9704:40;;-1:-1:-1;;;9704:40:389;;;;;;;;;;;9621:134;9401:360;;;;:::o;4402:402:367:-;4468:13;4494:15;4515:21;4527:8;4515:11;:21::i;:::-;4493:43;;;4546:22;4571:21;4583:8;4571:11;:21::i;:::-;4546:46;;4607:25;4624:7;4607:16;:25::i;:::-;4603:195;;;4679:8;4662:31;;;;;;;;:::i;:::-;;;;;;;;;;;;;4648:46;;;;4402:402;;;:::o;4603:195::-;4756:8;4766:19;:8;:17;:19::i;:::-;4739:47;;;;;;;;;:::i;2683:398:70:-;2757:13;2805:17;;;:11;:17;;;;;:23;2757:13;2839:161;2863:12;2859:1;:16;2839:161;;;2943:1;2903:17;;;:11;:17;;;;;;;;:28;;;:25;;:28;;;;;;-1:-1:-1;;;;;2903:28:70;:42;2899:91;;2965:10;2974:1;2965:10;;:::i;:::-;;;2899:91;2877:6;2882:1;2877:6;;:::i;:::-;;;2839:161;;;;3013:25;3021:4;3035:1;3013:7;:25::i;:::-;3009:66;;;3054:10;3063:1;3054:10;;:::i;:::-;;;3009:66;2772:309;2683:398;;;:::o;6341:395:367:-;6457:25;6428:10;;931:28:69;942:4;948:10;931;:28::i;:::-;6498:15:367::1;6516:25;6534:6;6516:17;:25::i;:::-;6498:43;;6565:27;6578:7;6587:4;;6565:12;:27::i;:::-;6551:41;;6603:30;6621:7;6603:30;;;;;;;;;;;::::0;:17:::1;:30::i;:::-;6643:33;6655:7;6664:11;6643;:33::i;:::-;6709:6;6692:37;6717:11;6692:37;;;;;;:::i;:::-;;;;;;;;6488:248;6341:395:::0;;;;;;:::o;5694:540::-;5841:15;5872:16;;5868:293;;5905:25;;5958:35;;;;5969:5;5958:35;:::i;:::-;5904:89;;;;6011:12;:19;6034:1;6011:24;;:48;;;;-1:-1:-1;6039:20:367;;;6011:48;6007:144;;;6079:57;6121:7;6097:21;;:31;;;;:::i;:::-;6130:5;;6079:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6079:17:367;;-1:-1:-1;;;6079:57:367:i;:::-;5890:271;;5868:293;6178:49;6193:7;6202:17;;6221:5;;6178:14;:49::i;:::-;6171:56;5694:540;-1:-1:-1;;;;;;5694:540:367:o;1058:147:71:-;1153:20;;-1:-1:-1;;;;;1153:20:71;;;-1:-1:-1;;;1182:14:71;;;;;;1058:147::o;3897:171:69:-;3993:19;;;;:13;:19;;;;;;3982:43;;4014:10;3982;:43::i;463:36:58:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;463:36:58;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2898:1257:367:-;3111:19:436;3134:13;;;;;;3133:14;;3179:34;;;;-1:-1:-1;3197:12:436;;3212:1;3197:12;;;;:16;3179:34;3178:108;;;;3220:44;3258:4;3220:29;:44::i;:::-;3219:45;:66;;;;-1:-1:-1;3268:12:436;;;;;:17;3219:66;3157:201;;;;-1:-1:-1;;;3157:201:436;;30701:2:644;3157:201:436;;;30683:21:644;30740:2;30720:18;;;30713:30;30779:34;30759:18;;;30752:62;-1:-1:-1;;;30830:18:644;;;30823:44;30884:19;;3157:201:436;30499:410:644;3157:201:436;3368:12;:16;;-1:-1:-1;;3368:16:436;3383:1;3368:16;;;3394:65;;;;3428:13;:20;;-1:-1:-1;;3428:20:436;;;;;3394:65;3319:26:367::1;3377:24;3487:41;3509:18:::0;3487:21:::1;:41::i;:::-;3538:30;3553:5;3560:7;3538:14;:30::i;:::-;3578:28;:26;:28::i;:::-;3617:31;3635:12;3617:17;:31::i;:::-;3658:26;3670:13;3658:11;:26::i;:::-;3695:45;787:4:69;3726:13:367::0;3695:10:::1;:45::i;:::-;3750:38;3761:11;3774:13;3750:10;:38::i;:::-;3798:40;3809:13;3824;3798:10;:40::i;:::-;3848:37;3859:13;3882:1;3848:10;:37::i;:::-;3896:61;3918:21;3941:15;-1:-1:-1::0;;;;;3896:61:367::1;:21;:61::i;:::-;3967:56;3992:17;4011:11;-1:-1:-1::0;;;;;3967:56:367::1;:24;:56::i;:::-;4033:42;4060:14;4033:26;:42::i;:::-;4086:12;:28:::0;;;;4124:10:::1;:24:::0;3479:99:436;;;;3529:5;3513:21;;-1:-1:-1;;3513:21:436;;;3553:14;;-1:-1:-1;10403:36:644;;3553:14:436;;10391:2:644;10376:18;3553:14:436;;;;;;;3479:99;3101:483;2898:1257:367;;;;;;;;;;:::o;2409:1283:55:-;2602:11;;2768:4;2762:11;;2862:19;;;2883:2;2858:28;2845:42;;;2933:22;;;2762:11;2585:14;3029:657;3053:6;3049:1;:10;3029:657;;;3135:12;3177:3;;3182:1;3160:24;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;3160:24:55;;;;;;;;;3150:35;;3160:24;3150:35;;;;3373:21;;;;;3367:28;3461:13;3631:23;;;;;3624:38;3061:7;;-1:-1:-1;3387:1:55;3061:7;:::i;:::-;;;3029:657;;;;2523:1169;2409:1283;;;;;:::o;565:34:54:-;;;;;;;:::i;3646:2154:58:-;3882:56;;;;;;;;3924:14;3882:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3882:56:58;;;;;;;;3855:15;;;;3882:56;3924:14;;3882:56;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3882:56:58;;;;-1:-1:-1;;;3969:40:58;;;;4040:31;;;;4105:26;;;;4146:28;;;;3882:56;;-1:-1:-1;3969:40:58;;4040:31;;4105:26;4146:42;4142:515;;4221:425;4257:21;:15;;:21;:::i;:::-;4221:425;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4296:28:58;;;;;;-1:-1:-1;4415:8:58;;4449:38;;;;;4513:29;;;;;4568:24;;;;;;;;:::i;:::-;4373:241;;-1:-1:-1;;;;;;32238:2:644;32274:15;;;32270:24;;4373:241:58;;;32258:37:644;32311:12;;;32304:28;;;;32348:12;;;32341:28;;;;32403:15;;;32399:24;32385:12;;;32378:46;32440:13;;4373:241:58;;;;;;;;;;;;4342:290;;;;;;4221:18;:425::i;:::-;-1:-1:-1;4204:442:58;-1:-1:-1;4142:515:58;4671:10;4667:534;;;4710:38;;;;:129;;4829:10;4710:129;;;4772:15;:38;;;4710:129;4697:142;;-1:-1:-1;;4866:15:58;:29;;;:50;;:127;;4983:10;4866:127;;;4935:15;:29;;;4866:127;4853:140;;-1:-1:-1;;5023:15:58;:29;;;:50;;:92;;;;-1:-1:-1;5113:1:58;5077:24;;;;;;;;:::i;:::-;-1:-1:-1;;;;;5077:38:58;;;5023:92;:167;;5177:13;5023:167;;;5134:24;;;;;;;;:::i;:::-;5007:183;;4667:534;5266:11;;5211:30;5244:34;;;:21;:34;;;;;;;;-1:-1:-1;;;;;5244:44:58;;;;;;;;;;;;5303:26;;;;;;;;;:58;;;5351:10;5333:14;:28;;5303:58;5299:115;;;5377:26;;-1:-1:-1;;;5377:26:58;;32666:2:644;5377:26:58;;;32648:21:644;32705:2;32685:18;;;32678:30;-1:-1:-1;;;32724:18:644;;;32717:46;32780:18;;5377:26:58;32464:340:644;5299:115:58;5428:14;;;:67;;-1:-1:-1;5484:10:58;5447:34;5459:22;5447:9;:34;:::i;:::-;:47;5428:67;5424:112;;;5511:14;;-1:-1:-1;;;5511:14:58;;;;;;33011:2:644;32993:21;;;33050:1;33030:18;;;33023:29;-1:-1:-1;;;33083:2:644;33068:18;;33061:34;33127:2;33112:18;;32809:327;5424:112:58;5596:17;:36;;;5584:9;5550:17;:31;;;:43;;;;:::i;:::-;:82;5546:133;;;5648:20;;-1:-1:-1;;;5648:20:58;;33343:2:644;5648:20:58;;;33325:21:644;33382:2;33362:18;;;33355:30;-1:-1:-1;;;33401:18:644;;;33394:40;33451:18;;5648:20:58;33141:334:644;5546:133:58;5693:32;;5728:15;-1:-1:-1;5689:105:58;;;5759:24;;-1:-1:-1;;;5759:24:58;;33682:2:644;5759:24:58;;;33664:21:644;33721:2;33701:18;;;33694:30;-1:-1:-1;;;33740:18:644;;;33733:44;33794:18;;5759:24:58;33480:338:644;5689:105:58;3872:1928;;;;;3646:2154;;;;;;;:::o;3545:344:389:-;3669:4;-1:-1:-1;;;;;;3704:51:389;;-1:-1:-1;;;3704:51:389;;:126;;-1:-1:-1;;;;;;;3771:59:389;;-1:-1:-1;;;3771:59:389;3704:126;:178;;;-1:-1:-1;;;;;;;;;;1168:51:471;;;3846:36:389;1060:166:471;10007:172:389;10064:4;10127:13;;10117:7;:23;10087:85;;;;-1:-1:-1;;10145:20:389;;;;:11;:20;;;;;:27;-1:-1:-1;;;10145:27:389;;;;10144:28;;10007:172::o;13297:231:367:-;13446:14;13483:38;:36;:38::i;:::-;13476:45;;13297:231;:::o;18988:189:389:-;19098:24;;;;:15;:24;;;;;;:29;;-1:-1:-1;;;;;;19098:29:389;-1:-1:-1;;;;;19098:29:389;;;;;;;;;19142:28;;19098:24;;19142:28;;;;;;;18988:189;;;:::o;10680:127:367:-;10736:4;10759:41;10736:4;10787:12;:10;:12::i;1421:172:68:-;1501:6;;;-1:-1:-1;;;;;1517:18:68;;;-1:-1:-1;;;;;;1517:18:68;;;;;;;1551:35;;1501:6;;;1517:18;1501:6;;1551:35;;1480:18;;1551:35;1470:123;1421:172;:::o;2371:375:71:-;2499:6;2481:15;:24;2477:80;;;2521:25;;-1:-1:-1;;;2521:25:71;;;;;;;:::i;2477:80::-;2567:14;:40;;-1:-1:-1;;;;;;2617:44:71;-1:-1:-1;;;2567:40:71;;;;-1:-1:-1;;;;;;2617:44:71;;-1:-1:-1;;;;;2617:44:71;;;;;;;;2677:62;;2715:25:644;;;2677:62:71;;2703:2:644;2688:18;2677:62:71;;;;;;;;2371:375;;:::o;14063:2082:389:-;14173:35;14211:21;14224:7;14211:12;:21::i;:::-;14173:59;;14269:4;-1:-1:-1;;;;;14247:26:389;:13;:18;;;-1:-1:-1;;;;;14247:26:389;;14243:67;;14282:28;;-1:-1:-1;;;14282:28:389;;;;;;;;;;;14243:67;14321:22;14363:4;-1:-1:-1;;;;;14347:20:389;:12;:10;:12::i;:::-;-1:-1:-1;;;;;14347:20:389;;:72;;;;14383:36;14400:4;14406:12;:10;:12::i;14383:36::-;14347:124;;;;14459:12;:10;:12::i;:::-;-1:-1:-1;;;;;14435:36:389;:20;14447:7;14435:11;:20::i;:::-;-1:-1:-1;;;;;14435:36:389;;14347:124;14321:151;;14488:17;14483:66;;14514:35;;-1:-1:-1;;;14514:35:389;;;;;;;;;;;14483:66;-1:-1:-1;;;;;14563:16:389;;14559:52;;14588:23;;-1:-1:-1;;;14588:23:389;;;;;;;;;;;14559:52;14622:43;14644:4;14650:2;14654:7;14663:1;14622:21;:43::i;:::-;14727:35;14744:1;14748:7;14757:4;14727:8;:35::i;:::-;-1:-1:-1;;;;;15052:18:389;;;;;;;:12;:18;;;;;;;;:31;;-1:-1:-1;;;;;;15052:31:389;;;-1:-1:-1;;;;;15052:31:389;;;-1:-1:-1;;15052:31:389;;;;;;;15097:16;;;;;;;;;:29;;;;;;;;-1:-1:-1;15097:29:389;;;;;;;;;;;15175:20;;;:11;:20;;;;;;15209:18;;-1:-1:-1;;;;;;15241:49:389;;;;-1:-1:-1;;;15274:15:389;15241:49;;;;;;;;;;15560:11;;15619:24;;;;;15661:13;;15175:20;;15619:24;;15661:13;15657:377;;15868:13;;15853:11;:28;15849:171;;15905:20;;15973:28;;;;-1:-1:-1;;;;;15947:54:389;-1:-1:-1;;;15947:54:389;-1:-1:-1;;;;;;15947:54:389;;;-1:-1:-1;;;;;15905:20:389;;15947:54;;;;15849:171;15028:1016;;;16078:7;16074:2;-1:-1:-1;;;;;16059:27:389;16068:4;-1:-1:-1;;;;;16059:27:389;-1:-1:-1;;;;;;;;;;;16059:27:389;;;;;;;;;14163:1982;;14063:2082;;;:::o;2428:204:84:-;2530:7;2556:69;2614:10;;2556:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2556:49:84;;-1:-1:-1;2583:20:84;;-1:-1:-1;2598:4:84;;-1:-1:-1;2583:14:84;:20::i;:::-;2573:31;;;;;;2556:16;:49::i;:::-;:57;;:69::i;:::-;2549:76;;2428:204;;;;;;:::o;9987:136:367:-;10065:4;10088:28;10096:10;;10108:7;10088;:28::i;5557:495:69:-;5645:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;5645:23:69;;;;;;;;;;;;5640:406;;5827:43;5857:7;-1:-1:-1;;;;;5827:43:69;5867:2;5827:21;:43::i;:::-;5941:40;5971:4;5978:2;5941:21;:40::i;:::-;5736:267;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;5736:267:69;;;;;;;;;;-1:-1:-1;;;5684:351:69;;;;;;;:::i;3475:152:70:-;3554:31;3571:4;3577:7;3554:16;:31::i;:::-;3595:25;3606:4;3612:7;3595:10;:25::i;3205:157::-;3285:32;3303:4;3309:7;3285:17;:32::i;:::-;4084:11;4098:17;;;:11;:17;;;;;;;;-1:-1:-1;;;;;4098:34:70;;;;;:25;;;:34;;;;;;;;4150:30;;:25;;;;:30;;;;;4143:37;;-1:-1:-1;;;;;;4143:37:70;;;4197:34;;;;4190:41;2043:269:71;;:::o;13180:111:367:-;13246:7;13272:12;:10;:12::i;16522:2355:389:-;16601:35;16639:21;16652:7;16639:12;:21::i;:::-;16686:18;;16601:59;;-1:-1:-1;16715:284:389;;;;16748:22;16790:4;-1:-1:-1;;;;;16774:20:389;:12;:10;:12::i;:::-;-1:-1:-1;;;;;16774:20:389;;:76;;;;16814:36;16831:4;16837:12;:10;:12::i;16814:36::-;16774:132;;;;16894:12;:10;:12::i;:::-;-1:-1:-1;;;;;16870:36:389;:20;16882:7;16870:11;:20::i;:::-;-1:-1:-1;;;;;16870:36:389;;16774:132;16748:159;;16927:17;16922:66;;16953:35;;-1:-1:-1;;;16953:35:389;;;;;;;;;;;16922:66;16734:265;16715:284;17009:51;17031:4;17045:1;17049:7;17058:1;17009:21;:51::i;:::-;17122:35;17139:1;17143:7;17152:4;17122:8;:35::i;:::-;-1:-1:-1;;;;;17481:18:389;;;17447:31;17481:18;;;:12;:18;;;;;;;;17513:24;;-1:-1:-1;;;;;;;;;;17513:24:389;;;;;;;;;-1:-1:-1;;;;;;17513:24:389;;;;17551:29;;;;;17536:1;17551:29;;;;;;;;-1:-1:-1;;;;;;17551:29:389;;;;;;;;;;17710:20;;;:11;:20;;;;;;17744;;-1:-1:-1;;;;17811:15:389;17778:49;;;-1:-1:-1;;;17778:49:389;-1:-1:-1;;;;;;17778:49:389;;;;;;;;;;17841:22;-1:-1:-1;;;17841:22:389;;;18129:11;;;18188:24;;;;;18230:13;;17481:18;;18188:24;;18230:13;18226:377;;18437:13;;18422:11;:28;18418:171;;18474:20;;18542:28;;;;-1:-1:-1;;;;;18516:54:389;-1:-1:-1;;;18516:54:389;-1:-1:-1;;;;;;18516:54:389;;;-1:-1:-1;;;;;18474:20:389;;18516:54;;;;18418:171;-1:-1:-1;;18628:35:389;;18655:7;;-1:-1:-1;18651:1:389;;-1:-1:-1;;;;;;18628:35:389;;;-1:-1:-1;;;;;;;;;;;18628:35:389;18651:1;;18628:35;-1:-1:-1;;18846:12:389;:14;;;;;;-1:-1:-1;;16522:2355:389:o;1792:562:84:-;1889:14;1915:12;1957:24;1964:4;1970:10;;1957:6;:24::i;:::-;1937:44;-1:-1:-1;1937:44:84;-1:-1:-1;1937:44:84;1992:60;;2020:21;;-1:-1:-1;;;2020:21:84;;35158:2:644;2020:21:84;;;35140::644;35197:2;35177:18;;;35170:30;-1:-1:-1;;;35216:18:644;;;35209:41;35267:18;;2020:21:84;34956:335:644;1992:60:84;2096:15;2066:27;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2066:45:84;;:92;;;-1:-1:-1;2133:25:84;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2115:43:84;:15;:43;2066:92;2062:144;;;2174:21;;-1:-1:-1;;;2174:21:84;;35689:2:644;2174:21:84;;;35671::644;35728:2;35708:18;;;35701:30;-1:-1:-1;;;35747:18:644;;;35740:41;35798:18;;2174:21:84;35487:335:644;2062:144:84;2242:1;2223:7;;;;:4;:7;:::i;:::-;-1:-1:-1;;;;;2223:21:84;;;2215:53;;;;-1:-1:-1;;;2215:53:84;;36029:2:644;2215:53:84;;;36011:21:644;36068:2;36048:18;;;36041:30;-1:-1:-1;;;36087:18:644;;;36080:49;36146:18;;2215:53:84;35827:343:644;2215:53:84;2302:1;2286:4;:13;;;:17;2278:35;;;;-1:-1:-1;;;2278:35:84;;36377:2:644;2278:35:84;;;36359:21:644;36416:1;36396:18;;;36389:29;-1:-1:-1;;;36434:18:644;;;36427:35;36479:18;;2278:35:84;36175:328:644;2278:35:84;-1:-1:-1;2331:8:84;;;;;2324:16;;;;:6;:16;;;;;:23;;-1:-1:-1;;2324:23:84;2343:4;2324:23;;;-1:-1:-1;1792:562:84;;;-1:-1:-1;1792:562:84:o;8540:1061:367:-;8740:19;8736:103;;8783:9;:14;8775:33;;;;-1:-1:-1;;;8775:33:367;;;;;;;:::i;:::-;8822:7;;8736:103;8850:28;8880:21;8905:20;:18;:20::i;:::-;8849:76;;-1:-1:-1;8849:76:367;-1:-1:-1;8936:21:367;-1:-1:-1;;;;;8960:35:367;;;:84;;9023:21;8960:84;;;8998:22;:20;:22::i;:::-;8936:108;-1:-1:-1;9055:18:367;9076:33;9095:14;9076:16;:33;:::i;:::-;9055:54;-1:-1:-1;9119:20:367;2634:6;9143:27;;;;9055:54;9143:27;:::i;:::-;9142:39;;;;:::i;:::-;9119:62;-1:-1:-1;;;;;;9196:45:367;;408:42:284;9196:45:367;9192:182;;;9278:10;9265:9;:23;9257:42;;;;-1:-1:-1;;;9257:42:367;;37044:2:644;9257:42:367;;;37026:21:644;37083:1;37063:18;;;37056:29;-1:-1:-1;;;37101:18:644;;;37094:36;37147:18;;9257:42:367;36842:329:644;9257:42:367;9192:182;;;9338:9;:14;9330:33;;;;-1:-1:-1;;;9330:33:367;;;;;;;:::i;:::-;9384:97;9421:9;9432:12;:10;:12::i;:::-;9446:20;9468:12;9384:36;:97::i;:::-;9491:103;9528:9;9539:12;:10;:12::i;:::-;9553:13;9568:25;9581:12;9568:10;:25;:::i;:::-;9491:36;:103::i;:::-;8726:875;;;;;8540:1061;;;;:::o;4671:362:75:-;4818:6;4811:4;:13;4807:69;;;4840:25;;-1:-1:-1;;;4840:25:75;;;;;;;:::i;4807:69::-;4918:49;;;;;;;;-1:-1:-1;;;;;4918:49:75;;;;;;;;;;;;;-1:-1:-1;4886:29:75;;;:19;:29;;;;;:81;;;;-1:-1:-1;;;;;;4886:81:75;;;;;;;;;;;-1:-1:-1;4886:81:75;;;;;;;4983:43;;2715:25:644;;;4918:49:75;;4886:29;;4983:43;;2688:18:644;4983:43:75;;;;;;;4671:362;;;:::o;10258:102:389:-;10326:27;10336:2;10340:8;10326:27;;;;;;;;;;;;:9;:27::i;3430:334:75:-;3549:6;3535:11;:20;3531:76;;;3571:25;;-1:-1:-1;;;3571:25:75;;;;;;;:::i;3531:76::-;3617:16;:36;;-1:-1:-1;;;;;3617:36:75;;-1:-1:-1;;;;;;3663:32:75;;;;;-1:-1:-1;;;3663:32:75;;;;;;;;3711:46;;2715:25:644;;;3711:46:75;;2703:2:644;2688:18;3711:46:75;2569:177:644;5291:1086:389;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;5401:7:389;5483:13;;5476:4;:20;5472:841;;;5516:31;5550:17;;;:11;:17;;;;;;;;;5516:51;;;;;;;;;-1:-1:-1;;;;;5516:51:389;;;;-1:-1:-1;;;5516:51:389;;-1:-1:-1;;;;;5516:51:389;;;;;;;;-1:-1:-1;;;5516:51:389;;;;;;;;;;;;;;5585:714;;5634:14;;-1:-1:-1;;;;;5634:28:389;;5630:99;;5697:9;5291:1086;-1:-1:-1;;;5291:1086:389:o;5630:99::-;-1:-1:-1;;;6065:6:389;6109:17;;;;:11;:17;;;;;;;;;6097:29;;;;;;;;;-1:-1:-1;;;;;6097:29:389;;;;;-1:-1:-1;;;6097:29:389;;-1:-1:-1;;;;;6097:29:389;;;;;;;;-1:-1:-1;;;6097:29:389;;;;;;;;;;;;;6156:28;6152:107;;6223:9;5291:1086;-1:-1:-1;;;5291:1086:389:o;6152:107::-;6026:255;;;5498:815;5472:841;6339:31;;-1:-1:-1;;;6339:31:389;;;;;;;;;;;1499:170:72;1578:9;:26;;-1:-1:-1;;;;;;1578:26:72;-1:-1:-1;;;;;1578:26:72;;;;;;;;1619:43;;;;-1:-1:-1;;1619:43:72;1499:170;:::o;3129:261:71:-;3232:15;:26;;;3268:20;:44;;-1:-1:-1;;;;;;3268:44:71;-1:-1:-1;;;;;3268:44:71;;;;;3328:55;;;;;;3268:44;;3232:26;;3328:55;:::i;:::-;;;;;;;;3129:261;;:::o;8179:271:367:-;8410:21;;8397:9;8381:13;;:25;;;;:::i;:::-;:50;;8373:70;;;;-1:-1:-1;;;8373:70:367;;;;;;;:::i;:::-;8179:271;;;;;;:::o;9654:245::-;9832:13;;9855:37;9865:3;9870:21;9855:9;:37::i;1273:185:54:-;1339:21;1363:11;1339:35;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1384:18:54;;1339:35;;-1:-1:-1;1384:18:54;;:11;;-1:-1:-1;1384:18:54;;;;-1:-1:-1;1384:18:54;-1:-1:-1;1384:18:54;:::i;:::-;;1418:33;1437:7;1446:4;1418:33;;;;;;;:::i;1119:455:466:-;1202:12;1234:37;1264:6;1234:29;:37::i;:::-;1226:88;;;;-1:-1:-1;;;1226:88:466;;37896:2:644;1226:88:466;;;37878:21:644;37935:2;37915:18;;;37908:30;37974:34;37954:18;;;37947:62;-1:-1:-1;;;38025:18:644;;;38018:36;38071:19;;1226:88:466;37694:402:644;1226:88:466;1385:12;1399:23;1426:6;-1:-1:-1;;;;;1426:19:466;1446:4;1426:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1384:67;;;;1468:99;1504:7;1513:10;1468:99;;;;;;;;;;;;;;;;;:35;:99::i;:::-;1461:106;1119:455;-1:-1:-1;;;;;1119:455:466:o;3698:157:71:-;3774:15;:26;;3792:8;;3774:15;-1:-1:-1;;;;3774:26:71;-1:-1:-1;;;3792:8:71;3774:26;;;;;;;;:::i;:::-;;;;;;3816:32;3839:8;3816:32;;;;;;:::i;:::-;;;;;;;;3698:157;:::o;1186:320:462:-;-1:-1:-1;;;;;1476:19:462;;:23;;;1186:320::o;19658:672:389:-;19816:4;19863:2;-1:-1:-1;;;;;19836:47:389;;19884:12;:10;:12::i;:::-;19898:4;19904:7;19913:5;19836:83;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;19836:83:389;;;;;;;;-1:-1:-1;;19836:83:389;;;;;;;;;;;;:::i;:::-;;;19832:492;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;20089:13:389;;20085:229;;20134:40;;-1:-1:-1;;;20134:40:389;;;;;;;;;;;20085:229;20274:6;20268:13;20259:6;20255:2;20251:15;20244:38;19832:492;-1:-1:-1;;;;;;19965:66:389;-1:-1:-1;;;19965:66:389;;-1:-1:-1;19832:492:389;19658:672;;;;;;:::o;2264:471:52:-;2326:15;2343:13;2368:25;2396:17;1729:8;:15;;1655:96;2396:17;2368:45;;2423:24;2450:8;2423:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2474:9;2469:224;2493:17;2489:1;:21;2469:224;;;2549:7;2557:1;2549:10;;;;;;;;:::i;:::-;;;;;;;2538:8;:21;2534:149;;;2587:1;2579:9;;2616:7;2624:1;2616:10;;;;;;;;:::i;:::-;;;;;;;2606:20;;2645:23;;;2264:471;;;:::o;2534:149::-;2512:6;2517:1;2512:6;;:::i;:::-;;;2469:224;;;-1:-1:-1;2703:25:52;;-1:-1:-1;;;2703:25:52;;39330:2:644;2703:25:52;;;39312:21:644;39369:2;39349:18;;;39342:30;-1:-1:-1;;;39388:18:644;;;39381:45;39443:18;;2703:25:52;39128:339:644;2849:390:52;2911:13;2936:25;2964:17;1729:8;:15;;1655:96;2964:17;2936:45;;2991:24;3018:8;2991:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3042:9;3037:161;3061:17;3057:1;:21;3037:161;;;3117:7;3125:1;3117:10;;;;;;;;:::i;:::-;;;;;;;3106:8;:21;3102:86;;;3154:7;:19;3162:7;3170:1;3162:10;;;;;;;;:::i;:::-;;;;;;;3154:19;;;;;;;;;;;3147:26;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2849:390;;;:::o;3102:86::-;3080:6;3085:1;3080:6;;:::i;:::-;;;3037:161;;403:703:467;459:13;676:10;672:51;;-1:-1:-1;;702:10:467;;;;;;;;;;;;-1:-1:-1;;;702:10:467;;;;;403:703::o;672:51::-;747:5;732:12;786:75;793:9;;786:75;;818:8;;;;:::i;:::-;;-1:-1:-1;840:10:467;;-1:-1:-1;848:2:467;840:10;;:::i;:::-;;;786:75;;;870:19;902:6;-1:-1:-1;;;;;892:17:467;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;892:17:467;;870:39;;919:150;926:10;;919:150;;952:11;962:1;952:11;;:::i;:::-;;-1:-1:-1;1020:10:467;1028:2;1020:5;:10;:::i;:::-;1007:24;;:2;:24;:::i;:::-;994:39;;977:6;984;977:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;977:56:467;;;;;;;;-1:-1:-1;1047:11:467;1056:2;1047:11;;:::i;:::-;;;919:150;;678:140:55;771:23;;;;:13;:23;;;;;;;;:40;;;;;;;;:::i;3851:246:52:-;3942:21;;;;:11;:21;;;;;;;;3941:22;3933:47;;;;-1:-1:-1;;;3933:47:52;;39791:2:644;3933:47:52;;;39773:21:644;39830:2;39810:18;;;39803:30;-1:-1:-1;;;39849:18:644;;;39842:42;39901:18;;3933:47:52;39589:336:644;3933:47:52;3990:17;;;;:7;:17;;;;;;;;:28;;;;;;;;:::i;:::-;;4033:57;4053:26;4070:8;4053:16;:26::i;:::-;4033:57;;;40104:25:644;;;40160:2;40145:18;;40138:34;;;40077:18;4033:57:52;39930:248:644;1254:592:61;1409:15;1441:14;:12;:14::i;:::-;1436:70;;1471:24;;-1:-1:-1;;;1471:24:61;;;;;;;:::i;1436:70::-;1520:12;1516:58;;1548:15;;-1:-1:-1;;;1548:15:61;;40385:2:644;1548:15:61;;;40367:21:644;40424:1;40404:18;;;40397:29;-1:-1:-1;;;40442:18:644;;;40435:35;40487:18;;1548:15:61;40183:328:644;1516:58:61;1584:15;1602:21;;1584:39;;1669:55;1688:7;1697;1706:17;;1669:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1669:18:61;;-1:-1:-1;;;1669:55:61:i;:::-;1635:21;1634:90;;;;;-1:-1:-1;1757:7:61;1740:74;1786:1;1766:17;1776:7;1757;1766:17;:::i;:::-;:21;;;;:::i;:::-;1789:17;;1808:5;;1740:74;;;;;;;;;;:::i;:::-;;;;;;;;1825:14;1254:592;;;;;;;:::o;470:194:209:-;4910:13:436;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:436;;;;;;;:::i;:::-;572:26:209::1;:24;:26::i;:::-;608:49;640:16;608:31;:49::i;2137:151:389:-:0;4910:13:436;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:436;;;;;;;:::i;:::-;2241:40:389::1;2266:5;2273:7;2241:24;:40::i;920:122:84:-:0;4910:13:436;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:436;;;;;;;:::i;:::-;994:41:84::1;;;;;;;;;;;;;;-1:-1:-1::0;;;994:41:84::1;;::::0;::::1;;;;;;;;;;;;;-1:-1:-1::0;;;994:41:84::1;;::::0;:13:::1;:41::i;:::-;920:122::o:0;898:906:286:-;1019:4;;1067;1019;;1109:567;1133:5;:12;1129:1;:16;1109:567;;;1166:10;1175:1;1166:10;;:::i;:::-;;;1190:20;1213:5;1219:1;1213:8;;;;;;;;:::i;:::-;;;;;;;1190:31;;1256:12;1240;:28;1236:430;;1391:44;;;;;;41596:19:644;;;41631:12;;;41624:28;;;41668:12;;1391:44:286;;;;;;;;;;;;1381:55;;;;;;1366:70;;1236:430;;;1578:44;;;;;;41596:19:644;;;41631:12;;;41624:28;;;41668:12;;1578:44:286;;;;;;;;;;;;1568:55;;;;;;1553:70;;1650:1;1641:10;;;;;:::i;:::-;;;1236:430;-1:-1:-1;1147:3:286;;;;:::i;:::-;;;;1109:567;;;-1:-1:-1;1769:20:286;;;;;-1:-1:-1;;;;898:906:286:o;1058:401:209:-;1120:14;1150:30;1169:10;1150:18;:30::i;:::-;1146:307;;;-1:-1:-1;;;1352:14:209;1348:23;1335:37;1331:2;1327:46;1058:401;:::o;1146:307::-;-1:-1:-1;929:10:464;;13297:231:367:o;12601:573::-;12946:33;12954:12;;12976:1;12946:7;:33::i;:::-;12945:34;:56;;;;-1:-1:-1;;;;;;12983:18:367;;;;12945:56;:76;;;;-1:-1:-1;;;;;;13005:16:367;;;;12945:76;12941:227;;;13042:27;13050:12;;13064:4;13042:7;:27::i;:::-;13041:28;:58;;;;;13074:25;13082:12;;13096:2;13074:7;:25::i;:::-;13073:26;13041:58;13037:121;;;13119:24;;-1:-1:-1;;;13119:24:367;;41893:2:644;13119:24:367;;;41875:21:644;41932:2;41912:18;;;41905:30;-1:-1:-1;;;41951:18:644;;;41944:44;42005:18;;13119:24:367;41691:338:644;2704:570:84;2778:12;512:270;2875:7;;;;:4;:7;:::i;:::-;2900:21;;;;;;;;:::i;:::-;2939:15;;;;2972:25;;;;;;;;:::i;:::-;3031:8;;;;:4;:8;:::i;:::-;3015:26;;;;;;;:::i;:::-;;;;;;;;;3059:13;;;;3090:18;;;;3126:13;;;;;;;;:::i;:::-;3157:27;;;;;;;;:::i;:::-;3202:25;;;;;;;;:::i;:::-;2821:446;;;;;;42767:25:644;;;;-1:-1:-1;;;;;42866:15:644;;;42846:18;;;42839:43;42918:15;;;42898:18;;;42891:43;42950:18;;;42943:34;;;;43014:15;;;42993:19;;;42986:44;43046:19;;;43039:35;;;;43090:19;;;43083:35;43134:19;;;43127:35;43199:15;;;43178:19;;;43171:44;-1:-1:-1;;;;;43290:15:644;;;3245:8:84;43269:19:644;;;43262:44;;;;43343:16;;43322:19;;;43315:45;3245:8:84;;;43376:19:644;;;43369:36;42739:19;;2821:446:84;;;;;;;;;;;;2802:465;;2704:570;;;:::o;3890:176:470:-;3967:7;3993:66;4026:20;:18;:20::i;:::-;4048:10;8710:57:469;;-1:-1:-1;;;8710:57:469;;;44520:27:644;44563:11;;;44556:27;;;44599:12;;;44592:28;;;8674:7:469;;44636:12:644;;8710:57:469;;;;;;;;;;;;8700:68;;;;;;8693:75;;8581:194;;;;;3781:227;3859:7;3879:17;3898:18;3920:27;3931:4;3937:9;3920:10;:27::i;:::-;3878:69;;;;3957:18;3969:5;3957:11;:18::i;:::-;-1:-1:-1;3992:9:469;3781:227;-1:-1:-1;;;3781:227:469:o;1565:441:292:-;1640:13;1665:19;1697:10;1701:6;1697:1;:10;:::i;:::-;:14;;1710:1;1697:14;:::i;:::-;-1:-1:-1;;;;;1687:25:292;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1687:25:292;;1665:47;;-1:-1:-1;;;1722:6:292;1729:1;1722:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1722:15:292;;;;;;;;;-1:-1:-1;;;1747:6:292;1754:1;1747:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1747:15:292;;;;;;;;-1:-1:-1;1777:9:292;1789:10;1793:6;1789:1;:10;:::i;:::-;:14;;1802:1;1789:14;:::i;:::-;1777:26;;1772:132;1809:1;1805;:5;1772:132;;;-1:-1:-1;;;1856:5:292;1864:3;1856:11;1843:25;;;;;;;:::i;:::-;;;;1831:6;1838:1;1831:9;;;;;;;;:::i;:::-;;;;:37;-1:-1:-1;;;;;1831:37:292;;;;;;;;-1:-1:-1;1892:1:292;1882:11;;;;;1812:3;;;:::i;:::-;;;1772:132;;;-1:-1:-1;1921:10:292;;1913:55;;;;-1:-1:-1;;;1913:55:292;;43759:2:644;1913:55:292;;;43741:21:644;;;43778:18;;;43771:30;43837:34;43817:18;;;43810:62;43889:18;;1913:55:292;43557:356:644;5036:168:69;5114:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;5114:23:69;;;;;;;;;;:30;;-1:-1:-1;;5114:30:69;5140:4;5114:30;;;5159:38;5186:10;;5123:4;;5159:38;;5114:14;5159:38;5036:168;;:::o;3690:253:70:-;3760:11;3774:17;;;:11;:17;;;;;:23;;;3834:1;;3774:17;3807:28;3834:1;3774:23;3807:28;:::i;:::-;;;;-1:-1:-1;;3846:17:70;;;;:11;:17;;;;;;;;:30;;;:25;;;:30;;;;;:40;;-1:-1:-1;;;;;3846:40:70;;;-1:-1:-1;;;;;;3846:40:70;;;;;;;3896:34;;;:25;;;;:34;;;;:40;3690:253::o;5253:204:69:-;5332:25;5343:4;5349:7;5332:10;:25::i;:::-;5374:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;5374:23:69;;;;;;;;;;5367:30;;-1:-1:-1;;5367:30:69;;;5412:38;5439:10;;5383:4;;5412:38;;5374:14;5412:38;5253:204;;:::o;508:385:284:-;659:12;655:49;;687:7;;655:49;-1:-1:-1;;;;;718:25:284;;408:42;718:25;714:173;;;759:37;783:3;788:7;759:23;:37::i;714:173::-;827:49;845:9;856:5;863:3;868:7;827:17;:49::i;10720:1708:389:-;10861:13;;-1:-1:-1;;;;;10888:16:389;;10884:48;;10913:19;;-1:-1:-1;;;10913:19:389;;;;;;;;;;;10884:48;10946:13;10942:44;;10968:18;;-1:-1:-1;;;10968:18:389;;;;;;;;;;;10942:44;10997:61;11027:1;11031:2;11035:12;11049:8;10997:21;:61::i;:::-;-1:-1:-1;;;;;11329:16:389;;;;;;:12;:16;;;;;;;;:44;;-1:-1:-1;;;;;;11387:49:389;;-1:-1:-1;;;;;11329:44:389;;;;;;;11387:49;;;-1:-1:-1;;;;;;;;;11329:44:389;;;;;;11387:49;;;;;;;;;;;;;;;;11451:25;;;:11;:25;;;;;;:35;;-1:-1:-1;;;;;;11500:66:389;;;-1:-1:-1;;;11550:15:389;11500:66;;;;;;;;;;;;;11451:25;;11644:23;;;;11686:15;;:13;:15::i;:::-;11682:618;;;11721:308;11751:38;;11776:12;;-1:-1:-1;;;;;11751:38:389;;;11768:1;;-1:-1:-1;;;;;;;;;;;11751:38:389;11768:1;;11751:38;11816:69;11855:1;11859:2;11863:14;;;;;;11879:5;11816:30;:69::i;:::-;11811:172;;11920:40;;-1:-1:-1;;;11920:40:389;;;;;;;;;;;11811:172;12024:3;12009:12;:18;11721:308;;12108:12;12091:13;;:29;12087:43;;12122:8;;;12087:43;11682:618;;;12169:117;12199:40;;12224:14;;;;;-1:-1:-1;;;;;12199:40:389;;;12216:1;;-1:-1:-1;;;;;;;;;;;12199:40:389;12216:1;;12199:40;12281:3;12266:12;:18;12169:117;;11682:618;-1:-1:-1;12313:13:389;:28;12361:60;12390:1;12394:2;12398:12;12412:8;12361:60;:::i;6622:742:462:-;6768:12;6796:7;6792:566;;;-1:-1:-1;6826:10:462;6819:17;;6792:566;6937:17;;:21;6933:415;;7181:10;7175:17;7241:15;7228:10;7224:2;7220:19;7213:44;6933:415;7320:12;7313:20;;-1:-1:-1;;;7313:20:462;;;;;;;;:::i;3307:459:52:-;3374:7;3393:25;3421:17;1729:8;:15;;1655:96;3421:17;3393:45;;3448:24;3475:8;3448:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3499:9;3494:231;3518:17;3514:1;:21;3494:231;;;3572:7;3580:1;3572:10;;;;;;;;:::i;:::-;;;;;;;3560:8;:22;3556:159;;;3606:5;;3602:73;;3642:7;3650:5;3654:1;3650;:5;:::i;:::-;3642:14;;;;;;;;:::i;:::-;;;;;;;3635:21;;;;;3307:459;;;:::o;3602:73::-;-1:-1:-1;3699:1:52;;3307:459;-1:-1:-1;;;;3307:459:52:o;3556:159::-;3537:3;;;;:::i;:::-;;;;3494:231;;;-1:-1:-1;3734:25:52;;-1:-1:-1;;;3734:25:52;;44120:2:644;3734:25:52;;;44102:21:644;44159:2;44139:18;;;44132:30;-1:-1:-1;;;44178:18:644;;;44171:45;44233:18;;3734:25:52;43918:339:644;11582:127:367;11646:4;11669:33;11677:10;;11689:12;:10;:12::i;4535:362:52:-;4685:25;;4749:24;4760:13;4749:8;:24;:::i;:::-;4821:8;:22;;;;;;;;;;;;;-1:-1:-1;4854:16:52;;;:7;4821:22;4854:16;;;;;;;:36;;4739:34;;-1:-1:-1;4739:34:52;;-1:-1:-1;4854:36:52;;:16;;:36;;;;:::i;:::-;;4535:362;;;;;;:::o;776:69:464:-;4910:13:436;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:436;;;;;;;:::i;670:242:209:-;4910:13:436;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:436;;;;;;;:::i;:::-;787:9:209::1;782:124;806:16;:23;802:1;:27;782:124;;;891:4;850:17;:38;868:16;885:1;868:19;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;-1:-1:-1;;;;;850:38:209::1;::::0;;;::::1;::::0;;;;;;-1:-1:-1;850:38:209;:45;;-1:-1:-1;;850:45:209::1;::::0;::::1;;::::0;;;::::1;::::0;;831:3;::::1;::::0;::::1;:::i;:::-;;;;782:124;;2294:202:389::0;4910:13:436;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:436;;;;;;;:::i;:::-;2408:13:389;;::::1;::::0;:5:::1;::::0;:13:::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;2431:17:389;;::::1;::::0;:7:::1;::::0;:17:::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;2644:7:389;2458:13:::1;:31:::0;-1:-1:-1;;2294:202:389:o;2306:147:470:-;4910:13:436;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:436;;;;;;;:::i;:::-;2408:38:470::1;2432:4;2438:7;2408:23;:38::i;2842:160::-:0;2895:7;2921:74;1595:95;2955:17;4386:12;;;4302:103;2955:17;4731:15;;3184:73;;;;;;47004:25:644;;;47045:18;;;47038:34;;;47088:18;;;47081:34;;;3228:13:470;47131:18:644;;;47124:34;3251:4:470;47174:19:644;;;47167:61;3148:7:470;;46976:19:644;;3184:73:470;;;;;;;;;;;;3174:84;;;;;;3167:91;;3008:257;;;;;;2265:730:469;2346:7;2355:12;2383:9;:16;2403:2;2383:22;2379:610;;;2719:4;2704:20;;2698:27;2768:4;2753:20;;2747:27;2825:4;2810:20;;2804:27;2421:9;2796:36;2866:25;2877:4;2796:36;2698:27;2747;2866:10;:25::i;:::-;2859:32;;;;;;;;;2379:610;-1:-1:-1;2938:1:469;;-1:-1:-1;2942:35:469;2379:610;2265:730;;;;;:::o;570:631::-;647:20;638:5;:29;;;;;;;;:::i;:::-;;634:561;;;570:631;:::o;634:561::-;743:29;734:5;:38;;;;;;;;:::i;:::-;;730:465;;;788:34;;-1:-1:-1;;;788:34:469;;44861:2:644;788:34:469;;;44843:21:644;44900:2;44880:18;;;44873:30;-1:-1:-1;;;44919:18:644;;;44912:54;44983:18;;788:34:469;44659:348:644;730:465:469;852:35;843:5;:44;;;;;;;;:::i;:::-;;839:356;;;903:41;;-1:-1:-1;;;903:41:469;;45214:2:644;903:41:469;;;45196:21:644;45253:2;45233:18;;;45226:30;45292:33;45272:18;;;45265:61;45343:18;;903:41:469;45012:355:644;839:356:469;974:30;965:5;:39;;;;;;;;:::i;:::-;;961:234;;;1020:44;;-1:-1:-1;;;1020:44:469;;45574:2:644;1020:44:469;;;45556:21:644;45613:2;45593:18;;;45586:30;45652:34;45632:18;;;45625:62;-1:-1:-1;;;45703:18:644;;;45696:32;45745:19;;1020:44:469;45372:398:644;961:234:469;1094:30;1085:5;:39;;;;;;;;:::i;:::-;;1081:114;;;1140:44;;-1:-1:-1;;;1140:44:469;;45977:2:644;1140:44:469;;;45959:21:644;46016:2;45996:18;;;45989:30;46055:34;46035:18;;;46028:62;-1:-1:-1;;;46106:18:644;;;46099:32;46148:19;;1140:44:469;45775:398:644;2532:292:284;2714:12;2732:2;-1:-1:-1;;;;;2732:7:284;2748:5;2732:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2713:46;;;2777:7;2769:48;;;;-1:-1:-1;;;2769:48:284;;46590:2:644;2769:48:284;;;46572:21:644;46629:2;46609:18;;;46602:30;-1:-1:-1;;;46648:18:644;;;46641:58;46716:18;;2769:48:284;46388:352:644;2073:396:284;2234:3;-1:-1:-1;;;;;2225:12:284;:5;-1:-1:-1;;;;;2225:12:284;;2221:49;;;2253:7;;2221:49;-1:-1:-1;;;;;2284:22:284;;2301:4;2284:22;2280:183;;;2322:44;-1:-1:-1;;;;;2322:30:284;;2353:3;2358:7;2322:30;:44::i;2280:183::-;2397:55;-1:-1:-1;;;;;2397:34:284;;2432:5;2439:3;2444:7;2397:34;:55::i;2459:297:470:-;4910:13:436;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:436;;;;;;;:::i;:::-;2592:22:470;;::::1;::::0;;::::1;::::0;2648:25;;;;;::::1;::::0;2683:12:::1;:25:::0;;;;2718:15:::1;:31:::0;2459:297::o;5189:1603:469:-;5315:7;;-1:-1:-1;;;;;6226:79:469;;6222:161;;;-1:-1:-1;6337:1:469;;-1:-1:-1;6341:30:469;6321:51;;6222:161;6396:1;:7;;6401:2;6396:7;;:18;;;;;6407:1;:7;;6412:2;6407:7;;6396:18;6392:100;;;-1:-1:-1;6446:1:469;;-1:-1:-1;6450:30:469;6430:51;;6392:100;6603:24;;;6586:14;6603:24;;;;;;;;;47466:25:644;;;47539:4;47527:17;;47507:18;;;47500:45;;;;47561:18;;;47554:34;;;47604:18;;;47597:34;;;6603:24:469;;47438:19:644;;6603:24:469;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6603:24:469;;-1:-1:-1;;6603:24:469;;;-1:-1:-1;;;;;;;6641:20:469;;6637:101;;6693:1;6697:29;6677:50;;;;;;;6637:101;6756:6;-1:-1:-1;6764:20:469;;-1:-1:-1;5189:1603:469;;;;;;;;:::o;735:205:226:-;847:86;867:5;897:23;;;922:2;926:5;874:58;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;874:58:226;;;;;;;;;;;;;;-1:-1:-1;;;;;874:58:226;-1:-1:-1;;;;;;874:58:226;;;;;;;;;;847:19;:86::i;946:241::-;1111:68;;-1:-1:-1;;;;;47900:15:644;;;1111:68:226;;;47882:34:644;47952:15;;47932:18;;;47925:43;47984:18;;;47977:34;;;1084:96:226;;1104:5;;-1:-1:-1;;;1134:27:226;47817:18:644;;1111:68:226;47642:375:644;3241:706:226;3660:23;3686:69;3714:4;3686:69;;;;;;;;;;;;;;;;;3694:5;-1:-1:-1;;;;;3686:27:226;;;:69;;;;;:::i;:::-;3769:17;;3660:95;;-1:-1:-1;3769:21:226;3765:176;;3864:10;3853:30;;;;;;;;;;;;:::i;:::-;3845:85;;;;-1:-1:-1;;;3845:85:226;;48474:2:644;3845:85:226;;;48456:21:644;48513:2;48493:18;;;48486:30;48552:34;48532:18;;;48525:62;-1:-1:-1;;;48603:18:644;;;48596:40;48653:19;;3845:85:226;48272:406:644;3827:223:288;3960:12;3991:52;4013:6;4021:4;4027:1;4030:12;3960;5202:18;5213:6;5202:10;:18::i;:::-;5194:60;;;;-1:-1:-1;;;5194:60:288;;49292:2:644;5194:60:288;;;49274:21:644;49331:2;49311:18;;;49304:30;49370:31;49350:18;;;49343:59;49419:18;;5194:60:288;49090:353:644;5194:60:288;5266:12;5280:23;5307:6;-1:-1:-1;;;;;5307:11:288;5327:5;5335:4;5307:33;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5265:75;;;;5357:51;5374:7;5383:10;5395:12;5357:16;:51::i;:::-;5350:58;4914:501;-1:-1:-1;;;;;;;4914:501:288:o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:131:644;-1:-1:-1;;;;;;88:32:644;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;688:258::-;760:1;770:113;784:6;781:1;778:13;770:113;;;860:11;;;854:18;841:11;;;834:39;806:2;799:10;770:113;;;901:6;898:1;895:13;892:48;;;-1:-1:-1;;936:1:644;918:16;;911:27;688:258::o;951:::-;993:3;1031:5;1025:12;1058:6;1053:3;1046:19;1074:63;1130:6;1123:4;1118:3;1114:14;1107:4;1100:5;1096:16;1074:63;:::i;:::-;1191:2;1170:15;-1:-1:-1;;1166:29:644;1157:39;;;;1198:4;1153:50;;951:258;-1:-1:-1;;951:258:644:o;1214:220::-;1363:2;1352:9;1345:21;1326:4;1383:45;1424:2;1413:9;1409:18;1401:6;1383:45;:::i;1439:104::-;-1:-1:-1;;;;;1505:31:644;1493:44;;1439:104::o;1756:180::-;1815:6;1868:2;1856:9;1847:7;1843:23;1839:32;1836:52;;;1884:1;1881;1874:12;1836:52;-1:-1:-1;1907:23:644;;1756:180;-1:-1:-1;1756:180:644:o;1941:173::-;2009:20;;-1:-1:-1;;;;;2058:31:644;;2048:42;;2038:70;;2104:1;2101;2094:12;2038:70;1941:173;;;:::o;2119:254::-;2187:6;2195;2248:2;2236:9;2227:7;2223:23;2219:32;2216:52;;;2264:1;2261;2254:12;2216:52;2287:29;2306:9;2287:29;:::i;:::-;2277:39;2363:2;2348:18;;;;2335:32;;-1:-1:-1;;;2119:254:644:o;2378:186::-;2437:6;2490:2;2478:9;2469:7;2465:23;2461:32;2458:52;;;2506:1;2503;2496:12;2458:52;2529:29;2548:9;2529:29;:::i;2751:328::-;2828:6;2836;2844;2897:2;2885:9;2876:7;2872:23;2868:32;2865:52;;;2913:1;2910;2903:12;2865:52;2936:29;2955:9;2936:29;:::i;:::-;2926:39;;2984:38;3018:2;3007:9;3003:18;2984:38;:::i;:::-;2974:48;;3069:2;3058:9;3054:18;3041:32;3031:42;;2751:328;;;;;:::o;3451:347::-;3502:8;3512:6;3566:3;3559:4;3551:6;3547:17;3543:27;3533:55;;3584:1;3581;3574:12;3533:55;-1:-1:-1;3607:20:644;;-1:-1:-1;;;;;3639:30:644;;3636:50;;;3682:1;3679;3672:12;3636:50;3719:4;3711:6;3707:17;3695:29;;3771:3;3764:4;3755:6;3747;3743:19;3739:30;3736:39;3733:59;;;3788:1;3785;3778:12;3803:700;3914:6;3922;3930;3983:2;3971:9;3962:7;3958:23;3954:32;3951:52;;;3999:1;3996;3989:12;3951:52;4039:9;4026:23;-1:-1:-1;;;;;4109:2:644;4101:6;4098:14;4095:34;;;4125:1;4122;4115:12;4095:34;4148:22;;;;4204:3;4186:16;;;4182:26;4179:46;;;4221:1;4218;4211:12;4179:46;4244:2;;-1:-1:-1;4299:2:644;4284:18;;4271:32;;4315:16;;;4312:36;;;4344:1;4341;4334:12;4312:36;;4383:60;4435:7;4424:8;4413:9;4409:24;4383:60;:::i;:::-;3803:700;;4462:8;;-1:-1:-1;4357:86:644;;-1:-1:-1;;;;3803:700:644:o;4797:248::-;4865:6;4873;4926:2;4914:9;4905:7;4901:23;4897:32;4894:52;;;4942:1;4939;4932:12;4894:52;-1:-1:-1;;4965:23:644;;;5035:2;5020:18;;;5007:32;;-1:-1:-1;4797:248:644:o;5050:274::-;-1:-1:-1;;;;;5242:32:644;;;;5224:51;;5306:2;5291:18;;5284:34;5212:2;5197:18;;5050:274::o;5329:254::-;5397:6;5405;5458:2;5446:9;5437:7;5433:23;5429:32;5426:52;;;5474:1;5471;5464:12;5426:52;5510:9;5497:23;5487:33;;5539:38;5573:2;5562:9;5558:18;5539:38;:::i;:::-;5529:48;;5329:254;;;;;:::o;5588:118::-;5674:5;5667:13;5660:21;5653:5;5650:32;5640:60;;5696:1;5693;5686:12;5711:524;5811:6;5819;5872:2;5860:9;5851:7;5847:23;5843:32;5840:52;;;5888:1;5885;5878:12;5840:52;5928:9;5915:23;-1:-1:-1;;;;;5953:6:644;5950:30;5947:50;;;5993:1;5990;5983:12;5947:50;6016:22;;6072:3;6054:16;;;6050:26;6047:46;;;6089:1;6086;6079:12;6047:46;6112:2;-1:-1:-1;6164:2:644;6149:18;;6136:32;6177:28;6136:32;6177:28;:::i;:::-;6224:5;6214:15;;;5711:524;;;;;:::o;6530:163::-;6597:5;6642:3;6633:6;6628:3;6624:16;6620:26;6617:46;;;6659:1;6656;6649:12;6698:127;6759:10;6754:3;6750:20;6747:1;6740:31;6790:4;6787:1;6780:15;6814:4;6811:1;6804:15;6830:275;6901:2;6895:9;6966:2;6947:13;;-1:-1:-1;;6943:27:644;6931:40;;-1:-1:-1;;;;;6986:34:644;;7022:22;;;6983:62;6980:88;;;7048:18;;:::i;:::-;7084:2;7077:22;6830:275;;-1:-1:-1;6830:275:644:o;7110:186::-;7158:4;-1:-1:-1;;;;;7183:6:644;7180:30;7177:56;;;7213:18;;:::i;:::-;-1:-1:-1;7279:2:644;7258:15;-1:-1:-1;;7254:29:644;7285:4;7250:40;;7110:186::o;7301:462::-;7343:5;7396:3;7389:4;7381:6;7377:17;7373:27;7363:55;;7414:1;7411;7404:12;7363:55;7450:6;7437:20;7481:48;7497:31;7525:2;7497:31;:::i;:::-;7481:48;:::i;:::-;7554:2;7545:7;7538:19;7600:3;7593:4;7588:2;7580:6;7576:15;7572:26;7569:35;7566:55;;;7617:1;7614;7607:12;7566:55;7682:2;7675:4;7667:6;7663:17;7656:4;7647:7;7643:18;7630:55;7730:1;7705:16;;;7723:4;7701:27;7694:38;;;;7709:7;7301:462;-1:-1:-1;;;7301:462:644:o;7768:877::-;7916:6;7924;7932;7940;7948;7956;8009:3;7997:9;7988:7;7984:23;7980:33;7977:53;;;8026:1;8023;8016:12;7977:53;8049:29;8068:9;8049:29;:::i;:::-;8039:39;;8125:2;8114:9;8110:18;8097:32;8087:42;;8148:38;8182:2;8171:9;8167:18;8148:38;:::i;:::-;8138:48;;8233:2;8222:9;8218:18;8205:32;8195:42;;8288:3;8277:9;8273:19;8260:33;-1:-1:-1;;;;;8353:2:644;8345:6;8342:14;8339:34;;;8369:1;8366;8359:12;8339:34;8392:74;8458:7;8449:6;8438:9;8434:22;8392:74;:::i;:::-;8382:84;;8519:3;8508:9;8504:19;8491:33;8475:49;;8549:2;8539:8;8536:16;8533:36;;;8565:1;8562;8555:12;8533:36;;8588:51;8631:7;8620:8;8609:9;8605:24;8588:51;:::i;:::-;8578:61;;;7768:877;;;;;;;;:::o;8903:321::-;8972:6;9025:2;9013:9;9004:7;9000:23;8996:32;8993:52;;;9041:1;9038;9031:12;8993:52;9081:9;9068:23;-1:-1:-1;;;;;9106:6:644;9103:30;9100:50;;;9146:1;9143;9136:12;9100:50;9169:49;9210:7;9201:6;9190:9;9186:22;9169:49;:::i;9229:322::-;9306:6;9314;9322;9375:2;9363:9;9354:7;9350:23;9346:32;9343:52;;;9391:1;9388;9381:12;9343:52;9427:9;9414:23;9404:33;;9456:38;9490:2;9479:9;9475:18;9456:38;:::i;9556:477::-;9635:6;9643;9651;9704:2;9692:9;9683:7;9679:23;9675:32;9672:52;;;9720:1;9717;9710:12;9672:52;9756:9;9743:23;9733:33;;9817:2;9806:9;9802:18;9789:32;-1:-1:-1;;;;;9836:6:644;9833:30;9830:50;;;9876:1;9873;9866:12;9830:50;9915:58;9965:7;9956:6;9945:9;9941:22;9915:58;:::i;10450:315::-;10515:6;10523;10576:2;10564:9;10555:7;10551:23;10547:32;10544:52;;;10592:1;10589;10582:12;10544:52;10615:29;10634:9;10615:29;:::i;10770:626::-;10867:6;10875;10928:2;10916:9;10907:7;10903:23;10899:32;10896:52;;;10944:1;10941;10934:12;10896:52;10984:9;10971:23;-1:-1:-1;;;;;11054:2:644;11046:6;11043:14;11040:34;;;11070:1;11067;11060:12;11040:34;11108:6;11097:9;11093:22;11083:32;;11153:7;11146:4;11142:2;11138:13;11134:27;11124:55;;11175:1;11172;11165:12;11124:55;11215:2;11202:16;11241:2;11233:6;11230:14;11227:34;;;11257:1;11254;11247:12;11227:34;11310:7;11305:2;11295:6;11292:1;11288:14;11284:2;11280:23;11276:32;11273:45;11270:65;;;11331:1;11328;11321:12;11270:65;11362:2;11354:11;;;;;11384:6;;-1:-1:-1;10770:626:644;;-1:-1:-1;;;;10770:626:644:o;11401:801::-;11561:4;11590:2;11630;11619:9;11615:18;11660:2;11649:9;11642:21;11683:6;11718;11712:13;11749:6;11741;11734:22;11787:2;11776:9;11772:18;11765:25;;11849:2;11839:6;11836:1;11832:14;11821:9;11817:30;11813:39;11799:53;;11887:2;11879:6;11875:15;11908:1;11918:255;11932:6;11929:1;11926:13;11918:255;;;12025:2;12021:7;12009:9;12001:6;11997:22;11993:36;11988:3;11981:49;12053:40;12086:6;12077;12071:13;12053:40;:::i;:::-;12043:50;-1:-1:-1;12151:12:644;;;;12116:15;;;;11954:1;11947:9;11918:255;;;-1:-1:-1;12190:6:644;;11401:801;-1:-1:-1;;;;;;;11401:801:644:o;12207:277::-;12287:6;12340:2;12328:9;12319:7;12315:23;12311:32;12308:52;;;12356:1;12353;12346:12;12308:52;12395:9;12382:23;12434:1;12427:5;12424:12;12414:40;;12450:1;12447;12440:12;12489:537;12584:6;12592;12600;12608;12661:3;12649:9;12640:7;12636:23;12632:33;12629:53;;;12678:1;12675;12668:12;12629:53;12701:29;12720:9;12701:29;:::i;:::-;12691:39;;12749:38;12783:2;12772:9;12768:18;12749:38;:::i;:::-;12739:48;;12834:2;12823:9;12819:18;12806:32;12796:42;;12889:2;12878:9;12874:18;12861:32;-1:-1:-1;;;;;12908:6:644;12905:30;12902:50;;;12948:1;12945;12938:12;12902:50;12971:49;13012:7;13003:6;12992:9;12988:22;12971:49;:::i;:::-;12961:59;;;12489:537;;;;;;;:::o;13031:786::-;13131:6;13139;13147;13155;13163;13216:2;13204:9;13195:7;13191:23;13187:32;13184:52;;;13232:1;13229;13222:12;13184:52;13268:9;13255:23;13245:33;;13329:2;13318:9;13314:18;13301:32;-1:-1:-1;;;;;13393:2:644;13385:6;13382:14;13379:34;;;13409:1;13406;13399:12;13379:34;13448:58;13498:7;13489:6;13478:9;13474:22;13448:58;:::i;:::-;13525:8;;-1:-1:-1;13422:84:644;-1:-1:-1;13613:2:644;13598:18;;13585:32;;-1:-1:-1;13629:16:644;;;13626:36;;;13658:1;13655;13648:12;13626:36;;13697:60;13749:7;13738:8;13727:9;13723:24;13697:60;:::i;:::-;13031:786;;;;-1:-1:-1;13031:786:644;;-1:-1:-1;13776:8:644;;13671:86;13031:786;-1:-1:-1;;;13031:786:644:o;13822:769::-;14130:4;14159:3;14189:6;14178:9;14171:25;14232:6;14227:2;14216:9;14212:18;14205:34;14275:6;14270:2;14259:9;14255:18;14248:34;14318:6;14313:2;14302:9;14298:18;14291:34;14362:6;14356:3;14345:9;14341:19;14334:35;14406:6;14400:3;14389:9;14385:19;14378:35;14479:1;14475;14470:3;14466:11;14462:19;14454:6;14450:32;14444:3;14433:9;14429:19;14422:61;14520:2;14514:3;14503:9;14499:19;14492:31;14540:45;14581:2;14570:9;14566:18;14558:6;14540:45;:::i;:::-;14532:53;13822:769;-1:-1:-1;;;;;;;;;;;13822:769:644:o;14596:718::-;14650:5;14703:3;14696:4;14688:6;14684:17;14680:27;14670:55;;14721:1;14718;14711:12;14670:55;14757:6;14744:20;14783:4;-1:-1:-1;;;;;14802:2:644;14799:26;14796:52;;;14828:18;;:::i;:::-;14874:2;14871:1;14867:10;14897:28;14921:2;14917;14913:11;14897:28;:::i;:::-;14959:15;;;15029;;;15025:24;;;14990:12;;;;15061:15;;;15058:35;;;15089:1;15086;15079:12;15058:35;15125:2;15117:6;15113:15;15102:26;;15137:148;15153:6;15148:3;15145:15;15137:148;;;15219:23;15238:3;15219:23;:::i;:::-;15207:36;;15170:12;;;;15263;;;;15137:148;;15319:173;15387:20;;-1:-1:-1;;;;;15436:31:644;;15426:42;;15416:70;;15482:1;15479;15472:12;15497:1417;15692:6;15700;15708;15716;15724;15732;15740;15748;15756;15764;15817:3;15805:9;15796:7;15792:23;15788:33;15785:53;;;15834:1;15831;15824:12;15785:53;15857:29;15876:9;15857:29;:::i;:::-;15847:39;;15937:2;15926:9;15922:18;15909:32;-1:-1:-1;;;;;16001:2:644;15993:6;15990:14;15987:34;;;16017:1;16014;16007:12;15987:34;16040:49;16081:7;16072:6;16061:9;16057:22;16040:49;:::i;:::-;16030:59;;16142:2;16131:9;16127:18;16114:32;16098:48;;16171:2;16161:8;16158:16;16155:36;;;16187:1;16184;16177:12;16155:36;16210:51;16253:7;16242:8;16231:9;16227:24;16210:51;:::i;:::-;16200:61;;16314:2;16303:9;16299:18;16286:32;16270:48;;16343:2;16333:8;16330:16;16327:36;;;16359:1;16356;16349:12;16327:36;16382:51;16425:7;16414:8;16403:9;16399:24;16382:51;:::i;:::-;16372:61;;16486:3;16475:9;16471:19;16458:33;16442:49;;16516:2;16506:8;16503:16;16500:36;;;16532:1;16529;16522:12;16500:36;;16555:63;16610:7;16599:8;16588:9;16584:24;16555:63;:::i;:::-;16545:73;;;16637:39;16671:3;16660:9;16656:19;16637:39;:::i;:::-;16627:49;;16695:39;16729:3;16718:9;16714:19;16695:39;:::i;:::-;16685:49;;16753:39;16787:3;16776:9;16772:19;16753:39;:::i;:::-;16743:49;;16811:39;16845:3;16834:9;16830:19;16811:39;:::i;:::-;16801:49;;16869:39;16903:3;16892:9;16888:19;16869:39;:::i;:::-;16859:49;;15497:1417;;;;;;;;;;;;;:::o;16919:628::-;17007:6;17015;17023;17076:2;17064:9;17055:7;17051:23;17047:32;17044:52;;;17092:1;17089;17082:12;17044:52;17132:9;17119:23;-1:-1:-1;;;;;17202:2:644;17194:6;17191:14;17188:34;;;17218:1;17215;17208:12;17188:34;17241:49;17282:7;17273:6;17262:9;17258:22;17241:49;:::i;:::-;17231:59;;17343:2;17332:9;17328:18;17315:32;17299:48;;17372:2;17362:8;17359:16;17356:36;;;17388:1;17385;17378:12;17552:260;17620:6;17628;17681:2;17669:9;17660:7;17656:23;17652:32;17649:52;;;17697:1;17694;17687:12;17649:52;17720:29;17739:9;17720:29;:::i;:::-;17710:39;;17768:38;17802:2;17791:9;17787:18;17768:38;:::i;17817:657::-;17947:6;17955;17963;17971;17979;18032:3;18020:9;18011:7;18007:23;18003:33;18000:53;;;18049:1;18046;18039:12;18000:53;18072:29;18091:9;18072:29;:::i;:::-;18062:39;;18148:2;18137:9;18133:18;18120:32;18110:42;;18171:38;18205:2;18194:9;18190:18;18171:38;:::i;:::-;18161:48;;18256:2;18245:9;18241:18;18228:32;18218:42;;18311:3;18300:9;18296:19;18283:33;-1:-1:-1;;;;;18331:6:644;18328:30;18325:50;;;18371:1;18368;18361:12;18325:50;18394:74;18460:7;18451:6;18440:9;18436:22;18394:74;:::i;:::-;18384:84;;;17817:657;;;;;;;;:::o;18479:127::-;18540:10;18535:3;18531:20;18528:1;18521:31;18571:4;18568:1;18561:15;18595:4;18592:1;18585:15;18611:349;18764:2;18749:18;;18797:1;18786:13;;18776:144;;18842:10;18837:3;18833:20;18830:1;18823:31;18877:4;18874:1;18867:15;18905:4;18902:1;18895:15;18776:144;18929:25;;;18611:349;:::o;18965:380::-;19044:1;19040:12;;;;19087;;;19108:61;;19162:4;19154:6;19150:17;19140:27;;19108:61;19215:2;19207:6;19204:14;19184:18;19181:38;19178:161;;;19261:10;19256:3;19252:20;19249:1;19242:31;19296:4;19293:1;19286:15;19324:4;19321:1;19314:15;19350:338;19552:2;19534:21;;;19591:2;19571:18;;;19564:30;-1:-1:-1;;;19625:2:644;19610:18;;19603:44;19679:2;19664:18;;19350:338::o;20035:127::-;20096:10;20091:3;20087:20;20084:1;20077:31;20127:4;20124:1;20117:15;20151:4;20148:1;20141:15;20167:127;20228:10;20223:3;20219:20;20216:1;20209:31;20259:4;20256:1;20249:15;20283:4;20280:1;20273:15;20299:168;20339:7;20405:1;20401;20397:6;20393:14;20390:1;20387:21;20382:1;20375:9;20368:17;20364:45;20361:71;;;20412:18;;:::i;:::-;-1:-1:-1;20452:9:644;;20299:168::o;20472:127::-;20533:10;20528:3;20524:20;20521:1;20514:31;20564:4;20561:1;20554:15;20588:4;20585:1;20578:15;20604:120;20644:1;20670;20660:35;;20675:18;;:::i;:::-;-1:-1:-1;20709:9:644;;20604:120::o;22080:522::-;22158:4;22164:6;22224:11;22211:25;22318:2;22314:7;22303:8;22287:14;22283:29;22279:43;22259:18;22255:68;22245:96;;22337:1;22334;22327:12;22245:96;22364:33;;22416:20;;;-1:-1:-1;;;;;;22448:30:644;;22445:50;;;22491:1;22488;22481:12;22445:50;22524:4;22512:17;;-1:-1:-1;22555:14:644;22551:27;;;22541:38;;22538:58;;;22592:1;22589;22582:12;22607:504;22666:5;22673:6;22733:3;22720:17;22819:2;22815:7;22804:8;22788:14;22784:29;22780:43;22760:18;22756:68;22746:96;;22838:1;22835;22828:12;22746:96;22866:33;;22970:4;22957:18;;;-1:-1:-1;22918:21:644;;-1:-1:-1;;;;;;22987:30:644;;22984:50;;;23030:1;23027;23020:12;22984:50;23080:6;23064:14;23060:27;23050:8;23046:42;23043:62;;;23101:1;23098;23091:12;23116:267;23205:6;23200:3;23193:19;23257:6;23250:5;23243:4;23238:3;23234:14;23221:43;-1:-1:-1;23309:1:644;23284:16;;;23302:4;23280:27;;;23273:38;;;;23365:2;23344:15;;;-1:-1:-1;;23340:29:644;23331:39;;;23327:50;;23116:267::o;23388:1078::-;23607:2;23596:9;23589:21;23659:6;23646:20;23641:2;23630:9;23626:18;23619:48;23728:4;23720:6;23716:17;23703:31;23698:2;23687:9;23683:18;23676:59;23797:2;23789:6;23785:15;23772:29;23766:3;23755:9;23751:19;23744:58;23864:2;23856:6;23852:15;23839:29;23833:3;23822:9;23818:19;23811:58;23931:3;23923:6;23919:16;23906:30;23900:3;23889:9;23885:19;23878:59;23999:3;23991:6;23987:16;23974:30;23968:3;23957:9;23953:19;23946:59;23570:4;24034:36;24065:3;24057:6;24053:16;24034:36;:::i;:::-;-1:-1:-1;;;;;24131:38:644;;24089:6;24111:18;;;24104:66;;;;24215:57;24267:3;24255:16;;24259:6;24215:57;:::i;:::-;24179:93;;24309:2;24303:3;24292:9;24288:19;24281:31;24329:77;24401:3;24390:9;24386:19;24372:12;24356:14;24329:77;:::i;:::-;24321:85;;;;;24415:45;24454:4;24443:9;24439:20;24431:6;470:13;463:21;451:34;;400:91;24471:128;24511:3;24542:1;24538:6;24535:1;24532:13;24529:39;;;24548:18;;:::i;:::-;-1:-1:-1;24584:9:644;;24471:128::o;24604:330::-;24806:2;24788:21;;;24845:1;24825:18;;;24818:29;-1:-1:-1;;;24878:2:644;24863:18;;24856:37;24925:2;24910:18;;24604:330::o;25048:1542::-;25239:2;25228:9;25221:21;25251:66;25313:2;25302:9;25298:18;25270:26;25289:6;25270:26;:::i;:::-;25251:66;:::i;:::-;25202:4;25346:35;25377:2;25369:6;25365:15;25346:35;:::i;:::-;25390:52;25438:2;25427:9;25423:18;25409:12;25390:52;:::i;:::-;;25503:2;25495:6;25491:15;25478:29;25473:2;25462:9;25458:18;25451:57;25539:35;25570:2;25562:6;25558:15;25539:35;:::i;:::-;25583:55;25633:3;25622:9;25618:19;25602:14;25583:55;:::i;:::-;;25683:57;25735:3;25727:6;25723:16;25715:6;25683:57;:::i;:::-;25759:6;25802:2;25796:3;25785:9;25781:19;25774:31;25828:77;25900:3;25889:9;25885:19;25871:12;25855:14;25828:77;:::i;:::-;25814:91;;25967:3;25959:6;25955:16;25942:30;25936:3;25925:9;25921:19;25914:59;26035:3;26027:6;26023:16;26010:30;26004:3;25993:9;25989:19;25982:59;26072:36;26103:3;26095:6;26091:16;26072:36;:::i;:::-;26050:58;;26127:3;26139:54;26189:2;26178:9;26174:18;26158:14;26139:54;:::i;:::-;26224:35;26255:2;26247:6;26243:15;26224:35;:::i;:::-;26202:57;;;26278:3;26290:54;26340:2;26329:9;26325:18;26309:14;-1:-1:-1;;;;;25005:31:644;24993:44;;24939:104;26290:54;26375:35;26406:2;26398:6;26394:15;26375:35;:::i;:::-;26353:57;;;26429:3;26441:54;26491:2;26480:9;26476:18;26460:14;-1:-1:-1;;;;;25005:31:644;24993:44;;24939:104;26441:54;26544:15;;;;26531:29;26511:18;;;;26504:57;;;;-1:-1:-1;26578:6:644;25048:1542;-1:-1:-1;25048:1542:644:o;26941:703::-;27029:6;27037;27090:2;27078:9;27069:7;27065:23;27061:32;27058:52;;;27106:1;27103;27096:12;27058:52;27139:9;27133:16;-1:-1:-1;;;;;27164:6:644;27161:30;27158:50;;;27204:1;27201;27194:12;27158:50;27227:22;;27280:4;27272:13;;27268:27;-1:-1:-1;27258:55:644;;27309:1;27306;27299:12;27258:55;27338:2;27332:9;27363:48;27379:31;27407:2;27379:31;:::i;27363:48::-;27434:2;27427:5;27420:17;27476:7;27469:4;27464:2;27460;27456:11;27452:22;27449:35;27446:55;;;27497:1;27494;27487:12;27446:55;27510:58;27565:2;27558:4;27551:5;27547:16;27540:4;27536:2;27532:13;27510:58;:::i;:::-;27632:4;27617:20;;;;27611:27;27587:5;;27611:27;;-1:-1:-1;;;;;26941:703:644:o;27649:525::-;27864:3;27902:6;27896:13;27918:53;27964:6;27959:3;27952:4;27944:6;27940:17;27918:53;:::i;:::-;27993:16;;28046:6;28038;27993:16;28018:35;28072:18;;;28121;;;-1:-1:-1;28163:4:644;28155:13;;27649:525;-1:-1:-1;;;27649:525:644:o;29047:135::-;29086:3;-1:-1:-1;;29107:17:644;;29104:43;;;29127:18;;:::i;:::-;-1:-1:-1;29174:1:644;29163:13;;29047:135::o;29187:439::-;29419:3;29457:6;29451:13;29473:53;29519:6;29514:3;29507:4;29499:6;29495:17;29473:53;:::i;:::-;-1:-1:-1;;;29548:16:644;;29573:18;;;-1:-1:-1;29618:1:644;29607:13;;29187:439;-1:-1:-1;29187:439:644:o;29631:470::-;29810:3;29848:6;29842:13;29864:53;29910:6;29905:3;29898:4;29890:6;29886:17;29864:53;:::i;:::-;29980:13;;29939:16;;;;30002:57;29980:13;29939:16;30036:4;30024:17;;30002:57;:::i;:::-;30075:20;;29631:470;-1:-1:-1;;;;29631:470:644:o;30106:388::-;30183:6;30191;30244:2;30232:9;30223:7;30219:23;30215:32;30212:52;;;30260:1;30257;30250:12;30212:52;30300:9;30287:23;-1:-1:-1;;;;;30325:6:644;30322:30;30319:50;;;30365:1;30362;30355:12;30319:50;30388:49;30429:7;30420:6;30409:9;30405:22;30388:49;:::i;:::-;30378:59;30484:2;30469:18;;;;30456:32;;-1:-1:-1;;;;30106:388:644:o;31113:335::-;31324:6;31316;31311:3;31298:33;31350:16;;;31397:18;;;31439:2;31431:11;;31113:335;-1:-1:-1;31113:335:644:o;31453:545::-;31546:4;31552:6;31612:11;31599:25;31706:2;31702:7;31691:8;31675:14;31671:29;31667:43;31647:18;31643:68;31633:96;;31725:1;31722;31715:12;31633:96;31752:33;;31804:20;;;-1:-1:-1;;;;;;31836:30:644;;31833:50;;;31879:1;31876;31869:12;31833:50;31912:4;31900:17;;-1:-1:-1;31963:1:644;31959:14;;;31943;31939:35;31929:46;;31926:66;;;31988:1;31985;31978:12;33823:339;34025:2;34007:21;;;34064:2;34044:18;;;34037:30;-1:-1:-1;;;34098:2:644;34083:18;;34076:45;34153:2;34138:18;;33823:339::o;34167:784::-;-1:-1:-1;;;34573:3:644;34566:36;34548:3;34631:6;34625:13;34647:62;34702:6;34697:2;34692:3;34688:12;34681:4;34673:6;34669:17;34647:62;:::i;:::-;-1:-1:-1;;;34768:2:644;34728:16;;;34760:11;;;34753:40;34818:13;;34840:63;34818:13;34889:2;34881:11;;34874:4;34862:17;;34840:63;:::i;:::-;34923:17;34942:2;34919:26;;34167:784;-1:-1:-1;;;;34167:784:644:o;35296:186::-;35355:6;35408:2;35396:9;35387:7;35383:23;35379:32;35376:52;;;35424:1;35421;35414:12;35376:52;35447:29;35466:9;35447:29;:::i;36508:329::-;36710:2;36692:21;;;36749:1;36729:18;;;36722:29;-1:-1:-1;;;36782:2:644;36767:18;;36760:36;36828:2;36813:18;;36508:329::o;37176:125::-;37216:4;37244:1;37241;37238:8;37235:34;;;37249:18;;:::i;:::-;-1:-1:-1;37286:9:644;;37176:125::o;37306:383::-;37503:2;37492:9;37485:21;37466:4;37529:45;37570:2;37559:9;37555:18;37547:6;37529:45;:::i;:::-;37622:9;37614:6;37610:22;37605:2;37594:9;37590:18;37583:50;37650:33;37676:6;37668;37650:33;:::i;38101:274::-;38230:3;38268:6;38262:13;38284:53;38330:6;38325:3;38318:4;38310:6;38306:17;38284:53;:::i;:::-;38353:16;;;;;38101:274;-1:-1:-1;;38101:274:644:o;38380:489::-;-1:-1:-1;;;;;38649:15:644;;;38631:34;;38701:15;;38696:2;38681:18;;38674:43;38748:2;38733:18;;38726:34;;;38796:3;38791:2;38776:18;;38769:31;;;38574:4;;38817:46;;38843:19;;38835:6;38817:46;:::i;38874:249::-;38943:6;38996:2;38984:9;38975:7;38971:23;38967:32;38964:52;;;39012:1;39009;39002:12;38964:52;39044:9;39038:16;39063:30;39087:5;39063:30;:::i;39472:112::-;39504:1;39530;39520:35;;39535:18;;:::i;:::-;-1:-1:-1;39569:9:644;;39472:112::o;40516:506::-;40759:6;40748:9;40741:25;40802:2;40797;40786:9;40782:18;40775:30;40722:4;40828:62;40886:2;40875:9;40871:18;40863:6;40855;40828:62;:::i;:::-;40938:9;40930:6;40926:22;40921:2;40910:9;40906:18;40899:50;40966;41009:6;41001;40993;40966:50;:::i;:::-;40958:58;40516:506;-1:-1:-1;;;;;;;;40516:506:644:o;41027:407::-;41229:2;41211:21;;;41268:2;41248:18;;;41241:30;41307:34;41302:2;41287:18;;41280:62;-1:-1:-1;;;41373:2:644;41358:18;;41351:41;41424:3;41409:19;;41027:407::o;42034:271::-;42217:6;42209;42204:3;42191:33;42173:3;42243:16;;42268:13;;;42243:16;42034:271;-1:-1:-1;42034:271:644:o;43416:136::-;43455:3;43483:5;43473:39;;43492:18;;:::i;:::-;-1:-1:-1;;;43528:18:644;;43416:136::o;48022:245::-;48089:6;48142:2;48130:9;48121:7;48117:23;48113:32;48110:52;;;48158:1;48155;48148:12;48110:52;48190:9;48184:16;48209:28;48231:5;48209:28;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "DEFAULT_ADMIN_ROLE()": "a217fddf",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "batchFrozen(uint256)": "83040532",
    "burn(uint256)": "42966c68",
    "claim(address,uint256,address,uint256,(bytes32[],uint256,uint256,address),bytes)": "84bb1e42",
    "claimCondition()": "d637ed59",
    "contractType()": "cb2ef6f7",
    "contractURI()": "e8a3d485",
    "contractVersion()": "a0a8e460",
    "encryptDecrypt(bytes,bytes)": "e7150322",
    "encryptedData(uint256)": "a05112fc",
    "getApproved(uint256)": "081812fc",
    "getBaseURICount()": "63b45e2d",
    "getBatchIdAtIndex(uint256)": "2419f51b",
    "getDefaultRoyaltyInfo()": "b24f2d39",
    "getFlatPlatformFeeInfo()": "e57553da",
    "getPlatformFeeInfo()": "d45573f6",
    "getPlatformFeeType()": "f28083c3",
    "getRevealURI(uint256,bytes)": "9fc4d68f",
    "getRoleAdmin(bytes32)": "248a9ca3",
    "getRoleMember(bytes32,uint256)": "9010d07c",
    "getRoleMemberCount(bytes32)": "ca15c873",
    "getRoyaltyInfoForToken(uint256)": "4cc157df",
    "getSupplyClaimedByWallet(address)": "35b65e1f",
    "grantRole(bytes32,address)": "2f2ff15d",
    "hasRole(bytes32,address)": "91d14854",
    "hasRoleWithSwitch(bytes32,address)": "a32fa5b3",
    "initialize(address,string,string,string,address[],address,address,uint128,uint128,address)": "e1591634",
    "isApprovedForAll(address,address)": "e985e9c5",
    "isEncryptedBatch(uint256)": "492e224b",
    "isTrustedForwarder(address)": "572b6c05",
    "lazyMint(uint256,string,bytes)": "d37c353b",
    "mintWithSignature((address,address,uint256,address,string,uint256,uint256,address,uint128,uint128,bytes32),bytes)": "439c7be5",
    "multicall(bytes[])": "ac9650d8",
    "name()": "06fdde03",
    "nextTokenIdToMint()": "3b1475a7",
    "owner()": "8da5cb5b",
    "ownerOf(uint256)": "6352211e",
    "primarySaleRecipient()": "079fe40e",
    "renounceRole(bytes32,address)": "36568abe",
    "reveal(uint256,bytes)": "ce805642",
    "revokeRole(bytes32,address)": "d547741f",
    "royaltyInfo(uint256,uint256)": "2a55205a",
    "safeTransferFrom(address,address,uint256)": "42842e0e",
    "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
    "setApprovalForAll(address,bool)": "a22cb465",
    "setClaimConditions((uint256,uint256,uint256,uint256,bytes32,uint256,address,string),bool)": "426cfaf3",
    "setContractURI(string)": "938e3d7b",
    "setDefaultRoyaltyInfo(address,uint256)": "600dd5ea",
    "setFlatPlatformFeeInfo(address,uint256)": "7e54523c",
    "setOwner(address)": "13af4035",
    "setPlatformFeeInfo(address,uint256)": "1e7ac488",
    "setPlatformFeeType(uint8)": "b6f10c79",
    "setPrimarySaleRecipient(address)": "6f4f2837",
    "setRoyaltyInfoForToken(uint256,address,uint256)": "9bcf7a15",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "tokenURI(uint256)": "c87b56dd",
    "totalMinted()": "a2309ff8",
    "totalSupply()": "18160ddd",
    "transferFrom(address,address,uint256)": "23b872dd",
    "verify((address,address,uint256,address,string,uint256,uint256,address,uint128,uint128,bytes32),bytes)": "252e82e8",
    "verifyClaim(address,uint256,address,uint256,(bytes32[],uint256,uint256,address))": "eec8897c"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalToCurrentOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApproveToCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxClaimableSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"}],\"indexed\":false,\"internalType\":\"struct IClaimCondition.ClaimCondition\",\"name\":\"condition\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"resetEligibility\",\"type\":\"bool\"}],\"name\":\"ClaimConditionUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"prevURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newURI\",\"type\":\"string\"}],\"name\":\"ContractURIUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newRoyaltyRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newRoyaltyBps\",\"type\":\"uint256\"}],\"name\":\"DefaultRoyalty\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"platformFeeRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"flatFee\",\"type\":\"uint256\"}],\"name\":\"FlatPlatformFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"MetadataFrozen\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"prevOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"platformFeeRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"platformFeeBps\",\"type\":\"uint256\"}],\"name\":\"PlatformFeeInfoUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"enum IPlatformFee.PlatformFeeType\",\"name\":\"feeType\",\"type\":\"uint8\"}],\"name\":\"PlatformFeeTypeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"PrimarySaleRecipientUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"royaltyRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"royaltyBps\",\"type\":\"uint256\"}],\"name\":\"RoyaltyForToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"revealedURI\",\"type\":\"string\"}],\"name\":\"TokenURIRevealed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"startTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantityClaimed\",\"type\":\"uint256\"}],\"name\":\"TokensClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"startTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"encryptedBaseURI\",\"type\":\"bytes\"}],\"name\":\"TokensLazyMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"mintedTo\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenIdMinted\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"royaltyRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyBps\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"primarySaleRecipient\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"validityStartTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"validityEndTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"indexed\":false,\"internalType\":\"struct ISignatureMintERC721.MintRequest\",\"name\":\"mintRequest\",\"type\":\"tuple\"}],\"name\":\"TokensMintedWithSignature\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"batchFrozen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_pricePerToken\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"internalType\":\"struct IDropSinglePhase.AllowlistProof\",\"name\":\"_allowlistProof\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimCondition\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxClaimableSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractType\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractVersion\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"key\",\"type\":\"bytes\"}],\"name\":\"encryptDecrypt\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"result\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"encryptedData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaseURICount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getBatchIdAtIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDefaultRoyaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFlatPlatformFeeInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPlatformFeeInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPlatformFeeType\",\"outputs\":[{\"internalType\":\"enum IPlatformFee.PlatformFeeType\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_batchId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_key\",\"type\":\"bytes\"}],\"name\":\"getRevealURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"revealedURI\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getRoyaltyInfoForToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_claimer\",\"type\":\"address\"}],\"name\":\"getSupplyClaimedByWallet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRoleWithSwitch\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_defaultAdmin\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_contractURI\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"_trustedForwarders\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"_saleRecipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_royaltyRecipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"_royaltyBps\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"_platformFeeBps\",\"type\":\"uint128\"},{\"internalType\":\"address\",\"name\":\"_platformFeeRecipient\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_batchId\",\"type\":\"uint256\"}],\"name\":\"isEncryptedBatch\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_baseURIForTokens\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"lazyMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"batchId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"royaltyRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyBps\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"primarySaleRecipient\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"validityStartTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"validityEndTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"internalType\":\"struct ISignatureMintERC721.MintRequest\",\"name\":\"_req\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"mintWithSignature\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextTokenIdToMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"primarySaleRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_key\",\"type\":\"bytes\"}],\"name\":\"reveal\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"revealedURI\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxClaimableSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"}],\"internalType\":\"struct IClaimCondition.ClaimCondition\",\"name\":\"_condition\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"_resetClaimEligibility\",\"type\":\"bool\"}],\"name\":\"setClaimConditions\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"setContractURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_royaltyRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_royaltyBps\",\"type\":\"uint256\"}],\"name\":\"setDefaultRoyaltyInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_platformFeeRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_flatFee\",\"type\":\"uint256\"}],\"name\":\"setFlatPlatformFeeInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_platformFeeRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_platformFeeBps\",\"type\":\"uint256\"}],\"name\":\"setPlatformFeeInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IPlatformFee.PlatformFeeType\",\"name\":\"_feeType\",\"type\":\"uint8\"}],\"name\":\"setPlatformFeeType\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_saleRecipient\",\"type\":\"address\"}],\"name\":\"setPrimarySaleRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_bps\",\"type\":\"uint256\"}],\"name\":\"setRoyaltyInfoForToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"royaltyRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyBps\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"primarySaleRecipient\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"validityStartTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"validityEndTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"internalType\":\"struct ISignatureMintERC721.MintRequest\",\"name\":\"_req\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"verify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_claimer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_pricePerToken\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"internalType\":\"struct IDropSinglePhase.AllowlistProof\",\"name\":\"_allowlistProof\",\"type\":\"tuple\"}],\"name\":\"verifyClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isOverride\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Burns `tokenId`. See {ERC721-_burn}.\"},\"claim(address,uint256,address,uint256,(bytes32[],uint256,uint256,address),bytes)\":{\"details\":\"Lets an account claim tokens.\"},\"encryptDecrypt(bytes,bytes)\":{\"details\":\"Encrypt/decrypt given `data` with `key`. Uses inline assembly.                  See: https://ethereum.stackexchange.com/questions/69825/decrypt-message-on-chain\",\"params\":{\"data\":\"Bytes of data to encrypt/decrypt.\",\"key\":\"Secure key used by caller for encryption/decryption.\"},\"returns\":{\"result\":\" Output after encryption/decryption of given data.\"}},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"getBaseURICount()\":{\"details\":\"Each batch of tokens has an in ID and an associated `baseURI`.                  See {batchIds}.\"},\"getBatchIdAtIndex(uint256)\":{\"details\":\"See {getBaseURICount}.\",\"params\":{\"_index\":\"Index of the desired batch in batchIds array.\"}},\"getFlatPlatformFeeInfo()\":{\"details\":\"Returns the platform fee bps and recipient.\"},\"getPlatformFeeInfo()\":{\"details\":\"Returns the platform fee recipient and bps.\"},\"getPlatformFeeType()\":{\"details\":\"Returns the platform fee bps and recipient.\"},\"getRevealURI(uint256,bytes)\":{\"details\":\"Reveal encrypted base URI for `_batchId` with caller/admin's `_key` used for encryption.                      Reverts if there's no encrypted URI for `_batchId`.                      See {encryptDecrypt}.\",\"params\":{\"_batchId\":\"ID of the batch for which URI is being revealed.\",\"_key\":\"Secure key used by caller/admin for encryption of baseURI.\"},\"returns\":{\"revealedURI\":\"Decrypted base URI.\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"See {grantRole} and {revokeRole}.                  To change a role's admin, use {_setRoleAdmin}.\",\"params\":{\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns `member` who has `role`, at `index` of role-members list.                  See struct {RoleMembers}, and mapping {roleMembers}\",\"params\":{\"index\":\"Index in list of current members for the role.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"},\"returns\":{\"member\":\" Address of account that has `role`\"}},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns `count` of accounts that have `role`.                  See struct {RoleMembers}, and mapping {roleMembers}\",\"params\":{\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"},\"returns\":{\"count\":\"  Total number of accounts that have `role`\"}},\"getRoyaltyInfoForToken(uint256)\":{\"details\":\"Returns royalty recipient and bps for `_tokenId`.\",\"params\":{\"_tokenId\":\"The tokenID of the NFT for which to query royalty info.\"}},\"getSupplyClaimedByWallet(address)\":{\"details\":\"Returns the supply claimed by claimer for active conditionId.\"},\"grantRole(bytes32,address)\":{\"details\":\"Caller must have admin role for the `role`.                  Emits {RoleGranted Event}.\",\"params\":{\"account\":\"Address of the account to which the role is being granted.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\",\"params\":{\"account\":\"Address of the account for which the role is being checked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"hasRoleWithSwitch(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.                  Role restrictions can be swtiched on and off:                      - If address(0) has ROLE, then the ROLE restrictions                        don't apply.                      - If address(0) does not have ROLE, then the ROLE                        restrictions will apply.\",\"params\":{\"account\":\"Address of the account for which the role is being checked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"initialize(address,string,string,string,address[],address,address,uint128,uint128,address)\":{\"details\":\"Initializes the contract, like a constructor.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"isEncryptedBatch(uint256)\":{\"details\":\"Returns `true` if `_batchId`'s base URI is encrypted.\",\"params\":{\"_batchId\":\"ID of a batch of NFTs.\"}},\"lazyMint(uint256,string,bytes)\":{\"details\":\"Lets an account with `MINTER_ROLE` lazy mint 'n' NFTs.       The URIs for each token is the provided `_baseURIForTokens` + `{tokenId}`.\"},\"mintWithSignature((address,address,uint256,address,string,uint256,uint256,address,uint128,uint128,bytes32),bytes)\":{\"details\":\"Claim lazy minted tokens via signature.\"},\"multicall(bytes[])\":{\"details\":\"Receives and executes a batch of function calls on this contract.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"nextTokenIdToMint()\":{\"details\":\"The tokenId of the next NFT that will be minted / lazy minted.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"primarySaleRecipient()\":{\"details\":\"Returns primary sale recipient address.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Caller must have the `role`, with caller being the same as `account`.                  Emits {RoleRevoked Event}.\",\"params\":{\"account\":\"Address of the account from which the role is being revoked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"reveal(uint256,bytes)\":{\"details\":\"Lets an account with `MINTER_ROLE` reveal the URI for a batch of 'delayed-reveal' NFTs.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Caller must have admin role for the `role`.                  Emits {RoleRevoked Event}.\",\"params\":{\"account\":\"Address of the account from which the role is being revoked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"royaltyInfo(uint256,uint256)\":{\"details\":\"Returns royalty amount and recipient for `tokenId` and `salePrice`.\",\"params\":{\"salePrice\":\"Sale price of the token.\",\"tokenId\":\"The tokenID of the NFT for which to query royalty info.\"},\"returns\":{\"receiver\":\"       Address of royalty recipient account.\",\"royaltyAmount\":\"  Royalty amount calculated at current royaltyBps value.\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"setClaimConditions((uint256,uint256,uint256,uint256,bytes32,uint256,address,string),bool)\":{\"details\":\"Lets a contract admin set claim conditions.\"},\"setContractURI(string)\":{\"details\":\"Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.\",\"params\":{\"_uri\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"setDefaultRoyaltyInfo(address,uint256)\":{\"details\":\"Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {DefaultRoyalty Event}; See {_setupDefaultRoyaltyInfo}.\",\"params\":{\"_royaltyBps\":\"Updated royalty bps.\",\"_royaltyRecipient\":\"Address to be set as default royalty recipient.\"}},\"setOwner(address)\":{\"params\":{\"_newOwner\":\"The address to set as the new owner of the contract.\"}},\"setPlatformFeeInfo(address,uint256)\":{\"details\":\"Caller should be authorized to set platform fee info.                  See {_canSetPlatformFeeInfo}.                  Emits {PlatformFeeInfoUpdated Event}; See {_setupPlatformFeeInfo}.\",\"params\":{\"_platformFeeBps\":\"Updated platformFeeBps.\",\"_platformFeeRecipient\":\"Address to be set as new platformFeeRecipient.\"}},\"setPrimarySaleRecipient(address)\":{\"details\":\"Caller should be authorized to set primary sales info.                  See {_canSetPrimarySaleRecipient}.                  Emits {PrimarySaleRecipientUpdated Event}; See {_setupPrimarySaleRecipient}.\",\"params\":{\"_saleRecipient\":\"Address to be set as new recipient of primary sales.\"}},\"setRoyaltyInfoForToken(uint256,address,uint256)\":{\"details\":\"Sets royalty info for `_tokenId`. Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {RoyaltyForToken Event}; See {_setupRoyaltyInfoForToken}.\",\"params\":{\"_bps\":\"Updated royalty bps for the token Id.\",\"_recipient\":\"Address to be set as royalty recipient for given token Id.\"}},\"supportsInterface(bytes4)\":{\"details\":\"See ERC 165\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the URI for a given tokenId.\"},\"totalSupply()\":{\"details\":\"Burned tokens are calculated here, use _totalMinted() if you want to count just minted tokens.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"verify((address,address,uint256,address,string,uint256,uint256,address,uint128,uint128,bytes32),bytes)\":{\"details\":\"Verifies that a mint request is signed by an account holding MINTER_ROLE (at the time of the function call).\"},\"verifyClaim(address,uint256,address,uint256,(bytes32[],uint256,uint256,address))\":{\"details\":\"Checks a request to claim NFTs against the active claim condition's criteria.\"}},\"stateVariables\":{\"MAX_BPS\":{\"details\":\"Max bps in the thirdweb system.\"},\"minterRole\":{\"details\":\"Only MINTER_ROLE holders can sign off on `MintRequest`s and lazy mint tokens.\"},\"transferRole\":{\"details\":\"Only transfers to or from TRANSFER_ROLE holders are valid, when transfers are restricted.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"ApprovalToCurrentOwner()\":[{\"notice\":\"The caller cannot approve to the current owner.\"}],\"ApproveToCaller()\":[{\"notice\":\"The caller cannot approve to their own address.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"events\":{\"BatchMetadataUpdate(uint256,uint256)\":{\"notice\":\"So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"ClaimConditionUpdated((uint256,uint256,uint256,uint256,bytes32,uint256,address,string),bool)\":{\"notice\":\"Emitted when the contract's claim conditions are updated.\"},\"TokensClaimed(address,address,uint256,uint256)\":{\"notice\":\"Emitted when tokens are claimed via `claim`.\"}},\"kind\":\"user\",\"methods\":{\"contractURI()\":{\"notice\":\"Returns the contract metadata URI.\"},\"encryptDecrypt(bytes,bytes)\":{\"notice\":\"Encrypt/decrypt data on chain.\"},\"getBaseURICount()\":{\"notice\":\"Returns the count of batches of NFTs.\"},\"getBatchIdAtIndex(uint256)\":{\"notice\":\"Returns the ID for the batch of tokens at the given index.\"},\"getDefaultRoyaltyInfo()\":{\"notice\":\"Returns the defualt royalty recipient and BPS for this contract's NFTs.\"},\"getRevealURI(uint256,bytes)\":{\"notice\":\"Returns revealed URI for a batch of NFTs.\"},\"getRoleAdmin(bytes32)\":{\"notice\":\"Returns the admin role that controls the specified role.\"},\"getRoleMember(bytes32,uint256)\":{\"notice\":\"Returns the role-member from a list of members for a role,                  at a given index.\"},\"getRoleMemberCount(bytes32)\":{\"notice\":\"Returns total number of accounts that have a role.\"},\"getRoyaltyInfoForToken(uint256)\":{\"notice\":\"View royalty info for a given token.\"},\"grantRole(bytes32,address)\":{\"notice\":\"Grants a role to an account, if not previously granted.\"},\"hasRole(bytes32,address)\":{\"notice\":\"Checks whether an account has a particular role.\"},\"hasRoleWithSwitch(bytes32,address)\":{\"notice\":\"Checks whether an account has a particular role;                  role restrictions can be swtiched on and off.\"},\"isEncryptedBatch(uint256)\":{\"notice\":\"Returns whether the relvant batch of NFTs is subject to a delayed reveal.\"},\"owner()\":{\"notice\":\"Returns the owner of the contract.\"},\"renounceRole(bytes32,address)\":{\"notice\":\"Revokes role from the account.\"},\"revokeRole(bytes32,address)\":{\"notice\":\"Revokes role from an account.\"},\"royaltyInfo(uint256,uint256)\":{\"notice\":\"View royalty info for a given token and sale price.\"},\"setContractURI(string)\":{\"notice\":\"Lets a contract admin set the URI for contract-level metadata.\"},\"setDefaultRoyaltyInfo(address,uint256)\":{\"notice\":\"Updates default royalty recipient and bps.\"},\"setFlatPlatformFeeInfo(address,uint256)\":{\"notice\":\"Lets a module admin set a flat fee on primary sales.\"},\"setOwner(address)\":{\"notice\":\"Lets an authorized wallet set a new owner for the contract.\"},\"setPlatformFeeInfo(address,uint256)\":{\"notice\":\"Updates the platform fee recipient and bps.\"},\"setPlatformFeeType(uint8)\":{\"notice\":\"Lets a module admin set platform fee type.\"},\"setPrimarySaleRecipient(address)\":{\"notice\":\"Updates primary sale recipient.\"},\"setRoyaltyInfoForToken(uint256,address,uint256)\":{\"notice\":\"Updates default royalty recipient and bps for a particular token.\"},\"totalMinted()\":{\"notice\":\"Returns the total amount of tokens minted in the contract.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/prebuilts/signature-drop/SignatureDrop.sol\":\"SignatureDrop\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@std/=lib/forge-std/src/\",\":@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/\",\":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/\",\":contracts/=contracts/\",\":ds-test/=lib/ds-test/src/\",\":dynamic-contracts/=lib/dynamic-contracts/src/\",\":erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/ERC721A-Upgradeable/\",\":erc721a/=lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/\"]},\"sources\":{\"contracts/eip/interface/IERC165.sol\":{\"keccak256\":\"0x35d0a916f70344a5fcc6c67cb531b6150d2fce43e72a6282385eab02020f2f49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75ccd8b9a8b52a93b8097fcb8181b7afb6d72bbe6eaabf434f0481a7a207cc8a\",\"dweb:/ipfs/QmPUZAEE4nwkijcE2amAXAWEVGVG5XaKWGhpgnRwpAf93R\"]},\"contracts/eip/interface/IERC20.sol\":{\"keccak256\":\"0x5bdd9dd97ba7d9d7c9a2953db287e4d9d7fa93a27a96bc2e72a8da4919b6f7ff\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://45527c265ee5de6bbb3ecfc052e7b1175531a82c2ac16172020aee855f7dd592\",\"dweb:/ipfs/QmVZthqbG916qUQSwv1LE8bB58ZGQ1VfQbLbbRV5urfEYA\"]},\"contracts/eip/interface/IERC2981.sol\":{\"keccak256\":\"0x7886c17b1bc3df885201378fd070d2f00d05fa54f20f7daf10382ec6ff4bd0c9\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://a0802623ba9555f6d186bab5fd139203b643e88ea31d78f4f05cddd4008ac6cf\",\"dweb:/ipfs/QmYbqzSKkKmF2xYeH1zGNewBDNAhukuaZEUVAvYgnKt1He\"]},\"contracts/extension/BatchMintMetadata.sol\":{\"keccak256\":\"0x1d1ee64f8456dc8b4cdd096e27ac4687babd485f49a728146126744d67f25f2f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9e01b0d51bdccbcce9095f606c8624926b518c1385c1349c41896236a0345ee0\",\"dweb:/ipfs/QmWHTbztwRf9Fyq4617MrVSqF8o7UXMT5nFe6epQ92N6L9\"]},\"contracts/extension/ContractMetadata.sol\":{\"keccak256\":\"0xf53ab08ec3057056872c15e35a5610f7a43426bd2829786aed006d527177adfe\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ee132ae5efdd372152febfcd8fd3a7cb82c7019367d92c886f5096003a79f392\",\"dweb:/ipfs/QmRW1cGWmZAu57huZpTUwsWB8AxUFrBp6g4NqozXpbWsR6\"]},\"contracts/extension/DelayedReveal.sol\":{\"keccak256\":\"0x2a860e4b857617a1c87c5fb79df2dd4a70e0e63ec6796f58ce9d0b3b93f1e242\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://cc4039ae41d23b921c13b500018e333d63dd9b3be65e700e0d05465d3ac680a3\",\"dweb:/ipfs/QmSLCVWqjVzDt9ygXmBffERFCYCo7RiGry2BhQjXcnZjQ6\"]},\"contracts/extension/DropSinglePhase.sol\":{\"keccak256\":\"0x836429b5346bd4f6a2078e5b2db2702a692afddc74f316a92fd6c1335f03ff3a\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://bc0858bb7a2c05013eb6352cc47087d6334824a32cc8545e549dddcf69a0dc31\",\"dweb:/ipfs/QmPMDq6F9G9u4nGEQTUPpUv7pm3cm3vY5hcb6ue9paEmGS\"]},\"contracts/extension/LazyMint.sol\":{\"keccak256\":\"0xe88710d7f2ac2834be6ed3c2bff1314f0d9c8c65aec7d05df9a6381d48a6f170\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c4734764afb84ecb1c5a99a441296a38f524c602227d0eae9bca3b325c895827\",\"dweb:/ipfs/QmWbwqzY6SqgitawoYeZmHiFvW6dp2fHoQfnb9WuVNr6E9\"]},\"contracts/extension/Ownable.sol\":{\"keccak256\":\"0x45447691686861237d5e1acb9d723d861a3fb3d561335e4f385d1547f25e27a5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5142293e36c736f744c73aaecab5f7be8e2d5ac70acc67851e0cea5171fd6782\",\"dweb:/ipfs/QmVJT5B84o5vFc5E2VteZdBhrT1HMutc7Ax72UKD1aZatJ\"]},\"contracts/extension/Permissions.sol\":{\"keccak256\":\"0xe7e18181f2d2c8bae4afc7ee69ce1d547e7aa583182e8e0853ca33c49a28c04d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://75d5f5a9356c290e398a5dd05914b59c3d09e6fedde2da80b6f1012aedf323f8\",\"dweb:/ipfs/QmNrrf8Uyq33XBsE2NqVTW6HVX3XixFTjCG8KGbGxdEE84\"]},\"contracts/extension/PermissionsEnumerable.sol\":{\"keccak256\":\"0x434a6ffc16ddc437ffb37b8fbe4c9696385252f15a617c4606b8c5e10561caf3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1a9d4dac4bf2ae3c3c086af1956dc25e8b149b0914125e660cc0648791c247cb\",\"dweb:/ipfs/QmTMEggPdBea1JCamsShwRf3en2FgVTXNTPJ2isFtBk4Kk\"]},\"contracts/extension/PlatformFee.sol\":{\"keccak256\":\"0x8db4537648987b88dce356120fc96c48cffe53eaa5988b9a7e8aa023f4258163\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9e30009e63be23e60e92bf25582143596e3f01b2a1f7e121664559119a9f5890\",\"dweb:/ipfs/Qma3bi4NfCNZaukacNQMQ3j5kXn6Ym4mDa57Tqc26ssahE\"]},\"contracts/extension/PrimarySale.sol\":{\"keccak256\":\"0x9ef1ad82fadf988a07f4034b92ccdb3281682693e41759a79042814d36095f42\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0d962b48453e1f50b808193135c2f14265324fa8b75fe3b405ef7836e38921f7\",\"dweb:/ipfs/QmZDLNsZQj9kNcb15nBuWRpPwDdDvJS2gtFwqEs2Lwxb1N\"]},\"contracts/extension/Royalty.sol\":{\"keccak256\":\"0xcc3110048db91d4ecd05afcc6721fce6ade5eee8c2da0af8955e86ece8754350\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a1e830502fda46ab7618b65e155341d42bf007717edb27711b09bf6250ce1485\",\"dweb:/ipfs/QmY5fKpg7aCubR7fENu9htRFspU8hpSo7CVUNJxQdh8kv1\"]},\"contracts/extension/SignatureMintERC721Upgradeable.sol\":{\"keccak256\":\"0x1f9f0cdf37800f14e331b01721130d503d55e60ff86cd3faae15d75e9cb4c8f3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7a1dce41c6e7522b39c8648742e70867f6ef9ebbadf01249f4d47f850af653a3\",\"dweb:/ipfs/QmX3znQxZSiA9GFvGkCeEHPrA1dy1pAo6tFyAoa2GtKAKM\"]},\"contracts/extension/interface/IClaimCondition.sol\":{\"keccak256\":\"0x391e69970031edb30dfa59f8db33c7446b349cd5ec505fd99f0f0b672b19e6d6\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fd9eafca6098421f3aa25bf0a0b24386facc764b7ecb8e6ce4a890afa3c6d459\",\"dweb:/ipfs/QmPXTSX2ie5wsZ6FyXWS4YMa7aPpYNyza9Rym1n799B5LU\"]},\"contracts/extension/interface/IContractMetadata.sol\":{\"keccak256\":\"0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a\",\"dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr\"]},\"contracts/extension/interface/IDelayedReveal.sol\":{\"keccak256\":\"0xbbe98263ebce49f81cb42f8bf1e7e631afd81cda73be79b907e81a2f54fd2123\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://76913c2086e309c97ac0d5be72bbe23e66fe35e231c75318993c14e6aa4c0138\",\"dweb:/ipfs/QmXwr49U275Cam8x9mYcNdcCmZHUYuBge3CtFPkBkEMzL4\"]},\"contracts/extension/interface/IDropSinglePhase.sol\":{\"keccak256\":\"0xe0a451031e98104d0f4879ec61feab4626c85b234c8db8c6cdbf5c9d4bb58a36\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b651b6128a69e35eadca6633bfa91529ca917edd0601537e509ba3c6056bc7a9\",\"dweb:/ipfs/QmakTGgGyaT9MTCsxuPJmMaGBRX2sBzmKZnqqNb5oiHmnZ\"]},\"contracts/extension/interface/ILazyMint.sol\":{\"keccak256\":\"0x480953502a40e438d855392e322adc0369e2109f6d46fb9ec2bb3ad0afbb0aec\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2b3bb332d4f5e38f9786b00564ad417e48c689b4a92a60888c3845b986c995a3\",\"dweb:/ipfs/QmPVM4KTUeLD7uVCfP8MBQNRo7pU8xF3rXQuDcx3C6cLxA\"]},\"contracts/extension/interface/IOwnable.sol\":{\"keccak256\":\"0xd659a64da6264fdd50ee379be032fea4917eba4fadfd6d366107fb17e46907f3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c15940c4a3d229f4fdd1226fe297a58fde10b07b86a34de1ed11a8802dd5dea9\",\"dweb:/ipfs/QmS8p8CxWiahLkYsCWNhFjCnmQzuc4ck3kjYYuCFj8LsmC\"]},\"contracts/extension/interface/IPermissions.sol\":{\"keccak256\":\"0xc0cd1f87bac474a06f85e2b341b9b57662aee957fc24180d42c872481c2f2ae3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7dec3eed451d63867531d693f0be3279fa2c9aef3130f0826c3520c06820fa5d\",\"dweb:/ipfs/QmTYANrcPdd9SCe99DWsKJ19evNRQKQGZeoS1Keew4M2cS\"]},\"contracts/extension/interface/IPermissionsEnumerable.sol\":{\"keccak256\":\"0x2e742c18a4481bad41d56424cd16c52def2fb415f69e5fb5f67d8d979300ff95\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d9be33bb865e3e82aca540a3e38cbc2bf2e431f9d1bf39c50d6c757e7b7bf3ee\",\"dweb:/ipfs/Qmdad1Xqj5SQ44Bk4bwD2uA36XnGHtqnVYSomKZQvnUBVG\"]},\"contracts/extension/interface/IPlatformFee.sol\":{\"keccak256\":\"0x8c23c2a223a3b94ccce125b418e5fabfb631695d927e336512bc8dca61bbc736\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://86dd8c93e75cb3a44d64c873154ee3857b604d1b07a9e52c120870172c2e9a34\",\"dweb:/ipfs/QmWXxEi7ygoRjN8yWYfVGbfhuwVg8bkLoHNzr3xMNa1VRv\"]},\"contracts/extension/interface/IPrimarySale.sol\":{\"keccak256\":\"0x77c89cb8d9b781b0a08b1fa81c95a0dd5c19200b2fb0dc884c1084b931624004\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a37b042af11a08ba5518dadf72c91745d1b5f42b1c20ea5282492bfd18f53869\",\"dweb:/ipfs/QmWEYYG5VqR8MRfr2rydDV98GLKmaJtCC8G1W7MzJ9qFnF\"]},\"contracts/extension/interface/IRoyalty.sol\":{\"keccak256\":\"0x13912ba3970fdedd1eb5bf8bf0bcc5e64e43f2cadb8d22c3d6fb695fd9877385\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b84d19df7aa9cb7460cca50ab050cdcfffb62f53c246daf35df276cad7088e9b\",\"dweb:/ipfs/QmNPPHJuiW1KCcq3aXELnA4X8NaSPM9S2vHbsBEEDYiwP8\"]},\"contracts/extension/interface/ISignatureMintERC721.sol\":{\"keccak256\":\"0xc1142e0742252123cff0b0c45ede1e70d43cf01d677abc32d4a16064d5161822\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b8f0a32af882458e1c2b040ebe1bc399bdd765e8a29c35fb881494d414c95cb2\",\"dweb:/ipfs/QmR4Z1N29sPXstFaQrubGjNiQhf26VztyVFHjpDjFLfFAi\"]},\"contracts/external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol\":{\"keccak256\":\"0xdbc96b1264d2e2bd82cb7e697056929325e09d1641321145a8cec53b22b9567d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ca7ccf947d21d98878ec18e941b750cd2ae7c563e6d2a707da4f806038d67c8\",\"dweb:/ipfs/QmYVLYUPMD3b95vKrS5yjxcz2MDNNzkWJY9xc9bc9oTZdh\"]},\"contracts/external-deps/openzeppelin/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xa6149938a7c7c8af4244743aeaafcfb1fd9ce15ad45de58fa9576f0ed5599b2c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://839aa4ea6ef6d1972881bfd7420a9ddcd2f37139e3f0bf25310f93f48410702d\",\"dweb:/ipfs/QmSH65kStfbgMbfjFdfJqV412omPy6nB1JMvMt9q7SsytW\"]},\"contracts/infra/interface/IWETH.sol\":{\"keccak256\":\"0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1\",\"dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU\"]},\"contracts/lib/CurrencyTransferLib.sol\":{\"keccak256\":\"0x4a30bc9a8cd6cc8b855621fb1a651e2c3a1639b0ad153f1139c3ba463605672d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://417cc64ec6393f3cc89981ca9c32bbcc444a5f91363d69f84dd8ace888b2b859\",\"dweb:/ipfs/QmZeaQsYGx4VNoP8e1fcwC87PwvyakheWYeuwEwhFSJnvB\"]},\"contracts/lib/MerkleProof.sol\":{\"keccak256\":\"0xfeb51ecaba6f9c1649a143825dc3b7ca0eb9edff7787c7a54957dfd542f7ece0\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://8819ab0f7546a6a0dc126d5dbf019ba015563220689f661b1da4174f7ce87bbf\",\"dweb:/ipfs/QmT6Q9YQGMJbCWhE6G4ze8dsqjMyewnErTNGgLFSAHkFU7\"]},\"contracts/lib/TWAddress.sol\":{\"keccak256\":\"0x460f032cf3bf43d586e126ab2ec8be4335767f497ccb699741546a1cfba94a7e\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://28fcbf6dde6c2eeb9864f6ec6f21dcc81ec426877debf4b912f2f3bc5b0fc91e\",\"dweb:/ipfs/QmS1SHrZDfefX8EE7DdvszTY6VPCHydf4HM7NKJ2gP72e6\"]},\"contracts/lib/TWStrings.sol\":{\"keccak256\":\"0xef7e9954d888f99baffc10db1d9bf6a2beb66c842d81dea90352ddded22cbbf8\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://832415134684f5413f9d0f3f5536aa30848690cfe54769f7730a3807438f3bf9\",\"dweb:/ipfs/QmduTiUdtsnyJVMXpdomohEWDVg46aZhnS9uTURu4x1NYt\"]},\"contracts/prebuilts/signature-drop/SignatureDrop.sol\":{\"keccak256\":\"0x4c73b6d5d925a68a9e362b5f2c442d0c526ca18e7d8b8e5e721fc278ffd70944\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b579c5e3a95f3be723ca333bf77f4d323c65eef975db45887caa7f3e417ba027\",\"dweb:/ipfs/QmSLwrRkYhtqkmP5AQ16JtxbruQrf2yqcvZvMDzJmjc9Wr\"]},\"lib/ERC721A-Upgradeable/contracts/ERC721AUpgradeable.sol\":{\"keccak256\":\"0x73586b2650e59bdb698c0a2cf965f440f0046456fc0c18e9f122a573355197a2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c5c2ae31936f25cb63cbe69902121539dada52dbcc89216f1f23a7c8e0170e4\",\"dweb:/ipfs/QmSUk2vRQoqGPLtTZg9dLKR6j3trFxMjDhveRpJwkm7vkZ\"]},\"lib/ERC721A-Upgradeable/contracts/IERC721AUpgradeable.sol\":{\"keccak256\":\"0x89447bfc4f1417953e3664234d896b42ebc7d68b3cc27f86f7cdd7addfdd5c1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3916917efc838814adb1e459c968d442d26e304f28af181ff35cffb5ca3ec0be\",\"dweb:/ipfs/QmcVwcrhenj31MCbDn6yvaYsFNkyJmA3isWaJiGhgQeEmQ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC2981Upgradeable.sol\":{\"keccak256\":\"0xa8ff557539dcfed5706eddde2aa929e06bb1764e71aa8c1048a78970bf3ca37d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6be9c619be5e1c7ecf1c3d13adc5fa81ae602ca3866b739b2f43443a77f5606c\",\"dweb:/ipfs/QmTSxboNCPMfhuvaCfZhEusxZ4BNxwzZoWFys8kzD29EcA\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721ReceiverUpgradeable.sol\":{\"keccak256\":\"0xbb2ed8106d94aeae6858e2551a1e7174df73994b77b13ebd120ccaaef80155f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8bc3c6a456dba727d8dd9fd33420febede490abb49a07469f61d2a3ace66a95a\",\"dweb:/ipfs/QmVAWtEVj7K5AbvgJa9Dz22KiDq9eoptCjnVZqsTMtKXyd\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721Upgradeable.sol\":{\"keccak256\":\"0x016298e66a5810253c6c905e61966bb31c8775c3f3517bf946ff56ee31d6c005\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1723de5ae414f210db039b19e6487c19c2d643483c9be7c445cf481a80c199d2\",\"dweb:/ipfs/QmcBLbmPdZsNngYhA1KDadNUqQZoGACytFWuUH74RC4AXC\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/extensions/IERC721MetadataUpgradeable.sol\":{\"keccak256\":\"0x95a471796eb5f030fdc438660bebec121ad5d063763e64d92376ffb4b5ce8b70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ffbd627e6958983d288801acdedbf3491ee0ebf1a430338bce47c96481ce9e3\",\"dweb:/ipfs/QmUM1vpmNgBV34sYf946SthDJNGhwwqjoRggmj4TUUQmdB\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/MulticallUpgradeable.sol\":{\"keccak256\":\"0xb8709268fac307114f6cbb5e3cee798d91cd0adfea4d337c4920f8f0b2414f15\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34975544d7bea644eee9ad6e9034b7bbbc0b165159b77f60d0c6004300ab601d\",\"dweb:/ipfs/QmUW5vLADhvVqSdBe96QFM6gzwtv9pagpaUkzXmaeQTWPQ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xea5339a7fff0ed42b45be56a88efdd0b2ddde9fa480dc99fef9a6a4c5b776863\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://841619682637df5579b4c396d281d6c55b26f1b1acce1d0ab67bead5e39cf60c\",\"dweb:/ipfs/QmNRtuKp43ZHJwswdyT3GivY4fDMvz3cxBe1FfDthG1JGj\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/ECDSAUpgradeable.sol\":{\"keccak256\":\"0xbf5daf926894541a40a64b43c3746aa1940c5a1b3b8d14a06465eea72a9b90cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fbdea6be4e36fc5406e81560d8f3f073a61c5d3cb5889b7c896ff5981e2128eb\",\"dweb:/ipfs/QmPpkPNkLEjDf4RZYjiypj9BrNyaXrb2U4pE9aq7sTG9km\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/draft-EIP712Upgradeable.sol\":{\"keccak256\":\"0xaf5a96100f421d61693605349511e43221d3c2e47d4b3efa87af2b936e2567fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://371fd95bad4416766089d3e621dee1fd86fece2b266ad3f9443fefe567e24e94\",\"dweb:/ipfs/QmNciwwtGev3Q8uVhnoE5PQUSCDpMp6KtVjiDgnGdqLmWX\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7\",\"dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.12+commit.f00d7308"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "ApprovalCallerNotOwnerNorApproved"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ApprovalQueryForNonexistentToken"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ApprovalToCurrentOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ApproveToCaller"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BalanceQueryForZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MintToZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MintZeroQuantity"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OwnerQueryForNonexistentToken"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferCallerNotOwnerNorApproved"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferFromIncorrectOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferToNonERC721ReceiverImplementer"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferToZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "URIQueryForNonexistentToken"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "approved",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_fromTokenId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_toTokenId",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "BatchMetadataUpdate",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "struct IClaimCondition.ClaimCondition",
              "name": "condition",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "startTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxClaimableSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "supplyClaimed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "merkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "metadata",
                  "type": "string"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "resetEligibility",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ClaimConditionUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "prevURI",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "newURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ContractURIUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newRoyaltyRecipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newRoyaltyBps",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DefaultRoyalty",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "platformFeeRecipient",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "flatFee",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "FlatPlatformFeeUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [],
          "type": "event",
          "name": "MetadataFrozen",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "prevOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnerUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "platformFeeRecipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "platformFeeBps",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PlatformFeeInfoUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "enum IPlatformFee.PlatformFeeType",
              "name": "feeType",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PlatformFeeTypeUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "PrimarySaleRecipientUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleAdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleGranted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleRevoked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "royaltyRecipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "royaltyBps",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RoyaltyForToken",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "string",
              "name": "revealedURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokenURIRevealed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "claimer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "startTokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "quantityClaimed",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensClaimed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "startTokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "endTokenId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "baseURI",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "encryptedBaseURI",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensLazyMinted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "signer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "mintedTo",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenIdMinted",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "struct ISignatureMintERC721.MintRequest",
              "name": "mintRequest",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "royaltyRecipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "royaltyBps",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "primarySaleRecipient",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "uri",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "quantity",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "uint128",
                  "name": "validityStartTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "validityEndTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensMintedWithSignature",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DEFAULT_ADMIN_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "batchFrozen",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_quantity",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_currency",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "struct IDropSinglePhase.AllowlistProof",
              "name": "_allowlistProof",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32[]",
                  "name": "proof",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "claim"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "claimCondition",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "startTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxClaimableSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "supplyClaimed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "merkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "metadata",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "contractType",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "contractURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "contractVersion",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "key",
              "type": "bytes"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "encryptDecrypt",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "result",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "encryptedData",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getApproved",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getBaseURICount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getBatchIdAtIndex",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getDefaultRoyaltyInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getFlatPlatformFeeInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getPlatformFeeInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getPlatformFeeType",
          "outputs": [
            {
              "internalType": "enum IPlatformFee.PlatformFeeType",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_batchId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "_key",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRevealURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "revealedURI",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleAdmin",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleMember",
          "outputs": [
            {
              "internalType": "address",
              "name": "member",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleMemberCount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "count",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoyaltyInfoForToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_claimer",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getSupplyClaimedByWallet",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRole",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRoleWithSwitch",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_defaultAdmin",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_symbol",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_contractURI",
              "type": "string"
            },
            {
              "internalType": "address[]",
              "name": "_trustedForwarders",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "_saleRecipient",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_royaltyRecipient",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "_royaltyBps",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "_platformFeeBps",
              "type": "uint128"
            },
            {
              "internalType": "address",
              "name": "_platformFeeRecipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_batchId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isEncryptedBatch",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "forwarder",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isTrustedForwarder",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "_baseURIForTokens",
              "type": "string"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "lazyMint",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "batchId",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct ISignatureMintERC721.MintRequest",
              "name": "_req",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "royaltyRecipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "royaltyBps",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "primarySaleRecipient",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "uri",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "quantity",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "uint128",
                  "name": "validityStartTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "validityEndTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "_signature",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "mintWithSignature",
          "outputs": [
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes[]",
              "name": "data",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "multicall",
          "outputs": [
            {
              "internalType": "bytes[]",
              "name": "results",
              "type": "bytes[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nextTokenIdToMint",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "primarySaleRecipient",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceRole"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_index",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "_key",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "reveal",
          "outputs": [
            {
              "internalType": "string",
              "name": "revealedURI",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeRole"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "salePrice",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "royaltyInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "royaltyAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "struct IClaimCondition.ClaimCondition",
              "name": "_condition",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "startTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxClaimableSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "supplyClaimed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "merkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "metadata",
                  "type": "string"
                }
              ]
            },
            {
              "internalType": "bool",
              "name": "_resetClaimEligibility",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setClaimConditions"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_uri",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setContractURI"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_royaltyRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_royaltyBps",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDefaultRoyaltyInfo"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_platformFeeRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_flatFee",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setFlatPlatformFeeInfo"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_platformFeeRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_platformFeeBps",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPlatformFeeInfo"
        },
        {
          "inputs": [
            {
              "internalType": "enum IPlatformFee.PlatformFeeType",
              "name": "_feeType",
              "type": "uint8"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPlatformFeeType"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_saleRecipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPrimarySaleRecipient"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_bps",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRoyaltyInfoForToken"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalMinted",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "struct ISignatureMintERC721.MintRequest",
              "name": "_req",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "royaltyRecipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "royaltyBps",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "primarySaleRecipient",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "uri",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "quantity",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "uint128",
                  "name": "validityStartTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "validityEndTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "_signature",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "verify",
          "outputs": [
            {
              "internalType": "bool",
              "name": "success",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_claimer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_quantity",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_currency",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "struct IDropSinglePhase.AllowlistProof",
              "name": "_allowlistProof",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32[]",
                  "name": "proof",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "verifyClaim",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isOverride",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "approve(address,uint256)": {
            "details": "See {IERC721-approve}."
          },
          "balanceOf(address)": {
            "details": "See {IERC721-balanceOf}."
          },
          "burn(uint256)": {
            "details": "Burns `tokenId`. See {ERC721-_burn}."
          },
          "claim(address,uint256,address,uint256,(bytes32[],uint256,uint256,address),bytes)": {
            "details": "Lets an account claim tokens."
          },
          "encryptDecrypt(bytes,bytes)": {
            "details": "Encrypt/decrypt given `data` with `key`. Uses inline assembly.                  See: https://ethereum.stackexchange.com/questions/69825/decrypt-message-on-chain",
            "params": {
              "data": "Bytes of data to encrypt/decrypt.",
              "key": "Secure key used by caller for encryption/decryption."
            },
            "returns": {
              "result": " Output after encryption/decryption of given data."
            }
          },
          "getApproved(uint256)": {
            "details": "See {IERC721-getApproved}."
          },
          "getBaseURICount()": {
            "details": "Each batch of tokens has an in ID and an associated `baseURI`.                  See {batchIds}."
          },
          "getBatchIdAtIndex(uint256)": {
            "details": "See {getBaseURICount}.",
            "params": {
              "_index": "Index of the desired batch in batchIds array."
            }
          },
          "getFlatPlatformFeeInfo()": {
            "details": "Returns the platform fee bps and recipient."
          },
          "getPlatformFeeInfo()": {
            "details": "Returns the platform fee recipient and bps."
          },
          "getPlatformFeeType()": {
            "details": "Returns the platform fee bps and recipient."
          },
          "getRevealURI(uint256,bytes)": {
            "details": "Reveal encrypted base URI for `_batchId` with caller/admin's `_key` used for encryption.                      Reverts if there's no encrypted URI for `_batchId`.                      See {encryptDecrypt}.",
            "params": {
              "_batchId": "ID of the batch for which URI is being revealed.",
              "_key": "Secure key used by caller/admin for encryption of baseURI."
            },
            "returns": {
              "revealedURI": "Decrypted base URI."
            }
          },
          "getRoleAdmin(bytes32)": {
            "details": "See {grantRole} and {revokeRole}.                  To change a role's admin, use {_setRoleAdmin}.",
            "params": {
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "getRoleMember(bytes32,uint256)": {
            "details": "Returns `member` who has `role`, at `index` of role-members list.                  See struct {RoleMembers}, and mapping {roleMembers}",
            "params": {
              "index": "Index in list of current members for the role.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            },
            "returns": {
              "member": " Address of account that has `role`"
            }
          },
          "getRoleMemberCount(bytes32)": {
            "details": "Returns `count` of accounts that have `role`.                  See struct {RoleMembers}, and mapping {roleMembers}",
            "params": {
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            },
            "returns": {
              "count": "  Total number of accounts that have `role`"
            }
          },
          "getRoyaltyInfoForToken(uint256)": {
            "details": "Returns royalty recipient and bps for `_tokenId`.",
            "params": {
              "_tokenId": "The tokenID of the NFT for which to query royalty info."
            }
          },
          "getSupplyClaimedByWallet(address)": {
            "details": "Returns the supply claimed by claimer for active conditionId."
          },
          "grantRole(bytes32,address)": {
            "details": "Caller must have admin role for the `role`.                  Emits {RoleGranted Event}.",
            "params": {
              "account": "Address of the account to which the role is being granted.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "hasRole(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`.",
            "params": {
              "account": "Address of the account for which the role is being checked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "hasRoleWithSwitch(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`.                  Role restrictions can be swtiched on and off:                      - If address(0) has ROLE, then the ROLE restrictions                        don't apply.                      - If address(0) does not have ROLE, then the ROLE                        restrictions will apply.",
            "params": {
              "account": "Address of the account for which the role is being checked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "initialize(address,string,string,string,address[],address,address,uint128,uint128,address)": {
            "details": "Initializes the contract, like a constructor."
          },
          "isApprovedForAll(address,address)": {
            "details": "See {IERC721-isApprovedForAll}."
          },
          "isEncryptedBatch(uint256)": {
            "details": "Returns `true` if `_batchId`'s base URI is encrypted.",
            "params": {
              "_batchId": "ID of a batch of NFTs."
            }
          },
          "lazyMint(uint256,string,bytes)": {
            "details": "Lets an account with `MINTER_ROLE` lazy mint 'n' NFTs.       The URIs for each token is the provided `_baseURIForTokens` + `{tokenId}`."
          },
          "mintWithSignature((address,address,uint256,address,string,uint256,uint256,address,uint128,uint128,bytes32),bytes)": {
            "details": "Claim lazy minted tokens via signature."
          },
          "multicall(bytes[])": {
            "details": "Receives and executes a batch of function calls on this contract."
          },
          "name()": {
            "details": "See {IERC721Metadata-name}."
          },
          "nextTokenIdToMint()": {
            "details": "The tokenId of the next NFT that will be minted / lazy minted."
          },
          "ownerOf(uint256)": {
            "details": "See {IERC721-ownerOf}."
          },
          "primarySaleRecipient()": {
            "details": "Returns primary sale recipient address."
          },
          "renounceRole(bytes32,address)": {
            "details": "Caller must have the `role`, with caller being the same as `account`.                  Emits {RoleRevoked Event}.",
            "params": {
              "account": "Address of the account from which the role is being revoked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "reveal(uint256,bytes)": {
            "details": "Lets an account with `MINTER_ROLE` reveal the URI for a batch of 'delayed-reveal' NFTs."
          },
          "revokeRole(bytes32,address)": {
            "details": "Caller must have admin role for the `role`.                  Emits {RoleRevoked Event}.",
            "params": {
              "account": "Address of the account from which the role is being revoked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "royaltyInfo(uint256,uint256)": {
            "details": "Returns royalty amount and recipient for `tokenId` and `salePrice`.",
            "params": {
              "salePrice": "Sale price of the token.",
              "tokenId": "The tokenID of the NFT for which to query royalty info."
            },
            "returns": {
              "receiver": "       Address of royalty recipient account.",
              "royaltyAmount": "  Royalty amount calculated at current royaltyBps value."
            }
          },
          "safeTransferFrom(address,address,uint256)": {
            "details": "See {IERC721-safeTransferFrom}."
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            "details": "See {IERC721-safeTransferFrom}."
          },
          "setApprovalForAll(address,bool)": {
            "details": "See {IERC721-setApprovalForAll}."
          },
          "setClaimConditions((uint256,uint256,uint256,uint256,bytes32,uint256,address,string),bool)": {
            "details": "Lets a contract admin set claim conditions."
          },
          "setContractURI(string)": {
            "details": "Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.",
            "params": {
              "_uri": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "setDefaultRoyaltyInfo(address,uint256)": {
            "details": "Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {DefaultRoyalty Event}; See {_setupDefaultRoyaltyInfo}.",
            "params": {
              "_royaltyBps": "Updated royalty bps.",
              "_royaltyRecipient": "Address to be set as default royalty recipient."
            }
          },
          "setOwner(address)": {
            "params": {
              "_newOwner": "The address to set as the new owner of the contract."
            }
          },
          "setPlatformFeeInfo(address,uint256)": {
            "details": "Caller should be authorized to set platform fee info.                  See {_canSetPlatformFeeInfo}.                  Emits {PlatformFeeInfoUpdated Event}; See {_setupPlatformFeeInfo}.",
            "params": {
              "_platformFeeBps": "Updated platformFeeBps.",
              "_platformFeeRecipient": "Address to be set as new platformFeeRecipient."
            }
          },
          "setPrimarySaleRecipient(address)": {
            "details": "Caller should be authorized to set primary sales info.                  See {_canSetPrimarySaleRecipient}.                  Emits {PrimarySaleRecipientUpdated Event}; See {_setupPrimarySaleRecipient}.",
            "params": {
              "_saleRecipient": "Address to be set as new recipient of primary sales."
            }
          },
          "setRoyaltyInfoForToken(uint256,address,uint256)": {
            "details": "Sets royalty info for `_tokenId`. Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {RoyaltyForToken Event}; See {_setupRoyaltyInfoForToken}.",
            "params": {
              "_bps": "Updated royalty bps for the token Id.",
              "_recipient": "Address to be set as royalty recipient for given token Id."
            }
          },
          "supportsInterface(bytes4)": {
            "details": "See ERC 165"
          },
          "symbol()": {
            "details": "See {IERC721Metadata-symbol}."
          },
          "tokenURI(uint256)": {
            "details": "Returns the URI for a given tokenId."
          },
          "totalSupply()": {
            "details": "Burned tokens are calculated here, use _totalMinted() if you want to count just minted tokens."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC721-transferFrom}."
          },
          "verify((address,address,uint256,address,string,uint256,uint256,address,uint128,uint128,bytes32),bytes)": {
            "details": "Verifies that a mint request is signed by an account holding MINTER_ROLE (at the time of the function call)."
          },
          "verifyClaim(address,uint256,address,uint256,(bytes32[],uint256,uint256,address))": {
            "details": "Checks a request to claim NFTs against the active claim condition's criteria."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "contractURI()": {
            "notice": "Returns the contract metadata URI."
          },
          "encryptDecrypt(bytes,bytes)": {
            "notice": "Encrypt/decrypt data on chain."
          },
          "getBaseURICount()": {
            "notice": "Returns the count of batches of NFTs."
          },
          "getBatchIdAtIndex(uint256)": {
            "notice": "Returns the ID for the batch of tokens at the given index."
          },
          "getDefaultRoyaltyInfo()": {
            "notice": "Returns the defualt royalty recipient and BPS for this contract's NFTs."
          },
          "getRevealURI(uint256,bytes)": {
            "notice": "Returns revealed URI for a batch of NFTs."
          },
          "getRoleAdmin(bytes32)": {
            "notice": "Returns the admin role that controls the specified role."
          },
          "getRoleMember(bytes32,uint256)": {
            "notice": "Returns the role-member from a list of members for a role,                  at a given index."
          },
          "getRoleMemberCount(bytes32)": {
            "notice": "Returns total number of accounts that have a role."
          },
          "getRoyaltyInfoForToken(uint256)": {
            "notice": "View royalty info for a given token."
          },
          "grantRole(bytes32,address)": {
            "notice": "Grants a role to an account, if not previously granted."
          },
          "hasRole(bytes32,address)": {
            "notice": "Checks whether an account has a particular role."
          },
          "hasRoleWithSwitch(bytes32,address)": {
            "notice": "Checks whether an account has a particular role;                  role restrictions can be swtiched on and off."
          },
          "isEncryptedBatch(uint256)": {
            "notice": "Returns whether the relvant batch of NFTs is subject to a delayed reveal."
          },
          "owner()": {
            "notice": "Returns the owner of the contract."
          },
          "renounceRole(bytes32,address)": {
            "notice": "Revokes role from the account."
          },
          "revokeRole(bytes32,address)": {
            "notice": "Revokes role from an account."
          },
          "royaltyInfo(uint256,uint256)": {
            "notice": "View royalty info for a given token and sale price."
          },
          "setContractURI(string)": {
            "notice": "Lets a contract admin set the URI for contract-level metadata."
          },
          "setDefaultRoyaltyInfo(address,uint256)": {
            "notice": "Updates default royalty recipient and bps."
          },
          "setFlatPlatformFeeInfo(address,uint256)": {
            "notice": "Lets a module admin set a flat fee on primary sales."
          },
          "setOwner(address)": {
            "notice": "Lets an authorized wallet set a new owner for the contract."
          },
          "setPlatformFeeInfo(address,uint256)": {
            "notice": "Updates the platform fee recipient and bps."
          },
          "setPlatformFeeType(uint8)": {
            "notice": "Lets a module admin set platform fee type."
          },
          "setPrimarySaleRecipient(address)": {
            "notice": "Updates primary sale recipient."
          },
          "setRoyaltyInfoForToken(uint256,address,uint256)": {
            "notice": "Updates default royalty recipient and bps for a particular token."
          },
          "totalMinted()": {
            "notice": "Returns the total amount of tokens minted in the contract."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=lib/chainlink/",
        "@ds-test/=lib/ds-test/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@std/=lib/forge-std/src/",
        "@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/",
        "ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/",
        "ERC721A/=lib/ERC721A/contracts/",
        "chainlink/=lib/chainlink/",
        "contracts/=contracts/",
        "ds-test/=lib/ds-test/src/",
        "dynamic-contracts/=lib/dynamic-contracts/src/",
        "erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/",
        "erc721a-upgradeable/=lib/ERC721A-Upgradeable/",
        "erc721a/=lib/ERC721A/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/prebuilts/signature-drop/SignatureDrop.sol": "SignatureDrop"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/eip/interface/IERC165.sol": {
        "keccak256": "0x35d0a916f70344a5fcc6c67cb531b6150d2fce43e72a6282385eab02020f2f49",
        "urls": [
          "bzz-raw://75ccd8b9a8b52a93b8097fcb8181b7afb6d72bbe6eaabf434f0481a7a207cc8a",
          "dweb:/ipfs/QmPUZAEE4nwkijcE2amAXAWEVGVG5XaKWGhpgnRwpAf93R"
        ],
        "license": "MIT"
      },
      "contracts/eip/interface/IERC20.sol": {
        "keccak256": "0x5bdd9dd97ba7d9d7c9a2953db287e4d9d7fa93a27a96bc2e72a8da4919b6f7ff",
        "urls": [
          "bzz-raw://45527c265ee5de6bbb3ecfc052e7b1175531a82c2ac16172020aee855f7dd592",
          "dweb:/ipfs/QmVZthqbG916qUQSwv1LE8bB58ZGQ1VfQbLbbRV5urfEYA"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC2981.sol": {
        "keccak256": "0x7886c17b1bc3df885201378fd070d2f00d05fa54f20f7daf10382ec6ff4bd0c9",
        "urls": [
          "bzz-raw://a0802623ba9555f6d186bab5fd139203b643e88ea31d78f4f05cddd4008ac6cf",
          "dweb:/ipfs/QmYbqzSKkKmF2xYeH1zGNewBDNAhukuaZEUVAvYgnKt1He"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/BatchMintMetadata.sol": {
        "keccak256": "0x1d1ee64f8456dc8b4cdd096e27ac4687babd485f49a728146126744d67f25f2f",
        "urls": [
          "bzz-raw://9e01b0d51bdccbcce9095f606c8624926b518c1385c1349c41896236a0345ee0",
          "dweb:/ipfs/QmWHTbztwRf9Fyq4617MrVSqF8o7UXMT5nFe6epQ92N6L9"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/ContractMetadata.sol": {
        "keccak256": "0xf53ab08ec3057056872c15e35a5610f7a43426bd2829786aed006d527177adfe",
        "urls": [
          "bzz-raw://ee132ae5efdd372152febfcd8fd3a7cb82c7019367d92c886f5096003a79f392",
          "dweb:/ipfs/QmRW1cGWmZAu57huZpTUwsWB8AxUFrBp6g4NqozXpbWsR6"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/DelayedReveal.sol": {
        "keccak256": "0x2a860e4b857617a1c87c5fb79df2dd4a70e0e63ec6796f58ce9d0b3b93f1e242",
        "urls": [
          "bzz-raw://cc4039ae41d23b921c13b500018e333d63dd9b3be65e700e0d05465d3ac680a3",
          "dweb:/ipfs/QmSLCVWqjVzDt9ygXmBffERFCYCo7RiGry2BhQjXcnZjQ6"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/DropSinglePhase.sol": {
        "keccak256": "0x836429b5346bd4f6a2078e5b2db2702a692afddc74f316a92fd6c1335f03ff3a",
        "urls": [
          "bzz-raw://bc0858bb7a2c05013eb6352cc47087d6334824a32cc8545e549dddcf69a0dc31",
          "dweb:/ipfs/QmPMDq6F9G9u4nGEQTUPpUv7pm3cm3vY5hcb6ue9paEmGS"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/LazyMint.sol": {
        "keccak256": "0xe88710d7f2ac2834be6ed3c2bff1314f0d9c8c65aec7d05df9a6381d48a6f170",
        "urls": [
          "bzz-raw://c4734764afb84ecb1c5a99a441296a38f524c602227d0eae9bca3b325c895827",
          "dweb:/ipfs/QmWbwqzY6SqgitawoYeZmHiFvW6dp2fHoQfnb9WuVNr6E9"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Ownable.sol": {
        "keccak256": "0x45447691686861237d5e1acb9d723d861a3fb3d561335e4f385d1547f25e27a5",
        "urls": [
          "bzz-raw://5142293e36c736f744c73aaecab5f7be8e2d5ac70acc67851e0cea5171fd6782",
          "dweb:/ipfs/QmVJT5B84o5vFc5E2VteZdBhrT1HMutc7Ax72UKD1aZatJ"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Permissions.sol": {
        "keccak256": "0xe7e18181f2d2c8bae4afc7ee69ce1d547e7aa583182e8e0853ca33c49a28c04d",
        "urls": [
          "bzz-raw://75d5f5a9356c290e398a5dd05914b59c3d09e6fedde2da80b6f1012aedf323f8",
          "dweb:/ipfs/QmNrrf8Uyq33XBsE2NqVTW6HVX3XixFTjCG8KGbGxdEE84"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/PermissionsEnumerable.sol": {
        "keccak256": "0x434a6ffc16ddc437ffb37b8fbe4c9696385252f15a617c4606b8c5e10561caf3",
        "urls": [
          "bzz-raw://1a9d4dac4bf2ae3c3c086af1956dc25e8b149b0914125e660cc0648791c247cb",
          "dweb:/ipfs/QmTMEggPdBea1JCamsShwRf3en2FgVTXNTPJ2isFtBk4Kk"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/PlatformFee.sol": {
        "keccak256": "0x8db4537648987b88dce356120fc96c48cffe53eaa5988b9a7e8aa023f4258163",
        "urls": [
          "bzz-raw://9e30009e63be23e60e92bf25582143596e3f01b2a1f7e121664559119a9f5890",
          "dweb:/ipfs/Qma3bi4NfCNZaukacNQMQ3j5kXn6Ym4mDa57Tqc26ssahE"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/PrimarySale.sol": {
        "keccak256": "0x9ef1ad82fadf988a07f4034b92ccdb3281682693e41759a79042814d36095f42",
        "urls": [
          "bzz-raw://0d962b48453e1f50b808193135c2f14265324fa8b75fe3b405ef7836e38921f7",
          "dweb:/ipfs/QmZDLNsZQj9kNcb15nBuWRpPwDdDvJS2gtFwqEs2Lwxb1N"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Royalty.sol": {
        "keccak256": "0xcc3110048db91d4ecd05afcc6721fce6ade5eee8c2da0af8955e86ece8754350",
        "urls": [
          "bzz-raw://a1e830502fda46ab7618b65e155341d42bf007717edb27711b09bf6250ce1485",
          "dweb:/ipfs/QmY5fKpg7aCubR7fENu9htRFspU8hpSo7CVUNJxQdh8kv1"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/SignatureMintERC721Upgradeable.sol": {
        "keccak256": "0x1f9f0cdf37800f14e331b01721130d503d55e60ff86cd3faae15d75e9cb4c8f3",
        "urls": [
          "bzz-raw://7a1dce41c6e7522b39c8648742e70867f6ef9ebbadf01249f4d47f850af653a3",
          "dweb:/ipfs/QmX3znQxZSiA9GFvGkCeEHPrA1dy1pAo6tFyAoa2GtKAKM"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IClaimCondition.sol": {
        "keccak256": "0x391e69970031edb30dfa59f8db33c7446b349cd5ec505fd99f0f0b672b19e6d6",
        "urls": [
          "bzz-raw://fd9eafca6098421f3aa25bf0a0b24386facc764b7ecb8e6ce4a890afa3c6d459",
          "dweb:/ipfs/QmPXTSX2ie5wsZ6FyXWS4YMa7aPpYNyza9Rym1n799B5LU"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IContractMetadata.sol": {
        "keccak256": "0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2",
        "urls": [
          "bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a",
          "dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IDelayedReveal.sol": {
        "keccak256": "0xbbe98263ebce49f81cb42f8bf1e7e631afd81cda73be79b907e81a2f54fd2123",
        "urls": [
          "bzz-raw://76913c2086e309c97ac0d5be72bbe23e66fe35e231c75318993c14e6aa4c0138",
          "dweb:/ipfs/QmXwr49U275Cam8x9mYcNdcCmZHUYuBge3CtFPkBkEMzL4"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IDropSinglePhase.sol": {
        "keccak256": "0xe0a451031e98104d0f4879ec61feab4626c85b234c8db8c6cdbf5c9d4bb58a36",
        "urls": [
          "bzz-raw://b651b6128a69e35eadca6633bfa91529ca917edd0601537e509ba3c6056bc7a9",
          "dweb:/ipfs/QmakTGgGyaT9MTCsxuPJmMaGBRX2sBzmKZnqqNb5oiHmnZ"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/ILazyMint.sol": {
        "keccak256": "0x480953502a40e438d855392e322adc0369e2109f6d46fb9ec2bb3ad0afbb0aec",
        "urls": [
          "bzz-raw://2b3bb332d4f5e38f9786b00564ad417e48c689b4a92a60888c3845b986c995a3",
          "dweb:/ipfs/QmPVM4KTUeLD7uVCfP8MBQNRo7pU8xF3rXQuDcx3C6cLxA"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IOwnable.sol": {
        "keccak256": "0xd659a64da6264fdd50ee379be032fea4917eba4fadfd6d366107fb17e46907f3",
        "urls": [
          "bzz-raw://c15940c4a3d229f4fdd1226fe297a58fde10b07b86a34de1ed11a8802dd5dea9",
          "dweb:/ipfs/QmS8p8CxWiahLkYsCWNhFjCnmQzuc4ck3kjYYuCFj8LsmC"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPermissions.sol": {
        "keccak256": "0xc0cd1f87bac474a06f85e2b341b9b57662aee957fc24180d42c872481c2f2ae3",
        "urls": [
          "bzz-raw://7dec3eed451d63867531d693f0be3279fa2c9aef3130f0826c3520c06820fa5d",
          "dweb:/ipfs/QmTYANrcPdd9SCe99DWsKJ19evNRQKQGZeoS1Keew4M2cS"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPermissionsEnumerable.sol": {
        "keccak256": "0x2e742c18a4481bad41d56424cd16c52def2fb415f69e5fb5f67d8d979300ff95",
        "urls": [
          "bzz-raw://d9be33bb865e3e82aca540a3e38cbc2bf2e431f9d1bf39c50d6c757e7b7bf3ee",
          "dweb:/ipfs/Qmdad1Xqj5SQ44Bk4bwD2uA36XnGHtqnVYSomKZQvnUBVG"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPlatformFee.sol": {
        "keccak256": "0x8c23c2a223a3b94ccce125b418e5fabfb631695d927e336512bc8dca61bbc736",
        "urls": [
          "bzz-raw://86dd8c93e75cb3a44d64c873154ee3857b604d1b07a9e52c120870172c2e9a34",
          "dweb:/ipfs/QmWXxEi7ygoRjN8yWYfVGbfhuwVg8bkLoHNzr3xMNa1VRv"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPrimarySale.sol": {
        "keccak256": "0x77c89cb8d9b781b0a08b1fa81c95a0dd5c19200b2fb0dc884c1084b931624004",
        "urls": [
          "bzz-raw://a37b042af11a08ba5518dadf72c91745d1b5f42b1c20ea5282492bfd18f53869",
          "dweb:/ipfs/QmWEYYG5VqR8MRfr2rydDV98GLKmaJtCC8G1W7MzJ9qFnF"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IRoyalty.sol": {
        "keccak256": "0x13912ba3970fdedd1eb5bf8bf0bcc5e64e43f2cadb8d22c3d6fb695fd9877385",
        "urls": [
          "bzz-raw://b84d19df7aa9cb7460cca50ab050cdcfffb62f53c246daf35df276cad7088e9b",
          "dweb:/ipfs/QmNPPHJuiW1KCcq3aXELnA4X8NaSPM9S2vHbsBEEDYiwP8"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/ISignatureMintERC721.sol": {
        "keccak256": "0xc1142e0742252123cff0b0c45ede1e70d43cf01d677abc32d4a16064d5161822",
        "urls": [
          "bzz-raw://b8f0a32af882458e1c2b040ebe1bc399bdd765e8a29c35fb881494d414c95cb2",
          "dweb:/ipfs/QmR4Z1N29sPXstFaQrubGjNiQhf26VztyVFHjpDjFLfFAi"
        ],
        "license": "Apache-2.0"
      },
      "contracts/external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol": {
        "keccak256": "0xdbc96b1264d2e2bd82cb7e697056929325e09d1641321145a8cec53b22b9567d",
        "urls": [
          "bzz-raw://7ca7ccf947d21d98878ec18e941b750cd2ae7c563e6d2a707da4f806038d67c8",
          "dweb:/ipfs/QmYVLYUPMD3b95vKrS5yjxcz2MDNNzkWJY9xc9bc9oTZdh"
        ],
        "license": "MIT"
      },
      "contracts/external-deps/openzeppelin/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xa6149938a7c7c8af4244743aeaafcfb1fd9ce15ad45de58fa9576f0ed5599b2c",
        "urls": [
          "bzz-raw://839aa4ea6ef6d1972881bfd7420a9ddcd2f37139e3f0bf25310f93f48410702d",
          "dweb:/ipfs/QmSH65kStfbgMbfjFdfJqV412omPy6nB1JMvMt9q7SsytW"
        ],
        "license": "MIT"
      },
      "contracts/infra/interface/IWETH.sol": {
        "keccak256": "0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b",
        "urls": [
          "bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1",
          "dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/CurrencyTransferLib.sol": {
        "keccak256": "0x4a30bc9a8cd6cc8b855621fb1a651e2c3a1639b0ad153f1139c3ba463605672d",
        "urls": [
          "bzz-raw://417cc64ec6393f3cc89981ca9c32bbcc444a5f91363d69f84dd8ace888b2b859",
          "dweb:/ipfs/QmZeaQsYGx4VNoP8e1fcwC87PwvyakheWYeuwEwhFSJnvB"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/MerkleProof.sol": {
        "keccak256": "0xfeb51ecaba6f9c1649a143825dc3b7ca0eb9edff7787c7a54957dfd542f7ece0",
        "urls": [
          "bzz-raw://8819ab0f7546a6a0dc126d5dbf019ba015563220689f661b1da4174f7ce87bbf",
          "dweb:/ipfs/QmT6Q9YQGMJbCWhE6G4ze8dsqjMyewnErTNGgLFSAHkFU7"
        ],
        "license": "Apache 2.0"
      },
      "contracts/lib/TWAddress.sol": {
        "keccak256": "0x460f032cf3bf43d586e126ab2ec8be4335767f497ccb699741546a1cfba94a7e",
        "urls": [
          "bzz-raw://28fcbf6dde6c2eeb9864f6ec6f21dcc81ec426877debf4b912f2f3bc5b0fc91e",
          "dweb:/ipfs/QmS1SHrZDfefX8EE7DdvszTY6VPCHydf4HM7NKJ2gP72e6"
        ],
        "license": "Apache 2.0"
      },
      "contracts/lib/TWStrings.sol": {
        "keccak256": "0xef7e9954d888f99baffc10db1d9bf6a2beb66c842d81dea90352ddded22cbbf8",
        "urls": [
          "bzz-raw://832415134684f5413f9d0f3f5536aa30848690cfe54769f7730a3807438f3bf9",
          "dweb:/ipfs/QmduTiUdtsnyJVMXpdomohEWDVg46aZhnS9uTURu4x1NYt"
        ],
        "license": "Apache 2.0"
      },
      "contracts/prebuilts/signature-drop/SignatureDrop.sol": {
        "keccak256": "0x4c73b6d5d925a68a9e362b5f2c442d0c526ca18e7d8b8e5e721fc278ffd70944",
        "urls": [
          "bzz-raw://b579c5e3a95f3be723ca333bf77f4d323c65eef975db45887caa7f3e417ba027",
          "dweb:/ipfs/QmSLwrRkYhtqkmP5AQ16JtxbruQrf2yqcvZvMDzJmjc9Wr"
        ],
        "license": "Apache-2.0"
      },
      "lib/ERC721A-Upgradeable/contracts/ERC721AUpgradeable.sol": {
        "keccak256": "0x73586b2650e59bdb698c0a2cf965f440f0046456fc0c18e9f122a573355197a2",
        "urls": [
          "bzz-raw://9c5c2ae31936f25cb63cbe69902121539dada52dbcc89216f1f23a7c8e0170e4",
          "dweb:/ipfs/QmSUk2vRQoqGPLtTZg9dLKR6j3trFxMjDhveRpJwkm7vkZ"
        ],
        "license": "MIT"
      },
      "lib/ERC721A-Upgradeable/contracts/IERC721AUpgradeable.sol": {
        "keccak256": "0x89447bfc4f1417953e3664234d896b42ebc7d68b3cc27f86f7cdd7addfdd5c1c",
        "urls": [
          "bzz-raw://3916917efc838814adb1e459c968d442d26e304f28af181ff35cffb5ca3ec0be",
          "dweb:/ipfs/QmcVwcrhenj31MCbDn6yvaYsFNkyJmA3isWaJiGhgQeEmQ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC2981Upgradeable.sol": {
        "keccak256": "0xa8ff557539dcfed5706eddde2aa929e06bb1764e71aa8c1048a78970bf3ca37d",
        "urls": [
          "bzz-raw://6be9c619be5e1c7ecf1c3d13adc5fa81ae602ca3866b739b2f43443a77f5606c",
          "dweb:/ipfs/QmTSxboNCPMfhuvaCfZhEusxZ4BNxwzZoWFys8kzD29EcA"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e",
        "urls": [
          "bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497",
          "dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721ReceiverUpgradeable.sol": {
        "keccak256": "0xbb2ed8106d94aeae6858e2551a1e7174df73994b77b13ebd120ccaaef80155f5",
        "urls": [
          "bzz-raw://8bc3c6a456dba727d8dd9fd33420febede490abb49a07469f61d2a3ace66a95a",
          "dweb:/ipfs/QmVAWtEVj7K5AbvgJa9Dz22KiDq9eoptCjnVZqsTMtKXyd"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721Upgradeable.sol": {
        "keccak256": "0x016298e66a5810253c6c905e61966bb31c8775c3f3517bf946ff56ee31d6c005",
        "urls": [
          "bzz-raw://1723de5ae414f210db039b19e6487c19c2d643483c9be7c445cf481a80c199d2",
          "dweb:/ipfs/QmcBLbmPdZsNngYhA1KDadNUqQZoGACytFWuUH74RC4AXC"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/extensions/IERC721MetadataUpgradeable.sol": {
        "keccak256": "0x95a471796eb5f030fdc438660bebec121ad5d063763e64d92376ffb4b5ce8b70",
        "urls": [
          "bzz-raw://4ffbd627e6958983d288801acdedbf3491ee0ebf1a430338bce47c96481ce9e3",
          "dweb:/ipfs/QmUM1vpmNgBV34sYf946SthDJNGhwwqjoRggmj4TUUQmdB"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3",
        "urls": [
          "bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4",
          "dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/MulticallUpgradeable.sol": {
        "keccak256": "0xb8709268fac307114f6cbb5e3cee798d91cd0adfea4d337c4920f8f0b2414f15",
        "urls": [
          "bzz-raw://34975544d7bea644eee9ad6e9034b7bbbc0b165159b77f60d0c6004300ab601d",
          "dweb:/ipfs/QmUW5vLADhvVqSdBe96QFM6gzwtv9pagpaUkzXmaeQTWPQ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol": {
        "keccak256": "0xea5339a7fff0ed42b45be56a88efdd0b2ddde9fa480dc99fef9a6a4c5b776863",
        "urls": [
          "bzz-raw://841619682637df5579b4c396d281d6c55b26f1b1acce1d0ab67bead5e39cf60c",
          "dweb:/ipfs/QmNRtuKp43ZHJwswdyT3GivY4fDMvz3cxBe1FfDthG1JGj"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/ECDSAUpgradeable.sol": {
        "keccak256": "0xbf5daf926894541a40a64b43c3746aa1940c5a1b3b8d14a06465eea72a9b90cc",
        "urls": [
          "bzz-raw://fbdea6be4e36fc5406e81560d8f3f073a61c5d3cb5889b7c896ff5981e2128eb",
          "dweb:/ipfs/QmPpkPNkLEjDf4RZYjiypj9BrNyaXrb2U4pE9aq7sTG9km"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/draft-EIP712Upgradeable.sol": {
        "keccak256": "0xaf5a96100f421d61693605349511e43221d3c2e47d4b3efa87af2b936e2567fc",
        "urls": [
          "bzz-raw://371fd95bad4416766089d3e621dee1fd86fece2b266ad3f9443fefe567e24e94",
          "dweb:/ipfs/QmNciwwtGev3Q8uVhnoE5PQUSCDpMp6KtVjiDgnGdqLmWX"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol": {
        "keccak256": "0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a",
        "urls": [
          "bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7",
          "dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol": {
        "keccak256": "0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09",
        "urls": [
          "bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758",
          "dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/prebuilts/signature-drop/SignatureDrop.sol",
    "id": 89890,
    "exportedSymbols": {
      "AddressUpgradeable": [
        155768
      ],
      "BatchMintMetadata": [
        17299
      ],
      "ContextUpgradeable": [
        156044
      ],
      "ContractMetadata": [
        17526
      ],
      "CurrencyTransferLib": [
        63578
      ],
      "DelayedReveal": [
        17685
      ],
      "DropSinglePhase": [
        19497
      ],
      "ECDSAUpgradeable": [
        157055
      ],
      "EIP712Upgradeable": [
        157205
      ],
      "ERC165Upgradeable": [
        157249
      ],
      "ERC2771ContextUpgradeable": [
        45607
      ],
      "ERC721AUpgradeable": [
        102168
      ],
      "IClaimCondition": [
        32285
      ],
      "IContractMetadata": [
        32437
      ],
      "IDelayedReveal": [
        32468
      ],
      "IDropSinglePhase": [
        32707
      ],
      "IERC165": [
        13829
      ],
      "IERC165Upgradeable": [
        157261
      ],
      "IERC20": [
        13899
      ],
      "IERC2981": [
        13973
      ],
      "IERC2981Upgradeable": [
        150048
      ],
      "IERC721AUpgradeable": [
        102239
      ],
      "IERC721MetadataUpgradeable": [
        155478
      ],
      "IERC721ReceiverUpgradeable": [
        154946
      ],
      "IERC721Upgradeable": [
        155062
      ],
      "ILazyMint": [
        32812
      ],
      "IOwnable": [
        33183
      ],
      "IPermissions": [
        33256
      ],
      "IPermissionsEnumerable": [
        33281
      ],
      "IPlatformFee": [
        33324
      ],
      "IPrimarySale": [
        33345
      ],
      "IRoyalty": [
        33409
      ],
      "ISignatureMintERC721": [
        33903
      ],
      "IWETH": [
        54557
      ],
      "Initializable": [
        150199
      ],
      "LazyMint": [
        20261
      ],
      "MerkleProof": [
        63678
      ],
      "MulticallUpgradeable": [
        156227
      ],
      "Ownable": [
        21153
      ],
      "Permissions": [
        21500
      ],
      "PermissionsEnumerable": [
        21799
      ],
      "PlatformFee": [
        22005
      ],
      "PrimarySale": [
        22067
      ],
      "Royalty": [
        22395
      ],
      "SafeERC20": [
        48369
      ],
      "SignatureDrop": [
        89889
      ],
      "SignatureMintERC721Upgradeable": [
        24157
      ],
      "StringsUpgradeable": [
        156453
      ],
      "TWAddress": [
        64152
      ],
      "TWStrings": [
        64852
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:13725:367",
    "nodes": [
      {
        "id": 89042,
        "nodeType": "PragmaDirective",
        "src": "39:24:367",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".11"
        ]
      },
      {
        "id": 89043,
        "nodeType": "ImportDirective",
        "src": "775:76:367",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/utils/MulticallUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/utils/MulticallUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 89890,
        "sourceUnit": 156228,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 89044,
        "nodeType": "ImportDirective",
        "src": "852:74:367",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 89890,
        "sourceUnit": 156454,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 89045,
        "nodeType": "ImportDirective",
        "src": "927:80:367",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC2981Upgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/interfaces/IERC2981Upgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 89890,
        "sourceUnit": 150049,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 89046,
        "nodeType": "ImportDirective",
        "src": "1009:62:367",
        "nodes": [],
        "absolutePath": "lib/ERC721A-Upgradeable/contracts/ERC721AUpgradeable.sol",
        "file": "erc721a-upgradeable/contracts/ERC721AUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 89890,
        "sourceUnit": 102169,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 89047,
        "nodeType": "ImportDirective",
        "src": "1121:79:367",
        "nodes": [],
        "absolutePath": "contracts/external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol",
        "file": "../../external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 89890,
        "sourceUnit": 45608,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 89048,
        "nodeType": "ImportDirective",
        "src": "1201:43:367",
        "nodes": [],
        "absolutePath": "contracts/lib/CurrencyTransferLib.sol",
        "file": "../../lib/CurrencyTransferLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 89890,
        "sourceUnit": 63579,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 89049,
        "nodeType": "ImportDirective",
        "src": "1286:46:367",
        "nodes": [],
        "absolutePath": "contracts/extension/ContractMetadata.sol",
        "file": "../../extension/ContractMetadata.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 89890,
        "sourceUnit": 17527,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 89050,
        "nodeType": "ImportDirective",
        "src": "1333:41:367",
        "nodes": [],
        "absolutePath": "contracts/extension/PlatformFee.sol",
        "file": "../../extension/PlatformFee.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 89890,
        "sourceUnit": 22006,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 89051,
        "nodeType": "ImportDirective",
        "src": "1375:37:367",
        "nodes": [],
        "absolutePath": "contracts/extension/Royalty.sol",
        "file": "../../extension/Royalty.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 89890,
        "sourceUnit": 22396,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 89052,
        "nodeType": "ImportDirective",
        "src": "1413:41:367",
        "nodes": [],
        "absolutePath": "contracts/extension/PrimarySale.sol",
        "file": "../../extension/PrimarySale.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 89890,
        "sourceUnit": 22068,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 89053,
        "nodeType": "ImportDirective",
        "src": "1455:37:367",
        "nodes": [],
        "absolutePath": "contracts/extension/Ownable.sol",
        "file": "../../extension/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 89890,
        "sourceUnit": 21154,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 89054,
        "nodeType": "ImportDirective",
        "src": "1493:43:367",
        "nodes": [],
        "absolutePath": "contracts/extension/DelayedReveal.sol",
        "file": "../../extension/DelayedReveal.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 89890,
        "sourceUnit": 17686,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 89055,
        "nodeType": "ImportDirective",
        "src": "1537:38:367",
        "nodes": [],
        "absolutePath": "contracts/extension/LazyMint.sol",
        "file": "../../extension/LazyMint.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 89890,
        "sourceUnit": 20262,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 89056,
        "nodeType": "ImportDirective",
        "src": "1576:51:367",
        "nodes": [],
        "absolutePath": "contracts/extension/PermissionsEnumerable.sol",
        "file": "../../extension/PermissionsEnumerable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 89890,
        "sourceUnit": 21800,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 89057,
        "nodeType": "ImportDirective",
        "src": "1628:45:367",
        "nodes": [],
        "absolutePath": "contracts/extension/DropSinglePhase.sol",
        "file": "../../extension/DropSinglePhase.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 89890,
        "sourceUnit": 19498,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 89058,
        "nodeType": "ImportDirective",
        "src": "1674:60:367",
        "nodes": [],
        "absolutePath": "contracts/extension/SignatureMintERC721Upgradeable.sol",
        "file": "../../extension/SignatureMintERC721Upgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 89890,
        "sourceUnit": 24158,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 89889,
        "nodeType": "ContractDefinition",
        "src": "1736:12027:367",
        "nodes": [
          {
            "id": 89089,
            "nodeType": "UsingForDirective",
            "src": "2066:37:367",
            "nodes": [],
            "libraryName": {
              "id": 89087,
              "name": "StringsUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 156453,
              "src": "2072:18:367"
            },
            "typeName": {
              "id": 89088,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2095:7:367",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 89092,
            "nodeType": "VariableDeclaration",
            "src": "2396:28:367",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 89090,
              "nodeType": "StructuredDocumentation",
              "src": "2293:98:367",
              "text": "@dev Only transfers to or from TRANSFER_ROLE holders are valid, when transfers are restricted."
            },
            "mutability": "mutable",
            "name": "transferRole",
            "nameLocation": "2412:12:367",
            "scope": 89889,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 89091,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2396:7:367",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "id": 89095,
            "nodeType": "VariableDeclaration",
            "src": "2521:26:367",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 89093,
              "nodeType": "StructuredDocumentation",
              "src": "2430:86:367",
              "text": "@dev Only MINTER_ROLE holders can sign off on `MintRequest`s and lazy mint tokens."
            },
            "mutability": "mutable",
            "name": "minterRole",
            "nameLocation": "2537:10:367",
            "scope": 89889,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 89094,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2521:7:367",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "id": 89099,
            "nodeType": "VariableDeclaration",
            "src": "2599:41:367",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 89096,
              "nodeType": "StructuredDocumentation",
              "src": "2554:40:367",
              "text": "@dev Max bps in the thirdweb system."
            },
            "mutability": "constant",
            "name": "MAX_BPS",
            "nameLocation": "2624:7:367",
            "scope": 89889,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 89097,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2599:7:367",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31305f303030",
              "id": 89098,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2634:6:367",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000_by_1",
                "typeString": "int_const 10000"
              },
              "value": "10_000"
            },
            "visibility": "private"
          },
          {
            "id": 89204,
            "nodeType": "FunctionDefinition",
            "src": "2898:1257:367",
            "nodes": [],
            "body": {
              "id": 89203,
              "nodeType": "Block",
              "src": "3285:870:367",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    89127
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 89127,
                      "mutability": "mutable",
                      "name": "_transferRole",
                      "nameLocation": "3303:13:367",
                      "nodeType": "VariableDeclaration",
                      "scope": 89203,
                      "src": "3295:21:367",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 89126,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3295:7:367",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 89131,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "5452414e534645525f524f4c45",
                        "id": 89129,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3329:15:367",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c",
                          "typeString": "literal_string \"TRANSFER_ROLE\""
                        },
                        "value": "TRANSFER_ROLE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c",
                          "typeString": "literal_string \"TRANSFER_ROLE\""
                        }
                      ],
                      "id": 89128,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "3319:9:367",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 89130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3319:26:367",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3295:50:367"
                },
                {
                  "assignments": [
                    89133
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 89133,
                      "mutability": "mutable",
                      "name": "_minterRole",
                      "nameLocation": "3363:11:367",
                      "nodeType": "VariableDeclaration",
                      "scope": 89203,
                      "src": "3355:19:367",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 89132,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3355:7:367",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 89137,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "4d494e5445525f524f4c45",
                        "id": 89135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3387:13:367",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                          "typeString": "literal_string \"MINTER_ROLE\""
                        },
                        "value": "MINTER_ROLE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                          "typeString": "literal_string \"MINTER_ROLE\""
                        }
                      ],
                      "id": 89134,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "3377:9:367",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 89136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3377:24:367",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3355:46:367"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89139,
                        "name": "_trustedForwarders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89111,
                        "src": "3509:18:367",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      ],
                      "id": 89138,
                      "name": "__ERC2771Context_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45514,
                      "src": "3487:21:367",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address[] memory)"
                      }
                    },
                    "id": 89140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3487:41:367",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89141,
                  "nodeType": "ExpressionStatement",
                  "src": "3487:41:367"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89143,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89104,
                        "src": "3553:5:367",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 89144,
                        "name": "_symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89106,
                        "src": "3560:7:367",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 89142,
                      "name": "__ERC721A_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100836,
                      "src": "3538:14:367",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 89145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3538:30:367",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89146,
                  "nodeType": "ExpressionStatement",
                  "src": "3538:30:367"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 89147,
                      "name": "__SignatureMintERC721_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23968,
                      "src": "3578:26:367",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 89148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3578:28:367",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89149,
                  "nodeType": "ExpressionStatement",
                  "src": "3578:28:367"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89151,
                        "name": "_contractURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89108,
                        "src": "3635:12:367",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 89150,
                      "name": "_setupContractURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17519,
                      "src": "3617:17:367",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 89152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3617:31:367",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89153,
                  "nodeType": "ExpressionStatement",
                  "src": "3617:31:367"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89155,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89102,
                        "src": "3670:13:367",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 89154,
                      "name": "_setupOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21146,
                      "src": "3658:11:367",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 89156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3658:26:367",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89157,
                  "nodeType": "ExpressionStatement",
                  "src": "3658:26:367"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89159,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21176,
                        "src": "3706:18:367",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 89160,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89102,
                        "src": "3726:13:367",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 89158,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        21723
                      ],
                      "referencedDeclaration": 21723,
                      "src": "3695:10:367",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 89161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3695:45:367",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89162,
                  "nodeType": "ExpressionStatement",
                  "src": "3695:45:367"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89164,
                        "name": "_minterRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89133,
                        "src": "3761:11:367",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 89165,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89102,
                        "src": "3774:13:367",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 89163,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        21723
                      ],
                      "referencedDeclaration": 21723,
                      "src": "3750:10:367",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 89166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3750:38:367",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89167,
                  "nodeType": "ExpressionStatement",
                  "src": "3750:38:367"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89169,
                        "name": "_transferRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89127,
                        "src": "3809:13:367",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 89170,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89102,
                        "src": "3824:13:367",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 89168,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        21723
                      ],
                      "referencedDeclaration": 21723,
                      "src": "3798:10:367",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 89171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3798:40:367",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89172,
                  "nodeType": "ExpressionStatement",
                  "src": "3798:40:367"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89174,
                        "name": "_transferRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89127,
                        "src": "3859:13:367",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 89177,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3882:1:367",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 89176,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3874:7:367",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 89175,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3874:7:367",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 89178,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3874:10:367",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 89173,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        21723
                      ],
                      "referencedDeclaration": 21723,
                      "src": "3848:10:367",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 89179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3848:37:367",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89180,
                  "nodeType": "ExpressionStatement",
                  "src": "3848:37:367"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89182,
                        "name": "_platformFeeRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89121,
                        "src": "3918:21:367",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 89183,
                        "name": "_platformFeeBps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89119,
                        "src": "3941:15:367",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 89181,
                      "name": "_setupPlatformFeeInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21916,
                      "src": "3896:21:367",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 89184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3896:61:367",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89185,
                  "nodeType": "ExpressionStatement",
                  "src": "3896:61:367"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89187,
                        "name": "_royaltyRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89115,
                        "src": "3992:17:367",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 89188,
                        "name": "_royaltyBps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89117,
                        "src": "4011:11:367",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 89186,
                      "name": "_setupDefaultRoyaltyInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22326,
                      "src": "3967:24:367",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 89189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3967:56:367",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89190,
                  "nodeType": "ExpressionStatement",
                  "src": "3967:56:367"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89192,
                        "name": "_saleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89113,
                        "src": "4060:14:367",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 89191,
                      "name": "_setupPrimarySaleRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22060,
                      "src": "4033:26:367",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 89193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4033:42:367",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89194,
                  "nodeType": "ExpressionStatement",
                  "src": "4033:42:367"
                },
                {
                  "expression": {
                    "id": 89197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 89195,
                      "name": "transferRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89092,
                      "src": "4086:12:367",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 89196,
                      "name": "_transferRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89127,
                      "src": "4101:13:367",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "4086:28:367",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 89198,
                  "nodeType": "ExpressionStatement",
                  "src": "4086:28:367"
                },
                {
                  "expression": {
                    "id": 89201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 89199,
                      "name": "minterRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89095,
                      "src": "4124:10:367",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 89200,
                      "name": "_minterRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89133,
                      "src": "4137:11:367",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "4124:24:367",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 89202,
                  "nodeType": "ExpressionStatement",
                  "src": "4124:24:367"
                }
              ]
            },
            "documentation": {
              "id": 89100,
              "nodeType": "StructuredDocumentation",
              "src": "2839:54:367",
              "text": "@dev Initializes the contract, like a constructor."
            },
            "functionSelector": "e1591634",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 89124,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 89123,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 150119,
                  "src": "3273:11:367"
                },
                "nodeType": "ModifierInvocation",
                "src": "3273:11:367"
              }
            ],
            "name": "initialize",
            "nameLocation": "2907:10:367",
            "parameters": {
              "id": 89122,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89102,
                  "mutability": "mutable",
                  "name": "_defaultAdmin",
                  "nameLocation": "2935:13:367",
                  "nodeType": "VariableDeclaration",
                  "scope": 89204,
                  "src": "2927:21:367",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 89101,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2927:7:367",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89104,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "2972:5:367",
                  "nodeType": "VariableDeclaration",
                  "scope": 89204,
                  "src": "2958:19:367",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 89103,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2958:6:367",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89106,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "3001:7:367",
                  "nodeType": "VariableDeclaration",
                  "scope": 89204,
                  "src": "2987:21:367",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 89105,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2987:6:367",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89108,
                  "mutability": "mutable",
                  "name": "_contractURI",
                  "nameLocation": "3032:12:367",
                  "nodeType": "VariableDeclaration",
                  "scope": 89204,
                  "src": "3018:26:367",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 89107,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3018:6:367",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89111,
                  "mutability": "mutable",
                  "name": "_trustedForwarders",
                  "nameLocation": "3071:18:367",
                  "nodeType": "VariableDeclaration",
                  "scope": 89204,
                  "src": "3054:35:367",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 89109,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3054:7:367",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 89110,
                    "nodeType": "ArrayTypeName",
                    "src": "3054:9:367",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89113,
                  "mutability": "mutable",
                  "name": "_saleRecipient",
                  "nameLocation": "3107:14:367",
                  "nodeType": "VariableDeclaration",
                  "scope": 89204,
                  "src": "3099:22:367",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 89112,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3099:7:367",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89115,
                  "mutability": "mutable",
                  "name": "_royaltyRecipient",
                  "nameLocation": "3139:17:367",
                  "nodeType": "VariableDeclaration",
                  "scope": 89204,
                  "src": "3131:25:367",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 89114,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3131:7:367",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89117,
                  "mutability": "mutable",
                  "name": "_royaltyBps",
                  "nameLocation": "3174:11:367",
                  "nodeType": "VariableDeclaration",
                  "scope": 89204,
                  "src": "3166:19:367",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 89116,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "3166:7:367",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89119,
                  "mutability": "mutable",
                  "name": "_platformFeeBps",
                  "nameLocation": "3203:15:367",
                  "nodeType": "VariableDeclaration",
                  "scope": 89204,
                  "src": "3195:23:367",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 89118,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "3195:7:367",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89121,
                  "mutability": "mutable",
                  "name": "_platformFeeRecipient",
                  "nameLocation": "3236:21:367",
                  "nodeType": "VariableDeclaration",
                  "scope": 89204,
                  "src": "3228:29:367",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 89120,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3228:7:367",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2917:346:367"
            },
            "returnParameters": {
              "id": 89125,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3285:0:367"
            },
            "scope": 89889,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 89252,
            "nodeType": "FunctionDefinition",
            "src": "4402:402:367",
            "nodes": [],
            "body": {
              "id": 89251,
              "nodeType": "Block",
              "src": "4483:321:367",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    89214,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 89214,
                      "mutability": "mutable",
                      "name": "batchId",
                      "nameLocation": "4502:7:367",
                      "nodeType": "VariableDeclaration",
                      "scope": 89251,
                      "src": "4494:15:367",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 89213,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4494:7:367",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 89218,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 89216,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89207,
                        "src": "4527:8:367",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 89215,
                      "name": "_getBatchId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17090,
                      "src": "4515:11:367",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256,uint256)"
                      }
                    },
                    "id": 89217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4515:21:367",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4493:43:367"
                },
                {
                  "assignments": [
                    89220
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 89220,
                      "mutability": "mutable",
                      "name": "batchUri",
                      "nameLocation": "4560:8:367",
                      "nodeType": "VariableDeclaration",
                      "scope": 89251,
                      "src": "4546:22:367",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 89219,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "4546:6:367",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 89224,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 89222,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89207,
                        "src": "4583:8:367",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 89221,
                      "name": "_getBaseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17141,
                      "src": "4571:11:367",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (uint256) view returns (string memory)"
                      }
                    },
                    "id": 89223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4571:21:367",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4546:46:367"
                },
                {
                  "condition": {
                    "arguments": [
                      {
                        "id": 89226,
                        "name": "batchId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89214,
                        "src": "4624:7:367",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 89225,
                      "name": "isEncryptedBatch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17684,
                      "src": "4607:16:367",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) view returns (bool)"
                      }
                    },
                    "id": 89227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4607:25:367",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 89249,
                    "nodeType": "Block",
                    "src": "4711:87:367",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 89242,
                                  "name": "batchUri",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 89220,
                                  "src": "4756:8:367",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "id": 89243,
                                      "name": "_tokenId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 89207,
                                      "src": "4766:8:367",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 89244,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "toString",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 156315,
                                    "src": "4766:17:367",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256) pure returns (string memory)"
                                    }
                                  },
                                  "id": 89245,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4766:19:367",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "id": 89240,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "4739:3:367",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 89241,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "4739:16:367",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 89246,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4739:47:367",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 89239,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4732:6:367",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                              "typeString": "type(string storage pointer)"
                            },
                            "typeName": {
                              "id": 89238,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "4732:6:367",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 89247,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4732:55:367",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 89212,
                        "id": 89248,
                        "nodeType": "Return",
                        "src": "4725:62:367"
                      }
                    ]
                  },
                  "id": 89250,
                  "nodeType": "IfStatement",
                  "src": "4603:195:367",
                  "trueBody": {
                    "id": 89237,
                    "nodeType": "Block",
                    "src": "4634:71:367",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 89232,
                                  "name": "batchUri",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 89220,
                                  "src": "4679:8:367",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                {
                                  "hexValue": "30",
                                  "id": 89233,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4689:3:367",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
                                    "typeString": "literal_string \"0\""
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
                                    "typeString": "literal_string \"0\""
                                  }
                                ],
                                "expression": {
                                  "id": 89230,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "4662:3:367",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 89231,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "4662:16:367",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 89234,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4662:31:367",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 89229,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4655:6:367",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                              "typeString": "type(string storage pointer)"
                            },
                            "typeName": {
                              "id": 89228,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "4655:6:367",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 89235,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4655:39:367",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 89212,
                        "id": 89236,
                        "nodeType": "Return",
                        "src": "4648:46:367"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              101172
            ],
            "documentation": {
              "id": 89205,
              "nodeType": "StructuredDocumentation",
              "src": "4352:45:367",
              "text": "@dev Returns the URI for a given tokenId."
            },
            "functionSelector": "c87b56dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "4411:8:367",
            "overrides": {
              "id": 89209,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4450:8:367"
            },
            "parameters": {
              "id": 89208,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89207,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "4428:8:367",
                  "nodeType": "VariableDeclaration",
                  "scope": 89252,
                  "src": "4420:16:367",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 89206,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4420:7:367",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4419:18:367"
            },
            "returnParameters": {
              "id": 89212,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89211,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 89252,
                  "src": "4468:13:367",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 89210,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4468:6:367",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4467:15:367"
            },
            "scope": 89889,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 89276,
            "nodeType": "FunctionDefinition",
            "src": "4835:280:367",
            "nodes": [],
            "body": {
              "id": 89275,
              "nodeType": "Block",
              "src": "4999:116:367",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 89273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 89265,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 89255,
                          "src": "5040:11:367",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 89263,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -25,
                          "src": "5016:5:367",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_SignatureDrop_$89889_$",
                            "typeString": "type(contract super SignatureDrop)"
                          }
                        },
                        "id": 89264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 100928,
                        "src": "5016:23:367",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view returns (bool)"
                        }
                      },
                      "id": 89266,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5016:36:367",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 89272,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 89268,
                              "name": "IERC2981Upgradeable",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 150048,
                              "src": "5061:19:367",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC2981Upgradeable_$150048_$",
                                "typeString": "type(contract IERC2981Upgradeable)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_IERC2981Upgradeable_$150048_$",
                                "typeString": "type(contract IERC2981Upgradeable)"
                              }
                            ],
                            "id": 89267,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "5056:4:367",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 89269,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5056:25:367",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_IERC2981Upgradeable_$150048",
                            "typeString": "type(contract IERC2981Upgradeable)"
                          }
                        },
                        "id": 89270,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "interfaceId",
                        "nodeType": "MemberAccess",
                        "src": "5056:37:367",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 89271,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89255,
                        "src": "5097:11:367",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "src": "5056:52:367",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5016:92:367",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 89262,
                  "id": 89274,
                  "nodeType": "Return",
                  "src": "5009:99:367"
                }
              ]
            },
            "baseFunctions": [
              13828,
              100928
            ],
            "documentation": {
              "id": 89253,
              "nodeType": "StructuredDocumentation",
              "src": "4810:20:367",
              "text": "@dev See ERC 165"
            },
            "functionSelector": "01ffc9a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "4844:17:367",
            "overrides": {
              "id": 89259,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 89257,
                  "name": "ERC721AUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 102168,
                  "src": "4943:18:367"
                },
                {
                  "id": 89258,
                  "name": "IERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 13829,
                  "src": "4963:7:367"
                }
              ],
              "src": "4934:37:367"
            },
            "parameters": {
              "id": 89256,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89255,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "4869:11:367",
                  "nodeType": "VariableDeclaration",
                  "scope": 89276,
                  "src": "4862:18:367",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 89254,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "4862:6:367",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4861:20:367"
            },
            "returnParameters": {
              "id": 89262,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89261,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 89276,
                  "src": "4989:4:367",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 89260,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4989:4:367",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4988:6:367"
            },
            "scope": 89889,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 89287,
            "nodeType": "FunctionDefinition",
            "src": "5121:104:367",
            "nodes": [],
            "body": {
              "id": 89286,
              "nodeType": "Block",
              "src": "5177:48:367",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "5369676e617475726544726f70",
                        "id": 89283,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5202:15:367",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_92828575e6bcb5e8794986487d0a26561c24289f562f658bc2cd61cddc1c7e96",
                          "typeString": "literal_string \"SignatureDrop\""
                        },
                        "value": "SignatureDrop"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_92828575e6bcb5e8794986487d0a26561c24289f562f658bc2cd61cddc1c7e96",
                          "typeString": "literal_string \"SignatureDrop\""
                        }
                      ],
                      "id": 89282,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "5194:7:367",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes32_$",
                        "typeString": "type(bytes32)"
                      },
                      "typeName": {
                        "id": 89281,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5194:7:367",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 89284,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5194:24:367",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 89280,
                  "id": 89285,
                  "nodeType": "Return",
                  "src": "5187:31:367"
                }
              ]
            },
            "functionSelector": "cb2ef6f7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "contractType",
            "nameLocation": "5130:12:367",
            "parameters": {
              "id": 89277,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5142:2:367"
            },
            "returnParameters": {
              "id": 89280,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89279,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 89287,
                  "src": "5168:7:367",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 89278,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5168:7:367",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5167:9:367"
            },
            "scope": 89889,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 89298,
            "nodeType": "FunctionDefinition",
            "src": "5231:89:367",
            "nodes": [],
            "body": {
              "id": 89297,
              "nodeType": "Block",
              "src": "5288:32:367",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "35",
                        "id": 89294,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5311:1:367",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        },
                        "value": "5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        }
                      ],
                      "id": 89293,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "5305:5:367",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint8_$",
                        "typeString": "type(uint8)"
                      },
                      "typeName": {
                        "id": 89292,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "5305:5:367",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 89295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5305:8:367",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 89291,
                  "id": 89296,
                  "nodeType": "Return",
                  "src": "5298:15:367"
                }
              ]
            },
            "functionSelector": "a0a8e460",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "contractVersion",
            "nameLocation": "5240:15:367",
            "parameters": {
              "id": 89288,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5255:2:367"
            },
            "returnParameters": {
              "id": 89291,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89290,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 89298,
                  "src": "5281:5:367",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 89289,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "5281:5:367",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5280:7:367"
            },
            "scope": 89889,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 89356,
            "nodeType": "FunctionDefinition",
            "src": "5694:540:367",
            "nodes": [],
            "body": {
              "id": 89355,
              "nodeType": "Block",
              "src": "5858:376:367",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 89314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 89311,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89305,
                        "src": "5872:5:367",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      "id": 89312,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "5872:12:367",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 89313,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5887:1:367",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5872:16:367",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 89347,
                  "nodeType": "IfStatement",
                  "src": "5868:293:367",
                  "trueBody": {
                    "id": 89346,
                    "nodeType": "Block",
                    "src": "5890:271:367",
                    "statements": [
                      {
                        "assignments": [
                          89316,
                          89318
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 89316,
                            "mutability": "mutable",
                            "name": "encryptedURI",
                            "nameLocation": "5918:12:367",
                            "nodeType": "VariableDeclaration",
                            "scope": 89346,
                            "src": "5905:25:367",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 89315,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "5905:5:367",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 89318,
                            "mutability": "mutable",
                            "name": "provenanceHash",
                            "nameLocation": "5940:14:367",
                            "nodeType": "VariableDeclaration",
                            "scope": 89346,
                            "src": "5932:22:367",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 89317,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "5932:7:367",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 89328,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 89321,
                              "name": "_data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 89305,
                              "src": "5969:5:367",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            },
                            {
                              "components": [
                                {
                                  "id": 89323,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5977:5:367",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                    "typeString": "type(bytes storage pointer)"
                                  },
                                  "typeName": {
                                    "id": 89322,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5977:5:367",
                                    "typeDescriptions": {}
                                  }
                                },
                                {
                                  "id": 89325,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5984:7:367",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bytes32_$",
                                    "typeString": "type(bytes32)"
                                  },
                                  "typeName": {
                                    "id": 89324,
                                    "name": "bytes32",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5984:7:367",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "id": 89326,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "5976:16:367",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_type$_t_bytes_storage_ptr_$_$_t_type$_t_bytes32_$_$",
                                "typeString": "tuple(type(bytes storage pointer),type(bytes32))"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              },
                              {
                                "typeIdentifier": "t_tuple$_t_type$_t_bytes_storage_ptr_$_$_t_type$_t_bytes32_$_$",
                                "typeString": "tuple(type(bytes storage pointer),type(bytes32))"
                              }
                            ],
                            "expression": {
                              "id": 89319,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "5958:3:367",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 89320,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "decode",
                            "nodeType": "MemberAccess",
                            "src": "5958:10:367",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 89327,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5958:35:367",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bytes_memory_ptr_$_t_bytes32_$",
                            "typeString": "tuple(bytes memory,bytes32)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5904:89:367"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 89336,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 89332,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 89329,
                                "name": "encryptedURI",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 89316,
                                "src": "6011:12:367",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              "id": 89330,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "6011:19:367",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 89331,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6034:1:367",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "6011:24:367",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "id": 89335,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 89333,
                              "name": "provenanceHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 89318,
                              "src": "6039:14:367",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "hexValue": "",
                              "id": 89334,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6057:2:367",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            },
                            "src": "6039:20:367",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "6011:48:367",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 89345,
                        "nodeType": "IfStatement",
                        "src": "6007:144:367",
                        "trueBody": {
                          "id": 89344,
                          "nodeType": "Block",
                          "src": "6061:90:367",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 89340,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 89338,
                                      "name": "nextTokenIdToLazyMint",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 20195,
                                      "src": "6097:21:367",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "+",
                                    "rightExpression": {
                                      "id": 89339,
                                      "name": "_amount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 89301,
                                      "src": "6121:7:367",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "6097:31:367",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 89341,
                                    "name": "_data",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 89305,
                                    "src": "6130:5:367",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_calldata_ptr",
                                      "typeString": "bytes calldata"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_calldata_ptr",
                                      "typeString": "bytes calldata"
                                    }
                                  ],
                                  "id": 89337,
                                  "name": "_setEncryptedData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 17552,
                                  "src": "6079:17:367",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                                    "typeString": "function (uint256,bytes memory)"
                                  }
                                },
                                "id": 89342,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6079:57:367",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 89343,
                              "nodeType": "ExpressionStatement",
                              "src": "6079:57:367"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89350,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89301,
                        "src": "6193:7:367",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 89351,
                        "name": "_baseURIForTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89303,
                        "src": "6202:17:367",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 89352,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89305,
                        "src": "6221:5:367",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "expression": {
                        "id": 89348,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "6178:5:367",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_SignatureDrop_$89889_$",
                          "typeString": "type(contract super SignatureDrop)"
                        }
                      },
                      "id": 89349,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "lazyMint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20254,
                      "src": "6178:14:367",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_uint256_$",
                        "typeString": "function (uint256,string calldata,bytes calldata) returns (uint256)"
                      }
                    },
                    "id": 89353,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6178:49:367",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 89310,
                  "id": 89354,
                  "nodeType": "Return",
                  "src": "6171:56:367"
                }
              ]
            },
            "baseFunctions": [
              20254
            ],
            "documentation": {
              "id": 89299,
              "nodeType": "StructuredDocumentation",
              "src": "5522:167:367",
              "text": "  @dev Lets an account with `MINTER_ROLE` lazy mint 'n' NFTs.\n       The URIs for each token is the provided `_baseURIForTokens` + `{tokenId}`."
            },
            "functionSelector": "d37c353b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "lazyMint",
            "nameLocation": "5703:8:367",
            "overrides": {
              "id": 89307,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5823:8:367"
            },
            "parameters": {
              "id": 89306,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89301,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "5729:7:367",
                  "nodeType": "VariableDeclaration",
                  "scope": 89356,
                  "src": "5721:15:367",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 89300,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5721:7:367",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89303,
                  "mutability": "mutable",
                  "name": "_baseURIForTokens",
                  "nameLocation": "5762:17:367",
                  "nodeType": "VariableDeclaration",
                  "scope": 89356,
                  "src": "5746:33:367",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 89302,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5746:6:367",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89305,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "5804:5:367",
                  "nodeType": "VariableDeclaration",
                  "scope": 89356,
                  "src": "5789:20:367",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 89304,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5789:5:367",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5711:104:367"
            },
            "returnParameters": {
              "id": 89310,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89309,
                  "mutability": "mutable",
                  "name": "batchId",
                  "nameLocation": "5849:7:367",
                  "nodeType": "VariableDeclaration",
                  "scope": 89356,
                  "src": "5841:15:367",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 89308,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5841:7:367",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5840:17:367"
            },
            "scope": 89889,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 89398,
            "nodeType": "FunctionDefinition",
            "src": "6341:395:367",
            "nodes": [],
            "body": {
              "id": 89397,
              "nodeType": "Block",
              "src": "6488:248:367",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    89370
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 89370,
                      "mutability": "mutable",
                      "name": "batchId",
                      "nameLocation": "6506:7:367",
                      "nodeType": "VariableDeclaration",
                      "scope": 89397,
                      "src": "6498:15:367",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 89369,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6498:7:367",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 89374,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 89372,
                        "name": "_index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89359,
                        "src": "6534:6:367",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 89371,
                      "name": "getBatchIdAtIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17029,
                      "src": "6516:17:367",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 89373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6516:25:367",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6498:43:367"
                },
                {
                  "expression": {
                    "id": 89380,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 89375,
                      "name": "revealedURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89367,
                      "src": "6551:11:367",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 89377,
                          "name": "batchId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 89370,
                          "src": "6578:7:367",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 89378,
                          "name": "_key",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 89361,
                          "src": "6587:4:367",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        ],
                        "id": 89376,
                        "name": "getRevealURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17618,
                        "src": "6565:12:367",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_string_memory_ptr_$",
                          "typeString": "function (uint256,bytes calldata) view returns (string memory)"
                        }
                      },
                      "id": 89379,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6565:27:367",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "6551:41:367",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 89381,
                  "nodeType": "ExpressionStatement",
                  "src": "6551:41:367"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89383,
                        "name": "batchId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89370,
                        "src": "6621:7:367",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 89384,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6630:2:367",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 89382,
                      "name": "_setEncryptedData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17552,
                      "src": "6603:17:367",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,bytes memory)"
                      }
                    },
                    "id": 89385,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6603:30:367",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89386,
                  "nodeType": "ExpressionStatement",
                  "src": "6603:30:367"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89388,
                        "name": "batchId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89370,
                        "src": "6655:7:367",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 89389,
                        "name": "revealedURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89367,
                        "src": "6664:11:367",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 89387,
                      "name": "_setBaseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17228,
                      "src": "6643:11:367",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 89390,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6643:33:367",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89391,
                  "nodeType": "ExpressionStatement",
                  "src": "6643:33:367"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 89393,
                        "name": "_index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89359,
                        "src": "6709:6:367",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 89394,
                        "name": "revealedURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89367,
                        "src": "6717:11:367",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 89392,
                      "name": "TokenURIRevealed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32447,
                      "src": "6692:16:367",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 89395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6692:37:367",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89396,
                  "nodeType": "EmitStatement",
                  "src": "6687:42:367"
                }
              ]
            },
            "baseFunctions": [
              32457
            ],
            "documentation": {
              "id": 89357,
              "nodeType": "StructuredDocumentation",
              "src": "6240:96:367",
              "text": "@dev Lets an account with `MINTER_ROLE` reveal the URI for a batch of 'delayed-reveal' NFTs."
            },
            "functionSelector": "ce805642",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 89364,
                    "name": "minterRole",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 89095,
                    "src": "6428:10:367",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 89365,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 89363,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21189,
                  "src": "6419:8:367"
                },
                "nodeType": "ModifierInvocation",
                "src": "6419:20:367"
              }
            ],
            "name": "reveal",
            "nameLocation": "6350:6:367",
            "parameters": {
              "id": 89362,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89359,
                  "mutability": "mutable",
                  "name": "_index",
                  "nameLocation": "6365:6:367",
                  "nodeType": "VariableDeclaration",
                  "scope": 89398,
                  "src": "6357:14:367",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 89358,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6357:7:367",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89361,
                  "mutability": "mutable",
                  "name": "_key",
                  "nameLocation": "6388:4:367",
                  "nodeType": "VariableDeclaration",
                  "scope": 89398,
                  "src": "6373:19:367",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 89360,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6373:5:367",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6356:37:367"
            },
            "returnParameters": {
              "id": 89368,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89367,
                  "mutability": "mutable",
                  "name": "revealedURI",
                  "nameLocation": "6471:11:367",
                  "nodeType": "VariableDeclaration",
                  "scope": 89398,
                  "src": "6457:25:367",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 89366,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6457:6:367",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6456:27:367"
            },
            "scope": 89889,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 89484,
            "nodeType": "FunctionDefinition",
            "src": "6989:947:367",
            "nodes": [],
            "body": {
              "id": 89483,
              "nodeType": "Block",
              "src": "7140:796:367",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    89410
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 89410,
                      "mutability": "mutable",
                      "name": "tokenIdToMint",
                      "nameLocation": "7158:13:367",
                      "nodeType": "VariableDeclaration",
                      "scope": 89483,
                      "src": "7150:21:367",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 89409,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7150:7:367",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 89412,
                  "initialValue": {
                    "id": 89411,
                    "name": "_currentIndex",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 100795,
                    "src": "7174:13:367",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7150:37:367"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 89418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 89416,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 89413,
                        "name": "tokenIdToMint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89410,
                        "src": "7201:13:367",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "expression": {
                          "id": 89414,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 89402,
                          "src": "7217:4:367",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$33866_calldata_ptr",
                            "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                          }
                        },
                        "id": 89415,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "quantity",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 33855,
                        "src": "7217:13:367",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "7201:29:367",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 89417,
                      "name": "nextTokenIdToLazyMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20195,
                      "src": "7233:21:367",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7201:53:367",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 89424,
                  "nodeType": "IfStatement",
                  "src": "7197:101:367",
                  "trueBody": {
                    "id": 89423,
                    "nodeType": "Block",
                    "src": "7256:42:367",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "21546f6b656e73",
                              "id": 89420,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7277:9:367",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9c48d16b147323aabba55b2c5e21a0b7a88b05e59180ad9d2d4b243d721a30dd",
                                "typeString": "literal_string \"!Tokens\""
                              },
                              "value": "!Tokens"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_9c48d16b147323aabba55b2c5e21a0b7a88b05e59180ad9d2d4b243d721a30dd",
                                "typeString": "literal_string \"!Tokens\""
                              }
                            ],
                            "id": 89419,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -19,
                              -19
                            ],
                            "referencedDeclaration": -19,
                            "src": "7270:6:367",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 89421,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7270:17:367",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 89422,
                        "nodeType": "ExpressionStatement",
                        "src": "7270:17:367"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 89430,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 89425,
                      "name": "signer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89407,
                      "src": "7347:6:367",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 89427,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 89402,
                          "src": "7372:4:367",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$33866_calldata_ptr",
                            "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                          }
                        },
                        {
                          "id": 89428,
                          "name": "_signature",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 89404,
                          "src": "7378:10:367",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_MintRequest_$33866_calldata_ptr",
                            "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                          },
                          {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        ],
                        "id": 89426,
                        "name": "_processRequest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24091,
                        "src": "7356:15:367",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_MintRequest_$33866_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_address_$",
                          "typeString": "function (struct ISignatureMintERC721.MintRequest calldata,bytes calldata) returns (address)"
                        }
                      },
                      "id": 89429,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7356:33:367",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7347:42:367",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 89431,
                  "nodeType": "ExpressionStatement",
                  "src": "7347:42:367"
                },
                {
                  "assignments": [
                    89433
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 89433,
                      "mutability": "mutable",
                      "name": "receiver",
                      "nameLocation": "7408:8:367",
                      "nodeType": "VariableDeclaration",
                      "scope": 89483,
                      "src": "7400:16:367",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 89432,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7400:7:367",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 89436,
                  "initialValue": {
                    "expression": {
                      "id": 89434,
                      "name": "_req",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89402,
                      "src": "7419:4:367",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MintRequest_$33866_calldata_ptr",
                        "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                      }
                    },
                    "id": 89435,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "to",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 33845,
                    "src": "7419:7:367",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7400:26:367"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 89438,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 89402,
                          "src": "7483:4:367",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$33866_calldata_ptr",
                            "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                          }
                        },
                        "id": 89439,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "primarySaleRecipient",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 33851,
                        "src": "7483:25:367",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 89440,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 89402,
                          "src": "7510:4:367",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$33866_calldata_ptr",
                            "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                          }
                        },
                        "id": 89441,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "quantity",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 33855,
                        "src": "7510:13:367",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 89442,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 89402,
                          "src": "7525:4:367",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$33866_calldata_ptr",
                            "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                          }
                        },
                        "id": 89443,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "currency",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 33859,
                        "src": "7525:13:367",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 89444,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 89402,
                          "src": "7540:4:367",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$33866_calldata_ptr",
                            "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                          }
                        },
                        "id": 89445,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "pricePerToken",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 33857,
                        "src": "7540:18:367",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 89437,
                      "name": "_collectPriceOnClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        89620
                      ],
                      "referencedDeclaration": 89620,
                      "src": "7462:20:367",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,address,uint256)"
                      }
                    },
                    "id": 89446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7462:97:367",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89447,
                  "nodeType": "ExpressionStatement",
                  "src": "7462:97:367"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 89459,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 89454,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 89448,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 89402,
                          "src": "7615:4:367",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$33866_calldata_ptr",
                            "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                          }
                        },
                        "id": 89449,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "royaltyRecipient",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 33847,
                        "src": "7615:21:367",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 89452,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7648:1:367",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 89451,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7640:7:367",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 89450,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7640:7:367",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 89453,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7640:10:367",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "7615:35:367",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 89458,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 89455,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 89402,
                          "src": "7654:4:367",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$33866_calldata_ptr",
                            "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                          }
                        },
                        "id": 89456,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "royaltyBps",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 33849,
                        "src": "7654:15:367",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 89457,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7673:1:367",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "7654:20:367",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "7615:59:367",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 89469,
                  "nodeType": "IfStatement",
                  "src": "7611:170:367",
                  "trueBody": {
                    "id": 89468,
                    "nodeType": "Block",
                    "src": "7676:105:367",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 89461,
                              "name": "tokenIdToMint",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 89410,
                              "src": "7716:13:367",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 89462,
                                "name": "_req",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 89402,
                                "src": "7731:4:367",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_MintRequest_$33866_calldata_ptr",
                                  "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                                }
                              },
                              "id": 89463,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "royaltyRecipient",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 33847,
                              "src": "7731:21:367",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 89464,
                                "name": "_req",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 89402,
                                "src": "7754:4:367",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_MintRequest_$33866_calldata_ptr",
                                  "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                                }
                              },
                              "id": 89465,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "royaltyBps",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 33849,
                              "src": "7754:15:367",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 89460,
                            "name": "_setupRoyaltyInfoForToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22388,
                            "src": "7690:25:367",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,address,uint256)"
                            }
                          },
                          "id": 89466,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7690:80:367",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 89467,
                        "nodeType": "ExpressionStatement",
                        "src": "7690:80:367"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89471,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89433,
                        "src": "7825:8:367",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 89472,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 89402,
                          "src": "7835:4:367",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$33866_calldata_ptr",
                            "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                          }
                        },
                        "id": 89473,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "quantity",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 33855,
                        "src": "7835:13:367",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 89470,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        101413,
                        101576
                      ],
                      "referencedDeclaration": 101413,
                      "src": "7815:9:367",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 89474,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7815:34:367",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89475,
                  "nodeType": "ExpressionStatement",
                  "src": "7815:34:367"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 89477,
                        "name": "signer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89407,
                        "src": "7891:6:367",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 89478,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89433,
                        "src": "7899:8:367",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 89479,
                        "name": "tokenIdToMint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89410,
                        "src": "7909:13:367",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 89480,
                        "name": "_req",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89402,
                        "src": "7924:4:367",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MintRequest_$33866_calldata_ptr",
                          "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_MintRequest_$33866_calldata_ptr",
                          "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                        }
                      ],
                      "id": 89476,
                      "name": "TokensMintedWithSignature",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33878,
                      "src": "7865:25:367",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_struct$_MintRequest_$33866_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,struct ISignatureMintERC721.MintRequest memory)"
                      }
                    },
                    "id": 89481,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7865:64:367",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89482,
                  "nodeType": "EmitStatement",
                  "src": "7860:69:367"
                }
              ]
            },
            "baseFunctions": [
              33902
            ],
            "documentation": {
              "id": 89399,
              "nodeType": "StructuredDocumentation",
              "src": "6936:48:367",
              "text": "@dev Claim lazy minted tokens via signature."
            },
            "functionSelector": "439c7be5",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintWithSignature",
            "nameLocation": "6998:17:367",
            "parameters": {
              "id": 89405,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89402,
                  "mutability": "mutable",
                  "name": "_req",
                  "nameLocation": "7037:4:367",
                  "nodeType": "VariableDeclaration",
                  "scope": 89484,
                  "src": "7016:25:367",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_MintRequest_$33866_calldata_ptr",
                    "typeString": "struct ISignatureMintERC721.MintRequest"
                  },
                  "typeName": {
                    "id": 89401,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 89400,
                      "name": "MintRequest",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 33866,
                      "src": "7016:11:367"
                    },
                    "referencedDeclaration": 33866,
                    "src": "7016:11:367",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MintRequest_$33866_storage_ptr",
                      "typeString": "struct ISignatureMintERC721.MintRequest"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89404,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "7058:10:367",
                  "nodeType": "VariableDeclaration",
                  "scope": 89484,
                  "src": "7043:25:367",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 89403,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7043:5:367",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7015:54:367"
            },
            "returnParameters": {
              "id": 89408,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89407,
                  "mutability": "mutable",
                  "name": "signer",
                  "nameLocation": "7128:6:367",
                  "nodeType": "VariableDeclaration",
                  "scope": 89484,
                  "src": "7120:14:367",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 89406,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7120:7:367",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7119:16:367"
            },
            "scope": 89889,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 89512,
            "nodeType": "FunctionDefinition",
            "src": "8179:271:367",
            "nodes": [],
            "body": {
              "id": 89511,
              "nodeType": "Block",
              "src": "8363:87:367",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 89507,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 89505,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 89503,
                            "name": "_currentIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 100795,
                            "src": "8381:13:367",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 89504,
                            "name": "_quantity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89489,
                            "src": "8397:9:367",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8381:25:367",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 89506,
                          "name": "nextTokenIdToLazyMint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20195,
                          "src": "8410:21:367",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8381:50:367",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "21546f6b656e73",
                        "id": 89508,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8433:9:367",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9c48d16b147323aabba55b2c5e21a0b7a88b05e59180ad9d2d4b243d721a30dd",
                          "typeString": "literal_string \"!Tokens\""
                        },
                        "value": "!Tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9c48d16b147323aabba55b2c5e21a0b7a88b05e59180ad9d2d4b243d721a30dd",
                          "typeString": "literal_string \"!Tokens\""
                        }
                      ],
                      "id": 89502,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8373:7:367",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 89509,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8373:70:367",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89510,
                  "nodeType": "ExpressionStatement",
                  "src": "8373:70:367"
                }
              ]
            },
            "baseFunctions": [
              19451
            ],
            "documentation": {
              "id": 89485,
              "nodeType": "StructuredDocumentation",
              "src": "8125:49:367",
              "text": "@dev Runs before every `claim` function call."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeClaim",
            "nameLocation": "8188:12:367",
            "overrides": {
              "id": 89500,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8354:8:367"
            },
            "parameters": {
              "id": 89499,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89487,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 89512,
                  "src": "8210:7:367",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 89486,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8210:7:367",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89489,
                  "mutability": "mutable",
                  "name": "_quantity",
                  "nameLocation": "8235:9:367",
                  "nodeType": "VariableDeclaration",
                  "scope": 89512,
                  "src": "8227:17:367",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 89488,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8227:7:367",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89491,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 89512,
                  "src": "8254:7:367",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 89490,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8254:7:367",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89493,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 89512,
                  "src": "8271:7:367",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 89492,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8271:7:367",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89496,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 89512,
                  "src": "8288:23:367",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_AllowlistProof_$32661_calldata_ptr",
                    "typeString": "struct IDropSinglePhase.AllowlistProof"
                  },
                  "typeName": {
                    "id": 89495,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 89494,
                      "name": "AllowlistProof",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 32661,
                      "src": "8288:14:367"
                    },
                    "referencedDeclaration": 32661,
                    "src": "8288:14:367",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_AllowlistProof_$32661_storage_ptr",
                      "typeString": "struct IDropSinglePhase.AllowlistProof"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89498,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 89512,
                  "src": "8321:12:367",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 89497,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8321:5:367",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8200:139:367"
            },
            "returnParameters": {
              "id": 89501,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8363:0:367"
            },
            "scope": 89889,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 89620,
            "nodeType": "FunctionDefinition",
            "src": "8540:1061:367",
            "nodes": [],
            "body": {
              "id": 89619,
              "nodeType": "Block",
              "src": "8726:875:367",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 89527,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 89525,
                      "name": "_pricePerToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89521,
                      "src": "8740:14:367",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 89526,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8758:1:367",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8740:19:367",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 89538,
                  "nodeType": "IfStatement",
                  "src": "8736:103:367",
                  "trueBody": {
                    "id": 89537,
                    "nodeType": "Block",
                    "src": "8761:78:367",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 89532,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 89529,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "8783:3:367",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 89530,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "8783:9:367",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 89531,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8796:1:367",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "8783:14:367",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "2156616c7565",
                              "id": 89533,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8799:8:367",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_208006903b0d1b8c530b3b2de29e1f765aa4311b3f136f1a342e9de039eda1b1",
                                "typeString": "literal_string \"!Value\""
                              },
                              "value": "!Value"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_208006903b0d1b8c530b3b2de29e1f765aa4311b3f136f1a342e9de039eda1b1",
                                "typeString": "literal_string \"!Value\""
                              }
                            ],
                            "id": 89528,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "8775:7:367",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 89534,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8775:33:367",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 89535,
                        "nodeType": "ExpressionStatement",
                        "src": "8775:33:367"
                      },
                      {
                        "functionReturnParameters": 89524,
                        "id": 89536,
                        "nodeType": "Return",
                        "src": "8822:7:367"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    89540,
                    89542
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 89540,
                      "mutability": "mutable",
                      "name": "platformFeeRecipient",
                      "nameLocation": "8858:20:367",
                      "nodeType": "VariableDeclaration",
                      "scope": 89619,
                      "src": "8850:28:367",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 89539,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8850:7:367",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 89542,
                      "mutability": "mutable",
                      "name": "platformFeeBps",
                      "nameLocation": "8887:14:367",
                      "nodeType": "VariableDeclaration",
                      "scope": 89619,
                      "src": "8880:21:367",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "typeName": {
                        "id": 89541,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "8880:6:367",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 89545,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 89543,
                      "name": "getPlatformFeeInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21835,
                      "src": "8905:18:367",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$_t_uint16_$",
                        "typeString": "function () view returns (address,uint16)"
                      }
                    },
                    "id": 89544,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8905:20:367",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_uint16_$",
                      "typeString": "tuple(address,uint16)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8849:76:367"
                },
                {
                  "assignments": [
                    89547
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 89547,
                      "mutability": "mutable",
                      "name": "saleRecipient",
                      "nameLocation": "8944:13:367",
                      "nodeType": "VariableDeclaration",
                      "scope": 89619,
                      "src": "8936:21:367",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 89546,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8936:7:367",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 89558,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 89553,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 89548,
                        "name": "_primarySaleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89515,
                        "src": "8960:21:367",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 89551,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8993:1:367",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 89550,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8985:7:367",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 89549,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8985:7:367",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 89552,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8985:10:367",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "8960:35:367",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 89556,
                      "name": "_primarySaleRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89515,
                      "src": "9023:21:367",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 89557,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "8960:84:367",
                    "trueExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 89554,
                        "name": "primarySaleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22024,
                        "src": "8998:20:367",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 89555,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8998:22:367",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8936:108:367"
                },
                {
                  "assignments": [
                    89560
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 89560,
                      "mutability": "mutable",
                      "name": "totalPrice",
                      "nameLocation": "9063:10:367",
                      "nodeType": "VariableDeclaration",
                      "scope": 89619,
                      "src": "9055:18:367",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 89559,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9055:7:367",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 89564,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 89563,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 89561,
                      "name": "_quantityToClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89517,
                      "src": "9076:16:367",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 89562,
                      "name": "_pricePerToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89521,
                      "src": "9095:14:367",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9076:33:367",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9055:54:367"
                },
                {
                  "assignments": [
                    89566
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 89566,
                      "mutability": "mutable",
                      "name": "platformFees",
                      "nameLocation": "9127:12:367",
                      "nodeType": "VariableDeclaration",
                      "scope": 89619,
                      "src": "9119:20:367",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 89565,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9119:7:367",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 89573,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 89572,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 89569,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 89567,
                            "name": "totalPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89560,
                            "src": "9143:10:367",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 89568,
                            "name": "platformFeeBps",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89542,
                            "src": "9156:14:367",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "src": "9143:27:367",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 89570,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "9142:29:367",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 89571,
                      "name": "MAX_BPS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89099,
                      "src": "9174:7:367",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9142:39:367",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9119:62:367"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 89577,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 89574,
                      "name": "_currency",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89519,
                      "src": "9196:9:367",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 89575,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63578,
                        "src": "9209:19:367",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$63578_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 89576,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "NATIVE_TOKEN",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63346,
                      "src": "9209:32:367",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9196:45:367",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 89595,
                    "nodeType": "Block",
                    "src": "9316:58:367",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 89591,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 89588,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "9338:3:367",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 89589,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "9338:9:367",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 89590,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9351:1:367",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "9338:14:367",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "2156616c7565",
                              "id": 89592,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9354:8:367",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_208006903b0d1b8c530b3b2de29e1f765aa4311b3f136f1a342e9de039eda1b1",
                                "typeString": "literal_string \"!Value\""
                              },
                              "value": "!Value"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_208006903b0d1b8c530b3b2de29e1f765aa4311b3f136f1a342e9de039eda1b1",
                                "typeString": "literal_string \"!Value\""
                              }
                            ],
                            "id": 89587,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "9330:7:367",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 89593,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9330:33:367",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 89594,
                        "nodeType": "ExpressionStatement",
                        "src": "9330:33:367"
                      }
                    ]
                  },
                  "id": 89596,
                  "nodeType": "IfStatement",
                  "src": "9192:182:367",
                  "trueBody": {
                    "id": 89586,
                    "nodeType": "Block",
                    "src": "9243:67:367",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 89582,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 89579,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "9265:3:367",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 89580,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "9265:9:367",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 89581,
                                "name": "totalPrice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 89560,
                                "src": "9278:10:367",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "9265:23:367",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "215072696365",
                              "id": 89583,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9290:8:367",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_bf2cd4ca29b0d361fd2e18aeaa03f2728f51132b582540ddf36da9dad93be3d6",
                                "typeString": "literal_string \"!Price\""
                              },
                              "value": "!Price"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_bf2cd4ca29b0d361fd2e18aeaa03f2728f51132b582540ddf36da9dad93be3d6",
                                "typeString": "literal_string \"!Price\""
                              }
                            ],
                            "id": 89578,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "9257:7:367",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 89584,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9257:42:367",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 89585,
                        "nodeType": "ExpressionStatement",
                        "src": "9257:42:367"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89600,
                        "name": "_currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89519,
                        "src": "9421:9:367",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 89601,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            89875
                          ],
                          "referencedDeclaration": 89875,
                          "src": "9432:10:367",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 89602,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9432:12:367",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 89603,
                        "name": "platformFeeRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89540,
                        "src": "9446:20:367",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 89604,
                        "name": "platformFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89566,
                        "src": "9468:12:367",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 89597,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63578,
                        "src": "9384:19:367",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$63578_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 89599,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferCurrency",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63383,
                      "src": "9384:36:367",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 89605,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9384:97:367",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89606,
                  "nodeType": "ExpressionStatement",
                  "src": "9384:97:367"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89610,
                        "name": "_currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89519,
                        "src": "9528:9:367",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 89611,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            89875
                          ],
                          "referencedDeclaration": 89875,
                          "src": "9539:10:367",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 89612,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9539:12:367",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 89613,
                        "name": "saleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89547,
                        "src": "9553:13:367",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 89616,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 89614,
                          "name": "totalPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 89560,
                          "src": "9568:10:367",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 89615,
                          "name": "platformFees",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 89566,
                          "src": "9581:12:367",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9568:25:367",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 89607,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63578,
                        "src": "9491:19:367",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$63578_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 89609,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferCurrency",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63383,
                      "src": "9491:36:367",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 89617,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9491:103:367",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89618,
                  "nodeType": "ExpressionStatement",
                  "src": "9491:103:367"
                }
              ]
            },
            "baseFunctions": [
              19481
            ],
            "documentation": {
              "id": 89513,
              "nodeType": "StructuredDocumentation",
              "src": "8456:79:367",
              "text": "@dev Collects and distributes the primary sale value of NFTs being claimed."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_collectPriceOnClaim",
            "nameLocation": "8549:20:367",
            "overrides": {
              "id": 89523,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8717:8:367"
            },
            "parameters": {
              "id": 89522,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89515,
                  "mutability": "mutable",
                  "name": "_primarySaleRecipient",
                  "nameLocation": "8587:21:367",
                  "nodeType": "VariableDeclaration",
                  "scope": 89620,
                  "src": "8579:29:367",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 89514,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8579:7:367",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89517,
                  "mutability": "mutable",
                  "name": "_quantityToClaim",
                  "nameLocation": "8626:16:367",
                  "nodeType": "VariableDeclaration",
                  "scope": 89620,
                  "src": "8618:24:367",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 89516,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8618:7:367",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89519,
                  "mutability": "mutable",
                  "name": "_currency",
                  "nameLocation": "8660:9:367",
                  "nodeType": "VariableDeclaration",
                  "scope": 89620,
                  "src": "8652:17:367",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 89518,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8652:7:367",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89521,
                  "mutability": "mutable",
                  "name": "_pricePerToken",
                  "nameLocation": "8687:14:367",
                  "nodeType": "VariableDeclaration",
                  "scope": 89620,
                  "src": "8679:22:367",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 89520,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8679:7:367",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8569:138:367"
            },
            "returnParameters": {
              "id": 89524,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8726:0:367"
            },
            "scope": 89889,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 89641,
            "nodeType": "FunctionDefinition",
            "src": "9654:245:367",
            "nodes": [],
            "body": {
              "id": 89640,
              "nodeType": "Block",
              "src": "9807:92:367",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 89633,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 89631,
                      "name": "startTokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89629,
                      "src": "9817:12:367",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 89632,
                      "name": "_currentIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100795,
                      "src": "9832:13:367",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9817:28:367",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 89634,
                  "nodeType": "ExpressionStatement",
                  "src": "9817:28:367"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89636,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89623,
                        "src": "9865:3:367",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 89637,
                        "name": "_quantityBeingClaimed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89625,
                        "src": "9870:21:367",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 89635,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        101413,
                        101576
                      ],
                      "referencedDeclaration": 101413,
                      "src": "9855:9:367",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 89638,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9855:37:367",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89639,
                  "nodeType": "ExpressionStatement",
                  "src": "9855:37:367"
                }
              ]
            },
            "baseFunctions": [
              19491
            ],
            "documentation": {
              "id": 89621,
              "nodeType": "StructuredDocumentation",
              "src": "9607:42:367",
              "text": "@dev Transfers the NFTs being claimed."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transferTokensOnClaim",
            "nameLocation": "9663:22:367",
            "overrides": {
              "id": 89627,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9755:8:367"
            },
            "parameters": {
              "id": 89626,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89623,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "9694:3:367",
                  "nodeType": "VariableDeclaration",
                  "scope": 89641,
                  "src": "9686:11:367",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 89622,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9686:7:367",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89625,
                  "mutability": "mutable",
                  "name": "_quantityBeingClaimed",
                  "nameLocation": "9707:21:367",
                  "nodeType": "VariableDeclaration",
                  "scope": 89641,
                  "src": "9699:29:367",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 89624,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9699:7:367",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9685:44:367"
            },
            "returnParameters": {
              "id": 89630,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89629,
                  "mutability": "mutable",
                  "name": "startTokenId",
                  "nameLocation": "9789:12:367",
                  "nodeType": "VariableDeclaration",
                  "scope": 89641,
                  "src": "9781:20:367",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 89628,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9781:7:367",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9780:22:367"
            },
            "scope": 89889,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 89656,
            "nodeType": "FunctionDefinition",
            "src": "9987:136:367",
            "nodes": [],
            "body": {
              "id": 89655,
              "nodeType": "Block",
              "src": "10071:52:367",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89651,
                        "name": "minterRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89095,
                        "src": "10096:10:367",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 89652,
                        "name": "_signer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89644,
                        "src": "10108:7:367",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 89650,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21207,
                      "src": "10088:7:367",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 89653,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10088:28:367",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 89649,
                  "id": 89654,
                  "nodeType": "Return",
                  "src": "10081:35:367"
                }
              ]
            },
            "baseFunctions": [
              24016
            ],
            "documentation": {
              "id": 89642,
              "nodeType": "StructuredDocumentation",
              "src": "9905:77:367",
              "text": "@dev Returns whether a given address is authorized to sign mint requests."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isAuthorizedSigner",
            "nameLocation": "9996:19:367",
            "overrides": {
              "id": 89646,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10047:8:367"
            },
            "parameters": {
              "id": 89645,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89644,
                  "mutability": "mutable",
                  "name": "_signer",
                  "nameLocation": "10024:7:367",
                  "nodeType": "VariableDeclaration",
                  "scope": 89656,
                  "src": "10016:15:367",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 89643,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10016:7:367",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10015:17:367"
            },
            "returnParameters": {
              "id": 89649,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89648,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 89656,
                  "src": "10065:4:367",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 89647,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10065:4:367",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10064:6:367"
            },
            "scope": 89889,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 89670,
            "nodeType": "FunctionDefinition",
            "src": "10218:137:367",
            "nodes": [],
            "body": {
              "id": 89669,
              "nodeType": "Block",
              "src": "10290:65:367",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89664,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21176,
                        "src": "10315:18:367",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 89665,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            89875
                          ],
                          "referencedDeclaration": 89875,
                          "src": "10335:10:367",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 89666,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10335:12:367",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 89663,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21207,
                      "src": "10307:7:367",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 89667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10307:41:367",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 89662,
                  "id": 89668,
                  "nodeType": "Return",
                  "src": "10300:48:367"
                }
              ]
            },
            "baseFunctions": [
              22004
            ],
            "documentation": {
              "id": 89657,
              "nodeType": "StructuredDocumentation",
              "src": "10129:84:367",
              "text": "@dev Checks whether platform fee info can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetPlatformFeeInfo",
            "nameLocation": "10227:22:367",
            "overrides": {
              "id": 89659,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10266:8:367"
            },
            "parameters": {
              "id": 89658,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10249:2:367"
            },
            "returnParameters": {
              "id": 89662,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89661,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 89670,
                  "src": "10284:4:367",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 89660,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10284:4:367",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10283:6:367"
            },
            "scope": 89889,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 89684,
            "nodeType": "FunctionDefinition",
            "src": "10455:142:367",
            "nodes": [],
            "body": {
              "id": 89683,
              "nodeType": "Block",
              "src": "10532:65:367",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89678,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21176,
                        "src": "10557:18:367",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 89679,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            89875
                          ],
                          "referencedDeclaration": 89875,
                          "src": "10577:10:367",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 89680,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10577:12:367",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 89677,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21207,
                      "src": "10549:7:367",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 89681,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10549:41:367",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 89676,
                  "id": 89682,
                  "nodeType": "Return",
                  "src": "10542:48:367"
                }
              ]
            },
            "baseFunctions": [
              22066
            ],
            "documentation": {
              "id": 89671,
              "nodeType": "StructuredDocumentation",
              "src": "10361:89:367",
              "text": "@dev Checks whether primary sale recipient can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetPrimarySaleRecipient",
            "nameLocation": "10464:27:367",
            "overrides": {
              "id": 89673,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10508:8:367"
            },
            "parameters": {
              "id": 89672,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10491:2:367"
            },
            "returnParameters": {
              "id": 89676,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89675,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 89684,
                  "src": "10526:4:367",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 89674,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10526:4:367",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10525:6:367"
            },
            "scope": 89889,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 89698,
            "nodeType": "FunctionDefinition",
            "src": "10680:127:367",
            "nodes": [],
            "body": {
              "id": 89697,
              "nodeType": "Block",
              "src": "10742:65:367",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89692,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21176,
                        "src": "10767:18:367",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 89693,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            89875
                          ],
                          "referencedDeclaration": 89875,
                          "src": "10787:10:367",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 89694,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10787:12:367",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 89691,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21207,
                      "src": "10759:7:367",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 89695,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10759:41:367",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 89690,
                  "id": 89696,
                  "nodeType": "Return",
                  "src": "10752:48:367"
                }
              ]
            },
            "baseFunctions": [
              21152
            ],
            "documentation": {
              "id": 89685,
              "nodeType": "StructuredDocumentation",
              "src": "10603:72:367",
              "text": "@dev Checks whether owner can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetOwner",
            "nameLocation": "10689:12:367",
            "overrides": {
              "id": 89687,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10718:8:367"
            },
            "parameters": {
              "id": 89686,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10701:2:367"
            },
            "returnParameters": {
              "id": 89690,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89689,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 89698,
                  "src": "10736:4:367",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 89688,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10736:4:367",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10735:6:367"
            },
            "scope": 89889,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 89712,
            "nodeType": "FunctionDefinition",
            "src": "10897:133:367",
            "nodes": [],
            "body": {
              "id": 89711,
              "nodeType": "Block",
              "src": "10965:65:367",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89706,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21176,
                        "src": "10990:18:367",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 89707,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            89875
                          ],
                          "referencedDeclaration": 89875,
                          "src": "11010:10:367",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 89708,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11010:12:367",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 89705,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21207,
                      "src": "10982:7:367",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 89709,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10982:41:367",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 89704,
                  "id": 89710,
                  "nodeType": "Return",
                  "src": "10975:48:367"
                }
              ]
            },
            "baseFunctions": [
              22394
            ],
            "documentation": {
              "id": 89699,
              "nodeType": "StructuredDocumentation",
              "src": "10813:79:367",
              "text": "@dev Checks whether royalty info can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetRoyaltyInfo",
            "nameLocation": "10906:18:367",
            "overrides": {
              "id": 89701,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10941:8:367"
            },
            "parameters": {
              "id": 89700,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10924:2:367"
            },
            "returnParameters": {
              "id": 89704,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89703,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 89712,
                  "src": "10959:4:367",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 89702,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10959:4:367",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10958:6:367"
            },
            "scope": 89889,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 89726,
            "nodeType": "FunctionDefinition",
            "src": "11125:133:367",
            "nodes": [],
            "body": {
              "id": 89725,
              "nodeType": "Block",
              "src": "11193:65:367",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89720,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21176,
                        "src": "11218:18:367",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 89721,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            89875
                          ],
                          "referencedDeclaration": 89875,
                          "src": "11238:10:367",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 89722,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11238:12:367",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 89719,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21207,
                      "src": "11210:7:367",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 89723,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11210:41:367",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 89718,
                  "id": 89724,
                  "nodeType": "Return",
                  "src": "11203:48:367"
                }
              ]
            },
            "baseFunctions": [
              17525
            ],
            "documentation": {
              "id": 89713,
              "nodeType": "StructuredDocumentation",
              "src": "11036:84:367",
              "text": "@dev Checks whether contract metadata can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetContractURI",
            "nameLocation": "11134:18:367",
            "overrides": {
              "id": 89715,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "11169:8:367"
            },
            "parameters": {
              "id": 89714,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11152:2:367"
            },
            "returnParameters": {
              "id": 89718,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89717,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 89726,
                  "src": "11187:4:367",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 89716,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11187:4:367",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11186:6:367"
            },
            "scope": 89889,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 89740,
            "nodeType": "FunctionDefinition",
            "src": "11353:137:367",
            "nodes": [],
            "body": {
              "id": 89739,
              "nodeType": "Block",
              "src": "11425:65:367",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89734,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21176,
                        "src": "11450:18:367",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 89735,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            89875
                          ],
                          "referencedDeclaration": 89875,
                          "src": "11470:10:367",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 89736,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11470:12:367",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 89733,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21207,
                      "src": "11442:7:367",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 89737,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11442:41:367",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 89732,
                  "id": 89738,
                  "nodeType": "Return",
                  "src": "11435:48:367"
                }
              ]
            },
            "baseFunctions": [
              19496
            ],
            "documentation": {
              "id": 89727,
              "nodeType": "StructuredDocumentation",
              "src": "11264:84:367",
              "text": "@dev Checks whether platform fee info can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetClaimConditions",
            "nameLocation": "11362:22:367",
            "overrides": {
              "id": 89729,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "11401:8:367"
            },
            "parameters": {
              "id": 89728,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11384:2:367"
            },
            "returnParameters": {
              "id": 89732,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89731,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 89740,
                  "src": "11419:4:367",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 89730,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11419:4:367",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11418:6:367"
            },
            "scope": 89889,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 89754,
            "nodeType": "FunctionDefinition",
            "src": "11582:127:367",
            "nodes": [],
            "body": {
              "id": 89753,
              "nodeType": "Block",
              "src": "11652:57:367",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89748,
                        "name": "minterRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89095,
                        "src": "11677:10:367",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 89749,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            89875
                          ],
                          "referencedDeclaration": 89875,
                          "src": "11689:10:367",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 89750,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11689:12:367",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 89747,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21207,
                      "src": "11669:7:367",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 89751,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11669:33:367",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 89746,
                  "id": 89752,
                  "nodeType": "Return",
                  "src": "11662:40:367"
                }
              ]
            },
            "baseFunctions": [
              20260
            ],
            "documentation": {
              "id": 89741,
              "nodeType": "StructuredDocumentation",
              "src": "11496:81:367",
              "text": "@dev Returns whether lazy minting can be done in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canLazyMint",
            "nameLocation": "11591:12:367",
            "overrides": {
              "id": 89743,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "11628:8:367"
            },
            "parameters": {
              "id": 89742,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11603:2:367"
            },
            "returnParameters": {
              "id": 89746,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89745,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 89754,
                  "src": "11646:4:367",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 89744,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11646:4:367",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11645:6:367"
            },
            "scope": 89889,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 89767,
            "nodeType": "FunctionDefinition",
            "src": "11975:144:367",
            "nodes": [],
            "body": {
              "id": 89766,
              "nodeType": "Block",
              "src": "12030:89:367",
              "nodes": [],
              "statements": [
                {
                  "id": 89765,
                  "nodeType": "UncheckedBlock",
                  "src": "12040:73:367",
                  "statements": [
                    {
                      "expression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 89763,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 89760,
                          "name": "_currentIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 100795,
                          "src": "12071:13:367",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 89761,
                            "name": "_startTokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 100868,
                            "src": "12087:13:367",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 89762,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12087:15:367",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12071:31:367",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "functionReturnParameters": 89759,
                      "id": 89764,
                      "nodeType": "Return",
                      "src": "12064:38:367"
                    }
                  ]
                }
              ]
            },
            "documentation": {
              "id": 89755,
              "nodeType": "StructuredDocumentation",
              "src": "11893:77:367",
              "text": " Returns the total amount of tokens minted in the contract."
            },
            "functionSelector": "a2309ff8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalMinted",
            "nameLocation": "11984:11:367",
            "parameters": {
              "id": 89756,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11995:2:367"
            },
            "returnParameters": {
              "id": 89759,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89758,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 89767,
                  "src": "12021:7:367",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 89757,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12021:7:367",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12020:9:367"
            },
            "scope": 89889,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 89776,
            "nodeType": "FunctionDefinition",
            "src": "12201:106:367",
            "nodes": [],
            "body": {
              "id": 89775,
              "nodeType": "Block",
              "src": "12262:45:367",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 89773,
                    "name": "nextTokenIdToLazyMint",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 20195,
                    "src": "12279:21:367",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 89772,
                  "id": 89774,
                  "nodeType": "Return",
                  "src": "12272:28:367"
                }
              ]
            },
            "documentation": {
              "id": 89768,
              "nodeType": "StructuredDocumentation",
              "src": "12125:71:367",
              "text": "@dev The tokenId of the next NFT that will be minted / lazy minted."
            },
            "functionSelector": "3b1475a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "nextTokenIdToMint",
            "nameLocation": "12210:17:367",
            "parameters": {
              "id": 89769,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12227:2:367"
            },
            "returnParameters": {
              "id": 89772,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89771,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 89776,
                  "src": "12253:7:367",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 89770,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12253:7:367",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12252:9:367"
            },
            "scope": 89889,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 89788,
            "nodeType": "FunctionDefinition",
            "src": "12363:184:367",
            "nodes": [],
            "body": {
              "id": 89787,
              "nodeType": "Block",
              "src": "12411:136:367",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89783,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89779,
                        "src": "12526:7:367",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 89784,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12535:4:367",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 89782,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        101876,
                        102058
                      ],
                      "referencedDeclaration": 102058,
                      "src": "12520:5:367",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (uint256,bool)"
                      }
                    },
                    "id": 89785,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12520:20:367",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89786,
                  "nodeType": "ExpressionStatement",
                  "src": "12520:20:367"
                }
              ]
            },
            "documentation": {
              "id": 89777,
              "nodeType": "StructuredDocumentation",
              "src": "12313:45:367",
              "text": "@dev Burns `tokenId`. See {ERC721-_burn}."
            },
            "functionSelector": "42966c68",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "12372:4:367",
            "parameters": {
              "id": 89780,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89779,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "12385:7:367",
                  "nodeType": "VariableDeclaration",
                  "scope": 89788,
                  "src": "12377:15:367",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 89778,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12377:7:367",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12376:17:367"
            },
            "returnParameters": {
              "id": 89781,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12411:0:367"
            },
            "scope": 89889,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 89852,
            "nodeType": "FunctionDefinition",
            "src": "12601:573:367",
            "nodes": [],
            "body": {
              "id": 89851,
              "nodeType": "Block",
              "src": "12762:412:367",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89804,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89791,
                        "src": "12800:4:367",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 89805,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89793,
                        "src": "12806:2:367",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 89806,
                        "name": "startTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89795,
                        "src": "12810:12:367",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 89807,
                        "name": "quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89797,
                        "src": "12824:8:367",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 89801,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "12772:5:367",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_SignatureDrop_$89889_$",
                          "typeString": "type(contract super SignatureDrop)"
                        }
                      },
                      "id": 89803,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_beforeTokenTransfers",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 102149,
                      "src": "12772:27:367",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 89808,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12772:61:367",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89809,
                  "nodeType": "ExpressionStatement",
                  "src": "12772:61:367"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 89831,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 89824,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 89817,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "12945:34:367",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 89811,
                              "name": "transferRole",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 89092,
                              "src": "12954:12:367",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 89814,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "12976:1:367",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 89813,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "12968:7:367",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 89812,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "12968:7:367",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 89815,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12968:10:367",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 89810,
                            "name": "hasRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21207,
                            "src": "12946:7:367",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) view returns (bool)"
                            }
                          },
                          "id": 89816,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12946:33:367",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 89823,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 89818,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 89791,
                          "src": "12983:4:367",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 89821,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12999:1:367",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 89820,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "12991:7:367",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 89819,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "12991:7:367",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 89822,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12991:10:367",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "12983:18:367",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "12945:56:367",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 89830,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 89825,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89793,
                        "src": "13005:2:367",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 89828,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13019:1:367",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 89827,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13011:7:367",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 89826,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13011:7:367",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 89829,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13011:10:367",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "13005:16:367",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "12945:76:367",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 89850,
                  "nodeType": "IfStatement",
                  "src": "12941:227:367",
                  "trueBody": {
                    "id": 89849,
                    "nodeType": "Block",
                    "src": "13023:145:367",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 89842,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 89836,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "13041:28:367",
                            "subExpression": {
                              "arguments": [
                                {
                                  "id": 89833,
                                  "name": "transferRole",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 89092,
                                  "src": "13050:12:367",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "id": 89834,
                                  "name": "from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 89791,
                                  "src": "13064:4:367",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 89832,
                                "name": "hasRole",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 21207,
                                "src": "13042:7:367",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (bytes32,address) view returns (bool)"
                                }
                              },
                              "id": 89835,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13042:27:367",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "id": 89841,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "13073:26:367",
                            "subExpression": {
                              "arguments": [
                                {
                                  "id": 89838,
                                  "name": "transferRole",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 89092,
                                  "src": "13082:12:367",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "id": 89839,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 89793,
                                  "src": "13096:2:367",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 89837,
                                "name": "hasRole",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 21207,
                                "src": "13074:7:367",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (bytes32,address) view returns (bool)"
                                }
                              },
                              "id": 89840,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13074:25:367",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "13041:58:367",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 89848,
                        "nodeType": "IfStatement",
                        "src": "13037:121:367",
                        "trueBody": {
                          "id": 89847,
                          "nodeType": "Block",
                          "src": "13101:57:367",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "hexValue": "215472616e736665722d526f6c65",
                                    "id": 89844,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "13126:16:367",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_580e0c4592c88fed8ee4d517df979aadb8488f3871dc6e505bc9673b5984355e",
                                      "typeString": "literal_string \"!Transfer-Role\""
                                    },
                                    "value": "!Transfer-Role"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_580e0c4592c88fed8ee4d517df979aadb8488f3871dc6e505bc9673b5984355e",
                                      "typeString": "literal_string \"!Transfer-Role\""
                                    }
                                  ],
                                  "id": 89843,
                                  "name": "revert",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -19,
                                    -19
                                  ],
                                  "referencedDeclaration": -19,
                                  "src": "13119:6:367",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (string memory) pure"
                                  }
                                },
                                "id": 89845,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "13119:24:367",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 89846,
                              "nodeType": "ExpressionStatement",
                              "src": "13119:24:367"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              102149
            ],
            "documentation": {
              "id": 89789,
              "nodeType": "StructuredDocumentation",
              "src": "12553:43:367",
              "text": "@dev See {ERC721-_beforeTokenTransfer}."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfers",
            "nameLocation": "12610:21:367",
            "overrides": {
              "id": 89799,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "12753:8:367"
            },
            "parameters": {
              "id": 89798,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89791,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "12649:4:367",
                  "nodeType": "VariableDeclaration",
                  "scope": 89852,
                  "src": "12641:12:367",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 89790,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12641:7:367",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89793,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "12671:2:367",
                  "nodeType": "VariableDeclaration",
                  "scope": 89852,
                  "src": "12663:10:367",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 89792,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12663:7:367",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89795,
                  "mutability": "mutable",
                  "name": "startTokenId",
                  "nameLocation": "12691:12:367",
                  "nodeType": "VariableDeclaration",
                  "scope": 89852,
                  "src": "12683:20:367",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 89794,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12683:7:367",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89797,
                  "mutability": "mutable",
                  "name": "quantity",
                  "nameLocation": "12721:8:367",
                  "nodeType": "VariableDeclaration",
                  "scope": 89852,
                  "src": "12713:16:367",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 89796,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12713:7:367",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12631:104:367"
            },
            "returnParameters": {
              "id": 89800,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12762:0:367"
            },
            "scope": 89889,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 89862,
            "nodeType": "FunctionDefinition",
            "src": "13180:111:367",
            "nodes": [],
            "body": {
              "id": 89861,
              "nodeType": "Block",
              "src": "13255:36:367",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 89858,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        89875
                      ],
                      "referencedDeclaration": 89875,
                      "src": "13272:10:367",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 89859,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13272:12:367",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 89857,
                  "id": 89860,
                  "nodeType": "Return",
                  "src": "13265:19:367"
                }
              ]
            },
            "baseFunctions": [
              19433
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_dropMsgSender",
            "nameLocation": "13189:14:367",
            "overrides": {
              "id": 89854,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "13228:8:367"
            },
            "parameters": {
              "id": 89853,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13203:2:367"
            },
            "returnParameters": {
              "id": 89857,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89856,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 89862,
                  "src": "13246:7:367",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 89855,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13246:7:367",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13245:9:367"
            },
            "scope": 89889,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 89875,
            "nodeType": "FunctionDefinition",
            "src": "13297:231:367",
            "nodes": [],
            "body": {
              "id": 89874,
              "nodeType": "Block",
              "src": "13466:62:367",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 89870,
                        "name": "ERC2771ContextUpgradeable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45607,
                        "src": "13483:25:367",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC2771ContextUpgradeable_$45607_$",
                          "typeString": "type(contract ERC2771ContextUpgradeable)"
                        }
                      },
                      "id": 89871,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_msgSender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45575,
                      "src": "13483:36:367",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 89872,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13483:38:367",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 89869,
                  "id": 89873,
                  "nodeType": "Return",
                  "src": "13476:45:367"
                }
              ]
            },
            "baseFunctions": [
              45575,
              156029
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgSender",
            "nameLocation": "13306:10:367",
            "overrides": {
              "id": 89866,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 89864,
                  "name": "ContextUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 156044,
                  "src": "13382:18:367"
                },
                {
                  "id": 89865,
                  "name": "ERC2771ContextUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 45607,
                  "src": "13402:25:367"
                }
              ],
              "src": "13373:55:367"
            },
            "parameters": {
              "id": 89863,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13316:2:367"
            },
            "returnParameters": {
              "id": 89869,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89868,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "13454:6:367",
                  "nodeType": "VariableDeclaration",
                  "scope": 89875,
                  "src": "13446:14:367",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 89867,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13446:7:367",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13445:16:367"
            },
            "scope": 89889,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 89888,
            "nodeType": "FunctionDefinition",
            "src": "13534:227:367",
            "nodes": [],
            "body": {
              "id": 89887,
              "nodeType": "Block",
              "src": "13701:60:367",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 89883,
                        "name": "ERC2771ContextUpgradeable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45607,
                        "src": "13718:25:367",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC2771ContextUpgradeable_$45607_$",
                          "typeString": "type(contract ERC2771ContextUpgradeable)"
                        }
                      },
                      "id": 89884,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_msgData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45602,
                      "src": "13718:34:367",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_calldata_ptr_$",
                        "typeString": "function () view returns (bytes calldata)"
                      }
                    },
                    "id": 89885,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13718:36:367",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_calldata_ptr",
                      "typeString": "bytes calldata"
                    }
                  },
                  "functionReturnParameters": 89882,
                  "id": 89886,
                  "nodeType": "Return",
                  "src": "13711:43:367"
                }
              ]
            },
            "baseFunctions": [
              45602,
              156038
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgData",
            "nameLocation": "13543:8:367",
            "overrides": {
              "id": 89879,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 89877,
                  "name": "ContextUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 156044,
                  "src": "13617:18:367"
                },
                {
                  "id": 89878,
                  "name": "ERC2771ContextUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 45607,
                  "src": "13637:25:367"
                }
              ],
              "src": "13608:55:367"
            },
            "parameters": {
              "id": 89876,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13551:2:367"
            },
            "returnParameters": {
              "id": 89882,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89881,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 89888,
                  "src": "13681:14:367",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 89880,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "13681:5:367",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13680:16:367"
            },
            "scope": 89889,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 89059,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 150199,
              "src": "1766:13:367"
            },
            "id": 89060,
            "nodeType": "InheritanceSpecifier",
            "src": "1766:13:367"
          },
          {
            "baseName": {
              "id": 89061,
              "name": "ContractMetadata",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 17526,
              "src": "1785:16:367"
            },
            "id": 89062,
            "nodeType": "InheritanceSpecifier",
            "src": "1785:16:367"
          },
          {
            "baseName": {
              "id": 89063,
              "name": "PlatformFee",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 22005,
              "src": "1807:11:367"
            },
            "id": 89064,
            "nodeType": "InheritanceSpecifier",
            "src": "1807:11:367"
          },
          {
            "baseName": {
              "id": 89065,
              "name": "Royalty",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 22395,
              "src": "1824:7:367"
            },
            "id": 89066,
            "nodeType": "InheritanceSpecifier",
            "src": "1824:7:367"
          },
          {
            "baseName": {
              "id": 89067,
              "name": "PrimarySale",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 22067,
              "src": "1837:11:367"
            },
            "id": 89068,
            "nodeType": "InheritanceSpecifier",
            "src": "1837:11:367"
          },
          {
            "baseName": {
              "id": 89069,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 21153,
              "src": "1854:7:367"
            },
            "id": 89070,
            "nodeType": "InheritanceSpecifier",
            "src": "1854:7:367"
          },
          {
            "baseName": {
              "id": 89071,
              "name": "DelayedReveal",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 17685,
              "src": "1867:13:367"
            },
            "id": 89072,
            "nodeType": "InheritanceSpecifier",
            "src": "1867:13:367"
          },
          {
            "baseName": {
              "id": 89073,
              "name": "LazyMint",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 20261,
              "src": "1886:8:367"
            },
            "id": 89074,
            "nodeType": "InheritanceSpecifier",
            "src": "1886:8:367"
          },
          {
            "baseName": {
              "id": 89075,
              "name": "PermissionsEnumerable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 21799,
              "src": "1900:21:367"
            },
            "id": 89076,
            "nodeType": "InheritanceSpecifier",
            "src": "1900:21:367"
          },
          {
            "baseName": {
              "id": 89077,
              "name": "DropSinglePhase",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 19497,
              "src": "1927:15:367"
            },
            "id": 89078,
            "nodeType": "InheritanceSpecifier",
            "src": "1927:15:367"
          },
          {
            "baseName": {
              "id": 89079,
              "name": "SignatureMintERC721Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 24157,
              "src": "1948:30:367"
            },
            "id": 89080,
            "nodeType": "InheritanceSpecifier",
            "src": "1948:30:367"
          },
          {
            "baseName": {
              "id": 89081,
              "name": "ERC2771ContextUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 45607,
              "src": "1984:25:367"
            },
            "id": 89082,
            "nodeType": "InheritanceSpecifier",
            "src": "1984:25:367"
          },
          {
            "baseName": {
              "id": 89083,
              "name": "MulticallUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 156227,
              "src": "2015:20:367"
            },
            "id": 89084,
            "nodeType": "InheritanceSpecifier",
            "src": "2015:20:367"
          },
          {
            "baseName": {
              "id": 89085,
              "name": "ERC721AUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 102168,
              "src": "2041:18:367"
            },
            "id": 89086,
            "nodeType": "InheritanceSpecifier",
            "src": "2041:18:367"
          }
        ],
        "canonicalName": "SignatureDrop",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          89889,
          102168,
          102239,
          155478,
          155062,
          157249,
          157261,
          156227,
          45607,
          156044,
          24157,
          33903,
          157205,
          19497,
          32707,
          32285,
          21799,
          21500,
          33281,
          33256,
          20261,
          17299,
          32812,
          17685,
          32468,
          21153,
          33183,
          22067,
          33345,
          22395,
          33409,
          13973,
          13829,
          22005,
          33324,
          17526,
          150199,
          32437
        ],
        "name": "SignatureDrop",
        "nameLocation": "1745:13:367",
        "scope": 89890,
        "usedErrors": [
          102180,
          102183,
          102186,
          102189,
          102192,
          102195,
          102198,
          102201,
          102204,
          102207,
          102210,
          102213,
          102216
        ]
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 367
}