{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "claimer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "quantityClaimed",
          "type": "uint256"
        }
      ],
      "name": "TokensClaimed",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "quantity",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes32[]",
          "name": "proofs",
          "type": "bytes32[]"
        },
        {
          "internalType": "uint256",
          "name": "proofMaxQuantityForWallet",
          "type": "uint256"
        }
      ],
      "name": "claim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "claim(address,uint256,uint256,bytes32[],uint256)": "38524a10"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantityClaimed\",\"type\":\"uint256\"}],\"name\":\"TokensClaimed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"proofs\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"proofMaxQuantityForWallet\",\"type\":\"uint256\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"TokensClaimed(address,address,uint256,uint256)\":{\"details\":\"Emitted when tokens are claimed.\"}},\"kind\":\"dev\",\"methods\":{\"claim(address,uint256,uint256,bytes32[],uint256)\":{\"params\":{\"proofMaxQuantityForWallet\":\"The maximum number of tokens an address included in an                                        allowlist can claim.\",\"proofs\":\"The proof of the claimer's inclusion in the merkle root allowlist                                        of the claim conditions that apply.\",\"quantity\":\"The quantity of tokens to claim.\",\"receiver\":\"The receiver of the tokens to claim.\",\"tokenId\":\"Token Id to claim.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"claim(address,uint256,uint256,bytes32[],uint256)\":{\"notice\":\"Lets an account claim a given quantity of ERC1155 tokens.\"}},\"notice\":\"Thirdweb's `Airdrop` contracts provide a lightweight and easy to use mechanism  to drop tokens.  `AirdropERC1155Claimable` contract is an airdrop contract for ERC1155 tokens. It follows a  pull mechanism for transfer of tokens, where allowlisted recipients can claim tokens from  the contract.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/prebuilts/interface/airdrop/IAirdropERC1155Claimable.sol\":\"IAirdropERC1155Claimable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@std/=lib/forge-std/src/\",\":@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/\",\":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/\",\":contracts/=contracts/\",\":ds-test/=lib/ds-test/src/\",\":dynamic-contracts/=lib/dynamic-contracts/src/\",\":erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/ERC721A-Upgradeable/\",\":erc721a/=lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/\"]},\"sources\":{\"contracts/prebuilts/interface/airdrop/IAirdropERC1155Claimable.sol\":{\"keccak256\":\"0x7726707c8cd61b54b3fcce390251aef2d250a4f8ea316758ecd879c38c3620fd\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://968b6a1f8ce7f4eff436be81577178bb85b5ceb77321f9201dcbec591426af46\",\"dweb:/ipfs/QmPoPDFwCcyaF25t9tgtJZG7smQ61HyVZRQFzxrEXLLnde\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.12+commit.f00d7308"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "claimer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "quantityClaimed",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensClaimed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "quantity",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes32[]",
              "name": "proofs",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint256",
              "name": "proofMaxQuantityForWallet",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claim"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "claim(address,uint256,uint256,bytes32[],uint256)": {
            "params": {
              "proofMaxQuantityForWallet": "The maximum number of tokens an address included in an                                        allowlist can claim.",
              "proofs": "The proof of the claimer's inclusion in the merkle root allowlist                                        of the claim conditions that apply.",
              "quantity": "The quantity of tokens to claim.",
              "receiver": "The receiver of the tokens to claim.",
              "tokenId": "Token Id to claim."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "claim(address,uint256,uint256,bytes32[],uint256)": {
            "notice": "Lets an account claim a given quantity of ERC1155 tokens."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=lib/chainlink/",
        "@ds-test/=lib/ds-test/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@std/=lib/forge-std/src/",
        "@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/",
        "ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/",
        "ERC721A/=lib/ERC721A/contracts/",
        "chainlink/=lib/chainlink/",
        "contracts/=contracts/",
        "ds-test/=lib/ds-test/src/",
        "dynamic-contracts/=lib/dynamic-contracts/src/",
        "erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/",
        "erc721a-upgradeable/=lib/ERC721A-Upgradeable/",
        "erc721a/=lib/ERC721A/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/prebuilts/interface/airdrop/IAirdropERC1155Claimable.sol": "IAirdropERC1155Claimable"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/prebuilts/interface/airdrop/IAirdropERC1155Claimable.sol": {
        "keccak256": "0x7726707c8cd61b54b3fcce390251aef2d250a4f8ea316758ecd879c38c3620fd",
        "urls": [
          "bzz-raw://968b6a1f8ce7f4eff436be81577178bb85b5ceb77321f9201dcbec591426af46",
          "dweb:/ipfs/QmPoPDFwCcyaF25t9tgtJZG7smQ61HyVZRQFzxrEXLLnde"
        ],
        "license": "Apache-2.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/prebuilts/interface/airdrop/IAirdropERC1155Claimable.sol",
    "id": 75570,
    "exportedSymbols": {
      "IAirdropERC1155Claimable": [
        75569
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:1474:337",
    "nodes": [
      {
        "id": 75541,
        "nodeType": "PragmaDirective",
        "src": "39:24:337",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".11"
        ]
      },
      {
        "id": 75569,
        "nodeType": "ContractDefinition",
        "src": "387:1125:337",
        "nodes": [
          {
            "id": 75553,
            "nodeType": "EventDefinition",
            "src": "474:159:337",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 75543,
              "nodeType": "StructuredDocumentation",
              "src": "428:41:337",
              "text": "@dev Emitted when tokens are claimed."
            },
            "name": "TokensClaimed",
            "nameLocation": "480:13:337",
            "parameters": {
              "id": 75552,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75545,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "claimer",
                  "nameLocation": "519:7:337",
                  "nodeType": "VariableDeclaration",
                  "scope": 75553,
                  "src": "503:23:337",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 75544,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "503:7:337",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75547,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "552:8:337",
                  "nodeType": "VariableDeclaration",
                  "scope": 75553,
                  "src": "536:24:337",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 75546,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "536:7:337",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75549,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "586:7:337",
                  "nodeType": "VariableDeclaration",
                  "scope": 75553,
                  "src": "570:23:337",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 75548,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "570:7:337",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75551,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "quantityClaimed",
                  "nameLocation": "611:15:337",
                  "nodeType": "VariableDeclaration",
                  "scope": 75553,
                  "src": "603:23:337",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 75550,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "603:7:337",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "493:139:337"
            }
          },
          {
            "id": 75568,
            "nodeType": "FunctionDefinition",
            "src": "1325:185:337",
            "nodes": [],
            "documentation": {
              "id": 75554,
              "nodeType": "StructuredDocumentation",
              "src": "639:681:337",
              "text": "  @notice Lets an account claim a given quantity of ERC1155 tokens.\n  @param receiver                       The receiver of the tokens to claim.\n  @param quantity                       The quantity of tokens to claim.\n  @param tokenId                        Token Id to claim.\n  @param proofs                         The proof of the claimer's inclusion in the merkle root allowlist\n                                        of the claim conditions that apply.\n  @param proofMaxQuantityForWallet      The maximum number of tokens an address included in an\n                                        allowlist can claim."
            },
            "functionSelector": "38524a10",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "claim",
            "nameLocation": "1334:5:337",
            "parameters": {
              "id": 75566,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75556,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "1357:8:337",
                  "nodeType": "VariableDeclaration",
                  "scope": 75568,
                  "src": "1349:16:337",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 75555,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1349:7:337",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75558,
                  "mutability": "mutable",
                  "name": "quantity",
                  "nameLocation": "1383:8:337",
                  "nodeType": "VariableDeclaration",
                  "scope": 75568,
                  "src": "1375:16:337",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 75557,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1375:7:337",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75560,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1409:7:337",
                  "nodeType": "VariableDeclaration",
                  "scope": 75568,
                  "src": "1401:15:337",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 75559,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1401:7:337",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75563,
                  "mutability": "mutable",
                  "name": "proofs",
                  "nameLocation": "1445:6:337",
                  "nodeType": "VariableDeclaration",
                  "scope": 75568,
                  "src": "1426:25:337",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 75561,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "1426:7:337",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 75562,
                    "nodeType": "ArrayTypeName",
                    "src": "1426:9:337",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75565,
                  "mutability": "mutable",
                  "name": "proofMaxQuantityForWallet",
                  "nameLocation": "1469:25:337",
                  "nodeType": "VariableDeclaration",
                  "scope": 75568,
                  "src": "1461:33:337",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 75564,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1461:7:337",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1339:161:337"
            },
            "returnParameters": {
              "id": 75567,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1509:0:337"
            },
            "scope": 75569,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IAirdropERC1155Claimable",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 75542,
          "nodeType": "StructuredDocumentation",
          "src": "65:320:337",
          "text": "  Thirdweb's `Airdrop` contracts provide a lightweight and easy to use mechanism\n  to drop tokens.\n  `AirdropERC1155Claimable` contract is an airdrop contract for ERC1155 tokens. It follows a\n  pull mechanism for transfer of tokens, where allowlisted recipients can claim tokens from\n  the contract."
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          75569
        ],
        "name": "IAirdropERC1155Claimable",
        "nameLocation": "397:24:337",
        "scope": 75570,
        "usedErrors": []
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 337
}