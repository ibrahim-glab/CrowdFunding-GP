{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "mintedTo",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenIdMinted",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "uri",
          "type": "string"
        }
      ],
      "name": "TokensMinted",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "cancel",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "uri",
          "type": "string"
        }
      ],
      "name": "mintTo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "revoke",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "cancel(uint256)": "40e58ee5",
    "mintTo(address,string)": "0075a317",
    "revoke(uint256)": "20c5429b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"mintedTo\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenIdMinted\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"TokensMinted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"cancel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"mintTo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"revoke\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"TokensMinted(address,uint256,string)\":{\"details\":\"Emitted when an account with MINTER_ROLE mints an NFT.\"}},\"kind\":\"dev\",\"methods\":{\"mintTo(address,string)\":{\"params\":{\"to\":\"The address to mint the NFT to.\",\"uri\":\"The URI to assign to the NFT.\"},\"returns\":{\"_0\":\"tokenId of the NFT minted.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"cancel(uint256)\":{\"notice\":\"Let's a loyalty card owner or approved operator cancel the loyalty card.\"},\"mintTo(address,string)\":{\"notice\":\"Lets an account with MINTER_ROLE mint an NFT.\"},\"revoke(uint256)\":{\"notice\":\"Let's an approved party cancel the loyalty card (no approval needed).\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/prebuilts/interface/ILoyaltyCard.sol\":\"ILoyaltyCard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@std/=lib/forge-std/src/\",\":@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/\",\":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/\",\":contracts/=contracts/\",\":ds-test/=lib/ds-test/src/\",\":dynamic-contracts/=lib/dynamic-contracts/src/\",\":erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/ERC721A-Upgradeable/\",\":erc721a/=lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/\"]},\"sources\":{\"contracts/eip/interface/IERC165.sol\":{\"keccak256\":\"0x35d0a916f70344a5fcc6c67cb531b6150d2fce43e72a6282385eab02020f2f49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75ccd8b9a8b52a93b8097fcb8181b7afb6d72bbe6eaabf434f0481a7a207cc8a\",\"dweb:/ipfs/QmPUZAEE4nwkijcE2amAXAWEVGVG5XaKWGhpgnRwpAf93R\"]},\"contracts/eip/interface/IERC4906.sol\":{\"keccak256\":\"0xa31c36a97c9133c8a451aaec1aa585537cacd71760eb6c5ce402155313efb392\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f3d6fee0ee338d9d0041e7a094efe2f0cd1d4a05b8b127e4f8928f5d3bac8fc4\",\"dweb:/ipfs/Qmcrgw6xMNvsFBfYh51FmFnRP14EEThSSp4n6F6QeKLhy3\"]},\"contracts/eip/interface/IERC721.sol\":{\"keccak256\":\"0xbd9f2dd131e8f1e4e50b1b116eae917510ab9bf5d4356de37c5daf4cffdfa049\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ac3530b317083464271b100de1976ed9179b9e7d5a4fc3d992c61c80676a676\",\"dweb:/ipfs/QmUq1AVzymvp7Y8H1eypGEGU4icjzn5vDSvKMNpXnoaeMT\"]},\"contracts/extension/interface/INFTMetadata.sol\":{\"keccak256\":\"0x5c3ebcaa3bb1a7f685d620acb0a0383239a326e719d3f9667790a71750391261\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2f4f702934d117edc04cb31bd212aea52341ee05ce0467e758dd9d96e805ad5a\",\"dweb:/ipfs/QmRtHuDx9bZku2qT4HS5CWLzYmyg2q8kFcc4KFWr4U1fNU\"]},\"contracts/extension/interface/ISignatureMintERC721.sol\":{\"keccak256\":\"0xc1142e0742252123cff0b0c45ede1e70d43cf01d677abc32d4a16064d5161822\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b8f0a32af882458e1c2b040ebe1bc399bdd765e8a29c35fb881494d414c95cb2\",\"dweb:/ipfs/QmR4Z1N29sPXstFaQrubGjNiQhf26VztyVFHjpDjFLfFAi\"]},\"contracts/prebuilts/interface/ILoyaltyCard.sol\":{\"keccak256\":\"0xc06c5e877821127439906a062207c15b94677a154184fd3500bf3d2fd14057b5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3b105a63abfb1dfdcf14003583a3bfada3d880e5c438e36e0c31657b3c5f2b56\",\"dweb:/ipfs/QmZEBwkpcbFNj8tg8dDbc5EuqYtL79dChjqPeQfNCM97VA\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.12+commit.f00d7308"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "mintedTo",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenIdMinted",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "string",
              "name": "uri",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensMinted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "cancel"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "uri",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mintTo",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revoke"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "mintTo(address,string)": {
            "params": {
              "to": "The address to mint the NFT to.",
              "uri": "The URI to assign to the NFT."
            },
            "returns": {
              "_0": "tokenId of the NFT minted."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "cancel(uint256)": {
            "notice": "Let's a loyalty card owner or approved operator cancel the loyalty card."
          },
          "mintTo(address,string)": {
            "notice": "Lets an account with MINTER_ROLE mint an NFT."
          },
          "revoke(uint256)": {
            "notice": "Let's an approved party cancel the loyalty card (no approval needed)."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=lib/chainlink/",
        "@ds-test/=lib/ds-test/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@std/=lib/forge-std/src/",
        "@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/",
        "ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/",
        "ERC721A/=lib/ERC721A/contracts/",
        "chainlink/=lib/chainlink/",
        "contracts/=contracts/",
        "ds-test/=lib/ds-test/src/",
        "dynamic-contracts/=lib/dynamic-contracts/src/",
        "erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/",
        "erc721a-upgradeable/=lib/ERC721A-Upgradeable/",
        "erc721a/=lib/ERC721A/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/prebuilts/interface/ILoyaltyCard.sol": "ILoyaltyCard"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/eip/interface/IERC165.sol": {
        "keccak256": "0x35d0a916f70344a5fcc6c67cb531b6150d2fce43e72a6282385eab02020f2f49",
        "urls": [
          "bzz-raw://75ccd8b9a8b52a93b8097fcb8181b7afb6d72bbe6eaabf434f0481a7a207cc8a",
          "dweb:/ipfs/QmPUZAEE4nwkijcE2amAXAWEVGVG5XaKWGhpgnRwpAf93R"
        ],
        "license": "MIT"
      },
      "contracts/eip/interface/IERC4906.sol": {
        "keccak256": "0xa31c36a97c9133c8a451aaec1aa585537cacd71760eb6c5ce402155313efb392",
        "urls": [
          "bzz-raw://f3d6fee0ee338d9d0041e7a094efe2f0cd1d4a05b8b127e4f8928f5d3bac8fc4",
          "dweb:/ipfs/Qmcrgw6xMNvsFBfYh51FmFnRP14EEThSSp4n6F6QeKLhy3"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC721.sol": {
        "keccak256": "0xbd9f2dd131e8f1e4e50b1b116eae917510ab9bf5d4356de37c5daf4cffdfa049",
        "urls": [
          "bzz-raw://8ac3530b317083464271b100de1976ed9179b9e7d5a4fc3d992c61c80676a676",
          "dweb:/ipfs/QmUq1AVzymvp7Y8H1eypGEGU4icjzn5vDSvKMNpXnoaeMT"
        ],
        "license": "MIT"
      },
      "contracts/extension/interface/INFTMetadata.sol": {
        "keccak256": "0x5c3ebcaa3bb1a7f685d620acb0a0383239a326e719d3f9667790a71750391261",
        "urls": [
          "bzz-raw://2f4f702934d117edc04cb31bd212aea52341ee05ce0467e758dd9d96e805ad5a",
          "dweb:/ipfs/QmRtHuDx9bZku2qT4HS5CWLzYmyg2q8kFcc4KFWr4U1fNU"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/ISignatureMintERC721.sol": {
        "keccak256": "0xc1142e0742252123cff0b0c45ede1e70d43cf01d677abc32d4a16064d5161822",
        "urls": [
          "bzz-raw://b8f0a32af882458e1c2b040ebe1bc399bdd765e8a29c35fb881494d414c95cb2",
          "dweb:/ipfs/QmR4Z1N29sPXstFaQrubGjNiQhf26VztyVFHjpDjFLfFAi"
        ],
        "license": "Apache-2.0"
      },
      "contracts/prebuilts/interface/ILoyaltyCard.sol": {
        "keccak256": "0xc06c5e877821127439906a062207c15b94677a154184fd3500bf3d2fd14057b5",
        "urls": [
          "bzz-raw://3b105a63abfb1dfdcf14003583a3bfada3d880e5c438e36e0c31657b3c5f2b56",
          "dweb:/ipfs/QmZEBwkpcbFNj8tg8dDbc5EuqYtL79dChjqPeQfNCM97VA"
        ],
        "license": "Apache-2.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/prebuilts/interface/ILoyaltyCard.sol",
    "id": 75214,
    "exportedSymbols": {
      "IERC165": [
        13829
      ],
      "IERC4906": [
        13992
      ],
      "IERC721": [
        14105
      ],
      "ILoyaltyCard": [
        75213
      ],
      "INFTMetadata": [
        32947
      ],
      "ISignatureMintERC721": [
        33903
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:958:331",
    "nodes": [
      {
        "id": 75178,
        "nodeType": "PragmaDirective",
        "src": "39:24:331",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".11"
        ]
      },
      {
        "id": 75179,
        "nodeType": "ImportDirective",
        "src": "65:52:331",
        "nodes": [],
        "absolutePath": "contracts/extension/interface/INFTMetadata.sol",
        "file": "../../extension/interface/INFTMetadata.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 75214,
        "sourceUnit": 32948,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 75180,
        "nodeType": "ImportDirective",
        "src": "118:60:331",
        "nodes": [],
        "absolutePath": "contracts/extension/interface/ISignatureMintERC721.sol",
        "file": "../../extension/interface/ISignatureMintERC721.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 75214,
        "sourceUnit": 33904,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 75181,
        "nodeType": "ImportDirective",
        "src": "179:41:331",
        "nodes": [],
        "absolutePath": "contracts/eip/interface/IERC721.sol",
        "file": "../../eip/interface/IERC721.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 75214,
        "sourceUnit": 14106,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 75213,
        "nodeType": "ContractDefinition",
        "src": "222:774:331",
        "nodes": [
          {
            "id": 75190,
            "nodeType": "EventDefinition",
            "src": "319:88:331",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 75182,
              "nodeType": "StructuredDocumentation",
              "src": "251:63:331",
              "text": "@dev Emitted when an account with MINTER_ROLE mints an NFT."
            },
            "name": "TokensMinted",
            "nameLocation": "325:12:331",
            "parameters": {
              "id": 75189,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75184,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "mintedTo",
                  "nameLocation": "354:8:331",
                  "nodeType": "VariableDeclaration",
                  "scope": 75190,
                  "src": "338:24:331",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 75183,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "338:7:331",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75186,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenIdMinted",
                  "nameLocation": "380:13:331",
                  "nodeType": "VariableDeclaration",
                  "scope": 75190,
                  "src": "364:29:331",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 75185,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "364:7:331",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75188,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "uri",
                  "nameLocation": "402:3:331",
                  "nodeType": "VariableDeclaration",
                  "scope": 75190,
                  "src": "395:10:331",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 75187,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "395:6:331",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "337:69:331"
            }
          },
          {
            "id": 75200,
            "nodeType": "FunctionDefinition",
            "src": "647:76:331",
            "nodes": [],
            "documentation": {
              "id": 75191,
              "nodeType": "StructuredDocumentation",
              "src": "413:229:331",
              "text": "  @notice Lets an account with MINTER_ROLE mint an NFT.\n  @param to The address to mint the NFT to.\n  @param uri The URI to assign to the NFT.\n  @return tokenId of the NFT minted."
            },
            "functionSelector": "0075a317",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "mintTo",
            "nameLocation": "656:6:331",
            "parameters": {
              "id": 75196,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75193,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "671:2:331",
                  "nodeType": "VariableDeclaration",
                  "scope": 75200,
                  "src": "663:10:331",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 75192,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "663:7:331",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75195,
                  "mutability": "mutable",
                  "name": "uri",
                  "nameLocation": "691:3:331",
                  "nodeType": "VariableDeclaration",
                  "scope": 75200,
                  "src": "675:19:331",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 75194,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "675:6:331",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "662:33:331"
            },
            "returnParameters": {
              "id": 75199,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75198,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 75200,
                  "src": "714:7:331",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 75197,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "714:7:331",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "713:9:331"
            },
            "scope": 75213,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 75206,
            "nodeType": "FunctionDefinition",
            "src": "818:42:331",
            "nodes": [],
            "documentation": {
              "id": 75201,
              "nodeType": "StructuredDocumentation",
              "src": "729:84:331",
              "text": "@notice Let's a loyalty card owner or approved operator cancel the loyalty card."
            },
            "functionSelector": "40e58ee5",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "cancel",
            "nameLocation": "827:6:331",
            "parameters": {
              "id": 75204,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75203,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "842:7:331",
                  "nodeType": "VariableDeclaration",
                  "scope": 75206,
                  "src": "834:15:331",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 75202,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "834:7:331",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "833:17:331"
            },
            "returnParameters": {
              "id": 75205,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "859:0:331"
            },
            "scope": 75213,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 75212,
            "nodeType": "FunctionDefinition",
            "src": "952:42:331",
            "nodes": [],
            "documentation": {
              "id": 75207,
              "nodeType": "StructuredDocumentation",
              "src": "866:81:331",
              "text": "@notice Let's an approved party cancel the loyalty card (no approval needed)."
            },
            "functionSelector": "20c5429b",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "revoke",
            "nameLocation": "961:6:331",
            "parameters": {
              "id": 75210,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75209,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "976:7:331",
                  "nodeType": "VariableDeclaration",
                  "scope": 75212,
                  "src": "968:15:331",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 75208,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "968:7:331",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "967:17:331"
            },
            "returnParameters": {
              "id": 75211,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "993:0:331"
            },
            "scope": 75213,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "ILoyaltyCard",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          75213
        ],
        "name": "ILoyaltyCard",
        "nameLocation": "232:12:331",
        "scope": 75214,
        "usedErrors": []
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 331
}