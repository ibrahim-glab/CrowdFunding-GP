{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint80",
          "name": "_timeUnit",
          "type": "uint80"
        },
        {
          "internalType": "address",
          "name": "_defaultAdmin",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_rewardRatioNumerator",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_rewardRatioDenominator",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_stakingToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_rewardToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_nativeTokenWrapper",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "prevURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "newURI",
          "type": "string"
        }
      ],
      "name": "ContractURIUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "prevOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnerUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rewardAmount",
          "type": "uint256"
        }
      ],
      "name": "RewardsClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokensStaked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokensWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newAmount",
          "type": "uint256"
        }
      ],
      "name": "UpdatedMinStakeAmount",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldNumerator",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newNumerator",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldDenominator",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newDenominator",
          "type": "uint256"
        }
      ],
      "name": "UpdatedRewardRatio",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldTimeUnit",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newTimeUnit",
          "type": "uint256"
        }
      ],
      "name": "UpdatedTimeUnit",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "claimRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "depositRewardTokens",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRewardRatio",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_numerator",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_denominator",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRewardTokenBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_staker",
          "type": "address"
        }
      ],
      "name": "getStakeInfo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_tokensStaked",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_rewards",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTimeUnit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_timeUnit",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "multicall",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "results",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardTokenDecimals",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "setContractURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "setOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_numerator",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_denominator",
          "type": "uint256"
        }
      ],
      "name": "setRewardRatio",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint80",
          "name": "_timeUnit",
          "type": "uint80"
        }
      ],
      "name": "setTimeUnit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "stake",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "stakers",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "timeOfLastUpdate",
          "type": "uint128"
        },
        {
          "internalType": "uint64",
          "name": "conditionIdOflastUpdate",
          "type": "uint64"
        },
        {
          "internalType": "uint256",
          "name": "amountStaked",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "unclaimedRewards",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "stakersArray",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakingToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakingTokenBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakingTokenDecimals",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawRewardTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x6101006040523480156200001257600080fd5b5060405162003310380380620033108339810160408190526200003591620004d7565b8083846001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000076573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200009c919062000567565b60ff16846001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015620000de573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000104919062000567565b600160025560ff166001600160a01b038316158015906200012d57506001600160a01b03841615155b6200016b5760405162461bcd60e51b815260206004820152600960248201526806164647265737320360bc1b60448201526064015b60405180910390fd5b61ffff82161580159062000182575061ffff811615155b620001bd5760405162461bcd60e51b815260206004820152600a6024820152690646563696d616c7320360b41b604482015260640162000162565b6001600160a01b039384166080529190921660a05261ffff91821660c0521660e052620001ea866200029e565b620001f7878686620002f0565b826001600160a01b0316826001600160a01b03161415620002715760405162461bcd60e51b815260206004820152602d60248201527f52657761726420546f6b656e20616e64205374616b696e6720546f6b656e206360448201526c30b713ba1031329039b0b6b29760991b606482015260840162000162565b50600880546001600160a01b0319166001600160a01b039290921691909117905550620005f19350505050565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b806200032d5760405162461bcd60e51b815260206004820152600b60248201526a064697669646520627920360ac1b604482015260640162000162565b6001600160501b038316620003855760405162461bcd60e51b815260206004820152601460248201527f74696d652d756e69742063616e27742062652030000000000000000000000000604482015260640162000162565b600380546001600160401b0316906001906000620003a48385620005a9565b82546001600160401b039182166101009390930a9283029190920219909116179055506040805160a0810182526001600160501b03808716825242811660208084019182526000848601818152606086018a8152608087018a815289845260079094529690912094518554935191518516600160a01b02600160a01b600160f01b03199286166a0100000000000000000000026001600160a01b0319909516919095161792909217919091169190911782559151600182015590516002909101558015620004b45742600760006200047e600185620005d7565b815260200190815260200160002060000160146101000a8154816001600160501b0302191690836001600160501b031602179055505b50505050565b80516001600160a01b0381168114620004d257600080fd5b919050565b600080600080600080600060e0888a031215620004f357600080fd5b87516001600160501b03811681146200050b57600080fd5b96506200051b60208901620004ba565b955060408801519450606088015193506200053960808901620004ba565b92506200054960a08901620004ba565b91506200055960c08901620004ba565b905092959891949750929550565b6000602082840312156200057a57600080fd5b815160ff811681146200058c57600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b60006001600160401b03828116848216808303821115620005ce57620005ce62000593565b01949350505050565b600082821015620005ec57620005ec62000593565b500390565b60805160a05160c05160e051612c756200069b600039600081816103c10152611ee60152600081816104680152611f1a01526000818161026c0152818161123b015281816114f8015281816115a1015281816117150152818161198801526119cc01526000818161012301528181610e8701528181610f300152818161125f0152818161153e0152818161173901528181611960015281816119f20152611fcc0152612c756000f3fe6080604052600436106101135760003560e01c80621b79341461019c57806313af4035146101bc57806316c621e0146101dc5780632e1a7d4d146101ef578063372500ab1461020f5780635357e9161461022457806372f702f31461025a5780638caaa2711461028e5780638da5cb5b146102b25780639168ae72146102c7578063938e3d7b1461035057806393ce53431461037057806397e1b4bc146103855780639bdcecd1146103af578063a694fc3a146103f6578063ac9650d814610409578063b218f06914610436578063b9f7a7b514610456578063c34531531461048a578063cb43b2dd146104aa578063d68124c7146104ca578063e8a3d485146104df578063f7c618c11461050157600080fd5b3661019757336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146101955760405162461bcd60e51b815260206004820181905260248201527f63616c6c6572206e6f74206e617469766520746f6b656e20777261707065722e60448201526064015b60405180910390fd5b005b600080fd5b3480156101a857600080fd5b506101956101b73660046125ea565b610521565b3480156101c857600080fd5b506101956101d736600461260c565b61068b565b6101956101ea366004612635565b6106bb565b3480156101fb57600080fd5b5061019561020a366004612635565b6106f2565b34801561021b57600080fd5b50610195610721565b34801561023057600080fd5b5061024461023f366004612635565b610756565b604051610251919061264e565b60405180910390f35b34801561026657600080fd5b506102447f000000000000000000000000000000000000000000000000000000000000000081565b34801561029a57600080fd5b506102a460045481565b604051908152602001610251565b3480156102be57600080fd5b50610244610780565b3480156102d357600080fd5b5061031e6102e236600461260c565b6006602052600090815260409020805460018201546002909201546001600160801b03821692600160801b9092046001600160401b0316919084565b604080516001600160801b0390951685526001600160401b039093166020850152918301526060820152608001610251565b34801561035c57600080fd5b5061019561036b366004612678565b61078f565b34801561037c57600080fd5b506009546102a4565b34801561039157600080fd5b5061039a6107bc565b60408051928352602083019190915201610251565b3480156103bb57600080fd5b506103e37f000000000000000000000000000000000000000000000000000000000000000081565b60405161ffff9091168152602001610251565b610195610404366004612635565b610842565b34801561041557600080fd5b50610429610424366004612728565b610871565b60405161025191906127f4565b34801561044257600080fd5b50610195610451366004612856565b610966565b34801561046257600080fd5b506103e37f000000000000000000000000000000000000000000000000000000000000000081565b34801561049657600080fd5b5061039a6104a536600461260c565b610abb565b3480156104b657600080fd5b506101956104c5366004612635565b610ae8565b3480156104d657600080fd5b506102a4610b17565b3480156104eb57600080fd5b506104f4610b5f565b604051610251919061287f565b34801561050d57600080fd5b50600854610244906001600160a01b031681565b610529610bed565b6105455760405162461bcd60e51b815260040161018c90612892565b6003546000906007908290610565906001906001600160401b03166128d0565b6001600160401b031681526020808201929092526040908101600020815160a08101835281546001600160501b038082168352600160501b8204811695830195909552600160a01b9004909316918301919091526001810154606083018190526002909101546080830152909150831415806105e5575080608001518214155b61062b5760405162461bcd60e51b81526020600482015260176024820152762932bbb0b932103930ba34b7903ab731b430b733b2b21760491b604482015260640161018c565b8051610638908484610c10565b60608082015160808084015160408051938452602084018890528301529181018490527feb6684a1e7c9bd2adc792fb253558f022bcbef39fb6ad31dc58cdfefdd5b5190910160405180910390a1505050565b610693610bed565b6106af5760405162461bcd60e51b815260040161018c90612892565b6106b881610dc1565b50565b6002805414156106dd5760405162461bcd60e51b815260040161018c906128f8565b600280556106ea81610e13565b506001600255565b6002805414156107145760405162461bcd60e51b815260040161018c906128f8565b600280556106ea81610fed565b6002805414156107435760405162461bcd60e51b815260040161018c906128f8565b6002805561074f6112bc565b6001600255565b6005818154811061076657600080fd5b6000918252602090912001546001600160a01b0316905081565b6001546001600160a01b031690565b610797610bed565b6107b35760405162461bcd60e51b815260040161018c90612892565b6106b8816113df565b600354600090819060079082906107de906001906001600160401b03166128d0565b6001600160401b03168152602001908152602001600020600101549150600760006001600360009054906101000a90046001600160401b031661082191906128d0565b6001600160401b031681526020019081526020016000206002015490509091565b6002805414156108645760405162461bcd60e51b815260040161018c906128f8565b600280556106ea816114b4565b6060816001600160401b0381111561088b5761088b612662565b6040519080825280602002602001820160405280156108be57816020015b60608152602001906001900390816108a95790505b50905060005b8281101561095e5761092e308585848181106108e2576108e261292f565b90506020028101906108f49190612945565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061185792505050565b8282815181106109405761094061292f565b602002602001018190525080806109569061298b565b9150506108c4565b505b92915050565b61096e610bed565b61098a5760405162461bcd60e51b815260040161018c90612892565b60035460009060079082906109aa906001906001600160401b03166128d0565b6001600160401b031681526020808201929092526040908101600020815160a08101835281546001600160501b03808216808452600160501b8304821696840196909652600160a01b909104811693820193909352600182015460608201526002909101546080820152925083161415610a5d5760405162461bcd60e51b81526020600482015260146024820152732a34b6b296bab734ba103ab731b430b733b2b21760611b604482015260640161018c565b610a708282606001518360800151610c10565b8051604080516001600160501b03928316815291841660208301527fd968de290ed68f978b9e4816f7d4be9ef46189fe8eeb3eeb86199e7229cf2de091015b60405180910390a15050565b6001600160a01b03811660009081526006602052604081206001015490610ae183611883565b9050915091565b600280541415610b0a5760405162461bcd60e51b815260040161018c906128f8565b600280556106ea816118f1565b6003546000906007908290610b37906001906001600160401b03166128d0565b6001600160401b031681526020810191909152604001600020546001600160501b0316919050565b60008054610b6c906129a6565b80601f0160208091040260200160405190810160405280929190818152602001828054610b98906129a6565b8015610be55780601f10610bba57610100808354040283529160200191610be5565b820191906000526020600020905b815481529060010190602001808311610bc857829003601f168201915b505050505081565b6000610bf7610780565b6001600160a01b0316336001600160a01b031614905090565b80610c4b5760405162461bcd60e51b815260206004820152600b60248201526a064697669646520627920360ac1b604482015260640161018c565b6001600160501b038316610c985760405162461bcd60e51b8152602060048201526014602482015273074696d652d756e69742063616e277420626520360641b604482015260640161018c565b600380546001600160401b0316906001906000610cb583856129e1565b82546001600160401b039182166101009390930a9283029190920219909116179055506040805160a0810182526001600160501b03808716825242811660208084019182526000848601818152606086018a8152608087018a815289845260079094529690912094518554935191518516600160a01b02600160a01b600160f01b0319928616600160501b026001600160a01b0319909516919095161792909217919091169190911782559151600182015590516002909101558015610dbb574260076000610d85600185612a0c565b815260200190815260200160002060000160146101000a8154816001600160501b0302191690836001600160501b031602179055505b50505050565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b610e1b610780565b6001600160a01b0316336001600160a01b031614610e4b5760405162461bcd60e51b815260040161018c90612892565b6008546000906001600160a01b031673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14610e85576008546001600160a01b0316610ea7565b7f00000000000000000000000000000000000000000000000000000000000000005b90506000816001600160a01b03166370a08231306040518263ffffffff1660e01b8152600401610ed7919061264e565b602060405180830381865afa158015610ef4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f189190612a23565b600854909150610f54906001600160a01b03163330867f0000000000000000000000000000000000000000000000000000000000000000611ad6565b600081836001600160a01b03166370a08231306040518263ffffffff1660e01b8152600401610f83919061264e565b602060405180830381865afa158015610fa0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fc49190612a23565b610fce9190612a0c565b90508060096000828254610fe29190612a3c565b909155505050505050565b33600090815260066020526040902060010154816110445760405162461bcd60e51b81526020600482015260146024820152735769746864726177696e67203020746f6b656e7360601b604482015260640161018c565b818110156110935760405162461bcd60e51b815260206004820152601c60248201527b15da5d1a191c985dda5b99c81b5bdc99481d1a185b881cdd185ad95960221b604482015260640161018c565b61109c33611c4d565b818114156111f557600060058054806020026020016040519081016040528092919081815260200182805480156110fc57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116110de575b5050505050905060005b81518110156111f257336001600160a01b031682828151811061112b5761112b61292f565b60200260200101516001600160a01b031614156111e25781600183516111519190612a0c565b815181106111615761116161292f565b60200260200101516005828154811061117c5761117c61292f565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060058054806111bb576111bb612a54565b600082815260209020810160001990810180546001600160a01b03191690550190556111f2565b6111eb8161298b565b9050611106565b50505b3360009081526006602052604081206001018054849290611217908490612a0c565b9250508190555081600460008282546112309190612a0c565b9091555061128390507f00000000000000000000000000000000000000000000000000000000000000003033857f0000000000000000000000000000000000000000000000000000000000000000611ad6565b60405182815233907f6352c5382c4a4578e712449ca65e83cdb392d045dfcf1cad9615189db2da244b9060200160405180910390a25050565b60006112c733611d1c565b336000908152600660205260409020600201546112e49190612a3c565b9050806113205760405162461bcd60e51b815260206004820152600a6024820152694e6f207265776172647360b01b604482015260640161018c565b33600090815260066020526040812080546001600160801b031916426001600160501b031617815560020155600354611364906001906001600160401b03166128d0565b33600081815260066020526040902080546001600160401b0393909316600160801b02600160801b600160c01b0319909316929092179091556113a79082611f53565b60405181815233907ffc30cddea38e2bf4d6ea7d3f9ed3b6ad7f176419f4963bd81318067a4aee73fe9060200160405180910390a250565b60008080546113ed906129a6565b80601f0160208091040260200160405190810160405280929190818152602001828054611419906129a6565b80156114665780601f1061143b57610100808354040283529160200191611466565b820191906000526020600020905b81548152906001019060200180831161144957829003601f168201915b5050855193945061148293600093506020870192509050612551565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a168183604051610aaf929190612a6a565b806114f45760405162461bcd60e51b815260206004820152601060248201526f5374616b696e67203020746f6b656e7360801b604482015260640161018c565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee141561156257507f00000000000000000000000000000000000000000000000000000000000000006115c1565b341561159e5760405162461bcd60e51b815260206004820152600b60248201526a056616c7565206e6f7420360ac1b604482015260640161018c565b507f00000000000000000000000000000000000000000000000000000000000000005b33600090815260066020526040902060010154156115e7576115e233611c4d565b61169e565b6005805460018082019092557f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00180546001600160a01b03191633908117909155600090815260066020526040902080546001600160801b0319166001600160501b03421617905560035461166591906001600160401b03166128d0565b33600090815260066020526040902080546001600160401b0392909216600160801b02600160801b600160c01b03199092169190911790555b6040516370a0823160e01b81526000906001600160a01b038316906370a08231906116cd90309060040161264e565b602060405180830381865afa1580156116ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061170e9190612a23565b905061175d7f00000000000000000000000000000000000000000000000000000000000000003330867f0000000000000000000000000000000000000000000000000000000000000000611ad6565b600081836001600160a01b03166370a08231306040518263ffffffff1660e01b815260040161178c919061264e565b602060405180830381865afa1580156117a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117cd9190612a23565b6117d79190612a0c565b336000908152600660205260408120600101805492935083929091906117fe908490612a3c565b9250508190555080600460008282546118179190612a3c565b909155505060405181815233907fb539ca1e5c8d398ddf1c41c30166f33404941683be4683319b57669a93dad4ef9060200160405180910390a250505050565b606061187c8383604051806060016040528060278152602001612c1960279139611ff0565b9392505050565b6001600160a01b0381166000908152600660205260408120600101546118c257506001600160a01b031660009081526006602052604090206002015490565b6118cb82611d1c565b6001600160a01b0383166000908152600660205260409020600201546109609190612a3c565b6118f9610780565b6001600160a01b0316336001600160a01b0316146119295760405162461bcd60e51b815260040161018c90612892565b600954811161194557806009546119409190612a0c565b611948565b60005b600955600854611984906001600160a01b03163033847f0000000000000000000000000000000000000000000000000000000000000000611ad6565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee146119f0577f0000000000000000000000000000000000000000000000000000000000000000611a12565b7f00000000000000000000000000000000000000000000000000000000000000005b9050600454816001600160a01b03166370a08231306040518263ffffffff1660e01b8152600401611a43919061264e565b602060405180830381865afa158015611a60573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a849190612a23565b1015611ad25760405162461bcd60e51b815260206004820152601e60248201527f5374616b696e6720746f6b656e2062616c616e636520726564756365642e0000604482015260640161018c565b5050565b81611ae057611c46565b6001600160a01b03851673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1415611c3a576001600160a01b038416301415611b8057604051632e1a7d4d60e01b8152600481018390526001600160a01b03821690632e1a7d4d90602401600060405180830381600087803b158015611b5857600080fd5b505af1158015611b6c573d6000803e3d6000fd5b50505050611b7b8383836120cb565b611c46565b6001600160a01b038316301415611c2f57348214611bd65760405162461bcd60e51b81526020600482015260136024820152721b5cd9cb9d985b1d5948084f48185b5bdd5b9d606a1b604482015260640161018c565b806001600160a01b031663d0e30db0836040518263ffffffff1660e01b81526004016000604051808303818588803b158015611c1157600080fd5b505af1158015611c25573d6000803e3d6000fd5b5050505050611c46565b611b7b8383836120cb565b611c4685858585612190565b5050505050565b6000611c5882611d1c565b6001600160a01b038316600090815260066020526040812060020180549293508392909190611c88908490612a3c565b90915550506001600160a01b038216600090815260066020526040902080546001600160801b0319166001600160501b034216179055600354611cd6906001906001600160401b03166128d0565b6001600160a01b03909216600090815260066020526040902080546001600160401b0393909316600160801b02600160801b600160c01b03199093169290921790915550565b6001600160a01b0381166000908152600660209081526040808320815160808101835281546001600160801b03811682526001600160401b03600160801b9091048116948201859052600183015493820193909352600290910154606082015260035490929116815b81811015611edc576000818152600760209081526040808320815160a08101835281546001600160501b038082168352600160501b8204811695830195909552600160a01b900490931691830191909152600181015460608301526002015460808201529084831415611df9578551611e08565b81602001516001600160501b03165b6001600160801b03169050600082604001516001600160501b031660001415611e315742611e40565b82604001516001600160501b03165b9050600080611e6d89604001518585611e599190612a0c565b611e639190612a8f565b86606001516121ee565b91509150600080611ea58c886080015189600001516001600160501b031686611e969190612ac4565b611ea09190612ac4565b612236565b91509150838015611eb35750815b611ebd578b611ebf565b805b9b5050505050505050600181611ed59190612a3c565b9050611d85565b50611f1184611f0c7f0000000000000000000000000000000000000000000000000000000000000000600a612bca565b6121ee565b9450611f4090507f0000000000000000000000000000000000000000000000000000000000000000600a612bca565b611f4a9085612ac4565b95945050505050565b600954811115611fa05760405162461bcd60e51b81526020600482015260186024820152774e6f7420656e6f7567682072657761726420746f6b656e7360401b604482015260640161018c565b8060096000828254611fb29190612a0c565b9091555050600854611ad2906001600160a01b03163084847f0000000000000000000000000000000000000000000000000000000000000000611ad6565b6060611ffb84612251565b6120565760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b606482015260840161018c565b600080856001600160a01b0316856040516120719190612bda565b600060405180830381855af49150503d80600081146120ac576040519150601f19603f3d011682016040523d82523d6000602084013e6120b1565b606091505b50915091506120c1828286612260565b9695505050505050565b6000836001600160a01b03168360405160006040518083038185875af1925050503d8060008114612118576040519150601f19603f3d011682016040523d82523d6000602084013e61211d565b606091505b5050905080610dbb57816001600160a01b031663d0e30db0846040518263ffffffff1660e01b81526004016000604051808303818588803b15801561216157600080fd5b505af1158015612175573d6000803e3d6000fd5b50610dbb935050506001600160a01b03841690508585612299565b816001600160a01b0316836001600160a01b031614156121af57610dbb565b6001600160a01b0383163014156121d9576121d46001600160a01b0385168383612299565b610dbb565b610dbb6001600160a01b038516848484612301565b60008083612202575060019050600061222f565b8383028385828161221557612215612aae565b041461222857600080925092505061222f565b6001925090505b9250929050565b6000808383018481101561222857600080925092505061222f565b6001600160a01b03163b151590565b6060831561226f57508161187c565b82511561227f5782518084602001fd5b8160405162461bcd60e51b815260040161018c919061287f565b6040516001600160a01b0383166024820152604481018290526122fc90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152612339565b505050565b6040516001600160a01b0380851660248301528316604482015260648101829052610dbb9085906323b872dd60e01b906084016122c5565b600061238e826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661240b9092919063ffffffff16565b8051909150156122fc57808060200190518101906123ac9190612bf6565b6122fc5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161018c565b606061241a8484600085612422565b949350505050565b6060824710156124835760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161018c565b61248c85612251565b6124d85760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161018c565b600080866001600160a01b031685876040516124f49190612bda565b60006040518083038185875af1925050503d8060008114612531576040519150601f19603f3d011682016040523d82523d6000602084013e612536565b606091505b5091509150612546828286612260565b979650505050505050565b82805461255d906129a6565b90600052602060002090601f01602090048101928261257f57600085556125c5565b82601f1061259857805160ff19168380011785556125c5565b828001600101855582156125c5579182015b828111156125c55782518255916020019190600101906125aa565b506125d19291506125d5565b5090565b5b808211156125d157600081556001016125d6565b600080604083850312156125fd57600080fd5b50508035926020909101359150565b60006020828403121561261e57600080fd5b81356001600160a01b038116811461187c57600080fd5b60006020828403121561264757600080fd5b5035919050565b6001600160a01b0391909116815260200190565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561268a57600080fd5b81356001600160401b03808211156126a157600080fd5b818401915084601f8301126126b557600080fd5b8135818111156126c7576126c7612662565b604051601f8201601f19908116603f011681019083821181831017156126ef576126ef612662565b8160405282815287602084870101111561270857600080fd5b826020860160208301376000928101602001929092525095945050505050565b6000806020838503121561273b57600080fd5b82356001600160401b038082111561275257600080fd5b818501915085601f83011261276657600080fd5b81358181111561277557600080fd5b8660208260051b850101111561278a57600080fd5b60209290920196919550909350505050565b60005b838110156127b757818101518382015260200161279f565b83811115610dbb5750506000910152565b600081518084526127e081602086016020860161279c565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561284957603f198886030184526128378583516127c8565b9450928501929085019060010161281b565b5092979650505050505050565b60006020828403121561286857600080fd5b81356001600160501b038116811461187c57600080fd5b60208152600061187c60208301846127c8565b6020808252600e908201526d139bdd08185d5d1a1bdc9a5e995960921b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b60006001600160401b03838116908316818110156128f0576128f06128ba565b039392505050565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b634e487b7160e01b600052603260045260246000fd5b6000808335601e1984360301811261295c57600080fd5b8301803591506001600160401b0382111561297657600080fd5b60200191503681900382131561222f57600080fd5b600060001982141561299f5761299f6128ba565b5060010190565b600181811c908216806129ba57607f821691505b602082108114156129db57634e487b7160e01b600052602260045260246000fd5b50919050565b60006001600160401b03808316818516808303821115612a0357612a036128ba565b01949350505050565b600082821015612a1e57612a1e6128ba565b500390565b600060208284031215612a3557600080fd5b5051919050565b60008219821115612a4f57612a4f6128ba565b500190565b634e487b7160e01b600052603160045260246000fd5b604081526000612a7d60408301856127c8565b8281036020840152611f4a81856127c8565b6000816000190483118215151615612aa957612aa96128ba565b500290565b634e487b7160e01b600052601260045260246000fd5b600082612ae157634e487b7160e01b600052601260045260246000fd5b500490565b600181815b80851115612b21578160001904821115612b0757612b076128ba565b80851615612b1457918102915b93841c9390800290612aeb565b509250929050565b600082612b3857506001610960565b81612b4557506000610960565b8160018114612b5b5760028114612b6557612b81565b6001915050610960565b60ff841115612b7657612b766128ba565b50506001821b610960565b5060208310610133831016604e8410600b8410161715612ba4575081810a610960565b612bae8383612ae6565b8060001904821115612bc257612bc26128ba565b029392505050565b600061187c61ffff841683612b29565b60008251612bec81846020870161279c565b9190910192915050565b600060208284031215612c0857600080fd5b8151801515811461187c57600080fdfe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212203a75c50d9a7c429790dec5c83f6340cdb1c94e96ce4966d033f13d84e154b15f64736f6c634300080c0033",
    "sourceMap": "1627:5184:18:-:0;;;1908:718;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2192:19;2225:13;2267;-1:-1:-1;;;;;2252:38:18;;:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1638:565:88;;2321:12:18;-1:-1:-1;;;;;2306:37:18;;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;202:1:218;307:7;:22;1638:565:88;;-1:-1:-1;;;;;1835:27:88;::::1;::::0;;::::1;::::0;:64:::1;;-1:-1:-1::0;;;;;;1866:33:88;::::1;::::0;::::1;1835:64;1827:86;;;::::0;-1:-1:-1;;;1827:86:88;;1435:2:644;1827:86:88::1;::::0;::::1;1417:21:644::0;1474:1;1454:18;;;1447:29;-1:-1:-1;;;1492:18:644;;;1485:39;1541:18;;1827:86:88::1;;;;;;;;;1931:26;::::0;::::1;::::0;;::::1;::::0;:55:::1;;-1:-1:-1::0;1961:25:88::1;::::0;::::1;::::0;::::1;1931:55;1923:78;;;::::0;-1:-1:-1;;;1923:78:88;;1772:2:644;1923:78:88::1;::::0;::::1;1754:21:644::0;1811:2;1791:18;;;1784:30;-1:-1:-1;;;1830:18:644;;;1823:40;1880:18;;1923:78:88::1;1570:334:644::0;1923:78:88::1;-1:-1:-1::0;;;;;2012:40:88;;::::1;;::::0;2062:28;;;::::1;;::::0;2100:44:::1;::::0;;::::1;;::::0;2154:42:::1;;::::0;2370:26:18::1;2382:13:::0;2370:11:::1;:26::i;:::-;2406:79;2427:9:::0;2438:21;2461:23;2406:20:::1;:79::i;:::-;2520:13;-1:-1:-1::0;;;;;2504:29:18::1;:12;-1:-1:-1::0;;;;;2504:29:18::1;;;2496:87;;;::::0;-1:-1:-1;;;2496:87:18;;2111:2:644;2496:87:18::1;::::0;::::1;2093:21:644::0;2150:2;2130:18;;;2123:30;2189:34;2169:18;;;2162:62;-1:-1:-1;;;2240:18:644;;;2233:43;2293:19;;2496:87:18::1;1909:409:644::0;2496:87:18::1;-1:-1:-1::0;2593:11:18::1;:26:::0;;-1:-1:-1;;;;;;2593:26:18::1;-1:-1:-1::0;;;;;2593:26:18;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;1627:5184:18;;-1:-1:-1;;;;1627:5184:18;1421:172:68;1501:6;;;-1:-1:-1;;;;;1517:18:68;;;-1:-1:-1;;;;;;1517:18:68;;;;;;;1551:35;;1501:6;;;1517:18;1501:6;;1551:35;;1480:18;;1551:35;1470:123;1421:172;:::o;10283:741:88:-;10438:17;10430:41;;;;-1:-1:-1;;;10430:41:88;;2525:2:644;10430:41:88;;;2507:21:644;2564:2;2544:18;;;2537:30;-1:-1:-1;;;2583:18:644;;;2576:41;2634:18;;10430:41:88;2323:335:644;10430:41:88;-1:-1:-1;;;;;10489:14:88;;10481:47;;;;-1:-1:-1;;;10481:47:88;;2865:2:644;10481:47:88;;;2847:21:644;2904:2;2884:18;;;2877:30;2943:22;2923:18;;;2916:50;2983:18;;10481:47:88;2663:344:644;10481:47:88;10560:15;;;-1:-1:-1;;;;;10560:15:88;;;;10538:19;10585:20;10560:15;;10585:20;:::i;:::-;;;-1:-1:-1;;;;;10585:20:88;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10649:239:88;;;;;;;;-1:-1:-1;;;;;10649:239:88;;;;;10832:15;10649:239;;;;;;;;;-1:-1:-1;10649:239:88;;;;;;;;;;;;;;;;;;10616:30;;;:17;:30;;;;;;;:272;;;;;;;;;;-1:-1:-1;;;10616:272:88;-1:-1:-1;;;;;;;;10616:272:88;;;;;-1:-1:-1;;;;;;10616:272:88;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10616:272:88;;;;;;;;;;10903:15;;10899:119;;10991:15;10934:17;:34;10952:15;10966:1;10952:11;:15;:::i;:::-;10934:34;;;;;;;;;;;:47;;;:73;;;;;-1:-1:-1;;;;;10934:73:88;;;;;-1:-1:-1;;;;;10934:73:88;;;;;;10899:119;10420:604;10283:741;;;:::o;14:177:644:-;93:13;;-1:-1:-1;;;;;135:31:644;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:754::-;319:6;327;335;343;351;359;367;420:3;408:9;399:7;395:23;391:33;388:53;;;437:1;434;427:12;388:53;463:16;;-1:-1:-1;;;;;508:30:644;;498:41;;488:69;;553:1;550;543:12;488:69;576:5;-1:-1:-1;600:49:644;645:2;630:18;;600:49;:::i;:::-;590:59;;689:2;678:9;674:18;668:25;658:35;;733:2;722:9;718:18;712:25;702:35;;756:50;801:3;790:9;786:19;756:50;:::i;:::-;746:60;;825:50;870:3;859:9;855:19;825:50;:::i;:::-;815:60;;894:50;939:3;928:9;924:19;894:50;:::i;:::-;884:60;;196:754;;;;;;;;;;:::o;955:273::-;1023:6;1076:2;1064:9;1055:7;1051:23;1047:32;1044:52;;;1092:1;1089;1082:12;1044:52;1124:9;1118:16;1174:4;1167:5;1163:16;1156:5;1153:27;1143:55;;1194:1;1191;1184:12;1143:55;1217:5;955:273;-1:-1:-1;;;955:273:644:o;3012:127::-;3073:10;3068:3;3064:20;3061:1;3054:31;3104:4;3101:1;3094:15;3128:4;3125:1;3118:15;3144:236;3183:3;-1:-1:-1;;;;;3249:10:644;;;3279;;;3309:12;;;3301:21;;3298:47;;;3325:18;;:::i;:::-;3361:13;;3144:236;-1:-1:-1;;;;3144:236:644:o;3385:125::-;3425:4;3453:1;3450;3447:8;3444:34;;;3458:18;;:::i;:::-;-1:-1:-1;3495:9:644;;3385:125::o;:::-;1627:5184:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106101135760003560e01c80621b79341461019c57806313af4035146101bc57806316c621e0146101dc5780632e1a7d4d146101ef578063372500ab1461020f5780635357e9161461022457806372f702f31461025a5780638caaa2711461028e5780638da5cb5b146102b25780639168ae72146102c7578063938e3d7b1461035057806393ce53431461037057806397e1b4bc146103855780639bdcecd1146103af578063a694fc3a146103f6578063ac9650d814610409578063b218f06914610436578063b9f7a7b514610456578063c34531531461048a578063cb43b2dd146104aa578063d68124c7146104ca578063e8a3d485146104df578063f7c618c11461050157600080fd5b3661019757336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146101955760405162461bcd60e51b815260206004820181905260248201527f63616c6c6572206e6f74206e617469766520746f6b656e20777261707065722e60448201526064015b60405180910390fd5b005b600080fd5b3480156101a857600080fd5b506101956101b73660046125ea565b610521565b3480156101c857600080fd5b506101956101d736600461260c565b61068b565b6101956101ea366004612635565b6106bb565b3480156101fb57600080fd5b5061019561020a366004612635565b6106f2565b34801561021b57600080fd5b50610195610721565b34801561023057600080fd5b5061024461023f366004612635565b610756565b604051610251919061264e565b60405180910390f35b34801561026657600080fd5b506102447f000000000000000000000000000000000000000000000000000000000000000081565b34801561029a57600080fd5b506102a460045481565b604051908152602001610251565b3480156102be57600080fd5b50610244610780565b3480156102d357600080fd5b5061031e6102e236600461260c565b6006602052600090815260409020805460018201546002909201546001600160801b03821692600160801b9092046001600160401b0316919084565b604080516001600160801b0390951685526001600160401b039093166020850152918301526060820152608001610251565b34801561035c57600080fd5b5061019561036b366004612678565b61078f565b34801561037c57600080fd5b506009546102a4565b34801561039157600080fd5b5061039a6107bc565b60408051928352602083019190915201610251565b3480156103bb57600080fd5b506103e37f000000000000000000000000000000000000000000000000000000000000000081565b60405161ffff9091168152602001610251565b610195610404366004612635565b610842565b34801561041557600080fd5b50610429610424366004612728565b610871565b60405161025191906127f4565b34801561044257600080fd5b50610195610451366004612856565b610966565b34801561046257600080fd5b506103e37f000000000000000000000000000000000000000000000000000000000000000081565b34801561049657600080fd5b5061039a6104a536600461260c565b610abb565b3480156104b657600080fd5b506101956104c5366004612635565b610ae8565b3480156104d657600080fd5b506102a4610b17565b3480156104eb57600080fd5b506104f4610b5f565b604051610251919061287f565b34801561050d57600080fd5b50600854610244906001600160a01b031681565b610529610bed565b6105455760405162461bcd60e51b815260040161018c90612892565b6003546000906007908290610565906001906001600160401b03166128d0565b6001600160401b031681526020808201929092526040908101600020815160a08101835281546001600160501b038082168352600160501b8204811695830195909552600160a01b9004909316918301919091526001810154606083018190526002909101546080830152909150831415806105e5575080608001518214155b61062b5760405162461bcd60e51b81526020600482015260176024820152762932bbb0b932103930ba34b7903ab731b430b733b2b21760491b604482015260640161018c565b8051610638908484610c10565b60608082015160808084015160408051938452602084018890528301529181018490527feb6684a1e7c9bd2adc792fb253558f022bcbef39fb6ad31dc58cdfefdd5b5190910160405180910390a1505050565b610693610bed565b6106af5760405162461bcd60e51b815260040161018c90612892565b6106b881610dc1565b50565b6002805414156106dd5760405162461bcd60e51b815260040161018c906128f8565b600280556106ea81610e13565b506001600255565b6002805414156107145760405162461bcd60e51b815260040161018c906128f8565b600280556106ea81610fed565b6002805414156107435760405162461bcd60e51b815260040161018c906128f8565b6002805561074f6112bc565b6001600255565b6005818154811061076657600080fd5b6000918252602090912001546001600160a01b0316905081565b6001546001600160a01b031690565b610797610bed565b6107b35760405162461bcd60e51b815260040161018c90612892565b6106b8816113df565b600354600090819060079082906107de906001906001600160401b03166128d0565b6001600160401b03168152602001908152602001600020600101549150600760006001600360009054906101000a90046001600160401b031661082191906128d0565b6001600160401b031681526020019081526020016000206002015490509091565b6002805414156108645760405162461bcd60e51b815260040161018c906128f8565b600280556106ea816114b4565b6060816001600160401b0381111561088b5761088b612662565b6040519080825280602002602001820160405280156108be57816020015b60608152602001906001900390816108a95790505b50905060005b8281101561095e5761092e308585848181106108e2576108e261292f565b90506020028101906108f49190612945565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061185792505050565b8282815181106109405761094061292f565b602002602001018190525080806109569061298b565b9150506108c4565b505b92915050565b61096e610bed565b61098a5760405162461bcd60e51b815260040161018c90612892565b60035460009060079082906109aa906001906001600160401b03166128d0565b6001600160401b031681526020808201929092526040908101600020815160a08101835281546001600160501b03808216808452600160501b8304821696840196909652600160a01b909104811693820193909352600182015460608201526002909101546080820152925083161415610a5d5760405162461bcd60e51b81526020600482015260146024820152732a34b6b296bab734ba103ab731b430b733b2b21760611b604482015260640161018c565b610a708282606001518360800151610c10565b8051604080516001600160501b03928316815291841660208301527fd968de290ed68f978b9e4816f7d4be9ef46189fe8eeb3eeb86199e7229cf2de091015b60405180910390a15050565b6001600160a01b03811660009081526006602052604081206001015490610ae183611883565b9050915091565b600280541415610b0a5760405162461bcd60e51b815260040161018c906128f8565b600280556106ea816118f1565b6003546000906007908290610b37906001906001600160401b03166128d0565b6001600160401b031681526020810191909152604001600020546001600160501b0316919050565b60008054610b6c906129a6565b80601f0160208091040260200160405190810160405280929190818152602001828054610b98906129a6565b8015610be55780601f10610bba57610100808354040283529160200191610be5565b820191906000526020600020905b815481529060010190602001808311610bc857829003601f168201915b505050505081565b6000610bf7610780565b6001600160a01b0316336001600160a01b031614905090565b80610c4b5760405162461bcd60e51b815260206004820152600b60248201526a064697669646520627920360ac1b604482015260640161018c565b6001600160501b038316610c985760405162461bcd60e51b8152602060048201526014602482015273074696d652d756e69742063616e277420626520360641b604482015260640161018c565b600380546001600160401b0316906001906000610cb583856129e1565b82546001600160401b039182166101009390930a9283029190920219909116179055506040805160a0810182526001600160501b03808716825242811660208084019182526000848601818152606086018a8152608087018a815289845260079094529690912094518554935191518516600160a01b02600160a01b600160f01b0319928616600160501b026001600160a01b0319909516919095161792909217919091169190911782559151600182015590516002909101558015610dbb574260076000610d85600185612a0c565b815260200190815260200160002060000160146101000a8154816001600160501b0302191690836001600160501b031602179055505b50505050565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b610e1b610780565b6001600160a01b0316336001600160a01b031614610e4b5760405162461bcd60e51b815260040161018c90612892565b6008546000906001600160a01b031673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14610e85576008546001600160a01b0316610ea7565b7f00000000000000000000000000000000000000000000000000000000000000005b90506000816001600160a01b03166370a08231306040518263ffffffff1660e01b8152600401610ed7919061264e565b602060405180830381865afa158015610ef4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f189190612a23565b600854909150610f54906001600160a01b03163330867f0000000000000000000000000000000000000000000000000000000000000000611ad6565b600081836001600160a01b03166370a08231306040518263ffffffff1660e01b8152600401610f83919061264e565b602060405180830381865afa158015610fa0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fc49190612a23565b610fce9190612a0c565b90508060096000828254610fe29190612a3c565b909155505050505050565b33600090815260066020526040902060010154816110445760405162461bcd60e51b81526020600482015260146024820152735769746864726177696e67203020746f6b656e7360601b604482015260640161018c565b818110156110935760405162461bcd60e51b815260206004820152601c60248201527b15da5d1a191c985dda5b99c81b5bdc99481d1a185b881cdd185ad95960221b604482015260640161018c565b61109c33611c4d565b818114156111f557600060058054806020026020016040519081016040528092919081815260200182805480156110fc57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116110de575b5050505050905060005b81518110156111f257336001600160a01b031682828151811061112b5761112b61292f565b60200260200101516001600160a01b031614156111e25781600183516111519190612a0c565b815181106111615761116161292f565b60200260200101516005828154811061117c5761117c61292f565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060058054806111bb576111bb612a54565b600082815260209020810160001990810180546001600160a01b03191690550190556111f2565b6111eb8161298b565b9050611106565b50505b3360009081526006602052604081206001018054849290611217908490612a0c565b9250508190555081600460008282546112309190612a0c565b9091555061128390507f00000000000000000000000000000000000000000000000000000000000000003033857f0000000000000000000000000000000000000000000000000000000000000000611ad6565b60405182815233907f6352c5382c4a4578e712449ca65e83cdb392d045dfcf1cad9615189db2da244b9060200160405180910390a25050565b60006112c733611d1c565b336000908152600660205260409020600201546112e49190612a3c565b9050806113205760405162461bcd60e51b815260206004820152600a6024820152694e6f207265776172647360b01b604482015260640161018c565b33600090815260066020526040812080546001600160801b031916426001600160501b031617815560020155600354611364906001906001600160401b03166128d0565b33600081815260066020526040902080546001600160401b0393909316600160801b02600160801b600160c01b0319909316929092179091556113a79082611f53565b60405181815233907ffc30cddea38e2bf4d6ea7d3f9ed3b6ad7f176419f4963bd81318067a4aee73fe9060200160405180910390a250565b60008080546113ed906129a6565b80601f0160208091040260200160405190810160405280929190818152602001828054611419906129a6565b80156114665780601f1061143b57610100808354040283529160200191611466565b820191906000526020600020905b81548152906001019060200180831161144957829003601f168201915b5050855193945061148293600093506020870192509050612551565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a168183604051610aaf929190612a6a565b806114f45760405162461bcd60e51b815260206004820152601060248201526f5374616b696e67203020746f6b656e7360801b604482015260640161018c565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee141561156257507f00000000000000000000000000000000000000000000000000000000000000006115c1565b341561159e5760405162461bcd60e51b815260206004820152600b60248201526a056616c7565206e6f7420360ac1b604482015260640161018c565b507f00000000000000000000000000000000000000000000000000000000000000005b33600090815260066020526040902060010154156115e7576115e233611c4d565b61169e565b6005805460018082019092557f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00180546001600160a01b03191633908117909155600090815260066020526040902080546001600160801b0319166001600160501b03421617905560035461166591906001600160401b03166128d0565b33600090815260066020526040902080546001600160401b0392909216600160801b02600160801b600160c01b03199092169190911790555b6040516370a0823160e01b81526000906001600160a01b038316906370a08231906116cd90309060040161264e565b602060405180830381865afa1580156116ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061170e9190612a23565b905061175d7f00000000000000000000000000000000000000000000000000000000000000003330867f0000000000000000000000000000000000000000000000000000000000000000611ad6565b600081836001600160a01b03166370a08231306040518263ffffffff1660e01b815260040161178c919061264e565b602060405180830381865afa1580156117a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117cd9190612a23565b6117d79190612a0c565b336000908152600660205260408120600101805492935083929091906117fe908490612a3c565b9250508190555080600460008282546118179190612a3c565b909155505060405181815233907fb539ca1e5c8d398ddf1c41c30166f33404941683be4683319b57669a93dad4ef9060200160405180910390a250505050565b606061187c8383604051806060016040528060278152602001612c1960279139611ff0565b9392505050565b6001600160a01b0381166000908152600660205260408120600101546118c257506001600160a01b031660009081526006602052604090206002015490565b6118cb82611d1c565b6001600160a01b0383166000908152600660205260409020600201546109609190612a3c565b6118f9610780565b6001600160a01b0316336001600160a01b0316146119295760405162461bcd60e51b815260040161018c90612892565b600954811161194557806009546119409190612a0c565b611948565b60005b600955600854611984906001600160a01b03163033847f0000000000000000000000000000000000000000000000000000000000000000611ad6565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee146119f0577f0000000000000000000000000000000000000000000000000000000000000000611a12565b7f00000000000000000000000000000000000000000000000000000000000000005b9050600454816001600160a01b03166370a08231306040518263ffffffff1660e01b8152600401611a43919061264e565b602060405180830381865afa158015611a60573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a849190612a23565b1015611ad25760405162461bcd60e51b815260206004820152601e60248201527f5374616b696e6720746f6b656e2062616c616e636520726564756365642e0000604482015260640161018c565b5050565b81611ae057611c46565b6001600160a01b03851673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1415611c3a576001600160a01b038416301415611b8057604051632e1a7d4d60e01b8152600481018390526001600160a01b03821690632e1a7d4d90602401600060405180830381600087803b158015611b5857600080fd5b505af1158015611b6c573d6000803e3d6000fd5b50505050611b7b8383836120cb565b611c46565b6001600160a01b038316301415611c2f57348214611bd65760405162461bcd60e51b81526020600482015260136024820152721b5cd9cb9d985b1d5948084f48185b5bdd5b9d606a1b604482015260640161018c565b806001600160a01b031663d0e30db0836040518263ffffffff1660e01b81526004016000604051808303818588803b158015611c1157600080fd5b505af1158015611c25573d6000803e3d6000fd5b5050505050611c46565b611b7b8383836120cb565b611c4685858585612190565b5050505050565b6000611c5882611d1c565b6001600160a01b038316600090815260066020526040812060020180549293508392909190611c88908490612a3c565b90915550506001600160a01b038216600090815260066020526040902080546001600160801b0319166001600160501b034216179055600354611cd6906001906001600160401b03166128d0565b6001600160a01b03909216600090815260066020526040902080546001600160401b0393909316600160801b02600160801b600160c01b03199093169290921790915550565b6001600160a01b0381166000908152600660209081526040808320815160808101835281546001600160801b03811682526001600160401b03600160801b9091048116948201859052600183015493820193909352600290910154606082015260035490929116815b81811015611edc576000818152600760209081526040808320815160a08101835281546001600160501b038082168352600160501b8204811695830195909552600160a01b900490931691830191909152600181015460608301526002015460808201529084831415611df9578551611e08565b81602001516001600160501b03165b6001600160801b03169050600082604001516001600160501b031660001415611e315742611e40565b82604001516001600160501b03165b9050600080611e6d89604001518585611e599190612a0c565b611e639190612a8f565b86606001516121ee565b91509150600080611ea58c886080015189600001516001600160501b031686611e969190612ac4565b611ea09190612ac4565b612236565b91509150838015611eb35750815b611ebd578b611ebf565b805b9b5050505050505050600181611ed59190612a3c565b9050611d85565b50611f1184611f0c7f0000000000000000000000000000000000000000000000000000000000000000600a612bca565b6121ee565b9450611f4090507f0000000000000000000000000000000000000000000000000000000000000000600a612bca565b611f4a9085612ac4565b95945050505050565b600954811115611fa05760405162461bcd60e51b81526020600482015260186024820152774e6f7420656e6f7567682072657761726420746f6b656e7360401b604482015260640161018c565b8060096000828254611fb29190612a0c565b9091555050600854611ad2906001600160a01b03163084847f0000000000000000000000000000000000000000000000000000000000000000611ad6565b6060611ffb84612251565b6120565760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b606482015260840161018c565b600080856001600160a01b0316856040516120719190612bda565b600060405180830381855af49150503d80600081146120ac576040519150601f19603f3d011682016040523d82523d6000602084013e6120b1565b606091505b50915091506120c1828286612260565b9695505050505050565b6000836001600160a01b03168360405160006040518083038185875af1925050503d8060008114612118576040519150601f19603f3d011682016040523d82523d6000602084013e61211d565b606091505b5050905080610dbb57816001600160a01b031663d0e30db0846040518263ffffffff1660e01b81526004016000604051808303818588803b15801561216157600080fd5b505af1158015612175573d6000803e3d6000fd5b50610dbb935050506001600160a01b03841690508585612299565b816001600160a01b0316836001600160a01b031614156121af57610dbb565b6001600160a01b0383163014156121d9576121d46001600160a01b0385168383612299565b610dbb565b610dbb6001600160a01b038516848484612301565b60008083612202575060019050600061222f565b8383028385828161221557612215612aae565b041461222857600080925092505061222f565b6001925090505b9250929050565b6000808383018481101561222857600080925092505061222f565b6001600160a01b03163b151590565b6060831561226f57508161187c565b82511561227f5782518084602001fd5b8160405162461bcd60e51b815260040161018c919061287f565b6040516001600160a01b0383166024820152604481018290526122fc90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152612339565b505050565b6040516001600160a01b0380851660248301528316604482015260648101829052610dbb9085906323b872dd60e01b906084016122c5565b600061238e826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661240b9092919063ffffffff16565b8051909150156122fc57808060200190518101906123ac9190612bf6565b6122fc5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161018c565b606061241a8484600085612422565b949350505050565b6060824710156124835760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161018c565b61248c85612251565b6124d85760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161018c565b600080866001600160a01b031685876040516124f49190612bda565b60006040518083038185875af1925050503d8060008114612531576040519150601f19603f3d011682016040523d82523d6000602084013e612536565b606091505b5091509150612546828286612260565b979650505050505050565b82805461255d906129a6565b90600052602060002090601f01602090048101928261257f57600085556125c5565b82601f1061259857805160ff19168380011785556125c5565b828001600101855582156125c5579182015b828111156125c55782518255916020019190600101906125aa565b506125d19291506125d5565b5090565b5b808211156125d157600081556001016125d6565b600080604083850312156125fd57600080fd5b50508035926020909101359150565b60006020828403121561261e57600080fd5b81356001600160a01b038116811461187c57600080fd5b60006020828403121561264757600080fd5b5035919050565b6001600160a01b0391909116815260200190565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561268a57600080fd5b81356001600160401b03808211156126a157600080fd5b818401915084601f8301126126b557600080fd5b8135818111156126c7576126c7612662565b604051601f8201601f19908116603f011681019083821181831017156126ef576126ef612662565b8160405282815287602084870101111561270857600080fd5b826020860160208301376000928101602001929092525095945050505050565b6000806020838503121561273b57600080fd5b82356001600160401b038082111561275257600080fd5b818501915085601f83011261276657600080fd5b81358181111561277557600080fd5b8660208260051b850101111561278a57600080fd5b60209290920196919550909350505050565b60005b838110156127b757818101518382015260200161279f565b83811115610dbb5750506000910152565b600081518084526127e081602086016020860161279c565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561284957603f198886030184526128378583516127c8565b9450928501929085019060010161281b565b5092979650505050505050565b60006020828403121561286857600080fd5b81356001600160501b038116811461187c57600080fd5b60208152600061187c60208301846127c8565b6020808252600e908201526d139bdd08185d5d1a1bdc9a5e995960921b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b60006001600160401b03838116908316818110156128f0576128f06128ba565b039392505050565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b634e487b7160e01b600052603260045260246000fd5b6000808335601e1984360301811261295c57600080fd5b8301803591506001600160401b0382111561297657600080fd5b60200191503681900382131561222f57600080fd5b600060001982141561299f5761299f6128ba565b5060010190565b600181811c908216806129ba57607f821691505b602082108114156129db57634e487b7160e01b600052602260045260246000fd5b50919050565b60006001600160401b03808316818516808303821115612a0357612a036128ba565b01949350505050565b600082821015612a1e57612a1e6128ba565b500390565b600060208284031215612a3557600080fd5b5051919050565b60008219821115612a4f57612a4f6128ba565b500190565b634e487b7160e01b600052603160045260246000fd5b604081526000612a7d60408301856127c8565b8281036020840152611f4a81856127c8565b6000816000190483118215151615612aa957612aa96128ba565b500290565b634e487b7160e01b600052601260045260246000fd5b600082612ae157634e487b7160e01b600052601260045260246000fd5b500490565b600181815b80851115612b21578160001904821115612b0757612b076128ba565b80851615612b1457918102915b93841c9390800290612aeb565b509250929050565b600082612b3857506001610960565b81612b4557506000610960565b8160018114612b5b5760028114612b6557612b81565b6001915050610960565b60ff841115612b7657612b766128ba565b50506001821b610960565b5060208310610133831016604e8410600b8410161715612ba4575081810a610960565b612bae8383612ae6565b8060001904821115612bc257612bc26128ba565b029392505050565b600061187c61ffff841683612b29565b60008251612bec81846020870161279c565b9190910192915050565b600060208284031215612c0857600080fd5b8151801515811461187c57600080fdfe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212203a75c50d9a7c429790dec5c83f6340cdb1c94e96ce4966d033f13d84e154b15f64736f6c634300080c0033",
    "sourceMap": "1627:5184:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2755:10;-1:-1:-1;;;;;2769:18:18;2755:32;;2747:77;;;;-1:-1:-1;;;2747:77:18;;216:2:644;2747:77:18;;;198:21:644;;;235:18;;;228:30;294:34;274:18;;;267:62;346:18;;2747:77:18;;;;;;;;;1627:5184;;;;;4498:700:88;;;;;;;;;;-1:-1:-1;4498:700:88;;;;;:::i;:::-;;:::i;1133:173:68:-;;;;;;;;;;-1:-1:-1;1133:173:68;;;;;:::i;:::-;;:::i;2880:165:18:-;;;;;;:::i;:::-;;:::i;2887:92:88:-;;;;;;;;;;-1:-1:-1;2887:92:88;;;;;:::i;:::-;;:::i;3208:78::-;;;;;;;;;;;;;:::i;1298:29::-;;;;;;;;;;-1:-1:-1;1298:29:88;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;793:37;;;;;;;;;;;;;;;1195:34;;;;;;;;;;;;;;;;;;;1458:25:644;;;1446:2;1431:18;1195:34:88;1312:177:644;871:86:68;;;;;;;;;;;;;:::i;1419:41:88:-;;;;;;;;;;-1:-1:-1;1419:41:88;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1419:41:88;;;-1:-1:-1;;;1419:41:88;;;-1:-1:-1;;;;;1419:41:88;;;;;;;;;-1:-1:-1;;;;;1741:32:644;;;1723:51;;-1:-1:-1;;;;;1810:31:644;;;1805:2;1790:18;;1783:59;1858:18;;;1851:34;1916:2;1901:18;;1894:34;1710:3;1695:19;1419:41:88;1494:440:644;1003:188:54;;;;;;;;;;-1:-1:-1;1003:188:54;;;;;:::i;:::-;;:::i;3340:124:18:-;;;;;;;;;;-1:-1:-1;3439:18:18;;3340:124;;5844:264:88;;;;;;;;;;;;;:::i;:::-;;;;3172:25:644;;;3228:2;3213:18;;3206:34;;;;3145:18;5844:264:88;2998:248:644;967:43:88;;;;;;;;;;;;;;;;;;3425:6:644;3413:19;;;3395:38;;3383:2;3368:18;967:43:88;3251:188:644;2585:94:88;;;;;;:::i;:::-;;:::i;698:319:63:-;;;;;;;;;;-1:-1:-1;698:319:63;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3557:481:88:-;;;;;;;;;;-1:-1:-1;3557:481:88;;;;;:::i;:::-;;:::i;877:44::-;;;;;;;;;;;;;;;5473:220;;;;;;;;;;-1:-1:-1;5473:220:88;;;;;:::i;:::-;;:::i;3105:159:18:-;;;;;;;;;;-1:-1:-1;3105:159:18;;;;;:::i;:::-;;:::i;5699:139:88:-;;;;;;;;;;;;;:::i;565:34:54:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;1774:26:18:-;;;;;;;;;;-1:-1:-1;1774:26:18;;;;-1:-1:-1;;;;;1774:26:18;;;4498:700:88;4596:24;:22;:24::i;:::-;4591:80;;4636:24;;-1:-1:-1;;;4636:24:88;;;;;;;:::i;4591:80::-;4735:15;;4681:33;;4717:17;;4681:33;;4735:19;;4753:1;;-1:-1:-1;;;;;4735:15:88;:19;:::i;:::-;-1:-1:-1;;;;;4717:38:88;;;;;;;;;;;;;;;-1:-1:-1;4717:38:88;4681:74;;;;;;;;;-1:-1:-1;;;;;4681:74:88;;;;;-1:-1:-1;;;4681:74:88;;;;;;;;;;;-1:-1:-1;;;4681:74:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4786:44:88;;;;:96;;;4850:9;:32;;;4834:12;:48;;4786:96;4765:166;;;;-1:-1:-1;;;4765:166:88;;6829:2:644;4765:166:88;;;6811:21:644;6868:2;6848:18;;;6841:30;-1:-1:-1;;;6887:18:644;;;6880:53;6950:18;;4765:166:88;6627:347:644;4765:166:88;4962:18;;4941:66;;4982:10;4994:12;4941:20;:66::i;:::-;5055:30;;;;;5123:32;;;;;5023:168;;;7210:25:644;;;7266:2;7251:18;;7244:34;;;7294:18;;7287:34;7337:18;;;7330:34;;;5023:168:88;;7182:19:644;5023:168:88;;;;;;;4581:617;4498:700;;:::o;1133:173:68:-;1203:14;:12;:14::i;:::-;1198:70;;1233:24;;-1:-1:-1;;;1233:24:68;;;;;;;:::i;1198:70::-;1277:22;1289:9;1277:11;:22::i;:::-;1133:173;:::o;2880:165:18:-;245:1:218;548:7;;:19;;540:63;;;;-1:-1:-1;;;540:63:218;;;;;;;:::i;:::-;245:1;678:18;;2974:29:18::1;2995:7:::0;2974:20:::1;:29::i;:::-;-1:-1:-1::0;202:1:218;851:7;:22;2880:165:18:o;2887:92:88:-;245:1:218;548:7;;:19;;540:63;;;;-1:-1:-1;;;540:63:218;;;;;;;:::i;:::-;245:1;678:18;;2954::88::1;2964:7:::0;2954:9:::1;:18::i;3208:78::-:0;245:1:218;548:7;;:19;;540:63;;;;-1:-1:-1;;;540:63:218;;;;;;;:::i;:::-;245:1;678:18;;3264:15:88::1;:13;:15::i;:::-;202:1:218::0;851:7;:22;3208:78:88:o;1298:29::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1298:29:88;;-1:-1:-1;1298:29:88;:::o;871:86:68:-;944:6;;-1:-1:-1;;;;;944:6:68;;871:86::o;1003:188:54:-;1080:20;:18;:20::i;:::-;1075:76;;1116:24;;-1:-1:-1;;;1116:24:54;;;;;;;:::i;1075:76::-;1161:23;1179:4;1161:17;:23::i;5844:264:88:-;5974:15;;5891:18;;;;5956:17;;5891:18;;5974:19;;5992:1;;-1:-1:-1;;;;;5974:15:88;:19;:::i;:::-;-1:-1:-1;;;;;5956:38:88;;;;;;;;;;;;:59;;;5943:72;;6040:17;:38;6076:1;6058:15;;;;;;;;;-1:-1:-1;;;;;6058:15:88;:19;;;;:::i;:::-;-1:-1:-1;;;;;6040:38:88;;;;;;;;;;;;:61;;;6025:76;;5844:264;;:::o;2585:94::-;245:1:218;548:7;;:19;;540:63;;;;-1:-1:-1;;;540:63:218;;;;;;;:::i;:::-;245:1;678:18;;2657:15:88::1;2664:7:::0;2657:6:::1;:15::i;698:319:63:-:0;775:22;831:4;-1:-1:-1;;;;;819:24:63;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;809:34;;858:9;853:134;873:15;;;853:134;;;922:54;961:4;968;;973:1;968:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;922:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;922:30:63;;-1:-1:-1;;;922:54:63:i;:::-;909:7;917:1;909:10;;;;;;;;:::i;:::-;;;;;;:67;;;;890:3;;;;;:::i;:::-;;;;853:134;;;;698:319;;;;;:::o;3557:481:88:-;3628:24;:22;:24::i;:::-;3623:80;;3668:24;;-1:-1:-1;;;3668:24:88;;;;;;;:::i;3623:80::-;3767:15;;3713:33;;3749:17;;3713:33;;3767:19;;3785:1;;-1:-1:-1;;;;;3767:15:88;:19;:::i;:::-;-1:-1:-1;;;;;3749:38:88;;;;;;;;;;;;;;;-1:-1:-1;3749:38:88;3713:74;;;;;;;;;-1:-1:-1;;;;;3713:74:88;;;;;;-1:-1:-1;;;3713:74:88;;;;;;;;;;;-1:-1:-1;;;3713:74:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3805:31:88;;;;3797:64;;;;-1:-1:-1;;;3797:64:88;;8735:2:644;3797:64:88;;;8717:21:644;8774:2;8754:18;;;8747:30;-1:-1:-1;;;8793:18:644;;;8786:50;8853:18;;3797:64:88;8533:344:644;3797:64:88;3872:97;3893:9;3904;:30;;;3936:9;:32;;;3872:20;:97::i;:::-;4001:18;;3985:46;;;-1:-1:-1;;;;;9109:15:644;;;9091:34;;9161:15;;;9156:2;9141:18;;9134:43;3985:46:88;;9027:18:644;3985:46:88;;;;;;;;3613:425;3557:481;:::o;5473:220::-;-1:-1:-1;;;;;5610:16:88;;5543:21;5610:16;;;:7;:16;;;;;:29;;;;5660:26;5618:7;5660:17;:26::i;:::-;5649:37;;5473:220;;;:::o;3105:159:18:-;245:1:218;548:7;;:19;;540:63;;;;-1:-1:-1;;;540:63:218;;;;;;;:::i;:::-;245:1;678:18;;3192:30:18::1;3214:7:::0;3192:21:::1;:30::i;5699:139:88:-:0;5802:15;;5743:17;;5784;;5743;;5802:19;;5820:1;;-1:-1:-1;;;;;5802:15:88;:19;:::i;:::-;-1:-1:-1;;;;;5784:38:88;;;;;;;;;;;;-1:-1:-1;5784:38:88;:47;-1:-1:-1;;;;;5784:47:88;;5699:139;-1:-1:-1;5699:139:88:o;565:34:54:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6268:125:18:-;6342:4;6379:7;:5;:7::i;:::-;-1:-1:-1;;;;;6365:21:18;:10;-1:-1:-1;;;;;6365:21:18;;6358:28;;6268:125;:::o;10283:741:88:-;10438:17;10430:41;;;;-1:-1:-1;;;10430:41:88;;9775:2:644;10430:41:88;;;9757:21:644;9814:2;9794:18;;;9787:30;-1:-1:-1;;;9833:18:644;;;9826:41;9884:18;;10430:41:88;9573:335:644;10430:41:88;-1:-1:-1;;;;;10489:14:88;;10481:47;;;;-1:-1:-1;;;10481:47:88;;10115:2:644;10481:47:88;;;10097:21:644;10154:2;10134:18;;;10127:30;-1:-1:-1;;;10173:18:644;;;10166:50;10233:18;;10481:47:88;9913:344:644;10481:47:88;10560:15;;;-1:-1:-1;;;;;10560:15:88;;;;10538:19;10585:20;10560:15;;10585:20;:::i;:::-;;;-1:-1:-1;;;;;10585:20:88;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10649:239:88;;;;;;;;-1:-1:-1;;;;;10649:239:88;;;;;10832:15;10649:239;;;;;;;;;-1:-1:-1;10649:239:88;;;;;;;;;;;;;;;;;;10616:30;;;:17;:30;;;;;;;:272;;;;;;;;;;-1:-1:-1;;;10616:272:88;-1:-1:-1;;;;;;;;10616:272:88;;;-1:-1:-1;;;10616:272:88;-1:-1:-1;;;;;;10616:272:88;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10616:272:88;;;;;;;;;;10903:15;;10899:119;;10991:15;10934:17;:34;10952:15;10966:1;10952:11;:15;:::i;:::-;10934:34;;;;;;;;;;;:47;;;:73;;;;;-1:-1:-1;;;;;10934:73:88;;;;;-1:-1:-1;;;;;10934:73:88;;;;;;10899:119;10420:604;10283:741;;;:::o;1421:172:68:-;1501:6;;;-1:-1:-1;;;;;1517:18:68;;;-1:-1:-1;;;;;;1517:18:68;;;;;;;1551:35;;1501:6;;;1517:18;1501:6;;1551:35;;1480:18;;1551:35;1470:123;1421:172;:::o;4558:660:18:-;4654:7;:5;:7::i;:::-;-1:-1:-1;;;;;4640:21:18;:10;-1:-1:-1;;;;;4640:21:18;;4632:48;;;;-1:-1:-1;;;4632:48:18;;;;;;;:::i;:::-;4714:11;;4691:20;;-1:-1:-1;;;;;4714:11:18;408:42:284;4714:47:18;:82;;4785:11;;-1:-1:-1;;;;;4785:11:18;4714:82;;;4764:18;4714:82;4691:105;;4807:21;4838:12;-1:-1:-1;;;;;4831:30:18;;4870:4;4831:45;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4947:11;;4807:69;;-1:-1:-1;4886:186:18;;-1:-1:-1;;;;;4947:11:18;4972:10;5004:4;5023:7;5044:18;4886:47;:186::i;:::-;5082:20;5153:13;5112:12;-1:-1:-1;;;;;5105:30:18;;5144:4;5105:45;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:61;;;;:::i;:::-;5082:84;;5199:12;5177:18;;:34;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;4558:660:18:o;7720:1103:88:-;12718:10;7783:21;7807:26;;;:7;:26;;;;;:39;;;7864:12;7856:45;;;;-1:-1:-1;;;7856:45:88;;11157:2:644;7856:45:88;;;11139:21:644;11196:2;11176:18;;;11169:30;-1:-1:-1;;;11215:18:644;;;11208:50;11275:18;;7856:45:88;10955:344:644;7856:45:88;7936:7;7919:13;:24;;7911:65;;;;-1:-1:-1;;;7911:65:88;;11506:2:644;7911:65:88;;;11488:21:644;11545:2;11525:18;;;11518:30;-1:-1:-1;;;11564:18:644;;;11557:58;11632:18;;7911:65:88;11304:352:644;7911:65:88;7987:51;12718:10;7987:32;:51::i;:::-;8070:7;8053:13;:24;8049:404;;;8093:30;8126:12;8093:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8093:45:88;;;;;;;;;;;;;;;;;;;;;;;8157:9;8152:291;8176:13;:20;8172:1;:24;8152:291;;;12718:10;-1:-1:-1;;;;;8225:37:88;:13;8239:1;8225:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;8225:37:88;;8221:208;;;8304:13;8341:1;8318:13;:20;:24;;;;:::i;:::-;8304:39;;;;;;;;:::i;:::-;;;;;;;8286:12;8299:1;8286:15;;;;;;;;:::i;:::-;;;;;;;;;:57;;;;;-1:-1:-1;;;;;8286:57:88;;;;;-1:-1:-1;;;;;8286:57:88;;;;;;8365:12;:18;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;8365:18:88;;;;;-1:-1:-1;;;;;;8365:18:88;;;;;;8405:5;;8221:208;8198:3;;;:::i;:::-;;;8152:291;;;;8079:374;8049:404;12718:10;8462:26;;;;:7;:26;;;;;:39;;:50;;8505:7;;8462:26;:50;;8505:7;;8462:50;:::i;:::-;;;;;;;;8545:7;8522:19;;:30;;;;;;;:::i;:::-;;;;-1:-1:-1;8563:194:88;;-1:-1:-1;8624:12:88;8658:4;12718:10;8708:7;8729:18;8563:47;:194::i;:::-;8773:43;;1458:25:644;;;12718:10:88;;8773:43;;1446:2:644;1431:18;8773:43:88;;;;;;;7773:1050;7720:1103;:::o;8900:533::-;8952:15;9016:36;12718:10;9016:17;:36::i;:::-;12718:10;8970:26;;;;:7;:26;;;;;:43;;;:82;;;;:::i;:::-;8952:100;-1:-1:-1;9071:12:88;9063:35;;;;-1:-1:-1;;;9063:35:88;;11995:2:644;9063:35:88;;;11977:21:644;12034:2;12014:18;;;12007:30;-1:-1:-1;;;12053:18:644;;;12046:40;12103:18;;9063:35:88;11793:334:644;9063:35:88;12718:10;9109:26;;;;:7;:26;;;;;:69;;-1:-1:-1;;;;;;9109:69:88;9162:15;-1:-1:-1;;;;;9109:69:88;;;;9188:43;;:47;9298:15;;:19;;-1:-1:-1;;;;;;;9298:15:88;:19;:::i;:::-;12718:10;9245:26;;;;:7;:26;;;;;:72;;-1:-1:-1;;;;;9245:72:88;;;;-1:-1:-1;;;9245:72:88;-1:-1:-1;;;;;;;;9245:72:88;;;;;;;;;;9328:40;;9360:7;9328:12;:40::i;:::-;9384:42;;1458:25:644;;;12718:10:88;;9384:42;;1446:2:644;1431:18;9384:42:88;;;;;;;8942:491;8900:533::o;1273:185:54:-;1339:21;1363:11;1339:35;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1384:18:54;;1339:35;;-1:-1:-1;1384:18:54;;:11;;-1:-1:-1;1384:18:54;;;;-1:-1:-1;1384:18:54;-1:-1:-1;1384:18:54;:::i;:::-;;1418:33;1437:7;1446:4;1418:33;;;;;;;:::i;6359:1296:88:-;6427:12;6419:41;;;;-1:-1:-1;;;6419:41:88;;12720:2:644;6419:41:88;;;12702:21:644;12759:2;12739:18;;;12732:30;-1:-1:-1;;;12778:18:644;;;12771:46;12834:18;;6419:41:88;12518:340:644;6419:41:88;6471:21;6506:12;-1:-1:-1;;;;;6506:48:88;408:42:284;6506:48:88;6502:224;;;-1:-1:-1;6586:18:88;6502:224;;;6643:9;:14;6635:38;;;;-1:-1:-1;;;6635:38:88;;13065:2:644;6635:38:88;;;13047:21:644;13104:2;13084:18;;;13077:30;-1:-1:-1;;;13123:18:644;;;13116:41;13174:18;;6635:38:88;12863:335:644;6635:38:88;-1:-1:-1;6703:12:88;6502:224;12718:10;6782:1;6740:26;;;:7;:26;;;;;:39;;;:43;6736:361;;6799:51;12718:10;7987:32;:51::i;6799:::-;6736:361;;;6881:12;:36;;;;;;;;;;;;;-1:-1:-1;;;;;;6881:36:88;12718:10;6881:36;;;;;;-1:-1:-1;6931:26:88;;;:7;6881:36;6931:26;;;;:69;;-1:-1:-1;;;;;;6931:69:88;-1:-1:-1;;;;;6984:15:88;6931:69;;;;7067:15;;:19;;6881:36;-1:-1:-1;;;;;7067:15:88;:19;:::i;:::-;12718:10;7014:26;;;;:7;:26;;;;;:72;;-1:-1:-1;;;;;7014:72:88;;;;-1:-1:-1;;;7014:72:88;-1:-1:-1;;;;;;;;7014:72:88;;;;;;;;;6736:361;7131:46;;-1:-1:-1;;;7131:46:88;;7107:21;;-1:-1:-1;;;;;7131:31:88;;;;;:46;;7171:4;;7131:46;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7107:70;-1:-1:-1;7187:194:88;7248:12;12718:10;7313:4;7332:7;7353:18;7187:47;:194::i;:::-;7391:20;7463:13;7421;-1:-1:-1;;;;;7414:31:88;;7454:4;7414:46;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:62;;;;:::i;:::-;12718:10;7487:26;;;;:7;:26;;;;;:39;;:55;;7391:85;;-1:-1:-1;7391:85:88;;7487:39;;:26;:55;;7391:85;;7487:55;:::i;:::-;;;;;;;;7575:12;7552:19;;:35;;;;;;;:::i;:::-;;;;-1:-1:-1;;7603:45:88;;1458:25:644;;;12718:10:88;;7603:45;;1446:2:644;1431:18;7603:45:88;;;;;;;6409:1246;;;6359:1296;:::o;6538:198:288:-;6621:12;6652:77;6673:6;6681:4;6652:77;;;;;;;;;;;;;;;;;:20;:77::i;:::-;6645:84;6538:198;-1:-1:-1;;;6538:198:288:o;9487:322:88:-;-1:-1:-1;;;;;9594:16:88;;9562;9594;;;:7;:16;;;;;:29;;;9590:213;;-1:-1:-1;;;;;;9655:16:88;;;;;:7;:16;;;;;:33;;;;9487:322::o;9590:213::-;9766:26;9784:7;9766:17;:26::i;:::-;-1:-1:-1;;;;;9730:16:88;;;;;;:7;:16;;;;;:33;;;:62;;;;:::i;5307:866:18:-;5404:7;:5;:7::i;:::-;-1:-1:-1;;;;;5390:21:18;:10;-1:-1:-1;;;;;5390:21:18;;5382:48;;;;-1:-1:-1;;;5382:48:18;;;;;;;:::i;:::-;5531:18;;5521:7;:28;:63;;5577:7;5556:18;;:28;;;;:::i;:::-;5521:63;;;5552:1;5521:63;5500:18;:84;5656:11;;5595:186;;-1:-1:-1;;;;;5656:11:18;5689:4;5708:10;5732:7;5753:18;5595:47;:186::i;:::-;5902:21;5926:12;-1:-1:-1;;;;;5926:48:18;408:42:284;5926:48:18;:84;;5998:12;5926:84;;;5977:18;5926:84;5902:108;;6091:19;;6048:13;-1:-1:-1;;;;;6041:31:18;;6081:4;6041:46;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:69;;6020:146;;;;-1:-1:-1;;;6020:146:18;;13405:2:644;6020:146:18;;;13387:21:644;13444:2;13424:18;;;13417:30;13483:32;13463:18;;;13456:60;13533:18;;6020:146:18;13203:354:644;6020:146:18;5372:801;5307:866;:::o;979:1021:284:-;1178:12;1174:49;;1206:7;;1174:49;-1:-1:-1;;;;;1237:25:284;;408:42;1237:25;1233:761;;;-1:-1:-1;;;;;1282:22:284;;1299:4;1282:22;1278:626;;;1412:44;;-1:-1:-1;;;1412:44:284;;;;;1458:25:644;;;-1:-1:-1;;;;;1412:35:284;;;;;1431:18:644;;1412:44:284;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1474:69;1509:3;1514:7;1523:19;1474:34;:69::i;:::-;1233:761;;1278:626;-1:-1:-1;;;;;1568:20:284;;1583:4;1568:20;1564:340;;;1676:9;1665:7;:20;1657:52;;;;-1:-1:-1;;;1657:52:284;;13764:2:644;1657:52:284;;;13746:21:644;13803:2;13783:18;;;13776:30;-1:-1:-1;;;13822:18:644;;;13815:49;13881:18;;1657:52:284;13562:343:644;1657:52:284;1733:19;-1:-1:-1;;;;;1727:34:284;;1770:7;1727:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1233:761;;1564:340;1820:69;1855:3;1860:7;1869:19;1820:34;:69::i;1233:761::-;1934:49;1952:9;1963:5;1970:3;1975:7;1934:17;:49::i;:::-;979:1021;;;;;:::o;9908:332:88:-;9994:15;10012:26;10030:7;10012:17;:26::i;:::-;-1:-1:-1;;;;;10048:16:88;;;;;;:7;:16;;;;;:33;;:44;;9994;;-1:-1:-1;9994:44:88;;10048:33;;:16;:44;;9994;;10048;:::i;:::-;;;;-1:-1:-1;;;;;;;10102:16:88;;;;;;:7;:16;;;;;:59;;-1:-1:-1;;;;;;10102:59:88;-1:-1:-1;;;;;10145:15:88;10102:59;;;;10214:15;;:19;;10102:59;;-1:-1:-1;;;;;10214:15:88;:19;:::i;:::-;-1:-1:-1;;;;;10171:16:88;;;;;;;:7;:16;;;;;:62;;-1:-1:-1;;;;;10171:62:88;;;;-1:-1:-1;;;10171:62:88;-1:-1:-1;;;;;;;;10171:62:88;;;;;;;;;;-1:-1:-1;9908:332:88:o;11075:1257::-;-1:-1:-1;;;;;11201:16:88;;11150;11201;;;:7;:16;;;;;;;;11178:39;;;;;;;;;-1:-1:-1;;;;;11178:39:88;;;;-1:-1:-1;;;;;;;;11178:39:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11324:15;;11178:39;;;11324:15;11178:39;11350:851;11391:16;11387:1;:20;11350:851;;;11431:33;11467:20;;;:17;:20;;;;;;;;11431:56;;;;;;;;;-1:-1:-1;;;;;11431:56:88;;;;;-1:-1:-1;;;11431:56:88;;;;;;;;;;;-1:-1:-1;;;11431:56:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;11522:23;;;;:76;;11575:23;;11522:76;;;11548:9;:24;;;-1:-1:-1;;;;;11522:76:88;;-1:-1:-1;;;;;11502:96:88;;;11612:15;11630:9;:22;;;-1:-1:-1;;;;;11630:27:88;11656:1;11630:27;;:70;;11685:15;11630:70;;;11660:9;:22;;;-1:-1:-1;;;;;11630:70:88;;11612:88;;11716:22;11740;11766:138;11823:6;:19;;;11810:9;11800:7;:19;;;;:::i;:::-;11799:43;;;;:::i;:::-;11860:9;:30;;;11766:15;:138::i;:::-;11715:189;;;;11919:18;11939;11961:145;11994:8;12060:9;:32;;;12038:9;:18;;;-1:-1:-1;;;;;12021:35:88;:14;:35;;;;:::i;:::-;12020:72;;;;:::i;:::-;11961:15;:145::i;:::-;11918:188;;;;12132:17;:34;;;;;12153:13;12132:34;:58;;12182:8;12132:58;;;12169:10;12132:58;12121:69;;11417:784;;;;;;;11414:1;11409:6;;;;;:::i;:::-;;;11350:851;;;-1:-1:-1;12226:50:88;12242:8;12252:23;12256:19;12252:2;:23;:::i;:::-;12226:15;:50::i;:::-;12211:65;-1:-1:-1;12300:24:88;;-1:-1:-1;12304:20:88;12300:2;:24;:::i;:::-;12287:38;;;;:::i;:::-;;11075:1257;-1:-1:-1;;;;;11075:1257:88:o;3891:401:18:-;4004:18;;3992:8;:30;;3984:67;;;;-1:-1:-1;;;3984:67:18;;16025:2:644;3984:67:18;;;16007:21:644;16064:2;16044:18;;;16037:30;-1:-1:-1;;;16083:18:644;;;16076:54;16147:18;;3984:67:18;15823:348:644;3984:67:18;4083:8;4061:18;;:30;;;;;;;:::i;:::-;;;;-1:-1:-1;;4162:11:18;;4101:184;;-1:-1:-1;;;;;4162:11:18;4195:4;4214:7;4235:8;4257:18;4101:47;:184::i;6922:387:288:-;7063:12;7095:18;7106:6;7095:10;:18::i;:::-;7087:69;;;;-1:-1:-1;;;7087:69:288;;16378:2:644;7087:69:288;;;16360:21:644;16417:2;16397:18;;;16390:30;16456:34;16436:18;;;16429:62;-1:-1:-1;;;16507:18:644;;;16500:36;16553:19;;7087:69:288;16176:402:644;7087:69:288;7168:12;7182:23;7209:6;-1:-1:-1;;;;;7209:19:288;7229:4;7209:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7167:67;;;;7251:51;7268:7;7277:10;7289:12;7251:16;:51::i;:::-;7244:58;6922:387;-1:-1:-1;;;;;;6922:387:288:o;2916:469:284:-;3168:12;3186:2;-1:-1:-1;;;;;3186:7:284;3202:5;3186:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3167:46;;;3228:7;3223:156;;3257:19;-1:-1:-1;;;;;3251:34:284;;3294:5;3251:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3317:51:284;;-1:-1:-1;;;;;;;;3317:40:284;;;-1:-1:-1;3358:2:284;3362:5;3317:40;:51::i;2073:396::-;2234:3;-1:-1:-1;;;;;2225:12:284;:5;-1:-1:-1;;;;;2225:12:284;;2221:49;;;2253:7;;2221:49;-1:-1:-1;;;;;2284:22:284;;2301:4;2284:22;2280:183;;;2322:44;-1:-1:-1;;;;;2322:30:284;;2353:3;2358:7;2322:30;:44::i;:::-;2280:183;;;2397:55;-1:-1:-1;;;;;2397:34:284;;2432:5;2439:3;2444:7;2397:34;:55::i;1339:493:241:-;1400:4;;1683:6;1679:28;;-1:-1:-1;1699:4:241;;-1:-1:-1;1705:1:241;1691:16;;1679:28;1733:5;;;1737:1;1733;:5;:1;1756:5;;;;:::i;:::-;;:10;1752:33;;1776:5;1783:1;1768:17;;;;;;;1752:33;1807:4;;-1:-1:-1;1813:1:241;-1:-1:-1;1339:493:241;;;;;;:::o;641:216::-;702:4;;763:5;;;786;;;782:28;;;801:5;808:1;793:17;;;;;;;1137:320:288;-1:-1:-1;;;;;1427:19:288;;:23;;;1137:320::o;7529:692::-;7675:12;7703:7;7699:516;;;-1:-1:-1;7733:10:288;7726:17;;7699:516;7844:17;;:21;7840:365;;8038:10;8032:17;8098:15;8085:10;8081:2;8077:19;8070:44;7840:365;8177:12;8170:20;;-1:-1:-1;;;8170:20:288;;;;;;;;:::i;735:205:226:-;874:58;;-1:-1:-1;;;;;17264:32:644;;874:58:226;;;17246:51:644;17313:18;;;17306:34;;;847:86:226;;867:5;;-1:-1:-1;;;897:23:226;17219:18:644;;874:58:226;;;;-1:-1:-1;;874:58:226;;;;;;;;;;;;;;-1:-1:-1;;;;;874:58:226;-1:-1:-1;;;;;;874:58:226;;;;;;;;;;847:19;:86::i;:::-;735:205;;;:::o;946:241::-;1111:68;;-1:-1:-1;;;;;17609:15:644;;;1111:68:226;;;17591:34:644;17661:15;;17641:18;;;17634:43;17693:18;;;17686:34;;;1084:96:226;;1104:5;;-1:-1:-1;;;1134:27:226;17526:18:644;;1111:68:226;17351:375:644;3241:706:226;3660:23;3686:69;3714:4;3686:69;;;;;;;;;;;;;;;;;3694:5;-1:-1:-1;;;;;3686:27:226;;;:69;;;;;:::i;:::-;3769:17;;3660:95;;-1:-1:-1;3769:21:226;3765:176;;3864:10;3853:30;;;;;;;;;;;;:::i;:::-;3845:85;;;;-1:-1:-1;;;3845:85:226;;18215:2:644;3845:85:226;;;18197:21:644;18254:2;18234:18;;;18227:30;18293:34;18273:18;;;18266:62;-1:-1:-1;;;18344:18:644;;;18337:40;18394:19;;3845:85:226;18013:406:644;3827:223:288;3960:12;3991:52;4013:6;4021:4;4027:1;4030:12;3991:21;:52::i;:::-;3984:59;3827:223;-1:-1:-1;;;;3827:223:288:o;4914:501::-;5079:12;5136:5;5111:21;:30;;5103:81;;;;-1:-1:-1;;;5103:81:288;;18626:2:644;5103:81:288;;;18608:21:644;18665:2;18645:18;;;18638:30;18704:34;18684:18;;;18677:62;-1:-1:-1;;;18755:18:644;;;18748:36;18801:19;;5103:81:288;18424:402:644;5103:81:288;5202:18;5213:6;5202:10;:18::i;:::-;5194:60;;;;-1:-1:-1;;;5194:60:288;;19033:2:644;5194:60:288;;;19015:21:644;19072:2;19052:18;;;19045:30;19111:31;19091:18;;;19084:59;19160:18;;5194:60:288;18831:353:644;5194:60:288;5266:12;5280:23;5307:6;-1:-1:-1;;;;;5307:11:288;5327:5;5335:4;5307:33;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5265:75;;;;5357:51;5374:7;5383:10;5395:12;5357:16;:51::i;:::-;5350:58;4914:501;-1:-1:-1;;;;;;;4914:501:288:o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;375:248:644;443:6;451;504:2;492:9;483:7;479:23;475:32;472:52;;;520:1;517;510:12;472:52;-1:-1:-1;;543:23:644;;;613:2;598:18;;;585:32;;-1:-1:-1;375:248:644:o;628:286::-;687:6;740:2;728:9;719:7;715:23;711:32;708:52;;;756:1;753;746:12;708:52;782:23;;-1:-1:-1;;;;;834:31:644;;824:42;;814:70;;880:1;877;870:12;919:180;978:6;1031:2;1019:9;1010:7;1006:23;1002:32;999:52;;;1047:1;1044;1037:12;999:52;-1:-1:-1;1070:23:644;;919:180;-1:-1:-1;919:180:644:o;1104:203::-;-1:-1:-1;;;;;1268:32:644;;;;1250:51;;1238:2;1223:18;;1104:203::o;1939:127::-;2000:10;1995:3;1991:20;1988:1;1981:31;2031:4;2028:1;2021:15;2055:4;2052:1;2045:15;2071:922;2140:6;2193:2;2181:9;2172:7;2168:23;2164:32;2161:52;;;2209:1;2206;2199:12;2161:52;2249:9;2236:23;-1:-1:-1;;;;;2319:2:644;2311:6;2308:14;2305:34;;;2335:1;2332;2325:12;2305:34;2373:6;2362:9;2358:22;2348:32;;2418:7;2411:4;2407:2;2403:13;2399:27;2389:55;;2440:1;2437;2430:12;2389:55;2476:2;2463:16;2498:2;2494;2491:10;2488:36;;;2504:18;;:::i;:::-;2579:2;2573:9;2547:2;2633:13;;-1:-1:-1;;2629:22:644;;;2653:2;2625:31;2621:40;2609:53;;;2677:18;;;2697:22;;;2674:46;2671:72;;;2723:18;;:::i;:::-;2763:10;2759:2;2752:22;2798:2;2790:6;2783:18;2838:7;2833:2;2828;2824;2820:11;2816:20;2813:33;2810:53;;;2859:1;2856;2849:12;2810:53;2915:2;2910;2906;2902:11;2897:2;2889:6;2885:15;2872:46;2960:1;2938:15;;;2955:2;2934:24;2927:35;;;;-1:-1:-1;2942:6:644;2071:922;-1:-1:-1;;;;;2071:922:644:o;3444:626::-;3541:6;3549;3602:2;3590:9;3581:7;3577:23;3573:32;3570:52;;;3618:1;3615;3608:12;3570:52;3658:9;3645:23;-1:-1:-1;;;;;3728:2:644;3720:6;3717:14;3714:34;;;3744:1;3741;3734:12;3714:34;3782:6;3771:9;3767:22;3757:32;;3827:7;3820:4;3816:2;3812:13;3808:27;3798:55;;3849:1;3846;3839:12;3798:55;3889:2;3876:16;3915:2;3907:6;3904:14;3901:34;;;3931:1;3928;3921:12;3901:34;3984:7;3979:2;3969:6;3966:1;3962:14;3958:2;3954:23;3950:32;3947:45;3944:65;;;4005:1;4002;3995:12;3944:65;4036:2;4028:11;;;;;4058:6;;-1:-1:-1;3444:626:644;;-1:-1:-1;;;;3444:626:644:o;4075:258::-;4147:1;4157:113;4171:6;4168:1;4165:13;4157:113;;;4247:11;;;4241:18;4228:11;;;4221:39;4193:2;4186:10;4157:113;;;4288:6;4285:1;4282:13;4279:48;;;-1:-1:-1;;4323:1:644;4305:16;;4298:27;4075:258::o;4338:257::-;4379:3;4417:5;4411:12;4444:6;4439:3;4432:19;4460:63;4516:6;4509:4;4504:3;4500:14;4493:4;4486:5;4482:16;4460:63;:::i;:::-;4577:2;4556:15;-1:-1:-1;;4552:29:644;4543:39;;;;4584:4;4539:50;;4338:257;-1:-1:-1;;4338:257:644:o;4600:800::-;4760:4;4789:2;4829;4818:9;4814:18;4859:2;4848:9;4841:21;4882:6;4917;4911:13;4948:6;4940;4933:22;4986:2;4975:9;4971:18;4964:25;;5048:2;5038:6;5035:1;5031:14;5020:9;5016:30;5012:39;4998:53;;5086:2;5078:6;5074:15;5107:1;5117:254;5131:6;5128:1;5125:13;5117:254;;;5224:2;5220:7;5208:9;5200:6;5196:22;5192:36;5187:3;5180:49;5252:39;5284:6;5275;5269:13;5252:39;:::i;:::-;5242:49;-1:-1:-1;5349:12:644;;;;5314:15;;;;5153:1;5146:9;5117:254;;;-1:-1:-1;5388:6:644;;4600:800;-1:-1:-1;;;;;;;4600:800:644:o;5405:284::-;5463:6;5516:2;5504:9;5495:7;5491:23;5487:32;5484:52;;;5532:1;5529;5522:12;5484:52;5558:23;;-1:-1:-1;;;;;5610:30:644;;5600:41;;5590:69;;5655:1;5652;5645:12;5694:219;5843:2;5832:9;5825:21;5806:4;5863:44;5903:2;5892:9;5888:18;5880:6;5863:44;:::i;5918:338::-;6120:2;6102:21;;;6159:2;6139:18;;;6132:30;-1:-1:-1;;;6193:2:644;6178:18;;6171:44;6247:2;6232:18;;5918:338::o;6261:127::-;6322:10;6317:3;6313:20;6310:1;6303:31;6353:4;6350:1;6343:15;6377:4;6374:1;6367:15;6393:229;6432:4;-1:-1:-1;;;;;6529:10:644;;;;6499;;6551:12;;;6548:38;;;6566:18;;:::i;:::-;6603:13;;6393:229;-1:-1:-1;;;6393:229:644:o;7375:355::-;7577:2;7559:21;;;7616:2;7596:18;;;7589:30;7655:33;7650:2;7635:18;;7628:61;7721:2;7706:18;;7375:355::o;7735:127::-;7796:10;7791:3;7787:20;7784:1;7777:31;7827:4;7824:1;7817:15;7851:4;7848:1;7841:15;7867:521;7944:4;7950:6;8010:11;7997:25;8104:2;8100:7;8089:8;8073:14;8069:29;8065:43;8045:18;8041:68;8031:96;;8123:1;8120;8113:12;8031:96;8150:33;;8202:20;;;-1:-1:-1;;;;;;8234:30:644;;8231:50;;;8277:1;8274;8267:12;8231:50;8310:4;8298:17;;-1:-1:-1;8341:14:644;8337:27;;;8327:38;;8324:58;;;8378:1;8375;8368:12;8393:135;8432:3;-1:-1:-1;;8453:17:644;;8450:43;;;8473:18;;:::i;:::-;-1:-1:-1;8520:1:644;8509:13;;8393:135::o;9188:380::-;9267:1;9263:12;;;;9310;;;9331:61;;9385:4;9377:6;9373:17;9363:27;;9331:61;9438:2;9430:6;9427:14;9407:18;9404:38;9401:161;;;9484:10;9479:3;9475:20;9472:1;9465:31;9519:4;9516:1;9509:15;9547:4;9544:1;9537:15;9401:161;;9188:380;;;:::o;10262:236::-;10301:3;-1:-1:-1;;;;;10374:2:644;10371:1;10367:10;10404:2;10401:1;10397:10;10435:3;10431:2;10427:12;10422:3;10419:21;10416:47;;;10443:18;;:::i;:::-;10479:13;;10262:236;-1:-1:-1;;;;10262:236:644:o;10503:125::-;10543:4;10571:1;10568;10565:8;10562:34;;;10576:18;;:::i;:::-;-1:-1:-1;10613:9:644;;10503:125::o;10633:184::-;10703:6;10756:2;10744:9;10735:7;10731:23;10727:32;10724:52;;;10772:1;10769;10762:12;10724:52;-1:-1:-1;10795:16:644;;10633:184;-1:-1:-1;10633:184:644:o;10822:128::-;10862:3;10893:1;10889:6;10886:1;10883:13;10880:39;;;10899:18;;:::i;:::-;-1:-1:-1;10935:9:644;;10822:128::o;11661:127::-;11722:10;11717:3;11713:20;11710:1;11703:31;11753:4;11750:1;11743:15;11777:4;11774:1;11767:15;12132:381;12329:2;12318:9;12311:21;12292:4;12355:44;12395:2;12384:9;12380:18;12372:6;12355:44;:::i;:::-;12447:9;12439:6;12435:22;12430:2;12419:9;12415:18;12408:50;12475:32;12500:6;12492;12475:32;:::i;13910:168::-;13950:7;14016:1;14012;14008:6;14004:14;14001:1;13998:21;13993:1;13986:9;13979:17;13975:45;13972:71;;;14023:18;;:::i;:::-;-1:-1:-1;14063:9:644;;13910:168::o;14083:127::-;14144:10;14139:3;14135:20;14132:1;14125:31;14175:4;14172:1;14165:15;14199:4;14196:1;14189:15;14215:217;14255:1;14281;14271:132;;14325:10;14320:3;14316:20;14313:1;14306:31;14360:4;14357:1;14350:15;14388:4;14385:1;14378:15;14271:132;-1:-1:-1;14417:9:644;;14215:217::o;14437:422::-;14526:1;14569:5;14526:1;14583:270;14604:7;14594:8;14591:21;14583:270;;;14663:4;14659:1;14655:6;14651:17;14645:4;14642:27;14639:53;;;14672:18;;:::i;:::-;14722:7;14712:8;14708:22;14705:55;;;14742:16;;;;14705:55;14821:22;;;;14781:15;;;;14583:270;;;14587:3;14437:422;;;;;:::o;14864:806::-;14913:5;14943:8;14933:80;;-1:-1:-1;14984:1:644;14998:5;;14933:80;15032:4;15022:76;;-1:-1:-1;15069:1:644;15083:5;;15022:76;15114:4;15132:1;15127:59;;;;15200:1;15195:130;;;;15107:218;;15127:59;15157:1;15148:10;;15171:5;;;15195:130;15232:3;15222:8;15219:17;15216:43;;;15239:18;;:::i;:::-;-1:-1:-1;;15295:1:644;15281:16;;15310:5;;15107:218;;15409:2;15399:8;15396:16;15390:3;15384:4;15381:13;15377:36;15371:2;15361:8;15358:16;15353:2;15347:4;15344:12;15340:35;15337:77;15334:159;;;-1:-1:-1;15446:19:644;;;15478:5;;15334:159;15525:34;15550:8;15544:4;15525:34;:::i;:::-;15595:6;15591:1;15587:6;15583:19;15574:7;15571:32;15568:58;;;15606:18;;:::i;:::-;15644:20;;14864:806;-1:-1:-1;;;14864:806:644:o;15675:143::-;15734:5;15763:49;15804:6;15794:8;15790:21;15784:4;15763:49;:::i;16583:274::-;16712:3;16750:6;16744:13;16766:53;16812:6;16807:3;16800:4;16792:6;16788:17;16766:53;:::i;:::-;16835:16;;;;;16583:274;-1:-1:-1;;16583:274:644:o;17731:277::-;17798:6;17851:2;17839:9;17830:7;17826:23;17822:32;17819:52;;;17867:1;17864;17857:12;17819:52;17899:9;17893:16;17952:5;17945:13;17938:21;17931:5;17928:32;17918:60;;17974:1;17971;17964:12",
    "linkReferences": {},
    "immutableReferences": {
      "27257": [
        {
          "start": 291,
          "length": 32
        },
        {
          "start": 3719,
          "length": 32
        },
        {
          "start": 3888,
          "length": 32
        },
        {
          "start": 4703,
          "length": 32
        },
        {
          "start": 5438,
          "length": 32
        },
        {
          "start": 5945,
          "length": 32
        },
        {
          "start": 6496,
          "length": 32
        },
        {
          "start": 6642,
          "length": 32
        },
        {
          "start": 8140,
          "length": 32
        }
      ],
      "27260": [
        {
          "start": 620,
          "length": 32
        },
        {
          "start": 4667,
          "length": 32
        },
        {
          "start": 5368,
          "length": 32
        },
        {
          "start": 5537,
          "length": 32
        },
        {
          "start": 5909,
          "length": 32
        },
        {
          "start": 6536,
          "length": 32
        },
        {
          "start": 6604,
          "length": 32
        }
      ],
      "27263": [
        {
          "start": 1128,
          "length": 32
        },
        {
          "start": 7962,
          "length": 32
        }
      ],
      "27266": [
        {
          "start": 961,
          "length": 32
        },
        {
          "start": 7910,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "claimRewards()": "372500ab",
    "contractURI()": "e8a3d485",
    "depositRewardTokens(uint256)": "16c621e0",
    "getRewardRatio()": "97e1b4bc",
    "getRewardTokenBalance()": "93ce5343",
    "getStakeInfo(address)": "c3453153",
    "getTimeUnit()": "d68124c7",
    "multicall(bytes[])": "ac9650d8",
    "owner()": "8da5cb5b",
    "rewardToken()": "f7c618c1",
    "rewardTokenDecimals()": "9bdcecd1",
    "setContractURI(string)": "938e3d7b",
    "setOwner(address)": "13af4035",
    "setRewardRatio(uint256,uint256)": "001b7934",
    "setTimeUnit(uint80)": "b218f069",
    "stake(uint256)": "a694fc3a",
    "stakers(address)": "9168ae72",
    "stakersArray(uint256)": "5357e916",
    "stakingToken()": "72f702f3",
    "stakingTokenBalance()": "8caaa271",
    "stakingTokenDecimals()": "b9f7a7b5",
    "withdraw(uint256)": "2e1a7d4d",
    "withdrawRewardTokens(uint256)": "cb43b2dd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_timeUnit\",\"type\":\"uint80\"},{\"internalType\":\"address\",\"name\":\"_defaultAdmin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_rewardRatioNumerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_rewardRatioDenominator\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_stakingToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rewardToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_nativeTokenWrapper\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"prevURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newURI\",\"type\":\"string\"}],\"name\":\"ContractURIUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"prevOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"}],\"name\":\"RewardsClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensStaked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newAmount\",\"type\":\"uint256\"}],\"name\":\"UpdatedMinStakeAmount\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldNumerator\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newNumerator\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldDenominator\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newDenominator\",\"type\":\"uint256\"}],\"name\":\"UpdatedRewardRatio\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldTimeUnit\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newTimeUnit\",\"type\":\"uint256\"}],\"name\":\"UpdatedTimeUnit\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"claimRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"depositRewardTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRewardRatio\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_numerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_denominator\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRewardTokenBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_staker\",\"type\":\"address\"}],\"name\":\"getStakeInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokensStaked\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_rewards\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTimeUnit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_timeUnit\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardTokenDecimals\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"setContractURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_numerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_denominator\",\"type\":\"uint256\"}],\"name\":\"setRewardRatio\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_timeUnit\",\"type\":\"uint80\"}],\"name\":\"setTimeUnit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakers\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"timeOfLastUpdate\",\"type\":\"uint128\"},{\"internalType\":\"uint64\",\"name\":\"conditionIdOflastUpdate\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"amountStaked\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unclaimedRewards\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stakersArray\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingTokenBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingTokenDecimals\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawRewardTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"claimRewards()\":{\"details\":\"See {_claimRewards}. Override that to implement custom logic.             See {_calculateRewards} for reward-calculation logic.\"},\"depositRewardTokens(uint256)\":{\"details\":\"Admin deposits reward tokens.\"},\"getStakeInfo(address)\":{\"params\":{\"_staker\":\"Address for which to calculated rewards.\"},\"returns\":{\"_rewards\":\"       Available reward amount.\",\"_tokensStaked\":\"  Amount of tokens staked.\"}},\"multicall(bytes[])\":{\"details\":\"Receives and executes a batch of function calls on this contract.\",\"params\":{\"data\":\"The bytes data that makes up the batch of function calls to execute.\"},\"returns\":{\"results\":\"The bytes data that makes up the result of the batch of function calls executed.\"}},\"setContractURI(string)\":{\"details\":\"Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.\",\"params\":{\"_uri\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"setOwner(address)\":{\"params\":{\"_newOwner\":\"The address to set as the new owner of the contract.\"}},\"setRewardRatio(uint256,uint256)\":{\"details\":\"Only admin/authorized-account can call it.\",\"params\":{\"_denominator\":\"Reward ratio denominator.\",\"_numerator\":\"Reward ratio numerator.\"}},\"setTimeUnit(uint80)\":{\"details\":\"Only admin/authorized-account can call it.\",\"params\":{\"_timeUnit\":\"New time unit.\"}},\"stake(uint256)\":{\"details\":\"See {_stake}. Override that to implement custom logic.\",\"params\":{\"_amount\":\"Amount to stake.\"}},\"withdraw(uint256)\":{\"details\":\"See {_withdraw}. Override that to implement custom logic.\",\"params\":{\"_amount\":\"Amount to withdraw.\"}},\"withdrawRewardTokens(uint256)\":{\"details\":\"Admin can withdraw excess reward tokens.\"}},\"stateVariables\":{\"rewardToken\":{\"details\":\"ERC20 Reward Token address. See {_mintRewards} below.\"},\"rewardTokenBalance\":{\"details\":\"Total amount of reward tokens in the contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"claimRewards()\":{\"notice\":\"Claim accumulated rewards.\"},\"contractURI()\":{\"notice\":\"Returns the contract metadata URI.\"},\"getRewardTokenBalance()\":{\"notice\":\"View total rewards available in the staking contract.\"},\"getStakeInfo(address)\":{\"notice\":\"View amount staked and rewards for a user.\"},\"multicall(bytes[])\":{\"notice\":\"Receives and executes a batch of function calls on this contract.\"},\"owner()\":{\"notice\":\"Returns the owner of the contract.\"},\"setContractURI(string)\":{\"notice\":\"Lets a contract admin set the URI for contract-level metadata.\"},\"setOwner(address)\":{\"notice\":\"Lets an authorized wallet set a new owner for the contract.\"},\"setRewardRatio(uint256,uint256)\":{\"notice\":\"Set rewards per unit of time.           Interpreted as (numerator/denominator) rewards per second/per day/etc based on time-unit.           For e.g., ratio of 1/20 would mean 1 reward token for every 20 tokens staked.\"},\"setTimeUnit(uint80)\":{\"notice\":\"Set time unit. Set as a number of seconds.           Could be specified as -- x * 1 hours, x * 1 days, etc.\"},\"stake(uint256)\":{\"notice\":\"Stake ERC20 Tokens.\"},\"withdraw(uint256)\":{\"notice\":\"Withdraw staked ERC20 tokens.\"}},\"notice\":\"note: This contract is provided as a base contract.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/base/Staking20Base.sol\":\"Staking20Base\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@std/=lib/forge-std/src/\",\":@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/\",\":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/\",\":contracts/=contracts/\",\":ds-test/=lib/ds-test/src/\",\":dynamic-contracts/=lib/dynamic-contracts/src/\",\":erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/ERC721A-Upgradeable/\",\":erc721a/=lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/\"]},\"sources\":{\"contracts/base/Staking20Base.sol\":{\"keccak256\":\"0xfae7e16ca6383b8d5259a5a09f0ba86e17597b5f9ef7d849dec1fc07a86b987b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://967a603fe1218b1c7e2c787fa4a16d19f9b24e584b9a77c6045316173f0ea62a\",\"dweb:/ipfs/QmUe4yajq8J4HEAvxoxHF4kfrkb9muzkPRa5sTNrtcuAnT\"]},\"contracts/eip/interface/IERC20.sol\":{\"keccak256\":\"0x5bdd9dd97ba7d9d7c9a2953db287e4d9d7fa93a27a96bc2e72a8da4919b6f7ff\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://45527c265ee5de6bbb3ecfc052e7b1175531a82c2ac16172020aee855f7dd592\",\"dweb:/ipfs/QmVZthqbG916qUQSwv1LE8bB58ZGQ1VfQbLbbRV5urfEYA\"]},\"contracts/eip/interface/IERC20Metadata.sol\":{\"keccak256\":\"0xc2500d7a12573fc6f9714d806bec722ad4110a68e6dd14b69903042421001734\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://02423735619f14f3a13fae0ad6e407385565f159ad956c8bd1c14b3605a73a65\",\"dweb:/ipfs/QmYfYWh5wGidaQ7qDbC8oSuQ3gsnd3moJbWZ8yBzMnrYz1\"]},\"contracts/extension/ContractMetadata.sol\":{\"keccak256\":\"0xf53ab08ec3057056872c15e35a5610f7a43426bd2829786aed006d527177adfe\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ee132ae5efdd372152febfcd8fd3a7cb82c7019367d92c886f5096003a79f392\",\"dweb:/ipfs/QmRW1cGWmZAu57huZpTUwsWB8AxUFrBp6g4NqozXpbWsR6\"]},\"contracts/extension/Multicall.sol\":{\"keccak256\":\"0x737a71c74307fa360863550d64bbaef599bbcb47829b19c3743ed1ff22b9af55\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://7e82a79ee183dffa3ec01faac0907e04d72a185e55b7c24bff8e8e952b05f4c2\",\"dweb:/ipfs/QmQ9neZqpcgJtGgm84FBzMqFntZ1Sk1KFTWhjCMq8vnKDg\"]},\"contracts/extension/Ownable.sol\":{\"keccak256\":\"0x45447691686861237d5e1acb9d723d861a3fb3d561335e4f385d1547f25e27a5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5142293e36c736f744c73aaecab5f7be8e2d5ac70acc67851e0cea5171fd6782\",\"dweb:/ipfs/QmVJT5B84o5vFc5E2VteZdBhrT1HMutc7Ax72UKD1aZatJ\"]},\"contracts/extension/Staking20.sol\":{\"keccak256\":\"0x8ebd544c9b145e18b2c90edf7b53bc5f6e433e0dadb26ba573571f3a03827aee\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c3ea922436ec33350d6e7d4395f341eed59b5661a5ff5eef335fc8c37e144a51\",\"dweb:/ipfs/QmVmEg9NNg4hrxVnK9fUj7JfLEWimdhjEGAqzTSXuZpSLj\"]},\"contracts/extension/interface/IContractMetadata.sol\":{\"keccak256\":\"0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a\",\"dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr\"]},\"contracts/extension/interface/IMulticall.sol\":{\"keccak256\":\"0xe2bbd37b8fdb9cc8b933e598512a068ebb214b3f5abc2bc634916def55be4ef3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://012352099c262348ac755a53b082af520babc6c66dc5f1251fc23609728340ca\",\"dweb:/ipfs/QmcXEgzQ53jdJX5ZNy8zivvUjDq7J8WTnR1yAiwTpkQ2ar\"]},\"contracts/extension/interface/IOwnable.sol\":{\"keccak256\":\"0xd659a64da6264fdd50ee379be032fea4917eba4fadfd6d366107fb17e46907f3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c15940c4a3d229f4fdd1226fe297a58fde10b07b86a34de1ed11a8802dd5dea9\",\"dweb:/ipfs/QmS8p8CxWiahLkYsCWNhFjCnmQzuc4ck3kjYYuCFj8LsmC\"]},\"contracts/extension/interface/IStaking20.sol\":{\"keccak256\":\"0xb7abd61f05ee0607bae639fd4f5f947aa78e067e3201af4d18e58069cba69828\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://063d9a39c5c7078fe3d4f5b7908333d5d36e0c1b59433b1d8332871ec9da0852\",\"dweb:/ipfs/QmRTunZrRtDaV2YH54TT49dScAKhcwL2QdmGNv9bhYF7iL\"]},\"contracts/external-deps/openzeppelin/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x2030bba0e41fb3daead24cdba39cd9d8ce2748de68e57f1c811420419a739afb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a64e19e10d66555abcf0b5392bb27f9e65f674d7688761f02f2c8b508490623\",\"dweb:/ipfs/QmNhMchAD6kuHFAAgdwCwuNUS3uaUD2gwofT5kxQAQeWH6\"]},\"contracts/external-deps/openzeppelin/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xa6149938a7c7c8af4244743aeaafcfb1fd9ce15ad45de58fa9576f0ed5599b2c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://839aa4ea6ef6d1972881bfd7420a9ddcd2f37139e3f0bf25310f93f48410702d\",\"dweb:/ipfs/QmSH65kStfbgMbfjFdfJqV412omPy6nB1JMvMt9q7SsytW\"]},\"contracts/external-deps/openzeppelin/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"contracts/infra/interface/IWETH.sol\":{\"keccak256\":\"0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1\",\"dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU\"]},\"contracts/lib/CurrencyTransferLib.sol\":{\"keccak256\":\"0x4a30bc9a8cd6cc8b855621fb1a651e2c3a1639b0ad153f1139c3ba463605672d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://417cc64ec6393f3cc89981ca9c32bbcc444a5f91363d69f84dd8ace888b2b859\",\"dweb:/ipfs/QmZeaQsYGx4VNoP8e1fcwC87PwvyakheWYeuwEwhFSJnvB\"]},\"contracts/lib/TWAddress.sol\":{\"keccak256\":\"0x460f032cf3bf43d586e126ab2ec8be4335767f497ccb699741546a1cfba94a7e\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://28fcbf6dde6c2eeb9864f6ec6f21dcc81ec426877debf4b912f2f3bc5b0fc91e\",\"dweb:/ipfs/QmS1SHrZDfefX8EE7DdvszTY6VPCHydf4HM7NKJ2gP72e6\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.12+commit.f00d7308"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint80",
              "name": "_timeUnit",
              "type": "uint80"
            },
            {
              "internalType": "address",
              "name": "_defaultAdmin",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_rewardRatioNumerator",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_rewardRatioDenominator",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_stakingToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_rewardToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_nativeTokenWrapper",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "prevURI",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "newURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ContractURIUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "prevOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnerUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "rewardAmount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RewardsClaimed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensStaked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensWithdrawn",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "oldAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newAmount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "UpdatedMinStakeAmount",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "oldNumerator",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newNumerator",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "oldDenominator",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newDenominator",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "UpdatedRewardRatio",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "oldTimeUnit",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newTimeUnit",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "UpdatedTimeUnit",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimRewards"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "contractURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "depositRewardTokens"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getRewardRatio",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "_numerator",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_denominator",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getRewardTokenBalance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_staker",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getStakeInfo",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "_tokensStaked",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_rewards",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getTimeUnit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "_timeUnit",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes[]",
              "name": "data",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "multicall",
          "outputs": [
            {
              "internalType": "bytes[]",
              "name": "results",
              "type": "bytes[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "rewardToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "rewardTokenDecimals",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_uri",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setContractURI"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOwner"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_numerator",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_denominator",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRewardRatio"
        },
        {
          "inputs": [
            {
              "internalType": "uint80",
              "name": "_timeUnit",
              "type": "uint80"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setTimeUnit"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "stake"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "stakers",
          "outputs": [
            {
              "internalType": "uint128",
              "name": "timeOfLastUpdate",
              "type": "uint128"
            },
            {
              "internalType": "uint64",
              "name": "conditionIdOflastUpdate",
              "type": "uint64"
            },
            {
              "internalType": "uint256",
              "name": "amountStaked",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "unclaimedRewards",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "stakersArray",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "stakingToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "stakingTokenBalance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "stakingTokenDecimals",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawRewardTokens"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "claimRewards()": {
            "details": "See {_claimRewards}. Override that to implement custom logic.             See {_calculateRewards} for reward-calculation logic."
          },
          "depositRewardTokens(uint256)": {
            "details": "Admin deposits reward tokens."
          },
          "getStakeInfo(address)": {
            "params": {
              "_staker": "Address for which to calculated rewards."
            },
            "returns": {
              "_rewards": "       Available reward amount.",
              "_tokensStaked": "  Amount of tokens staked."
            }
          },
          "multicall(bytes[])": {
            "details": "Receives and executes a batch of function calls on this contract.",
            "params": {
              "data": "The bytes data that makes up the batch of function calls to execute."
            },
            "returns": {
              "results": "The bytes data that makes up the result of the batch of function calls executed."
            }
          },
          "setContractURI(string)": {
            "details": "Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.",
            "params": {
              "_uri": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "setOwner(address)": {
            "params": {
              "_newOwner": "The address to set as the new owner of the contract."
            }
          },
          "setRewardRatio(uint256,uint256)": {
            "details": "Only admin/authorized-account can call it.",
            "params": {
              "_denominator": "Reward ratio denominator.",
              "_numerator": "Reward ratio numerator."
            }
          },
          "setTimeUnit(uint80)": {
            "details": "Only admin/authorized-account can call it.",
            "params": {
              "_timeUnit": "New time unit."
            }
          },
          "stake(uint256)": {
            "details": "See {_stake}. Override that to implement custom logic.",
            "params": {
              "_amount": "Amount to stake."
            }
          },
          "withdraw(uint256)": {
            "details": "See {_withdraw}. Override that to implement custom logic.",
            "params": {
              "_amount": "Amount to withdraw."
            }
          },
          "withdrawRewardTokens(uint256)": {
            "details": "Admin can withdraw excess reward tokens."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "claimRewards()": {
            "notice": "Claim accumulated rewards."
          },
          "contractURI()": {
            "notice": "Returns the contract metadata URI."
          },
          "getRewardTokenBalance()": {
            "notice": "View total rewards available in the staking contract."
          },
          "getStakeInfo(address)": {
            "notice": "View amount staked and rewards for a user."
          },
          "multicall(bytes[])": {
            "notice": "Receives and executes a batch of function calls on this contract."
          },
          "owner()": {
            "notice": "Returns the owner of the contract."
          },
          "setContractURI(string)": {
            "notice": "Lets a contract admin set the URI for contract-level metadata."
          },
          "setOwner(address)": {
            "notice": "Lets an authorized wallet set a new owner for the contract."
          },
          "setRewardRatio(uint256,uint256)": {
            "notice": "Set rewards per unit of time.           Interpreted as (numerator/denominator) rewards per second/per day/etc based on time-unit.           For e.g., ratio of 1/20 would mean 1 reward token for every 20 tokens staked."
          },
          "setTimeUnit(uint80)": {
            "notice": "Set time unit. Set as a number of seconds.           Could be specified as -- x * 1 hours, x * 1 days, etc."
          },
          "stake(uint256)": {
            "notice": "Stake ERC20 Tokens."
          },
          "withdraw(uint256)": {
            "notice": "Withdraw staked ERC20 tokens."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=lib/chainlink/",
        "@ds-test/=lib/ds-test/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@std/=lib/forge-std/src/",
        "@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/",
        "ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/",
        "ERC721A/=lib/ERC721A/contracts/",
        "chainlink/=lib/chainlink/",
        "contracts/=contracts/",
        "ds-test/=lib/ds-test/src/",
        "dynamic-contracts/=lib/dynamic-contracts/src/",
        "erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/",
        "erc721a-upgradeable/=lib/ERC721A-Upgradeable/",
        "erc721a/=lib/ERC721A/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/base/Staking20Base.sol": "Staking20Base"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/base/Staking20Base.sol": {
        "keccak256": "0xfae7e16ca6383b8d5259a5a09f0ba86e17597b5f9ef7d849dec1fc07a86b987b",
        "urls": [
          "bzz-raw://967a603fe1218b1c7e2c787fa4a16d19f9b24e584b9a77c6045316173f0ea62a",
          "dweb:/ipfs/QmUe4yajq8J4HEAvxoxHF4kfrkb9muzkPRa5sTNrtcuAnT"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC20.sol": {
        "keccak256": "0x5bdd9dd97ba7d9d7c9a2953db287e4d9d7fa93a27a96bc2e72a8da4919b6f7ff",
        "urls": [
          "bzz-raw://45527c265ee5de6bbb3ecfc052e7b1175531a82c2ac16172020aee855f7dd592",
          "dweb:/ipfs/QmVZthqbG916qUQSwv1LE8bB58ZGQ1VfQbLbbRV5urfEYA"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC20Metadata.sol": {
        "keccak256": "0xc2500d7a12573fc6f9714d806bec722ad4110a68e6dd14b69903042421001734",
        "urls": [
          "bzz-raw://02423735619f14f3a13fae0ad6e407385565f159ad956c8bd1c14b3605a73a65",
          "dweb:/ipfs/QmYfYWh5wGidaQ7qDbC8oSuQ3gsnd3moJbWZ8yBzMnrYz1"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/ContractMetadata.sol": {
        "keccak256": "0xf53ab08ec3057056872c15e35a5610f7a43426bd2829786aed006d527177adfe",
        "urls": [
          "bzz-raw://ee132ae5efdd372152febfcd8fd3a7cb82c7019367d92c886f5096003a79f392",
          "dweb:/ipfs/QmRW1cGWmZAu57huZpTUwsWB8AxUFrBp6g4NqozXpbWsR6"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Multicall.sol": {
        "keccak256": "0x737a71c74307fa360863550d64bbaef599bbcb47829b19c3743ed1ff22b9af55",
        "urls": [
          "bzz-raw://7e82a79ee183dffa3ec01faac0907e04d72a185e55b7c24bff8e8e952b05f4c2",
          "dweb:/ipfs/QmQ9neZqpcgJtGgm84FBzMqFntZ1Sk1KFTWhjCMq8vnKDg"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/Ownable.sol": {
        "keccak256": "0x45447691686861237d5e1acb9d723d861a3fb3d561335e4f385d1547f25e27a5",
        "urls": [
          "bzz-raw://5142293e36c736f744c73aaecab5f7be8e2d5ac70acc67851e0cea5171fd6782",
          "dweb:/ipfs/QmVJT5B84o5vFc5E2VteZdBhrT1HMutc7Ax72UKD1aZatJ"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Staking20.sol": {
        "keccak256": "0x8ebd544c9b145e18b2c90edf7b53bc5f6e433e0dadb26ba573571f3a03827aee",
        "urls": [
          "bzz-raw://c3ea922436ec33350d6e7d4395f341eed59b5661a5ff5eef335fc8c37e144a51",
          "dweb:/ipfs/QmVmEg9NNg4hrxVnK9fUj7JfLEWimdhjEGAqzTSXuZpSLj"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IContractMetadata.sol": {
        "keccak256": "0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2",
        "urls": [
          "bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a",
          "dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IMulticall.sol": {
        "keccak256": "0xe2bbd37b8fdb9cc8b933e598512a068ebb214b3f5abc2bc634916def55be4ef3",
        "urls": [
          "bzz-raw://012352099c262348ac755a53b082af520babc6c66dc5f1251fc23609728340ca",
          "dweb:/ipfs/QmcXEgzQ53jdJX5ZNy8zivvUjDq7J8WTnR1yAiwTpkQ2ar"
        ],
        "license": "MIT"
      },
      "contracts/extension/interface/IOwnable.sol": {
        "keccak256": "0xd659a64da6264fdd50ee379be032fea4917eba4fadfd6d366107fb17e46907f3",
        "urls": [
          "bzz-raw://c15940c4a3d229f4fdd1226fe297a58fde10b07b86a34de1ed11a8802dd5dea9",
          "dweb:/ipfs/QmS8p8CxWiahLkYsCWNhFjCnmQzuc4ck3kjYYuCFj8LsmC"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IStaking20.sol": {
        "keccak256": "0xb7abd61f05ee0607bae639fd4f5f947aa78e067e3201af4d18e58069cba69828",
        "urls": [
          "bzz-raw://063d9a39c5c7078fe3d4f5b7908333d5d36e0c1b59433b1d8332871ec9da0852",
          "dweb:/ipfs/QmRTunZrRtDaV2YH54TT49dScAKhcwL2QdmGNv9bhYF7iL"
        ],
        "license": "Apache-2.0"
      },
      "contracts/external-deps/openzeppelin/security/ReentrancyGuard.sol": {
        "keccak256": "0x2030bba0e41fb3daead24cdba39cd9d8ce2748de68e57f1c811420419a739afb",
        "urls": [
          "bzz-raw://1a64e19e10d66555abcf0b5392bb27f9e65f674d7688761f02f2c8b508490623",
          "dweb:/ipfs/QmNhMchAD6kuHFAAgdwCwuNUS3uaUD2gwofT5kxQAQeWH6"
        ],
        "license": "MIT"
      },
      "contracts/external-deps/openzeppelin/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xa6149938a7c7c8af4244743aeaafcfb1fd9ce15ad45de58fa9576f0ed5599b2c",
        "urls": [
          "bzz-raw://839aa4ea6ef6d1972881bfd7420a9ddcd2f37139e3f0bf25310f93f48410702d",
          "dweb:/ipfs/QmSH65kStfbgMbfjFdfJqV412omPy6nB1JMvMt9q7SsytW"
        ],
        "license": "MIT"
      },
      "contracts/external-deps/openzeppelin/utils/math/SafeMath.sol": {
        "keccak256": "0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e",
        "urls": [
          "bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65",
          "dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN"
        ],
        "license": "MIT"
      },
      "contracts/infra/interface/IWETH.sol": {
        "keccak256": "0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b",
        "urls": [
          "bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1",
          "dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/CurrencyTransferLib.sol": {
        "keccak256": "0x4a30bc9a8cd6cc8b855621fb1a651e2c3a1639b0ad153f1139c3ba463605672d",
        "urls": [
          "bzz-raw://417cc64ec6393f3cc89981ca9c32bbcc444a5f91363d69f84dd8ace888b2b859",
          "dweb:/ipfs/QmZeaQsYGx4VNoP8e1fcwC87PwvyakheWYeuwEwhFSJnvB"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/TWAddress.sol": {
        "keccak256": "0x460f032cf3bf43d586e126ab2ec8be4335767f497ccb699741546a1cfba94a7e",
        "urls": [
          "bzz-raw://28fcbf6dde6c2eeb9864f6ec6f21dcc81ec426877debf4b912f2f3bc5b0fc91e",
          "dweb:/ipfs/QmS1SHrZDfefX8EE7DdvszTY6VPCHydf4HM7NKJ2gP72e6"
        ],
        "license": "Apache 2.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/base/Staking20Base.sol",
    "id": 6405,
    "exportedSymbols": {
      "ContractMetadata": [
        17526
      ],
      "CurrencyTransferLib": [
        63578
      ],
      "IContractMetadata": [
        32437
      ],
      "IERC20": [
        13899
      ],
      "IERC20Metadata": [
        13918
      ],
      "IMulticall": [
        32926
      ],
      "IOwnable": [
        33183
      ],
      "IStaking20": [
        34126
      ],
      "IWETH": [
        54557
      ],
      "Multicall": [
        20595
      ],
      "Ownable": [
        21153
      ],
      "ReentrancyGuard": [
        46484
      ],
      "SafeERC20": [
        48369
      ],
      "SafeMath": [
        50692
      ],
      "Staking20": [
        28178
      ],
      "Staking20Base": [
        6404
      ],
      "TWAddress": [
        64152
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:6773:18",
    "nodes": [
      {
        "id": 6066,
        "nodeType": "PragmaDirective",
        "src": "39:23:18",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 6067,
        "nodeType": "ImportDirective",
        "src": "86:43:18",
        "nodes": [],
        "absolutePath": "contracts/extension/ContractMetadata.sol",
        "file": "../extension/ContractMetadata.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6405,
        "sourceUnit": 17527,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 6068,
        "nodeType": "ImportDirective",
        "src": "130:36:18",
        "nodes": [],
        "absolutePath": "contracts/extension/Multicall.sol",
        "file": "../extension/Multicall.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6405,
        "sourceUnit": 20596,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 6069,
        "nodeType": "ImportDirective",
        "src": "167:34:18",
        "nodes": [],
        "absolutePath": "contracts/extension/Ownable.sol",
        "file": "../extension/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6405,
        "sourceUnit": 21154,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 6070,
        "nodeType": "ImportDirective",
        "src": "202:36:18",
        "nodes": [],
        "absolutePath": "contracts/extension/Staking20.sol",
        "file": "../extension/Staking20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6405,
        "sourceUnit": 28179,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 6071,
        "nodeType": "ImportDirective",
        "src": "240:37:18",
        "nodes": [],
        "absolutePath": "contracts/eip/interface/IERC20.sol",
        "file": "../eip/interface/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6405,
        "sourceUnit": 13900,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 6072,
        "nodeType": "ImportDirective",
        "src": "278:45:18",
        "nodes": [],
        "absolutePath": "contracts/eip/interface/IERC20Metadata.sol",
        "file": "../eip/interface/IERC20Metadata.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6405,
        "sourceUnit": 13919,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 6074,
        "nodeType": "ImportDirective",
        "src": "325:69:18",
        "nodes": [],
        "absolutePath": "contracts/lib/CurrencyTransferLib.sol",
        "file": "../lib/CurrencyTransferLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6405,
        "sourceUnit": 63579,
        "symbolAliases": [
          {
            "foreign": {
              "id": 6073,
              "name": "CurrencyTransferLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 63578,
              "src": "334:19:18",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$63578_$",
                "typeString": "type(library CurrencyTransferLib)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 6404,
        "nodeType": "ContractDefinition",
        "src": "1627:5184:18",
        "nodes": [
          {
            "id": 6086,
            "nodeType": "VariableDeclaration",
            "src": "1774:26:18",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 6084,
              "nodeType": "StructuredDocumentation",
              "src": "1707:62:18",
              "text": "@dev ERC20 Reward Token address. See {_mintRewards} below."
            },
            "functionSelector": "f7c618c1",
            "mutability": "mutable",
            "name": "rewardToken",
            "nameLocation": "1789:11:18",
            "scope": 6404,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 6085,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1774:7:18",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 6089,
            "nodeType": "VariableDeclaration",
            "src": "1867:34:18",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 6087,
              "nodeType": "StructuredDocumentation",
              "src": "1807:55:18",
              "text": "@dev Total amount of reward tokens in the contract."
            },
            "mutability": "mutable",
            "name": "rewardTokenBalance",
            "nameLocation": "1883:18:18",
            "scope": 6404,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 6088,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1867:7:18",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "id": 6142,
            "nodeType": "FunctionDefinition",
            "src": "1908:718:18",
            "nodes": [],
            "body": {
              "id": 6141,
              "nodeType": "Block",
              "src": "2360:266:18",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6121,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6093,
                        "src": "2382:13:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 6120,
                      "name": "_setupOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21146,
                      "src": "2370:11:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 6122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2370:26:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6123,
                  "nodeType": "ExpressionStatement",
                  "src": "2370:26:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6125,
                        "name": "_timeUnit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6091,
                        "src": "2427:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        }
                      },
                      {
                        "id": 6126,
                        "name": "_rewardRatioNumerator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6095,
                        "src": "2438:21:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 6127,
                        "name": "_rewardRatioDenominator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6097,
                        "src": "2461:23:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6124,
                      "name": "_setStakingCondition",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28018,
                      "src": "2406:20:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint80_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint80,uint256,uint256)"
                      }
                    },
                    "id": 6128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2406:79:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6129,
                  "nodeType": "ExpressionStatement",
                  "src": "2406:79:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 6133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 6131,
                          "name": "_rewardToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6101,
                          "src": "2504:12:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 6132,
                          "name": "_stakingToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6099,
                          "src": "2520:13:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2504:29:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52657761726420546f6b656e20616e64205374616b696e6720546f6b656e2063616e27742062652073616d652e",
                        "id": 6134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2535:47:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e17add4d2cc0d52c03c959bc4a348eb0f9d1b38e50ee9eec58635f407746c04d",
                          "typeString": "literal_string \"Reward Token and Staking Token can't be same.\""
                        },
                        "value": "Reward Token and Staking Token can't be same."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e17add4d2cc0d52c03c959bc4a348eb0f9d1b38e50ee9eec58635f407746c04d",
                          "typeString": "literal_string \"Reward Token and Staking Token can't be same.\""
                        }
                      ],
                      "id": 6130,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2496:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2496:87:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6136,
                  "nodeType": "ExpressionStatement",
                  "src": "2496:87:18"
                },
                {
                  "expression": {
                    "id": 6139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6137,
                      "name": "rewardToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6086,
                      "src": "2593:11:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6138,
                      "name": "_rewardToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6101,
                      "src": "2607:12:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2593:26:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 6140,
                  "nodeType": "ExpressionStatement",
                  "src": "2593:26:18"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 6106,
                    "name": "_nativeTokenWrapper",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6103,
                    "src": "2192:19:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 6107,
                    "name": "_stakingToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6099,
                    "src": "2225:13:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "id": 6109,
                            "name": "_stakingToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6099,
                            "src": "2267:13:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 6108,
                          "name": "IERC20Metadata",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13918,
                          "src": "2252:14:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Metadata_$13918_$",
                            "typeString": "type(contract IERC20Metadata)"
                          }
                        },
                        "id": 6110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2252:29:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Metadata_$13918",
                          "typeString": "contract IERC20Metadata"
                        }
                      },
                      "id": 6111,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "decimals",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13917,
                      "src": "2252:38:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                        "typeString": "function () view external returns (uint8)"
                      }
                    },
                    "id": 6112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2252:40:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "id": 6114,
                            "name": "_rewardToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6101,
                            "src": "2321:12:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 6113,
                          "name": "IERC20Metadata",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13918,
                          "src": "2306:14:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Metadata_$13918_$",
                            "typeString": "type(contract IERC20Metadata)"
                          }
                        },
                        "id": 6115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2306:28:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Metadata_$13918",
                          "typeString": "contract IERC20Metadata"
                        }
                      },
                      "id": 6116,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "decimals",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13917,
                      "src": "2306:37:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                        "typeString": "function () view external returns (uint8)"
                      }
                    },
                    "id": 6117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2306:39:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 6118,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 6105,
                  "name": "Staking20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 28178,
                  "src": "2169:9:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "2169:186:18"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 6104,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6091,
                  "mutability": "mutable",
                  "name": "_timeUnit",
                  "nameLocation": "1936:9:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 6142,
                  "src": "1929:16:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint80",
                    "typeString": "uint80"
                  },
                  "typeName": {
                    "id": 6090,
                    "name": "uint80",
                    "nodeType": "ElementaryTypeName",
                    "src": "1929:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint80",
                      "typeString": "uint80"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6093,
                  "mutability": "mutable",
                  "name": "_defaultAdmin",
                  "nameLocation": "1963:13:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 6142,
                  "src": "1955:21:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6092,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1955:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6095,
                  "mutability": "mutable",
                  "name": "_rewardRatioNumerator",
                  "nameLocation": "1994:21:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 6142,
                  "src": "1986:29:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6094,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1986:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6097,
                  "mutability": "mutable",
                  "name": "_rewardRatioDenominator",
                  "nameLocation": "2033:23:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 6142,
                  "src": "2025:31:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6096,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2025:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6099,
                  "mutability": "mutable",
                  "name": "_stakingToken",
                  "nameLocation": "2074:13:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 6142,
                  "src": "2066:21:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6098,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2066:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6101,
                  "mutability": "mutable",
                  "name": "_rewardToken",
                  "nameLocation": "2105:12:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 6142,
                  "src": "2097:20:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6100,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2097:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6103,
                  "mutability": "mutable",
                  "name": "_nativeTokenWrapper",
                  "nameLocation": "2135:19:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 6142,
                  "src": "2127:27:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6102,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2127:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1919:241:18"
            },
            "returnParameters": {
              "id": 6119,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2360:0:18"
            },
            "scope": 6404,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 6155,
            "nodeType": "FunctionDefinition",
            "src": "2702:129:18",
            "nodes": [],
            "body": {
              "id": 6154,
              "nodeType": "Block",
              "src": "2737:94:18",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 6150,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 6147,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2755:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 6148,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2755:10:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 6149,
                          "name": "nativeTokenWrapper",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27257,
                          "src": "2769:18:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2755:32:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63616c6c6572206e6f74206e617469766520746f6b656e20777261707065722e",
                        "id": 6151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2789:34:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fff6f4088a14dc9fb6c418ac7dfb6aa2cb5091cf5954b1f93aeb20616b356a54",
                          "typeString": "literal_string \"caller not native token wrapper.\""
                        },
                        "value": "caller not native token wrapper."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fff6f4088a14dc9fb6c418ac7dfb6aa2cb5091cf5954b1f93aeb20616b356a54",
                          "typeString": "literal_string \"caller not native token wrapper.\""
                        }
                      ],
                      "id": 6146,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2747:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2747:77:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6153,
                  "nodeType": "ExpressionStatement",
                  "src": "2747:77:18"
                }
              ]
            },
            "documentation": {
              "id": 6143,
              "nodeType": "StructuredDocumentation",
              "src": "2632:65:18",
              "text": "@dev Lets the contract receive ether to unwrap native tokens."
            },
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 6144,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2709:2:18"
            },
            "returnParameters": {
              "id": 6145,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2737:0:18"
            },
            "scope": 6404,
            "stateMutability": "payable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 6168,
            "nodeType": "FunctionDefinition",
            "src": "2880:165:18",
            "nodes": [],
            "body": {
              "id": 6167,
              "nodeType": "Block",
              "src": "2964:81:18",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6164,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6158,
                        "src": "2995:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6163,
                      "name": "_depositRewardTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6295,
                      "src": "2974:20:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 6165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2974:29:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6166,
                  "nodeType": "ExpressionStatement",
                  "src": "2974:29:18"
                }
              ]
            },
            "documentation": {
              "id": 6156,
              "nodeType": "StructuredDocumentation",
              "src": "2837:38:18",
              "text": "@dev Admin deposits reward tokens."
            },
            "functionSelector": "16c621e0",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 6161,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 6160,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46483,
                  "src": "2951:12:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "2951:12:18"
              }
            ],
            "name": "depositRewardTokens",
            "nameLocation": "2889:19:18",
            "parameters": {
              "id": 6159,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6158,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2917:7:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 6168,
                  "src": "2909:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6157,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2909:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2908:17:18"
            },
            "returnParameters": {
              "id": 6162,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2964:0:18"
            },
            "scope": 6404,
            "stateMutability": "payable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 6181,
            "nodeType": "FunctionDefinition",
            "src": "3105:159:18",
            "nodes": [],
            "body": {
              "id": 6180,
              "nodeType": "Block",
              "src": "3182:82:18",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6177,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6171,
                        "src": "3214:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6176,
                      "name": "_withdrawRewardTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6361,
                      "src": "3192:21:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 6178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3192:30:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6179,
                  "nodeType": "ExpressionStatement",
                  "src": "3192:30:18"
                }
              ]
            },
            "documentation": {
              "id": 6169,
              "nodeType": "StructuredDocumentation",
              "src": "3051:49:18",
              "text": "@dev Admin can withdraw excess reward tokens."
            },
            "functionSelector": "cb43b2dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 6174,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 6173,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46483,
                  "src": "3169:12:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "3169:12:18"
              }
            ],
            "name": "withdrawRewardTokens",
            "nameLocation": "3114:20:18",
            "parameters": {
              "id": 6172,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6171,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "3143:7:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 6181,
                  "src": "3135:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6170,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3135:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3134:17:18"
            },
            "returnParameters": {
              "id": 6175,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3182:0:18"
            },
            "scope": 6404,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 6191,
            "nodeType": "FunctionDefinition",
            "src": "3340:124:18",
            "nodes": [],
            "body": {
              "id": 6190,
              "nodeType": "Block",
              "src": "3422:42:18",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 6188,
                    "name": "rewardTokenBalance",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6089,
                    "src": "3439:18:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 6187,
                  "id": 6189,
                  "nodeType": "Return",
                  "src": "3432:25:18"
                }
              ]
            },
            "baseFunctions": [
              28163
            ],
            "documentation": {
              "id": 6182,
              "nodeType": "StructuredDocumentation",
              "src": "3270:65:18",
              "text": "@notice View total rewards available in the staking contract."
            },
            "functionSelector": "93ce5343",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRewardTokenBalance",
            "nameLocation": "3349:21:18",
            "overrides": {
              "id": 6184,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3395:8:18"
            },
            "parameters": {
              "id": 6183,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3370:2:18"
            },
            "returnParameters": {
              "id": 6187,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6186,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6191,
                  "src": "3413:7:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6185,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3413:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3412:9:18"
            },
            "scope": 6404,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 6225,
            "nodeType": "FunctionDefinition",
            "src": "3891:401:18",
            "nodes": [],
            "body": {
              "id": 6224,
              "nodeType": "Block",
              "src": "3974:318:18",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 6203,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 6201,
                          "name": "_rewards",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6196,
                          "src": "3992:8:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 6202,
                          "name": "rewardTokenBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6089,
                          "src": "4004:18:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3992:30:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f7567682072657761726420746f6b656e73",
                        "id": 6204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4024:26:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f9f034c0209f69095b9daea6fa2bfb48319f16f6cf36946d2a2348944ff59120",
                          "typeString": "literal_string \"Not enough reward tokens\""
                        },
                        "value": "Not enough reward tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f9f034c0209f69095b9daea6fa2bfb48319f16f6cf36946d2a2348944ff59120",
                          "typeString": "literal_string \"Not enough reward tokens\""
                        }
                      ],
                      "id": 6200,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3984:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3984:67:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6206,
                  "nodeType": "ExpressionStatement",
                  "src": "3984:67:18"
                },
                {
                  "expression": {
                    "id": 6209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6207,
                      "name": "rewardTokenBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6089,
                      "src": "4061:18:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 6208,
                      "name": "_rewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6196,
                      "src": "4083:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4061:30:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6210,
                  "nodeType": "ExpressionStatement",
                  "src": "4061:30:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6214,
                        "name": "rewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6086,
                        "src": "4162:11:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 6217,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4195:4:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Staking20Base_$6404",
                              "typeString": "contract Staking20Base"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Staking20Base_$6404",
                              "typeString": "contract Staking20Base"
                            }
                          ],
                          "id": 6216,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4187:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 6215,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4187:7:18",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 6218,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4187:13:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6219,
                        "name": "_staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6194,
                        "src": "4214:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6220,
                        "name": "_rewards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6196,
                        "src": "4235:8:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 6221,
                        "name": "nativeTokenWrapper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27257,
                        "src": "4257:18:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 6211,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63578,
                        "src": "4101:19:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$63578_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 6213,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferCurrencyWithWrapper",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63469,
                      "src": "4101:47:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address,uint256,address)"
                      }
                    },
                    "id": 6222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4101:184:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6223,
                  "nodeType": "ExpressionStatement",
                  "src": "4101:184:18"
                }
              ]
            },
            "baseFunctions": [
              28171
            ],
            "documentation": {
              "id": 6192,
              "nodeType": "StructuredDocumentation",
              "src": "3647:239:18",
              "text": "  @dev    Mint ERC20 rewards to the staker. Override for custom logic.\n  @param _staker    Address for which to calculated rewards.\n  @param _rewards   Amount of tokens to be given out as reward."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mintRewards",
            "nameLocation": "3900:12:18",
            "overrides": {
              "id": 6198,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3965:8:18"
            },
            "parameters": {
              "id": 6197,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6194,
                  "mutability": "mutable",
                  "name": "_staker",
                  "nameLocation": "3921:7:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 6225,
                  "src": "3913:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6193,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3913:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6196,
                  "mutability": "mutable",
                  "name": "_rewards",
                  "nameLocation": "3938:8:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 6225,
                  "src": "3930:16:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6195,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3930:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3912:35:18"
            },
            "returnParameters": {
              "id": 6199,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3974:0:18"
            },
            "scope": 6404,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 6295,
            "nodeType": "FunctionDefinition",
            "src": "4558:660:18",
            "nodes": [],
            "body": {
              "id": 6294,
              "nodeType": "Block",
              "src": "4622:596:18",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 6236,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 6232,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4640:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 6233,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4640:10:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 6234,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21105,
                            "src": "4654:5:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 6235,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4654:7:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4640:21:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420617574686f72697a6564",
                        "id": 6237,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4663:16:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
                          "typeString": "literal_string \"Not authorized\""
                        },
                        "value": "Not authorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
                          "typeString": "literal_string \"Not authorized\""
                        }
                      ],
                      "id": 6231,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4632:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4632:48:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6239,
                  "nodeType": "ExpressionStatement",
                  "src": "4632:48:18"
                },
                {
                  "assignments": [
                    6241
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6241,
                      "mutability": "mutable",
                      "name": "_rewardToken",
                      "nameLocation": "4699:12:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 6294,
                      "src": "4691:20:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 6240,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4691:7:18",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6249,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 6245,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 6242,
                        "name": "rewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6086,
                        "src": "4714:11:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 6243,
                          "name": "CurrencyTransferLib",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63578,
                          "src": "4729:19:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$63578_$",
                            "typeString": "type(library CurrencyTransferLib)"
                          }
                        },
                        "id": 6244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "NATIVE_TOKEN",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 63346,
                        "src": "4729:32:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "4714:47:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 6247,
                      "name": "rewardToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6086,
                      "src": "4785:11:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 6248,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "4714:82:18",
                    "trueExpression": {
                      "id": 6246,
                      "name": "nativeTokenWrapper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27257,
                      "src": "4764:18:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4691:105:18"
                },
                {
                  "assignments": [
                    6251
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6251,
                      "mutability": "mutable",
                      "name": "balanceBefore",
                      "nameLocation": "4815:13:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 6294,
                      "src": "4807:21:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6250,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4807:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6261,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 6258,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4870:4:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Staking20Base_$6404",
                              "typeString": "contract Staking20Base"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Staking20Base_$6404",
                              "typeString": "contract Staking20Base"
                            }
                          ],
                          "id": 6257,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4862:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 6256,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4862:7:18",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 6259,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4862:13:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 6253,
                            "name": "_rewardToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6241,
                            "src": "4838:12:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 6252,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13899,
                          "src": "4831:6:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$13899_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 6254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4831:20:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$13899",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 6255,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13844,
                      "src": "4831:30:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 6260,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4831:45:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4807:69:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6265,
                        "name": "rewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6086,
                        "src": "4947:11:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 6266,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4972:3:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 6267,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4972:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 6270,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5004:4:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Staking20Base_$6404",
                              "typeString": "contract Staking20Base"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Staking20Base_$6404",
                              "typeString": "contract Staking20Base"
                            }
                          ],
                          "id": 6269,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4996:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 6268,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4996:7:18",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 6271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4996:13:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6272,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6228,
                        "src": "5023:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 6273,
                        "name": "nativeTokenWrapper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27257,
                        "src": "5044:18:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 6262,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63578,
                        "src": "4886:19:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$63578_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 6264,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferCurrencyWithWrapper",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63469,
                      "src": "4886:47:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address,uint256,address)"
                      }
                    },
                    "id": 6274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4886:186:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6275,
                  "nodeType": "ExpressionStatement",
                  "src": "4886:186:18"
                },
                {
                  "assignments": [
                    6277
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6277,
                      "mutability": "mutable",
                      "name": "actualAmount",
                      "nameLocation": "5090:12:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 6294,
                      "src": "5082:20:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6276,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5082:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6289,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 6284,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "5144:4:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Staking20Base_$6404",
                                "typeString": "contract Staking20Base"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Staking20Base_$6404",
                                "typeString": "contract Staking20Base"
                              }
                            ],
                            "id": 6283,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5136:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 6282,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5136:7:18",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 6285,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5136:13:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 6279,
                              "name": "_rewardToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6241,
                              "src": "5112:12:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 6278,
                            "name": "IERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13899,
                            "src": "5105:6:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC20_$13899_$",
                              "typeString": "type(contract IERC20)"
                            }
                          },
                          "id": 6280,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5105:20:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$13899",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 6281,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 13844,
                        "src": "5105:30:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 6286,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5105:45:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 6287,
                      "name": "balanceBefore",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6251,
                      "src": "5153:13:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5105:61:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5082:84:18"
                },
                {
                  "expression": {
                    "id": 6292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6290,
                      "name": "rewardTokenBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6089,
                      "src": "5177:18:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 6291,
                      "name": "actualAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6277,
                      "src": "5199:12:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5177:34:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6293,
                  "nodeType": "ExpressionStatement",
                  "src": "5177:34:18"
                }
              ]
            },
            "documentation": {
              "id": 6226,
              "nodeType": "StructuredDocumentation",
              "src": "4486:67:18",
              "text": "@dev Admin deposits reward tokens -- override for custom logic."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_depositRewardTokens",
            "nameLocation": "4567:20:18",
            "parameters": {
              "id": 6229,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6228,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "4596:7:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 6295,
                  "src": "4588:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6227,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4588:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4587:17:18"
            },
            "returnParameters": {
              "id": 6230,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4622:0:18"
            },
            "scope": 6404,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 6361,
            "nodeType": "FunctionDefinition",
            "src": "5307:866:18",
            "nodes": [],
            "body": {
              "id": 6360,
              "nodeType": "Block",
              "src": "5372:801:18",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 6306,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 6302,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5390:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 6303,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5390:10:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 6304,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21105,
                            "src": "5404:5:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 6305,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5404:7:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5390:21:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420617574686f72697a6564",
                        "id": 6307,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5413:16:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
                          "typeString": "literal_string \"Not authorized\""
                        },
                        "value": "Not authorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
                          "typeString": "literal_string \"Not authorized\""
                        }
                      ],
                      "id": 6301,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5382:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5382:48:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6309,
                  "nodeType": "ExpressionStatement",
                  "src": "5382:48:18"
                },
                {
                  "expression": {
                    "id": 6319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6310,
                      "name": "rewardTokenBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6089,
                      "src": "5500:18:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 6313,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 6311,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6298,
                          "src": "5521:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "id": 6312,
                          "name": "rewardTokenBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6089,
                          "src": "5531:18:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5521:28:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 6317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 6315,
                          "name": "rewardTokenBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6089,
                          "src": "5556:18:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 6316,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6298,
                          "src": "5577:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5556:28:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 6318,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "Conditional",
                      "src": "5521:63:18",
                      "trueExpression": {
                        "hexValue": "30",
                        "id": 6314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5552:1:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5500:84:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6320,
                  "nodeType": "ExpressionStatement",
                  "src": "5500:84:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6324,
                        "name": "rewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6086,
                        "src": "5656:11:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 6327,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5689:4:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Staking20Base_$6404",
                              "typeString": "contract Staking20Base"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Staking20Base_$6404",
                              "typeString": "contract Staking20Base"
                            }
                          ],
                          "id": 6326,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5681:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 6325,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5681:7:18",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 6328,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5681:13:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 6329,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5708:3:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 6330,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5708:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6331,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6298,
                        "src": "5732:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 6332,
                        "name": "nativeTokenWrapper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27257,
                        "src": "5753:18:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 6321,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63578,
                        "src": "5595:19:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$63578_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 6323,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferCurrencyWithWrapper",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63469,
                      "src": "5595:47:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address,uint256,address)"
                      }
                    },
                    "id": 6333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5595:186:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6334,
                  "nodeType": "ExpressionStatement",
                  "src": "5595:186:18"
                },
                {
                  "assignments": [
                    6336
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6336,
                      "mutability": "mutable",
                      "name": "_stakingToken",
                      "nameLocation": "5910:13:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 6360,
                      "src": "5902:21:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 6335,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5902:7:18",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6344,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 6340,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 6337,
                        "name": "stakingToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27260,
                        "src": "5926:12:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 6338,
                          "name": "CurrencyTransferLib",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63578,
                          "src": "5942:19:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$63578_$",
                            "typeString": "type(library CurrencyTransferLib)"
                          }
                        },
                        "id": 6339,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "NATIVE_TOKEN",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 63346,
                        "src": "5942:32:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "5926:48:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 6342,
                      "name": "stakingToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27260,
                      "src": "5998:12:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 6343,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "5926:84:18",
                    "trueExpression": {
                      "id": 6341,
                      "name": "nativeTokenWrapper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27257,
                      "src": "5977:18:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5902:108:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 6356,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 6352,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "6081:4:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Staking20Base_$6404",
                                    "typeString": "contract Staking20Base"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Staking20Base_$6404",
                                    "typeString": "contract Staking20Base"
                                  }
                                ],
                                "id": 6351,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6073:7:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 6350,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6073:7:18",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 6353,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6073:13:18",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 6347,
                                  "name": "_stakingToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6336,
                                  "src": "6048:13:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 6346,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13899,
                                "src": "6041:6:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$13899_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 6348,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6041:21:18",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$13899",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 6349,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13844,
                            "src": "6041:31:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 6354,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6041:46:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 6355,
                          "name": "stakingTokenBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27272,
                          "src": "6091:19:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6041:69:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374616b696e6720746f6b656e2062616c616e636520726564756365642e",
                        "id": 6357,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6124:32:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8d8abe09a27ba91bde5120f467ce94c1760c9d13c295338fa77006f5ceaa9372",
                          "typeString": "literal_string \"Staking token balance reduced.\""
                        },
                        "value": "Staking token balance reduced."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8d8abe09a27ba91bde5120f467ce94c1760c9d13c295338fa77006f5ceaa9372",
                          "typeString": "literal_string \"Staking token balance reduced.\""
                        }
                      ],
                      "id": 6345,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6020:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6020:146:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6359,
                  "nodeType": "ExpressionStatement",
                  "src": "6020:146:18"
                }
              ]
            },
            "documentation": {
              "id": 6296,
              "nodeType": "StructuredDocumentation",
              "src": "5224:78:18",
              "text": "@dev Admin can withdraw excess reward tokens -- override for custom logic."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_withdrawRewardTokens",
            "nameLocation": "5316:21:18",
            "parameters": {
              "id": 6299,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6298,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "5346:7:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 6361,
                  "src": "5338:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6297,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5338:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5337:17:18"
            },
            "returnParameters": {
              "id": 6300,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5372:0:18"
            },
            "scope": 6404,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 6375,
            "nodeType": "FunctionDefinition",
            "src": "6268:125:18",
            "nodes": [],
            "body": {
              "id": 6374,
              "nodeType": "Block",
              "src": "6348:45:18",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 6372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 6368,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "6365:3:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 6369,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "6365:10:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 6370,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21105,
                        "src": "6379:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 6371,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6379:7:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6365:21:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 6367,
                  "id": 6373,
                  "nodeType": "Return",
                  "src": "6358:28:18"
                }
              ]
            },
            "baseFunctions": [
              28177
            ],
            "documentation": {
              "id": 6362,
              "nodeType": "StructuredDocumentation",
              "src": "6179:84:18",
              "text": "@dev Returns whether staking restrictions can be set in given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetStakeConditions",
            "nameLocation": "6277:22:18",
            "overrides": {
              "id": 6364,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6324:8:18"
            },
            "parameters": {
              "id": 6363,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6299:2:18"
            },
            "returnParameters": {
              "id": 6367,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6366,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6375,
                  "src": "6342:4:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6365,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6342:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6341:6:18"
            },
            "scope": 6404,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 6389,
            "nodeType": "FunctionDefinition",
            "src": "6489:121:18",
            "nodes": [],
            "body": {
              "id": 6388,
              "nodeType": "Block",
              "src": "6565:45:18",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 6386,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 6382,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "6582:3:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 6383,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "6582:10:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 6384,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21105,
                        "src": "6596:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 6385,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6596:7:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6582:21:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 6381,
                  "id": 6387,
                  "nodeType": "Return",
                  "src": "6575:28:18"
                }
              ]
            },
            "baseFunctions": [
              17525
            ],
            "documentation": {
              "id": 6376,
              "nodeType": "StructuredDocumentation",
              "src": "6399:85:18",
              "text": "@dev Returns whether contract metadata can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetContractURI",
            "nameLocation": "6498:18:18",
            "overrides": {
              "id": 6378,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6541:8:18"
            },
            "parameters": {
              "id": 6377,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6516:2:18"
            },
            "returnParameters": {
              "id": 6381,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6380,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6389,
                  "src": "6559:4:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6379,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6559:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6558:6:18"
            },
            "scope": 6404,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 6403,
            "nodeType": "FunctionDefinition",
            "src": "6694:115:18",
            "nodes": [],
            "body": {
              "id": 6402,
              "nodeType": "Block",
              "src": "6764:45:18",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 6400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 6396,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "6781:3:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 6397,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "6781:10:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 6398,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21105,
                        "src": "6795:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 6399,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6795:7:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6781:21:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 6395,
                  "id": 6401,
                  "nodeType": "Return",
                  "src": "6774:28:18"
                }
              ]
            },
            "baseFunctions": [
              21152
            ],
            "documentation": {
              "id": 6390,
              "nodeType": "StructuredDocumentation",
              "src": "6616:73:18",
              "text": "@dev Returns whether owner can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetOwner",
            "nameLocation": "6703:12:18",
            "overrides": {
              "id": 6392,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6740:8:18"
            },
            "parameters": {
              "id": 6391,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6715:2:18"
            },
            "returnParameters": {
              "id": 6395,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6394,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6403,
                  "src": "6758:4:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6393,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6758:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6757:6:18"
            },
            "scope": 6404,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 6076,
              "name": "ContractMetadata",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 17526,
              "src": "1653:16:18"
            },
            "id": 6077,
            "nodeType": "InheritanceSpecifier",
            "src": "1653:16:18"
          },
          {
            "baseName": {
              "id": 6078,
              "name": "Multicall",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 20595,
              "src": "1671:9:18"
            },
            "id": 6079,
            "nodeType": "InheritanceSpecifier",
            "src": "1671:9:18"
          },
          {
            "baseName": {
              "id": 6080,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 21153,
              "src": "1682:7:18"
            },
            "id": 6081,
            "nodeType": "InheritanceSpecifier",
            "src": "1682:7:18"
          },
          {
            "baseName": {
              "id": 6082,
              "name": "Staking20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 28178,
              "src": "1691:9:18"
            },
            "id": 6083,
            "nodeType": "InheritanceSpecifier",
            "src": "1691:9:18"
          }
        ],
        "canonicalName": "Staking20Base",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 6075,
          "nodeType": "StructuredDocumentation",
          "src": "1299:56:18",
          "text": "note: This contract is provided as a base contract."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          6404,
          28178,
          34126,
          46484,
          21153,
          33183,
          20595,
          32926,
          17526,
          32437
        ],
        "name": "Staking20Base",
        "nameLocation": "1636:13:18",
        "scope": 6405,
        "usedErrors": []
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 18
}