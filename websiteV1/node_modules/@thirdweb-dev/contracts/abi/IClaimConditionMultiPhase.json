{
  "abi": [],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {},
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"The interface `IClaimConditionMultiPhase` is written for thirdweb's 'Drop' contracts, which are distribution mechanisms for tokens.  An authorized wallet can set a series of claim conditions, ordered by their respective `startTimestamp`.  A claim condition defines criteria under which accounts can mint tokens. Claim conditions can be overwritten  or added to by the contract admin. At any moment, there is only one active claim condition.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/extension/interface/IClaimConditionMultiPhase.sol\":\"IClaimConditionMultiPhase\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@std/=lib/forge-std/src/\",\":@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/\",\":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/\",\":contracts/=contracts/\",\":ds-test/=lib/ds-test/src/\",\":dynamic-contracts/=lib/dynamic-contracts/src/\",\":erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/ERC721A-Upgradeable/\",\":erc721a/=lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/\"]},\"sources\":{\"contracts/extension/interface/IClaimCondition.sol\":{\"keccak256\":\"0x391e69970031edb30dfa59f8db33c7446b349cd5ec505fd99f0f0b672b19e6d6\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fd9eafca6098421f3aa25bf0a0b24386facc764b7ecb8e6ce4a890afa3c6d459\",\"dweb:/ipfs/QmPXTSX2ie5wsZ6FyXWS4YMa7aPpYNyza9Rym1n799B5LU\"]},\"contracts/extension/interface/IClaimConditionMultiPhase.sol\":{\"keccak256\":\"0x8388214d6cc8f1fd481aed7e062a8b23d5959e870a56076017fcf474404dbbfa\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://54c039ba9f0e674a6bdbb0ab015ad4054feffaea7eb3cc7c485aa95761156125\",\"dweb:/ipfs/QmTya89XYsc1iGAhfsHeZkgGaAv7ivA5Vr4jrGCifYHmKh\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.12+commit.f00d7308"
    },
    "language": "Solidity",
    "output": {
      "abi": [],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=lib/chainlink/",
        "@ds-test/=lib/ds-test/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@std/=lib/forge-std/src/",
        "@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/",
        "ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/",
        "ERC721A/=lib/ERC721A/contracts/",
        "chainlink/=lib/chainlink/",
        "contracts/=contracts/",
        "ds-test/=lib/ds-test/src/",
        "dynamic-contracts/=lib/dynamic-contracts/src/",
        "erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/",
        "erc721a-upgradeable/=lib/ERC721A-Upgradeable/",
        "erc721a/=lib/ERC721A/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/extension/interface/IClaimConditionMultiPhase.sol": "IClaimConditionMultiPhase"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/extension/interface/IClaimCondition.sol": {
        "keccak256": "0x391e69970031edb30dfa59f8db33c7446b349cd5ec505fd99f0f0b672b19e6d6",
        "urls": [
          "bzz-raw://fd9eafca6098421f3aa25bf0a0b24386facc764b7ecb8e6ce4a890afa3c6d459",
          "dweb:/ipfs/QmPXTSX2ie5wsZ6FyXWS4YMa7aPpYNyza9Rym1n799B5LU"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IClaimConditionMultiPhase.sol": {
        "keccak256": "0x8388214d6cc8f1fd481aed7e062a8b23d5959e870a56076017fcf474404dbbfa",
        "urls": [
          "bzz-raw://54c039ba9f0e674a6bdbb0ab015ad4054feffaea7eb3cc7c485aa95761156125",
          "dweb:/ipfs/QmTya89XYsc1iGAhfsHeZkgGaAv7ivA5Vr4jrGCifYHmKh"
        ],
        "license": "Apache-2.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/extension/interface/IClaimConditionMultiPhase.sol",
    "id": 32309,
    "exportedSymbols": {
      "IClaimCondition": [
        32285
      ],
      "IClaimConditionMultiPhase": [
        32308
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:1783:102",
    "nodes": [
      {
        "id": 32287,
        "nodeType": "PragmaDirective",
        "src": "39:23:102",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 32288,
        "nodeType": "ImportDirective",
        "src": "86:31:102",
        "nodes": [],
        "absolutePath": "contracts/extension/interface/IClaimCondition.sol",
        "file": "./IClaimCondition.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32309,
        "sourceUnit": 32286,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 32308,
        "nodeType": "ContractDefinition",
        "src": "585:1236:102",
        "nodes": [
          {
            "id": 32307,
            "nodeType": "StructDefinition",
            "src": "1597:222:102",
            "nodes": [],
            "canonicalName": "IClaimConditionMultiPhase.ClaimConditionList",
            "members": [
              {
                "constant": false,
                "id": 32293,
                "mutability": "mutable",
                "name": "currentStartId",
                "nameLocation": "1641:14:102",
                "nodeType": "VariableDeclaration",
                "scope": 32307,
                "src": "1633:22:102",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 32292,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1633:7:102",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 32295,
                "mutability": "mutable",
                "name": "count",
                "nameLocation": "1673:5:102",
                "nodeType": "VariableDeclaration",
                "scope": 32307,
                "src": "1665:13:102",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 32294,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1665:7:102",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 32300,
                "mutability": "mutable",
                "name": "conditions",
                "nameLocation": "1723:10:102",
                "nodeType": "VariableDeclaration",
                "scope": 32307,
                "src": "1688:45:102",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ClaimCondition_$32284_storage_$",
                  "typeString": "mapping(uint256 => struct IClaimCondition.ClaimCondition)"
                },
                "typeName": {
                  "id": 32299,
                  "keyType": {
                    "id": 32296,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1696:7:102",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "1688:34:102",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ClaimCondition_$32284_storage_$",
                    "typeString": "mapping(uint256 => struct IClaimCondition.ClaimCondition)"
                  },
                  "valueType": {
                    "id": 32298,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 32297,
                      "name": "ClaimCondition",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 32284,
                      "src": "1707:14:102"
                    },
                    "referencedDeclaration": 32284,
                    "src": "1707:14:102",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ClaimCondition_$32284_storage_ptr",
                      "typeString": "struct IClaimCondition.ClaimCondition"
                    }
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 32306,
                "mutability": "mutable",
                "name": "supplyClaimedByWallet",
                "nameLocation": "1791:21:102",
                "nodeType": "VariableDeclaration",
                "scope": 32307,
                "src": "1743:69:102",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                  "typeString": "mapping(uint256 => mapping(address => uint256))"
                },
                "typeName": {
                  "id": 32305,
                  "keyType": {
                    "id": 32301,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1751:7:102",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "1743:47:102",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                    "typeString": "mapping(uint256 => mapping(address => uint256))"
                  },
                  "valueType": {
                    "id": 32304,
                    "keyType": {
                      "id": 32302,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1770:7:102",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1762:27:102",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueType": {
                      "id": 32303,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1781:7:102",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "ClaimConditionList",
            "nameLocation": "1604:18:102",
            "scope": 32308,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 32290,
              "name": "IClaimCondition",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 32285,
              "src": "624:15:102"
            },
            "id": 32291,
            "nodeType": "InheritanceSpecifier",
            "src": "624:15:102"
          }
        ],
        "canonicalName": "IClaimConditionMultiPhase",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 32289,
          "nodeType": "StructuredDocumentation",
          "src": "119:464:102",
          "text": "  The interface `IClaimConditionMultiPhase` is written for thirdweb's 'Drop' contracts, which are distribution mechanisms for tokens.\n  An authorized wallet can set a series of claim conditions, ordered by their respective `startTimestamp`.\n  A claim condition defines criteria under which accounts can mint tokens. Claim conditions can be overwritten\n  or added to by the contract admin. At any moment, there is only one active claim condition."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          32308,
          32285
        ],
        "name": "IClaimConditionMultiPhase",
        "nameLocation": "595:25:102",
        "scope": 32309,
        "usedErrors": []
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 102
}