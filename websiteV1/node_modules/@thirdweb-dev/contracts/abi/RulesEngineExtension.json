{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "ruleId",
          "type": "bytes32"
        },
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "ruleId",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "enum IRulesEngine.TokenType",
              "name": "tokenType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "score",
              "type": "uint256"
            },
            {
              "internalType": "enum IRulesEngine.RuleType",
              "name": "ruleType",
              "type": "uint8"
            }
          ],
          "indexed": false,
          "internalType": "struct IRulesEngine.RuleWithId",
          "name": "rule",
          "type": "tuple"
        }
      ],
      "name": "RuleCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "ruleId",
          "type": "bytes32"
        }
      ],
      "name": "RuleDeleted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newRulesEngine",
          "type": "address"
        }
      ],
      "name": "RulesEngineOverriden",
      "type": "event"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "enum IRulesEngine.TokenType",
              "name": "tokenType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "scorePerOwnedToken",
              "type": "uint256"
            }
          ],
          "internalType": "struct IRulesEngine.RuleTypeMultiplicative",
          "name": "rule",
          "type": "tuple"
        }
      ],
      "name": "createRuleMultiplicative",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "ruleId",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "enum IRulesEngine.TokenType",
              "name": "tokenType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "score",
              "type": "uint256"
            }
          ],
          "internalType": "struct IRulesEngine.RuleTypeThreshold",
          "name": "rule",
          "type": "tuple"
        }
      ],
      "name": "createRuleThreshold",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "ruleId",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_ruleId",
          "type": "bytes32"
        }
      ],
      "name": "deleteRule",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllRules",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "ruleId",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "enum IRulesEngine.TokenType",
              "name": "tokenType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "score",
              "type": "uint256"
            },
            {
              "internalType": "enum IRulesEngine.RuleType",
              "name": "ruleType",
              "type": "uint8"
            }
          ],
          "internalType": "struct IRulesEngine.RuleWithId[]",
          "name": "rules",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRulesEngineOverride",
      "outputs": [
        {
          "internalType": "address",
          "name": "rulesEngineAddress",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenOwner",
          "type": "address"
        }
      ],
      "name": "getScore",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "score",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_rulesEngineAddress",
          "type": "address"
        }
      ],
      "name": "setRulesEngineOverride",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "251:850:330:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "251:850:330:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5579:296:186;;;;;;:::i;:::-;;:::i;:::-;;3265:475;;;;;;:::i;:::-;;:::i;:::-;;;1654:25:644;;;1642:2;1627:18;3265:475:186;;;;;;;;1926:339;;;:::i;:::-;;;;;;;:::i;2626:633::-;;;;;;:::i;:::-;;:::i;3746:149::-;;;;;;:::i;:::-;;:::i;2271:162::-;;;:::i;:::-;;;;;;;:::i;1362:558::-;;;;;;:::i;:::-;;:::i;5579:296::-;5667:25;:23;:25::i;:::-;5659:79;;;;-1:-1:-1;;;5659:79:186;;4767:2:644;5659:79:186;;;4749:21:644;4806:2;4786:18;;;4779:30;4845:34;4825:18;;;4818:62;-1:-1:-1;;;4896:18:644;;;4889:39;4945:19;;5659:79:186;;;;;;;;;5792:19;5748:21;:19;:21::i;:::-;:63;;-1:-1:-1;;;;;;5748:63:186;-1:-1:-1;;;;;5748:63:186;;;;;;5827:41;;;;;;;;-1:-1:-1;;5827:41:186;5579:296;:::o;3265:475::-;3343:14;3377;:12;:14::i;:::-;3369:56;;;;-1:-1:-1;;;3369:56:186;;;;;;;:::i;:::-;3485:10;;3497:14;;;;;3513:12;;;;;3527;;;;3541:10;;;;3468:104;;;;3485:10;3513:12;;3527;;3485:10;;3468:104;;:::i;:::-;;;;;;;;;;;;;3445:137;;;;;;3436:146;;3592:141;3617:106;;;;;;;;3628:6;3617:106;;;;3636:4;:10;;;-1:-1:-1;;;;;3617:106:186;;;;;3648:4;:14;;;3617:106;;;;;;;;:::i;:::-;;;;;3664:4;:12;;;3617:106;;;;3678:4;:12;;;3617:106;;;;3692:4;:10;;;3617:106;;;;3704:18;3617:106;;;;;;;;:::i;:::-;;;3592:11;:141::i;:::-;3265:475;;;:::o;1926:339::-;1972:25;2009:20;2032:34;:21;:19;:21::i;:::-;:25;;:32;:34::i;:::-;2090:10;;2009:57;;-1:-1:-1;2090:10:186;-1:-1:-1;;;;;2119:21:186;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;2111:29;;2156:9;2151:108;2175:3;2171:1;:7;2151:108;;;2213:21;:19;:21::i;:::-;:27;;:35;2241:3;2245:1;2241:6;;;;;;;;:::i;:::-;;;;;;;;;;;;2213:35;;;;;;;;;;;;;-1:-1:-1;2213:35:186;2202:46;;;;;;;;;;;;;;;-1:-1:-1;;;;;2202:46:186;;;;;;;;;;2213:35;;2202:46;;;-1:-1:-1;;;2202:46:186;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;:5;2208:1;2202:8;;;;;;;;:::i;:::-;;;;;;;;;;:46;2180:6;2185:1;2180:6;;:::i;:::-;;;2151:108;;;;1999:266;;1926:339;:::o;2626:633::-;2714:14;2748;:12;:14::i;:::-;2740:56;;;;-1:-1:-1;;;2740:56:186;;;;;;;:::i;:::-;2856:10;;2868:14;;;;;2884:12;;;;;2898:23;;;;2839:108;;;;2856:10;2884:12;;2898:23;2923;;2839:108;;:::i;:::-;;;;;;;;;;;;;2816:141;;;;;;2807:150;;2967:285;2992:250;;;;;;;;3020:6;2992:250;;;;3044:4;:10;;;-1:-1:-1;;;;;2992:250:186;;;;;3072:4;:14;;;2992:250;;;;;;;;:::i;:::-;;;3104:12;;;;;2992:250;;;;-1:-1:-1;2992:250:186;;;;;3164:23;;;;2992:250;;;;;;3205:23;2992:250;;3746:149;3810:14;:12;:14::i;:::-;3802:56;;;;-1:-1:-1;;;3802:56:186;;;;;;;:::i;:::-;3868:20;3880:7;3868:11;:20::i;:::-;3746:149;:::o;2271:162::-;2326:26;2385:21;:19;:21::i;:::-;:41;-1:-1:-1;;;;;2385:41:186;;2271:162;-1:-1:-1;2271:162:186:o;1362:558::-;1422:13;1447:22;1472:24;:22;:24::i;:::-;1447:49;-1:-1:-1;;;;;;1510:28:186;;;1506:116;;1561:50;;-1:-1:-1;;;1561:50:186;;-1:-1:-1;;;;;1561:37:186;;;;;:50;;1599:11;;1561:50;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1554:57;1362:558;-1:-1:-1;;;1362:558:186:o;1506:116::-;1632:20;1655:34;:21;:19;:21::i;:34::-;1713:10;;1632:57;;-1:-1:-1;1699:11:186;1734:180;1758:3;1754:1;:7;1734:180;;;1785:22;1810:21;:19;:21::i;:::-;:27;;:35;1838:3;1842:1;1838:6;;;;;;;;:::i;:::-;;;;;;;;;;;;1810:35;;;;;;;;;;;;;-1:-1:-1;1810:35:186;1785:60;;;;;;;;;;;;;;;-1:-1:-1;;;;;1785:60:186;;;;;;;;;;1810:35;;1785:60;;;-1:-1:-1;;;1785:60:186;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;-1:-1:-1;1785:60:186;-1:-1:-1;1868:35:186;1885:11;1785:60;1868:16;:35::i;:::-;1859:44;;;;:::i;:::-;;-1:-1:-1;1763:6:186;;-1:-1:-1;1768:1:186;1763:6;;:::i;:::-;;;1734:180;;;;1437:483;;;1362:558;;;:::o;662:161:330:-;737:4;790:26;737:4;805:10;790:8;:26::i;:::-;783:33;;662:161;:::o;5881:141:186:-;648:66;;662:161:330:o;400:140::-;464:4;487:46;496:24;522:10;487:8;:46::i;5063:266:186:-;5166:12;;5136:43;;:21;:19;:21::i;:::-;:25;;;:29;:43::i;:::-;5128:88;;;;-1:-1:-1;;;5128:88:186;;;;;;;:::i;:::-;5270:5;5226:21;:19;:21::i;:::-;5254:12;;5226:41;;;;:27;;;;;:41;;;;;;;;;:49;;;;;;;;;;;;;-1:-1:-1;;;;;5226:49:186;;;-1:-1:-1;;;;;;5226:49:186;;;;;;;;;;:41;;:49;;-1:-1:-1;;;;;;5226:49:186;;-1:-1:-1;;;5226:49:186;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;5226:49:186;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5226:49:186;;;;;;;;;;;:::i;:::-;;;;;;;;;5302:5;:12;;;5290:32;5316:5;5290:32;;;;;;:::i;:::-;;;;;;;;5063:266;:::o;7664:124:242:-;7727:16;7762:19;7770:3;7762:7;:19::i;:::-;7755:26;7664:124;-1:-1:-1;;7664:124:242:o;5335:238:186:-;5400:41;5433:7;5400:21;:19;:21::i;:::-;:25;;;:32;:41::i;:::-;5392:86;;;;-1:-1:-1;;;5392:86:186;;;;;;;:::i;:::-;5495:21;:19;:21::i;:::-;:36;;;;:27;;;;:36;;;;;;5488:43;;;;;;;;-1:-1:-1;;;;;;5488:43:186;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5488:43:186;;;5546:20;;5523:7;;5546:20;;;5335:238;:::o;4088:969::-;4183:13;;;4242:5;:15;;;:34;;;;;;;;:::i;:::-;;4238:548;;;4378:12;4412:5;:11;;;-1:-1:-1;;;;;4397:36:186;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4393:42;;:2;:42;:::i;:::-;4378:57;;4504:4;4466:5;:11;;;-1:-1:-1;;;;;4459:29:186;;4489:11;4459:42;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:49;;;;:::i;:::-;4449:59;;4278:241;4238:548;;;4548:16;4529:5;:15;;;:35;;;;;;;;:::i;:::-;;4525:261;;;4598:5;:11;;;-1:-1:-1;;;;;4590:30:186;;4621:11;4590:43;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4580:53;;4525:261;;;4673:17;4654:5;:15;;;:36;;;;;;;;:::i;:::-;;4650:136;;;4725:11;;;;4761:13;;;;4716:59;;-1:-1:-1;;;4716:59:186;;-1:-1:-1;;;;;10090:32:644;;;4716:59:186;;;10072:51:644;10139:18;;;10132:34;;;;4716:31:186;;;;;10045:18:644;;4716:59:186;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4706:69;;4650:136;4818:18;4800:5;:14;;;:36;;;;;;;;:::i;:::-;;4796:255;;;4867:5;:13;;;4856:7;:24;4852:82;;4908:5;:11;;;4900:19;;4852:82;4796:255;;;4972:23;4954:5;:14;;;:41;;;;;;;;:::i;:::-;;4950:101;;;5029:11;;;;5019:21;;:7;:21;:::i;:::-;5011:29;;4950:101;4198:859;4088:969;;;;:::o;891:208:330:-;965:4;1062:20;;;559:66:179;1062:20:330;;;;;;;;-1:-1:-1;;;;;1062:30:330;;;;;;;;;;;;;;;891:208::o;5818:123:242:-;5888:4;5911:23;5916:3;5928:5;5911:4;:23::i;5469:109::-;5525:16;5560:3;:11;;5553:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5469:109;;;:::o;6109:129::-;6182:4;6205:26;6213:3;6225:5;6205:7;:26::i;2113:404::-;2176:4;4250:19;;;:12;;;:19;;;;;;2192:319;;-1:-1:-1;2234:23:242;;;;;;;;:11;:23;;;;;;;;;;;;;2414:18;;2392:19;;;:12;;;:19;;;;;;:40;;;;2446:11;;2192:319;-1:-1:-1;2495:5:242;2488:12;;2685:1388;2751:4;2888:19;;;:12;;;:19;;;;;;2922:15;;2918:1149;;3291:21;3315:14;3328:1;3315:10;:14;:::i;:::-;3363:18;;3291:38;;-1:-1:-1;3343:17:242;;3363:22;;3384:1;;3363:22;:::i;:::-;3343:42;;3417:13;3404:9;:26;3400:398;;3450:17;3470:3;:11;;3482:9;3470:22;;;;;;;;:::i;:::-;;;;;;;;;3450:42;;3621:9;3592:3;:11;;3604:13;3592:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;;3704:23;;;:12;;;:23;;;;;:36;;;3400:398;3876:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3968:3;:12;;:19;3981:5;3968:19;;;;;;;;;;;3961:26;;;4009:4;4002:11;;;;;;;2918:1149;4051:5;4044:12;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::o;14:173:644:-;82:20;;-1:-1:-1;;;;;131:31:644;;121:42;;111:70;;177:1;174;167:12;192:186;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;383:127::-;444:10;439:3;435:20;432:1;425:31;475:4;472:1;465:15;499:4;496:1;489:15;515:150;590:20;;639:1;629:12;;619:40;;655:1;652;645:12;670:833;765:6;818:3;806:9;797:7;793:23;789:33;786:53;;;835:1;832;825:12;786:53;868:2;862:9;910:3;902:6;898:16;980:6;968:10;965:22;-1:-1:-1;;;;;932:10:644;929:34;926:62;923:185;;;1030:10;1025:3;1021:20;1018:1;1011:31;1065:4;1062:1;1055:15;1093:4;1090:1;1083:15;923:185;1124:2;1117:22;1163:29;1182:9;1163:29;:::i;:::-;1155:6;1148:45;1226;1267:2;1256:9;1252:18;1226:45;:::i;:::-;1221:2;1213:6;1209:15;1202:70;1333:2;1322:9;1318:18;1305:32;1300:2;1292:6;1288:15;1281:57;1399:2;1388:9;1384:18;1371:32;1366:2;1358:6;1354:15;1347:57;1466:3;1455:9;1451:19;1438:33;1432:3;1424:6;1420:16;1413:59;1491:6;1481:16;;;670:833;;;;:::o;1690:127::-;1751:10;1746:3;1742:20;1739:1;1732:31;1782:4;1779:1;1772:15;1806:4;1803:1;1796:15;1822:669;1898:12;;1886:25;;1964:4;1953:16;;;1947:23;-1:-1:-1;;;;;1943:49:644;1927:14;;;1920:73;2039:4;2028:16;;2022:23;2081:1;2064:19;;2054:53;;2087:18;;:::i;:::-;2139:12;2132:4;2127:3;2123:14;2116:36;;2201:4;2194:5;2190:16;2184:23;2177:4;2172:3;2168:14;2161:47;2257:4;2250:5;2246:16;2240:23;2233:4;2228:3;2224:14;2217:47;2313:4;2306:5;2302:16;2296:23;2289:4;2284:3;2280:14;2273:47;2368:4;2361:5;2357:16;2351:23;2412:1;2396:14;2393:21;2383:55;;2418:18;;:::i;:::-;2470:14;2463:4;2458:3;2454:14;2447:38;;1822:669;;:::o;2496:714::-;2725:2;2777:21;;;2847:13;;2750:18;;;2869:22;;;2696:4;;2725:2;2948:15;;;;2922:2;2907:18;;;2696:4;2991:193;3005:6;3002:1;2999:13;2991:193;;;3054:48;3098:3;3089:6;3083:13;3054:48;:::i;:::-;3159:15;;;;3131:4;3122:14;;;;;3027:1;3020:9;2991:193;;;-1:-1:-1;3201:3:644;;2496:714;-1:-1:-1;;;;;;2496:714:644:o;3215:770::-;3315:6;3368:3;3356:9;3347:7;3343:23;3339:33;3336:53;;;3385:1;3382;3375:12;3336:53;3418:2;3412:9;3460:3;3452:6;3448:16;3530:6;3518:10;3515:22;-1:-1:-1;;;;;3482:10:644;3479:34;3476:62;3473:185;;;3580:10;3575:3;3571:20;3568:1;3561:31;3615:4;3612:1;3605:15;3643:4;3640:1;3633:15;3473:185;3674:2;3667:22;3713:29;3732:9;3713:29;:::i;:::-;3705:6;3698:45;3776;3817:2;3806:9;3802:18;3776:45;:::i;:::-;3771:2;3763:6;3759:15;3752:70;3883:2;3872:9;3868:18;3855:32;3850:2;3842:6;3838:15;3831:57;3949:2;3938:9;3934:18;3921:32;3916:2;3908:6;3904:15;3897:57;3973:6;3963:16;;;3215:770;;;;:::o;3990:180::-;4049:6;4102:2;4090:9;4081:7;4077:23;4073:32;4070:52;;;4118:1;4115;4108:12;4070:52;-1:-1:-1;4141:23:644;;3990:180;-1:-1:-1;3990:180:644:o;4175:203::-;-1:-1:-1;;;;;4339:32:644;;;;4321:51;;4309:2;4294:18;;4175:203::o;4975:353::-;5177:2;5159:21;;;5216:2;5196:18;;;5189:30;5255:31;5250:2;5235:18;;5228:59;5319:2;5304:18;;4975:353::o;5333:150::-;5414:1;5407:5;5404:12;5394:46;;5420:18;;:::i;:::-;5465:3;5461:15;5449:28;;5333:150::o;5488:149::-;5568:1;5561:5;5558:12;5548:46;;5574:18;;:::i;5642:610::-;5981:2;5952:15;;;-1:-1:-1;;;;;;5948:45:644;5936:58;;6003:47;6046:2;6037:12;;6029:6;6003:47;:::i;:::-;6080:6;6075:2;6070:3;6066:12;6059:28;6117:6;6112:2;6107:3;6103:12;6096:28;6154:6;6149:2;6144:3;6140:12;6133:28;6170:47;6212:3;6207;6203:13;6195:6;6170:47;:::i;:::-;6242:3;6233:13;;5642:610;-1:-1:-1;;;;;;5642:610:644:o;6257:127::-;6318:10;6313:3;6309:20;6306:1;6299:31;6349:4;6346:1;6339:15;6373:4;6370:1;6363:15;6389:127;6450:10;6445:3;6441:20;6438:1;6431:31;6481:4;6478:1;6471:15;6505:4;6502:1;6495:15;6521:128;6561:3;6592:1;6588:6;6585:1;6582:13;6579:39;;;6598:18;;:::i;:::-;-1:-1:-1;6634:9:644;;6521:128::o;6654:543::-;6965:2;6936:15;;;-1:-1:-1;;;;;;6932:45:644;6920:58;;6987:47;7030:2;7021:12;;7013:6;6987:47;:::i;:::-;7064:6;7059:2;7054:3;7050:12;7043:28;7101:6;7096:2;7091:3;7087:12;7080:28;7117:46;7159:2;7154:3;7150:12;7142:6;7117:46;:::i;:::-;7188:2;7179:12;;6654:543;-1:-1:-1;;;;;6654:543:644:o;7202:184::-;7272:6;7325:2;7313:9;7304:7;7300:23;7296:32;7293:52;;;7341:1;7338;7331:12;7293:52;-1:-1:-1;7364:16:644;;7202:184;-1:-1:-1;7202:184:644:o;7391:356::-;7593:2;7575:21;;;7612:18;;;7605:30;7671:34;7666:2;7651:18;;7644:62;7738:2;7723:18;;7391:356::o;7752:258::-;7944:3;7929:19;;7957:47;7933:9;7986:6;7957:47;:::i;8015:273::-;8083:6;8136:2;8124:9;8115:7;8111:23;8107:32;8104:52;;;8152:1;8149;8142:12;8104:52;8184:9;8178:16;8234:4;8227:5;8223:16;8216:5;8213:27;8203:55;;8254:1;8251;8244:12;8293:422;8382:1;8425:5;8382:1;8439:270;8460:7;8450:8;8447:21;8439:270;;;8519:4;8515:1;8511:6;8507:17;8501:4;8498:27;8495:53;;;8528:18;;:::i;:::-;8578:7;8568:8;8564:22;8561:55;;;8598:16;;;;8561:55;8677:22;;;;8637:15;;;;8439:270;;;8443:3;8293:422;;;;;:::o;8720:806::-;8769:5;8799:8;8789:80;;-1:-1:-1;8840:1:644;8854:5;;8789:80;8888:4;8878:76;;-1:-1:-1;8925:1:644;8939:5;;8878:76;8970:4;8988:1;8983:59;;;;9056:1;9051:130;;;;8963:218;;8983:59;9013:1;9004:10;;9027:5;;;9051:130;9088:3;9078:8;9075:17;9072:43;;;9095:18;;:::i;:::-;-1:-1:-1;;9151:1:644;9137:16;;9166:5;;8963:218;;9265:2;9255:8;9252:16;9246:3;9240:4;9237:13;9233:36;9227:2;9217:8;9214:16;9209:2;9203:4;9200:12;9196:35;9193:77;9190:159;;;-1:-1:-1;9302:19:644;;;9334:5;;9190:159;9381:34;9406:8;9400:4;9381:34;:::i;:::-;9451:6;9447:1;9443:6;9439:19;9430:7;9427:32;9424:58;;;9462:18;;:::i;:::-;9500:20;;8720:806;-1:-1:-1;;;8720:806:644:o;9531:140::-;9589:5;9618:47;9659:4;9649:8;9645:19;9639:4;9618:47;:::i;9676:217::-;9716:1;9742;9732:132;;9786:10;9781:3;9777:20;9774:1;9767:31;9821:4;9818:1;9811:15;9849:4;9846:1;9839:15;9732:132;-1:-1:-1;9878:9:644;;9676:217::o;10177:168::-;10217:7;10283:1;10279;10275:6;10271:14;10268:1;10265:21;10260:1;10253:9;10246:17;10242:45;10239:71;;;10290:18;;:::i;:::-;-1:-1:-1;10330:9:644;;10177:168::o;10350:125::-;10390:4;10418:1;10415;10412:8;10409:34;;;10423:18;;:::i;:::-;-1:-1:-1;10460:9:644;;10350:125::o;10480:127::-;10541:10;10536:3;10532:20;10529:1;10522:31;10572:4;10569:1;10562:15;10596:4;10593:1;10586:15",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "createRuleMultiplicative((address,uint8,uint256,uint256))": "1e2e9cb5",
    "createRuleThreshold((address,uint8,uint256,uint256,uint256))": "1022a25e",
    "deleteRule(bytes32)": "9d907761",
    "getAllRules()": "1184aef2",
    "getRulesEngineOverride()": "a7145eb4",
    "getScore(address)": "d47875d0",
    "setRulesEngineOverride(address)": "0eb0adb6"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"ruleId\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"ruleId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"enum IRulesEngine.TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"score\",\"type\":\"uint256\"},{\"internalType\":\"enum IRulesEngine.RuleType\",\"name\":\"ruleType\",\"type\":\"uint8\"}],\"indexed\":false,\"internalType\":\"struct IRulesEngine.RuleWithId\",\"name\":\"rule\",\"type\":\"tuple\"}],\"name\":\"RuleCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"ruleId\",\"type\":\"bytes32\"}],\"name\":\"RuleDeleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newRulesEngine\",\"type\":\"address\"}],\"name\":\"RulesEngineOverriden\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"enum IRulesEngine.TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"scorePerOwnedToken\",\"type\":\"uint256\"}],\"internalType\":\"struct IRulesEngine.RuleTypeMultiplicative\",\"name\":\"rule\",\"type\":\"tuple\"}],\"name\":\"createRuleMultiplicative\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"ruleId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"enum IRulesEngine.TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"score\",\"type\":\"uint256\"}],\"internalType\":\"struct IRulesEngine.RuleTypeThreshold\",\"name\":\"rule\",\"type\":\"tuple\"}],\"name\":\"createRuleThreshold\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"ruleId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_ruleId\",\"type\":\"bytes32\"}],\"name\":\"deleteRule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllRules\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"ruleId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"enum IRulesEngine.TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"score\",\"type\":\"uint256\"},{\"internalType\":\"enum IRulesEngine.RuleType\",\"name\":\"ruleType\",\"type\":\"uint8\"}],\"internalType\":\"struct IRulesEngine.RuleWithId[]\",\"name\":\"rules\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRulesEngineOverride\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"rulesEngineAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenOwner\",\"type\":\"address\"}],\"name\":\"getScore\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"score\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rulesEngineAddress\",\"type\":\"address\"}],\"name\":\"setRulesEngineOverride\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/prebuilts/evolving-nfts/extension/RulesEngineExtension.sol\":\"RulesEngineExtension\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@std/=lib/forge-std/src/\",\":@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/\",\":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/\",\":contracts/=contracts/\",\":ds-test/=lib/ds-test/src/\",\":dynamic-contracts/=lib/dynamic-contracts/src/\",\":erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/ERC721A-Upgradeable/\",\":erc721a/=lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/\"]},\"sources\":{\"contracts/eip/interface/IERC1155.sol\":{\"keccak256\":\"0x17c265f3f47161c9d2f6c7f7f4040440df9ad4cd7eb74eb411bf25a94b542f9e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c4f468eb184f2a08909834b51e33e854741647f9798aa1e6746f3f1b69525552\",\"dweb:/ipfs/QmbCMy9vJLga2dCxGG6nXW7VKGqsMrzU8phPhcd58xkapq\"]},\"contracts/eip/interface/IERC20.sol\":{\"keccak256\":\"0x5bdd9dd97ba7d9d7c9a2953db287e4d9d7fa93a27a96bc2e72a8da4919b6f7ff\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://45527c265ee5de6bbb3ecfc052e7b1175531a82c2ac16172020aee855f7dd592\",\"dweb:/ipfs/QmVZthqbG916qUQSwv1LE8bB58ZGQ1VfQbLbbRV5urfEYA\"]},\"contracts/eip/interface/IERC20Metadata.sol\":{\"keccak256\":\"0xc2500d7a12573fc6f9714d806bec722ad4110a68e6dd14b69903042421001734\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://02423735619f14f3a13fae0ad6e407385565f159ad956c8bd1c14b3605a73a65\",\"dweb:/ipfs/QmYfYWh5wGidaQ7qDbC8oSuQ3gsnd3moJbWZ8yBzMnrYz1\"]},\"contracts/eip/interface/IERC721.sol\":{\"keccak256\":\"0xbd9f2dd131e8f1e4e50b1b116eae917510ab9bf5d4356de37c5daf4cffdfa049\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ac3530b317083464271b100de1976ed9179b9e7d5a4fc3d992c61c80676a676\",\"dweb:/ipfs/QmUq1AVzymvp7Y8H1eypGEGU4icjzn5vDSvKMNpXnoaeMT\"]},\"contracts/extension/interface/IPermissions.sol\":{\"keccak256\":\"0xc0cd1f87bac474a06f85e2b341b9b57662aee957fc24180d42c872481c2f2ae3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7dec3eed451d63867531d693f0be3279fa2c9aef3130f0826c3520c06820fa5d\",\"dweb:/ipfs/QmTYANrcPdd9SCe99DWsKJ19evNRQKQGZeoS1Keew4M2cS\"]},\"contracts/extension/interface/IRulesEngine.sol\":{\"keccak256\":\"0x8fe3dd345130a94008bdb46fb13a40eb6e2df9cf8261893103f18f548d8d511d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://869bef4d59679ff81e361e97ef4973e7c9b1676aa52c5a332d292360a2f355ff\",\"dweb:/ipfs/QmeuGoVkJ9EynTsaXM3XkB7ME6BFqNDvynDuLAsfKjiTTv\"]},\"contracts/extension/upgradeable/Permissions.sol\":{\"keccak256\":\"0x1ced1057ad0c07677db95c9ea291a8748c5cf14f1cce39423d28fab4413fb7fd\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://aeae206f911e13618737544b287d077f870d60c8d40f599aad20c5ffa5730c6e\",\"dweb:/ipfs/QmQ3yy9o7iWAfLrpEDMMB6uA6cw9HJxKCPGjxaEVG4AQrs\"]},\"contracts/extension/upgradeable/RulesEngine.sol\":{\"keccak256\":\"0xb0edc081d5fa0dc3c5a4bb06ace1333467be8ddfbfbdf54d420db7caf513b88f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e8042f7e255417687d9e7faad700f14cfe47c2ac86c51117e7e4059cc6c4a08a\",\"dweb:/ipfs/QmTFLefq8pw2n1Fk46Xf6TjhqWAnSAMxoT13BkjyDXTZL2\"]},\"contracts/external-deps/openzeppelin/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x5050943b32b6a8f282573d166b2e9d87ab7eb4dbba4ab6acf36ecb54fe6995e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4831d777a29ebdf9f2caecd70e74b97bff1b70e53622fd0a02aed01e21c8271\",\"dweb:/ipfs/QmUqurVVnCc7XkMxb2k23TVQUtuhHZduJ3hTZarTJrqU24\"]},\"contracts/lib/TWStrings.sol\":{\"keccak256\":\"0xef7e9954d888f99baffc10db1d9bf6a2beb66c842d81dea90352ddded22cbbf8\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://832415134684f5413f9d0f3f5536aa30848690cfe54769f7730a3807438f3bf9\",\"dweb:/ipfs/QmduTiUdtsnyJVMXpdomohEWDVg46aZhnS9uTURu4x1NYt\"]},\"contracts/prebuilts/evolving-nfts/extension/RulesEngineExtension.sol\":{\"keccak256\":\"0x88e28def9b9a1a6b16140d04cf7bdb932d7eb5354dc8ea08b28e409a50ab046a\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1fe96be126f804d10f49260ccddcfdc76e28838b61a787a1ba4f9eac996531ef\",\"dweb:/ipfs/QmasqZC655A2Le178z4PcdmFMG6HWAG8zxPjQdfkvbRjjX\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.12+commit.f00d7308"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "ruleId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "struct IRulesEngine.RuleWithId",
              "name": "rule",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "ruleId",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "enum IRulesEngine.TokenType",
                  "name": "tokenType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "score",
                  "type": "uint256"
                },
                {
                  "internalType": "enum IRulesEngine.RuleType",
                  "name": "ruleType",
                  "type": "uint8"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RuleCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "ruleId",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RuleDeleted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newRulesEngine",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RulesEngineOverriden",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "struct IRulesEngine.RuleTypeMultiplicative",
              "name": "rule",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "enum IRulesEngine.TokenType",
                  "name": "tokenType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "scorePerOwnedToken",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createRuleMultiplicative",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "ruleId",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct IRulesEngine.RuleTypeThreshold",
              "name": "rule",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "enum IRulesEngine.TokenType",
                  "name": "tokenType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "score",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createRuleThreshold",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "ruleId",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "_ruleId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deleteRule"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getAllRules",
          "outputs": [
            {
              "internalType": "struct IRulesEngine.RuleWithId[]",
              "name": "rules",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "ruleId",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "enum IRulesEngine.TokenType",
                  "name": "tokenType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "score",
                  "type": "uint256"
                },
                {
                  "internalType": "enum IRulesEngine.RuleType",
                  "name": "ruleType",
                  "type": "uint8"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getRulesEngineOverride",
          "outputs": [
            {
              "internalType": "address",
              "name": "rulesEngineAddress",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_tokenOwner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getScore",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "score",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_rulesEngineAddress",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRulesEngineOverride"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=lib/chainlink/",
        "@ds-test/=lib/ds-test/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@std/=lib/forge-std/src/",
        "@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/",
        "ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/",
        "ERC721A/=lib/ERC721A/contracts/",
        "chainlink/=lib/chainlink/",
        "contracts/=contracts/",
        "ds-test/=lib/ds-test/src/",
        "dynamic-contracts/=lib/dynamic-contracts/src/",
        "erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/",
        "erc721a-upgradeable/=lib/ERC721A-Upgradeable/",
        "erc721a/=lib/ERC721A/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/prebuilts/evolving-nfts/extension/RulesEngineExtension.sol": "RulesEngineExtension"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/eip/interface/IERC1155.sol": {
        "keccak256": "0x17c265f3f47161c9d2f6c7f7f4040440df9ad4cd7eb74eb411bf25a94b542f9e",
        "urls": [
          "bzz-raw://c4f468eb184f2a08909834b51e33e854741647f9798aa1e6746f3f1b69525552",
          "dweb:/ipfs/QmbCMy9vJLga2dCxGG6nXW7VKGqsMrzU8phPhcd58xkapq"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC20.sol": {
        "keccak256": "0x5bdd9dd97ba7d9d7c9a2953db287e4d9d7fa93a27a96bc2e72a8da4919b6f7ff",
        "urls": [
          "bzz-raw://45527c265ee5de6bbb3ecfc052e7b1175531a82c2ac16172020aee855f7dd592",
          "dweb:/ipfs/QmVZthqbG916qUQSwv1LE8bB58ZGQ1VfQbLbbRV5urfEYA"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC20Metadata.sol": {
        "keccak256": "0xc2500d7a12573fc6f9714d806bec722ad4110a68e6dd14b69903042421001734",
        "urls": [
          "bzz-raw://02423735619f14f3a13fae0ad6e407385565f159ad956c8bd1c14b3605a73a65",
          "dweb:/ipfs/QmYfYWh5wGidaQ7qDbC8oSuQ3gsnd3moJbWZ8yBzMnrYz1"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC721.sol": {
        "keccak256": "0xbd9f2dd131e8f1e4e50b1b116eae917510ab9bf5d4356de37c5daf4cffdfa049",
        "urls": [
          "bzz-raw://8ac3530b317083464271b100de1976ed9179b9e7d5a4fc3d992c61c80676a676",
          "dweb:/ipfs/QmUq1AVzymvp7Y8H1eypGEGU4icjzn5vDSvKMNpXnoaeMT"
        ],
        "license": "MIT"
      },
      "contracts/extension/interface/IPermissions.sol": {
        "keccak256": "0xc0cd1f87bac474a06f85e2b341b9b57662aee957fc24180d42c872481c2f2ae3",
        "urls": [
          "bzz-raw://7dec3eed451d63867531d693f0be3279fa2c9aef3130f0826c3520c06820fa5d",
          "dweb:/ipfs/QmTYANrcPdd9SCe99DWsKJ19evNRQKQGZeoS1Keew4M2cS"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IRulesEngine.sol": {
        "keccak256": "0x8fe3dd345130a94008bdb46fb13a40eb6e2df9cf8261893103f18f548d8d511d",
        "urls": [
          "bzz-raw://869bef4d59679ff81e361e97ef4973e7c9b1676aa52c5a332d292360a2f355ff",
          "dweb:/ipfs/QmeuGoVkJ9EynTsaXM3XkB7ME6BFqNDvynDuLAsfKjiTTv"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/upgradeable/Permissions.sol": {
        "keccak256": "0x1ced1057ad0c07677db95c9ea291a8748c5cf14f1cce39423d28fab4413fb7fd",
        "urls": [
          "bzz-raw://aeae206f911e13618737544b287d077f870d60c8d40f599aad20c5ffa5730c6e",
          "dweb:/ipfs/QmQ3yy9o7iWAfLrpEDMMB6uA6cw9HJxKCPGjxaEVG4AQrs"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/upgradeable/RulesEngine.sol": {
        "keccak256": "0xb0edc081d5fa0dc3c5a4bb06ace1333467be8ddfbfbdf54d420db7caf513b88f",
        "urls": [
          "bzz-raw://e8042f7e255417687d9e7faad700f14cfe47c2ac86c51117e7e4059cc6c4a08a",
          "dweb:/ipfs/QmTFLefq8pw2n1Fk46Xf6TjhqWAnSAMxoT13BkjyDXTZL2"
        ],
        "license": "Apache-2.0"
      },
      "contracts/external-deps/openzeppelin/utils/structs/EnumerableSet.sol": {
        "keccak256": "0x5050943b32b6a8f282573d166b2e9d87ab7eb4dbba4ab6acf36ecb54fe6995e4",
        "urls": [
          "bzz-raw://d4831d777a29ebdf9f2caecd70e74b97bff1b70e53622fd0a02aed01e21c8271",
          "dweb:/ipfs/QmUqurVVnCc7XkMxb2k23TVQUtuhHZduJ3hTZarTJrqU24"
        ],
        "license": "MIT"
      },
      "contracts/lib/TWStrings.sol": {
        "keccak256": "0xef7e9954d888f99baffc10db1d9bf6a2beb66c842d81dea90352ddded22cbbf8",
        "urls": [
          "bzz-raw://832415134684f5413f9d0f3f5536aa30848690cfe54769f7730a3807438f3bf9",
          "dweb:/ipfs/QmduTiUdtsnyJVMXpdomohEWDVg46aZhnS9uTURu4x1NYt"
        ],
        "license": "Apache 2.0"
      },
      "contracts/prebuilts/evolving-nfts/extension/RulesEngineExtension.sol": {
        "keccak256": "0x88e28def9b9a1a6b16140d04cf7bdb932d7eb5354dc8ea08b28e409a50ab046a",
        "urls": [
          "bzz-raw://1fe96be126f804d10f49260ccddcfdc76e28838b61a787a1ba4f9eac996531ef",
          "dweb:/ipfs/QmasqZC655A2Le178z4PcdmFMG6HWAG8zxPjQdfkvbRjjX"
        ],
        "license": "Apache-2.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/prebuilts/evolving-nfts/extension/RulesEngineExtension.sol",
    "id": 75177,
    "exportedSymbols": {
      "PermissionsStorage": [
        40867
      ],
      "RulesEngine": [
        43072
      ],
      "RulesEngineExtension": [
        75176
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:1063:330",
    "nodes": [
      {
        "id": 75112,
        "nodeType": "PragmaDirective",
        "src": "39:24:330",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".11"
        ]
      },
      {
        "id": 75114,
        "nodeType": "ImportDirective",
        "src": "87:84:330",
        "nodes": [],
        "absolutePath": "contracts/extension/upgradeable/Permissions.sol",
        "file": "../../../extension/upgradeable/Permissions.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 75177,
        "sourceUnit": 41254,
        "symbolAliases": [
          {
            "foreign": {
              "id": 75113,
              "name": "PermissionsStorage",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 40867,
              "src": "96:18:330",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_PermissionsStorage_$40867_$",
                "typeString": "type(library PermissionsStorage)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 75116,
        "nodeType": "ImportDirective",
        "src": "172:77:330",
        "nodes": [],
        "absolutePath": "contracts/extension/upgradeable/RulesEngine.sol",
        "file": "../../../extension/upgradeable/RulesEngine.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 75177,
        "sourceUnit": 43073,
        "symbolAliases": [
          {
            "foreign": {
              "id": 75115,
              "name": "RulesEngine",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 43072,
              "src": "181:11:330",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_RulesEngine_$43072_$",
                "typeString": "type(contract RulesEngine)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 75176,
        "nodeType": "ContractDefinition",
        "src": "251:850:330",
        "nodes": [
          {
            "id": 75134,
            "nodeType": "FunctionDefinition",
            "src": "400:140:330",
            "nodes": [],
            "body": {
              "id": 75133,
              "nodeType": "Block",
              "src": "470:70:330",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "4d494e5445525f524f4c45",
                            "id": 75127,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "506:13:330",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                              "typeString": "literal_string \"MINTER_ROLE\""
                            },
                            "value": "MINTER_ROLE"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                              "typeString": "literal_string \"MINTER_ROLE\""
                            }
                          ],
                          "id": 75126,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "496:9:330",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 75128,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "496:24:330",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 75129,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "522:3:330",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 75130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "522:10:330",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 75125,
                      "name": "_hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75175,
                      "src": "487:8:330",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 75131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "487:46:330",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 75124,
                  "id": 75132,
                  "nodeType": "Return",
                  "src": "480:53:330"
                }
              ]
            },
            "baseFunctions": [
              43066
            ],
            "documentation": {
              "id": 75119,
              "nodeType": "StructuredDocumentation",
              "src": "302:93:330",
              "text": "@dev Returns whether the rules of the contract can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetRules",
            "nameLocation": "409:12:330",
            "overrides": {
              "id": 75121,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "446:8:330"
            },
            "parameters": {
              "id": 75120,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "421:2:330"
            },
            "returnParameters": {
              "id": 75124,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75123,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 75134,
                  "src": "464:4:330",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 75122,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "464:4:330",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "463:6:330"
            },
            "scope": 75176,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 75148,
            "nodeType": "FunctionDefinition",
            "src": "662:161:330",
            "nodes": [],
            "body": {
              "id": 75147,
              "nodeType": "Block",
              "src": "743:80:330",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "30783030",
                        "id": 75142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "799:4:330",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0x00"
                      },
                      {
                        "expression": {
                          "id": 75143,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "805:3:330",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 75144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "805:10:330",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 75141,
                      "name": "_hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75175,
                      "src": "790:8:330",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 75145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "790:26:330",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 75140,
                  "id": 75146,
                  "nodeType": "Return",
                  "src": "783:33:330"
                }
              ]
            },
            "baseFunctions": [
              43071
            ],
            "documentation": {
              "id": 75135,
              "nodeType": "StructuredDocumentation",
              "src": "546:111:330",
              "text": "@dev Returns whether the rules engine used by the contract can be overriden in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canOverrideRulesEngine",
            "nameLocation": "671:23:330",
            "overrides": {
              "id": 75137,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "719:8:330"
            },
            "parameters": {
              "id": 75136,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "694:2:330"
            },
            "returnParameters": {
              "id": 75140,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75139,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 75148,
                  "src": "737:4:330",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 75138,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "737:4:330",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "736:6:330"
            },
            "scope": 75176,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 75175,
            "nodeType": "FunctionDefinition",
            "src": "891:208:330",
            "nodes": [],
            "body": {
              "id": 75174,
              "nodeType": "Block",
              "src": "971:128:330",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    75162
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 75162,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "1013:4:330",
                      "nodeType": "VariableDeclaration",
                      "scope": 75174,
                      "src": "981:36:330",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$40854_storage_ptr",
                        "typeString": "struct PermissionsStorage.Data"
                      },
                      "typeName": {
                        "id": 75161,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 75160,
                          "name": "PermissionsStorage.Data",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 40854,
                          "src": "981:23:330"
                        },
                        "referencedDeclaration": 40854,
                        "src": "981:23:330",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$40854_storage_ptr",
                          "typeString": "struct PermissionsStorage.Data"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 75166,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 75163,
                        "name": "PermissionsStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40867,
                        "src": "1020:18:330",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_PermissionsStorage_$40867_$",
                          "typeString": "type(library PermissionsStorage)"
                        }
                      },
                      "id": 75164,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "data",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40866,
                      "src": "1020:23:330",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Data_$40854_storage_ptr_$",
                        "typeString": "function () pure returns (struct PermissionsStorage.Data storage pointer)"
                      }
                    },
                    "id": 75165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1020:25:330",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Data_$40854_storage_ptr",
                      "typeString": "struct PermissionsStorage.Data storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "981:64:330"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "expression": {
                          "id": 75167,
                          "name": "data",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 75162,
                          "src": "1062:4:330",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Data_$40854_storage_ptr",
                            "typeString": "struct PermissionsStorage.Data storage pointer"
                          }
                        },
                        "id": 75168,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "_hasRole",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 40848,
                        "src": "1062:13:330",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_bool_$_$",
                          "typeString": "mapping(bytes32 => mapping(address => bool))"
                        }
                      },
                      "id": 75170,
                      "indexExpression": {
                        "id": 75169,
                        "name": "_role",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75151,
                        "src": "1076:5:330",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1062:20:330",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 75172,
                    "indexExpression": {
                      "id": 75171,
                      "name": "_account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75153,
                      "src": "1083:8:330",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1062:30:330",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 75157,
                  "id": 75173,
                  "nodeType": "Return",
                  "src": "1055:37:330"
                }
              ]
            },
            "documentation": {
              "id": 75149,
              "nodeType": "StructuredDocumentation",
              "src": "829:57:330",
              "text": "@dev Checks whether an account has a particular role."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_hasRole",
            "nameLocation": "900:8:330",
            "parameters": {
              "id": 75154,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75151,
                  "mutability": "mutable",
                  "name": "_role",
                  "nameLocation": "917:5:330",
                  "nodeType": "VariableDeclaration",
                  "scope": 75175,
                  "src": "909:13:330",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 75150,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "909:7:330",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75153,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "932:8:330",
                  "nodeType": "VariableDeclaration",
                  "scope": 75175,
                  "src": "924:16:330",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 75152,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "924:7:330",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "908:33:330"
            },
            "returnParameters": {
              "id": 75157,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75156,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 75175,
                  "src": "965:4:330",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 75155,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "965:4:330",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "964:6:330"
            },
            "scope": 75176,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 75117,
              "name": "RulesEngine",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 43072,
              "src": "284:11:330"
            },
            "id": 75118,
            "nodeType": "InheritanceSpecifier",
            "src": "284:11:330"
          }
        ],
        "canonicalName": "RulesEngineExtension",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          75176,
          43072,
          33593
        ],
        "name": "RulesEngineExtension",
        "nameLocation": "260:20:330",
        "scope": 75177,
        "usedErrors": []
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 330
}