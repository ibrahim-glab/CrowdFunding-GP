{
  "abi": [
    {
      "inputs": [],
      "name": "ApprovalCallerNotOwnerNorApproved",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ApprovalQueryForNonexistentToken",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BalanceQueryForZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidQueryRange",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MintERC2309QuantityExceedsLimit",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MintToZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MintZeroQuantity",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OwnerQueryForNonexistentToken",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OwnershipNotInitializedForExtraData",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferCallerNotOwnerNorApproved",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferFromIncorrectOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferToNonERC721ReceiverImplementer",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferToZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "URIQueryForNonexistentToken",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "startTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxClaimableSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "supplyClaimed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "merkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "metadata",
              "type": "string"
            }
          ],
          "indexed": false,
          "internalType": "struct IClaimCondition.ClaimCondition[]",
          "name": "claimConditions",
          "type": "tuple[]"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "resetEligibility",
          "type": "bool"
        }
      ],
      "name": "ClaimConditionsUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "fromTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "toTokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "ConsecutiveTransfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "prevURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "newURI",
          "type": "string"
        }
      ],
      "name": "ContractURIUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newRoyaltyRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newRoyaltyBps",
          "type": "uint256"
        }
      ],
      "name": "DefaultRoyalty",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "prevOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnerUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "PrimarySaleRecipientUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "royaltyRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "royaltyBps",
          "type": "uint256"
        }
      ],
      "name": "RoyaltyForToken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        }
      ],
      "name": "SharedMetadataDeleted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "imageURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "animationURI",
          "type": "string"
        }
      ],
      "name": "SharedMetadataUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "claimConditionIndex",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "claimer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "startTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "quantityClaimed",
          "type": "uint256"
        }
      ],
      "name": "TokensClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_quantity",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_currency",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_pricePerToken",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            }
          ],
          "internalType": "struct IDrop.AllowlistProof",
          "name": "_allowlistProof",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "claim",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimCondition",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_id",
          "type": "bytes32"
        }
      ],
      "name": "deleteSharedMetadata",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "explicitOwnershipOf",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "uint64",
              "name": "startTimestamp",
              "type": "uint64"
            },
            {
              "internalType": "bool",
              "name": "burned",
              "type": "bool"
            },
            {
              "internalType": "uint24",
              "name": "extraData",
              "type": "uint24"
            }
          ],
          "internalType": "struct IERC721AUpgradeable.TokenOwnership",
          "name": "ownership",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getActiveClaimConditionId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllSharedMetadata",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "name",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "imageURI",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "animationURI",
                  "type": "string"
                }
              ],
              "internalType": "struct ISharedMetadataBatch.SharedMetadataInfo",
              "name": "metadata",
              "type": "tuple"
            }
          ],
          "internalType": "struct ISharedMetadataBatch.SharedMetadataWithId[]",
          "name": "metadata",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_conditionId",
          "type": "uint256"
        }
      ],
      "name": "getClaimConditionById",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "startTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxClaimableSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "supplyClaimed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "merkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "metadata",
              "type": "string"
            }
          ],
          "internalType": "struct IClaimCondition.ClaimCondition",
          "name": "condition",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDefaultRoyaltyInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getRoyaltyInfoForToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_conditionId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_claimer",
          "type": "address"
        }
      ],
      "name": "getSupplyClaimedByWallet",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "supplyClaimedByWallet",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "forwarder",
          "type": "address"
        }
      ],
      "name": "isTrustedForwarder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextTokenIdToClaim",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextTokenIdToMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "primarySaleRecipient",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "salePrice",
          "type": "uint256"
        }
      ],
      "name": "royaltyInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "royaltyAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "startTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxClaimableSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "supplyClaimed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "merkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "metadata",
              "type": "string"
            }
          ],
          "internalType": "struct IClaimCondition.ClaimCondition[]",
          "name": "_conditions",
          "type": "tuple[]"
        },
        {
          "internalType": "bool",
          "name": "_resetClaimEligibility",
          "type": "bool"
        }
      ],
      "name": "setClaimConditions",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "setContractURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_royaltyRecipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_royaltyBps",
          "type": "uint256"
        }
      ],
      "name": "setDefaultRoyaltyInfo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "setOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_saleRecipient",
          "type": "address"
        }
      ],
      "name": "setPrimarySaleRecipient",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_bps",
          "type": "uint256"
        }
      ],
      "name": "setRoyaltyInfoForToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "imageURI",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "animationURI",
              "type": "string"
            }
          ],
          "internalType": "struct ISharedMetadataBatch.SharedMetadataInfo",
          "name": "metadata",
          "type": "tuple"
        },
        {
          "internalType": "bytes32",
          "name": "_id",
          "type": "bytes32"
        }
      ],
      "name": "setSharedMetadata",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startTokenId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "tokensOfOwner",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "start",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "stop",
          "type": "uint256"
        }
      ],
      "name": "tokensOfOwnerIn",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalMinted",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_conditionId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_claimer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_quantity",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_currency",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_pricePerToken",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            }
          ],
          "internalType": "struct IDrop.AllowlistProof",
          "name": "_allowlistProof",
          "type": "tuple"
        }
      ],
      "name": "verifyClaim",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isOverride",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b50615166806100206000396000f3fe6080604052600436106102075760003560e01c806374bc7db71161011457806374bc7db7146104f55780638462151c1461051557806384bb1e42146105425780638da5cb5b14610555578063938e3d7b1461056a57806395d89b411461058a57806399a2557a1461059f5780639bcf7a15146105bf578063a22cb465146105df578063a2309ff8146105ff578063acd083f81461037e578063ad1eefc514610614578063b24f2d3914610634578063b88d4fde14610649578063c23dc68f1461065c578063c68907de146106c8578063c87b56dd146106dd578063d637ed59146106fd578063e6798baa14610727578063e8a3d4851461073b578063e985e9c514610750578063fc3c2a731461077057600080fd5b806301ffc9a71461020c57806306fdde0314610241578063079fe40e14610263578063081812fc14610285578063095ea7b3146102a557806313af4035146102ba57806318160ddd146102da5780631ebb2422146102fd57806323a2902b1461031d57806323b872dd1461033d5780632a55205a146103505780633b1475a71461037e57806342842e0e1461039357806342966c68146103a65780634cc157df146103c6578063572b6c0514610408578063600dd5ea146104285780636352211e14610448578063696b0c1a146104685780636f4f2837146104885780636f8934f4146104a857806370a08231146104d5575b600080fd5b34801561021857600080fd5b5061022c610227366004613f7f565b610792565b60405190151581526020015b60405180910390f35b34801561024d57600080fd5b506102566107be565b6040516102389190613ff4565b34801561026f57600080fd5b50610278610859565b6040516102389190614007565b34801561029157600080fd5b506102786102a036600461401b565b610872565b6102b86102b3366004614049565b6108b6565b005b3480156102c657600080fd5b506102b86102d5366004614075565b6108c6565b3480156102e657600080fd5b506102ef6108ff565b604051908152602001610238565b34801561030957600080fd5b506102b861031836600461401b565b61091f565b34801561032957600080fd5b5061022c6103383660046140aa565b610a46565b6102b861034b366004614127565b610e45565b34801561035c57600080fd5b5061037061036b366004614168565b610ffb565b60405161023892919061418a565b34801561038a57600080fd5b506102ef611038565b6102b86103a1366004614127565b611047565b3480156103b257600080fd5b506102b86103c136600461401b565b611067565b3480156103d257600080fd5b506103e66103e136600461401b565b611072565b604080516001600160a01b03909316835261ffff909116602083015201610238565b34801561041457600080fd5b5061022c610423366004614075565b6110f5565b34801561043457600080fd5b506102b8610443366004614049565b611113565b34801561045457600080fd5b5061027861046336600461401b565b611141565b34801561047457600080fd5b506102b86104833660046141a3565b61114c565b34801561049457600080fd5b506102b86104a3366004614075565b61117a565b3480156104b457600080fd5b506104c86104c336600461401b565b6111a7565b60405161023891906141e7565b3480156104e157600080fd5b506102ef6104f0366004614075565b61130e565b34801561050157600080fd5b506102b8610510366004614262565b61136d565b34801561052157600080fd5b50610535610530366004614075565b611703565b60405161023891906142e7565b6102b86105503660046143e9565b611732565b34801561056157600080fd5b50610278611862565b34801561057657600080fd5b506102b8610585366004614476565b61186c565b34801561059657600080fd5b50610256611899565b3480156105ab57600080fd5b506105356105ba3660046144aa565b6118b1565b3480156105cb57600080fd5b506102b86105da3660046144df565b6118c8565b3480156105eb57600080fd5b506102b86105fa366004614506565b6118f7565b34801561060b57600080fd5b506102ef611974565b34801561062057600080fd5b506102ef61062f36600461453f565b611986565b34801561064057600080fd5b506103e66119b9565b6102b8610657366004614564565b6119eb565b34801561066857600080fd5b5061067c61067736600461401b565b611a2c565b604051610238919081516001600160a01b031681526020808301516001600160401b03169082015260408083015115159082015260609182015162ffffff169181019190915260800190565b3480156106d457600080fd5b506102ef611a73565b3480156106e957600080fd5b506102566106f836600461401b565b611b32565b34801561070957600080fd5b50610712611d6f565b60408051928352602083019190915201610238565b34801561073357600080fd5b5060016102ef565b34801561074757600080fd5b50610256611d90565b34801561075c57600080fd5b5061022c61076b3660046145cf565b611da5565b34801561077c57600080fd5b50610785611de2565b60405161023891906145fd565b600061079d8261212e565b806107b8575063152a902d60e11b6001600160e01b03198316145b92915050565b60606107c861217c565b60020180546107d6906146d3565b80601f0160208091040260200160405190810160405280929190818152602001828054610802906146d3565b801561084f5780601f106108245761010080835404028352916020019161084f565b820191906000526020600020905b81548152906001019060200180831161083257829003601f168201915b5050505050905090565b60006108636121a0565b546001600160a01b0316919050565b600061087d826121aa565b610891576108916333d1c03960e21b612206565b61089961217c565b60009283526006016020525060409020546001600160a01b031690565b6108c282826001612210565b5050565b6108ce6122c1565b6108f35760405162461bcd60e51b81526004016108ea90614708565b60405180910390fd5b6108fc816122d4565b50565b6000600161090b61217c565b6001015461091761217c565b540303919050565b610927612341565b6109435760405162461bcd60e51b81526004016108ea90614730565b6109558161094f61236f565b90612393565b6109bd5760405162461bcd60e51b815260206004820152603360248201527f5368617265644d6574616461746142617463683a20736861726564206d65746160448201527219185d1848191bd95cc81b9bdd08195e1a5cdd606a1b60648201526084016108ea565b6109c561236f565b6000828152600291909101602052604081208181559060018201816109ea8282613e2a565b6109f8600183016000613e2a565b610a06600283016000613e2a565b610a14600383016000613e2a565b50506040518392507f712288e92794be2ea9abed3c7b1b0c025de9f006b5dd43cc64d15f0a7c3210f59150600090a250565b600080610a5161239f565b6000898152600291820160209081526040918290208251610100810184528154815260018201549281019290925292830154918101919091526003820154606082015260048201546080820152600582015460a082015260068201546001600160a01b031660c082015260078201805491929160e084019190610ad3906146d3565b80601f0160208091040260200160405190810160405280929190818152602001828054610aff906146d3565b8015610b4c5780601f10610b2157610100808354040283529160200191610b4c565b820191906000526020600020905b815481529060010190602001808311610b2f57829003601f168201915b50505091909252505050606081015160a082015160c08301516080840151939450919290919015610c2c57610c28610b84878061477f565b80806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250505060808088015191508d9060208b01359060408c013590610bd9908d0160608e01614075565b6040516001600160601b0319606095861b811660208301526034820194909452605481019290925290921b166074820152608801604051602081830303815290604052805190602001206123a9565b5094505b8415610cb1576020860135610c415782610c47565b85602001355b925060001986604001351415610c5d5781610c63565b85604001355b9150600019866040013514158015610c9457506000610c886080880160608901614075565b6001600160a01b031614155b610c9e5780610cae565b610cae6080870160608801614075565b90505b6000610cbb61239f565b60000160030160008d815260200190815260200160002060008c6001600160a01b03166001600160a01b03168152602001908152602001600020549050816001600160a01b0316896001600160a01b0316141580610d195750828814155b15610d595760405162461bcd60e51b815260206004820152601060248201526f2150726963654f7243757272656e637960801b60448201526064016108ea565b891580610d6e575083610d6c828c6147e5565b115b15610da45760405162461bcd60e51b81526004016108ea906020808252600490820152632151747960e01b604082015260600190565b84602001518a8660400151610db991906147e5565b1115610df45760405162461bcd60e51b815260206004820152600a602482015269214d6178537570706c7960b01b60448201526064016108ea565b8451421015610e365760405162461bcd60e51b815260206004820152600e60248201526d18d85b9d0818db185a5b481e595d60921b60448201526064016108ea565b50505050509695505050505050565b6000610e5082612477565b6001600160a01b039485169490915081168414610e7657610e7662a1148160e81b612206565b600080610e8284612535565b91509150610ea78187610e923390565b6001600160a01b039081169116811491141790565b610ec957610eb58633611da5565b610ec957610ec9632ce44b5f60e11b612206565b610ed6868686600161255d565b8015610ee157600082555b610ee961217c565b6001600160a01b0387166000908152600591909101602052604090208054600019019055610f1561217c565b6001600160a01b03861660009081526005919091016020526040902080546001019055610f4685600160e11b612610565b610f4e61217c565b60008681526004919091016020526040902055600160e11b8316610fbd5760018401610f7861217c565b60008281526004919091016020526040902054610fbb57610f9761217c565b548114610fbb5783610fa761217c565b600083815260049190910160205260409020555b505b6001600160a01b038516848188600080516020615111833981519152600080a480610ff257610ff2633a954ecd60e21b612206565b50505050505050565b60008060008061100a86611072565b90945084925061ffff16905061271061102382876147fd565b61102d9190614832565b925050509250929050565b6000611042612625565b905090565b611062838383604051806020016040528060008152506119eb565b505050565b6108fc816001612635565b600080600061107f61279a565b600085815260019182016020908152604091829020825180840190935280546001600160a01b0316808452930154908201529150156110c457805160208201516110eb565b6110cc61279a565b546001600160a01b03166110de61279a565b54600160a01b900461ffff165b9250925050915091565b6001600160a01b031660009081526033602052604090205460ff1690565b61111b6122c1565b6111375760405162461bcd60e51b81526004016108ea90614708565b6108c282826127be565b60006107b882612477565b611154612341565b6111705760405162461bcd60e51b81526004016108ea90614730565b6108c28282612872565b6111826122c1565b61119e5760405162461bcd60e51b81526004016108ea90614708565b6108fc81612a0a565b6111fb60405180610100016040528060008152602001600081526020016000815260200160008152602001600080191681526020016000815260200160006001600160a01b03168152602001606081525090565b61120361239f565b6000838152600291820160209081526040918290208251610100810184528154815260018201549281019290925292830154918101919091526003820154606082015260048201546080820152600582015460a082015260068201546001600160a01b031660c082015260078201805491929160e084019190611285906146d3565b80601f01602080910402602001604051908101604052809291908181526020018280546112b1906146d3565b80156112fe5780601f106112d3576101008083540402835291602001916112fe565b820191906000526020600020905b8154815290600101906020018083116112e157829003601f168201915b5050505050815250509050919050565b60006001600160a01b03821661132e5761132e6323d3ad8160e21b612206565b6001600160401b0361133e61217c565b6005016000846001600160a01b03166001600160a01b0316815260200190815260200160002054169050919050565b6113756122c1565b6113915760405162461bcd60e51b81526004016108ea90614708565b600061139b61239f565b54905060006113a861239f565b6001015490508183156113c2576113bf82846147e5565b90505b846113cb61239f565b60010155806113d861239f565b556000805b8681101561159e5780158061141557508787828181106113ff576113ff614846565b9050602002810190611411919061485c565b3582105b6114465760405162461bcd60e51b815260206004820152600260248201526114d560f21b60448201526064016108ea565b600061145061239f565b600201600061145f84876147e5565b815260200190815260200160002060020154905088888381811061148557611485614846565b9050602002810190611497919061485c565b602001358111156114df5760405162461bcd60e51b81526020600482015260126024820152711b585e081cdd5c1c1b1e4818db185a5b595960721b60448201526064016108ea565b8888838181106114f1576114f1614846565b9050602002810190611503919061485c565b61150b61239f565b600201600061151a85886147e5565b8152602001908152602001600020818161153491906149c7565b9050508061154061239f565b600201600061154f85886147e5565b815260208101919091526040016000206002015588888381811061157557611575614846565b9050602002810190611587919061485c565b35925081905061159681614a45565b9150506113dd565b50841561162757835b82811015611621576115b761239f565b6000828152600291820160205260408120818155600181018290559182018190556003820181905560048201819055600582018190556006820180546001600160a01b031916905561160c6007830182613e2a565b5050808061161990614a45565b9150506115a7565b506116bf565b858311156116bf57855b838110156116bd5761164161239f565b600201600061165083866147e5565b81526020810191909152604001600090812081815560018101829055600281018290556003810182905560048101829055600581018290556006810180546001600160a01b0319169055906116a86007830182613e2a565b505080806116b590614a45565b915050611631565b505b7fbf4016fceeaaa4ac5cf4be865b559ff85825ab4ca7aa7b661d16e2f544c030988787876040516116f293929190614ace565b60405180910390a150505050505050565b606060016000611711612625565b9050606081831461172a57611727858484612aa7565b90505b949350505050565b600061173c611a73565b90506117538161174a612bb7565b88888888610a46565b508561175d61239f565b600083815260029182016020526040812090910180549091906117819084906147e5565b9091555086905061179061239f565b6000838152600390910160205260408120906117aa612bb7565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008282546117d991906147e5565b909155506117ec90506000878787612bc1565b60006117f88888612caa565b9050876001600160a01b031661180c612bb7565b6001600160a01b0316837ffa76a4010d9533e3e964f2930a65fb6042a12fa6ff5b08281837a10b0be7321e848b604051611850929190918252602082015260400190565b60405180910390a45050505050505050565b6000610863612cc0565b6118746122c1565b6118905760405162461bcd60e51b81526004016108ea90614708565b6108fc81612cca565b60606118a361217c565b60030180546107d6906146d3565b60606118be848484612aa7565b90505b9392505050565b6118d06122c1565b6118ec5760405162461bcd60e51b81526004016108ea90614708565b611062838383612db5565b8061190061217c565b336000818152600792909201602090815260408084206001600160a01b03881680865290835293819020805460ff19169515159590951790945592518415158152919290917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b60006001611980612625565b03905090565b600061199061239f565b6000938452600301602090815260408085206001600160a01b0390941685529290525090205490565b6000806119c461279a565b546001600160a01b03166119d661279a565b549093600160a01b90910461ffff1692509050565b6119f6848484610e45565b6001600160a01b0383163b15611a2657611a1284848484612e72565b611a2657611a266368d2bf6b60e11b612206565b50505050565b611a34613e64565b60018210611a6e57611a44612625565b821015611a6e575b611a5582612f51565b611a655760001990910190611a4c565b6107b882612f71565b919050565b600080611a7e61239f565b60010154611a8a61239f565b54611a9591906147e5565b90505b611aa061239f565b54811115611afb57611ab061239f565b6002016000611ac0600184614bb6565b8152602001908152602001600020600001544210611ae957611ae3600182614bb6565b91505090565b80611af381614bcd565b915050611a98565b5060405162461bcd60e51b815260206004820152600b60248201526a10a1a7a72224aa24a7a71760a91b60448201526064016108ea565b6060611b3d826121aa565b611b6f5760405162461bcd60e51b815260206004820152600360248201526208525160ea1b60448201526064016108ea565b6000611b7a83611141565b9050600080306001600160a01b031663a7145eb46040518163ffffffff1660e01b8152600401602060405180830381865afa158015611bbd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611be19190614be4565b90506001600160a01b03811615611c6657604051630d47875d60e41b81526001600160a01b0382169063d47875d090611c1e908690600401614007565b602060405180830381865afa158015611c3b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c5f9190614c01565b9150611ccd565b604051630d47875d60e41b8152309063d47875d090611c89908690600401614007565b602060405180830381865afa158015611ca6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cca9190614c01565b91505b6000611cdf611cda61236f565b612f9c565b9050600080805b8351811015611d58576000848281518110611d0357611d03614846565b602002602001015160001c9050868111158015611d205750828110155b15611d4557848281518110611d3757611d37614846565b602002602001015193508092505b50611d516001826147e5565b9050611ce6565b50611d638289612fa7565b98975050505050505050565b600080611d7a61239f565b54611d8361239f565b6001015490939092509050565b6060611d9a61323c565b80546107d6906146d3565b6000611daf61217c565b6001600160a01b039384166000908152600791909101602090815260408083209490951682529290925250205460ff1690565b60606000611df1611cda61236f565b905080516001600160401b03811115611e0c57611e0c61431f565b604051908082528060200260200182016040528015611e4557816020015b611e32613e8b565b815260200190600190039081611e2a5790505b50915060005b815181101561212957611e5c61236f565b6002016000838381518110611e7357611e73614846565b602002602001015181526020019081526020016000206040518060400160405290816000820154815260200160018201604051806080016040529081600082018054611ebe906146d3565b80601f0160208091040260200160405190810160405280929190818152602001828054611eea906146d3565b8015611f375780601f10611f0c57610100808354040283529160200191611f37565b820191906000526020600020905b815481529060010190602001808311611f1a57829003601f168201915b50505050508152602001600182018054611f50906146d3565b80601f0160208091040260200160405190810160405280929190818152602001828054611f7c906146d3565b8015611fc95780601f10611f9e57610100808354040283529160200191611fc9565b820191906000526020600020905b815481529060010190602001808311611fac57829003601f168201915b50505050508152602001600282018054611fe2906146d3565b80601f016020809104026020016040519081016040528092919081815260200182805461200e906146d3565b801561205b5780601f106120305761010080835404028352916020019161205b565b820191906000526020600020905b81548152906001019060200180831161203e57829003601f168201915b50505050508152602001600382018054612074906146d3565b80601f01602080910402602001604051908101604052809291908181526020018280546120a0906146d3565b80156120ed5780601f106120c2576101008083540402835291602001916120ed565b820191906000526020600020905b8154815290600101906020018083116120d057829003601f168201915b5050505050815250508152505083828151811061210c5761210c614846565b60209081029190910101526121226001826147e5565b9050611e4b565b505090565b60006301ffc9a760e01b6001600160e01b03198316148061215f57506380ac58cd60e01b6001600160e01b03198316145b806107b85750506001600160e01b031916635b5e139f60e01b1490565b7f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c4090565b6000611042613260565b600081600111611a6e576121bc61217c565b54821015611a6e5760005b6121cf61217c565b600084815260049190910160205260409020549050806121f9576121f283614bcd565b92506121c7565b600160e01b161592915050565b8060005260046000fd5b600061221b83611141565b90508180156122335750336001600160a01b03821614155b15612256576122428133611da5565b612256576122566367d9dca160e11b612206565b8361225f61217c565b6000858152600691909101602052604080822080546001600160a01b0319166001600160a01b0394851617905551859287811692908516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259190a450505050565b6000611042816122cf6132c2565b6132cc565b60006122de612cc0565b546001600160a01b03169050816122f3612cc0565b80546001600160a01b0319166001600160a01b03928316179055604051838216918316907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b60006110427f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a66122cf6132c2565b7ff85ae2b98503142dac20c6561e88360cff7f1cb5634b6ad090b7f724e2f67a0090565b60006118c18383613316565b6000611042613409565b6000808281805b875181101561246b576123c46002836147fd565b915060008882815181106123da576123da614846565b6020026020010151905080841161241c576040805160208101869052908101829052606001604051602081830303815290604052805190602001209350612458565b604080516020810183905290810185905260600160405160208183030381529060405280519060200120935060018361245591906147e5565b92505b508061246381614a45565b9150506123b0565b50941495939450505050565b6000816001116125255761248961217c565b60008381526004919091016020526040902054905080612515576124ab61217c565b5482106124c2576124c2636f96cda160e11b612206565b6124ca61217c565b60001990920160008181526004939093016020526040909220549050806124f0576124c2565b600160e01b811661250057919050565b612510636f96cda160e11b612206565b6124c2565b600160e01b811661252557919050565b611a6e636f96cda160e11b612206565b600080600061254261217c565b60009485526006016020525050604090912080549092909150565b6125766000805160206150b183398151915260006132cc565b15801561258b57506001600160a01b03841615155b801561259f57506001600160a01b03831615155b15611a26576125bc6000805160206150b1833981519152856132cc565b1580156125de57506125dc6000805160206150b1833981519152846132cc565b155b15611a265760405162461bcd60e51b8152602060048201526002602482015261085560f21b60448201526064016108ea565b4260a01b176001600160a01b03919091161790565b600061262f61217c565b54919050565b600061264083612477565b90508060008061264f86612535565b91509150841561268657612664818433610e92565b612686576126728333611da5565b61268657612686632ce44b5f60e11b612206565b61269483600088600161255d565b801561269f57600082555b6001600160801b036126af61217c565b6001600160a01b03851660009081526005919091016020526040902080549190910190556126e183600360e01b612610565b6126e961217c565b60008881526004919091016020526040902055600160e11b8416612758576001860161271361217c565b600082815260049190910160205260409020546127565761273261217c565b548114612756578461274261217c565b600083815260049190910160205260409020555b505b60405186906000906001600160a01b03861690600080516020615111833981519152908390a461278661217c565b600190810180549091019055505050505050565b7f8116a128b135962baae86382f90f26a5e28c4bb803b8888f92fd98e3bbbc6d0090565b6127108111156127e05760405162461bcd60e51b81526004016108ea90614c1a565b816127e961279a565b80546001600160a01b0319166001600160a01b03929092169190911790558061281061279a565b805461ffff92909216600160a01b0261ffff60a01b199092169190911790556040518181526001600160a01b038316907f90d7ec04bcb8978719414f82e52e4cb651db41d0e6f8cea6118c2191e6183adb906020015b60405180910390a25050565b6128848161287e61236f565b9061343a565b6128ec5760405162461bcd60e51b815260206004820152603360248201527f5368617265644d6574616461746142617463683a20736861726564206d6574616044820152726461746120616c72656164792065786973747360681b60648201526084016108ea565b60405180604001604052808281526020018361290790614c43565b905261291161236f565b600083815260029190910160209081526040909120825181558282015180518051929391926001850192612949928492910190613ed0565b5060208281015180516129629260018501920190613ed0565b506040820151805161297e916002840191602090910190613ed0565b506060820151805161299a916003840191602090910190613ed0565b508493507f673b054ed092bdba91ed697666383bb8698a3524eb1312b6c0cd73b0ef509f8b92506129cf91508590508061487c565b6129dc602087018761487c565b6129e9604089018961487c565b6129f660608b018b61487c565b604051612866989796959493929190614cf9565b6001600160a01b038116612a545760405162461bcd60e51b8152602060048201526011602482015270125b9d985b1a59081c9958da5c1a595b9d607a1b60448201526064016108ea565b80612a5d6121a0565b80546001600160a01b0319166001600160a01b03928316179055604051908216907f299d17e95023f496e0ffc4909cff1a61f74bb5eb18de6f900f4155bfa1b3b33390600090a250565b6060818310612ac057612ac0631960ccad60e11b612206565b6001831015612ace57600192505b6000612ad8612625565b9050808310612ae5578092505b60606000612af28761130e565b85871090810291508115612ba3578187870311612b0f5786860391505b60405192506001820160051b83016040526000612b2b88611a2c565b905060008160400151612b3c575080515b60005b612b488a612f71565b9250604083015160008114612b605760009250612b85565b835115612b6c57835192505b8b831860601b612b85576001820191508a8260051b8801525b5060018a019950888a1480612b9957508481145b15612b3f57855250505b50909695505050505050565b505050505050565b60006110426132c2565b80612c02573415612bfd5760405162461bcd60e51b81526020600482015260066024820152652156616c756560d01b60448201526064016108ea565b611a26565b6000612c0e82856147fd565b905060006001600160a01b03841673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1415612c405750348114612c44565b5034155b80612c765760405162461bcd60e51b815260206004820152600260248201526110ab60f11b60448201526064016108ea565b60006001600160a01b03871615612c8d5786612c95565b612c95610859565b9050610ff285612ca36132c2565b8386613446565b6000612cb4612625565b90506107b8838361348b565b60006110426134a5565b6000612cd461323c565b8054612cdf906146d3565b80601f0160208091040260200160405190810160405280929190818152602001828054612d0b906146d3565b8015612d585780601f10612d2d57610100808354040283529160200191612d58565b820191906000526020600020905b815481529060010190602001808311612d3b57829003601f168201915b5050505050905081612d6861323c565b8151612d779260200190613ed0565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a168183604051612da9929190614d59565b60405180910390a15050565b612710811115612dd75760405162461bcd60e51b81526004016108ea90614c1a565b6040518060400160405280836001600160a01b0316815260200182815250612dfd61279a565b600085815260019182016020908152604091829020845181546001600160a01b0319166001600160a01b0391821617825594820151930192909255518381529184169185917f7365cf4122f072a3365c20d54eff9b38d73c096c28e1892ec8f5b0e403a0f12d910160405180910390a3505050565b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a0290612ea7903390899088908890600401614d87565b6020604051808303816000875af1925050508015612ee2575060408051601f3d908101601f19168201909252612edf91810190614dc4565b60015b612f34573d808015612f10576040519150601f19603f3d011682016040523d82523d6000602084013e612f15565b606091505b508051612f2c57612f2c6368d2bf6b60e11b612206565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050949350505050565b6000612f5b61217c565b6000928352600401602052506040902054151590565b612f79613e64565b6107b8612f8461217c565b600084815260049190910160205260409020546134d6565b60606107b882613519565b60606000612fb361236f565b6002016000858152602001908152602001600020600101604051806080016040529081600082018054612fe5906146d3565b80601f0160208091040260200160405190810160405280929190818152602001828054613011906146d3565b801561305e5780601f106130335761010080835404028352916020019161305e565b820191906000526020600020905b81548152906001019060200180831161304157829003601f168201915b50505050508152602001600182018054613077906146d3565b80601f01602080910402602001604051908101604052809291908181526020018280546130a3906146d3565b80156130f05780601f106130c5576101008083540402835291602001916130f0565b820191906000526020600020905b8154815290600101906020018083116130d357829003601f168201915b50505050508152602001600282018054613109906146d3565b80601f0160208091040260200160405190810160405280929190818152602001828054613135906146d3565b80156131825780601f1061315757610100808354040283529160200191613182565b820191906000526020600020905b81548152906001019060200180831161316557829003601f168201915b5050505050815260200160038201805461319b906146d3565b80601f01602080910402602001604051908101604052809291908181526020018280546131c7906146d3565b80156132145780601f106131e957610100808354040283529160200191613214565b820191906000526020600020905b8154815290600101906020018083116131f757829003601f168201915b505050505081525050905061172a816000015182602001518360400151846060015187613575565b7f4bc804ba64359c0e35e5ed5d90ee596ecaa49a3a930ddcb1470ea0dd625da90090565b60008060ff1961329160017f52513acdf273074fe51c68a52514ea5eabc2d36eb91435d5799fc3f9adc30530614bb6565b6040516020016132a391815260200190565b60408051601f1981840301815291905280516020909101201692915050565b600061104261359e565b60009182527f0a7b0f5c59907924802379ebe98cdc23e2ee7820f63d30126e10b3752010e500602090815260408084206001600160a01b0393909316845291905290205460ff1690565b600081815260018301602052604081205480156133ff57600061333a600183614bb6565b855490915060009061334e90600190614bb6565b90508181146133b357600086600001828154811061336e5761336e614846565b906000526020600020015490508087600001848154811061339157613391614846565b6000918252602080832090910192909255918252600188019052604090208390555b85548690806133c4576133c4614de1565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506107b8565b60009150506107b8565b60008060ff1961329160017fbc63558797adc09ce5b77f3ca89acfccabdd075e03de61144467402677b956b2614bb6565b60006118c183836135c0565b8061345057611a26565b6001600160a01b03841673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee141561347f57612bfd828261360f565b611a26848484846136b1565b6108c282826040518060200160405280600081525061370a565b60008060ff1961329160017ffa02b2ade2dba28b48a24f204a68d8c0005ca2ccfd58c765cdddd023319a9b3f614bb6565b6134de613e64565b6001600160a01b03821681526001600160401b0360a083901c166020820152600160e01b82161515604082015260e89190911c606082015290565b60608160000180548060200260200160405190810160405280929190818152602001828054801561356957602002820191906000526020600020905b815481526020019060010190808311613555575b50505050509050919050565b606060006135838585613783565b9050600061359388888487613810565b9050611d6381613856565b60006135a9336110f5565b156135bb575060131936013560601c90565b503390565b6000818152600183016020526040812054613607575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556107b8565b5060006107b8565b6000826001600160a01b03168260405160006040518083038185875af1925050503d806000811461365c576040519150601f19603f3d011682016040523d82523d6000602084013e613661565b606091505b50509050806110625760405162461bcd60e51b815260206004820152601c60248201527b1b985d1a5d99481d1bdad95b881d1c985b9cd9995c8819985a5b195960221b60448201526064016108ea565b816001600160a01b0316836001600160a01b031614156136d057611a26565b6001600160a01b0383163014156136f557612bfd6001600160a01b0385168383613887565b611a266001600160a01b0385168484846138dd565b6137148383613915565b6001600160a01b0383163b1561106257600061372e61217c565b5490508281035b6137486000868380600101945086612e72565b61375c5761375c6368d2bf6b60e11b612206565b818110613735578161376c61217c565b541461377c5761377c6000612206565b5050505050565b8151815160609115801591151590829061379a5750805b156137ca5784846040516020016137b2929190614e13565b604051602081830303815290604052925050506107b8565b81156137e157846040516020016137b29190614e8a565b80156137f857836040516020016137b29190614eca565b50506040805160208101909152600081529392505050565b60608461381c836139f4565b8585613827866139f4565b8960405160200161383d96959493929190614f12565b6040516020818303038152906040529050949350505050565b606061386182613af1565b6040516020016138719190615028565b6040516020818303038152906040529050919050565b6110628363a9059cbb60e01b84846040516024016138a692919061418a565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152613c44565b6040516001600160a01b0380851660248301528316604482015260648101829052611a269085906323b872dd60e01b906084016138a6565b600061391f61217c565b549050816139375761393763b562e8dd60e01b612206565b613944600084838561255d565b613954836001841460e11b612610565b61395c61217c565b600083815260049190910160205260409020556001600160401b01820261398161217c565b6001600160a01b038516600081815260059290920160205260409091208054909201909155806139ba576139ba622e076360e81b612206565b818301825b80836000600080516020615111833981519152600080a4600101808214156139bf57816139ea61217c565b5550611062915050565b606081613a185750506040805180820190915260018152600360fc1b602082015290565b8160005b8115613a425780613a2c81614a45565b9150613a3b9050600a83614832565b9150613a1c565b6000816001600160401b03811115613a5c57613a5c61431f565b6040519080825280601f01601f191660200182016040528015613a86576020820181803683370190505b5090505b841561172a57613a9b600183614bb6565b9150613aa8600a8661506d565b613ab39060306147e5565b60f81b818381518110613ac857613ac8614846565b60200101906001600160f81b031916908160001a905350613aea600a86614832565b9450613a8a565b6060815160001415613b1157505060408051602081019091526000815290565b60006040518060600160405280604081526020016150d16040913990506000600384516002613b4091906147e5565b613b4a9190614832565b613b559060046147fd565b6001600160401b03811115613b6c57613b6c61431f565b6040519080825280601f01601f191660200182016040528015613b96576020820181803683370190505b509050600182016020820185865187015b80821015613c02576003820191508151603f8160121c168501518453600184019350603f81600c1c168501518453600184019350603f8160061c168501518453600184019350603f8116850151845350600183019250613ba7565b5050600386510660018114613c1e5760028114613c3157613c39565b603d6001830353603d6002830353613c39565b603d60018303535b509195945050505050565b6000613c99826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316613d169092919063ffffffff16565b8051909150156110625780806020019051810190613cb79190615081565b6110625760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016108ea565b60606118be8484600085856001600160a01b0385163b613d785760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016108ea565b600080866001600160a01b03168587604051613d94919061509e565b60006040518083038185875af1925050503d8060008114613dd1576040519150601f19603f3d011682016040523d82523d6000602084013e613dd6565b606091505b5091509150613de6828286613df1565b979650505050505050565b60608315613e005750816118c1565b825115613e105782518084602001fd5b8160405162461bcd60e51b81526004016108ea9190613ff4565b508054613e36906146d3565b6000825580601f10613e46575050565b601f0160209004906000526020600020908101906108fc9190613f54565b60408051608081018252600080825260208201819052918101829052606081019190915290565b604051806040016040528060008019168152602001613ecb6040518060800160405280606081526020016060815260200160608152602001606081525090565b905290565b828054613edc906146d3565b90600052602060002090601f016020900481019282613efe5760008555613f44565b82601f10613f1757805160ff1916838001178555613f44565b82800160010185558215613f44579182015b82811115613f44578251825591602001919060010190613f29565b50613f50929150613f54565b5090565b5b80821115613f505760008155600101613f55565b6001600160e01b0319811681146108fc57600080fd5b600060208284031215613f9157600080fd5b81356118c181613f69565b60005b83811015613fb7578181015183820152602001613f9f565b83811115611a265750506000910152565b60008151808452613fe0816020860160208601613f9c565b601f01601f19169290920160200192915050565b6020815260006118c16020830184613fc8565b6001600160a01b0391909116815260200190565b60006020828403121561402d57600080fd5b5035919050565b6001600160a01b03811681146108fc57600080fd5b6000806040838503121561405c57600080fd5b823561406781614034565b946020939093013593505050565b60006020828403121561408757600080fd5b81356118c181614034565b6000608082840312156140a457600080fd5b50919050565b60008060008060008060c087890312156140c357600080fd5b8635955060208701356140d581614034565b94506040870135935060608701356140ec81614034565b92506080870135915060a08701356001600160401b0381111561410e57600080fd5b61411a89828a01614092565b9150509295509295509295565b60008060006060848603121561413c57600080fd5b833561414781614034565b9250602084013561415781614034565b929592945050506040919091013590565b6000806040838503121561417b57600080fd5b50508035926020909101359150565b6001600160a01b03929092168252602082015260400190565b600080604083850312156141b657600080fd5b82356001600160401b038111156141cc57600080fd5b6141d885828601614092565b95602094909401359450505050565b6020815281516020820152602082015160408201526040820151606082015260608201516080820152608082015160a082015260a082015160c082015260018060a01b0360c08301511660e0820152600060e083015161010080818501525061172a610120840182613fc8565b80151581146108fc57600080fd5b60008060006040848603121561427757600080fd5b83356001600160401b038082111561428e57600080fd5b818601915086601f8301126142a257600080fd5b8135818111156142b157600080fd5b8760208260051b85010111156142c657600080fd5b602092830195509350508401356142dc81614254565b809150509250925092565b6020808252825182820181905260009190848201906040850190845b81811015612ba357835183529284019291840191600101614303565b634e487b7160e01b600052604160045260246000fd5b604051608081016001600160401b03811182821017156143575761435761431f565b60405290565b600082601f83011261436e57600080fd5b81356001600160401b03808211156143885761438861431f565b604051601f8301601f19908116603f011681019082821181831017156143b0576143b061431f565b816040528381528660208588010111156143c957600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060008060008060c0878903121561440257600080fd5b863561440d81614034565b955060208701359450604087013561442481614034565b93506060870135925060808701356001600160401b038082111561444757600080fd5b6144538a838b01614092565b935060a089013591508082111561446957600080fd5b5061411a89828a0161435d565b60006020828403121561448857600080fd5b81356001600160401b0381111561449e57600080fd5b61172a8482850161435d565b6000806000606084860312156144bf57600080fd5b83356144ca81614034565b95602085013595506040909401359392505050565b6000806000606084860312156144f457600080fd5b83359250602084013561415781614034565b6000806040838503121561451957600080fd5b823561452481614034565b9150602083013561453481614254565b809150509250929050565b6000806040838503121561455257600080fd5b82359150602083013561453481614034565b6000806000806080858703121561457a57600080fd5b843561458581614034565b9350602085013561459581614034565b92506040850135915060608501356001600160401b038111156145b757600080fd5b6145c38782880161435d565b91505092959194509250565b600080604083850312156145e257600080fd5b82356145ed81614034565b9150602083013561453481614034565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b838110156146c557603f19898403810186528251805185528801518885018890528051608089870181905261465c60c0880183613fc8565b91508a83015160608589850301818a01526146778483613fc8565b93508b85015191508589850301838a01526146928483613fc8565b940151888503860160a08a01529392506146b0915082905083613fc8565b978a0197955050509187019150600101614624565b509098975050505050505050565b600181811c908216806146e757607f821691505b602082108114156140a457634e487b7160e01b600052602260045260246000fd5b6020808252600e908201526d139bdd08185d5d1a1bdc9a5e995960921b604082015260600190565b6020808252602f908201527f5368617265644d6574616461746142617463683a2063616e6e6f74207365742060408201526e736861726564206d6574616461746160881b606082015260800190565b6000808335601e1984360301811261479657600080fd5b8301803591506001600160401b038211156147b057600080fd5b6020019150600581901b36038213156147c857600080fd5b9250929050565b634e487b7160e01b600052601160045260246000fd5b600082198211156147f8576147f86147cf565b500190565b6000816000190483118215151615614817576148176147cf565b500290565b634e487b7160e01b600052601260045260246000fd5b6000826148415761484161481c565b500490565b634e487b7160e01b600052603260045260246000fd5b6000823560fe1983360301811261487257600080fd5b9190910192915050565b6000808335601e1984360301811261489357600080fd5b8301803591506001600160401b038211156148ad57600080fd5b6020019150368190038213156147c857600080fd5b601f82111561106257600081815260208120601f850160051c810160208610156148e95750805b601f850160051c820191505b81811015612baf578281556001016148f5565b6001600160401b0383111561491f5761491f61431f565b6149338361492d83546146d3565b836148c2565b6000601f841160018114614967576000851561494f5750838201355b600019600387901b1c1916600186901b17835561377c565b600083815260209020601f19861690835b828110156149985786850135825560209485019460019092019101614978565b50868210156149b55760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b813581556020820135600182015560408201356002820155606082013560038201556080820135600482015560a082013560058201556006810160c0830135614a0f81614034565b81546001600160a01b0319166001600160a01b0391909116179055614a3760e083018361487c565b611a26818360078601614908565b6000600019821415614a5957614a596147cf565b5060010190565b6000808335601e19843603018112614a7757600080fd5b83016020810192503590506001600160401b03811115614a9657600080fd5b8036038313156147c857600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60408082528181018490526000906060808401600587901b850182018885805b8a811015614ba057888403605f190185528235368d900360fe19018112614b13578283fd5b8c018035855260208082013581870152888201358987015287820135888701526080808301359087015260a080830135908701526101009060c080840135614b5a81614034565b6001600160a01b03169088015260e0614b7584820185614a60565b945083828a0152614b89848a018683614aa5565b998301999850505094909401935050600101614aee565b5050508615156020870152935061172a92505050565b600082821015614bc857614bc86147cf565b500390565b600081614bdc57614bdc6147cf565b506000190190565b600060208284031215614bf657600080fd5b81516118c181614034565b600060208284031215614c1357600080fd5b5051919050565b6020808252600f908201526e45786365656473206d61782062707360881b604082015260600190565b600060808236031215614c5557600080fd5b614c5d614335565b82356001600160401b0380821115614c7457600080fd5b614c803683870161435d565b83526020850135915080821115614c9657600080fd5b614ca23683870161435d565b60208401526040850135915080821115614cbb57600080fd5b614cc73683870161435d565b60408401526060850135915080821115614ce057600080fd5b50614ced3682860161435d565b60608301525092915050565b608081526000614d0d608083018a8c614aa5565b8281036020840152614d2081898b614aa5565b90508281036040840152614d35818789614aa5565b90508281036060840152614d4a818587614aa5565b9b9a5050505050505050505050565b604081526000614d6c6040830185613fc8565b8281036020840152614d7e8185613fc8565b95945050505050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090614dba90830184613fc8565b9695505050505050565b600060208284031215614dd657600080fd5b81516118c181613f69565b634e487b7160e01b600052603160045260246000fd5b60008151614e09818560208601613f9c565b9290920192915050565b6834b6b0b3b2911d101160b91b81528251600090614e38816009850160208801613f9c565b741116101130b734b6b0ba34b7b72fbab936111d101160591b6009918401918201528351614e6d81601e840160208801613f9c565b631116101160e11b601e9290910191820152602201949350505050565b6834b6b0b3b2911d101160b91b81528151600090614eaf816009850160208701613f9c565b631116101160e11b6009939091019283015250600d01919050565b7030b734b6b0ba34b7b72fbab936111d101160791b81528151600090614ef7816011850160208701613f9c565b631116101160e11b6011939091019283015250601501919050565b693d913730b6b2911d101160b11b81528651600090614f3881600a850160208c01613f9c565b600160fd1b600a918401918201528751614f5981600b840160208c01613f9c565b631116101160e11b600b929091019182018190526e3232b9b1b934b83a34b7b7111d101160891b600f8301528751614f9881601e850160208c01613f9c565b601e9201918201528551614fb3816022840160208a01613f9c565b770383937b832b93a34b2b9911d103d91373ab6b132b9111d160451b6022929091019182015261501b61500c615006614fef603a850189614df7565b6a1610113730b6b2911d101160a91b8152600b0190565b86614df7565b62227d7d60e81b815260030190565b9998505050505050505050565b7f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c00000081526000825161506081601d850160208701613f9c565b91909101601d0192915050565b60008261507c5761507c61481c565b500690565b60006020828403121561509357600080fd5b81516118c181614254565b60008251614872818460208701613f9c56fe8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa26469706673582212207f7e0455da5b0ce19e8e916dfd3a05cbcbbcc09848e7275a739882025a2b1bf464736f6c634300080c0033",
    "sourceMap": "1700:7995:329:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106102075760003560e01c806374bc7db71161011457806374bc7db7146104f55780638462151c1461051557806384bb1e42146105425780638da5cb5b14610555578063938e3d7b1461056a57806395d89b411461058a57806399a2557a1461059f5780639bcf7a15146105bf578063a22cb465146105df578063a2309ff8146105ff578063acd083f81461037e578063ad1eefc514610614578063b24f2d3914610634578063b88d4fde14610649578063c23dc68f1461065c578063c68907de146106c8578063c87b56dd146106dd578063d637ed59146106fd578063e6798baa14610727578063e8a3d4851461073b578063e985e9c514610750578063fc3c2a731461077057600080fd5b806301ffc9a71461020c57806306fdde0314610241578063079fe40e14610263578063081812fc14610285578063095ea7b3146102a557806313af4035146102ba57806318160ddd146102da5780631ebb2422146102fd57806323a2902b1461031d57806323b872dd1461033d5780632a55205a146103505780633b1475a71461037e57806342842e0e1461039357806342966c68146103a65780634cc157df146103c6578063572b6c0514610408578063600dd5ea146104285780636352211e14610448578063696b0c1a146104685780636f4f2837146104885780636f8934f4146104a857806370a08231146104d5575b600080fd5b34801561021857600080fd5b5061022c610227366004613f7f565b610792565b60405190151581526020015b60405180910390f35b34801561024d57600080fd5b506102566107be565b6040516102389190613ff4565b34801561026f57600080fd5b50610278610859565b6040516102389190614007565b34801561029157600080fd5b506102786102a036600461401b565b610872565b6102b86102b3366004614049565b6108b6565b005b3480156102c657600080fd5b506102b86102d5366004614075565b6108c6565b3480156102e657600080fd5b506102ef6108ff565b604051908152602001610238565b34801561030957600080fd5b506102b861031836600461401b565b61091f565b34801561032957600080fd5b5061022c6103383660046140aa565b610a46565b6102b861034b366004614127565b610e45565b34801561035c57600080fd5b5061037061036b366004614168565b610ffb565b60405161023892919061418a565b34801561038a57600080fd5b506102ef611038565b6102b86103a1366004614127565b611047565b3480156103b257600080fd5b506102b86103c136600461401b565b611067565b3480156103d257600080fd5b506103e66103e136600461401b565b611072565b604080516001600160a01b03909316835261ffff909116602083015201610238565b34801561041457600080fd5b5061022c610423366004614075565b6110f5565b34801561043457600080fd5b506102b8610443366004614049565b611113565b34801561045457600080fd5b5061027861046336600461401b565b611141565b34801561047457600080fd5b506102b86104833660046141a3565b61114c565b34801561049457600080fd5b506102b86104a3366004614075565b61117a565b3480156104b457600080fd5b506104c86104c336600461401b565b6111a7565b60405161023891906141e7565b3480156104e157600080fd5b506102ef6104f0366004614075565b61130e565b34801561050157600080fd5b506102b8610510366004614262565b61136d565b34801561052157600080fd5b50610535610530366004614075565b611703565b60405161023891906142e7565b6102b86105503660046143e9565b611732565b34801561056157600080fd5b50610278611862565b34801561057657600080fd5b506102b8610585366004614476565b61186c565b34801561059657600080fd5b50610256611899565b3480156105ab57600080fd5b506105356105ba3660046144aa565b6118b1565b3480156105cb57600080fd5b506102b86105da3660046144df565b6118c8565b3480156105eb57600080fd5b506102b86105fa366004614506565b6118f7565b34801561060b57600080fd5b506102ef611974565b34801561062057600080fd5b506102ef61062f36600461453f565b611986565b34801561064057600080fd5b506103e66119b9565b6102b8610657366004614564565b6119eb565b34801561066857600080fd5b5061067c61067736600461401b565b611a2c565b604051610238919081516001600160a01b031681526020808301516001600160401b03169082015260408083015115159082015260609182015162ffffff169181019190915260800190565b3480156106d457600080fd5b506102ef611a73565b3480156106e957600080fd5b506102566106f836600461401b565b611b32565b34801561070957600080fd5b50610712611d6f565b60408051928352602083019190915201610238565b34801561073357600080fd5b5060016102ef565b34801561074757600080fd5b50610256611d90565b34801561075c57600080fd5b5061022c61076b3660046145cf565b611da5565b34801561077c57600080fd5b50610785611de2565b60405161023891906145fd565b600061079d8261212e565b806107b8575063152a902d60e11b6001600160e01b03198316145b92915050565b60606107c861217c565b60020180546107d6906146d3565b80601f0160208091040260200160405190810160405280929190818152602001828054610802906146d3565b801561084f5780601f106108245761010080835404028352916020019161084f565b820191906000526020600020905b81548152906001019060200180831161083257829003601f168201915b5050505050905090565b60006108636121a0565b546001600160a01b0316919050565b600061087d826121aa565b610891576108916333d1c03960e21b612206565b61089961217c565b60009283526006016020525060409020546001600160a01b031690565b6108c282826001612210565b5050565b6108ce6122c1565b6108f35760405162461bcd60e51b81526004016108ea90614708565b60405180910390fd5b6108fc816122d4565b50565b6000600161090b61217c565b6001015461091761217c565b540303919050565b610927612341565b6109435760405162461bcd60e51b81526004016108ea90614730565b6109558161094f61236f565b90612393565b6109bd5760405162461bcd60e51b815260206004820152603360248201527f5368617265644d6574616461746142617463683a20736861726564206d65746160448201527219185d1848191bd95cc81b9bdd08195e1a5cdd606a1b60648201526084016108ea565b6109c561236f565b6000828152600291909101602052604081208181559060018201816109ea8282613e2a565b6109f8600183016000613e2a565b610a06600283016000613e2a565b610a14600383016000613e2a565b50506040518392507f712288e92794be2ea9abed3c7b1b0c025de9f006b5dd43cc64d15f0a7c3210f59150600090a250565b600080610a5161239f565b6000898152600291820160209081526040918290208251610100810184528154815260018201549281019290925292830154918101919091526003820154606082015260048201546080820152600582015460a082015260068201546001600160a01b031660c082015260078201805491929160e084019190610ad3906146d3565b80601f0160208091040260200160405190810160405280929190818152602001828054610aff906146d3565b8015610b4c5780601f10610b2157610100808354040283529160200191610b4c565b820191906000526020600020905b815481529060010190602001808311610b2f57829003601f168201915b50505091909252505050606081015160a082015160c08301516080840151939450919290919015610c2c57610c28610b84878061477f565b80806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250505060808088015191508d9060208b01359060408c013590610bd9908d0160608e01614075565b6040516001600160601b0319606095861b811660208301526034820194909452605481019290925290921b166074820152608801604051602081830303815290604052805190602001206123a9565b5094505b8415610cb1576020860135610c415782610c47565b85602001355b925060001986604001351415610c5d5781610c63565b85604001355b9150600019866040013514158015610c9457506000610c886080880160608901614075565b6001600160a01b031614155b610c9e5780610cae565b610cae6080870160608801614075565b90505b6000610cbb61239f565b60000160030160008d815260200190815260200160002060008c6001600160a01b03166001600160a01b03168152602001908152602001600020549050816001600160a01b0316896001600160a01b0316141580610d195750828814155b15610d595760405162461bcd60e51b815260206004820152601060248201526f2150726963654f7243757272656e637960801b60448201526064016108ea565b891580610d6e575083610d6c828c6147e5565b115b15610da45760405162461bcd60e51b81526004016108ea906020808252600490820152632151747960e01b604082015260600190565b84602001518a8660400151610db991906147e5565b1115610df45760405162461bcd60e51b815260206004820152600a602482015269214d6178537570706c7960b01b60448201526064016108ea565b8451421015610e365760405162461bcd60e51b815260206004820152600e60248201526d18d85b9d0818db185a5b481e595d60921b60448201526064016108ea565b50505050509695505050505050565b6000610e5082612477565b6001600160a01b039485169490915081168414610e7657610e7662a1148160e81b612206565b600080610e8284612535565b91509150610ea78187610e923390565b6001600160a01b039081169116811491141790565b610ec957610eb58633611da5565b610ec957610ec9632ce44b5f60e11b612206565b610ed6868686600161255d565b8015610ee157600082555b610ee961217c565b6001600160a01b0387166000908152600591909101602052604090208054600019019055610f1561217c565b6001600160a01b03861660009081526005919091016020526040902080546001019055610f4685600160e11b612610565b610f4e61217c565b60008681526004919091016020526040902055600160e11b8316610fbd5760018401610f7861217c565b60008281526004919091016020526040902054610fbb57610f9761217c565b548114610fbb5783610fa761217c565b600083815260049190910160205260409020555b505b6001600160a01b038516848188600080516020615111833981519152600080a480610ff257610ff2633a954ecd60e21b612206565b50505050505050565b60008060008061100a86611072565b90945084925061ffff16905061271061102382876147fd565b61102d9190614832565b925050509250929050565b6000611042612625565b905090565b611062838383604051806020016040528060008152506119eb565b505050565b6108fc816001612635565b600080600061107f61279a565b600085815260019182016020908152604091829020825180840190935280546001600160a01b0316808452930154908201529150156110c457805160208201516110eb565b6110cc61279a565b546001600160a01b03166110de61279a565b54600160a01b900461ffff165b9250925050915091565b6001600160a01b031660009081526033602052604090205460ff1690565b61111b6122c1565b6111375760405162461bcd60e51b81526004016108ea90614708565b6108c282826127be565b60006107b882612477565b611154612341565b6111705760405162461bcd60e51b81526004016108ea90614730565b6108c28282612872565b6111826122c1565b61119e5760405162461bcd60e51b81526004016108ea90614708565b6108fc81612a0a565b6111fb60405180610100016040528060008152602001600081526020016000815260200160008152602001600080191681526020016000815260200160006001600160a01b03168152602001606081525090565b61120361239f565b6000838152600291820160209081526040918290208251610100810184528154815260018201549281019290925292830154918101919091526003820154606082015260048201546080820152600582015460a082015260068201546001600160a01b031660c082015260078201805491929160e084019190611285906146d3565b80601f01602080910402602001604051908101604052809291908181526020018280546112b1906146d3565b80156112fe5780601f106112d3576101008083540402835291602001916112fe565b820191906000526020600020905b8154815290600101906020018083116112e157829003601f168201915b5050505050815250509050919050565b60006001600160a01b03821661132e5761132e6323d3ad8160e21b612206565b6001600160401b0361133e61217c565b6005016000846001600160a01b03166001600160a01b0316815260200190815260200160002054169050919050565b6113756122c1565b6113915760405162461bcd60e51b81526004016108ea90614708565b600061139b61239f565b54905060006113a861239f565b6001015490508183156113c2576113bf82846147e5565b90505b846113cb61239f565b60010155806113d861239f565b556000805b8681101561159e5780158061141557508787828181106113ff576113ff614846565b9050602002810190611411919061485c565b3582105b6114465760405162461bcd60e51b815260206004820152600260248201526114d560f21b60448201526064016108ea565b600061145061239f565b600201600061145f84876147e5565b815260200190815260200160002060020154905088888381811061148557611485614846565b9050602002810190611497919061485c565b602001358111156114df5760405162461bcd60e51b81526020600482015260126024820152711b585e081cdd5c1c1b1e4818db185a5b595960721b60448201526064016108ea565b8888838181106114f1576114f1614846565b9050602002810190611503919061485c565b61150b61239f565b600201600061151a85886147e5565b8152602001908152602001600020818161153491906149c7565b9050508061154061239f565b600201600061154f85886147e5565b815260208101919091526040016000206002015588888381811061157557611575614846565b9050602002810190611587919061485c565b35925081905061159681614a45565b9150506113dd565b50841561162757835b82811015611621576115b761239f565b6000828152600291820160205260408120818155600181018290559182018190556003820181905560048201819055600582018190556006820180546001600160a01b031916905561160c6007830182613e2a565b5050808061161990614a45565b9150506115a7565b506116bf565b858311156116bf57855b838110156116bd5761164161239f565b600201600061165083866147e5565b81526020810191909152604001600090812081815560018101829055600281018290556003810182905560048101829055600581018290556006810180546001600160a01b0319169055906116a86007830182613e2a565b505080806116b590614a45565b915050611631565b505b7fbf4016fceeaaa4ac5cf4be865b559ff85825ab4ca7aa7b661d16e2f544c030988787876040516116f293929190614ace565b60405180910390a150505050505050565b606060016000611711612625565b9050606081831461172a57611727858484612aa7565b90505b949350505050565b600061173c611a73565b90506117538161174a612bb7565b88888888610a46565b508561175d61239f565b600083815260029182016020526040812090910180549091906117819084906147e5565b9091555086905061179061239f565b6000838152600390910160205260408120906117aa612bb7565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008282546117d991906147e5565b909155506117ec90506000878787612bc1565b60006117f88888612caa565b9050876001600160a01b031661180c612bb7565b6001600160a01b0316837ffa76a4010d9533e3e964f2930a65fb6042a12fa6ff5b08281837a10b0be7321e848b604051611850929190918252602082015260400190565b60405180910390a45050505050505050565b6000610863612cc0565b6118746122c1565b6118905760405162461bcd60e51b81526004016108ea90614708565b6108fc81612cca565b60606118a361217c565b60030180546107d6906146d3565b60606118be848484612aa7565b90505b9392505050565b6118d06122c1565b6118ec5760405162461bcd60e51b81526004016108ea90614708565b611062838383612db5565b8061190061217c565b336000818152600792909201602090815260408084206001600160a01b03881680865290835293819020805460ff19169515159590951790945592518415158152919290917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b60006001611980612625565b03905090565b600061199061239f565b6000938452600301602090815260408085206001600160a01b0390941685529290525090205490565b6000806119c461279a565b546001600160a01b03166119d661279a565b549093600160a01b90910461ffff1692509050565b6119f6848484610e45565b6001600160a01b0383163b15611a2657611a1284848484612e72565b611a2657611a266368d2bf6b60e11b612206565b50505050565b611a34613e64565b60018210611a6e57611a44612625565b821015611a6e575b611a5582612f51565b611a655760001990910190611a4c565b6107b882612f71565b919050565b600080611a7e61239f565b60010154611a8a61239f565b54611a9591906147e5565b90505b611aa061239f565b54811115611afb57611ab061239f565b6002016000611ac0600184614bb6565b8152602001908152602001600020600001544210611ae957611ae3600182614bb6565b91505090565b80611af381614bcd565b915050611a98565b5060405162461bcd60e51b815260206004820152600b60248201526a10a1a7a72224aa24a7a71760a91b60448201526064016108ea565b6060611b3d826121aa565b611b6f5760405162461bcd60e51b815260206004820152600360248201526208525160ea1b60448201526064016108ea565b6000611b7a83611141565b9050600080306001600160a01b031663a7145eb46040518163ffffffff1660e01b8152600401602060405180830381865afa158015611bbd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611be19190614be4565b90506001600160a01b03811615611c6657604051630d47875d60e41b81526001600160a01b0382169063d47875d090611c1e908690600401614007565b602060405180830381865afa158015611c3b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c5f9190614c01565b9150611ccd565b604051630d47875d60e41b8152309063d47875d090611c89908690600401614007565b602060405180830381865afa158015611ca6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cca9190614c01565b91505b6000611cdf611cda61236f565b612f9c565b9050600080805b8351811015611d58576000848281518110611d0357611d03614846565b602002602001015160001c9050868111158015611d205750828110155b15611d4557848281518110611d3757611d37614846565b602002602001015193508092505b50611d516001826147e5565b9050611ce6565b50611d638289612fa7565b98975050505050505050565b600080611d7a61239f565b54611d8361239f565b6001015490939092509050565b6060611d9a61323c565b80546107d6906146d3565b6000611daf61217c565b6001600160a01b039384166000908152600791909101602090815260408083209490951682529290925250205460ff1690565b60606000611df1611cda61236f565b905080516001600160401b03811115611e0c57611e0c61431f565b604051908082528060200260200182016040528015611e4557816020015b611e32613e8b565b815260200190600190039081611e2a5790505b50915060005b815181101561212957611e5c61236f565b6002016000838381518110611e7357611e73614846565b602002602001015181526020019081526020016000206040518060400160405290816000820154815260200160018201604051806080016040529081600082018054611ebe906146d3565b80601f0160208091040260200160405190810160405280929190818152602001828054611eea906146d3565b8015611f375780601f10611f0c57610100808354040283529160200191611f37565b820191906000526020600020905b815481529060010190602001808311611f1a57829003601f168201915b50505050508152602001600182018054611f50906146d3565b80601f0160208091040260200160405190810160405280929190818152602001828054611f7c906146d3565b8015611fc95780601f10611f9e57610100808354040283529160200191611fc9565b820191906000526020600020905b815481529060010190602001808311611fac57829003601f168201915b50505050508152602001600282018054611fe2906146d3565b80601f016020809104026020016040519081016040528092919081815260200182805461200e906146d3565b801561205b5780601f106120305761010080835404028352916020019161205b565b820191906000526020600020905b81548152906001019060200180831161203e57829003601f168201915b50505050508152602001600382018054612074906146d3565b80601f01602080910402602001604051908101604052809291908181526020018280546120a0906146d3565b80156120ed5780601f106120c2576101008083540402835291602001916120ed565b820191906000526020600020905b8154815290600101906020018083116120d057829003601f168201915b5050505050815250508152505083828151811061210c5761210c614846565b60209081029190910101526121226001826147e5565b9050611e4b565b505090565b60006301ffc9a760e01b6001600160e01b03198316148061215f57506380ac58cd60e01b6001600160e01b03198316145b806107b85750506001600160e01b031916635b5e139f60e01b1490565b7f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c4090565b6000611042613260565b600081600111611a6e576121bc61217c565b54821015611a6e5760005b6121cf61217c565b600084815260049190910160205260409020549050806121f9576121f283614bcd565b92506121c7565b600160e01b161592915050565b8060005260046000fd5b600061221b83611141565b90508180156122335750336001600160a01b03821614155b15612256576122428133611da5565b612256576122566367d9dca160e11b612206565b8361225f61217c565b6000858152600691909101602052604080822080546001600160a01b0319166001600160a01b0394851617905551859287811692908516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259190a450505050565b6000611042816122cf6132c2565b6132cc565b60006122de612cc0565b546001600160a01b03169050816122f3612cc0565b80546001600160a01b0319166001600160a01b03928316179055604051838216918316907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b60006110427f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a66122cf6132c2565b7ff85ae2b98503142dac20c6561e88360cff7f1cb5634b6ad090b7f724e2f67a0090565b60006118c18383613316565b6000611042613409565b6000808281805b875181101561246b576123c46002836147fd565b915060008882815181106123da576123da614846565b6020026020010151905080841161241c576040805160208101869052908101829052606001604051602081830303815290604052805190602001209350612458565b604080516020810183905290810185905260600160405160208183030381529060405280519060200120935060018361245591906147e5565b92505b508061246381614a45565b9150506123b0565b50941495939450505050565b6000816001116125255761248961217c565b60008381526004919091016020526040902054905080612515576124ab61217c565b5482106124c2576124c2636f96cda160e11b612206565b6124ca61217c565b60001990920160008181526004939093016020526040909220549050806124f0576124c2565b600160e01b811661250057919050565b612510636f96cda160e11b612206565b6124c2565b600160e01b811661252557919050565b611a6e636f96cda160e11b612206565b600080600061254261217c565b60009485526006016020525050604090912080549092909150565b6125766000805160206150b183398151915260006132cc565b15801561258b57506001600160a01b03841615155b801561259f57506001600160a01b03831615155b15611a26576125bc6000805160206150b1833981519152856132cc565b1580156125de57506125dc6000805160206150b1833981519152846132cc565b155b15611a265760405162461bcd60e51b8152602060048201526002602482015261085560f21b60448201526064016108ea565b4260a01b176001600160a01b03919091161790565b600061262f61217c565b54919050565b600061264083612477565b90508060008061264f86612535565b91509150841561268657612664818433610e92565b612686576126728333611da5565b61268657612686632ce44b5f60e11b612206565b61269483600088600161255d565b801561269f57600082555b6001600160801b036126af61217c565b6001600160a01b03851660009081526005919091016020526040902080549190910190556126e183600360e01b612610565b6126e961217c565b60008881526004919091016020526040902055600160e11b8416612758576001860161271361217c565b600082815260049190910160205260409020546127565761273261217c565b548114612756578461274261217c565b600083815260049190910160205260409020555b505b60405186906000906001600160a01b03861690600080516020615111833981519152908390a461278661217c565b600190810180549091019055505050505050565b7f8116a128b135962baae86382f90f26a5e28c4bb803b8888f92fd98e3bbbc6d0090565b6127108111156127e05760405162461bcd60e51b81526004016108ea90614c1a565b816127e961279a565b80546001600160a01b0319166001600160a01b03929092169190911790558061281061279a565b805461ffff92909216600160a01b0261ffff60a01b199092169190911790556040518181526001600160a01b038316907f90d7ec04bcb8978719414f82e52e4cb651db41d0e6f8cea6118c2191e6183adb906020015b60405180910390a25050565b6128848161287e61236f565b9061343a565b6128ec5760405162461bcd60e51b815260206004820152603360248201527f5368617265644d6574616461746142617463683a20736861726564206d6574616044820152726461746120616c72656164792065786973747360681b60648201526084016108ea565b60405180604001604052808281526020018361290790614c43565b905261291161236f565b600083815260029190910160209081526040909120825181558282015180518051929391926001850192612949928492910190613ed0565b5060208281015180516129629260018501920190613ed0565b506040820151805161297e916002840191602090910190613ed0565b506060820151805161299a916003840191602090910190613ed0565b508493507f673b054ed092bdba91ed697666383bb8698a3524eb1312b6c0cd73b0ef509f8b92506129cf91508590508061487c565b6129dc602087018761487c565b6129e9604089018961487c565b6129f660608b018b61487c565b604051612866989796959493929190614cf9565b6001600160a01b038116612a545760405162461bcd60e51b8152602060048201526011602482015270125b9d985b1a59081c9958da5c1a595b9d607a1b60448201526064016108ea565b80612a5d6121a0565b80546001600160a01b0319166001600160a01b03928316179055604051908216907f299d17e95023f496e0ffc4909cff1a61f74bb5eb18de6f900f4155bfa1b3b33390600090a250565b6060818310612ac057612ac0631960ccad60e11b612206565b6001831015612ace57600192505b6000612ad8612625565b9050808310612ae5578092505b60606000612af28761130e565b85871090810291508115612ba3578187870311612b0f5786860391505b60405192506001820160051b83016040526000612b2b88611a2c565b905060008160400151612b3c575080515b60005b612b488a612f71565b9250604083015160008114612b605760009250612b85565b835115612b6c57835192505b8b831860601b612b85576001820191508a8260051b8801525b5060018a019950888a1480612b9957508481145b15612b3f57855250505b50909695505050505050565b505050505050565b60006110426132c2565b80612c02573415612bfd5760405162461bcd60e51b81526020600482015260066024820152652156616c756560d01b60448201526064016108ea565b611a26565b6000612c0e82856147fd565b905060006001600160a01b03841673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1415612c405750348114612c44565b5034155b80612c765760405162461bcd60e51b815260206004820152600260248201526110ab60f11b60448201526064016108ea565b60006001600160a01b03871615612c8d5786612c95565b612c95610859565b9050610ff285612ca36132c2565b8386613446565b6000612cb4612625565b90506107b8838361348b565b60006110426134a5565b6000612cd461323c565b8054612cdf906146d3565b80601f0160208091040260200160405190810160405280929190818152602001828054612d0b906146d3565b8015612d585780601f10612d2d57610100808354040283529160200191612d58565b820191906000526020600020905b815481529060010190602001808311612d3b57829003601f168201915b5050505050905081612d6861323c565b8151612d779260200190613ed0565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a168183604051612da9929190614d59565b60405180910390a15050565b612710811115612dd75760405162461bcd60e51b81526004016108ea90614c1a565b6040518060400160405280836001600160a01b0316815260200182815250612dfd61279a565b600085815260019182016020908152604091829020845181546001600160a01b0319166001600160a01b0391821617825594820151930192909255518381529184169185917f7365cf4122f072a3365c20d54eff9b38d73c096c28e1892ec8f5b0e403a0f12d910160405180910390a3505050565b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a0290612ea7903390899088908890600401614d87565b6020604051808303816000875af1925050508015612ee2575060408051601f3d908101601f19168201909252612edf91810190614dc4565b60015b612f34573d808015612f10576040519150601f19603f3d011682016040523d82523d6000602084013e612f15565b606091505b508051612f2c57612f2c6368d2bf6b60e11b612206565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050949350505050565b6000612f5b61217c565b6000928352600401602052506040902054151590565b612f79613e64565b6107b8612f8461217c565b600084815260049190910160205260409020546134d6565b60606107b882613519565b60606000612fb361236f565b6002016000858152602001908152602001600020600101604051806080016040529081600082018054612fe5906146d3565b80601f0160208091040260200160405190810160405280929190818152602001828054613011906146d3565b801561305e5780601f106130335761010080835404028352916020019161305e565b820191906000526020600020905b81548152906001019060200180831161304157829003601f168201915b50505050508152602001600182018054613077906146d3565b80601f01602080910402602001604051908101604052809291908181526020018280546130a3906146d3565b80156130f05780601f106130c5576101008083540402835291602001916130f0565b820191906000526020600020905b8154815290600101906020018083116130d357829003601f168201915b50505050508152602001600282018054613109906146d3565b80601f0160208091040260200160405190810160405280929190818152602001828054613135906146d3565b80156131825780601f1061315757610100808354040283529160200191613182565b820191906000526020600020905b81548152906001019060200180831161316557829003601f168201915b5050505050815260200160038201805461319b906146d3565b80601f01602080910402602001604051908101604052809291908181526020018280546131c7906146d3565b80156132145780601f106131e957610100808354040283529160200191613214565b820191906000526020600020905b8154815290600101906020018083116131f757829003601f168201915b505050505081525050905061172a816000015182602001518360400151846060015187613575565b7f4bc804ba64359c0e35e5ed5d90ee596ecaa49a3a930ddcb1470ea0dd625da90090565b60008060ff1961329160017f52513acdf273074fe51c68a52514ea5eabc2d36eb91435d5799fc3f9adc30530614bb6565b6040516020016132a391815260200190565b60408051601f1981840301815291905280516020909101201692915050565b600061104261359e565b60009182527f0a7b0f5c59907924802379ebe98cdc23e2ee7820f63d30126e10b3752010e500602090815260408084206001600160a01b0393909316845291905290205460ff1690565b600081815260018301602052604081205480156133ff57600061333a600183614bb6565b855490915060009061334e90600190614bb6565b90508181146133b357600086600001828154811061336e5761336e614846565b906000526020600020015490508087600001848154811061339157613391614846565b6000918252602080832090910192909255918252600188019052604090208390555b85548690806133c4576133c4614de1565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506107b8565b60009150506107b8565b60008060ff1961329160017fbc63558797adc09ce5b77f3ca89acfccabdd075e03de61144467402677b956b2614bb6565b60006118c183836135c0565b8061345057611a26565b6001600160a01b03841673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee141561347f57612bfd828261360f565b611a26848484846136b1565b6108c282826040518060200160405280600081525061370a565b60008060ff1961329160017ffa02b2ade2dba28b48a24f204a68d8c0005ca2ccfd58c765cdddd023319a9b3f614bb6565b6134de613e64565b6001600160a01b03821681526001600160401b0360a083901c166020820152600160e01b82161515604082015260e89190911c606082015290565b60608160000180548060200260200160405190810160405280929190818152602001828054801561356957602002820191906000526020600020905b815481526020019060010190808311613555575b50505050509050919050565b606060006135838585613783565b9050600061359388888487613810565b9050611d6381613856565b60006135a9336110f5565b156135bb575060131936013560601c90565b503390565b6000818152600183016020526040812054613607575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556107b8565b5060006107b8565b6000826001600160a01b03168260405160006040518083038185875af1925050503d806000811461365c576040519150601f19603f3d011682016040523d82523d6000602084013e613661565b606091505b50509050806110625760405162461bcd60e51b815260206004820152601c60248201527b1b985d1a5d99481d1bdad95b881d1c985b9cd9995c8819985a5b195960221b60448201526064016108ea565b816001600160a01b0316836001600160a01b031614156136d057611a26565b6001600160a01b0383163014156136f557612bfd6001600160a01b0385168383613887565b611a266001600160a01b0385168484846138dd565b6137148383613915565b6001600160a01b0383163b1561106257600061372e61217c565b5490508281035b6137486000868380600101945086612e72565b61375c5761375c6368d2bf6b60e11b612206565b818110613735578161376c61217c565b541461377c5761377c6000612206565b5050505050565b8151815160609115801591151590829061379a5750805b156137ca5784846040516020016137b2929190614e13565b604051602081830303815290604052925050506107b8565b81156137e157846040516020016137b29190614e8a565b80156137f857836040516020016137b29190614eca565b50506040805160208101909152600081529392505050565b60608461381c836139f4565b8585613827866139f4565b8960405160200161383d96959493929190614f12565b6040516020818303038152906040529050949350505050565b606061386182613af1565b6040516020016138719190615028565b6040516020818303038152906040529050919050565b6110628363a9059cbb60e01b84846040516024016138a692919061418a565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152613c44565b6040516001600160a01b0380851660248301528316604482015260648101829052611a269085906323b872dd60e01b906084016138a6565b600061391f61217c565b549050816139375761393763b562e8dd60e01b612206565b613944600084838561255d565b613954836001841460e11b612610565b61395c61217c565b600083815260049190910160205260409020556001600160401b01820261398161217c565b6001600160a01b038516600081815260059290920160205260409091208054909201909155806139ba576139ba622e076360e81b612206565b818301825b80836000600080516020615111833981519152600080a4600101808214156139bf57816139ea61217c565b5550611062915050565b606081613a185750506040805180820190915260018152600360fc1b602082015290565b8160005b8115613a425780613a2c81614a45565b9150613a3b9050600a83614832565b9150613a1c565b6000816001600160401b03811115613a5c57613a5c61431f565b6040519080825280601f01601f191660200182016040528015613a86576020820181803683370190505b5090505b841561172a57613a9b600183614bb6565b9150613aa8600a8661506d565b613ab39060306147e5565b60f81b818381518110613ac857613ac8614846565b60200101906001600160f81b031916908160001a905350613aea600a86614832565b9450613a8a565b6060815160001415613b1157505060408051602081019091526000815290565b60006040518060600160405280604081526020016150d16040913990506000600384516002613b4091906147e5565b613b4a9190614832565b613b559060046147fd565b6001600160401b03811115613b6c57613b6c61431f565b6040519080825280601f01601f191660200182016040528015613b96576020820181803683370190505b509050600182016020820185865187015b80821015613c02576003820191508151603f8160121c168501518453600184019350603f81600c1c168501518453600184019350603f8160061c168501518453600184019350603f8116850151845350600183019250613ba7565b5050600386510660018114613c1e5760028114613c3157613c39565b603d6001830353603d6002830353613c39565b603d60018303535b509195945050505050565b6000613c99826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316613d169092919063ffffffff16565b8051909150156110625780806020019051810190613cb79190615081565b6110625760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016108ea565b60606118be8484600085856001600160a01b0385163b613d785760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016108ea565b600080866001600160a01b03168587604051613d94919061509e565b60006040518083038185875af1925050503d8060008114613dd1576040519150601f19603f3d011682016040523d82523d6000602084013e613dd6565b606091505b5091509150613de6828286613df1565b979650505050505050565b60608315613e005750816118c1565b825115613e105782518084602001fd5b8160405162461bcd60e51b81526004016108ea9190613ff4565b508054613e36906146d3565b6000825580601f10613e46575050565b601f0160209004906000526020600020908101906108fc9190613f54565b60408051608081018252600080825260208201819052918101829052606081019190915290565b604051806040016040528060008019168152602001613ecb6040518060800160405280606081526020016060815260200160608152602001606081525090565b905290565b828054613edc906146d3565b90600052602060002090601f016020900481019282613efe5760008555613f44565b82601f10613f1757805160ff1916838001178555613f44565b82800160010185558215613f44579182015b82811115613f44578251825591602001919060010190613f29565b50613f50929150613f54565b5090565b5b80821115613f505760008155600101613f55565b6001600160e01b0319811681146108fc57600080fd5b600060208284031215613f9157600080fd5b81356118c181613f69565b60005b83811015613fb7578181015183820152602001613f9f565b83811115611a265750506000910152565b60008151808452613fe0816020860160208601613f9c565b601f01601f19169290920160200192915050565b6020815260006118c16020830184613fc8565b6001600160a01b0391909116815260200190565b60006020828403121561402d57600080fd5b5035919050565b6001600160a01b03811681146108fc57600080fd5b6000806040838503121561405c57600080fd5b823561406781614034565b946020939093013593505050565b60006020828403121561408757600080fd5b81356118c181614034565b6000608082840312156140a457600080fd5b50919050565b60008060008060008060c087890312156140c357600080fd5b8635955060208701356140d581614034565b94506040870135935060608701356140ec81614034565b92506080870135915060a08701356001600160401b0381111561410e57600080fd5b61411a89828a01614092565b9150509295509295509295565b60008060006060848603121561413c57600080fd5b833561414781614034565b9250602084013561415781614034565b929592945050506040919091013590565b6000806040838503121561417b57600080fd5b50508035926020909101359150565b6001600160a01b03929092168252602082015260400190565b600080604083850312156141b657600080fd5b82356001600160401b038111156141cc57600080fd5b6141d885828601614092565b95602094909401359450505050565b6020815281516020820152602082015160408201526040820151606082015260608201516080820152608082015160a082015260a082015160c082015260018060a01b0360c08301511660e0820152600060e083015161010080818501525061172a610120840182613fc8565b80151581146108fc57600080fd5b60008060006040848603121561427757600080fd5b83356001600160401b038082111561428e57600080fd5b818601915086601f8301126142a257600080fd5b8135818111156142b157600080fd5b8760208260051b85010111156142c657600080fd5b602092830195509350508401356142dc81614254565b809150509250925092565b6020808252825182820181905260009190848201906040850190845b81811015612ba357835183529284019291840191600101614303565b634e487b7160e01b600052604160045260246000fd5b604051608081016001600160401b03811182821017156143575761435761431f565b60405290565b600082601f83011261436e57600080fd5b81356001600160401b03808211156143885761438861431f565b604051601f8301601f19908116603f011681019082821181831017156143b0576143b061431f565b816040528381528660208588010111156143c957600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060008060008060c0878903121561440257600080fd5b863561440d81614034565b955060208701359450604087013561442481614034565b93506060870135925060808701356001600160401b038082111561444757600080fd5b6144538a838b01614092565b935060a089013591508082111561446957600080fd5b5061411a89828a0161435d565b60006020828403121561448857600080fd5b81356001600160401b0381111561449e57600080fd5b61172a8482850161435d565b6000806000606084860312156144bf57600080fd5b83356144ca81614034565b95602085013595506040909401359392505050565b6000806000606084860312156144f457600080fd5b83359250602084013561415781614034565b6000806040838503121561451957600080fd5b823561452481614034565b9150602083013561453481614254565b809150509250929050565b6000806040838503121561455257600080fd5b82359150602083013561453481614034565b6000806000806080858703121561457a57600080fd5b843561458581614034565b9350602085013561459581614034565b92506040850135915060608501356001600160401b038111156145b757600080fd5b6145c38782880161435d565b91505092959194509250565b600080604083850312156145e257600080fd5b82356145ed81614034565b9150602083013561453481614034565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b838110156146c557603f19898403810186528251805185528801518885018890528051608089870181905261465c60c0880183613fc8565b91508a83015160608589850301818a01526146778483613fc8565b93508b85015191508589850301838a01526146928483613fc8565b940151888503860160a08a01529392506146b0915082905083613fc8565b978a0197955050509187019150600101614624565b509098975050505050505050565b600181811c908216806146e757607f821691505b602082108114156140a457634e487b7160e01b600052602260045260246000fd5b6020808252600e908201526d139bdd08185d5d1a1bdc9a5e995960921b604082015260600190565b6020808252602f908201527f5368617265644d6574616461746142617463683a2063616e6e6f74207365742060408201526e736861726564206d6574616461746160881b606082015260800190565b6000808335601e1984360301811261479657600080fd5b8301803591506001600160401b038211156147b057600080fd5b6020019150600581901b36038213156147c857600080fd5b9250929050565b634e487b7160e01b600052601160045260246000fd5b600082198211156147f8576147f86147cf565b500190565b6000816000190483118215151615614817576148176147cf565b500290565b634e487b7160e01b600052601260045260246000fd5b6000826148415761484161481c565b500490565b634e487b7160e01b600052603260045260246000fd5b6000823560fe1983360301811261487257600080fd5b9190910192915050565b6000808335601e1984360301811261489357600080fd5b8301803591506001600160401b038211156148ad57600080fd5b6020019150368190038213156147c857600080fd5b601f82111561106257600081815260208120601f850160051c810160208610156148e95750805b601f850160051c820191505b81811015612baf578281556001016148f5565b6001600160401b0383111561491f5761491f61431f565b6149338361492d83546146d3565b836148c2565b6000601f841160018114614967576000851561494f5750838201355b600019600387901b1c1916600186901b17835561377c565b600083815260209020601f19861690835b828110156149985786850135825560209485019460019092019101614978565b50868210156149b55760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b813581556020820135600182015560408201356002820155606082013560038201556080820135600482015560a082013560058201556006810160c0830135614a0f81614034565b81546001600160a01b0319166001600160a01b0391909116179055614a3760e083018361487c565b611a26818360078601614908565b6000600019821415614a5957614a596147cf565b5060010190565b6000808335601e19843603018112614a7757600080fd5b83016020810192503590506001600160401b03811115614a9657600080fd5b8036038313156147c857600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60408082528181018490526000906060808401600587901b850182018885805b8a811015614ba057888403605f190185528235368d900360fe19018112614b13578283fd5b8c018035855260208082013581870152888201358987015287820135888701526080808301359087015260a080830135908701526101009060c080840135614b5a81614034565b6001600160a01b03169088015260e0614b7584820185614a60565b945083828a0152614b89848a018683614aa5565b998301999850505094909401935050600101614aee565b5050508615156020870152935061172a92505050565b600082821015614bc857614bc86147cf565b500390565b600081614bdc57614bdc6147cf565b506000190190565b600060208284031215614bf657600080fd5b81516118c181614034565b600060208284031215614c1357600080fd5b5051919050565b6020808252600f908201526e45786365656473206d61782062707360881b604082015260600190565b600060808236031215614c5557600080fd5b614c5d614335565b82356001600160401b0380821115614c7457600080fd5b614c803683870161435d565b83526020850135915080821115614c9657600080fd5b614ca23683870161435d565b60208401526040850135915080821115614cbb57600080fd5b614cc73683870161435d565b60408401526060850135915080821115614ce057600080fd5b50614ced3682860161435d565b60608301525092915050565b608081526000614d0d608083018a8c614aa5565b8281036020840152614d2081898b614aa5565b90508281036040840152614d35818789614aa5565b90508281036060840152614d4a818587614aa5565b9b9a5050505050505050505050565b604081526000614d6c6040830185613fc8565b8281036020840152614d7e8185613fc8565b95945050505050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090614dba90830184613fc8565b9695505050505050565b600060208284031215614dd657600080fd5b81516118c181613f69565b634e487b7160e01b600052603160045260246000fd5b60008151614e09818560208601613f9c565b9290920192915050565b6834b6b0b3b2911d101160b91b81528251600090614e38816009850160208801613f9c565b741116101130b734b6b0ba34b7b72fbab936111d101160591b6009918401918201528351614e6d81601e840160208801613f9c565b631116101160e11b601e9290910191820152602201949350505050565b6834b6b0b3b2911d101160b91b81528151600090614eaf816009850160208701613f9c565b631116101160e11b6009939091019283015250600d01919050565b7030b734b6b0ba34b7b72fbab936111d101160791b81528151600090614ef7816011850160208701613f9c565b631116101160e11b6011939091019283015250601501919050565b693d913730b6b2911d101160b11b81528651600090614f3881600a850160208c01613f9c565b600160fd1b600a918401918201528751614f5981600b840160208c01613f9c565b631116101160e11b600b929091019182018190526e3232b9b1b934b83a34b7b7111d101160891b600f8301528751614f9881601e850160208c01613f9c565b601e9201918201528551614fb3816022840160208a01613f9c565b770383937b832b93a34b2b9911d103d91373ab6b132b9111d160451b6022929091019182015261501b61500c615006614fef603a850189614df7565b6a1610113730b6b2911d101160a91b8152600b0190565b86614df7565b62227d7d60e81b815260030190565b9998505050505050505050565b7f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c00000081526000825161506081601d850160208701613f9c565b91909101601d0192915050565b60008261507c5761507c61481c565b500690565b60006020828403121561509357600080fd5b81516118c181614254565b60008251614872818460208701613f9c56fe8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa26469706673582212207f7e0455da5b0ce19e8e916dfd3a05cbcbbcc09848e7275a739882025a2b1bf464736f6c634300080c0033",
    "sourceMap": "1700:7995:329:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4055:301;;;;;;;;;;-1:-1:-1;4055:301:329;;;;;:::i;:::-;;:::i;:::-;;;661:14:644;;654:22;636:41;;624:2;609:18;4055:301:329;;;;;;;;9336:122:46;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;1091:126:182:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;16415:247:46:-;;;;;;;;;;-1:-1:-1;16415:247:46;;;;;:::i;:::-;;:::i;16143:122::-;;;;;;:::i;:::-;;:::i;:::-;;1633:173:178;;;;;;;;;;-1:-1:-1;1633:173:178;;;;;:::i;:::-;;:::i;4918:365:46:-;;;;;;;;;;;;;:::i;:::-;;;2708:25:644;;;2696:2;2681:18;4918:365:46;2562:177:644;1523:374:187;;;;;;;;;;-1:-1:-1;1523:374:187;;;;;:::i;:::-;;:::i;5427:2252:170:-;;;;;;;;;;-1:-1:-1;5427:2252:170;;;;;:::i;:::-;;:::i;20209:3591:46:-;;;;;;:::i;:::-;;:::i;1962:347:184:-;;;;;;;;;;-1:-1:-1;1962:347:184;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;8157:99:329:-;;;;;;;;;;;;;:::i;23891:187:46:-;;;;;;:::i;:::-;;:::i;8481:184:329:-;;;;;;;;;;-1:-1:-1;8481:184:329;;;;;:::i;:::-;;:::i;2549:435:184:-;;;;;;;;;;-1:-1:-1;2549:435:184;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;5139:32:644;;;5121:51;;5220:6;5208:19;;;5203:2;5188:18;;5181:47;5094:18;2549:435:184;4949:285:644;918:134:209;;;;;;;;;;-1:-1:-1;918:134:209;;;;;:::i;:::-;;:::i;3718:256:184:-;;;;;;;;;;-1:-1:-1;3718:256:184;;;;;:::i;:::-;;:::i;10745:150:46:-;;;;;;;;;;-1:-1:-1;10745:150:46;;;;;:::i;:::-;;:::i;1236:233:187:-;;;;;;;;;;-1:-1:-1;1236:233:187;;;;;:::i;:::-;;:::i;1626:228:182:-;;;;;;;;;;-1:-1:-1;1626:228:182;;;;;:::i;:::-;;:::i;8305:192:170:-;;;;;;;;;;-1:-1:-1;8305:192:170;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;6165:263:46:-;;;;;;;;;;-1:-1:-1;6165:263:46;;;;;:::i;:::-;;:::i;2435:2895:170:-;;;;;;;;;;-1:-1:-1;2435:2895:170;;;;;:::i;:::-;;:::i;3016:319:44:-;;;;;;;;;;-1:-1:-1;3016:319:44;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1155:1217:170:-;;;;;;:::i;:::-;;:::i;1353:104:178:-;;;;;;;;;;;;;:::i;1607:188:168:-;;;;;;;;;;-1:-1:-1;1607:188:168;;;;;:::i;:::-;;:::i;9529:126:46:-;;;;;;;;;;;;;:::i;2364:217:44:-;;;;;;;;;;-1:-1:-1;2364:217:44;;;;;:::i;:::-;;:::i;4948:288:184:-;;;;;;;;;;-1:-1:-1;4948:288:184;;;;;:::i;:::-;;:::i;16989:255:46:-;;;;;;;;;;-1:-1:-1;16989:255:46;;;;;:::i;:::-;;:::i;7930:145:329:-;;;;;;;;;;;;;:::i;8579:270:170:-;;;;;;;;;;-1:-1:-1;8579:270:170;;;;;:::i;:::-;;:::i;3094:180:184:-;;;;;;;;;;;;;:::i;24659:405:46:-;;;;;;:::i;:::-;;:::i;1411:579:44:-;;;;;;;;;;-1:-1:-1;1411:579:44;;;;;:::i;:::-;;:::i;:::-;;;;;;12911:13:644;;-1:-1:-1;;;;;12907:39:644;12889:58;;13007:4;12995:17;;;12989:24;-1:-1:-1;;;;;12985:49:644;12963:20;;;12956:79;13105:4;13093:17;;;13087:24;13080:32;13073:40;13051:20;;;13044:70;13174:4;13162:17;;;13156:24;13182:8;13152:39;13130:20;;;13123:69;;;;12876:3;12861:19;;12676:522;7767:473:170;;;;;;;;;;;;;:::i;2909:1115:329:-;;;;;;;;;;-1:-1:-1;2909:1115:329;;;;;:::i;:::-;;:::i;755:172:170:-;;;;;;;;;;;;;:::i;:::-;;;;13377:25:644;;;13433:2;13418:18;;13411:34;;;;13350:18;755:172:170;13203:248:644;4509:93:329;;;;;;;;;;-1:-1:-1;4495:1:329;4509:93;8157:99;2173:138:168;;;;;;;;;;;;;:::i;17394:186:46:-;;;;;;;;;;-1:-1:-1;17394:186:46;;;;;:::i;:::-;;:::i;1943:375:187:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;4055:301:329:-;4230:4;4257:36;4281:11;4257:23;:36::i;:::-;:92;;;-1:-1:-1;;;;;;;;;;4297:52:329;;;4257:92;4250:99;4055:301;-1:-1:-1;;4055:301:329:o;9336:122:46:-;9390:13;9422:23;:21;:23::i;:::-;:29;;9415:36;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9336:122;:::o;1091:126:182:-;1153:7;1179:21;:19;:21::i;:::-;:31;-1:-1:-1;;;;;1179:31:182;;1091:126;-1:-1:-1;1091:126:182:o;16415:247:46:-;16491:7;16515:16;16523:7;16515;:16::i;:::-;16510:73;;16533:50;-1:-1:-1;;;16533:7:46;:50::i;:::-;16601:23;:21;:23::i;:::-;:48;;;;:39;;:48;;-1:-1:-1;16601:48:46;;;:54;-1:-1:-1;;;;;16601:54:46;;16415:247::o;16143:122::-;16231:27;16240:2;16244:7;16253:4;16231:8;:27::i;:::-;16143:122;;:::o;1633:173:178:-;1703:14;:12;:14::i;:::-;1698:70;;1733:24;;-1:-1:-1;;;1733:24:178;;;;;;;:::i;:::-;;;;;;;;1698:70;1777:22;1789:9;1777:11;:22::i;:::-;1633:173;:::o;4918:365:46:-;4979:7;4495:1:329;5212:23:46;:21;:23::i;:::-;:36;;;5172:23;:21;:23::i;:::-;:37;:76;:94;;4918:365;-1:-1:-1;4918:365:46:o;1523:374:187:-;1593:23;:21;:23::i;:::-;1585:83;;;;-1:-1:-1;;;1585:83:187;;;;;;;:::i;:::-;1686:45;1727:3;1686:29;:27;:29::i;:::-;:33;:40;:45::i;:::-;1678:109;;;;-1:-1:-1;;;1678:109:187;;17065:2:644;1678:109:187;;;17047:21:644;17104:2;17084:18;;;17077:30;17143:34;17123:18;;;17116:62;-1:-1:-1;;;17194:18:644;;;17187:49;17253:19;;1678:109:187;16863:415:644;1678:109:187;1805:29;:27;:29::i;:::-;:43;;;;:38;;;;;:43;;;;;1798:50;;;1805:43;1798:50;;;1805:43;1798:50;;1805:43;1798:50;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;-1:-1:-1;;1864:26:187;;1886:3;;-1:-1:-1;1864:26:187;;-1:-1:-1;1864:26:187;;;1523:374;:::o;5427:2252:170:-;5666:15;5693:39;5735:14;:12;:14::i;:::-;:29;:54;;;:40;;;;:54;;;;;;;;;5693:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5693:96:170;;;;;;;;;;;;5735:54;5693:96;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5693:96:170;;;;-1:-1:-1;;;5820:40:170;;;;5891:31;;;;5956:26;;;;5997:28;;;;5693:96;;-1:-1:-1;5820:40:170;;5891:31;;5956:26;5997:42;5993:515;;6072:425;6108:21;:15;;:21;:::i;:::-;6072:425;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6147:28:170;;;;;;-1:-1:-1;6266:8:170;;6300:38;;;;;6364:29;;;;;6419:24;;;;;;;;:::i;:::-;6224:241;;-1:-1:-1;;;;;;18068:2:644;18104:15;;;18100:24;;6224:241:170;;;18088:37:644;18141:12;;;18134:28;;;;18178:12;;;18171:28;;;;18233:15;;;18229:24;18215:12;;;18208:46;18270:13;;6224:241:170;;;;;;;;;;;;6193:290;;;;;;6072:18;:425::i;:::-;-1:-1:-1;6055:442:170;-1:-1:-1;5993:515:170;6522:10;6518:534;;;6561:38;;;;:129;;6680:10;6561:129;;;6623:15;:38;;;6561:129;6548:142;;-1:-1:-1;;6717:15:170;:29;;;:50;;:127;;6834:10;6717:127;;;6786:15;:29;;;6717:127;6704:140;;-1:-1:-1;;6874:15:170;:29;;;:50;;:92;;;;-1:-1:-1;6964:1:170;6928:24;;;;;;;;:::i;:::-;-1:-1:-1;;;;;6928:38:170;;;6874:92;:167;;7028:13;6874:167;;;6985:24;;;;;;;;:::i;:::-;6858:183;;6518:534;7062:29;7094:14;:12;:14::i;:::-;:29;;:51;;:65;7146:12;7094:65;;;;;;;;;;;:75;7160:8;-1:-1:-1;;;;;7094:75:170;-1:-1:-1;;;;;7094:75:170;;;;;;;;;;;;;7062:107;;7197:13;-1:-1:-1;;;;;7184:26:170;:9;-1:-1:-1;;;;;7184:26:170;;;:58;;;;7232:10;7214:14;:28;;7184:58;7180:115;;;7258:26;;-1:-1:-1;;;7258:26:170;;18496:2:644;7258:26:170;;;18478:21:644;18535:2;18515:18;;;18508:30;-1:-1:-1;;;18554:18:644;;;18547:46;18610:18;;7258:26:170;18294:340:644;7180:115:170;7309:14;;;:66;;-1:-1:-1;7364:10:170;7328:33;7340:21;7328:9;:33;:::i;:::-;:46;7309:66;7305:111;;;7391:14;;-1:-1:-1;;;7391:14:170;;;;;;19106:2:644;19088:21;;;19145:1;19125:18;;;19118:29;-1:-1:-1;;;19178:2:644;19163:18;;19156:34;19222:2;19207:18;;18904:327;7305:111:170;7475:17;:36;;;7463:9;7429:17;:31;;;:43;;;;:::i;:::-;:82;7425:133;;;7527:20;;-1:-1:-1;;;7527:20:170;;19438:2:644;7527:20:170;;;19420:21:644;19477:2;19457:18;;;19450:30;-1:-1:-1;;;19496:18:644;;;19489:40;19546:18;;7527:20:170;19236:334:644;7425:133:170;7572:32;;7607:15;-1:-1:-1;7568:105:170;;;7638:24;;-1:-1:-1;;;7638:24:170;;19777:2:644;7638:24:170;;;19759:21:644;19816:2;19796:18;;;19789:30;-1:-1:-1;;;19835:18:644;;;19828:44;19889:18;;7638:24:170;19575:338:644;7568:105:170;5683:1996;;;;;5427:2252;;;;;;;;:::o;20209:3591:46:-;20346:27;20376;20395:7;20376:18;:27::i;:::-;-1:-1:-1;;;;;20528:22:46;;;;20346:57;;-1:-1:-1;20586:45:46;;;;20582:95;;20633:44;-1:-1:-1;;;20633:7:46;:44::i;:::-;20689:27;20718:23;20745:35;20772:7;20745:26;:35::i;:::-;20688:92;;;;20877:68;20902:15;20919:4;20925:19;41770:10;;41684:103;20925:19;-1:-1:-1;;;;;18791:32:46;;;18637:28;;18918:20;;18940:30;;18915:56;;18341:646;20877:68;20872:188;;20964:43;20981:4;41770:10;17394:186;:::i;20964:43::-;20959:101;;21009:51;-1:-1:-1;;;21009:7:46;:51::i;:::-;21071:43;21093:4;21099:2;21103:7;21112:1;21071:21;:43::i;:::-;21203:15;21200:157;;;21341:1;21320:19;21313:30;21200:157;21729:23;:21;:23::i;:::-;-1:-1:-1;;;;;21729:48:46;;;;;;:42;;;;;:48;;;;;21727:50;;-1:-1:-1;;21727:50:46;;;21821:23;:21;:23::i;:::-;-1:-1:-1;;;;;21821:46:46;;;;;;:42;;;;;:46;;;;;21819:48;;;;;;22184:143;21821:46;-1:-1:-1;;;22184:18:46;:143::i;:::-;22131:23;:21;:23::i;:::-;:50;;;;:41;;;;;:50;;;;;:196;-1:-1:-1;;;22444:47:46;;22440:689;;22548:1;22538:11;;22669:23;:21;:23::i;:::-;:54;;;;:41;;;;;:54;;;;;;22665:450;;22829:23;:21;:23::i;:::-;:37;22814:52;;22810:287;;23055:19;22998:23;:21;:23::i;:::-;:54;;;;:41;;;;;:54;;;;;:76;22810:287;22498:631;22440:689;-1:-1:-1;;;;;23257:20:46;;23628:7;23257:20;23560:4;-1:-1:-1;;;;;;;;;;;23238:16:46;;23371:292;23686:13;23682:58;;23701:39;-1:-1:-1;;;23701:7:46;:39::i;:::-;20336:3464;;;;20209:3591;;;:::o;1962:347:184:-;2099:16;2117:21;2155:17;2174:11;2189:31;2212:7;2189:22;:31::i;:::-;2154:66;;-1:-1:-1;2154:66:184;;-1:-1:-1;2154:66:184;;;-1:-1:-1;2296:6:184;2277:15;2154:66;2277:9;:15;:::i;:::-;2276:26;;;;:::i;:::-;2260:42;;2144:165;;1962:347;;;;;:::o;8157:99:329:-;8209:7;8235:14;:12;:14::i;:::-;8228:21;;8157:99;:::o;23891:187:46:-;24032:39;24049:4;24055:2;24059:7;24032:39;;;;;;;;;;;;:16;:39::i;:::-;23891:187;;;:::o;8481:184:329:-;8638:20;8644:7;8653:4;8638:5;:20::i;2549:435:184:-;2629:7;2638:6;2656:34;2693:17;:15;:17::i;:::-;:47;;;;:37;;;;:47;;;;;;;;;2656:84;;;;;;;;;;-1:-1:-1;;;;;2656:84:184;;;;;;;;;;;;-1:-1:-1;2770:39:184;:207;;2922:25;;2956:19;;;;2770:207;;;2829:17;:15;:17::i;:::-;:34;-1:-1:-1;;;;;2829:34:184;2872:17;:15;:17::i;:::-;:28;-1:-1:-1;;;2872:28:184;;;;2770:207;2751:226;;;;;2549:435;;;:::o;918:134:209:-;-1:-1:-1;;;;;1017:28:209;994:4;1017:28;;;:17;:28;;;;;;;;;918:134::o;3718:256:184:-;3830:20;:18;:20::i;:::-;3825:76;;3866:24;;-1:-1:-1;;;3866:24:184;;;;;;;:::i;3825:76::-;3911:56;3936:17;3955:11;3911:24;:56::i;10745:150:46:-;10817:7;10859:27;10878:7;10859:18;:27::i;1236:233:187:-;1341:23;:21;:23::i;:::-;1333:83;;;;-1:-1:-1;;;1333:83:187;;;;;;;:::i;:::-;1426:36;1448:8;1458:3;1426:21;:36::i;1626:228:182:-;1716:29;:27;:29::i;:::-;1711:85;;1761:24;;-1:-1:-1;;;1761:24:182;;;;;;;:::i;1711:85::-;1805:42;1832:14;1805:26;:42::i;8305:192:170:-;8381:31;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8381:31:170;8436:14;:12;:14::i;:::-;:29;:54;;;:40;;;;:54;;;;;;;;;8424:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8424:66:170;;;;;;;;;;;;8436:54;8424:66;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8305:192;;;:::o;6165:263:46:-;6237:7;-1:-1:-1;;;;;6260:19:46;;6256:69;;6281:44;-1:-1:-1;;;6281:7:46;:44::i;:::-;-1:-1:-1;;;;;6342:23:46;:21;:23::i;:::-;:42;;:49;6385:5;-1:-1:-1;;;;;6342:49:46;-1:-1:-1;;;;;6342:49:46;;;;;;;;;;;;;:79;6335:86;;6165:263;;;:::o;2435:2895:170:-;2600:24;:22;:24::i;:::-;2595:80;;2640:24;;-1:-1:-1;;;2640:24:170;;;;;;;:::i;2595:80::-;2685:26;2714:14;:12;:14::i;:::-;:44;;-1:-1:-1;2714:29:170;2797:14;:12;:14::i;:::-;:35;;;;-1:-1:-1;3221:18:170;3249:108;;;;3307:39;3328:18;3307;:39;:::i;:::-;3291:55;;3249:108;3405:11;3367:14;:12;:14::i;:::-;:35;;:56;3480:13;3433:14;:12;:14::i;:::-;:60;:29;;3549:688;3569:22;;;3549:688;;;3620:6;;;:69;;;3660:11;;3672:1;3660:14;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:29;3630:59;;3620:69;3612:84;;;;-1:-1:-1;;;3612:84:170;;21020:2:644;3612:84:170;;;21002:21:644;21059:1;21039:18;;;21032:29;-1:-1:-1;;;21077:18:644;;;21070:32;21119:18;;3612:84:170;20818:325:644;3612:84:170;3711:28;3742:14;:12;:14::i;:::-;:40;;:29;3783:17;3799:1;3783:13;:17;:::i;:::-;3742:59;;;;;;;;;;;:73;;;3711:104;;3856:11;;3868:1;3856:14;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:33;;;3833:20;:56;3829:123;;;3909:28;;-1:-1:-1;;;3909:28:170;;21350:2:644;3909:28:170;;;21332:21:644;21389:2;21369:18;;;21362:30;-1:-1:-1;;;21408:18:644;;;21401:48;21466:18;;3909:28:170;21148:342:644;3829:123:170;4028:11;;4040:1;4028:14;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;3966;:12;:14::i;:::-;:40;;:29;4007:17;4023:1;4007:13;:17;:::i;:::-;3966:59;;;;;;;;;;;:76;;;;;;:::i;:::-;;;;4132:20;4056:14;:12;:14::i;:::-;:40;;:29;4097:17;4113:1;4097:13;:17;:::i;:::-;4056:59;;;;;;;;;;;-1:-1:-1;4056:59:170;:73;;:96;4197:11;;4209:1;4197:14;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:29;;-1:-1:-1;3593:3:170;;-1:-1:-1;3593:3:170;;;:::i;:::-;;;;3549:688;;;;4777:22;4773:476;;;4832:18;4815:144;4856:13;4852:1;:17;4815:144;;;4901:14;:12;:14::i;:::-;:29;:43;;;:40;;;;:43;;;;;4894:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4894:50:170;;;;;;;4901:29;4894:50;:::i;:::-;;;4871:3;;;;;:::i;:::-;;;;4815:144;;;;4773:476;;;4993:39;;;4989:250;;;5069:11;5052:173;5093:18;5089:1;:22;5052:173;;;5147:14;:12;:14::i;:::-;:40;;:29;5188:17;5204:1;5188:13;:17;:::i;:::-;5147:59;;;;;;;;;;;-1:-1:-1;5147:59:170;;;5140:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5140:66:170;;;5147:59;5140:66;;;;-1:-1:-1;5140:66:170;:::i;:::-;;;5113:3;;;;;:::i;:::-;;;;5052:173;;;;4989:250;5264:59;5287:11;;5300:22;5264:59;;;;;;;;:::i;:::-;;;;;;;;2585:2745;;;;2435:2895;;;:::o;3016:319:44:-;3094:16;4495:1:329;3122:13:44;3178:14;:12;:14::i;:::-;3163:29;;3202:25;3250:4;3241:5;:13;3237:66;;3267:36;3284:5;3291;3298:4;3267:16;:36::i;:::-;3256:47;;3237:66;3320:8;3016:319;-1:-1:-1;;;;3016:319:44:o;1155:1217:170:-;1504:25;1532:27;:25;:27::i;:::-;1504:55;;1570:103;1582:17;1601:16;:14;:16::i;:::-;1619:9;1630;1641:14;1657:15;1570:11;:103::i;:::-;;1795:9;1718:14;:12;:14::i;:::-;:29;:59;;;:40;;;;:59;;;;;:73;;;:86;;:73;;:29;:86;;;;;:::i;:::-;;;;-1:-1:-1;1906:9:170;;-1:-1:-1;1814:14:170;:12;:14::i;:::-;:29;:70;;;:51;;;;:70;;;;;;1885:16;:14;:16::i;:::-;-1:-1:-1;;;;;1814:88:170;-1:-1:-1;;;;;1814:88:170;;;;;;;;;;;;;:101;;;;;;;:::i;:::-;;;;-1:-1:-1;1972:70:170;;-1:-1:-1;2001:1:170;2005:9;2016;2027:14;1972:20;:70::i;:::-;2101:20;2124:44;2147:9;2158;2124:22;:44::i;:::-;2101:67;;2235:9;-1:-1:-1;;;;;2184:86:170;2217:16;:14;:16::i;:::-;-1:-1:-1;;;;;2184:86:170;2198:17;2184:86;2246:12;2260:9;2184:86;;;;;;13377:25:644;;;13433:2;13418:18;;13411:34;13365:2;13350:18;;13203:248;2184:86:170;;;;;;;;1398:974;;1155:1217;;;;;;:::o;1353:104:178:-;1400:7;1426:17;:15;:17::i;1607:188:168:-;1684:20;:18;:20::i;:::-;1679:76;;1720:24;;-1:-1:-1;;;1720:24:168;;;;;;;:::i;1679:76::-;1765:23;1783:4;1765:17;:23::i;9529:126:46:-;9585:13;9617:23;:21;:23::i;:::-;:31;;9610:38;;;;;:::i;2364:217:44:-;2503:16;2538:36;2555:5;2562;2569:4;2538:16;:36::i;:::-;2531:43;;2364:217;;;;;;:::o;4948:288:184:-;5095:20;:18;:20::i;:::-;5090:76;;5131:24;;-1:-1:-1;;;5131:24:184;;;;;;;:::i;5090:76::-;5176:53;5202:8;5212:10;5224:4;5176:25;:53::i;16989:255:46:-;17159:8;17083:23;:21;:23::i;:::-;41770:10;17083:63;;;;:42;;;;;:63;;;;;;;;-1:-1:-1;;;;;17083:73:46;;;;;;;;;;;;:84;;-1:-1:-1;;17083:84:46;;;;;;;;;;;17182:55;;661:14:644;;654:22;636:41;;17083:73:46;;41770:10;;17182:55;;609:18:644;17182:55:46;;;;;;;16989:255;;:::o;7930:145:329:-;7976:7;4495:1;8026:14;:12;:14::i;:::-;:32;8019:39;;7930:145;:::o;8579:270:170:-;8698:29;8767:14;:12;:14::i;:::-;:29;:65;;;:51;;:65;;;;;;;;-1:-1:-1;;;;;8767:75:170;;;;;;;;-1:-1:-1;8767:75:170;;;;8579:270::o;3094:180:184:-;3159:7;3168:6;3194:17;:15;:17::i;:::-;:34;-1:-1:-1;;;;;3194:34:184;3237:17;:15;:17::i;:::-;:28;3186:81;;-1:-1:-1;;;3237:28:184;;;;;;-1:-1:-1;3186:81:184;-1:-1:-1;3094:180:184:o;24659:405:46:-;24828:31;24841:4;24847:2;24851:7;24828:12;:31::i;:::-;-1:-1:-1;;;;;24873:14:46;;;:19;24869:189;;24911:56;24942:4;24948:2;24952:7;24961:5;24911:30;:56::i;:::-;24906:152;;24987:56;-1:-1:-1;;;24987:7:46;:56::i;:::-;24659:405;;;;:::o;1411:579:44:-;1535:31;;:::i;:::-;4495:1:329;1610:7:44;:26;1606:368;;1670:14;:12;:14::i;:::-;1660:7;:24;1656:304;;;1840:51;1848:32;1872:7;1848:23;:32::i;:::-;1840:51;;-1:-1:-1;;1882:9:44;;;;1840:51;;;1920:21;1933:7;1920:12;:21::i;1656:304::-;1411:579;;;:::o;7767:473:170:-;7825:7;7862:9;7921:14;:12;:14::i;:::-;:35;;;7874:14;:12;:14::i;:::-;:44;:82;;;;:::i;:::-;7862:94;;7844:358;7974:14;:12;:14::i;:::-;:44;7970:48;;7844:358;;;8083:14;:12;:14::i;:::-;:40;;:29;8124:5;8128:1;8124;:5;:::i;:::-;8083:47;;;;;;;;;;;:62;;;8064:15;:81;8060:132;;8172:5;8176:1;8172;:5;:::i;:::-;8165:12;;;7767:473;:::o;8060:132::-;8032:3;;;;:::i;:::-;;;;7844:358;;;-1:-1:-1;8212:21:170;;-1:-1:-1;;;8212:21:170;;28475:2:644;8212:21:170;;;28457::644;28514:2;28494:18;;;28487:30;-1:-1:-1;;;28533:18:644;;;28526:41;28584:18;;8212:21:170;28273:335:644;2909:1115:329;3064:13;3098:17;3106:8;3098:7;:17::i;:::-;3093:62;;3131:13;;-1:-1:-1;;;3131:13:329;;28815:2:644;3131:13:329;;;28797:21:644;28854:1;28834:18;;;28827:29;-1:-1:-1;;;28872:18:644;;;28865:33;28915:18;;3131:13:329;28613:326:644;3093:62:329;3186:13;3202:17;3210:8;3202:7;:17::i;:::-;3186:33;;3229:13;3257:14;3294:4;-1:-1:-1;;;;;3274:49:329;;:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3257:68;-1:-1:-1;;;;;;3339:20:329;;;3335:175;;3383:35;;-1:-1:-1;;;3383:35:329;;-1:-1:-1;;;;;3383:28:329;;;;;:35;;3412:5;;3383:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3375:43;;3335:175;;;3457:42;;-1:-1:-1;;;3457:42:329;;3477:4;;3457:35;;:42;;3493:5;;3457:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3449:50;;3335:175;3602:20;3625:42;:29;:27;:29::i;:::-;:40;:42::i;:::-;3602:65;-1:-1:-1;3677:16:329;;;3735:221;3759:3;:10;3755:1;:14;3735:221;;;3793:10;3814:3;3818:1;3814:6;;;;;;;;:::i;:::-;;;;;;;3806:15;;3793:28;;3846:5;3840:2;:11;;:26;;;;;3861:5;3855:2;:11;;3840:26;3836:110;;;3897:3;3901:1;3897:6;;;;;;;;:::i;:::-;;;;;;;3886:17;;3929:2;3921:10;;3836:110;-1:-1:-1;3771:6:329;3776:1;3771:6;;:::i;:::-;;;3735:221;;;;3972:45;3998:8;4008;3972:25;:45::i;:::-;3965:52;2909:1115;-1:-1:-1;;;;;;;;2909:1115:329:o;755:172:170:-;802:7;811;838:14;:12;:14::i;:::-;:44;884:14;:12;:14::i;:::-;:35;;;830:90;;884:35;;-1:-1:-1;755:172:170;-1:-1:-1;755:172:170:o;2173:138:168:-;2234:13;2266:26;:24;:26::i;:::-;2259:45;;;;;:::i;17394:186:46:-;17491:4;17514:23;:21;:23::i;:::-;-1:-1:-1;;;;;17514:49:46;;;;;;;:42;;;;;:49;;;;;;;;:59;;;;;;;;;;-1:-1:-1;17514:59:46;;;;;17394:186::o;1943:375:187:-;1998:38;2048:20;2071:42;:29;:27;:29::i;:42::-;2048:65;;2161:3;:10;-1:-1:-1;;;;;2134:38:187;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;2123:49;;2188:9;2183:129;2207:3;:10;2203:1;:14;2183:129;;;2255:29;:27;:29::i;:::-;:38;;:46;2294:3;2298:1;2294:6;;;;;;;;:::i;:::-;;;;;;;2255:46;;;;;;;;;;;2241:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:8;2250:1;2241:11;;;;;;;;:::i;:::-;;;;;;;;;;:60;2219:6;2224:1;2219:6;;:::i;:::-;;;2183:129;;;;2038:280;1943:375;:::o;8452:630:46:-;8537:4;-1:-1:-1;;;;;;;;;8855:25:46;;;;:101;;-1:-1:-1;;;;;;;;;;8931:25:46;;;8855:101;:177;;;-1:-1:-1;;;;;;;;9007:25:46;-1:-1:-1;;;9007:25:46;;8452:630::o;1793:159:45:-;1740:46;;1793:159::o;2275:141:182:-;2329:36;2384:25;:23;:25::i;17829:408:46:-;17894:11;17940:7;4495:1:329;17921:26:46;17917:314;;17977:23;:21;:23::i;:::-;:37;17967:47;;17963:258;;;18034:14;18066:84;18083:23;:21;:23::i;:::-;:50;;;;:41;;;;;:50;;;;;;;-1:-1:-1;18073:66:46;18066:84;;18141:9;;;:::i;:::-;;;18066:84;;;-1:-1:-1;;;18177:24:46;:29;;17829:408;-1:-1:-1;;17829:408:46:o;43654:160::-;43753:13;43747:4;43740:27;43793:4;43787;43780:18;35086:484;35210:13;35226:16;35234:7;35226;:16::i;:::-;35210:32;;35257:13;:45;;;;-1:-1:-1;41770:10:46;-1:-1:-1;;;;;35274:28:46;;;;35257:45;35253:198;;;35321:44;35338:5;41770:10;17394:186;:::i;35321:44::-;35316:135;;35385:51;-1:-1:-1;;;35385:7:46;:51::i;:::-;35518:2;35461:23;:21;:23::i;:::-;:48;;;;:39;;;;;:48;;;;;;:59;;-1:-1:-1;;;;;;35461:59:46;-1:-1:-1;;;;;35461:59:46;;;;;;35535:28;35461:48;;35535:28;;;;;;;;;;35461:48;35535:28;35200:370;35086:484;;;:::o;6342:128:329:-;6398:4;6421:42;6398:4;6450:12;:10;:12::i;:::-;6421:8;:42::i;1921:208:178:-;1980:18;2001:17;:15;:17::i;:::-;:24;-1:-1:-1;;;;;2001:24:178;;-1:-1:-1;2062:9:178;2035:17;:15;:17::i;:::-;:36;;-1:-1:-1;;;;;;2035:36:178;-1:-1:-1;;;;;2035:36:178;;;;;;2087:35;;;;;;;;;;;-1:-1:-1;;2087:35:178;1970:159;1921:208;:::o;7250:138:329:-;7323:4;7346:35;2637:24;7368:12;:10;:12::i;3451:165:187:-;651:66;;8157:99:329:o;6109:129:236:-;6182:4;6205:26;6213:3;6225:5;6205:7;:26::i;9876:120:170:-;9923:29;9971:18;:16;:18::i;898:906:286:-;1019:4;;1067;1019;;1109:567;1133:5;:12;1129:1;:16;1109:567;;;1166:10;1175:1;1166:10;;:::i;:::-;;;1190:20;1213:5;1219:1;1213:8;;;;;;;;:::i;:::-;;;;;;;1190:31;;1256:12;1240;:28;1236:430;;1391:44;;;;;;29546:19:644;;;29581:12;;;29574:28;;;29618:12;;1391:44:286;;;;;;;;;;;;1381:55;;;;;;1366:70;;1236:430;;;1578:44;;;;;;29546:19:644;;;29581:12;;;29574:28;;;29618:12;;1578:44:286;;;;;;;;;;;;1568:55;;;;;;1553:70;;1650:1;1641:10;;;;;:::i;:::-;;;1236:430;-1:-1:-1;1147:3:286;;;;:::i;:::-;;;;1109:567;;;-1:-1:-1;1769:20:286;;;;;-1:-1:-1;;;;898:906:286:o;12282:2050:46:-;12349:14;12398:7;4495:1:329;12379:26:46;12375:1894;;12430:23;:21;:23::i;:::-;:50;;;;:41;;;;;:50;;;;;;;-1:-1:-1;12578:11:46;12574:1318;;12624:23;:21;:23::i;:::-;:37;12613:48;;12609:101;;12663:47;-1:-1:-1;;;12663:7:46;:47::i;:::-;13333:23;:21;:23::i;:::-;-1:-1:-1;;13375:9:46;;;13333:52;;;;:41;;;;;:52;;;;;;;;-1:-1:-1;13433:11:46;13429:25;;13257:621;;13429:25;-1:-1:-1;;;13480:24:46;;13476:48;;12282:2050;;;:::o;13476:48::-;13812:47;-1:-1:-1;;;13812:7:46;:47::i;:::-;13257:621;;12574:1318;-1:-1:-1;;;14214:24:46;;14210:48;;12282:2050;;;:::o;14210:48::-;14278:47;-1:-1:-1;;;14278:7:46;:47::i;19095:513::-;19194:27;19223:23;19262:53;19318:23;:21;:23::i;:::-;:48;;;;:39;;:48;;-1:-1:-1;;19318:48:46;;;;19566:26;;19318:48;;19566:26;;-1:-1:-1;19095:513:46:o;8719:569:329:-;9066:35;-1:-1:-1;;;;;;;;;;;9098:1:329;9066:8;:35::i;:::-;9065:36;:58;;;;-1:-1:-1;;;;;;9105:18:329;;;;9065:58;:78;;;;-1:-1:-1;;;;;;9127:16:329;;;;9065:78;9061:221;;;9164:29;-1:-1:-1;;;;;;;;;;;9188:4:329;9164:8;:29::i;:::-;9163:30;:62;;;;;9198:27;-1:-1:-1;;;;;;;;;;;9222:2:329;9198:8;:27::i;:::-;9197:28;9163:62;9159:113;;;9245:12;;-1:-1:-1;;;9245:12:329;;29843:2:644;9245:12:329;;;29825:21:644;29882:1;29862:18;;;29855:29;-1:-1:-1;;;29900:18:644;;;29893:32;29942:18;;9245:12:329;29641:325:644;14865:443:46;15271:11;15246:23;15242:41;15239:52;-1:-1:-1;;;;;15099:28:46;;;;15229:63;;14865:443::o;4590:125::-;4645:7;4671:23;:21;:23::i;:::-;:37;;4590:125;-1:-1:-1;4590:125:46:o;36132:3168::-;36211:27;36241;36260:7;36241:18;:27::i;:::-;36211:57;-1:-1:-1;36211:57:46;36279:12;;36399:35;36426:7;36399:26;:35::i;:::-;36342:92;;;;36449:13;36445:321;;;36568:68;36593:15;36610:4;41770:10;20877:24;:68::i;36568:::-;36563:192;;36659:43;36676:4;41770:10;17394:186;:::i;36659:43::-;36654:101;;36704:51;-1:-1:-1;;;36704:7:46;:51::i;:::-;36776;36798:4;36812:1;36816:7;36825:1;36776:21;:51::i;:::-;36916:15;36913:157;;;37054:1;37033:19;37026:30;36913:157;-1:-1:-1;;;;;37659:23:46;:21;:23::i;:::-;-1:-1:-1;;;;;37659:48:46;;;;;;:42;;;;;:48;;;;;:84;;;;;;;;38027:173;37659:48;-1:-1:-1;;;38027:18:46;:173::i;:::-;37974:23;:21;:23::i;:::-;:50;;;;:41;;;;;:50;;;;;:226;-1:-1:-1;;;38317:47:46;;38313:689;;38421:1;38411:11;;38542:23;:21;:23::i;:::-;:54;;;;:41;;;;;:54;;;;;;38538:450;;38702:23;:21;:23::i;:::-;:37;38687:52;;38683:287;;38928:19;38871:23;:21;:23::i;:::-;:54;;;;:41;;;;;:54;;;;;:76;38683:287;38371:631;38313:689;39027:35;;39054:7;;39050:1;;-1:-1:-1;;;;;39027:35:46;;;-1:-1:-1;;;;;;;;;;;39027:35:46;39050:1;;39027:35;39245:23;:21;:23::i;:::-;:36;;;;:38;;;;;;;-1:-1:-1;;;;;;36132:3168:46:o;5766:129:184:-;372:66;;8157:99:329:o;4061:370:184:-;4180:6;4166:11;:20;4162:76;;;4202:25;;-1:-1:-1;;;4202:25:184;;;;;;;:::i;4162:76::-;4285:17;4248;:15;:17::i;:::-;:54;;-1:-1:-1;;;;;;4248:54:184;-1:-1:-1;;;;;4248:54:184;;;;;;;;;;4350:11;4312:17;:15;:17::i;:::-;:50;;;;;;;-1:-1:-1;;;4312:50:184;-1:-1:-1;;;;4312:50:184;;;;;;;;;4378:46;;2708:25:644;;;-1:-1:-1;;;;;4378:46:184;;;;;2696:2:644;2681:18;4378:46:184;;;;;;;;4061:370;;:::o;2359:503:187:-;2469:42;2507:3;2469:29;:27;:29::i;:::-;:33;:37;:42::i;:::-;2461:106;;;;-1:-1:-1;;;2461:106:187;;30517:2:644;2461:106:187;;;30499:21:644;30556:2;30536:18;;;30529:30;30595:34;30575:18;;;30568:62;-1:-1:-1;;;30646:18:644;;;30639:49;30705:19;;2461:106:187;30315:415:644;2461:106:187;2624:36;;;;;;;;2645:3;2624:36;;;;2650:9;2624:36;;;:::i;:::-;;;2578:29;:27;:29::i;:::-;:43;;;;:38;;;;;:43;;;;;;;;:82;;;;;;;;;;;;:43;;:82;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2578:82:187;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2578:82:187;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2578:82:187;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2711:3:187;;-1:-1:-1;2676:179:187;;-1:-1:-1;2728:14:187;;-1:-1:-1;2728:9:187;;-1:-1:-1;2728:9:187;:14;:::i;:::-;2756:21;;;;:9;:21;:::i;:::-;2791:18;;;;:9;:18;:::i;:::-;2823:22;;;;:9;:22;:::i;:::-;2676:179;;;;;;;;;;;;;:::i;1936:287:182:-;-1:-1:-1;;;;;2019:28:182;;2015:86;;2063:27;;-1:-1:-1;;;2063:27:182;;32810:2:644;2063:27:182;;;32792:21:644;32849:2;32829:18;;;32822:30;-1:-1:-1;;;32868:18:644;;;32861:47;32925:18;;2063:27:182;32608:341:644;2015:86:182;2144:14;2110:21;:19;:21::i;:::-;:48;;-1:-1:-1;;;;;;2110:48:182;-1:-1:-1;;;;;2110:48:182;;;;;;2173:43;;;;;;;;-1:-1:-1;;2173:43:182;1936:287;:::o;3583:4263:44:-;3705:16;3770:4;3761:5;:13;3757:54;;3776:35;-1:-1:-1;;;3776:7:44;:35::i;:::-;4495:1:329;3887:5:44;:23;3883:85;;;4495:1:329;3930:23:44;;3883:85;3981:17;4001:14;:12;:14::i;:::-;3981:34;;4091:9;4083:4;:17;4079:72;;4127:9;4120:16;;4079:72;4164:25;4203;4231:16;4241:5;4231:9;:16::i;:::-;4280:12;;;4437:35;;;;-1:-1:-1;4503:22:44;;4499:3302;;4722:17;4713:5;4706:4;:12;:33;4702:112;;4790:5;4783:4;:12;4763:32;;4702:112;4933:4;4927:11;4915:23;;5183:1;5164:17;5160:25;5157:1;5153:33;5143:8;5139:48;5133:4;5126:62;5359:31;5393:26;5413:5;5393:19;:26::i;:::-;5359:60;;5437:25;5729:9;:16;;;5724:98;;-1:-1:-1;5789:14:44;;5724:98;5839:19;6026:1616;6063:19;6076:5;6063:12;:19::i;:::-;6051:31;;6167:4;6156:9;6152:20;6146:27;6262:1;6257:893;;;;7466:1;7445:22;;6139:1354;;6257:893;6536:9;6530:16;6527:121;;;6608:9;6602:16;6581:37;;6527:121;6935:5;6916:17;6912:29;6908:2;6904:38;6894:230;;7010:1;6997:11;6993:19;6978:34;;7088:5;7073:11;7070:1;7066:19;7056:8;7052:34;7045:49;6894:230;6139:1354;7538:1;7531:5;7527:13;7518:22;;7599:4;7590:5;:13;:49;;;;7622:17;7607:11;:32;7590:49;7588:52;6026:1616;;7740:29;;-1:-1:-1;;4499:3302:44;-1:-1:-1;7821:8:44;;3583:4263;-1:-1:-1;;;;;;3583:4263:44:o;9292:237:170:-;;;;;;;:::o;9294:111:329:-;9360:7;9386:12;:10;:12::i;4875:840::-;5075:19;5071:103;;5118:9;:14;5110:33;;;;-1:-1:-1;;;5110:33:329;;33156:2:644;5110:33:329;;;33138:21:644;33195:1;33175:18;;;33168:29;-1:-1:-1;;;33213:18:644;;;33206:36;33259:18;;5110:33:329;32954:329:644;5110:33:329;5157:7;;5071:103;5184:18;5205:33;5224:14;5205:16;:33;:::i;:::-;5184:54;-1:-1:-1;5249:18:329;-1:-1:-1;;;;;5281:45:329;;408:42:284;5281:45:329;5277:176;;;-1:-1:-1;5358:9:329;:23;;5277:176;;;-1:-1:-1;5428:9:329;:14;5277:176;5470:13;5462:28;;;;-1:-1:-1;;;5462:28:329;;33490:2:644;5462:28:329;;;33472:21:644;33529:1;33509:18;;;33502:29;-1:-1:-1;;;33547:18:644;;;33540:32;33589:18;;5462:28:329;33288:325:644;5462:28:329;5501:21;-1:-1:-1;;;;;5525:35:329;;;:84;;5588:21;5525:84;;;5563:22;:20;:22::i;:::-;5501:108;;5620:88;5657:9;5668:12;:10;:12::i;:::-;5682:13;5697:10;5620:36;:88::i;5768:248::-;5895:21;5948:14;:12;:14::i;:::-;5932:30;;5972:37;5982:3;5987:21;5972:9;:37::i;2177:129:178:-;2227:32;2278:21;:19;:21::i;1877:239:168:-;1943:21;1967:26;:24;:26::i;:::-;1943:62;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2056:4;2015:26;:24;:26::i;:::-;:45;;;;;;;;:::i;:::-;;2076:33;2095:7;2104:4;2076:33;;;;;;;:::i;:::-;;;;;;;;1933:183;1877:239;:::o;5338:380:184:-;5485:6;5478:4;:13;5474:69;;;5507:25;;-1:-1:-1;;;5507:25:184;;;;;;;:::i;5474:69::-;5603:49;;;;;;;;5628:10;-1:-1:-1;;;;;5603:49:184;;;;;5645:4;5603:49;;;5553:17;:15;:17::i;:::-;:47;;;;:37;;;;:47;;;;;;;;;:99;;;;-1:-1:-1;;;;;;5553:99:184;-1:-1:-1;;;;;5553:99:184;;;;;;;;;;;;;;;;5668:43;2708:25:644;;;5668:43:184;;;;5553:47;;5668:43;;2681:18:644;5668:43:184;;;;;;;5338:380;;;:::o;27090:693:46:-;27280:99;;-1:-1:-1;;;27280:99:46;;27248:4;;-1:-1:-1;;;;;27280:56:46;;;;;:99;;41770:10;;27358:4;;27364:7;;27373:5;;27280:99;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;27280:99:46;;;;;;;;-1:-1:-1;;27280:99:46;;;;;;;;;;;;:::i;:::-;;;27264:513;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;27566:13:46;;27562:113;;27604:56;-1:-1:-1;;;27604:7:46;:56::i;:::-;27745:6;27739:13;27730:6;27726:2;27722:15;27715:38;27264:513;-1:-1:-1;;;;;;27433:75:46;-1:-1:-1;;;27433:75:46;;-1:-1:-1;27090:693:46;;;;;;:::o;11695:162::-;11774:4;11797:23;:21;:23::i;:::-;:48;;;;:41;;:48;;-1:-1:-1;11797:48:46;;;;:53;;;11695:162::o;11333:183::-;11401:21;;:::i;:::-;11441:68;11460:23;:21;:23::i;:::-;:48;;;;:41;;;;;:48;;;;;;11441:18;:68::i;7664:124:236:-;7727:16;7762:19;7770:3;7762:7;:19::i;2910:501:187:-;2997:13;3022:30;3055:29;:27;:29::i;:::-;:38;;:42;3094:2;3055:42;;;;;;;;;;;:51;;3022:84;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3136:268;3202:4;:9;;;3242:4;:16;;;3286:4;:13;;;3331:4;:17;;;3382:7;3136:41;:268::i;2370:156:168:-;770:66;;8157:99:329:o;445:188:182:-;484:18;;-1:-1:-1;;312:46:182;357:1;320:33;312:46;:::i;:::-;301:58;;;;;;2708:25:644;;2696:2;2681:18;;2562:177;301:58:182;;;;-1:-1:-1;;301:58:182;;;;;;;;;291:69;;301:58;291:69;;;;:95;;445:188;-1:-1:-1;;445:188:182:o;9411:140:329:-;9473:14;9506:38;:36;:38::i;7456:208::-;7530:4;7627:20;;;559:66:179;7627:20:329;;;;;;;;-1:-1:-1;;;;;7627:30:329;;;;;;;;;;;;;;;7456:208::o;2685:1388:236:-;2751:4;2888:19;;;:12;;;:19;;;;;;2922:15;;2918:1149;;3291:21;3315:14;3328:1;3315:10;:14;:::i;:::-;3363:18;;3291:38;;-1:-1:-1;3343:17:236;;3363:22;;3384:1;;3363:22;:::i;:::-;3343:42;;3417:13;3404:9;:26;3400:398;;3450:17;3470:3;:11;;3482:9;3470:22;;;;;;;;:::i;:::-;;;;;;;;;3450:42;;3621:9;3592:3;:11;;3604:13;3592:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;;3704:23;;;:12;;;:23;;;;;:36;;;3400:398;3876:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3968:3;:12;;:19;3981:5;3968:19;;;;;;;;;;;3961:26;;;4009:4;4002:11;;;;;;;2918:1149;4051:5;4044:12;;;;;533:180:170;572:18;;-1:-1:-1;;326:38:170;363:1;334:25;326:38;:::i;5818:123:236:-;5888:4;5911:23;5916:3;5928:5;5911:4;:23::i;508:385:284:-;659:12;655:49;;687:7;;655:49;-1:-1:-1;;;;;718:25:284;;408:42;718:25;714:173;;;759:37;783:3;788:7;759:23;:37::i;714:173::-;827:49;845:9;856:5;863:3;868:7;827:17;:49::i;34196:110:46:-;34272:27;34282:2;34286:8;34272:27;;;;;;;;;;;;:9;:27::i;859:183:178:-;898:18;;-1:-1:-1;;662:41:178;702:1;670:28;662:41;:::i;14426:361:46:-;14492:31;;:::i;:::-;-1:-1:-1;;;;;14535:41:46;;;;-1:-1:-1;;;;;2074:3:46;14620:33;;;14586:68;:24;;;:68;-1:-1:-1;;;14683:24:46;;:29;;14664:16;;;:48;2583:3;14751:28;;;;14722:19;;;:58;14535:9;14426:361::o;5469:109:236:-;5525:16;5560:3;:11;;5553:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5469:109;;;:::o;760:466:287:-;983:13;1008:29;1040:38;1055:8;1065:12;1040:14;:38::i;:::-;1008:70;;1088:17;1108:70;1127:4;1133:11;1146:15;1163:14;1108:18;:70::i;:::-;1088:90;;1195:24;1214:4;1195:18;:24::i;1058:401:209:-;1120:14;1150:30;1169:10;1150:18;:30::i;:::-;1146:307;;;-1:-1:-1;;;1352:14:209;1348:23;1335:37;1331:2;1327:46;1058:401;:::o;1146:307::-;-1:-1:-1;41770:10:46;;8157:99:329:o;2113:404:236:-;2176:4;4250:19;;;:12;;;:19;;;;;;2192:319;;-1:-1:-1;2234:23:236;;;;;;;;:11;:23;;;;;;;;;;;;;2414:18;;2392:19;;;:12;;;:19;;;;;;:40;;;;2446:11;;2192:319;-1:-1:-1;2495:5:236;2488:12;;2532:292:284;2714:12;2732:2;-1:-1:-1;;;;;2732:7:284;2748:5;2732:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2713:46;;;2777:7;2769:48;;;;-1:-1:-1;;;2769:48:284;;35331:2:644;2769:48:284;;;35313:21:644;35370:2;35350:18;;;35343:30;-1:-1:-1;;;35389:18:644;;;35382:58;35457:18;;2769:48:284;35129:352:644;2073:396:284;2234:3;-1:-1:-1;;;;;2225:12:284;:5;-1:-1:-1;;;;;2225:12:284;;2221:49;;;2253:7;;2221:49;-1:-1:-1;;;;;2284:22:284;;2301:4;2284:22;2280:183;;;2322:44;-1:-1:-1;;;;;2322:30:284;;2353:3;2358:7;2322:30;:44::i;2280:183::-;2397:55;-1:-1:-1;;;;;2397:34:284;;2432:5;2439:3;2444:7;2397:34;:55::i;33381:736:46:-;33507:19;33513:2;33517:8;33507:5;:19::i;:::-;-1:-1:-1;;;;;33565:14:46;;;:19;33561:540;;33604:11;33618:23;:21;:23::i;:::-;:37;;-1:-1:-1;33689:14:46;;;33721:238;33751:62;33790:1;33794:2;33798:7;;;;;;33807:5;33751:30;:62::i;:::-;33746:174;;33841:56;-1:-1:-1;;;33841:7:46;:56::i;:::-;33954:3;33946:5;:11;33721:238;;34063:3;34022:23;:21;:23::i;:::-;:37;:44;34018:68;;34068:18;34083:1;34068:7;:18::i;:::-;33586:515;;33381:736;;;:::o;2753:654:287:-;2893:22;;2949:26;;2852:13;;2893:26;;;;2949:30;;;2893:26;;2993:24;;;3005:12;2993:24;2989:156;;;3077:8;3112:12;3047:86;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3033:101;;;;;;2989:156;3158:8;3154:101;;;3226:8;3196:47;;;;;;;;:::i;3154:101::-;3268:12;3264:117;;;3348:12;3310:59;;;;;;;;:::i;3264:117::-;-1:-1:-1;;3391:9:287;;;;;;;;;-1:-1:-1;3391:9:287;;;2753:654;-1:-1:-1;;;2753:654:287:o;1470:701::-;1655:12;1762:4;1805:34;1824:14;1805:18;:34::i;:::-;1916:11;1969:9;2040:34;2059:14;2040:18;:34::i;:::-;2123:4;1698:466;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1679:485;;1470:701;;;;;;:::o;2309:187::-;2379:13;2468:19;2482:4;2468:13;:19::i;:::-;2418:70;;;;;;;;:::i;:::-;;;;;;;;;;;;;2404:85;;2309:187;;;:::o;735:205:226:-;847:86;867:5;897:23;;;922:2;926:5;874:58;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;874:58:226;;;;;;;;;;;;;;-1:-1:-1;;;;;874:58:226;-1:-1:-1;;;;;;874:58:226;;;;;;;;;;847:19;:86::i;946:241::-;1111:68;;-1:-1:-1;;;;;41206:15:644;;;1111:68:226;;;41188:34:644;41258:15;;41238:18;;;41231:43;41290:18;;;41283:34;;;1084:96:226;;1104:5;;-1:-1:-1;;;1134:27:226;41123:18:644;;1111:68:226;40948:375:644;28229:2347:46;28301:20;28324:23;:21;:23::i;:::-;:37;;-1:-1:-1;28375:13:46;28371:53;;28390:34;-1:-1:-1;;;28390:7:46;:34::i;:::-;28435:61;28465:1;28469:2;28473:12;28487:8;28435:21;:61::i;:::-;28982:136;29018:2;15704:1;15691:15;;15665:24;15661:46;28982:18;:136::i;:::-;28924:23;:21;:23::i;:::-;:55;;;;:41;;;;;:55;;;;;:194;-1:-1:-1;;;;;29379:45:46;;29329:23;:21;:23::i;:::-;-1:-1:-1;;;;;29329:46:46;;;;;;:42;;;;;:46;;;;;;:95;;;;;;;;29609:13;29605:54;;29624:35;-1:-1:-1;;;29624:7:46;:35::i;:::-;29688:23;;;:12;29770:662;30180:7;30137:8;30093:1;-1:-1:-1;;;;;;;;;;;29966:1:46;29902;29872:351;30414:9;;:16;;;;29770:662;;30486:3;30446:23;:21;:23::i;:::-;:43;-1:-1:-1;30509:60:46;;-1:-1:-1;;24659:405:46;305:703:292;361:13;578:10;574:51;;-1:-1:-1;;604:10:292;;;;;;;;;;;;-1:-1:-1;;;604:10:292;;;;;305:703::o;574:51::-;649:5;634:12;688:75;695:9;;688:75;;720:8;;;;:::i;:::-;;-1:-1:-1;742:10:292;;-1:-1:-1;750:2:292;742:10;;:::i;:::-;;;688:75;;;772:19;804:6;-1:-1:-1;;;;;794:17:292;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;794:17:292;;772:39;;821:150;828:10;;821:150;;854:11;864:1;854:11;;:::i;:::-;;-1:-1:-1;922:10:292;930:2;922:5;:10;:::i;:::-;909:24;;:2;:24;:::i;:::-;896:39;;879:6;886;879:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;879:56:292;;;;;;;;-1:-1:-1;949:11:292;958:2;949:11;;:::i;:::-;;;821:150;;505:3026:229;563:13;795:4;:11;810:1;795:16;791:31;;;-1:-1:-1;;813:9:229;;;;;;;;;-1:-1:-1;813:9:229;;;505:3026::o;791:31::-;872:19;894:6;;;;;;;;;;;;;;;;;872:28;;1303:20;1362:1;1343:4;:11;1357:1;1343:15;;;;:::i;:::-;1342:21;;;;:::i;:::-;1337:27;;:1;:27;:::i;:::-;-1:-1:-1;;;;;1326:39:229;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1326:39:229;;1303:62;;1540:1;1533:5;1529:13;1641:2;1633:6;1629:15;1748:4;1799;1793:11;1787:4;1783:22;1711:1403;1832:6;1823:7;1820:19;1711:1403;;;1934:1;1925:7;1921:15;1910:26;;1972:7;1966:14;2615:4;2607:5;2603:2;2599:14;2595:25;2585:8;2581:40;2575:47;2564:9;2556:67;2668:1;2657:9;2653:17;2640:30;;2758:4;2750:5;2746:2;2742:14;2738:25;2728:8;2724:40;2718:47;2707:9;2699:67;2811:1;2800:9;2796:17;2783:30;;2900:4;2892:5;2889:1;2885:13;2881:24;2871:8;2867:39;2861:46;2850:9;2842:66;2953:1;2942:9;2938:17;2925:30;;3034:4;3027:5;3023:16;3013:8;3009:31;3003:38;2992:9;2984:58;;3087:1;3076:9;3072:17;3059:30;;1711:1403;;;1715:104;;3272:1;3265:4;3259:11;3255:19;3292:1;3287:120;;;;3425:1;3420:71;;;;3248:243;;3287:120;3339:4;3335:1;3324:9;3320:17;3312:32;3388:4;3384:1;3373:9;3369:17;3361:32;3287:120;;3420:71;3472:4;3468:1;3457:9;3453:17;3445:32;3248:243;-1:-1:-1;3518:6:229;;505:3026;-1:-1:-1;;;;;505:3026:229:o;3241:706:226:-;3660:23;3686:69;3714:4;3686:69;;;;;;;;;;;;;;;;;3694:5;-1:-1:-1;;;;;3686:27:226;;;:69;;;;;:::i;:::-;3769:17;;3660:95;;-1:-1:-1;3769:21:226;3765:176;;3864:10;3853:30;;;;;;;;;;;;:::i;:::-;3845:85;;;;-1:-1:-1;;;3845:85:226;;41897:2:644;3845:85:226;;;41879:21:644;41936:2;41916:18;;;41909:30;41975:34;41955:18;;;41948:62;-1:-1:-1;;;42026:18:644;;;42019:40;42076:19;;3845:85:226;41695:406:644;3827:223:288;3960:12;3991:52;4013:6;4021:4;4027:1;4030:12;3960;-1:-1:-1;;;;;1427:19:288;;;5194:60;;;;-1:-1:-1;;;5194:60:288;;42715:2:644;5194:60:288;;;42697:21:644;42754:2;42734:18;;;42727:30;42793:31;42773:18;;;42766:59;42842:18;;5194:60:288;42513:353:644;5194:60:288;5266:12;5280:23;5307:6;-1:-1:-1;;;;;5307:11:288;5327:5;5335:4;5307:33;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5265:75;;;;5357:51;5374:7;5383:10;5395:12;5357:16;:51::i;:::-;5350:58;4914:501;-1:-1:-1;;;;;;;4914:501:288:o;7529:692::-;7675:12;7703:7;7699:516;;;-1:-1:-1;7733:10:288;7726:17;;7699:516;7844:17;;:21;7840:365;;8038:10;8032:17;8098:15;8085:10;8081:2;8077:19;8070:44;7840:365;8177:12;8170:20;;-1:-1:-1;;;8170:20:288;;;;;;;;:::i;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:131:644;-1:-1:-1;;;;;;88:32:644;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;688:258::-;760:1;770:113;784:6;781:1;778:13;770:113;;;860:11;;;854:18;841:11;;;834:39;806:2;799:10;770:113;;;901:6;898:1;895:13;892:48;;;-1:-1:-1;;936:1:644;918:16;;911:27;688:258::o;951:269::-;1004:3;1042:5;1036:12;1069:6;1064:3;1057:19;1085:63;1141:6;1134:4;1129:3;1125:14;1118:4;1111:5;1107:16;1085:63;:::i;:::-;1202:2;1181:15;-1:-1:-1;;1177:29:644;1168:39;;;;1209:4;1164:50;;951:269;-1:-1:-1;;951:269:644:o;1225:231::-;1374:2;1363:9;1356:21;1337:4;1394:56;1446:2;1435:9;1431:18;1423:6;1394:56;:::i;1461:203::-;-1:-1:-1;;;;;1625:32:644;;;;1607:51;;1595:2;1580:18;;1461:203::o;1669:180::-;1728:6;1781:2;1769:9;1760:7;1756:23;1752:32;1749:52;;;1797:1;1794;1787:12;1749:52;-1:-1:-1;1820:23:644;;1669:180;-1:-1:-1;1669:180:644:o;1854:131::-;-1:-1:-1;;;;;1929:31:644;;1919:42;;1909:70;;1975:1;1972;1965:12;1990:315;2058:6;2066;2119:2;2107:9;2098:7;2094:23;2090:32;2087:52;;;2135:1;2132;2125:12;2087:52;2174:9;2161:23;2193:31;2218:5;2193:31;:::i;:::-;2243:5;2295:2;2280:18;;;;2267:32;;-1:-1:-1;;;1990:315:644:o;2310:247::-;2369:6;2422:2;2410:9;2401:7;2397:23;2393:32;2390:52;;;2438:1;2435;2428:12;2390:52;2477:9;2464:23;2496:31;2521:5;2496:31;:::i;2929:163::-;2996:5;3041:3;3032:6;3027:3;3023:16;3019:26;3016:46;;;3058:1;3055;3048:12;3016:46;-1:-1:-1;3080:6:644;2929:163;-1:-1:-1;2929:163:644:o;3097:854::-;3236:6;3244;3252;3260;3268;3276;3329:3;3317:9;3308:7;3304:23;3300:33;3297:53;;;3346:1;3343;3336:12;3297:53;3382:9;3369:23;3359:33;;3442:2;3431:9;3427:18;3414:32;3455:31;3480:5;3455:31;:::i;:::-;3505:5;-1:-1:-1;3557:2:644;3542:18;;3529:32;;-1:-1:-1;3613:2:644;3598:18;;3585:32;3626:33;3585:32;3626:33;:::i;:::-;3678:7;-1:-1:-1;3732:3:644;3717:19;;3704:33;;-1:-1:-1;3788:3:644;3773:19;;3760:33;-1:-1:-1;;;;;3805:30:644;;3802:50;;;3848:1;3845;3838:12;3802:50;3871:74;3937:7;3928:6;3917:9;3913:22;3871:74;:::i;:::-;3861:84;;;3097:854;;;;;;;;:::o;3956:456::-;4033:6;4041;4049;4102:2;4090:9;4081:7;4077:23;4073:32;4070:52;;;4118:1;4115;4108:12;4070:52;4157:9;4144:23;4176:31;4201:5;4176:31;:::i;:::-;4226:5;-1:-1:-1;4283:2:644;4268:18;;4255:32;4296:33;4255:32;4296:33;:::i;:::-;3956:456;;4348:7;;-1:-1:-1;;;4402:2:644;4387:18;;;;4374:32;;3956:456::o;4417:248::-;4485:6;4493;4546:2;4534:9;4525:7;4521:23;4517:32;4514:52;;;4562:1;4559;4552:12;4514:52;-1:-1:-1;;4585:23:644;;;4655:2;4640:18;;;4627:32;;-1:-1:-1;4417:248:644:o;4670:274::-;-1:-1:-1;;;;;4862:32:644;;;;4844:51;;4926:2;4911:18;;4904:34;4832:2;4817:18;;4670:274::o;5239:443::-;5346:6;5354;5407:2;5395:9;5386:7;5382:23;5378:32;5375:52;;;5423:1;5420;5413:12;5375:52;5463:9;5450:23;-1:-1:-1;;;;;5488:6:644;5485:30;5482:50;;;5528:1;5525;5518:12;5482:50;5551:74;5617:7;5608:6;5597:9;5593:22;5551:74;:::i;:::-;5541:84;5672:2;5657:18;;;;5644:32;;-1:-1:-1;;;;5239:443:644:o;5687:837::-;5882:2;5871:9;5864:21;5927:6;5921:13;5916:2;5905:9;5901:18;5894:41;5989:2;5981:6;5977:15;5971:22;5966:2;5955:9;5951:18;5944:50;6048:2;6040:6;6036:15;6030:22;6025:2;6014:9;6010:18;6003:50;6108:2;6100:6;6096:15;6090:22;6084:3;6073:9;6069:19;6062:51;6168:3;6160:6;6156:16;6150:23;6144:3;6133:9;6129:19;6122:52;6229:3;6221:6;6217:16;6211:23;6205:3;6194:9;6190:19;6183:52;6318:1;6314;6309:3;6305:11;6301:19;6294:3;6286:6;6282:16;6276:23;6272:49;6266:3;6255:9;6251:19;6244:78;5845:4;6369:3;6361:6;6357:16;6351:23;6393:6;6435:2;6430;6419:9;6415:18;6408:30;;6455:63;6513:3;6502:9;6498:19;6484:12;6455:63;:::i;6529:118::-;6615:5;6608:13;6601:21;6594:5;6591:32;6581:60;;6637:1;6634;6627:12;6652:785;6779:6;6787;6795;6848:2;6836:9;6827:7;6823:23;6819:32;6816:52;;;6864:1;6861;6854:12;6816:52;6904:9;6891:23;-1:-1:-1;;;;;6974:2:644;6966:6;6963:14;6960:34;;;6990:1;6987;6980:12;6960:34;7028:6;7017:9;7013:22;7003:32;;7073:7;7066:4;7062:2;7058:13;7054:27;7044:55;;7095:1;7092;7085:12;7044:55;7135:2;7122:16;7161:2;7153:6;7150:14;7147:34;;;7177:1;7174;7167:12;7147:34;7232:7;7225:4;7215:6;7212:1;7208:14;7204:2;7200:23;7196:34;7193:47;7190:67;;;7253:1;7250;7243:12;7190:67;7284:4;7276:13;;;;-1:-1:-1;7308:6:644;-1:-1:-1;;7349:20:644;;7336:34;7379:28;7336:34;7379:28;:::i;:::-;7426:5;7416:15;;;6652:785;;;;;:::o;7442:632::-;7613:2;7665:21;;;7735:13;;7638:18;;;7757:22;;;7584:4;;7613:2;7836:15;;;;7810:2;7795:18;;;7584:4;7879:169;7893:6;7890:1;7887:13;7879:169;;;7954:13;;7942:26;;8023:15;;;;7988:12;;;;7915:1;7908:9;7879:169;;8079:127;8140:10;8135:3;8131:20;8128:1;8121:31;8171:4;8168:1;8161:15;8195:4;8192:1;8185:15;8211:248;8278:2;8272:9;8320:4;8308:17;;-1:-1:-1;;;;;8340:34:644;;8376:22;;;8337:62;8334:88;;;8402:18;;:::i;:::-;8438:2;8431:22;8211:248;:::o;8464:718::-;8506:5;8559:3;8552:4;8544:6;8540:17;8536:27;8526:55;;8577:1;8574;8567:12;8526:55;8613:6;8600:20;-1:-1:-1;;;;;8676:2:644;8672;8669:10;8666:36;;;8682:18;;:::i;:::-;8757:2;8751:9;8725:2;8811:13;;-1:-1:-1;;8807:22:644;;;8831:2;8803:31;8799:40;8787:53;;;8855:18;;;8875:22;;;8852:46;8849:72;;;8901:18;;:::i;:::-;8941:10;8937:2;8930:22;8976:2;8968:6;8961:18;9022:3;9015:4;9010:2;9002:6;8998:15;8994:26;8991:35;8988:55;;;9039:1;9036;9029:12;8988:55;9103:2;9096:4;9088:6;9084:17;9077:4;9069:6;9065:17;9052:54;9150:1;9143:4;9138:2;9130:6;9126:15;9122:26;9115:37;9170:6;9161:15;;;;;;8464:718;;;;:::o;9187:1005::-;9335:6;9343;9351;9359;9367;9375;9428:3;9416:9;9407:7;9403:23;9399:33;9396:53;;;9445:1;9442;9435:12;9396:53;9484:9;9471:23;9503:31;9528:5;9503:31;:::i;:::-;9553:5;-1:-1:-1;9605:2:644;9590:18;;9577:32;;-1:-1:-1;9661:2:644;9646:18;;9633:32;9674:33;9633:32;9674:33;:::i;:::-;9726:7;-1:-1:-1;9780:2:644;9765:18;;9752:32;;-1:-1:-1;9835:3:644;9820:19;;9807:33;-1:-1:-1;;;;;9889:14:644;;;9886:34;;;9916:1;9913;9906:12;9886:34;9939:74;10005:7;9996:6;9985:9;9981:22;9939:74;:::i;:::-;9929:84;;10066:3;10055:9;10051:19;10038:33;10022:49;;10096:2;10086:8;10083:16;10080:36;;;10112:1;10109;10102:12;10080:36;;10135:51;10178:7;10167:8;10156:9;10152:24;10135:51;:::i;10197:321::-;10266:6;10319:2;10307:9;10298:7;10294:23;10290:32;10287:52;;;10335:1;10332;10325:12;10287:52;10375:9;10362:23;-1:-1:-1;;;;;10400:6:644;10397:30;10394:50;;;10440:1;10437;10430:12;10394:50;10463:49;10504:7;10495:6;10484:9;10480:22;10463:49;:::i;10523:383::-;10600:6;10608;10616;10669:2;10657:9;10648:7;10644:23;10640:32;10637:52;;;10685:1;10682;10675:12;10637:52;10724:9;10711:23;10743:31;10768:5;10743:31;:::i;:::-;10793:5;10845:2;10830:18;;10817:32;;-1:-1:-1;10896:2:644;10881:18;;;10868:32;;10523:383;-1:-1:-1;;;10523:383:644:o;10911:::-;10988:6;10996;11004;11057:2;11045:9;11036:7;11032:23;11028:32;11025:52;;;11073:1;11070;11063:12;11025:52;11109:9;11096:23;11086:33;;11169:2;11158:9;11154:18;11141:32;11182:31;11207:5;11182:31;:::i;11299:382::-;11364:6;11372;11425:2;11413:9;11404:7;11400:23;11396:32;11393:52;;;11441:1;11438;11431:12;11393:52;11480:9;11467:23;11499:31;11524:5;11499:31;:::i;:::-;11549:5;-1:-1:-1;11606:2:644;11591:18;;11578:32;11619:30;11578:32;11619:30;:::i;:::-;11668:7;11658:17;;;11299:382;;;;;:::o;11686:315::-;11754:6;11762;11815:2;11803:9;11794:7;11790:23;11786:32;11783:52;;;11831:1;11828;11821:12;11783:52;11867:9;11854:23;11844:33;;11927:2;11916:9;11912:18;11899:32;11940:31;11965:5;11940:31;:::i;12006:665::-;12101:6;12109;12117;12125;12178:3;12166:9;12157:7;12153:23;12149:33;12146:53;;;12195:1;12192;12185:12;12146:53;12234:9;12221:23;12253:31;12278:5;12253:31;:::i;:::-;12303:5;-1:-1:-1;12360:2:644;12345:18;;12332:32;12373:33;12332:32;12373:33;:::i;:::-;12425:7;-1:-1:-1;12479:2:644;12464:18;;12451:32;;-1:-1:-1;12534:2:644;12519:18;;12506:32;-1:-1:-1;;;;;12550:30:644;;12547:50;;;12593:1;12590;12583:12;12547:50;12616:49;12657:7;12648:6;12637:9;12633:22;12616:49;:::i;:::-;12606:59;;;12006:665;;;;;;;:::o;13456:388::-;13524:6;13532;13585:2;13573:9;13564:7;13560:23;13556:32;13553:52;;;13601:1;13598;13591:12;13553:52;13640:9;13627:23;13659:31;13684:5;13659:31;:::i;:::-;13709:5;-1:-1:-1;13766:2:644;13751:18;;13738:32;13779:33;13738:32;13779:33;:::i;13849:1865::-;14069:4;14098:2;14138;14127:9;14123:18;14168:2;14157:9;14150:21;14191:6;14226;14220:13;14257:6;14249;14242:22;14283:2;14273:12;;14316:2;14305:9;14301:18;14294:25;;14378:2;14368:6;14365:1;14361:14;14350:9;14346:30;14342:39;14416:2;14408:6;14404:15;14437:1;14447:1238;14461:6;14458:1;14455:13;14447:1238;;;-1:-1:-1;;14556:22:644;;;14552:31;;14540:44;;14607:13;;14648:9;;14633:25;;14697:11;;14691:18;14729:15;;;14722:27;;;14784:19;;14826:4;14850:15;;;14843:27;;;14897:62;14954:3;14942:16;;14784:19;14897:62;:::i;:::-;14883:76;;15018:2;15004:12;15000:21;14994:28;15045:2;15109;15100:6;15092;15088:19;15084:28;15079:2;15071:6;15067:15;15060:53;15140:52;15185:6;15169:14;15140:52;:::i;:::-;15126:66;;15251:2;15237:12;15233:21;15227:28;15205:50;;15317:2;15308:6;15300;15296:19;15292:28;15287:2;15279:6;15275:15;15268:53;15348:52;15393:6;15377:14;15348:52;:::i;:::-;15441:21;;15435:28;15505:19;;;15501:28;;15495:3;15483:16;;15476:54;15435:28;15334:66;-1:-1:-1;15553:52:644;;-1:-1:-1;15334:66:644;;-1:-1:-1;15435:28:644;15553:52;:::i;:::-;15663:12;;;;15543:62;-1:-1:-1;;;15628:15:644;;;;-1:-1:-1;14483:1:644;14476:9;14447:1238;;;-1:-1:-1;15702:6:644;;13849:1865;-1:-1:-1;;;;;;;;13849:1865:644:o;15719:380::-;15798:1;15794:12;;;;15841;;;15862:61;;15916:4;15908:6;15904:17;15894:27;;15862:61;15969:2;15961:6;15958:14;15938:18;15935:38;15932:161;;;16015:10;16010:3;16006:20;16003:1;15996:31;16050:4;16047:1;16040:15;16078:4;16075:1;16068:15;16104:338;16306:2;16288:21;;;16345:2;16325:18;;;16318:30;-1:-1:-1;;;16379:2:644;16364:18;;16357:44;16433:2;16418:18;;16104:338::o;16447:411::-;16649:2;16631:21;;;16688:2;16668:18;;;16661:30;16727:34;16722:2;16707:18;;16700:62;-1:-1:-1;;;16793:2:644;16778:18;;16771:45;16848:3;16833:19;;16447:411::o;17283:545::-;17376:4;17382:6;17442:11;17429:25;17536:2;17532:7;17521:8;17505:14;17501:29;17497:43;17477:18;17473:68;17463:96;;17555:1;17552;17545:12;17463:96;17582:33;;17634:20;;;-1:-1:-1;;;;;;17666:30:644;;17663:50;;;17709:1;17706;17699:12;17663:50;17742:4;17730:17;;-1:-1:-1;17793:1:644;17789:14;;;17773;17769:35;17759:46;;17756:66;;;17818:1;17815;17808:12;17756:66;17283:545;;;;;:::o;18639:127::-;18700:10;18695:3;18691:20;18688:1;18681:31;18731:4;18728:1;18721:15;18755:4;18752:1;18745:15;18771:128;18811:3;18842:1;18838:6;18835:1;18832:13;18829:39;;;18848:18;;:::i;:::-;-1:-1:-1;18884:9:644;;18771:128::o;19918:168::-;19958:7;20024:1;20020;20016:6;20012:14;20009:1;20006:21;20001:1;19994:9;19987:17;19983:45;19980:71;;;20031:18;;:::i;:::-;-1:-1:-1;20071:9:644;;19918:168::o;20091:127::-;20152:10;20147:3;20143:20;20140:1;20133:31;20183:4;20180:1;20173:15;20207:4;20204:1;20197:15;20223:120;20263:1;20289;20279:35;;20294:18;;:::i;:::-;-1:-1:-1;20328:9:644;;20223:120::o;20348:127::-;20409:10;20404:3;20400:20;20397:1;20390:31;20440:4;20437:1;20430:15;20464:4;20461:1;20454:15;20480:333;20581:4;20639:11;20626:25;20733:3;20729:8;20718;20702:14;20698:29;20694:44;20674:18;20670:69;20660:97;;20753:1;20750;20743:12;20660:97;20774:33;;;;;20480:333;-1:-1:-1;;20480:333:644:o;21495:522::-;21573:4;21579:6;21639:11;21626:25;21733:2;21729:7;21718:8;21702:14;21698:29;21694:43;21674:18;21670:68;21660:96;;21752:1;21749;21742:12;21660:96;21779:33;;21831:20;;;-1:-1:-1;;;;;;21863:30:644;;21860:50;;;21906:1;21903;21896:12;21860:50;21939:4;21927:17;;-1:-1:-1;21970:14:644;21966:27;;;21956:38;;21953:58;;;22007:1;22004;21997:12;22148:545;22250:2;22245:3;22242:11;22239:448;;;22286:1;22311:5;22307:2;22300:17;22356:4;22352:2;22342:19;22426:2;22414:10;22410:19;22407:1;22403:27;22397:4;22393:38;22462:4;22450:10;22447:20;22444:47;;;-1:-1:-1;22485:4:644;22444:47;22540:2;22535:3;22531:12;22528:1;22524:20;22518:4;22514:31;22504:41;;22595:82;22613:2;22606:5;22603:13;22595:82;;;22658:17;;;22639:1;22628:13;22595:82;;22869:1190;-1:-1:-1;;;;;22972:3:644;22969:27;22966:53;;;22999:18;;:::i;:::-;23028:94;23118:3;23078:38;23110:4;23104:11;23078:38;:::i;:::-;23072:4;23028:94;:::i;:::-;23148:1;23173:2;23168:3;23165:11;23190:1;23185:616;;;;23845:1;23862:3;23859:93;;;-1:-1:-1;23918:19:644;;;23905:33;23859:93;-1:-1:-1;;22826:1:644;22822:11;;;22818:24;22814:29;22804:40;22850:1;22846:11;;;22801:57;23965:78;;23158:895;;23185:616;22095:1;22088:14;;;22132:4;22119:18;;-1:-1:-1;;23221:17:644;;;23322:9;23344:229;23358:7;23355:1;23352:14;23344:229;;;23447:19;;;23434:33;23419:49;;23554:4;23539:20;;;;23507:1;23495:14;;;;23374:12;23344:229;;;23348:3;23601;23592:7;23589:16;23586:159;;;23725:1;23721:6;23715:3;23709;23706:1;23702:11;23698:21;23694:34;23690:39;23677:9;23672:3;23668:19;23655:33;23651:79;23643:6;23636:95;23586:159;;;23788:1;23782:3;23779:1;23775:11;23771:19;23765:4;23758:33;23158:895;;22869:1190;;;:::o;24064:956::-;24243:5;24230:19;24224:4;24217:33;24304:2;24297:5;24293:14;24280:28;24276:1;24270:4;24266:12;24259:50;24363:2;24356:5;24352:14;24339:28;24335:1;24329:4;24325:12;24318:50;24422:2;24415:5;24411:14;24398:28;24394:1;24388:4;24384:12;24377:50;24481:3;24474:5;24470:15;24457:29;24453:1;24447:4;24443:12;24436:51;24541:3;24534:5;24530:15;24517:29;24513:1;24507:4;24503:12;24496:51;24584:1;24578:4;24574:12;24634:3;24627:5;24623:15;24610:29;24648:33;24673:7;24648:33;:::i;:::-;24716:17;;-1:-1:-1;;;;;;24712:48:644;-1:-1:-1;;;;;24762:33:644;;;;24709:87;24690:107;;24840:66;24901:3;24890:15;;24894:5;24840:66;:::i;:::-;24915:99;25000:13;24987:11;24983:1;24977:4;24973:12;24915:99;:::i;25025:135::-;25064:3;-1:-1:-1;;25085:17:644;;25082:43;;;25105:18;;:::i;:::-;-1:-1:-1;25152:1:644;25141:13;;25025:135::o;25165:504::-;25224:5;25231:6;25291:3;25278:17;25377:2;25373:7;25362:8;25346:14;25342:29;25338:43;25318:18;25314:68;25304:96;;25396:1;25393;25386:12;25304:96;25424:33;;25528:4;25515:18;;;-1:-1:-1;25476:21:644;;-1:-1:-1;;;;;;25545:30:644;;25542:50;;;25588:1;25585;25578:12;25542:50;25638:6;25622:14;25618:27;25608:8;25604:42;25601:62;;;25659:1;25656;25649:12;25674:267;25763:6;25758:3;25751:19;25815:6;25808:5;25801:4;25796:3;25792:14;25779:43;-1:-1:-1;25867:1:644;25842:16;;;25860:4;25838:27;;;25831:38;;;;25923:2;25902:15;;;-1:-1:-1;;25898:29:644;25889:39;;;25885:50;;25674:267::o;25946:2051::-;26217:2;26269:21;;;26242:18;;;26325:22;;;26188:4;;26366:2;26384:18;;;26448:1;26444:14;;;26429:30;;26425:39;;26487:6;26188:4;;26542:1372;26558:6;26553:3;26550:15;26542:1372;;;26627:22;;;-1:-1:-1;;26623:36:644;26611:49;;26699:20;;26774:14;26770:27;;;-1:-1:-1;;26766:42:644;26742:67;;26732:95;;26823:1;26820;26813:12;26732:95;26853:31;;26941:19;;26926:35;;26984:4;27038:14;;;27025:28;27008:15;;;27001:53;27104:14;;;27091:28;27074:15;;;27067:53;27170:14;;;27157:28;27140:15;;;27133:53;27209:4;27263:14;;;27250:28;27233:15;;;27226:53;27302:4;27356:14;;;27343:28;27326:15;;;27319:53;26907:6;;27395:4;27440:14;;;27427:28;27468:33;27427:28;27468:33;:::i;:::-;-1:-1:-1;;;;;27538:33:644;27521:15;;;27514:58;27595:4;27646:54;27685:14;;;27689:5;27646:54;:::i;:::-;27612:88;;27737:2;27732;27724:6;27720:15;27713:27;27763:71;27830:2;27822:6;27818:15;27804:12;27790;27763:71;:::i;:::-;27892:12;;;;27753:81;-1:-1:-1;;;27857:15:644;;;;;-1:-1:-1;;26584:1:644;26575:11;26542:1372;;;-1:-1:-1;;;470:13:644;;463:21;27985:4;27970:20;;451:34;27931:6;-1:-1:-1;27946:45:644;;-1:-1:-1;;;400:91:644;28002:125;28042:4;28070:1;28067;28064:8;28061:34;;;28075:18;;:::i;:::-;-1:-1:-1;28112:9:644;;28002:125::o;28132:136::-;28171:3;28199:5;28189:39;;28208:18;;:::i;:::-;-1:-1:-1;;;28244:18:644;;28132:136::o;28944:251::-;29014:6;29067:2;29055:9;29046:7;29042:23;29038:32;29035:52;;;29083:1;29080;29073:12;29035:52;29115:9;29109:16;29134:31;29159:5;29134:31;:::i;29200:184::-;29270:6;29323:2;29311:9;29302:7;29298:23;29294:32;29291:52;;;29339:1;29336;29329:12;29291:52;-1:-1:-1;29362:16:644;;29200:184;-1:-1:-1;29200:184:644:o;29971:339::-;30173:2;30155:21;;;30212:2;30192:18;;;30185:30;-1:-1:-1;;;30246:2:644;30231:18;;30224:45;30301:2;30286:18;;29971:339::o;30735:1044::-;30861:9;30920:4;30912:5;30896:14;30892:26;30888:37;30885:57;;;30938:1;30935;30928:12;30885:57;30966:17;;:::i;:::-;31019:5;31006:19;-1:-1:-1;;;;;31085:2:644;31077:6;31074:14;31071:34;;;31101:1;31098;31091:12;31071:34;31130:52;31167:14;31158:6;31151:5;31147:18;31130:52;:::i;:::-;31121:7;31114:69;31232:2;31225:5;31221:14;31208:28;31192:44;;31261:2;31251:8;31248:16;31245:36;;;31277:1;31274;31267:12;31245:36;31315:54;31354:14;31343:8;31336:5;31332:20;31315:54;:::i;:::-;31310:2;31301:7;31297:16;31290:80;31419:2;31412:5;31408:14;31395:28;31379:44;;31448:2;31438:8;31435:16;31432:36;;;31464:1;31461;31454:12;31432:36;31502:54;31541:14;31530:8;31523:5;31519:20;31502:54;:::i;:::-;31497:2;31488:7;31484:16;31477:80;31606:2;31599:5;31595:14;31582:28;31566:44;;31635:2;31625:8;31622:16;31619:36;;;31651:1;31648;31641:12;31619:36;;31689:54;31728:14;31717:8;31710:5;31706:20;31689:54;:::i;:::-;31684:2;31671:16;;31664:80;-1:-1:-1;31675:7:644;30735:1044;-1:-1:-1;;30735:1044:644:o;31784:819::-;32117:3;32106:9;32099:22;32080:4;32144:63;32202:3;32191:9;32187:19;32179:6;32171;32144:63;:::i;:::-;32255:9;32247:6;32243:22;32238:2;32227:9;32223:18;32216:50;32289;32332:6;32324;32316;32289:50;:::i;:::-;32275:64;;32387:9;32379:6;32375:22;32370:2;32359:9;32355:18;32348:50;32421;32464:6;32456;32448;32421:50;:::i;:::-;32407:64;;32519:9;32511:6;32507:22;32502:2;32491:9;32487:18;32480:50;32547;32590:6;32582;32574;32547:50;:::i;:::-;32539:58;31784:819;-1:-1:-1;;;;;;;;;;;31784:819:644:o;33618:405::-;33815:2;33804:9;33797:21;33778:4;33841:56;33893:2;33882:9;33878:18;33870:6;33841:56;:::i;:::-;33945:9;33937:6;33933:22;33928:2;33917:9;33913:18;33906:50;33973:44;34010:6;34002;33973:44;:::i;:::-;33965:52;33618:405;-1:-1:-1;;;;;33618:405:644:o;34028:500::-;-1:-1:-1;;;;;34297:15:644;;;34279:34;;34349:15;;34344:2;34329:18;;34322:43;34396:2;34381:18;;34374:34;;;34444:3;34439:2;34424:18;;34417:31;;;34222:4;;34465:57;;34502:19;;34494:6;34465:57;:::i;:::-;34457:65;34028:500;-1:-1:-1;;;;;;34028:500:644:o;34533:249::-;34602:6;34655:2;34643:9;34634:7;34630:23;34626:32;34623:52;;;34671:1;34668;34661:12;34623:52;34703:9;34697:16;34722:30;34746:5;34722:30;:::i;34787:127::-;34848:10;34843:3;34839:20;34836:1;34829:31;34879:4;34876:1;34869:15;34903:4;34900:1;34893:15;35486:185;35528:3;35566:5;35560:12;35581:52;35626:6;35621:3;35614:4;35607:5;35603:16;35581:52;:::i;:::-;35649:16;;;;;35486:185;-1:-1:-1;;35486:185:644:o;35676:995::-;-1:-1:-1;;;36176:43:644;;36242:13;;36158:3;;36264:61;36242:13;36314:1;36305:11;;36298:4;36286:17;;36264:61;:::i;:::-;-1:-1:-1;;;36384:1:644;36344:16;;;36376:10;;;36369:73;36467:13;;36489:63;36467:13;36538:2;36530:11;;36523:4;36511:17;;36489:63;:::i;:::-;-1:-1:-1;;;36612:2:644;36571:17;;;;36604:11;;;36597:41;36662:2;36654:11;;35676:995;-1:-1:-1;;;;35676:995:644:o;36676:617::-;-1:-1:-1;;;37027:43:644;;37093:13;;37009:3;;37115:61;37093:13;37165:1;37156:11;;37149:4;37137:17;;37115:61;:::i;:::-;-1:-1:-1;;;37235:1:644;37195:16;;;;37227:10;;;37220:40;-1:-1:-1;37284:2:644;37276:11;;36676:617;-1:-1:-1;36676:617:644:o;37298:635::-;-1:-1:-1;;;37649:59:644;;37731:13;;37631:3;;37753:62;37731:13;37803:2;37794:12;;37787:4;37775:17;;37753:62;:::i;:::-;-1:-1:-1;;;37874:2:644;37834:16;;;;37866:11;;;37859:41;-1:-1:-1;37924:2:644;37916:11;;37298:635;-1:-1:-1;37298:635:644:o;38222:2268::-;-1:-1:-1;;;39419:45:644;;39487:13;;39401:3;;39509:62;39487:13;39559:2;39550:12;;39543:4;39531:17;;39509:62;:::i;:::-;-1:-1:-1;;;39630:2:644;39590:16;;;39622:11;;;39615:24;39664:13;;39686:63;39664:13;39735:2;39727:11;;39720:4;39708:17;;39686:63;:::i;:::-;-1:-1:-1;;;39848:2:644;39768:17;;;;39840:11;;;39833:23;;;-1:-1:-1;;;39880:2:644;39872:11;;39865:63;39953:13;;39975:63;39953:13;40024:2;40016:11;;40009:4;39997:17;;39975:63;:::i;:::-;40098:2;40057:17;;40090:11;;;40083:23;40131:13;;40153:63;40131:13;40202:2;40194:11;;40187:4;40175:17;;40153:63;:::i;:::-;-1:-1:-1;;;40276:2:644;40235:17;;;;40268:11;;;40261:80;40357:127;40387:96;40413:69;40443:38;40477:2;40469:11;;40461:6;40443:38;:::i;:::-;-1:-1:-1;;;38003:47:644;;38075:2;38066:12;;37938:146;40413:69;40405:6;40387:96;:::i;:::-;-1:-1:-1;;;38154:30:644;;38209:1;38200:11;;38089:128;40357:127;40350:134;38222:2268;-1:-1:-1;;;;;;;;;38222:2268:644:o;40495:448::-;40757:31;40752:3;40745:44;40727:3;40818:6;40812:13;40834:62;40889:6;40884:2;40879:3;40875:12;40868:4;40860:6;40856:17;40834:62;:::i;:::-;40916:16;;;;40934:2;40912:25;;40495:448;-1:-1:-1;;40495:448:644:o;41328:112::-;41360:1;41386;41376:35;;41391:18;;:::i;:::-;-1:-1:-1;41425:9:644;;41328:112::o;41445:245::-;41512:6;41565:2;41553:9;41544:7;41540:23;41536:32;41533:52;;;41581:1;41578;41571:12;41533:52;41613:9;41607:16;41632:28;41654:5;41632:28;:::i;42871:274::-;43000:3;43038:6;43032:13;43054:53;43100:6;43095:3;43088:4;43080:6;43076:17;43054:53;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "burn(uint256)": "42966c68",
    "claim(address,uint256,address,uint256,(bytes32[],uint256,uint256,address),bytes)": "84bb1e42",
    "claimCondition()": "d637ed59",
    "contractURI()": "e8a3d485",
    "deleteSharedMetadata(bytes32)": "1ebb2422",
    "explicitOwnershipOf(uint256)": "c23dc68f",
    "getActiveClaimConditionId()": "c68907de",
    "getAllSharedMetadata()": "fc3c2a73",
    "getApproved(uint256)": "081812fc",
    "getClaimConditionById(uint256)": "6f8934f4",
    "getDefaultRoyaltyInfo()": "b24f2d39",
    "getRoyaltyInfoForToken(uint256)": "4cc157df",
    "getSupplyClaimedByWallet(uint256,address)": "ad1eefc5",
    "isApprovedForAll(address,address)": "e985e9c5",
    "isTrustedForwarder(address)": "572b6c05",
    "name()": "06fdde03",
    "nextTokenIdToClaim()": "acd083f8",
    "nextTokenIdToMint()": "3b1475a7",
    "owner()": "8da5cb5b",
    "ownerOf(uint256)": "6352211e",
    "primarySaleRecipient()": "079fe40e",
    "royaltyInfo(uint256,uint256)": "2a55205a",
    "safeTransferFrom(address,address,uint256)": "42842e0e",
    "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
    "setApprovalForAll(address,bool)": "a22cb465",
    "setClaimConditions((uint256,uint256,uint256,uint256,bytes32,uint256,address,string)[],bool)": "74bc7db7",
    "setContractURI(string)": "938e3d7b",
    "setDefaultRoyaltyInfo(address,uint256)": "600dd5ea",
    "setOwner(address)": "13af4035",
    "setPrimarySaleRecipient(address)": "6f4f2837",
    "setRoyaltyInfoForToken(uint256,address,uint256)": "9bcf7a15",
    "setSharedMetadata((string,string,string,string),bytes32)": "696b0c1a",
    "startTokenId()": "e6798baa",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "tokenURI(uint256)": "c87b56dd",
    "tokensOfOwner(address)": "8462151c",
    "tokensOfOwnerIn(address,uint256,uint256)": "99a2557a",
    "totalMinted()": "a2309ff8",
    "totalSupply()": "18160ddd",
    "transferFrom(address,address,uint256)": "23b872dd",
    "verifyClaim(uint256,address,uint256,address,uint256,(bytes32[],uint256,uint256,address))": "23a2902b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidQueryRange\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxClaimableSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"}],\"indexed\":false,\"internalType\":\"struct IClaimCondition.ClaimCondition[]\",\"name\":\"claimConditions\",\"type\":\"tuple[]\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"resetEligibility\",\"type\":\"bool\"}],\"name\":\"ClaimConditionsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"prevURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newURI\",\"type\":\"string\"}],\"name\":\"ContractURIUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newRoyaltyRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newRoyaltyBps\",\"type\":\"uint256\"}],\"name\":\"DefaultRoyalty\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"prevOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"PrimarySaleRecipientUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"royaltyRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"royaltyBps\",\"type\":\"uint256\"}],\"name\":\"RoyaltyForToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"SharedMetadataDeleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"imageURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"animationURI\",\"type\":\"string\"}],\"name\":\"SharedMetadataUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"claimConditionIndex\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantityClaimed\",\"type\":\"uint256\"}],\"name\":\"TokensClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_pricePerToken\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"internalType\":\"struct IDrop.AllowlistProof\",\"name\":\"_allowlistProof\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimCondition\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_id\",\"type\":\"bytes32\"}],\"name\":\"deleteSharedMetadata\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"explicitOwnershipOf\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"startTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"burned\",\"type\":\"bool\"},{\"internalType\":\"uint24\",\"name\":\"extraData\",\"type\":\"uint24\"}],\"internalType\":\"struct IERC721AUpgradeable.TokenOwnership\",\"name\":\"ownership\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getActiveClaimConditionId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllSharedMetadata\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"imageURI\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"animationURI\",\"type\":\"string\"}],\"internalType\":\"struct ISharedMetadataBatch.SharedMetadataInfo\",\"name\":\"metadata\",\"type\":\"tuple\"}],\"internalType\":\"struct ISharedMetadataBatch.SharedMetadataWithId[]\",\"name\":\"metadata\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_conditionId\",\"type\":\"uint256\"}],\"name\":\"getClaimConditionById\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxClaimableSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"}],\"internalType\":\"struct IClaimCondition.ClaimCondition\",\"name\":\"condition\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDefaultRoyaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getRoyaltyInfoForToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_conditionId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_claimer\",\"type\":\"address\"}],\"name\":\"getSupplyClaimedByWallet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"supplyClaimedByWallet\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextTokenIdToClaim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextTokenIdToMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"primarySaleRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxClaimableSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"}],\"internalType\":\"struct IClaimCondition.ClaimCondition[]\",\"name\":\"_conditions\",\"type\":\"tuple[]\"},{\"internalType\":\"bool\",\"name\":\"_resetClaimEligibility\",\"type\":\"bool\"}],\"name\":\"setClaimConditions\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"setContractURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_royaltyRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_royaltyBps\",\"type\":\"uint256\"}],\"name\":\"setDefaultRoyaltyInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_saleRecipient\",\"type\":\"address\"}],\"name\":\"setPrimarySaleRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_bps\",\"type\":\"uint256\"}],\"name\":\"setRoyaltyInfoForToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"imageURI\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"animationURI\",\"type\":\"string\"}],\"internalType\":\"struct ISharedMetadataBatch.SharedMetadataInfo\",\"name\":\"metadata\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"_id\",\"type\":\"bytes32\"}],\"name\":\"setSharedMetadata\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startTokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"tokensOfOwner\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stop\",\"type\":\"uint256\"}],\"name\":\"tokensOfOwnerIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_conditionId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_claimer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_pricePerToken\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"internalType\":\"struct IDrop.AllowlistProof\",\"name\":\"_allowlistProof\",\"type\":\"tuple\"}],\"name\":\"verifyClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isOverride\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. See {ERC721A-_approve}. Requirements: - The caller must own the token or be an approved operator.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in `owner`'s account.\"},\"burn(uint256)\":{\"details\":\"Burns `tokenId`. See {ERC721-_burn}.\"},\"claim(address,uint256,address,uint256,(bytes32[],uint256,uint256,address),bytes)\":{\"details\":\"Lets an account claim tokens.\"},\"explicitOwnershipOf(uint256)\":{\"details\":\"Returns the `TokenOwnership` struct at `tokenId` without reverting. If the `tokenId` is out of bounds: - `addr = address(0)` - `startTimestamp = 0` - `burned = false` - `extraData = 0` If the `tokenId` is burned: - `addr = <Address of owner before token was burned>` - `startTimestamp = <Timestamp when token was burned>` - `burned = true` - `extraData = <Extra data when token was burned>` Otherwise: - `addr = <Address of owner>` - `startTimestamp = <Timestamp of start of ownership>` - `burned = false` - `extraData = <Extra data at start of ownership>`\"},\"getActiveClaimConditionId()\":{\"details\":\"At any given moment, returns the uid for the active claim condition.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"getClaimConditionById(uint256)\":{\"details\":\"Returns the claim condition at the given uid.\"},\"getRoyaltyInfoForToken(uint256)\":{\"details\":\"Returns royalty recipient and bps for `_tokenId`.\",\"params\":{\"_tokenId\":\"The tokenID of the NFT for which to query royalty info.\"}},\"getSupplyClaimedByWallet(uint256,address)\":{\"details\":\"Returns the supply claimed by claimer for a given conditionId.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}.\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"nextTokenIdToClaim()\":{\"details\":\"The next token ID of the NFT that can be claimed.\"},\"nextTokenIdToMint()\":{\"details\":\"The tokenId of the next NFT that will be minted / lazy minted.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"primarySaleRecipient()\":{\"details\":\"Returns primary sale recipient address.\"},\"royaltyInfo(uint256,uint256)\":{\"details\":\"Returns royalty amount and recipient for `tokenId` and `salePrice`.\",\"params\":{\"salePrice\":\"Sale price of the token.\",\"tokenId\":\"The tokenID of the NFT for which to query royalty info.\"},\"returns\":{\"receiver\":\"       Address of royalty recipient account.\",\"royaltyAmount\":\"  Royalty amount calculated at current royaltyBps value.\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"setClaimConditions((uint256,uint256,uint256,uint256,bytes32,uint256,address,string)[],bool)\":{\"details\":\"Lets a contract admin set claim conditions.\"},\"setContractURI(string)\":{\"details\":\"Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.\",\"params\":{\"_uri\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"setDefaultRoyaltyInfo(address,uint256)\":{\"details\":\"Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {DefaultRoyalty Event}; See {_setupDefaultRoyaltyInfo}.\",\"params\":{\"_royaltyBps\":\"Updated royalty bps.\",\"_royaltyRecipient\":\"Address to be set as default royalty recipient.\"}},\"setOwner(address)\":{\"params\":{\"_newOwner\":\"The address to set as the new owner of the contract.\"}},\"setPrimarySaleRecipient(address)\":{\"details\":\"Caller should be authorized to set primary sales info.                  See {_canSetPrimarySaleRecipient}.                  Emits {PrimarySaleRecipientUpdated Event}; See {_setupPrimarySaleRecipient}.\",\"params\":{\"_saleRecipient\":\"Address to be set as new recipient of primary sales.\"}},\"setRoyaltyInfoForToken(uint256,address,uint256)\":{\"details\":\"Sets royalty info for `_tokenId`. Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {RoyaltyForToken Event}; See {_setupRoyaltyInfoForToken}.\",\"params\":{\"_bps\":\"Updated royalty bps for the token Id.\",\"_recipient\":\"Address to be set as royalty recipient for given token Id.\"}},\"supportsInterface(bytes4)\":{\"details\":\"See ERC 165\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the URI for a given tokenId.\"},\"tokensOfOwner(address)\":{\"details\":\"Returns an array of token IDs owned by `owner`. This function scans the ownership mapping and is O(`totalSupply`) in complexity. It is meant to be called off-chain. See {ERC721AQueryable-tokensOfOwnerIn} for splitting the scan into multiple smaller scans if the collection is large enough to cause an out-of-gas error (10K collections should be fine).\"},\"tokensOfOwnerIn(address,uint256,uint256)\":{\"details\":\"Returns an array of token IDs owned by `owner`, in the range [`start`, `stop`) (i.e. `start <= tokenId < stop`). This function allows for tokens to be queried if the collection grows too big for a single call of {ERC721AQueryable-tokensOfOwner}. Requirements: - `start < stop`\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"},\"verifyClaim(uint256,address,uint256,address,uint256,(bytes32[],uint256,uint256,address))\":{\"details\":\"Checks a request to claim NFTs against the active claim condition's criteria.\"}},\"stateVariables\":{\"DEFAULT_ADMIN_ROLE\":{\"details\":\"Default admin role for all roles. Only accounts with this role can grant/revoke other roles.\"},\"MINTER_ROLE\":{\"details\":\"Only MINTER_ROLE holders can sign off on `MintRequest`s.\"},\"TRANSFER_ROLE\":{\"details\":\"Only TRANSFER_ROLE holders can have tokens transferred from or to them, during restricted transfers.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"InvalidQueryRange()\":[{\"notice\":\"Invalid query range (`start` >= `stop`).\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"events\":{\"ClaimConditionsUpdated((uint256,uint256,uint256,uint256,bytes32,uint256,address,string)[],bool)\":{\"notice\":\"Emitted when the contract's claim conditions are updated.\"},\"SharedMetadataDeleted(bytes32)\":{\"notice\":\"Emitted when shared metadata is deleted.\"},\"SharedMetadataUpdated(bytes32,string,string,string,string)\":{\"notice\":\"Emitted when shared metadata is lazy minted.\"},\"TokensClaimed(uint256,address,address,uint256,uint256)\":{\"notice\":\"Emitted when tokens are claimed via `claim`.\"}},\"kind\":\"user\",\"methods\":{\"contractURI()\":{\"notice\":\"Returns the contract metadata URI.\"},\"deleteSharedMetadata(bytes32)\":{\"notice\":\"Delete shared metadata for NFTs\"},\"getAllSharedMetadata()\":{\"notice\":\"Get all shared metadata\"},\"getDefaultRoyaltyInfo()\":{\"notice\":\"Returns the defualt royalty recipient and BPS for this contract's NFTs.\"},\"getRoyaltyInfoForToken(uint256)\":{\"notice\":\"View royalty info for a given token.\"},\"owner()\":{\"notice\":\"Returns the owner of the contract.\"},\"royaltyInfo(uint256,uint256)\":{\"notice\":\"View royalty info for a given token and sale price.\"},\"setContractURI(string)\":{\"notice\":\"Lets a contract admin set the URI for contract-level metadata.\"},\"setDefaultRoyaltyInfo(address,uint256)\":{\"notice\":\"Updates default royalty recipient and bps.\"},\"setOwner(address)\":{\"notice\":\"Lets an authorized wallet set a new owner for the contract.\"},\"setPrimarySaleRecipient(address)\":{\"notice\":\"Updates primary sale recipient.\"},\"setRoyaltyInfoForToken(uint256,address,uint256)\":{\"notice\":\"Updates default royalty recipient and bps for a particular token.\"},\"setSharedMetadata((string,string,string,string),bytes32)\":{\"notice\":\"Set shared metadata for NFTs\"},\"totalMinted()\":{\"notice\":\"Returns the total amount of tokens minted in the contract.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/prebuilts/evolving-nfts/EvolvingNFTLogic.sol\":\"EvolvingNFTLogic\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@std/=lib/forge-std/src/\",\":@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/\",\":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/\",\":contracts/=contracts/\",\":ds-test/=lib/ds-test/src/\",\":dynamic-contracts/=lib/dynamic-contracts/src/\",\":erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/ERC721A-Upgradeable/\",\":erc721a/=lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/\"]},\"sources\":{\"contracts/eip/interface/IERC1155.sol\":{\"keccak256\":\"0x17c265f3f47161c9d2f6c7f7f4040440df9ad4cd7eb74eb411bf25a94b542f9e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c4f468eb184f2a08909834b51e33e854741647f9798aa1e6746f3f1b69525552\",\"dweb:/ipfs/QmbCMy9vJLga2dCxGG6nXW7VKGqsMrzU8phPhcd58xkapq\"]},\"contracts/eip/interface/IERC165.sol\":{\"keccak256\":\"0x35d0a916f70344a5fcc6c67cb531b6150d2fce43e72a6282385eab02020f2f49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75ccd8b9a8b52a93b8097fcb8181b7afb6d72bbe6eaabf434f0481a7a207cc8a\",\"dweb:/ipfs/QmPUZAEE4nwkijcE2amAXAWEVGVG5XaKWGhpgnRwpAf93R\"]},\"contracts/eip/interface/IERC20.sol\":{\"keccak256\":\"0x5bdd9dd97ba7d9d7c9a2953db287e4d9d7fa93a27a96bc2e72a8da4919b6f7ff\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://45527c265ee5de6bbb3ecfc052e7b1175531a82c2ac16172020aee855f7dd592\",\"dweb:/ipfs/QmVZthqbG916qUQSwv1LE8bB58ZGQ1VfQbLbbRV5urfEYA\"]},\"contracts/eip/interface/IERC20Metadata.sol\":{\"keccak256\":\"0xc2500d7a12573fc6f9714d806bec722ad4110a68e6dd14b69903042421001734\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://02423735619f14f3a13fae0ad6e407385565f159ad956c8bd1c14b3605a73a65\",\"dweb:/ipfs/QmYfYWh5wGidaQ7qDbC8oSuQ3gsnd3moJbWZ8yBzMnrYz1\"]},\"contracts/eip/interface/IERC2981.sol\":{\"keccak256\":\"0x7886c17b1bc3df885201378fd070d2f00d05fa54f20f7daf10382ec6ff4bd0c9\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://a0802623ba9555f6d186bab5fd139203b643e88ea31d78f4f05cddd4008ac6cf\",\"dweb:/ipfs/QmYbqzSKkKmF2xYeH1zGNewBDNAhukuaZEUVAvYgnKt1He\"]},\"contracts/eip/interface/IERC721.sol\":{\"keccak256\":\"0xbd9f2dd131e8f1e4e50b1b116eae917510ab9bf5d4356de37c5daf4cffdfa049\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ac3530b317083464271b100de1976ed9179b9e7d5a4fc3d992c61c80676a676\",\"dweb:/ipfs/QmUq1AVzymvp7Y8H1eypGEGU4icjzn5vDSvKMNpXnoaeMT\"]},\"contracts/eip/queryable/ERC721AQueryableUpgradeable.sol\":{\"keccak256\":\"0xcea59e91a24bd3d1f96e7a2d55f16975c73d05c27958d83cfdb9e4d32af9f31a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://55aa2f46ac5c44440475284305a3428d404313560d688783e6bc7e2b2183fbec\",\"dweb:/ipfs/QmTTq6SJ2yZrpsqshztataPDa4Jp9KhfKwRVMUR3eJLtrC\"]},\"contracts/eip/queryable/ERC721AStorage.sol\":{\"keccak256\":\"0x5703e46ac0beec3d3e64e5cc9fa8841a9860d375777515fe341ade8c3dd2418a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8949a575710a700da1c9753ead62b1b98a5cceb446cd13a5271e94f557071760\",\"dweb:/ipfs/QmPRMyXzfHDom2Pfn5aQJJsA4AsojZBmsiDk2fNdtLW5yS\"]},\"contracts/eip/queryable/ERC721AUpgradeable.sol\":{\"keccak256\":\"0xec0039115e836191bd350b6d5e4781b27cbe85bfed9e4009b6bf891addfb6291\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e69d0987ba4390bf21bdc6e149ad5d3c1b06894418c723a42575327a4edbc8ac\",\"dweb:/ipfs/QmPfUAP2NNR8kuQkSAbrBDPEyEKsUXLgwQoq9H5i5RRBhL\"]},\"contracts/eip/queryable/ERC721A__Initializable.sol\":{\"keccak256\":\"0x91d642fafae97248c4da7e8e4d861af2f52bdf19abadd9bbd337226439208146\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b018641078c2cce6629f097b9824b5fbf9f1ba8c7b95de92467997a4c9831d5\",\"dweb:/ipfs/QmP4G7zZmwyxp3awVJtdPzLQ77MY6wNe6CBfjfkfQJkdLZ\"]},\"contracts/eip/queryable/ERC721A__InitializableStorage.sol\":{\"keccak256\":\"0x2bc417d73b72ea83a2952fe8da3fa4cc96a12fdb8fc3d4ee7cf8639ad5f39b43\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29e4dd2c81f14dba0525f55e81718da757c1e60d6b74bc33964d185d1abb051c\",\"dweb:/ipfs/QmcywxZ2UPRTbQYgNKpMjt43TC9hYbGnAnX2atMrVqQsZ9\"]},\"contracts/eip/queryable/IERC721AQueryableUpgradeable.sol\":{\"keccak256\":\"0x8ed8602663a08364759d98051c6c8f872bd056e84e8901bbb05bcd7f823d390f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ef76d5d5955157fa01116cd735c88181b954f57180662db3afa01d19611799a\",\"dweb:/ipfs/QmTXSaJdYuA9RFSSBibEycJ3sqLAkC8uQGTEkeYHcyBTYd\"]},\"contracts/eip/queryable/IERC721AUpgradeable.sol\":{\"keccak256\":\"0xa8e2bf92476033e48df3911783487b46bcd20f6490a6fdc8c93ca7a0e94bca20\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e9c32378e93dc798ff46d6679313fa3a0fbb1be1afd6fa2bef0d1417a77d5c8\",\"dweb:/ipfs/QmVqTn3xKbiUaUyRweDj64r4JDB4RhcMRxpdwc76jcA5gK\"]},\"contracts/extension/Multicall.sol\":{\"keccak256\":\"0x737a71c74307fa360863550d64bbaef599bbcb47829b19c3743ed1ff22b9af55\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://7e82a79ee183dffa3ec01faac0907e04d72a185e55b7c24bff8e8e952b05f4c2\",\"dweb:/ipfs/QmQ9neZqpcgJtGgm84FBzMqFntZ1Sk1KFTWhjCMq8vnKDg\"]},\"contracts/extension/interface/IClaimCondition.sol\":{\"keccak256\":\"0x391e69970031edb30dfa59f8db33c7446b349cd5ec505fd99f0f0b672b19e6d6\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fd9eafca6098421f3aa25bf0a0b24386facc764b7ecb8e6ce4a890afa3c6d459\",\"dweb:/ipfs/QmPXTSX2ie5wsZ6FyXWS4YMa7aPpYNyza9Rym1n799B5LU\"]},\"contracts/extension/interface/IClaimConditionMultiPhase.sol\":{\"keccak256\":\"0x8388214d6cc8f1fd481aed7e062a8b23d5959e870a56076017fcf474404dbbfa\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://54c039ba9f0e674a6bdbb0ab015ad4054feffaea7eb3cc7c485aa95761156125\",\"dweb:/ipfs/QmTya89XYsc1iGAhfsHeZkgGaAv7ivA5Vr4jrGCifYHmKh\"]},\"contracts/extension/interface/IContractMetadata.sol\":{\"keccak256\":\"0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a\",\"dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr\"]},\"contracts/extension/interface/IDrop.sol\":{\"keccak256\":\"0xa8fa4a9fde50a512383c1608295dab741357852822bf089b64dfc8e89041bbad\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://67e26a8f07f05daeebae7a4a652bfe90d4b62d057b737e00a9d3c1782f5bb093\",\"dweb:/ipfs/QmR9b1N5BAuRibaK1iJkyUD7kXE7F3GocjM985oT9wPdZo\"]},\"contracts/extension/interface/IMulticall.sol\":{\"keccak256\":\"0xe2bbd37b8fdb9cc8b933e598512a068ebb214b3f5abc2bc634916def55be4ef3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://012352099c262348ac755a53b082af520babc6c66dc5f1251fc23609728340ca\",\"dweb:/ipfs/QmcXEgzQ53jdJX5ZNy8zivvUjDq7J8WTnR1yAiwTpkQ2ar\"]},\"contracts/extension/interface/IOwnable.sol\":{\"keccak256\":\"0xd659a64da6264fdd50ee379be032fea4917eba4fadfd6d366107fb17e46907f3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c15940c4a3d229f4fdd1226fe297a58fde10b07b86a34de1ed11a8802dd5dea9\",\"dweb:/ipfs/QmS8p8CxWiahLkYsCWNhFjCnmQzuc4ck3kjYYuCFj8LsmC\"]},\"contracts/extension/interface/IPermissions.sol\":{\"keccak256\":\"0xc0cd1f87bac474a06f85e2b341b9b57662aee957fc24180d42c872481c2f2ae3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7dec3eed451d63867531d693f0be3279fa2c9aef3130f0826c3520c06820fa5d\",\"dweb:/ipfs/QmTYANrcPdd9SCe99DWsKJ19evNRQKQGZeoS1Keew4M2cS\"]},\"contracts/extension/interface/IPrimarySale.sol\":{\"keccak256\":\"0x77c89cb8d9b781b0a08b1fa81c95a0dd5c19200b2fb0dc884c1084b931624004\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a37b042af11a08ba5518dadf72c91745d1b5f42b1c20ea5282492bfd18f53869\",\"dweb:/ipfs/QmWEYYG5VqR8MRfr2rydDV98GLKmaJtCC8G1W7MzJ9qFnF\"]},\"contracts/extension/interface/IRoyalty.sol\":{\"keccak256\":\"0x13912ba3970fdedd1eb5bf8bf0bcc5e64e43f2cadb8d22c3d6fb695fd9877385\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b84d19df7aa9cb7460cca50ab050cdcfffb62f53c246daf35df276cad7088e9b\",\"dweb:/ipfs/QmNPPHJuiW1KCcq3aXELnA4X8NaSPM9S2vHbsBEEDYiwP8\"]},\"contracts/extension/interface/IRulesEngine.sol\":{\"keccak256\":\"0x8fe3dd345130a94008bdb46fb13a40eb6e2df9cf8261893103f18f548d8d511d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://869bef4d59679ff81e361e97ef4973e7c9b1676aa52c5a332d292360a2f355ff\",\"dweb:/ipfs/QmeuGoVkJ9EynTsaXM3XkB7ME6BFqNDvynDuLAsfKjiTTv\"]},\"contracts/extension/interface/ISharedMetadataBatch.sol\":{\"keccak256\":\"0x9b122c8c7445dde2c8565c43481bcb24960b1b13a8f82f7dc04b791956e27b86\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://ef9dce42a5d29f9b17323db6209f509423b549db24f414c99526620f7b8ed349\",\"dweb:/ipfs/QmeyjTfAdkHz1g4aAjJyz7d9VMHDdCihqaxLQmM9MkE8Xr\"]},\"contracts/extension/upgradeable/ContractMetadata.sol\":{\"keccak256\":\"0xe42f63bdf826446047de0825bc930d8a157cf613cf35b74cd10ade9246ed5907\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a907ddcadb07f70600753b37b129d7be234f44cd557aaa0a5833b0a796a2a826\",\"dweb:/ipfs/QmdhJ3Y4N6nnQDgLCPVmyRU26sgJfkLxUnqgSt911Eqmms\"]},\"contracts/extension/upgradeable/Drop.sol\":{\"keccak256\":\"0xf94245ca1933f06f2696341366dba8a133e4f5de2245a40a5290d70bbb50995c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1039ca1199b61be6dc259da301cb43b72c6c79a5f3b71962f8b54aecbc821468\",\"dweb:/ipfs/QmQPb8e2aksAT2CWpGWsF1jxGRbZTKU1m873Fe6wb1Hr2B\"]},\"contracts/extension/upgradeable/Ownable.sol\":{\"keccak256\":\"0x33dee90adc13a41f7288082941cfde1980c193e86ca63f0703c6568b3e746595\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b5f0d7ebbe9c8f9d3a56ab55548ccc72dc9c7f7c365c46142121da4681979a71\",\"dweb:/ipfs/QmURLfv5Eqezf85i2r6idTwezZnJAB6jeM3Vk8H3Fm6PYS\"]},\"contracts/extension/upgradeable/Permissions.sol\":{\"keccak256\":\"0x1ced1057ad0c07677db95c9ea291a8748c5cf14f1cce39423d28fab4413fb7fd\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://aeae206f911e13618737544b287d077f870d60c8d40f599aad20c5ffa5730c6e\",\"dweb:/ipfs/QmQ3yy9o7iWAfLrpEDMMB6uA6cw9HJxKCPGjxaEVG4AQrs\"]},\"contracts/extension/upgradeable/PrimarySale.sol\":{\"keccak256\":\"0xf35b8122490c76cd6734e992c45782723bb450b8c3b058e3333e1438fb855625\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://70a8494f03a34f4198eb99b6c88a0f821d5fee53331eb718617f8979658ad31d\",\"dweb:/ipfs/Qmdr3aexVCgxcVk3deASvsbZqPFcrRMp6okkApAYDgU4Mg\"]},\"contracts/extension/upgradeable/Royalty.sol\":{\"keccak256\":\"0x2f5da520d841b2718660ffa35a28a4a2467a223b5e0cd69476fcfba1375f77b4\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ea1a001058a5e443639213432d7e9be5b2be4cff1fb5141d59d524b51d205491\",\"dweb:/ipfs/QmchGWE3veeQgNBb3y4gLaiD1x1MeK2zc5SR6GDstHMBVs\"]},\"contracts/extension/upgradeable/RulesEngine.sol\":{\"keccak256\":\"0xb0edc081d5fa0dc3c5a4bb06ace1333467be8ddfbfbdf54d420db7caf513b88f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e8042f7e255417687d9e7faad700f14cfe47c2ac86c51117e7e4059cc6c4a08a\",\"dweb:/ipfs/QmTFLefq8pw2n1Fk46Xf6TjhqWAnSAMxoT13BkjyDXTZL2\"]},\"contracts/extension/upgradeable/SharedMetadataBatch.sol\":{\"keccak256\":\"0xf14b23f0b181173fc31c098f16e58cf0763d7308f1ab7122f34672c217de6352\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://df45947bb3c956bb6ad52e288785adbb2185dcdd1a9812adc42a6ea6888cd3cd\",\"dweb:/ipfs/QmVQruaJmgASWi1pLvKr3QQJovqjVQUtKsZs3yU5G3QB3v\"]},\"contracts/external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol\":{\"keccak256\":\"0xdbc96b1264d2e2bd82cb7e697056929325e09d1641321145a8cec53b22b9567d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ca7ccf947d21d98878ec18e941b750cd2ae7c563e6d2a707da4f806038d67c8\",\"dweb:/ipfs/QmYVLYUPMD3b95vKrS5yjxcz2MDNNzkWJY9xc9bc9oTZdh\"]},\"contracts/external-deps/openzeppelin/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xa6149938a7c7c8af4244743aeaafcfb1fd9ce15ad45de58fa9576f0ed5599b2c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://839aa4ea6ef6d1972881bfd7420a9ddcd2f37139e3f0bf25310f93f48410702d\",\"dweb:/ipfs/QmSH65kStfbgMbfjFdfJqV412omPy6nB1JMvMt9q7SsytW\"]},\"contracts/external-deps/openzeppelin/utils/Base64.sol\":{\"keccak256\":\"0x5f3461639fe20794cfb4db4a6d8477388a15b2e70a018043084b7c4bedfa8136\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77e5309e2cc4cdc3395214edb0ff43ff5a5f7373f5a425383e540f6fab530f96\",\"dweb:/ipfs/QmTV8DZ9knJDa3b5NPBFQqjvTzodyZVjRUg5mx5A99JPLJ\"]},\"contracts/external-deps/openzeppelin/utils/EnumerableSet.sol\":{\"keccak256\":\"0x5050943b32b6a8f282573d166b2e9d87ab7eb4dbba4ab6acf36ecb54fe6995e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4831d777a29ebdf9f2caecd70e74b97bff1b70e53622fd0a02aed01e21c8271\",\"dweb:/ipfs/QmUqurVVnCc7XkMxb2k23TVQUtuhHZduJ3hTZarTJrqU24\"]},\"contracts/external-deps/openzeppelin/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x5050943b32b6a8f282573d166b2e9d87ab7eb4dbba4ab6acf36ecb54fe6995e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4831d777a29ebdf9f2caecd70e74b97bff1b70e53622fd0a02aed01e21c8271\",\"dweb:/ipfs/QmUqurVVnCc7XkMxb2k23TVQUtuhHZduJ3hTZarTJrqU24\"]},\"contracts/infra/interface/IWETH.sol\":{\"keccak256\":\"0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1\",\"dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU\"]},\"contracts/lib/CurrencyTransferLib.sol\":{\"keccak256\":\"0x4a30bc9a8cd6cc8b855621fb1a651e2c3a1639b0ad153f1139c3ba463605672d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://417cc64ec6393f3cc89981ca9c32bbcc444a5f91363d69f84dd8ace888b2b859\",\"dweb:/ipfs/QmZeaQsYGx4VNoP8e1fcwC87PwvyakheWYeuwEwhFSJnvB\"]},\"contracts/lib/MerkleProof.sol\":{\"keccak256\":\"0xfeb51ecaba6f9c1649a143825dc3b7ca0eb9edff7787c7a54957dfd542f7ece0\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://8819ab0f7546a6a0dc126d5dbf019ba015563220689f661b1da4174f7ce87bbf\",\"dweb:/ipfs/QmT6Q9YQGMJbCWhE6G4ze8dsqjMyewnErTNGgLFSAHkFU7\"]},\"contracts/lib/NFTMetadataRendererLib.sol\":{\"keccak256\":\"0x9e12205ebe6fb7d2ea3fdc57e4e7e8b0c859a7907ed4ea9d912133b67c0eee75\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://530f58f9b6861d1d8c33b3387fdab0f495bdc95742319ea563f1e5902e9080e1\",\"dweb:/ipfs/QmP8yDzk468awMtEaB8yyN9q74U2tv3fLQy6QC9iraQjxF\"]},\"contracts/lib/TWAddress.sol\":{\"keccak256\":\"0x460f032cf3bf43d586e126ab2ec8be4335767f497ccb699741546a1cfba94a7e\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://28fcbf6dde6c2eeb9864f6ec6f21dcc81ec426877debf4b912f2f3bc5b0fc91e\",\"dweb:/ipfs/QmS1SHrZDfefX8EE7DdvszTY6VPCHydf4HM7NKJ2gP72e6\"]},\"contracts/lib/TWStrings.sol\":{\"keccak256\":\"0xef7e9954d888f99baffc10db1d9bf6a2beb66c842d81dea90352ddded22cbbf8\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://832415134684f5413f9d0f3f5536aa30848690cfe54769f7730a3807438f3bf9\",\"dweb:/ipfs/QmduTiUdtsnyJVMXpdomohEWDVg46aZhnS9uTURu4x1NYt\"]},\"contracts/prebuilts/evolving-nfts/EvolvingNFTLogic.sol\":{\"keccak256\":\"0x9178e659c9b9ed316ed1d951d250d3639ecd9dec2a81de9752c738289dd61cb2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://98d4de40131ba2672566de0c20a3687241026765fa215b25ae3bf6a18b975bff\",\"dweb:/ipfs/QmaXHBfWRAVx4prSwxmyaCdScR68rqcCxg9o7RRXHAccDV\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC2981Upgradeable.sol\":{\"keccak256\":\"0xa8ff557539dcfed5706eddde2aa929e06bb1764e71aa8c1048a78970bf3ca37d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6be9c619be5e1c7ecf1c3d13adc5fa81ae602ca3866b739b2f43443a77f5606c\",\"dweb:/ipfs/QmTSxboNCPMfhuvaCfZhEusxZ4BNxwzZoWFys8kzD29EcA\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xea5339a7fff0ed42b45be56a88efdd0b2ddde9fa480dc99fef9a6a4c5b776863\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://841619682637df5579b4c396d281d6c55b26f1b1acce1d0ab67bead5e39cf60c\",\"dweb:/ipfs/QmNRtuKp43ZHJwswdyT3GivY4fDMvz3cxBe1FfDthG1JGj\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.12+commit.f00d7308"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "ApprovalCallerNotOwnerNorApproved"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ApprovalQueryForNonexistentToken"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BalanceQueryForZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidQueryRange"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MintERC2309QuantityExceedsLimit"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MintToZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MintZeroQuantity"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OwnerQueryForNonexistentToken"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OwnershipNotInitializedForExtraData"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferCallerNotOwnerNorApproved"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferFromIncorrectOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferToNonERC721ReceiverImplementer"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferToZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "URIQueryForNonexistentToken"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "approved",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "struct IClaimCondition.ClaimCondition[]",
              "name": "claimConditions",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "startTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxClaimableSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "supplyClaimed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "merkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "metadata",
                  "type": "string"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "resetEligibility",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ClaimConditionsUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "fromTokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "toTokenId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ConsecutiveTransfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "prevURI",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "newURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ContractURIUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newRoyaltyRecipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newRoyaltyBps",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DefaultRoyalty",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "prevOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnerUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "PrimarySaleRecipientUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "royaltyRecipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "royaltyBps",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RoyaltyForToken",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "SharedMetadataDeleted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "imageURI",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "animationURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SharedMetadataUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "claimConditionIndex",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "claimer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "startTokenId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "quantityClaimed",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensClaimed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "approve"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_quantity",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_currency",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "struct IDrop.AllowlistProof",
              "name": "_allowlistProof",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32[]",
                  "name": "proof",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "claim"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "claimCondition",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "contractURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "_id",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deleteSharedMetadata"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "explicitOwnershipOf",
          "outputs": [
            {
              "internalType": "struct IERC721AUpgradeable.TokenOwnership",
              "name": "ownership",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "uint64",
                  "name": "startTimestamp",
                  "type": "uint64"
                },
                {
                  "internalType": "bool",
                  "name": "burned",
                  "type": "bool"
                },
                {
                  "internalType": "uint24",
                  "name": "extraData",
                  "type": "uint24"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getActiveClaimConditionId",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getAllSharedMetadata",
          "outputs": [
            {
              "internalType": "struct ISharedMetadataBatch.SharedMetadataWithId[]",
              "name": "metadata",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "id",
                  "type": "bytes32"
                },
                {
                  "internalType": "struct ISharedMetadataBatch.SharedMetadataInfo",
                  "name": "metadata",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "string",
                      "name": "name",
                      "type": "string"
                    },
                    {
                      "internalType": "string",
                      "name": "description",
                      "type": "string"
                    },
                    {
                      "internalType": "string",
                      "name": "imageURI",
                      "type": "string"
                    },
                    {
                      "internalType": "string",
                      "name": "animationURI",
                      "type": "string"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getApproved",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_conditionId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getClaimConditionById",
          "outputs": [
            {
              "internalType": "struct IClaimCondition.ClaimCondition",
              "name": "condition",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "startTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxClaimableSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "supplyClaimed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "merkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "metadata",
                  "type": "string"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getDefaultRoyaltyInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoyaltyInfoForToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_conditionId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_claimer",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getSupplyClaimedByWallet",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "supplyClaimedByWallet",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "forwarder",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isTrustedForwarder",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nextTokenIdToClaim",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nextTokenIdToMint",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "primarySaleRecipient",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "salePrice",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "royaltyInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "royaltyAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "struct IClaimCondition.ClaimCondition[]",
              "name": "_conditions",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "startTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxClaimableSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "supplyClaimed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "merkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "metadata",
                  "type": "string"
                }
              ]
            },
            {
              "internalType": "bool",
              "name": "_resetClaimEligibility",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setClaimConditions"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_uri",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setContractURI"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_royaltyRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_royaltyBps",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDefaultRoyaltyInfo"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_saleRecipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPrimarySaleRecipient"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_bps",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRoyaltyInfoForToken"
        },
        {
          "inputs": [
            {
              "internalType": "struct ISharedMetadataBatch.SharedMetadataInfo",
              "name": "metadata",
              "type": "tuple",
              "components": [
                {
                  "internalType": "string",
                  "name": "name",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "imageURI",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "animationURI",
                  "type": "string"
                }
              ]
            },
            {
              "internalType": "bytes32",
              "name": "_id",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setSharedMetadata"
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "startTokenId",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokensOfOwner",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "start",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "stop",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokensOfOwnerIn",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalMinted",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "transferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_conditionId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_claimer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_quantity",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_currency",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "struct IDrop.AllowlistProof",
              "name": "_allowlistProof",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32[]",
                  "name": "proof",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "verifyClaim",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isOverride",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "approve(address,uint256)": {
            "details": "Gives permission to `to` to transfer `tokenId` token to another account. See {ERC721A-_approve}. Requirements: - The caller must own the token or be an approved operator."
          },
          "balanceOf(address)": {
            "details": "Returns the number of tokens in `owner`'s account."
          },
          "burn(uint256)": {
            "details": "Burns `tokenId`. See {ERC721-_burn}."
          },
          "claim(address,uint256,address,uint256,(bytes32[],uint256,uint256,address),bytes)": {
            "details": "Lets an account claim tokens."
          },
          "explicitOwnershipOf(uint256)": {
            "details": "Returns the `TokenOwnership` struct at `tokenId` without reverting. If the `tokenId` is out of bounds: - `addr = address(0)` - `startTimestamp = 0` - `burned = false` - `extraData = 0` If the `tokenId` is burned: - `addr = <Address of owner before token was burned>` - `startTimestamp = <Timestamp when token was burned>` - `burned = true` - `extraData = <Extra data when token was burned>` Otherwise: - `addr = <Address of owner>` - `startTimestamp = <Timestamp of start of ownership>` - `burned = false` - `extraData = <Extra data at start of ownership>`"
          },
          "getActiveClaimConditionId()": {
            "details": "At any given moment, returns the uid for the active claim condition."
          },
          "getApproved(uint256)": {
            "details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
          },
          "getClaimConditionById(uint256)": {
            "details": "Returns the claim condition at the given uid."
          },
          "getRoyaltyInfoForToken(uint256)": {
            "details": "Returns royalty recipient and bps for `_tokenId`.",
            "params": {
              "_tokenId": "The tokenID of the NFT for which to query royalty info."
            }
          },
          "getSupplyClaimedByWallet(uint256,address)": {
            "details": "Returns the supply claimed by claimer for a given conditionId."
          },
          "isApprovedForAll(address,address)": {
            "details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}."
          },
          "name()": {
            "details": "Returns the token collection name."
          },
          "nextTokenIdToClaim()": {
            "details": "The next token ID of the NFT that can be claimed."
          },
          "nextTokenIdToMint()": {
            "details": "The tokenId of the next NFT that will be minted / lazy minted."
          },
          "ownerOf(uint256)": {
            "details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
          },
          "primarySaleRecipient()": {
            "details": "Returns primary sale recipient address."
          },
          "royaltyInfo(uint256,uint256)": {
            "details": "Returns royalty amount and recipient for `tokenId` and `salePrice`.",
            "params": {
              "salePrice": "Sale price of the token.",
              "tokenId": "The tokenID of the NFT for which to query royalty info."
            },
            "returns": {
              "receiver": "       Address of royalty recipient account.",
              "royaltyAmount": "  Royalty amount calculated at current royaltyBps value."
            }
          },
          "safeTransferFrom(address,address,uint256)": {
            "details": "Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            "details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
          },
          "setApprovalForAll(address,bool)": {
            "details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
          },
          "setClaimConditions((uint256,uint256,uint256,uint256,bytes32,uint256,address,string)[],bool)": {
            "details": "Lets a contract admin set claim conditions."
          },
          "setContractURI(string)": {
            "details": "Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.",
            "params": {
              "_uri": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "setDefaultRoyaltyInfo(address,uint256)": {
            "details": "Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {DefaultRoyalty Event}; See {_setupDefaultRoyaltyInfo}.",
            "params": {
              "_royaltyBps": "Updated royalty bps.",
              "_royaltyRecipient": "Address to be set as default royalty recipient."
            }
          },
          "setOwner(address)": {
            "params": {
              "_newOwner": "The address to set as the new owner of the contract."
            }
          },
          "setPrimarySaleRecipient(address)": {
            "details": "Caller should be authorized to set primary sales info.                  See {_canSetPrimarySaleRecipient}.                  Emits {PrimarySaleRecipientUpdated Event}; See {_setupPrimarySaleRecipient}.",
            "params": {
              "_saleRecipient": "Address to be set as new recipient of primary sales."
            }
          },
          "setRoyaltyInfoForToken(uint256,address,uint256)": {
            "details": "Sets royalty info for `_tokenId`. Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {RoyaltyForToken Event}; See {_setupRoyaltyInfoForToken}.",
            "params": {
              "_bps": "Updated royalty bps for the token Id.",
              "_recipient": "Address to be set as royalty recipient for given token Id."
            }
          },
          "supportsInterface(bytes4)": {
            "details": "See ERC 165"
          },
          "symbol()": {
            "details": "Returns the token collection symbol."
          },
          "tokenURI(uint256)": {
            "details": "Returns the URI for a given tokenId."
          },
          "tokensOfOwner(address)": {
            "details": "Returns an array of token IDs owned by `owner`. This function scans the ownership mapping and is O(`totalSupply`) in complexity. It is meant to be called off-chain. See {ERC721AQueryable-tokensOfOwnerIn} for splitting the scan into multiple smaller scans if the collection is large enough to cause an out-of-gas error (10K collections should be fine)."
          },
          "tokensOfOwnerIn(address,uint256,uint256)": {
            "details": "Returns an array of token IDs owned by `owner`, in the range [`start`, `stop`) (i.e. `start <= tokenId < stop`). This function allows for tokens to be queried if the collection grows too big for a single call of {ERC721AQueryable-tokensOfOwner}. Requirements: - `start < stop`"
          },
          "totalSupply()": {
            "details": "Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}."
          },
          "transferFrom(address,address,uint256)": {
            "details": "Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
          },
          "verifyClaim(uint256,address,uint256,address,uint256,(bytes32[],uint256,uint256,address))": {
            "details": "Checks a request to claim NFTs against the active claim condition's criteria."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "contractURI()": {
            "notice": "Returns the contract metadata URI."
          },
          "deleteSharedMetadata(bytes32)": {
            "notice": "Delete shared metadata for NFTs"
          },
          "getAllSharedMetadata()": {
            "notice": "Get all shared metadata"
          },
          "getDefaultRoyaltyInfo()": {
            "notice": "Returns the defualt royalty recipient and BPS for this contract's NFTs."
          },
          "getRoyaltyInfoForToken(uint256)": {
            "notice": "View royalty info for a given token."
          },
          "owner()": {
            "notice": "Returns the owner of the contract."
          },
          "royaltyInfo(uint256,uint256)": {
            "notice": "View royalty info for a given token and sale price."
          },
          "setContractURI(string)": {
            "notice": "Lets a contract admin set the URI for contract-level metadata."
          },
          "setDefaultRoyaltyInfo(address,uint256)": {
            "notice": "Updates default royalty recipient and bps."
          },
          "setOwner(address)": {
            "notice": "Lets an authorized wallet set a new owner for the contract."
          },
          "setPrimarySaleRecipient(address)": {
            "notice": "Updates primary sale recipient."
          },
          "setRoyaltyInfoForToken(uint256,address,uint256)": {
            "notice": "Updates default royalty recipient and bps for a particular token."
          },
          "setSharedMetadata((string,string,string,string),bytes32)": {
            "notice": "Set shared metadata for NFTs"
          },
          "totalMinted()": {
            "notice": "Returns the total amount of tokens minted in the contract."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=lib/chainlink/",
        "@ds-test/=lib/ds-test/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@std/=lib/forge-std/src/",
        "@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/",
        "ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/",
        "ERC721A/=lib/ERC721A/contracts/",
        "chainlink/=lib/chainlink/",
        "contracts/=contracts/",
        "ds-test/=lib/ds-test/src/",
        "dynamic-contracts/=lib/dynamic-contracts/src/",
        "erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/",
        "erc721a-upgradeable/=lib/ERC721A-Upgradeable/",
        "erc721a/=lib/ERC721A/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/prebuilts/evolving-nfts/EvolvingNFTLogic.sol": "EvolvingNFTLogic"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/eip/interface/IERC1155.sol": {
        "keccak256": "0x17c265f3f47161c9d2f6c7f7f4040440df9ad4cd7eb74eb411bf25a94b542f9e",
        "urls": [
          "bzz-raw://c4f468eb184f2a08909834b51e33e854741647f9798aa1e6746f3f1b69525552",
          "dweb:/ipfs/QmbCMy9vJLga2dCxGG6nXW7VKGqsMrzU8phPhcd58xkapq"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC165.sol": {
        "keccak256": "0x35d0a916f70344a5fcc6c67cb531b6150d2fce43e72a6282385eab02020f2f49",
        "urls": [
          "bzz-raw://75ccd8b9a8b52a93b8097fcb8181b7afb6d72bbe6eaabf434f0481a7a207cc8a",
          "dweb:/ipfs/QmPUZAEE4nwkijcE2amAXAWEVGVG5XaKWGhpgnRwpAf93R"
        ],
        "license": "MIT"
      },
      "contracts/eip/interface/IERC20.sol": {
        "keccak256": "0x5bdd9dd97ba7d9d7c9a2953db287e4d9d7fa93a27a96bc2e72a8da4919b6f7ff",
        "urls": [
          "bzz-raw://45527c265ee5de6bbb3ecfc052e7b1175531a82c2ac16172020aee855f7dd592",
          "dweb:/ipfs/QmVZthqbG916qUQSwv1LE8bB58ZGQ1VfQbLbbRV5urfEYA"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC20Metadata.sol": {
        "keccak256": "0xc2500d7a12573fc6f9714d806bec722ad4110a68e6dd14b69903042421001734",
        "urls": [
          "bzz-raw://02423735619f14f3a13fae0ad6e407385565f159ad956c8bd1c14b3605a73a65",
          "dweb:/ipfs/QmYfYWh5wGidaQ7qDbC8oSuQ3gsnd3moJbWZ8yBzMnrYz1"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC2981.sol": {
        "keccak256": "0x7886c17b1bc3df885201378fd070d2f00d05fa54f20f7daf10382ec6ff4bd0c9",
        "urls": [
          "bzz-raw://a0802623ba9555f6d186bab5fd139203b643e88ea31d78f4f05cddd4008ac6cf",
          "dweb:/ipfs/QmYbqzSKkKmF2xYeH1zGNewBDNAhukuaZEUVAvYgnKt1He"
        ],
        "license": "Apache 2.0"
      },
      "contracts/eip/interface/IERC721.sol": {
        "keccak256": "0xbd9f2dd131e8f1e4e50b1b116eae917510ab9bf5d4356de37c5daf4cffdfa049",
        "urls": [
          "bzz-raw://8ac3530b317083464271b100de1976ed9179b9e7d5a4fc3d992c61c80676a676",
          "dweb:/ipfs/QmUq1AVzymvp7Y8H1eypGEGU4icjzn5vDSvKMNpXnoaeMT"
        ],
        "license": "MIT"
      },
      "contracts/eip/queryable/ERC721AQueryableUpgradeable.sol": {
        "keccak256": "0xcea59e91a24bd3d1f96e7a2d55f16975c73d05c27958d83cfdb9e4d32af9f31a",
        "urls": [
          "bzz-raw://55aa2f46ac5c44440475284305a3428d404313560d688783e6bc7e2b2183fbec",
          "dweb:/ipfs/QmTTq6SJ2yZrpsqshztataPDa4Jp9KhfKwRVMUR3eJLtrC"
        ],
        "license": "MIT"
      },
      "contracts/eip/queryable/ERC721AStorage.sol": {
        "keccak256": "0x5703e46ac0beec3d3e64e5cc9fa8841a9860d375777515fe341ade8c3dd2418a",
        "urls": [
          "bzz-raw://8949a575710a700da1c9753ead62b1b98a5cceb446cd13a5271e94f557071760",
          "dweb:/ipfs/QmPRMyXzfHDom2Pfn5aQJJsA4AsojZBmsiDk2fNdtLW5yS"
        ],
        "license": "MIT"
      },
      "contracts/eip/queryable/ERC721AUpgradeable.sol": {
        "keccak256": "0xec0039115e836191bd350b6d5e4781b27cbe85bfed9e4009b6bf891addfb6291",
        "urls": [
          "bzz-raw://e69d0987ba4390bf21bdc6e149ad5d3c1b06894418c723a42575327a4edbc8ac",
          "dweb:/ipfs/QmPfUAP2NNR8kuQkSAbrBDPEyEKsUXLgwQoq9H5i5RRBhL"
        ],
        "license": "MIT"
      },
      "contracts/eip/queryable/ERC721A__Initializable.sol": {
        "keccak256": "0x91d642fafae97248c4da7e8e4d861af2f52bdf19abadd9bbd337226439208146",
        "urls": [
          "bzz-raw://1b018641078c2cce6629f097b9824b5fbf9f1ba8c7b95de92467997a4c9831d5",
          "dweb:/ipfs/QmP4G7zZmwyxp3awVJtdPzLQ77MY6wNe6CBfjfkfQJkdLZ"
        ],
        "license": "MIT"
      },
      "contracts/eip/queryable/ERC721A__InitializableStorage.sol": {
        "keccak256": "0x2bc417d73b72ea83a2952fe8da3fa4cc96a12fdb8fc3d4ee7cf8639ad5f39b43",
        "urls": [
          "bzz-raw://29e4dd2c81f14dba0525f55e81718da757c1e60d6b74bc33964d185d1abb051c",
          "dweb:/ipfs/QmcywxZ2UPRTbQYgNKpMjt43TC9hYbGnAnX2atMrVqQsZ9"
        ],
        "license": "MIT"
      },
      "contracts/eip/queryable/IERC721AQueryableUpgradeable.sol": {
        "keccak256": "0x8ed8602663a08364759d98051c6c8f872bd056e84e8901bbb05bcd7f823d390f",
        "urls": [
          "bzz-raw://5ef76d5d5955157fa01116cd735c88181b954f57180662db3afa01d19611799a",
          "dweb:/ipfs/QmTXSaJdYuA9RFSSBibEycJ3sqLAkC8uQGTEkeYHcyBTYd"
        ],
        "license": "MIT"
      },
      "contracts/eip/queryable/IERC721AUpgradeable.sol": {
        "keccak256": "0xa8e2bf92476033e48df3911783487b46bcd20f6490a6fdc8c93ca7a0e94bca20",
        "urls": [
          "bzz-raw://3e9c32378e93dc798ff46d6679313fa3a0fbb1be1afd6fa2bef0d1417a77d5c8",
          "dweb:/ipfs/QmVqTn3xKbiUaUyRweDj64r4JDB4RhcMRxpdwc76jcA5gK"
        ],
        "license": "MIT"
      },
      "contracts/extension/Multicall.sol": {
        "keccak256": "0x737a71c74307fa360863550d64bbaef599bbcb47829b19c3743ed1ff22b9af55",
        "urls": [
          "bzz-raw://7e82a79ee183dffa3ec01faac0907e04d72a185e55b7c24bff8e8e952b05f4c2",
          "dweb:/ipfs/QmQ9neZqpcgJtGgm84FBzMqFntZ1Sk1KFTWhjCMq8vnKDg"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/interface/IClaimCondition.sol": {
        "keccak256": "0x391e69970031edb30dfa59f8db33c7446b349cd5ec505fd99f0f0b672b19e6d6",
        "urls": [
          "bzz-raw://fd9eafca6098421f3aa25bf0a0b24386facc764b7ecb8e6ce4a890afa3c6d459",
          "dweb:/ipfs/QmPXTSX2ie5wsZ6FyXWS4YMa7aPpYNyza9Rym1n799B5LU"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IClaimConditionMultiPhase.sol": {
        "keccak256": "0x8388214d6cc8f1fd481aed7e062a8b23d5959e870a56076017fcf474404dbbfa",
        "urls": [
          "bzz-raw://54c039ba9f0e674a6bdbb0ab015ad4054feffaea7eb3cc7c485aa95761156125",
          "dweb:/ipfs/QmTya89XYsc1iGAhfsHeZkgGaAv7ivA5Vr4jrGCifYHmKh"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IContractMetadata.sol": {
        "keccak256": "0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2",
        "urls": [
          "bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a",
          "dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IDrop.sol": {
        "keccak256": "0xa8fa4a9fde50a512383c1608295dab741357852822bf089b64dfc8e89041bbad",
        "urls": [
          "bzz-raw://67e26a8f07f05daeebae7a4a652bfe90d4b62d057b737e00a9d3c1782f5bb093",
          "dweb:/ipfs/QmR9b1N5BAuRibaK1iJkyUD7kXE7F3GocjM985oT9wPdZo"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IMulticall.sol": {
        "keccak256": "0xe2bbd37b8fdb9cc8b933e598512a068ebb214b3f5abc2bc634916def55be4ef3",
        "urls": [
          "bzz-raw://012352099c262348ac755a53b082af520babc6c66dc5f1251fc23609728340ca",
          "dweb:/ipfs/QmcXEgzQ53jdJX5ZNy8zivvUjDq7J8WTnR1yAiwTpkQ2ar"
        ],
        "license": "MIT"
      },
      "contracts/extension/interface/IOwnable.sol": {
        "keccak256": "0xd659a64da6264fdd50ee379be032fea4917eba4fadfd6d366107fb17e46907f3",
        "urls": [
          "bzz-raw://c15940c4a3d229f4fdd1226fe297a58fde10b07b86a34de1ed11a8802dd5dea9",
          "dweb:/ipfs/QmS8p8CxWiahLkYsCWNhFjCnmQzuc4ck3kjYYuCFj8LsmC"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPermissions.sol": {
        "keccak256": "0xc0cd1f87bac474a06f85e2b341b9b57662aee957fc24180d42c872481c2f2ae3",
        "urls": [
          "bzz-raw://7dec3eed451d63867531d693f0be3279fa2c9aef3130f0826c3520c06820fa5d",
          "dweb:/ipfs/QmTYANrcPdd9SCe99DWsKJ19evNRQKQGZeoS1Keew4M2cS"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPrimarySale.sol": {
        "keccak256": "0x77c89cb8d9b781b0a08b1fa81c95a0dd5c19200b2fb0dc884c1084b931624004",
        "urls": [
          "bzz-raw://a37b042af11a08ba5518dadf72c91745d1b5f42b1c20ea5282492bfd18f53869",
          "dweb:/ipfs/QmWEYYG5VqR8MRfr2rydDV98GLKmaJtCC8G1W7MzJ9qFnF"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IRoyalty.sol": {
        "keccak256": "0x13912ba3970fdedd1eb5bf8bf0bcc5e64e43f2cadb8d22c3d6fb695fd9877385",
        "urls": [
          "bzz-raw://b84d19df7aa9cb7460cca50ab050cdcfffb62f53c246daf35df276cad7088e9b",
          "dweb:/ipfs/QmNPPHJuiW1KCcq3aXELnA4X8NaSPM9S2vHbsBEEDYiwP8"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IRulesEngine.sol": {
        "keccak256": "0x8fe3dd345130a94008bdb46fb13a40eb6e2df9cf8261893103f18f548d8d511d",
        "urls": [
          "bzz-raw://869bef4d59679ff81e361e97ef4973e7c9b1676aa52c5a332d292360a2f355ff",
          "dweb:/ipfs/QmeuGoVkJ9EynTsaXM3XkB7ME6BFqNDvynDuLAsfKjiTTv"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/ISharedMetadataBatch.sol": {
        "keccak256": "0x9b122c8c7445dde2c8565c43481bcb24960b1b13a8f82f7dc04b791956e27b86",
        "urls": [
          "bzz-raw://ef9dce42a5d29f9b17323db6209f509423b549db24f414c99526620f7b8ed349",
          "dweb:/ipfs/QmeyjTfAdkHz1g4aAjJyz7d9VMHDdCihqaxLQmM9MkE8Xr"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/upgradeable/ContractMetadata.sol": {
        "keccak256": "0xe42f63bdf826446047de0825bc930d8a157cf613cf35b74cd10ade9246ed5907",
        "urls": [
          "bzz-raw://a907ddcadb07f70600753b37b129d7be234f44cd557aaa0a5833b0a796a2a826",
          "dweb:/ipfs/QmdhJ3Y4N6nnQDgLCPVmyRU26sgJfkLxUnqgSt911Eqmms"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/upgradeable/Drop.sol": {
        "keccak256": "0xf94245ca1933f06f2696341366dba8a133e4f5de2245a40a5290d70bbb50995c",
        "urls": [
          "bzz-raw://1039ca1199b61be6dc259da301cb43b72c6c79a5f3b71962f8b54aecbc821468",
          "dweb:/ipfs/QmQPb8e2aksAT2CWpGWsF1jxGRbZTKU1m873Fe6wb1Hr2B"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/upgradeable/Ownable.sol": {
        "keccak256": "0x33dee90adc13a41f7288082941cfde1980c193e86ca63f0703c6568b3e746595",
        "urls": [
          "bzz-raw://b5f0d7ebbe9c8f9d3a56ab55548ccc72dc9c7f7c365c46142121da4681979a71",
          "dweb:/ipfs/QmURLfv5Eqezf85i2r6idTwezZnJAB6jeM3Vk8H3Fm6PYS"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/upgradeable/Permissions.sol": {
        "keccak256": "0x1ced1057ad0c07677db95c9ea291a8748c5cf14f1cce39423d28fab4413fb7fd",
        "urls": [
          "bzz-raw://aeae206f911e13618737544b287d077f870d60c8d40f599aad20c5ffa5730c6e",
          "dweb:/ipfs/QmQ3yy9o7iWAfLrpEDMMB6uA6cw9HJxKCPGjxaEVG4AQrs"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/upgradeable/PrimarySale.sol": {
        "keccak256": "0xf35b8122490c76cd6734e992c45782723bb450b8c3b058e3333e1438fb855625",
        "urls": [
          "bzz-raw://70a8494f03a34f4198eb99b6c88a0f821d5fee53331eb718617f8979658ad31d",
          "dweb:/ipfs/Qmdr3aexVCgxcVk3deASvsbZqPFcrRMp6okkApAYDgU4Mg"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/upgradeable/Royalty.sol": {
        "keccak256": "0x2f5da520d841b2718660ffa35a28a4a2467a223b5e0cd69476fcfba1375f77b4",
        "urls": [
          "bzz-raw://ea1a001058a5e443639213432d7e9be5b2be4cff1fb5141d59d524b51d205491",
          "dweb:/ipfs/QmchGWE3veeQgNBb3y4gLaiD1x1MeK2zc5SR6GDstHMBVs"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/upgradeable/RulesEngine.sol": {
        "keccak256": "0xb0edc081d5fa0dc3c5a4bb06ace1333467be8ddfbfbdf54d420db7caf513b88f",
        "urls": [
          "bzz-raw://e8042f7e255417687d9e7faad700f14cfe47c2ac86c51117e7e4059cc6c4a08a",
          "dweb:/ipfs/QmTFLefq8pw2n1Fk46Xf6TjhqWAnSAMxoT13BkjyDXTZL2"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/upgradeable/SharedMetadataBatch.sol": {
        "keccak256": "0xf14b23f0b181173fc31c098f16e58cf0763d7308f1ab7122f34672c217de6352",
        "urls": [
          "bzz-raw://df45947bb3c956bb6ad52e288785adbb2185dcdd1a9812adc42a6ea6888cd3cd",
          "dweb:/ipfs/QmVQruaJmgASWi1pLvKr3QQJovqjVQUtKsZs3yU5G3QB3v"
        ],
        "license": "Apache-2.0"
      },
      "contracts/external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol": {
        "keccak256": "0xdbc96b1264d2e2bd82cb7e697056929325e09d1641321145a8cec53b22b9567d",
        "urls": [
          "bzz-raw://7ca7ccf947d21d98878ec18e941b750cd2ae7c563e6d2a707da4f806038d67c8",
          "dweb:/ipfs/QmYVLYUPMD3b95vKrS5yjxcz2MDNNzkWJY9xc9bc9oTZdh"
        ],
        "license": "MIT"
      },
      "contracts/external-deps/openzeppelin/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xa6149938a7c7c8af4244743aeaafcfb1fd9ce15ad45de58fa9576f0ed5599b2c",
        "urls": [
          "bzz-raw://839aa4ea6ef6d1972881bfd7420a9ddcd2f37139e3f0bf25310f93f48410702d",
          "dweb:/ipfs/QmSH65kStfbgMbfjFdfJqV412omPy6nB1JMvMt9q7SsytW"
        ],
        "license": "MIT"
      },
      "contracts/external-deps/openzeppelin/utils/Base64.sol": {
        "keccak256": "0x5f3461639fe20794cfb4db4a6d8477388a15b2e70a018043084b7c4bedfa8136",
        "urls": [
          "bzz-raw://77e5309e2cc4cdc3395214edb0ff43ff5a5f7373f5a425383e540f6fab530f96",
          "dweb:/ipfs/QmTV8DZ9knJDa3b5NPBFQqjvTzodyZVjRUg5mx5A99JPLJ"
        ],
        "license": "MIT"
      },
      "contracts/external-deps/openzeppelin/utils/EnumerableSet.sol": {
        "keccak256": "0x5050943b32b6a8f282573d166b2e9d87ab7eb4dbba4ab6acf36ecb54fe6995e4",
        "urls": [
          "bzz-raw://d4831d777a29ebdf9f2caecd70e74b97bff1b70e53622fd0a02aed01e21c8271",
          "dweb:/ipfs/QmUqurVVnCc7XkMxb2k23TVQUtuhHZduJ3hTZarTJrqU24"
        ],
        "license": "MIT"
      },
      "contracts/external-deps/openzeppelin/utils/structs/EnumerableSet.sol": {
        "keccak256": "0x5050943b32b6a8f282573d166b2e9d87ab7eb4dbba4ab6acf36ecb54fe6995e4",
        "urls": [
          "bzz-raw://d4831d777a29ebdf9f2caecd70e74b97bff1b70e53622fd0a02aed01e21c8271",
          "dweb:/ipfs/QmUqurVVnCc7XkMxb2k23TVQUtuhHZduJ3hTZarTJrqU24"
        ],
        "license": "MIT"
      },
      "contracts/infra/interface/IWETH.sol": {
        "keccak256": "0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b",
        "urls": [
          "bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1",
          "dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/CurrencyTransferLib.sol": {
        "keccak256": "0x4a30bc9a8cd6cc8b855621fb1a651e2c3a1639b0ad153f1139c3ba463605672d",
        "urls": [
          "bzz-raw://417cc64ec6393f3cc89981ca9c32bbcc444a5f91363d69f84dd8ace888b2b859",
          "dweb:/ipfs/QmZeaQsYGx4VNoP8e1fcwC87PwvyakheWYeuwEwhFSJnvB"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/MerkleProof.sol": {
        "keccak256": "0xfeb51ecaba6f9c1649a143825dc3b7ca0eb9edff7787c7a54957dfd542f7ece0",
        "urls": [
          "bzz-raw://8819ab0f7546a6a0dc126d5dbf019ba015563220689f661b1da4174f7ce87bbf",
          "dweb:/ipfs/QmT6Q9YQGMJbCWhE6G4ze8dsqjMyewnErTNGgLFSAHkFU7"
        ],
        "license": "Apache 2.0"
      },
      "contracts/lib/NFTMetadataRendererLib.sol": {
        "keccak256": "0x9e12205ebe6fb7d2ea3fdc57e4e7e8b0c859a7907ed4ea9d912133b67c0eee75",
        "urls": [
          "bzz-raw://530f58f9b6861d1d8c33b3387fdab0f495bdc95742319ea563f1e5902e9080e1",
          "dweb:/ipfs/QmP8yDzk468awMtEaB8yyN9q74U2tv3fLQy6QC9iraQjxF"
        ],
        "license": "Apache 2.0"
      },
      "contracts/lib/TWAddress.sol": {
        "keccak256": "0x460f032cf3bf43d586e126ab2ec8be4335767f497ccb699741546a1cfba94a7e",
        "urls": [
          "bzz-raw://28fcbf6dde6c2eeb9864f6ec6f21dcc81ec426877debf4b912f2f3bc5b0fc91e",
          "dweb:/ipfs/QmS1SHrZDfefX8EE7DdvszTY6VPCHydf4HM7NKJ2gP72e6"
        ],
        "license": "Apache 2.0"
      },
      "contracts/lib/TWStrings.sol": {
        "keccak256": "0xef7e9954d888f99baffc10db1d9bf6a2beb66c842d81dea90352ddded22cbbf8",
        "urls": [
          "bzz-raw://832415134684f5413f9d0f3f5536aa30848690cfe54769f7730a3807438f3bf9",
          "dweb:/ipfs/QmduTiUdtsnyJVMXpdomohEWDVg46aZhnS9uTURu4x1NYt"
        ],
        "license": "Apache 2.0"
      },
      "contracts/prebuilts/evolving-nfts/EvolvingNFTLogic.sol": {
        "keccak256": "0x9178e659c9b9ed316ed1d951d250d3639ecd9dec2a81de9752c738289dd61cb2",
        "urls": [
          "bzz-raw://98d4de40131ba2672566de0c20a3687241026765fa215b25ae3bf6a18b975bff",
          "dweb:/ipfs/QmaXHBfWRAVx4prSwxmyaCdScR68rqcCxg9o7RRXHAccDV"
        ],
        "license": "Apache-2.0"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC2981Upgradeable.sol": {
        "keccak256": "0xa8ff557539dcfed5706eddde2aa929e06bb1764e71aa8c1048a78970bf3ca37d",
        "urls": [
          "bzz-raw://6be9c619be5e1c7ecf1c3d13adc5fa81ae602ca3866b739b2f43443a77f5606c",
          "dweb:/ipfs/QmTSxboNCPMfhuvaCfZhEusxZ4BNxwzZoWFys8kzD29EcA"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e",
        "urls": [
          "bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497",
          "dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3",
        "urls": [
          "bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4",
          "dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol": {
        "keccak256": "0xea5339a7fff0ed42b45be56a88efdd0b2ddde9fa480dc99fef9a6a4c5b776863",
        "urls": [
          "bzz-raw://841619682637df5579b4c396d281d6c55b26f1b1acce1d0ab67bead5e39cf60c",
          "dweb:/ipfs/QmNRtuKp43ZHJwswdyT3GivY4fDMvz3cxBe1FfDthG1JGj"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol": {
        "keccak256": "0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09",
        "urls": [
          "bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758",
          "dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/prebuilts/evolving-nfts/EvolvingNFTLogic.sol",
    "id": 75111,
    "exportedSymbols": {
      "AddressUpgradeable": [
        155768
      ],
      "Base64": [
        48461
      ],
      "ContextUpgradeable": [
        156044
      ],
      "ContractMetadata": [
        38777
      ],
      "ContractMetadataStorage": [
        38697
      ],
      "CurrencyTransferLib": [
        63578
      ],
      "Drop": [
        39739
      ],
      "DropStorage": [
        39036
      ],
      "ERC2771ContextUpgradeable": [
        45607
      ],
      "ERC721AQueryableUpgradeable": [
        14507
      ],
      "ERC721AStorage": [
        14558
      ],
      "ERC721AUpgradeable": [
        16535
      ],
      "ERC721A__IERC721ReceiverUpgradeable": [
        14579
      ],
      "ERC721A__Initializable": [
        16638
      ],
      "ERC721A__InitializableStorage": [
        16664
      ],
      "EnumerableSet": [
        49379
      ],
      "EvolvingNFTLogic": [
        75110
      ],
      "IClaimCondition": [
        32285
      ],
      "IClaimConditionMultiPhase": [
        32308
      ],
      "IContractMetadata": [
        32437
      ],
      "IDrop": [
        32573
      ],
      "IERC165": [
        13829
      ],
      "IERC165Upgradeable": [
        157261
      ],
      "IERC20": [
        13899
      ],
      "IERC2981": [
        13973
      ],
      "IERC2981Upgradeable": [
        150048
      ],
      "IERC721AQueryableUpgradeable": [
        16705
      ],
      "IERC721AUpgradeable": [
        16911
      ],
      "IMulticall": [
        32926
      ],
      "IOwnable": [
        33183
      ],
      "IPermissions": [
        33256
      ],
      "IPrimarySale": [
        33345
      ],
      "IRoyalty": [
        33409
      ],
      "ISharedMetadataBatch": [
        33684
      ],
      "IWETH": [
        54557
      ],
      "Initializable": [
        150199
      ],
      "MerkleProof": [
        63678
      ],
      "Multicall": [
        20595
      ],
      "NFTMetadataRenderer": [
        63857
      ],
      "Ownable": [
        40832
      ],
      "OwnableStorage": [
        40735
      ],
      "Permissions": [
        41253
      ],
      "PermissionsStorage": [
        40867
      ],
      "PrimarySale": [
        41908
      ],
      "PrimarySaleStorage": [
        41822
      ],
      "Royalty": [
        42274
      ],
      "RoyaltyStorage": [
        42020
      ],
      "RulesEngine": [
        43072
      ],
      "SafeERC20": [
        48369
      ],
      "SharedMetadataBatch": [
        43319
      ],
      "SharedMetadataBatchStorage": [
        43104
      ],
      "StringsUpgradeable": [
        156453
      ],
      "TWAddress": [
        64152
      ],
      "TWStrings": [
        64852
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:9657:329",
    "nodes": [
      {
        "id": 74511,
        "nodeType": "PragmaDirective",
        "src": "39:24:329",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".11"
        ]
      },
      {
        "id": 74512,
        "nodeType": "ImportDirective",
        "src": "775:74:329",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 75111,
        "sourceUnit": 156454,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 74513,
        "nodeType": "ImportDirective",
        "src": "850:80:329",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC2981Upgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/interfaces/IERC2981Upgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 75111,
        "sourceUnit": 150049,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 74514,
        "nodeType": "ImportDirective",
        "src": "932:61:329",
        "nodes": [],
        "absolutePath": "contracts/eip/queryable/ERC721AQueryableUpgradeable.sol",
        "file": "../../eip/queryable/ERC721AQueryableUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 75111,
        "sourceUnit": 14508,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 74515,
        "nodeType": "ImportDirective",
        "src": "1043:79:329",
        "nodes": [],
        "absolutePath": "contracts/external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol",
        "file": "../../external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 75111,
        "sourceUnit": 45608,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 74516,
        "nodeType": "ImportDirective",
        "src": "1123:43:329",
        "nodes": [],
        "absolutePath": "contracts/lib/CurrencyTransferLib.sol",
        "file": "../../lib/CurrencyTransferLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 75111,
        "sourceUnit": 63579,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 74517,
        "nodeType": "ImportDirective",
        "src": "1208:39:329",
        "nodes": [],
        "absolutePath": "contracts/extension/Multicall.sol",
        "file": "../../extension/Multicall.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 75111,
        "sourceUnit": 20596,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 74518,
        "nodeType": "ImportDirective",
        "src": "1248:58:329",
        "nodes": [],
        "absolutePath": "contracts/extension/upgradeable/ContractMetadata.sol",
        "file": "../../extension/upgradeable/ContractMetadata.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 75111,
        "sourceUnit": 38778,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 74519,
        "nodeType": "ImportDirective",
        "src": "1307:49:329",
        "nodes": [],
        "absolutePath": "contracts/extension/upgradeable/Royalty.sol",
        "file": "../../extension/upgradeable/Royalty.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 75111,
        "sourceUnit": 42275,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 74520,
        "nodeType": "ImportDirective",
        "src": "1357:53:329",
        "nodes": [],
        "absolutePath": "contracts/extension/upgradeable/PrimarySale.sol",
        "file": "../../extension/upgradeable/PrimarySale.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 75111,
        "sourceUnit": 41909,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 74521,
        "nodeType": "ImportDirective",
        "src": "1411:49:329",
        "nodes": [],
        "absolutePath": "contracts/extension/upgradeable/Ownable.sol",
        "file": "../../extension/upgradeable/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 75111,
        "sourceUnit": 40833,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 74522,
        "nodeType": "ImportDirective",
        "src": "1461:53:329",
        "nodes": [],
        "absolutePath": "contracts/extension/upgradeable/Permissions.sol",
        "file": "../../extension/upgradeable/Permissions.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 75111,
        "sourceUnit": 41254,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 74523,
        "nodeType": "ImportDirective",
        "src": "1515:46:329",
        "nodes": [],
        "absolutePath": "contracts/extension/upgradeable/Drop.sol",
        "file": "../../extension/upgradeable/Drop.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 75111,
        "sourceUnit": 39740,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 74524,
        "nodeType": "ImportDirective",
        "src": "1562:61:329",
        "nodes": [],
        "absolutePath": "contracts/extension/upgradeable/SharedMetadataBatch.sol",
        "file": "../../extension/upgradeable/SharedMetadataBatch.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 75111,
        "sourceUnit": 43320,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 74526,
        "nodeType": "ImportDirective",
        "src": "1624:74:329",
        "nodes": [],
        "absolutePath": "contracts/extension/upgradeable/RulesEngine.sol",
        "file": "../../extension/upgradeable/RulesEngine.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 75111,
        "sourceUnit": 43073,
        "symbolAliases": [
          {
            "foreign": {
              "id": 74525,
              "name": "RulesEngine",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 43072,
              "src": "1633:11:329",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_RulesEngine_$43072_$",
                "typeString": "type(contract RulesEngine)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 75110,
        "nodeType": "ContractDefinition",
        "src": "1700:7995:329",
        "nodes": [
          {
            "id": 74545,
            "nodeType": "UsingForDirective",
            "src": "1898:37:329",
            "nodes": [],
            "libraryName": {
              "id": 74543,
              "name": "StringsUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 156453,
              "src": "1904:18:329"
            },
            "typeName": {
              "id": 74544,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1927:7:329",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 74549,
            "nodeType": "UsingForDirective",
            "src": "1940:49:329",
            "nodes": [],
            "libraryName": {
              "id": 74546,
              "name": "EnumerableSet",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 49379,
              "src": "1946:13:329"
            },
            "typeName": {
              "id": 74548,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 74547,
                "name": "EnumerableSet.Bytes32Set",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 48985,
                "src": "1964:24:329"
              },
              "referencedDeclaration": 48985,
              "src": "1964:24:329",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Bytes32Set_$48985_storage_ptr",
                "typeString": "struct EnumerableSet.Bytes32Set"
              }
            }
          },
          {
            "id": 74553,
            "nodeType": "VariableDeclaration",
            "src": "2285:50:329",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 74550,
              "nodeType": "StructuredDocumentation",
              "src": "2179:101:329",
              "text": "@dev Default admin role for all roles. Only accounts with this role can grant/revoke other roles."
            },
            "mutability": "constant",
            "name": "DEFAULT_ADMIN_ROLE",
            "nameLocation": "2310:18:329",
            "scope": 75110,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 74551,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2285:7:329",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "hexValue": "30783030",
              "id": 74552,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2331:4:329",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0x00"
            },
            "visibility": "private"
          },
          {
            "id": 74559,
            "nodeType": "VariableDeclaration",
            "src": "2455:67:329",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 74554,
              "nodeType": "StructuredDocumentation",
              "src": "2341:109:329",
              "text": "@dev Only TRANSFER_ROLE holders can have tokens transferred from or to them, during restricted transfers."
            },
            "mutability": "constant",
            "name": "TRANSFER_ROLE",
            "nameLocation": "2480:13:329",
            "scope": 75110,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 74555,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2455:7:329",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "5452414e534645525f524f4c45",
                  "id": 74557,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2506:15:329",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c",
                    "typeString": "literal_string \"TRANSFER_ROLE\""
                  },
                  "value": "TRANSFER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c",
                    "typeString": "literal_string \"TRANSFER_ROLE\""
                  }
                ],
                "id": 74556,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "2496:9:329",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 74558,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2496:26:329",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "id": 74565,
            "nodeType": "VariableDeclaration",
            "src": "2598:63:329",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 74560,
              "nodeType": "StructuredDocumentation",
              "src": "2528:65:329",
              "text": "@dev Only MINTER_ROLE holders can sign off on `MintRequest`s."
            },
            "mutability": "constant",
            "name": "MINTER_ROLE",
            "nameLocation": "2623:11:329",
            "scope": 75110,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 74561,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2598:7:329",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "4d494e5445525f524f4c45",
                  "id": 74563,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2647:13:329",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                    "typeString": "literal_string \"MINTER_ROLE\""
                  },
                  "value": "MINTER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                    "typeString": "literal_string \"MINTER_ROLE\""
                  }
                ],
                "id": 74562,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "2637:9:329",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 74564,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2637:24:329",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "id": 74704,
            "nodeType": "FunctionDefinition",
            "src": "2909:1115:329",
            "nodes": [],
            "body": {
              "id": 74703,
              "nodeType": "Block",
              "src": "3083:941:329",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "id": 74579,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "3097:18:329",
                    "subExpression": {
                      "arguments": [
                        {
                          "id": 74577,
                          "name": "_tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 74568,
                          "src": "3106:8:329",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 74576,
                        "name": "_exists",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15422,
                        "src": "3098:7:329",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (uint256) view returns (bool)"
                        }
                      },
                      "id": 74578,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3098:17:329",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 74585,
                  "nodeType": "IfStatement",
                  "src": "3093:62:329",
                  "trueBody": {
                    "id": 74584,
                    "nodeType": "Block",
                    "src": "3117:38:329",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "214944",
                              "id": 74581,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3138:5:329",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_bb93743f09f74891390357bf755064ac37fe4e3bc84b64922d94e34b2182452a",
                                "typeString": "literal_string \"!ID\""
                              },
                              "value": "!ID"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_bb93743f09f74891390357bf755064ac37fe4e3bc84b64922d94e34b2182452a",
                                "typeString": "literal_string \"!ID\""
                              }
                            ],
                            "id": 74580,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -19,
                              -19
                            ],
                            "referencedDeclaration": -19,
                            "src": "3131:6:329",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 74582,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3131:13:329",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 74583,
                        "nodeType": "ExpressionStatement",
                        "src": "3131:13:329"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    74587
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 74587,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "3194:5:329",
                      "nodeType": "VariableDeclaration",
                      "scope": 74703,
                      "src": "3186:13:329",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 74586,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3186:7:329",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 74591,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 74589,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74568,
                        "src": "3210:8:329",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 74588,
                      "name": "ownerOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15035,
                      "src": "3202:7:329",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 74590,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3202:17:329",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3186:33:329"
                },
                {
                  "assignments": [
                    74593
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 74593,
                      "mutability": "mutable",
                      "name": "score",
                      "nameLocation": "3237:5:329",
                      "nodeType": "VariableDeclaration",
                      "scope": 74703,
                      "src": "3229:13:329",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 74592,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3229:7:329",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 74595,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 74594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3245:1:329",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3229:17:329"
                },
                {
                  "assignments": [
                    74597
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 74597,
                      "mutability": "mutable",
                      "name": "engine",
                      "nameLocation": "3265:6:329",
                      "nodeType": "VariableDeclaration",
                      "scope": 74703,
                      "src": "3257:14:329",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 74596,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3257:7:329",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 74606,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 74601,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "3294:4:329",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_EvolvingNFTLogic_$75110",
                                  "typeString": "contract EvolvingNFTLogic"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_EvolvingNFTLogic_$75110",
                                  "typeString": "contract EvolvingNFTLogic"
                                }
                              ],
                              "id": 74600,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3286:7:329",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 74599,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3286:7:329",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 74602,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3286:13:329",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 74598,
                          "name": "RulesEngine",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43072,
                          "src": "3274:11:329",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_RulesEngine_$43072_$",
                            "typeString": "type(contract RulesEngine)"
                          }
                        },
                        "id": 74603,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3274:26:329",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_RulesEngine_$43072",
                          "typeString": "contract RulesEngine"
                        }
                      },
                      "id": 74604,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getRulesEngineOverride",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42734,
                      "src": "3274:49:329",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 74605,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3274:51:329",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3257:68:329"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 74612,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 74607,
                      "name": "engine",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74597,
                      "src": "3339:6:329",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 74610,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3357:1:329",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 74609,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3349:7:329",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 74608,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3349:7:329",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 74611,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3349:10:329",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3339:20:329",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 74635,
                    "nodeType": "Block",
                    "src": "3435:75:329",
                    "statements": [
                      {
                        "expression": {
                          "id": 74633,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 74623,
                            "name": "score",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 74593,
                            "src": "3449:5:329",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 74631,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 74587,
                                "src": "3493:5:329",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 74627,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "3477:4:329",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_EvolvingNFTLogic_$75110",
                                          "typeString": "contract EvolvingNFTLogic"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_EvolvingNFTLogic_$75110",
                                          "typeString": "contract EvolvingNFTLogic"
                                        }
                                      ],
                                      "id": 74626,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "3469:7:329",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 74625,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3469:7:329",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 74628,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3469:13:329",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 74624,
                                  "name": "RulesEngine",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 43072,
                                  "src": "3457:11:329",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_RulesEngine_$43072_$",
                                    "typeString": "type(contract RulesEngine)"
                                  }
                                },
                                "id": 74629,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3457:26:329",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_RulesEngine_$43072",
                                  "typeString": "contract RulesEngine"
                                }
                              },
                              "id": 74630,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "getScore",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 42664,
                              "src": "3457:35:329",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 74632,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3457:42:329",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3449:50:329",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 74634,
                        "nodeType": "ExpressionStatement",
                        "src": "3449:50:329"
                      }
                    ]
                  },
                  "id": 74636,
                  "nodeType": "IfStatement",
                  "src": "3335:175:329",
                  "trueBody": {
                    "id": 74622,
                    "nodeType": "Block",
                    "src": "3361:68:329",
                    "statements": [
                      {
                        "expression": {
                          "id": 74620,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 74613,
                            "name": "score",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 74593,
                            "src": "3375:5:329",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 74618,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 74587,
                                "src": "3412:5:329",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 74615,
                                    "name": "engine",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 74597,
                                    "src": "3395:6:329",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 74614,
                                  "name": "RulesEngine",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 43072,
                                  "src": "3383:11:329",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_RulesEngine_$43072_$",
                                    "typeString": "type(contract RulesEngine)"
                                  }
                                },
                                "id": 74616,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3383:19:329",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_RulesEngine_$43072",
                                  "typeString": "contract RulesEngine"
                                }
                              },
                              "id": 74617,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "getScore",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 42664,
                              "src": "3383:28:329",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 74619,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3383:35:329",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3375:43:329",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 74621,
                        "nodeType": "ExpressionStatement",
                        "src": "3375:43:329"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    74641
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 74641,
                      "mutability": "mutable",
                      "name": "ids",
                      "nameLocation": "3619:3:329",
                      "nodeType": "VariableDeclaration",
                      "scope": 74703,
                      "src": "3602:20:329",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                        "typeString": "bytes32[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 74639,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3602:7:329",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 74640,
                        "nodeType": "ArrayTypeName",
                        "src": "3602:9:329",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                          "typeString": "bytes32[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 74647,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 74642,
                            "name": "_sharedMetadataBatchStorage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43312,
                            "src": "3625:27:329",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Data_$43091_storage_ptr_$",
                              "typeString": "function () pure returns (struct SharedMetadataBatchStorage.Data storage pointer)"
                            }
                          },
                          "id": 74643,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3625:29:329",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Data_$43091_storage_ptr",
                            "typeString": "struct SharedMetadataBatchStorage.Data storage pointer"
                          }
                        },
                        "id": 74644,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "ids",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43085,
                        "src": "3625:33:329",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Bytes32Set_$48985_storage",
                          "typeString": "struct EnumerableSet.Bytes32Set storage ref"
                        }
                      },
                      "id": 74645,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "values",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49088,
                      "src": "3625:40:329",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Set_$48985_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$bound_to$_t_struct$_Bytes32Set_$48985_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.Bytes32Set storage pointer) view returns (bytes32[] memory)"
                      }
                    },
                    "id": 74646,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3625:42:329",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                      "typeString": "bytes32[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3602:65:329"
                },
                {
                  "assignments": [
                    74649
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 74649,
                      "mutability": "mutable",
                      "name": "targetId",
                      "nameLocation": "3685:8:329",
                      "nodeType": "VariableDeclaration",
                      "scope": 74703,
                      "src": "3677:16:329",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 74648,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3677:7:329",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 74651,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 74650,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3696:1:329",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3677:20:329"
                },
                {
                  "assignments": [
                    74653
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 74653,
                      "mutability": "mutable",
                      "name": "check",
                      "nameLocation": "3715:5:329",
                      "nodeType": "VariableDeclaration",
                      "scope": 74703,
                      "src": "3707:13:329",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 74652,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3707:7:329",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 74655,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 74654,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3723:1:329",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3707:17:329"
                },
                {
                  "body": {
                    "id": 74696,
                    "nodeType": "Block",
                    "src": "3779:177:329",
                    "statements": [
                      {
                        "assignments": [
                          74669
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 74669,
                            "mutability": "mutable",
                            "name": "id",
                            "nameLocation": "3801:2:329",
                            "nodeType": "VariableDeclaration",
                            "scope": 74696,
                            "src": "3793:10:329",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 74668,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3793:7:329",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 74676,
                        "initialValue": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 74672,
                                "name": "ids",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 74641,
                                "src": "3814:3:329",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                  "typeString": "bytes32[] memory"
                                }
                              },
                              "id": 74674,
                              "indexExpression": {
                                "id": 74673,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 74657,
                                "src": "3818:1:329",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3814:6:329",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 74671,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3806:7:329",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 74670,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3806:7:329",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 74675,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3806:15:329",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3793:28:329"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 74683,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 74679,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 74677,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 74669,
                              "src": "3840:2:329",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<=",
                            "rightExpression": {
                              "id": 74678,
                              "name": "score",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 74593,
                              "src": "3846:5:329",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3840:11:329",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 74682,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 74680,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 74669,
                              "src": "3855:2:329",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">=",
                            "rightExpression": {
                              "id": 74681,
                              "name": "check",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 74653,
                              "src": "3861:5:329",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3855:11:329",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "3840:26:329",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 74695,
                        "nodeType": "IfStatement",
                        "src": "3836:110:329",
                        "trueBody": {
                          "id": 74694,
                          "nodeType": "Block",
                          "src": "3868:78:329",
                          "statements": [
                            {
                              "expression": {
                                "id": 74688,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 74684,
                                  "name": "targetId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 74649,
                                  "src": "3886:8:329",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 74685,
                                    "name": "ids",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 74641,
                                    "src": "3897:3:329",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                      "typeString": "bytes32[] memory"
                                    }
                                  },
                                  "id": 74687,
                                  "indexExpression": {
                                    "id": 74686,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 74657,
                                    "src": "3901:1:329",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3897:6:329",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "src": "3886:17:329",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "id": 74689,
                              "nodeType": "ExpressionStatement",
                              "src": "3886:17:329"
                            },
                            {
                              "expression": {
                                "id": 74692,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 74690,
                                  "name": "check",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 74653,
                                  "src": "3921:5:329",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 74691,
                                  "name": "id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 74669,
                                  "src": "3929:2:329",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3921:10:329",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 74693,
                              "nodeType": "ExpressionStatement",
                              "src": "3921:10:329"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 74663,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 74660,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74657,
                      "src": "3755:1:329",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 74661,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74641,
                        "src": "3759:3:329",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      },
                      "id": 74662,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3759:10:329",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3755:14:329",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 74697,
                  "initializationExpression": {
                    "assignments": [
                      74657
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 74657,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3748:1:329",
                        "nodeType": "VariableDeclaration",
                        "scope": 74697,
                        "src": "3740:9:329",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 74656,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3740:7:329",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 74659,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 74658,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3752:1:329",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3740:13:329"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 74666,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 74664,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74657,
                        "src": "3771:1:329",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "+=",
                      "rightHandSide": {
                        "hexValue": "31",
                        "id": 74665,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3776:1:329",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "3771:6:329",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 74667,
                    "nodeType": "ExpressionStatement",
                    "src": "3771:6:329"
                  },
                  "nodeType": "ForStatement",
                  "src": "3735:221:329"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74699,
                        "name": "targetId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74649,
                        "src": "3998:8:329",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 74700,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74568,
                        "src": "4008:8:329",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 74698,
                      "name": "_getURIFromSharedMetadata",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43298,
                      "src": "3972:25:329",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_uint256_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (bytes32,uint256) view returns (string memory)"
                      }
                    },
                    "id": 74701,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3972:45:329",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 74575,
                  "id": 74702,
                  "nodeType": "Return",
                  "src": "3965:52:329"
                }
              ]
            },
            "baseFunctions": [
              15006,
              16899
            ],
            "documentation": {
              "id": 74566,
              "nodeType": "StructuredDocumentation",
              "src": "2859:45:329",
              "text": "@dev Returns the URI for a given tokenId."
            },
            "functionSelector": "c87b56dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "2918:8:329",
            "overrides": {
              "id": 74572,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 74570,
                  "name": "ERC721AUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 16535,
                  "src": "3006:18:329"
                },
                {
                  "id": 74571,
                  "name": "IERC721AUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 16911,
                  "src": "3026:19:329"
                }
              ],
              "src": "2997:49:329"
            },
            "parameters": {
              "id": 74569,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74568,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "2935:8:329",
                  "nodeType": "VariableDeclaration",
                  "scope": 74704,
                  "src": "2927:16:329",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 74567,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2927:7:329",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2926:18:329"
            },
            "returnParameters": {
              "id": 74575,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74574,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 74704,
                  "src": "3064:13:329",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 74573,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3064:6:329",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3063:15:329"
            },
            "scope": 75110,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 74729,
            "nodeType": "FunctionDefinition",
            "src": "4055:301:329",
            "nodes": [],
            "body": {
              "id": 74728,
              "nodeType": "Block",
              "src": "4240:116:329",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 74726,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 74718,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 74707,
                          "src": "4281:11:329",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 74716,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -25,
                          "src": "4257:5:329",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_EvolvingNFTLogic_$75110_$",
                            "typeString": "type(contract super EvolvingNFTLogic)"
                          }
                        },
                        "id": 74717,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14935,
                        "src": "4257:23:329",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view returns (bool)"
                        }
                      },
                      "id": 74719,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4257:36:329",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 74725,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 74721,
                              "name": "IERC2981Upgradeable",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 150048,
                              "src": "4302:19:329",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC2981Upgradeable_$150048_$",
                                "typeString": "type(contract IERC2981Upgradeable)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_IERC2981Upgradeable_$150048_$",
                                "typeString": "type(contract IERC2981Upgradeable)"
                              }
                            ],
                            "id": 74720,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "4297:4:329",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 74722,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4297:25:329",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_IERC2981Upgradeable_$150048",
                            "typeString": "type(contract IERC2981Upgradeable)"
                          }
                        },
                        "id": 74723,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "interfaceId",
                        "nodeType": "MemberAccess",
                        "src": "4297:37:329",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 74724,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74707,
                        "src": "4338:11:329",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "src": "4297:52:329",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4257:92:329",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 74715,
                  "id": 74727,
                  "nodeType": "Return",
                  "src": "4250:99:329"
                }
              ]
            },
            "baseFunctions": [
              13828,
              14935,
              16770
            ],
            "documentation": {
              "id": 74705,
              "nodeType": "StructuredDocumentation",
              "src": "4030:20:329",
              "text": "@dev See ERC 165"
            },
            "functionSelector": "01ffc9a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "4064:17:329",
            "overrides": {
              "id": 74712,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 74709,
                  "name": "ERC721AUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 16535,
                  "src": "4163:18:329"
                },
                {
                  "id": 74710,
                  "name": "IERC721AUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 16911,
                  "src": "4183:19:329"
                },
                {
                  "id": 74711,
                  "name": "IERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 13829,
                  "src": "4204:7:329"
                }
              ],
              "src": "4154:58:329"
            },
            "parameters": {
              "id": 74708,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74707,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "4089:11:329",
                  "nodeType": "VariableDeclaration",
                  "scope": 74729,
                  "src": "4082:18:329",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 74706,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "4082:6:329",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4081:20:329"
            },
            "returnParameters": {
              "id": 74715,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74714,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 74729,
                  "src": "4230:4:329",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 74713,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4230:4:329",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4229:6:329"
            },
            "scope": 75110,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 74739,
            "nodeType": "FunctionDefinition",
            "src": "4412:91:329",
            "nodes": [],
            "body": {
              "id": 74738,
              "nodeType": "Block",
              "src": "4478:25:329",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "hexValue": "31",
                    "id": 74736,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4495:1:329",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "functionReturnParameters": 74735,
                  "id": 74737,
                  "nodeType": "Return",
                  "src": "4488:8:329"
                }
              ]
            },
            "baseFunctions": [
              14713
            ],
            "documentation": {
              "id": 74730,
              "nodeType": "StructuredDocumentation",
              "src": "4362:45:329",
              "text": "@dev The start token ID for the contract."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_startTokenId",
            "nameLocation": "4421:13:329",
            "overrides": {
              "id": 74732,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4451:8:329"
            },
            "parameters": {
              "id": 74731,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4434:2:329"
            },
            "returnParameters": {
              "id": 74735,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74734,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 74739,
                  "src": "4469:7:329",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 74733,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4469:7:329",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4468:9:329"
            },
            "scope": 75110,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 74748,
            "nodeType": "FunctionDefinition",
            "src": "4509:93:329",
            "nodes": [],
            "body": {
              "id": 74747,
              "nodeType": "Block",
              "src": "4563:39:329",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 74744,
                      "name": "_startTokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        74739
                      ],
                      "referencedDeclaration": 74739,
                      "src": "4580:13:329",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
                        "typeString": "function () pure returns (uint256)"
                      }
                    },
                    "id": 74745,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4580:15:329",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 74743,
                  "id": 74746,
                  "nodeType": "Return",
                  "src": "4573:22:329"
                }
              ]
            },
            "functionSelector": "e6798baa",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "startTokenId",
            "nameLocation": "4518:12:329",
            "parameters": {
              "id": 74740,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4530:2:329"
            },
            "returnParameters": {
              "id": 74743,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74742,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 74748,
                  "src": "4554:7:329",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 74741,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4554:7:329",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4553:9:329"
            },
            "scope": 75110,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 74834,
            "nodeType": "FunctionDefinition",
            "src": "4875:840:329",
            "nodes": [],
            "body": {
              "id": 74833,
              "nodeType": "Block",
              "src": "5061:654:329",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 74763,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 74761,
                      "name": "_pricePerToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74757,
                      "src": "5075:14:329",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 74762,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5093:1:329",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5075:19:329",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 74774,
                  "nodeType": "IfStatement",
                  "src": "5071:103:329",
                  "trueBody": {
                    "id": 74773,
                    "nodeType": "Block",
                    "src": "5096:78:329",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 74768,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 74765,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "5118:3:329",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 74766,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "5118:9:329",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 74767,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5131:1:329",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "5118:14:329",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "2156616c7565",
                              "id": 74769,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5134:8:329",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_208006903b0d1b8c530b3b2de29e1f765aa4311b3f136f1a342e9de039eda1b1",
                                "typeString": "literal_string \"!Value\""
                              },
                              "value": "!Value"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_208006903b0d1b8c530b3b2de29e1f765aa4311b3f136f1a342e9de039eda1b1",
                                "typeString": "literal_string \"!Value\""
                              }
                            ],
                            "id": 74764,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5110:7:329",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 74770,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5110:33:329",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 74771,
                        "nodeType": "ExpressionStatement",
                        "src": "5110:33:329"
                      },
                      {
                        "functionReturnParameters": 74760,
                        "id": 74772,
                        "nodeType": "Return",
                        "src": "5157:7:329"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    74776
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 74776,
                      "mutability": "mutable",
                      "name": "totalPrice",
                      "nameLocation": "5192:10:329",
                      "nodeType": "VariableDeclaration",
                      "scope": 74833,
                      "src": "5184:18:329",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 74775,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5184:7:329",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 74780,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 74779,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 74777,
                      "name": "_quantityToClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74753,
                      "src": "5205:16:329",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 74778,
                      "name": "_pricePerToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74757,
                      "src": "5224:14:329",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5205:33:329",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5184:54:329"
                },
                {
                  "assignments": [
                    74782
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 74782,
                      "mutability": "mutable",
                      "name": "validMsgValue",
                      "nameLocation": "5254:13:329",
                      "nodeType": "VariableDeclaration",
                      "scope": 74833,
                      "src": "5249:18:329",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 74781,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "5249:4:329",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 74783,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5249:18:329"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 74787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 74784,
                      "name": "_currency",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74755,
                      "src": "5281:9:329",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 74785,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63578,
                        "src": "5294:19:329",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$63578_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 74786,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "NATIVE_TOKEN",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63346,
                      "src": "5294:32:329",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5281:45:329",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 74803,
                    "nodeType": "Block",
                    "src": "5398:55:329",
                    "statements": [
                      {
                        "expression": {
                          "id": 74801,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 74796,
                            "name": "validMsgValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 74782,
                            "src": "5412:13:329",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 74800,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 74797,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5428:3:329",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 74798,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "5428:9:329",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 74799,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5441:1:329",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "5428:14:329",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "5412:30:329",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 74802,
                        "nodeType": "ExpressionStatement",
                        "src": "5412:30:329"
                      }
                    ]
                  },
                  "id": 74804,
                  "nodeType": "IfStatement",
                  "src": "5277:176:329",
                  "trueBody": {
                    "id": 74795,
                    "nodeType": "Block",
                    "src": "5328:64:329",
                    "statements": [
                      {
                        "expression": {
                          "id": 74793,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 74788,
                            "name": "validMsgValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 74782,
                            "src": "5342:13:329",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 74792,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 74789,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5358:3:329",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 74790,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "5358:9:329",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 74791,
                              "name": "totalPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 74776,
                              "src": "5371:10:329",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "5358:23:329",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "5342:39:329",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 74794,
                        "nodeType": "ExpressionStatement",
                        "src": "5342:39:329"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74806,
                        "name": "validMsgValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74782,
                        "src": "5470:13:329",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "2156",
                        "id": 74807,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5485:4:329",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4ab0e284d9415599667c0851e9b633cbc3046603c10b78f97a804ca375843fda",
                          "typeString": "literal_string \"!V\""
                        },
                        "value": "!V"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4ab0e284d9415599667c0851e9b633cbc3046603c10b78f97a804ca375843fda",
                          "typeString": "literal_string \"!V\""
                        }
                      ],
                      "id": 74805,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5462:7:329",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 74808,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5462:28:329",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74809,
                  "nodeType": "ExpressionStatement",
                  "src": "5462:28:329"
                },
                {
                  "assignments": [
                    74811
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 74811,
                      "mutability": "mutable",
                      "name": "saleRecipient",
                      "nameLocation": "5509:13:329",
                      "nodeType": "VariableDeclaration",
                      "scope": 74833,
                      "src": "5501:21:329",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 74810,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5501:7:329",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 74822,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 74817,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 74812,
                        "name": "_primarySaleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74751,
                        "src": "5525:21:329",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 74815,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5558:1:329",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 74814,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5550:7:329",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 74813,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5550:7:329",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 74816,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5550:10:329",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "5525:35:329",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 74820,
                      "name": "_primarySaleRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74751,
                      "src": "5588:21:329",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 74821,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "5525:84:329",
                    "trueExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 74818,
                        "name": "primarySaleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41837,
                        "src": "5563:20:329",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 74819,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5563:22:329",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5501:108:329"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74826,
                        "name": "_currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74755,
                        "src": "5657:9:329",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 74827,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            75098
                          ],
                          "referencedDeclaration": 75098,
                          "src": "5668:10:329",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 74828,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5668:12:329",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 74829,
                        "name": "saleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74811,
                        "src": "5682:13:329",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 74830,
                        "name": "totalPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74776,
                        "src": "5697:10:329",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 74823,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63578,
                        "src": "5620:19:329",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$63578_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 74825,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferCurrency",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63383,
                      "src": "5620:36:329",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 74831,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5620:88:329",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74832,
                  "nodeType": "ExpressionStatement",
                  "src": "5620:88:329"
                }
              ]
            },
            "baseFunctions": [
              39722
            ],
            "documentation": {
              "id": 74749,
              "nodeType": "StructuredDocumentation",
              "src": "4791:79:329",
              "text": "@dev Collects and distributes the primary sale value of NFTs being claimed."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_collectPriceOnClaim",
            "nameLocation": "4884:20:329",
            "overrides": {
              "id": 74759,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5052:8:329"
            },
            "parameters": {
              "id": 74758,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74751,
                  "mutability": "mutable",
                  "name": "_primarySaleRecipient",
                  "nameLocation": "4922:21:329",
                  "nodeType": "VariableDeclaration",
                  "scope": 74834,
                  "src": "4914:29:329",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 74750,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4914:7:329",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74753,
                  "mutability": "mutable",
                  "name": "_quantityToClaim",
                  "nameLocation": "4961:16:329",
                  "nodeType": "VariableDeclaration",
                  "scope": 74834,
                  "src": "4953:24:329",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 74752,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4953:7:329",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74755,
                  "mutability": "mutable",
                  "name": "_currency",
                  "nameLocation": "4995:9:329",
                  "nodeType": "VariableDeclaration",
                  "scope": 74834,
                  "src": "4987:17:329",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 74754,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4987:7:329",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74757,
                  "mutability": "mutable",
                  "name": "_pricePerToken",
                  "nameLocation": "5022:14:329",
                  "nodeType": "VariableDeclaration",
                  "scope": 74834,
                  "src": "5014:22:329",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 74756,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5014:7:329",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4904:138:329"
            },
            "returnParameters": {
              "id": 74760,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5061:0:329"
            },
            "scope": 75110,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 74856,
            "nodeType": "FunctionDefinition",
            "src": "5768:248:329",
            "nodes": [],
            "body": {
              "id": 74855,
              "nodeType": "Block",
              "src": "5922:94:329",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 74848,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 74845,
                      "name": "startTokenId_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74843,
                      "src": "5932:13:329",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 74846,
                        "name": "_nextTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14725,
                        "src": "5948:12:329",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 74847,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5948:14:329",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5932:30:329",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 74849,
                  "nodeType": "ExpressionStatement",
                  "src": "5932:30:329"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74851,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74837,
                        "src": "5982:3:329",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 74852,
                        "name": "_quantityBeingClaimed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74839,
                        "src": "5987:21:329",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 74850,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        16135,
                        16150
                      ],
                      "referencedDeclaration": 16150,
                      "src": "5972:9:329",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 74853,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5972:37:329",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74854,
                  "nodeType": "ExpressionStatement",
                  "src": "5972:37:329"
                }
              ]
            },
            "baseFunctions": [
              39732
            ],
            "documentation": {
              "id": 74835,
              "nodeType": "StructuredDocumentation",
              "src": "5721:42:329",
              "text": "@dev Transfers the NFTs being claimed."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transferTokensOnClaim",
            "nameLocation": "5777:22:329",
            "overrides": {
              "id": 74841,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5869:8:329"
            },
            "parameters": {
              "id": 74840,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74837,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "5808:3:329",
                  "nodeType": "VariableDeclaration",
                  "scope": 74856,
                  "src": "5800:11:329",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 74836,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5800:7:329",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74839,
                  "mutability": "mutable",
                  "name": "_quantityBeingClaimed",
                  "nameLocation": "5821:21:329",
                  "nodeType": "VariableDeclaration",
                  "scope": 74856,
                  "src": "5813:29:329",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 74838,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5813:7:329",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5799:44:329"
            },
            "returnParameters": {
              "id": 74844,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74843,
                  "mutability": "mutable",
                  "name": "startTokenId_",
                  "nameLocation": "5903:13:329",
                  "nodeType": "VariableDeclaration",
                  "scope": 74856,
                  "src": "5895:21:329",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 74842,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5895:7:329",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5894:23:329"
            },
            "scope": 75110,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 74870,
            "nodeType": "FunctionDefinition",
            "src": "6116:143:329",
            "nodes": [],
            "body": {
              "id": 74869,
              "nodeType": "Block",
              "src": "6193:66:329",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74864,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74553,
                        "src": "6219:18:329",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 74865,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            75098
                          ],
                          "referencedDeclaration": 75098,
                          "src": "6239:10:329",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 74866,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6239:12:329",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 74863,
                      "name": "_hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74967,
                      "src": "6210:8:329",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 74867,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6210:42:329",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 74862,
                  "id": 74868,
                  "nodeType": "Return",
                  "src": "6203:49:329"
                }
              ]
            },
            "baseFunctions": [
              41907
            ],
            "documentation": {
              "id": 74857,
              "nodeType": "StructuredDocumentation",
              "src": "6022:89:329",
              "text": "@dev Checks whether primary sale recipient can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetPrimarySaleRecipient",
            "nameLocation": "6125:27:329",
            "overrides": {
              "id": 74859,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6169:8:329"
            },
            "parameters": {
              "id": 74858,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6152:2:329"
            },
            "returnParameters": {
              "id": 74862,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74861,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 74870,
                  "src": "6187:4:329",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 74860,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6187:4:329",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6186:6:329"
            },
            "scope": 75110,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 74884,
            "nodeType": "FunctionDefinition",
            "src": "6342:128:329",
            "nodes": [],
            "body": {
              "id": 74883,
              "nodeType": "Block",
              "src": "6404:66:329",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74878,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74553,
                        "src": "6430:18:329",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 74879,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            75098
                          ],
                          "referencedDeclaration": 75098,
                          "src": "6450:10:329",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 74880,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6450:12:329",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 74877,
                      "name": "_hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74967,
                      "src": "6421:8:329",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 74881,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6421:42:329",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 74876,
                  "id": 74882,
                  "nodeType": "Return",
                  "src": "6414:49:329"
                }
              ]
            },
            "baseFunctions": [
              40831
            ],
            "documentation": {
              "id": 74871,
              "nodeType": "StructuredDocumentation",
              "src": "6265:72:329",
              "text": "@dev Checks whether owner can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetOwner",
            "nameLocation": "6351:12:329",
            "overrides": {
              "id": 74873,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6380:8:329"
            },
            "parameters": {
              "id": 74872,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6363:2:329"
            },
            "returnParameters": {
              "id": 74876,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74875,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 74884,
                  "src": "6398:4:329",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 74874,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6398:4:329",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6397:6:329"
            },
            "scope": 75110,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 74898,
            "nodeType": "FunctionDefinition",
            "src": "6560:134:329",
            "nodes": [],
            "body": {
              "id": 74897,
              "nodeType": "Block",
              "src": "6628:66:329",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74892,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74553,
                        "src": "6654:18:329",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 74893,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            75098
                          ],
                          "referencedDeclaration": 75098,
                          "src": "6674:10:329",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 74894,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6674:12:329",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 74891,
                      "name": "_hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74967,
                      "src": "6645:8:329",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 74895,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6645:42:329",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 74890,
                  "id": 74896,
                  "nodeType": "Return",
                  "src": "6638:49:329"
                }
              ]
            },
            "baseFunctions": [
              42273
            ],
            "documentation": {
              "id": 74885,
              "nodeType": "StructuredDocumentation",
              "src": "6476:79:329",
              "text": "@dev Checks whether royalty info can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetRoyaltyInfo",
            "nameLocation": "6569:18:329",
            "overrides": {
              "id": 74887,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6604:8:329"
            },
            "parameters": {
              "id": 74886,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6587:2:329"
            },
            "returnParameters": {
              "id": 74890,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74889,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 74898,
                  "src": "6622:4:329",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 74888,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6622:4:329",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6621:6:329"
            },
            "scope": 75110,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 74912,
            "nodeType": "FunctionDefinition",
            "src": "6789:134:329",
            "nodes": [],
            "body": {
              "id": 74911,
              "nodeType": "Block",
              "src": "6857:66:329",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74906,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74553,
                        "src": "6883:18:329",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 74907,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            75098
                          ],
                          "referencedDeclaration": 75098,
                          "src": "6903:10:329",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 74908,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6903:12:329",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 74905,
                      "name": "_hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74967,
                      "src": "6874:8:329",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 74909,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6874:42:329",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 74904,
                  "id": 74910,
                  "nodeType": "Return",
                  "src": "6867:49:329"
                }
              ]
            },
            "baseFunctions": [
              38776
            ],
            "documentation": {
              "id": 74899,
              "nodeType": "StructuredDocumentation",
              "src": "6700:84:329",
              "text": "@dev Checks whether contract metadata can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetContractURI",
            "nameLocation": "6798:18:329",
            "overrides": {
              "id": 74901,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6833:8:329"
            },
            "parameters": {
              "id": 74900,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6816:2:329"
            },
            "returnParameters": {
              "id": 74904,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74903,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 74912,
                  "src": "6851:4:329",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 74902,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6851:4:329",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6850:6:329"
            },
            "scope": 75110,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 74926,
            "nodeType": "FunctionDefinition",
            "src": "7018:138:329",
            "nodes": [],
            "body": {
              "id": 74925,
              "nodeType": "Block",
              "src": "7090:66:329",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74920,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74553,
                        "src": "7116:18:329",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 74921,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            75098
                          ],
                          "referencedDeclaration": 75098,
                          "src": "7136:10:329",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 74922,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7136:12:329",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 74919,
                      "name": "_hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74967,
                      "src": "7107:8:329",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 74923,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7107:42:329",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 74918,
                  "id": 74924,
                  "nodeType": "Return",
                  "src": "7100:49:329"
                }
              ]
            },
            "baseFunctions": [
              39738
            ],
            "documentation": {
              "id": 74913,
              "nodeType": "StructuredDocumentation",
              "src": "6929:84:329",
              "text": "@dev Checks whether platform fee info can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetClaimConditions",
            "nameLocation": "7027:22:329",
            "overrides": {
              "id": 74915,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7066:8:329"
            },
            "parameters": {
              "id": 74914,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7049:2:329"
            },
            "returnParameters": {
              "id": 74918,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74917,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 74926,
                  "src": "7084:4:329",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 74916,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7084:4:329",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7083:6:329"
            },
            "scope": 75110,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 74940,
            "nodeType": "FunctionDefinition",
            "src": "7250:138:329",
            "nodes": [],
            "body": {
              "id": 74939,
              "nodeType": "Block",
              "src": "7329:59:329",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74934,
                        "name": "MINTER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74565,
                        "src": "7355:11:329",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 74935,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            75098
                          ],
                          "referencedDeclaration": 75098,
                          "src": "7368:10:329",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 74936,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7368:12:329",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 74933,
                      "name": "_hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74967,
                      "src": "7346:8:329",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 74937,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7346:35:329",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 74932,
                  "id": 74938,
                  "nodeType": "Return",
                  "src": "7339:42:329"
                }
              ]
            },
            "baseFunctions": [
              43318
            ],
            "documentation": {
              "id": 74927,
              "nodeType": "StructuredDocumentation",
              "src": "7162:83:329",
              "text": "@dev Returns whether shared metadata can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetSharedMetadata",
            "nameLocation": "7259:21:329",
            "overrides": {
              "id": 74929,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7305:8:329"
            },
            "parameters": {
              "id": 74928,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7280:2:329"
            },
            "returnParameters": {
              "id": 74932,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74931,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 74940,
                  "src": "7323:4:329",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 74930,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7323:4:329",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7322:6:329"
            },
            "scope": 75110,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 74967,
            "nodeType": "FunctionDefinition",
            "src": "7456:208:329",
            "nodes": [],
            "body": {
              "id": 74966,
              "nodeType": "Block",
              "src": "7536:128:329",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    74954
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 74954,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "7578:4:329",
                      "nodeType": "VariableDeclaration",
                      "scope": 74966,
                      "src": "7546:36:329",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$40854_storage_ptr",
                        "typeString": "struct PermissionsStorage.Data"
                      },
                      "typeName": {
                        "id": 74953,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 74952,
                          "name": "PermissionsStorage.Data",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 40854,
                          "src": "7546:23:329"
                        },
                        "referencedDeclaration": 40854,
                        "src": "7546:23:329",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$40854_storage_ptr",
                          "typeString": "struct PermissionsStorage.Data"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 74958,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 74955,
                        "name": "PermissionsStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40867,
                        "src": "7585:18:329",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_PermissionsStorage_$40867_$",
                          "typeString": "type(library PermissionsStorage)"
                        }
                      },
                      "id": 74956,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "data",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40866,
                      "src": "7585:23:329",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Data_$40854_storage_ptr_$",
                        "typeString": "function () pure returns (struct PermissionsStorage.Data storage pointer)"
                      }
                    },
                    "id": 74957,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7585:25:329",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Data_$40854_storage_ptr",
                      "typeString": "struct PermissionsStorage.Data storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7546:64:329"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "expression": {
                          "id": 74959,
                          "name": "data",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 74954,
                          "src": "7627:4:329",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Data_$40854_storage_ptr",
                            "typeString": "struct PermissionsStorage.Data storage pointer"
                          }
                        },
                        "id": 74960,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "_hasRole",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 40848,
                        "src": "7627:13:329",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_bool_$_$",
                          "typeString": "mapping(bytes32 => mapping(address => bool))"
                        }
                      },
                      "id": 74962,
                      "indexExpression": {
                        "id": 74961,
                        "name": "_role",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74943,
                        "src": "7641:5:329",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7627:20:329",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 74964,
                    "indexExpression": {
                      "id": 74963,
                      "name": "_account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74945,
                      "src": "7648:8:329",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7627:30:329",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 74949,
                  "id": 74965,
                  "nodeType": "Return",
                  "src": "7620:37:329"
                }
              ]
            },
            "documentation": {
              "id": 74941,
              "nodeType": "StructuredDocumentation",
              "src": "7394:57:329",
              "text": "@dev Checks whether an account has a particular role."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_hasRole",
            "nameLocation": "7465:8:329",
            "parameters": {
              "id": 74946,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74943,
                  "mutability": "mutable",
                  "name": "_role",
                  "nameLocation": "7482:5:329",
                  "nodeType": "VariableDeclaration",
                  "scope": 74967,
                  "src": "7474:13:329",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 74942,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7474:7:329",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74945,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "7497:8:329",
                  "nodeType": "VariableDeclaration",
                  "scope": 74967,
                  "src": "7489:16:329",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 74944,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7489:7:329",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7473:33:329"
            },
            "returnParameters": {
              "id": 74949,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74948,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 74967,
                  "src": "7530:4:329",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 74947,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7530:4:329",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7529:6:329"
            },
            "scope": 75110,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 74981,
            "nodeType": "FunctionDefinition",
            "src": "7930:145:329",
            "nodes": [],
            "body": {
              "id": 74980,
              "nodeType": "Block",
              "src": "7985:90:329",
              "nodes": [],
              "statements": [
                {
                  "id": 74979,
                  "nodeType": "UncheckedBlock",
                  "src": "7995:74:329",
                  "statements": [
                    {
                      "expression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 74977,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 74973,
                            "name": "_nextTokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14725,
                            "src": "8026:12:329",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 74974,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8026:14:329",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 74975,
                            "name": "_startTokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              74739
                            ],
                            "referencedDeclaration": 74739,
                            "src": "8043:13:329",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
                              "typeString": "function () pure returns (uint256)"
                            }
                          },
                          "id": 74976,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8043:15:329",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8026:32:329",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "functionReturnParameters": 74972,
                      "id": 74978,
                      "nodeType": "Return",
                      "src": "8019:39:329"
                    }
                  ]
                }
              ]
            },
            "documentation": {
              "id": 74968,
              "nodeType": "StructuredDocumentation",
              "src": "7848:77:329",
              "text": " Returns the total amount of tokens minted in the contract."
            },
            "functionSelector": "a2309ff8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalMinted",
            "nameLocation": "7939:11:329",
            "parameters": {
              "id": 74969,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7950:2:329"
            },
            "returnParameters": {
              "id": 74972,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74971,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 74981,
                  "src": "7976:7:329",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 74970,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7976:7:329",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7975:9:329"
            },
            "scope": 75110,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 74991,
            "nodeType": "FunctionDefinition",
            "src": "8157:99:329",
            "nodes": [],
            "body": {
              "id": 74990,
              "nodeType": "Block",
              "src": "8218:38:329",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 74987,
                      "name": "_nextTokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14725,
                      "src": "8235:12:329",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 74988,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8235:14:329",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 74986,
                  "id": 74989,
                  "nodeType": "Return",
                  "src": "8228:21:329"
                }
              ]
            },
            "documentation": {
              "id": 74982,
              "nodeType": "StructuredDocumentation",
              "src": "8081:71:329",
              "text": "@dev The tokenId of the next NFT that will be minted / lazy minted."
            },
            "functionSelector": "3b1475a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "nextTokenIdToMint",
            "nameLocation": "8166:17:329",
            "parameters": {
              "id": 74983,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8183:2:329"
            },
            "returnParameters": {
              "id": 74986,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74985,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 74991,
                  "src": "8209:7:329",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 74984,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8209:7:329",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8208:9:329"
            },
            "scope": 75110,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 75001,
            "nodeType": "FunctionDefinition",
            "src": "8325:100:329",
            "nodes": [],
            "body": {
              "id": 75000,
              "nodeType": "Block",
              "src": "8387:38:329",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 74997,
                      "name": "_nextTokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14725,
                      "src": "8404:12:329",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 74998,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8404:14:329",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 74996,
                  "id": 74999,
                  "nodeType": "Return",
                  "src": "8397:21:329"
                }
              ]
            },
            "documentation": {
              "id": 74992,
              "nodeType": "StructuredDocumentation",
              "src": "8262:58:329",
              "text": "@dev The next token ID of the NFT that can be claimed."
            },
            "functionSelector": "acd083f8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "nextTokenIdToClaim",
            "nameLocation": "8334:18:329",
            "parameters": {
              "id": 74993,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8352:2:329"
            },
            "returnParameters": {
              "id": 74996,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74995,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 75001,
                  "src": "8378:7:329",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 74994,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8378:7:329",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8377:9:329"
            },
            "scope": 75110,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 75013,
            "nodeType": "FunctionDefinition",
            "src": "8481:184:329",
            "nodes": [],
            "body": {
              "id": 75012,
              "nodeType": "Block",
              "src": "8529:136:329",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 75008,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75004,
                        "src": "8644:7:329",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 75009,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8653:4:329",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 75007,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        16231,
                        16407
                      ],
                      "referencedDeclaration": 16407,
                      "src": "8638:5:329",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (uint256,bool)"
                      }
                    },
                    "id": 75010,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8638:20:329",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 75011,
                  "nodeType": "ExpressionStatement",
                  "src": "8638:20:329"
                }
              ]
            },
            "documentation": {
              "id": 75002,
              "nodeType": "StructuredDocumentation",
              "src": "8431:45:329",
              "text": "@dev Burns `tokenId`. See {ERC721-_burn}."
            },
            "functionSelector": "42966c68",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "8490:4:329",
            "parameters": {
              "id": 75005,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75004,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8503:7:329",
                  "nodeType": "VariableDeclaration",
                  "scope": 75013,
                  "src": "8495:15:329",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 75003,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8495:7:329",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8494:17:329"
            },
            "returnParameters": {
              "id": 75006,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8529:0:329"
            },
            "scope": 75110,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 75077,
            "nodeType": "FunctionDefinition",
            "src": "8719:569:329",
            "nodes": [],
            "body": {
              "id": 75076,
              "nodeType": "Block",
              "src": "8881:407:329",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 75029,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75016,
                        "src": "8919:4:329",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 75030,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75018,
                        "src": "8925:2:329",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 75031,
                        "name": "startTokenId_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75020,
                        "src": "8929:13:329",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 75032,
                        "name": "quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75022,
                        "src": "8944:8:329",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 75026,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "8891:5:329",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_EvolvingNFTLogic_$75110_$",
                          "typeString": "type(contract super EvolvingNFTLogic)"
                        }
                      },
                      "id": 75028,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_beforeTokenTransfers",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15725,
                      "src": "8891:27:329",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 75033,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8891:62:329",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 75034,
                  "nodeType": "ExpressionStatement",
                  "src": "8891:62:329"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 75056,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 75049,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 75042,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "9065:36:329",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 75036,
                              "name": "TRANSFER_ROLE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 74559,
                              "src": "9075:13:329",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 75039,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9098:1:329",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 75038,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "9090:7:329",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 75037,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "9090:7:329",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 75040,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9090:10:329",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 75035,
                            "name": "_hasRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 74967,
                            "src": "9066:8:329",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) view returns (bool)"
                            }
                          },
                          "id": 75041,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9066:35:329",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 75048,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 75043,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 75016,
                          "src": "9105:4:329",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 75046,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9121:1:329",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 75045,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9113:7:329",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 75044,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9113:7:329",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 75047,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9113:10:329",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9105:18:329",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "9065:58:329",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 75055,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 75050,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75018,
                        "src": "9127:2:329",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 75053,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9141:1:329",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 75052,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9133:7:329",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 75051,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9133:7:329",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 75054,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9133:10:329",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "9127:16:329",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "9065:78:329",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 75075,
                  "nodeType": "IfStatement",
                  "src": "9061:221:329",
                  "trueBody": {
                    "id": 75074,
                    "nodeType": "Block",
                    "src": "9145:137:329",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 75067,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 75061,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "9163:30:329",
                            "subExpression": {
                              "arguments": [
                                {
                                  "id": 75058,
                                  "name": "TRANSFER_ROLE",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 74559,
                                  "src": "9173:13:329",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "id": 75059,
                                  "name": "from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 75016,
                                  "src": "9188:4:329",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 75057,
                                "name": "_hasRole",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 74967,
                                "src": "9164:8:329",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (bytes32,address) view returns (bool)"
                                }
                              },
                              "id": 75060,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9164:29:329",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "id": 75066,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "9197:28:329",
                            "subExpression": {
                              "arguments": [
                                {
                                  "id": 75063,
                                  "name": "TRANSFER_ROLE",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 74559,
                                  "src": "9207:13:329",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "id": 75064,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 75018,
                                  "src": "9222:2:329",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 75062,
                                "name": "_hasRole",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 74967,
                                "src": "9198:8:329",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (bytes32,address) view returns (bool)"
                                }
                              },
                              "id": 75065,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9198:27:329",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "9163:62:329",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 75073,
                        "nodeType": "IfStatement",
                        "src": "9159:113:329",
                        "trueBody": {
                          "id": 75072,
                          "nodeType": "Block",
                          "src": "9227:45:329",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "hexValue": "2154",
                                    "id": 75069,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "9252:4:329",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_7db3b04d902e8ae9e0c6f3e0ba4170cc392ab92143dfd3399cb577e88ea77ce4",
                                      "typeString": "literal_string \"!T\""
                                    },
                                    "value": "!T"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_7db3b04d902e8ae9e0c6f3e0ba4170cc392ab92143dfd3399cb577e88ea77ce4",
                                      "typeString": "literal_string \"!T\""
                                    }
                                  ],
                                  "id": 75068,
                                  "name": "revert",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -19,
                                    -19
                                  ],
                                  "referencedDeclaration": -19,
                                  "src": "9245:6:329",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (string memory) pure"
                                  }
                                },
                                "id": 75070,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9245:12:329",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 75071,
                              "nodeType": "ExpressionStatement",
                              "src": "9245:12:329"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              15725
            ],
            "documentation": {
              "id": 75014,
              "nodeType": "StructuredDocumentation",
              "src": "8671:43:329",
              "text": "@dev See {ERC721-_beforeTokenTransfer}."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfers",
            "nameLocation": "8728:21:329",
            "overrides": {
              "id": 75024,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8872:8:329"
            },
            "parameters": {
              "id": 75023,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75016,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "8767:4:329",
                  "nodeType": "VariableDeclaration",
                  "scope": 75077,
                  "src": "8759:12:329",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 75015,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8759:7:329",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75018,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8789:2:329",
                  "nodeType": "VariableDeclaration",
                  "scope": 75077,
                  "src": "8781:10:329",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 75017,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8781:7:329",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75020,
                  "mutability": "mutable",
                  "name": "startTokenId_",
                  "nameLocation": "8809:13:329",
                  "nodeType": "VariableDeclaration",
                  "scope": 75077,
                  "src": "8801:21:329",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 75019,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8801:7:329",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75022,
                  "mutability": "mutable",
                  "name": "quantity",
                  "nameLocation": "8840:8:329",
                  "nodeType": "VariableDeclaration",
                  "scope": 75077,
                  "src": "8832:16:329",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 75021,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8832:7:329",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8749:105:329"
            },
            "returnParameters": {
              "id": 75025,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8881:0:329"
            },
            "scope": 75110,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 75087,
            "nodeType": "FunctionDefinition",
            "src": "9294:111:329",
            "nodes": [],
            "body": {
              "id": 75086,
              "nodeType": "Block",
              "src": "9369:36:329",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 75083,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        75098
                      ],
                      "referencedDeclaration": 75098,
                      "src": "9386:10:329",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 75084,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9386:12:329",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 75082,
                  "id": 75085,
                  "nodeType": "Return",
                  "src": "9379:19:329"
                }
              ]
            },
            "baseFunctions": [
              39660
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_dropMsgSender",
            "nameLocation": "9303:14:329",
            "overrides": {
              "id": 75079,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9342:8:329"
            },
            "parameters": {
              "id": 75078,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9317:2:329"
            },
            "returnParameters": {
              "id": 75082,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75081,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 75087,
                  "src": "9360:7:329",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 75080,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9360:7:329",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9359:9:329"
            },
            "scope": 75110,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 75098,
            "nodeType": "FunctionDefinition",
            "src": "9411:140:329",
            "nodes": [],
            "body": {
              "id": 75097,
              "nodeType": "Block",
              "src": "9489:62:329",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 75093,
                        "name": "ERC2771ContextUpgradeable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45607,
                        "src": "9506:25:329",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC2771ContextUpgradeable_$45607_$",
                          "typeString": "type(contract ERC2771ContextUpgradeable)"
                        }
                      },
                      "id": 75094,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_msgSender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45575,
                      "src": "9506:36:329",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 75095,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9506:38:329",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 75092,
                  "id": 75096,
                  "nodeType": "Return",
                  "src": "9499:45:329"
                }
              ]
            },
            "baseFunctions": [
              45575
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgSender",
            "nameLocation": "9420:10:329",
            "overrides": {
              "id": 75089,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9455:8:329"
            },
            "parameters": {
              "id": 75088,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9430:2:329"
            },
            "returnParameters": {
              "id": 75092,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75091,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "9481:6:329",
                  "nodeType": "VariableDeclaration",
                  "scope": 75098,
                  "src": "9473:14:329",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 75090,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9473:7:329",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9472:16:329"
            },
            "scope": 75110,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 75109,
            "nodeType": "FunctionDefinition",
            "src": "9557:136:329",
            "nodes": [],
            "body": {
              "id": 75108,
              "nodeType": "Block",
              "src": "9633:60:329",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 75104,
                        "name": "ERC2771ContextUpgradeable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45607,
                        "src": "9650:25:329",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC2771ContextUpgradeable_$45607_$",
                          "typeString": "type(contract ERC2771ContextUpgradeable)"
                        }
                      },
                      "id": 75105,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_msgData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45602,
                      "src": "9650:34:329",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_calldata_ptr_$",
                        "typeString": "function () view returns (bytes calldata)"
                      }
                    },
                    "id": 75106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9650:36:329",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_calldata_ptr",
                      "typeString": "bytes calldata"
                    }
                  },
                  "functionReturnParameters": 75103,
                  "id": 75107,
                  "nodeType": "Return",
                  "src": "9643:43:329"
                }
              ]
            },
            "baseFunctions": [
              45602
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgData",
            "nameLocation": "9566:8:329",
            "overrides": {
              "id": 75100,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9599:8:329"
            },
            "parameters": {
              "id": 75099,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9574:2:329"
            },
            "returnParameters": {
              "id": 75103,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75102,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 75109,
                  "src": "9617:14:329",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 75101,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "9617:5:329",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9616:16:329"
            },
            "scope": 75110,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 74527,
              "name": "ContractMetadata",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 38777,
              "src": "1733:16:329"
            },
            "id": 74528,
            "nodeType": "InheritanceSpecifier",
            "src": "1733:16:329"
          },
          {
            "baseName": {
              "id": 74529,
              "name": "Royalty",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 42274,
              "src": "1755:7:329"
            },
            "id": 74530,
            "nodeType": "InheritanceSpecifier",
            "src": "1755:7:329"
          },
          {
            "baseName": {
              "id": 74531,
              "name": "PrimarySale",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 41908,
              "src": "1768:11:329"
            },
            "id": 74532,
            "nodeType": "InheritanceSpecifier",
            "src": "1768:11:329"
          },
          {
            "baseName": {
              "id": 74533,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 40832,
              "src": "1785:7:329"
            },
            "id": 74534,
            "nodeType": "InheritanceSpecifier",
            "src": "1785:7:329"
          },
          {
            "baseName": {
              "id": 74535,
              "name": "SharedMetadataBatch",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 43319,
              "src": "1798:19:329"
            },
            "id": 74536,
            "nodeType": "InheritanceSpecifier",
            "src": "1798:19:329"
          },
          {
            "baseName": {
              "id": 74537,
              "name": "Drop",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 39739,
              "src": "1823:4:329"
            },
            "id": 74538,
            "nodeType": "InheritanceSpecifier",
            "src": "1823:4:329"
          },
          {
            "baseName": {
              "id": 74539,
              "name": "ERC2771ContextUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 45607,
              "src": "1833:25:329"
            },
            "id": 74540,
            "nodeType": "InheritanceSpecifier",
            "src": "1833:25:329"
          },
          {
            "baseName": {
              "id": 74541,
              "name": "ERC721AQueryableUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 14507,
              "src": "1864:27:329"
            },
            "id": 74542,
            "nodeType": "InheritanceSpecifier",
            "src": "1864:27:329"
          }
        ],
        "canonicalName": "EvolvingNFTLogic",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          75110,
          14507,
          16705,
          16535,
          16911,
          16638,
          45607,
          156044,
          150199,
          39739,
          32573,
          32308,
          32285,
          43319,
          33684,
          40832,
          33183,
          41908,
          33345,
          42274,
          33409,
          13973,
          13829,
          38777,
          32437
        ],
        "name": "EvolvingNFTLogic",
        "nameLocation": "1709:16:329",
        "scope": 75111,
        "usedErrors": [
          16673,
          16711,
          16714,
          16717,
          16720,
          16723,
          16726,
          16729,
          16732,
          16735,
          16738,
          16741,
          16744,
          16747
        ]
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 329
}