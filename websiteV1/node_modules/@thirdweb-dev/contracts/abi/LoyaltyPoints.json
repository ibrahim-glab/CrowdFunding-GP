{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "prevURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "newURI",
          "type": "string"
        }
      ],
      "name": "ContractURIUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "platformFeeRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "flatFee",
          "type": "uint256"
        }
      ],
      "name": "FlatPlatformFeeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "platformFeeRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "platformFeeBps",
          "type": "uint256"
        }
      ],
      "name": "PlatformFeeInfoUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "enum IPlatformFee.PlatformFeeType",
          "name": "feeType",
          "type": "uint8"
        }
      ],
      "name": "PlatformFeeTypeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "PrimarySaleRecipientUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "mintedTo",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "quantityMinted",
          "type": "uint256"
        }
      ],
      "name": "TokensMinted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "signer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "mintedTo",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "primarySaleRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "quantity",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "validityStartTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "validityEndTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "bytes32",
              "name": "uid",
              "type": "bytes32"
            }
          ],
          "indexed": false,
          "internalType": "struct ISignatureMintERC20.MintRequest",
          "name": "mintRequest",
          "type": "tuple"
        }
      ],
      "name": "TokensMintedWithSignature",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "cancel",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getFlatPlatformFeeInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPlatformFeeInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPlatformFeeType",
      "outputs": [
        {
          "internalType": "enum IPlatformFee.PlatformFeeType",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRoleMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "member",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "count",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "getTotalMintedInLifetime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRoleWithSwitch",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_defaultAdmin",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_contractURI",
          "type": "string"
        },
        {
          "internalType": "address[]",
          "name": "_trustedForwarders",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "_saleRecipient",
          "type": "address"
        },
        {
          "internalType": "uint128",
          "name": "_platformFeeBps",
          "type": "uint128"
        },
        {
          "internalType": "address",
          "name": "_platformFeeRecipient",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "forwarder",
          "type": "address"
        }
      ],
      "name": "isTrustedForwarder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mintTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "primarySaleRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "quantity",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "validityStartTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "validityEndTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "bytes32",
              "name": "uid",
              "type": "bytes32"
            }
          ],
          "internalType": "struct ISignatureMintERC20.MintRequest",
          "name": "_req",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "mintWithSignature",
      "outputs": [
        {
          "internalType": "address",
          "name": "signer",
          "type": "address"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "primarySaleRecipient",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "revoke",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "setContractURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_platformFeeRecipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_flatFee",
          "type": "uint256"
        }
      ],
      "name": "setFlatPlatformFeeInfo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_platformFeeRecipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_platformFeeBps",
          "type": "uint256"
        }
      ],
      "name": "setPlatformFeeInfo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IPlatformFee.PlatformFeeType",
          "name": "_feeType",
          "type": "uint8"
        }
      ],
      "name": "setPlatformFeeType",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_saleRecipient",
          "type": "address"
        }
      ],
      "name": "setPrimarySaleRecipient",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "primarySaleRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "quantity",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "validityStartTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "validityEndTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "bytes32",
              "name": "uid",
              "type": "bytes32"
            }
          ],
          "internalType": "struct ISignatureMintERC20.MintRequest",
          "name": "_req",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "verify",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "signer",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b50600754610100900460ff1615808015620000335750600754600160ff909116105b8062000063575062000050306200013d60201b620011b11760201c565b15801562000063575060075460ff166001145b620000cb5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840160405180910390fd5b6007805460ff191660011790558015620000ef576007805461ff0019166101001790555b801562000136576007805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b506200014c565b6001600160a01b03163b151590565b613768806200015c6000396000f3fe6080604052600436106101c55760003560e01c806391d14854116100f357806391d1485414610465578063938e3d7b1461048557806395d89b41146104a557806398590ef9146104ba578063a1699dc8146104da578063a217fddf14610511578063a32fa5b314610526578063a457c2d714610546578063a9059cbb14610566578063b6f10c7914610586578063c1b606e2146105a6578063ca15c873146105e5578063d45573f614610605578063d547741f1461063c578063dd62ed3e1461065c578063e57553da1461067c578063e8a3d4851461069f578063eac449d9146106b4578063f28083c3146106d457600080fd5b806306fdde03146101ca578063079fe40e146101f5578063095ea7b31461022257806318160ddd146102525780631e7ac4881461027157806323b872dd14610293578063248a9ca3146102b35780632f2ff15d146102e0578063313ce5671461030057806336568abe1461031c578063395093511461033c578063449a52f81461035c578063572b6c051461037c5780635f34ff381461039c5780636f4f2837146103bc57806370a08231146103dc5780637e54523c146104125780638f0fefbb146104325780639010d07c14610445575b600080fd5b3480156101d657600080fd5b506101df6106f6565b6040516101ec9190612f03565b60405180910390f35b34801561020157600080fd5b5061020a610788565b6040516001600160a01b0390911681526020016101ec565b34801561022e57600080fd5b5061024261023d366004612f32565b610797565b60405190151581526020016101ec565b34801561025e57600080fd5b5060d5545b6040519081526020016101ec565b34801561027d57600080fd5b5061029161028c366004612f32565b6107bb565b005b34801561029f57600080fd5b506102426102ae366004612f5c565b6107f6565b3480156102bf57600080fd5b506102636102ce366004612f98565b60009081526005602052604090205490565b3480156102ec57600080fd5b506102916102fb366004612fb1565b610826565b34801561030c57600080fd5b50604051601281526020016101ec565b34801561032857600080fd5b50610291610337366004612fb1565b6108bc565b34801561034857600080fd5b50610242610357366004612f32565b61091b565b34801561036857600080fd5b50610291610377366004612f32565b610947565b34801561038857600080fd5b50610242610397366004612fdd565b6109a5565b3480156103a857600080fd5b506102916103b736600461313f565b6109c3565b3480156103c857600080fd5b506102916103d7366004612fdd565b610b8f565b3480156103e857600080fd5b506102636103f7366004612fdd565b6001600160a01b0316600090815260d3602052604090205490565b34801561041e57600080fd5b5061029161042d366004612f32565b610bbf565b61020a61044036600461322e565b610bed565b34801561045157600080fd5b5061020a6104603660046132ba565b610cf8565b34801561047157600080fd5b50610242610480366004612fb1565b610de7565b34801561049157600080fd5b506102916104a03660046132dc565b610e12565b3480156104b157600080fd5b506101df610e3f565b3480156104c657600080fd5b506102916104d5366004612f32565b610e4e565b3480156104e657600080fd5b506102636104f5366004612fdd565b6001600160a01b03166000908152610105602052604090205490565b34801561051d57600080fd5b50610263600081565b34801561053257600080fd5b50610242610541366004612fb1565b610e8d565b34801561055257600080fd5b50610242610561366004612f32565b610ee3565b34801561057257600080fd5b50610242610581366004612f32565b610f74565b34801561059257600080fd5b506102916105a1366004613310565b610f8c565b3480156105b257600080fd5b506105c66105c136600461322e565b610fb9565b6040805192151583526001600160a01b039091166020830152016101ec565b3480156105f157600080fd5b50610263610600366004612f98565b610ffc565b34801561061157600080fd5b5061061a611085565b604080516001600160a01b03909316835261ffff9091166020830152016101ec565b34801561064857600080fd5b50610291610657366004612fb1565b6110a2565b34801561066857600080fd5b50610263610677366004613331565b6110bb565b34801561068857600080fd5b506106916110e6565b6040516101ec92919061335b565b3480156106ab57600080fd5b506101df6110fa565b3480156106c057600080fd5b506102916106cf366004612f32565b611188565b3480156106e057600080fd5b506106e96111a1565b6040516101ec919061338a565b606060d68054610705906133b2565b80601f0160208091040260200160405190810160405280929190818152602001828054610731906133b2565b801561077e5780601f106107535761010080835404028352916020019161077e565b820191906000526020600020905b81548152906001019060200180831161076157829003601f168201915b5050505050905090565b6001546001600160a01b031690565b6000806107a26111c0565b90506107af8185856111cf565b60019150505b92915050565b6107c36112f3565b6107e85760405162461bcd60e51b81526004016107df906133e7565b60405180910390fd5b6107f28282611301565b5050565b6000806108016111c0565b905061080e8582856113b1565b61081985858561142b565b60019150505b9392505050565b60008281526005602052604090205461083f90336115f2565b60008281526004602090815260408083206001600160a01b038516845290915290205460ff16156108b25760405162461bcd60e51b815260206004820152601d60248201527f43616e206f6e6c79206772616e7420746f206e6f6e20686f6c6465727300000060448201526064016107df565b6107f28282611672565b336001600160a01b038216146109115760405162461bcd60e51b815260206004820152601a60248201527921b0b71037b7363c903932b737bab731b2903337b91039b2b63360311b60448201526064016107df565b6107f28282611686565b6000806109266111c0565b90506107af81858561093885896110bb565b6109429190613425565b6111cf565b6109616000805160206136f38339815191526104806111c0565b61099b5760405162461bcd60e51b815260206004820152600b60248201526a3737ba1036b4b73a32b91760a91b60448201526064016107df565b6107f282826116dd565b6001600160a01b03166000908152606c602052604090205460ff1690565b600754610100900460ff16158080156109e35750600754600160ff909116105b80610a0457506109f2306111b1565b158015610a04575060075460ff166001145b610a675760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016107df565b6007805460ff191660011790558015610a8a576007805461ff0019166101001790555b610a9385611722565b610a9d888861175a565b610aa6886117a8565b610aae6117fb565b610ab78661182c565b610ac260008a611672565b610ada6000805160206136f38339815191528a611672565b610af26000805160206136b38339815191528a611672565b610b0a6000805160206136d38339815191528a611672565b610b226000805160206136d38339815191528061190d565b610b3582846001600160801b0316611301565b610b3e84611955565b8015610b84576007805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050505050565b610b976112f3565b610bb35760405162461bcd60e51b81526004016107df906133e7565b610bbc81611955565b50565b610bc76112f3565b610be35760405162461bcd60e51b81526004016107df906133e7565b6107f2828261199f565b600060026008541415610c425760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016107df565b6002600855610c528484846119f1565b90506000610c636020860186612fdd565b9050610c92610c786040870160208801612fdd565b610c8860a0880160808901612fdd565b8760600135611b8a565b610ca08186604001356116dd565b806001600160a01b0316826001600160a01b03167fc4d88b1adde72eb5acf63f3e219ef5b223262233acf507c3b171277c91973c6787604051610ce3919061343d565b60405180910390a35060016008559392505050565b60008281526006602052604081205481805b82811015610dde5760008681526006602090815260408083208484526001019091529020546001600160a01b031615610d875784821415610d755760008681526006602090815260408083209383526001909301905220546001600160a01b031692506107b5915050565b610d80600183613425565b9150610dcc565b610d92866000610de7565b8015610db95750600086815260066020908152604080832083805260020190915290205481145b15610dcc57610dc9600183613425565b91505b610dd7600182613425565b9050610d0a565b50505092915050565b60009182526004602090815260408084206001600160a01b0393909316845291905290205460ff1690565b610e1a6112f3565b610e365760405162461bcd60e51b81526004016107df906133e7565b610bbc8161182c565b606060d78054610705906133b2565b6000610e586111c0565b9050826001600160a01b0316816001600160a01b031614610e7e57610e7e8382846113b1565b610e888383611d32565b505050565b600082815260046020908152604080832083805290915281205460ff16610eda575060008281526004602090815260408083206001600160a01b038516845290915290205460ff166107b5565b50600192915050565b600080610eee6111c0565b90506000610efc82866110bb565b905083811015610f5c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016107df565b610f6982868684036111cf565b506001949350505050565b600080610f7f6111c0565b90506107af81858561142b565b610f946112f3565b610fb05760405162461bcd60e51b81526004016107df906133e7565b610bbc81611e7a565b600080610fc7858585611ede565b60e0860135600090815260d2602052604090205490915060ff16158015610ff25750610ff281611f42565b9150935093915050565b600081815260066020526040812054815b818110156110605760008481526006602090815260408083208484526001019091529020546001600160a01b03161561104e5761104b600184613425565b92505b611059600182613425565b905061100d565b5061106c836000610de7565b1561107f5761107c600183613425565b91505b50919050565b6002546001600160a01b03811691600160a01b90910461ffff1690565b60008281526005602052604090205461091190336115f2565b6001600160a01b03918216600090815260d46020908152604080832093909416825291909152205490565b6002546003546001600160a01b0390911691565b60008054611107906133b2565b80601f0160208091040260200160405190810160405280929190818152602001828054611133906133b2565b80156111805780601f1061115557610100808354040283529160200191611180565b820191906000526020600020905b81548152906001019060200180831161116357829003601f168201915b505050505081565b6000805160206136d3833981519152610e7e81336115f2565b600254600160b01b900460ff1690565b6001600160a01b03163b151590565b60006111ca611f5c565b905090565b6001600160a01b0383166112315760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016107df565b6001600160a01b0382166112925760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016107df565b6001600160a01b03838116600081815260d4602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006111ca816104806111c0565b6127108111156113455760405162461bcd60e51b815260206004820152600f60248201526e45786365656473206d61782062707360881b60448201526064016107df565b600280546001600160b01b031916600160a01b61ffff8416026001600160a01b031916176001600160a01b0384169081179091556040518281527fe2497bd806ec41a6e0dd992c29a72efc0ef8fec9092d1978fd4a1e00b2f18304906020015b60405180910390a25050565b60006113bd84846110bb565b9050600019811461142557818110156114185760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016107df565b61142584848484036111cf565b50505050565b6001600160a01b03831661148f5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016107df565b6001600160a01b0382166114f15760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016107df565b6114fc838383611f7e565b6001600160a01b038316600090815260d36020526040902054818110156115745760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016107df565b6001600160a01b03808516600090815260d360205260408082208585039055918516815290812080548492906115ab908490613425565b92505081905550826001600160a01b0316846001600160a01b0316600080516020613713833981519152846040516115e591815260200190565b60405180910390a3611425565b60008281526004602090815260408083206001600160a01b038516845290915290205460ff166107f257611630816001600160a01b03166014612080565b61163b836020612080565b60405160200161164c9291906134d3565b60408051601f198184030181529082905262461bcd60e51b82526107df91600401612f03565b61167c828261221b565b6107f28282612276565b61169082826122e3565b60008281526006602090815260408083206001600160a01b03851680855260028201808552838620805487526001909301855292852080546001600160a01b031916905584529152555050565b6116e78282612345565b816001600160a01b03167f3f2c9d57c068687834f0de942a9babb9e5acab57d516d3480a3c16ee165a4273826040516113a591815260200190565b600754610100900460ff166117495760405162461bcd60e51b81526004016107df90613540565b61175161241e565b610bbc81612445565b600754610100900460ff166117815760405162461bcd60e51b81526004016107df90613540565b81516117949060d6906020850190612e12565b508051610e889060d7906020840190612e12565b600754610100900460ff166117cf5760405162461bcd60e51b81526004016107df90613540565b6117f281604051806040016040528060018152602001603160f81b8152506124d4565b610bbc81612505565b600754610100900460ff166118225760405162461bcd60e51b81526004016107df90613540565b61182a61252c565b565b600080805461183a906133b2565b80601f0160208091040260200160405190810160405280929190818152602001828054611866906133b2565b80156118b35780601f10611888576101008083540402835291602001916118b3565b820191906000526020600020905b81548152906001019060200180831161189657829003601f168201915b505085519394506118cf93600093506020870192509050612e12565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a16818360405161190192919061358b565b60405180910390a15050565b600082815260056020526040808220805490849055905190918391839186917fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff9190a4505050565b600180546001600160a01b0319166001600160a01b0383169081179091556040517f299d17e95023f496e0ffc4909cff1a61f74bb5eb18de6f900f4155bfa1b3b33390600090a250565b6003819055600280546001600160a01b0319166001600160a01b0384161790556040517ff8086cee80709bd44c82f89dbca54115ebd05e840a88ab81df9cf5be9754eb6390611901908490849061335b565b6000806119ff858585610fb9565b9250905080611a425760405162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a59081c995c5d595cdd608a1b60448201526064016107df565b42611a5360c0870160a088016135b9565b6001600160801b031611158015611a825750611a7560e0860160c087016135b9565b6001600160801b03164211155b611ac05760405162461bcd60e51b815260206004820152600f60248201526e14995c5d595cdd08195e1c1a5c9959608a1b60448201526064016107df565b6000611acf6020870187612fdd565b6001600160a01b03161415611b1c5760405162461bcd60e51b81526020600482015260136024820152721c9958da5c1a595b9d081d5b9919599a5b9959606a1b60448201526064016107df565b6000856040013511611b635760405162461bcd60e51b815260206004820152601060248201526f4d696e74696e67207a65726f2071747960801b60448201526064016107df565b5060e090930135600090815260d260205260409020805460ff191660011790555090919050565b80611bc6573415610e885760405162461bcd60e51b81526020600482015260066024820152652156616c756560d01b60448201526064016107df565b60006001600160a01b03831673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1415611bf65750348114611bfa565b5034155b80611c3b5760405162461bcd60e51b8152602060048201526011602482015270496e76616c6964206d73672076616c756560781b60448201526064016107df565b60006001600160a01b03851615611c525784611c5a565b611c5a610788565b90506000806000611c696111a1565b90506001816001811115611c7f57611c7f613374565b1415611c9657611c8d6110e6565b93509150611cc4565b6000611ca0611085565b9093509050612710611cb661ffff8316896135d4565b611cc091906135f3565b9350505b82861015611cf95760405162461bcd60e51b815260206004820152600260248201526110a360f11b60448201526064016107df565b611d0c87611d056111c0565b848661255a565b611d2887611d186111c0565b86611d23878b613615565b61255a565b5050505050505050565b6001600160a01b038216611d925760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016107df565b611d9e82600083611f7e565b6001600160a01b038216600090815260d3602052604090205481811015611e125760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016107df565b6001600160a01b038316600090815260d360205260408120838303905560d58054849290611e41908490613615565b90915550506040518281526000906001600160a01b038516906000805160206137138339815191529060200160405180910390a3505050565b6002805482919060ff60b01b1916600160b01b836001811115611e9f57611e9f613374565b02179055507fd246da9440709ce0dd3f4fd669abc85ada012ab9774b8ecdcc5059ba1486b9c181604051611ed3919061338a565b60405180910390a150565b6000611f3a83838080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611f349250611f2891508890506125a4565b80519060200120612698565b906126e6565b949350505050565b60006107b56000805160206136f383398151915283610de7565b6000611f67336109a5565b15611f79575060131936013560601c90565b503390565b611f976000805160206136b38339815191526000610de7565b158015611fac57506001600160a01b03831615155b8015611fc057506001600160a01b03821615155b1561203f57611fdd6000805160206136b383398151915284610de7565b80611ffb5750611ffb6000805160206136b383398151915283610de7565b61203f5760405162461bcd60e51b81526020600482015260156024820152743a3930b739b332b939903932b9ba3934b1ba32b21760591b60448201526064016107df565b6001600160a01b038316610e88576001600160a01b0382166000908152610105602052604081208054839290612076908490613425565b9091555050505050565b6060600061208f8360026135d4565b61209a906002613425565b6001600160401b038111156120b1576120b1612ff8565b6040519080825280601f01601f1916602001820160405280156120db576020820181803683370190505b509050600360fc1b816000815181106120f6576120f661362c565b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106121255761212561362c565b60200101906001600160f81b031916908160001a90535060006121498460026135d4565b612154906001613425565b90505b60018111156121cc576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106121885761218861362c565b1a60f81b82828151811061219e5761219e61362c565b60200101906001600160f81b031916908160001a90535060049490941c936121c581613642565b9050612157565b50831561081f5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016107df565b60008281526004602090815260408083206001600160a01b0385168085529252808320805460ff1916600117905551339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b6000828152600660205260408120805491600191906122958385613425565b9091555050600092835260066020908152604080852083865260018101835281862080546001600160a01b039096166001600160a01b03199096168617905593855260029093019052912055565b6122ed82826115f2565b60008281526004602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6001600160a01b03821661239b5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016107df565b6123a760008383611f7e565b8060d560008282546123b99190613425565b90915550506001600160a01b038216600090815260d36020526040812080548392906123e6908490613425565b90915550506040518181526001600160a01b038316906000906000805160206137138339815191529060200160405180910390a35050565b600754610100900460ff1661182a5760405162461bcd60e51b81526004016107df90613540565b600754610100900460ff1661246c5760405162461bcd60e51b81526004016107df90613540565b60005b81518110156107f2576001606c60008484815181106124905761249061362c565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055806124cc81613659565b91505061246f565b600754610100900460ff166124fb5760405162461bcd60e51b81526004016107df90613540565b6107f2828261270a565b600754610100900460ff16610bbc5760405162461bcd60e51b81526004016107df90613540565b600754610100900460ff166125535760405162461bcd60e51b81526004016107df90613540565b6001600855565b8061256457611425565b6001600160a01b03841673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee141561259857612593828261274b565b611425565b611425848484846127ed565b60607fbac245dbd9b8b2bb334c0675db20a7a7a8506de563990c4ce3207f4c3c5b75e16125d46020840184612fdd565b6125e46040850160208601612fdd565b604085013560608601356125fe60a0880160808901612fdd565b61260e60c0890160a08a016135b9565b61261e60e08a0160c08b016135b9565b6040805160208101999099526001600160a01b03978816908901529486166060880152608087019390935260a086019190915290921660c08401526001600160801b0391821660e0808501919091529116610100830152830135610120820152610140016040516020818303038152906040529050919050565b60006107b56126a5612846565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b60008060006126f585856128c1565b9150915061270281612907565b509392505050565b600754610100900460ff166127315760405162461bcd60e51b81526004016107df90613540565b815160209283012081519190920120609e91909155609f55565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114612798576040519150601f19603f3d011682016040523d82523d6000602084013e61279d565b606091505b5050905080610e885760405162461bcd60e51b815260206004820152601c60248201527b1b985d1a5d99481d1bdad95b881d1c985b9cd9995c8819985a5b195960221b60448201526064016107df565b816001600160a01b0316836001600160a01b0316141561280c57611425565b6001600160a01b038316301415612831576125936001600160a01b0385168383612abd565b6114256001600160a01b038516848484612b13565b60006111ca7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f612875609e5490565b609f546040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b6000808251604114156128f85760208301516040840151606085015160001a6128ec87828585612b4b565b94509450505050612900565b506000905060025b9250929050565b600081600481111561291b5761291b613374565b14156129245750565b600181600481111561293857612938613374565b14156129815760405162461bcd60e51b815260206004820152601860248201527745434453413a20696e76616c6964207369676e617475726560401b60448201526064016107df565b600281600481111561299557612995613374565b14156129e35760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016107df565b60038160048111156129f7576129f7613374565b1415612a505760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016107df565b6004816004811115612a6457612a64613374565b1415610bbc5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b60648201526084016107df565b610e888363a9059cbb60e01b8484604051602401612adc92919061335b565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152612c2e565b6040516001600160a01b03808516602483015283166044820152606481018290526114259085906323b872dd60e01b90608401612adc565b6000806fa2a8918ca85bafe22016d0b997e4df60600160ff1b03831115612b785750600090506003612c25565b8460ff16601b14158015612b9057508460ff16601c14155b15612ba15750600090506004612c25565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015612bf5573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116612c1e57600060019250925050612c25565b9150600090505b94509492505050565b6000612c83826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316612d009092919063ffffffff16565b805190915015610e885780806020019051810190612ca19190613674565b610e885760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016107df565b6060611f3a848460008585612d14856111b1565b612d605760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016107df565b600080866001600160a01b03168587604051612d7c9190613696565b60006040518083038185875af1925050503d8060008114612db9576040519150601f19603f3d011682016040523d82523d6000602084013e612dbe565b606091505b5091509150612dce828286612dd9565b979650505050505050565b60608315612de857508161081f565b825115612df85782518084602001fd5b8160405162461bcd60e51b81526004016107df9190612f03565b828054612e1e906133b2565b90600052602060002090601f016020900481019282612e405760008555612e86565b82601f10612e5957805160ff1916838001178555612e86565b82800160010185558215612e86579182015b82811115612e86578251825591602001919060010190612e6b565b50612e92929150612e96565b5090565b5b80821115612e925760008155600101612e97565b60005b83811015612ec6578181015183820152602001612eae565b838111156114255750506000910152565b60008151808452612eef816020860160208601612eab565b601f01601f19169290920160200192915050565b60208152600061081f6020830184612ed7565b80356001600160a01b0381168114612f2d57600080fd5b919050565b60008060408385031215612f4557600080fd5b612f4e83612f16565b946020939093013593505050565b600080600060608486031215612f7157600080fd5b612f7a84612f16565b9250612f8860208501612f16565b9150604084013590509250925092565b600060208284031215612faa57600080fd5b5035919050565b60008060408385031215612fc457600080fd5b82359150612fd460208401612f16565b90509250929050565b600060208284031215612fef57600080fd5b61081f82612f16565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171561303657613036612ff8565b604052919050565b600082601f83011261304f57600080fd5b81356001600160401b0381111561306857613068612ff8565b61307b601f8201601f191660200161300e565b81815284602083860101111561309057600080fd5b816020850160208301376000918101602001919091529392505050565b600082601f8301126130be57600080fd5b813560206001600160401b038211156130d9576130d9612ff8565b8160051b6130e882820161300e565b928352848101820192828101908785111561310257600080fd5b83870192505b84831015612dce5761311983612f16565b82529183019190830190613108565b80356001600160801b0381168114612f2d57600080fd5b600080600080600080600080610100898b03121561315c57600080fd5b61316589612f16565b975060208901356001600160401b038082111561318157600080fd5b61318d8c838d0161303e565b985060408b01359150808211156131a357600080fd5b6131af8c838d0161303e565b975060608b01359150808211156131c557600080fd5b6131d18c838d0161303e565b965060808b01359150808211156131e757600080fd5b506131f48b828c016130ad565b94505061320360a08a01612f16565b925061321160c08a01613128565b915061321f60e08a01612f16565b90509295985092959890939650565b600080600083850361012081121561324557600080fd5b6101008082121561325557600080fd5b85945084013590506001600160401b038082111561327257600080fd5b818601915086601f83011261328657600080fd5b81358181111561329557600080fd5b8760208285010111156132a757600080fd5b6020830194508093505050509250925092565b600080604083850312156132cd57600080fd5b50508035926020909101359150565b6000602082840312156132ee57600080fd5b81356001600160401b0381111561330457600080fd5b611f3a8482850161303e565b60006020828403121561332257600080fd5b81356002811061081f57600080fd5b6000806040838503121561334457600080fd5b61334d83612f16565b9150612fd460208401612f16565b6001600160a01b03929092168252602082015260400190565b634e487b7160e01b600052602160045260246000fd5b60208101600283106133ac57634e487b7160e01b600052602160045260246000fd5b91905290565b600181811c908216806133c657607f821691505b6020821081141561107f57634e487b7160e01b600052602260045260246000fd5b6020808252600e908201526d139bdd08185d5d1a1bdc9a5e995960921b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600082198211156134385761343861340f565b500190565b61010081016001600160a01b038061345485612f16565b1683528061346460208601612f16565b16602084015260408401356040840152606084013560608401528061348b60808601612f16565b1660808401525061349e60a08401613128565b6001600160801b0381811660a0850152806134bb60c08701613128565b1660c0850152505060e083013560e083015292915050565b7402832b936b4b9b9b4b7b7399d1030b1b1b7bab73a1605d1b815260008351613503816015850160208801612eab565b7001034b99036b4b9b9b4b733903937b6329607d1b6015918401918201528351613534816026840160208801612eab565b01602601949350505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60408152600061359e6040830185612ed7565b82810360208401526135b08185612ed7565b95945050505050565b6000602082840312156135cb57600080fd5b61081f82613128565b60008160001904831182151516156135ee576135ee61340f565b500290565b60008261361057634e487b7160e01b600052601260045260246000fd5b500490565b6000828210156136275761362761340f565b500390565b634e487b7160e01b600052603260045260246000fd5b6000816136515761365161340f565b506000190190565b600060001982141561366d5761366d61340f565b5060010190565b60006020828403121561368657600080fd5b8151801515811461081f57600080fd5b600082516136a8818460208701612eab565b919091019291505056fe8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c5297e68f3a27f04914f2c6db0ad63b5e5c8173cebcc1a5341df045cf6dad7adc9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa264697066735822122066dd91c6b06b60458de1ed790a69090b22ce604eab72369ce4b8419ccbcb23d764736f6c634300080c0033",
    "sourceMap": "1754:8034:387:-:0;;;3099:28;;;;;;;;;-1:-1:-1;3134:13:436;;;;;;;3133:14;;3179:34;;;;-1:-1:-1;3197:12:436;;3212:1;3197:12;;;;:16;3179:34;3178:108;;;;3220:44;3258:4;3220:29;;;;;:44;;:::i;:::-;3219:45;:66;;;;-1:-1:-1;3268:12:436;;;;;:17;3219:66;3157:201;;;;-1:-1:-1;;;3157:201:436;;216:2:644;3157:201:436;;;198:21:644;255:2;235:18;;;228:30;294:34;274:18;;;267:62;-1:-1:-1;;;345:18:644;;;338:44;399:19;;3157:201:436;;;;;;;;3368:12;:16;;-1:-1:-1;;3368:16:436;3383:1;3368:16;;;3394:65;;;;3428:13;:20;;-1:-1:-1;;3428:20:436;;;;;3394:65;3483:14;3479:99;;;3513:13;:21;;-1:-1:-1;;3513:21:436;;;3553:14;;-1:-1:-1;581:36:644;;3553:14:436;;569:2:644;554:18;3553:14:436;;;;;;;3479:99;3101:483;1754:8034:387;;1186:320:462;-1:-1:-1;;;;;1476:19:462;;:23;;;1186:320::o;429:194:644:-;1754:8034:387;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106101c55760003560e01c806391d14854116100f357806391d1485414610465578063938e3d7b1461048557806395d89b41146104a557806398590ef9146104ba578063a1699dc8146104da578063a217fddf14610511578063a32fa5b314610526578063a457c2d714610546578063a9059cbb14610566578063b6f10c7914610586578063c1b606e2146105a6578063ca15c873146105e5578063d45573f614610605578063d547741f1461063c578063dd62ed3e1461065c578063e57553da1461067c578063e8a3d4851461069f578063eac449d9146106b4578063f28083c3146106d457600080fd5b806306fdde03146101ca578063079fe40e146101f5578063095ea7b31461022257806318160ddd146102525780631e7ac4881461027157806323b872dd14610293578063248a9ca3146102b35780632f2ff15d146102e0578063313ce5671461030057806336568abe1461031c578063395093511461033c578063449a52f81461035c578063572b6c051461037c5780635f34ff381461039c5780636f4f2837146103bc57806370a08231146103dc5780637e54523c146104125780638f0fefbb146104325780639010d07c14610445575b600080fd5b3480156101d657600080fd5b506101df6106f6565b6040516101ec9190612f03565b60405180910390f35b34801561020157600080fd5b5061020a610788565b6040516001600160a01b0390911681526020016101ec565b34801561022e57600080fd5b5061024261023d366004612f32565b610797565b60405190151581526020016101ec565b34801561025e57600080fd5b5060d5545b6040519081526020016101ec565b34801561027d57600080fd5b5061029161028c366004612f32565b6107bb565b005b34801561029f57600080fd5b506102426102ae366004612f5c565b6107f6565b3480156102bf57600080fd5b506102636102ce366004612f98565b60009081526005602052604090205490565b3480156102ec57600080fd5b506102916102fb366004612fb1565b610826565b34801561030c57600080fd5b50604051601281526020016101ec565b34801561032857600080fd5b50610291610337366004612fb1565b6108bc565b34801561034857600080fd5b50610242610357366004612f32565b61091b565b34801561036857600080fd5b50610291610377366004612f32565b610947565b34801561038857600080fd5b50610242610397366004612fdd565b6109a5565b3480156103a857600080fd5b506102916103b736600461313f565b6109c3565b3480156103c857600080fd5b506102916103d7366004612fdd565b610b8f565b3480156103e857600080fd5b506102636103f7366004612fdd565b6001600160a01b0316600090815260d3602052604090205490565b34801561041e57600080fd5b5061029161042d366004612f32565b610bbf565b61020a61044036600461322e565b610bed565b34801561045157600080fd5b5061020a6104603660046132ba565b610cf8565b34801561047157600080fd5b50610242610480366004612fb1565b610de7565b34801561049157600080fd5b506102916104a03660046132dc565b610e12565b3480156104b157600080fd5b506101df610e3f565b3480156104c657600080fd5b506102916104d5366004612f32565b610e4e565b3480156104e657600080fd5b506102636104f5366004612fdd565b6001600160a01b03166000908152610105602052604090205490565b34801561051d57600080fd5b50610263600081565b34801561053257600080fd5b50610242610541366004612fb1565b610e8d565b34801561055257600080fd5b50610242610561366004612f32565b610ee3565b34801561057257600080fd5b50610242610581366004612f32565b610f74565b34801561059257600080fd5b506102916105a1366004613310565b610f8c565b3480156105b257600080fd5b506105c66105c136600461322e565b610fb9565b6040805192151583526001600160a01b039091166020830152016101ec565b3480156105f157600080fd5b50610263610600366004612f98565b610ffc565b34801561061157600080fd5b5061061a611085565b604080516001600160a01b03909316835261ffff9091166020830152016101ec565b34801561064857600080fd5b50610291610657366004612fb1565b6110a2565b34801561066857600080fd5b50610263610677366004613331565b6110bb565b34801561068857600080fd5b506106916110e6565b6040516101ec92919061335b565b3480156106ab57600080fd5b506101df6110fa565b3480156106c057600080fd5b506102916106cf366004612f32565b611188565b3480156106e057600080fd5b506106e96111a1565b6040516101ec919061338a565b606060d68054610705906133b2565b80601f0160208091040260200160405190810160405280929190818152602001828054610731906133b2565b801561077e5780601f106107535761010080835404028352916020019161077e565b820191906000526020600020905b81548152906001019060200180831161076157829003601f168201915b5050505050905090565b6001546001600160a01b031690565b6000806107a26111c0565b90506107af8185856111cf565b60019150505b92915050565b6107c36112f3565b6107e85760405162461bcd60e51b81526004016107df906133e7565b60405180910390fd5b6107f28282611301565b5050565b6000806108016111c0565b905061080e8582856113b1565b61081985858561142b565b60019150505b9392505050565b60008281526005602052604090205461083f90336115f2565b60008281526004602090815260408083206001600160a01b038516845290915290205460ff16156108b25760405162461bcd60e51b815260206004820152601d60248201527f43616e206f6e6c79206772616e7420746f206e6f6e20686f6c6465727300000060448201526064016107df565b6107f28282611672565b336001600160a01b038216146109115760405162461bcd60e51b815260206004820152601a60248201527921b0b71037b7363c903932b737bab731b2903337b91039b2b63360311b60448201526064016107df565b6107f28282611686565b6000806109266111c0565b90506107af81858561093885896110bb565b6109429190613425565b6111cf565b6109616000805160206136f38339815191526104806111c0565b61099b5760405162461bcd60e51b815260206004820152600b60248201526a3737ba1036b4b73a32b91760a91b60448201526064016107df565b6107f282826116dd565b6001600160a01b03166000908152606c602052604090205460ff1690565b600754610100900460ff16158080156109e35750600754600160ff909116105b80610a0457506109f2306111b1565b158015610a04575060075460ff166001145b610a675760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016107df565b6007805460ff191660011790558015610a8a576007805461ff0019166101001790555b610a9385611722565b610a9d888861175a565b610aa6886117a8565b610aae6117fb565b610ab78661182c565b610ac260008a611672565b610ada6000805160206136f38339815191528a611672565b610af26000805160206136b38339815191528a611672565b610b0a6000805160206136d38339815191528a611672565b610b226000805160206136d38339815191528061190d565b610b3582846001600160801b0316611301565b610b3e84611955565b8015610b84576007805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050505050565b610b976112f3565b610bb35760405162461bcd60e51b81526004016107df906133e7565b610bbc81611955565b50565b610bc76112f3565b610be35760405162461bcd60e51b81526004016107df906133e7565b6107f2828261199f565b600060026008541415610c425760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016107df565b6002600855610c528484846119f1565b90506000610c636020860186612fdd565b9050610c92610c786040870160208801612fdd565b610c8860a0880160808901612fdd565b8760600135611b8a565b610ca08186604001356116dd565b806001600160a01b0316826001600160a01b03167fc4d88b1adde72eb5acf63f3e219ef5b223262233acf507c3b171277c91973c6787604051610ce3919061343d565b60405180910390a35060016008559392505050565b60008281526006602052604081205481805b82811015610dde5760008681526006602090815260408083208484526001019091529020546001600160a01b031615610d875784821415610d755760008681526006602090815260408083209383526001909301905220546001600160a01b031692506107b5915050565b610d80600183613425565b9150610dcc565b610d92866000610de7565b8015610db95750600086815260066020908152604080832083805260020190915290205481145b15610dcc57610dc9600183613425565b91505b610dd7600182613425565b9050610d0a565b50505092915050565b60009182526004602090815260408084206001600160a01b0393909316845291905290205460ff1690565b610e1a6112f3565b610e365760405162461bcd60e51b81526004016107df906133e7565b610bbc8161182c565b606060d78054610705906133b2565b6000610e586111c0565b9050826001600160a01b0316816001600160a01b031614610e7e57610e7e8382846113b1565b610e888383611d32565b505050565b600082815260046020908152604080832083805290915281205460ff16610eda575060008281526004602090815260408083206001600160a01b038516845290915290205460ff166107b5565b50600192915050565b600080610eee6111c0565b90506000610efc82866110bb565b905083811015610f5c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016107df565b610f6982868684036111cf565b506001949350505050565b600080610f7f6111c0565b90506107af81858561142b565b610f946112f3565b610fb05760405162461bcd60e51b81526004016107df906133e7565b610bbc81611e7a565b600080610fc7858585611ede565b60e0860135600090815260d2602052604090205490915060ff16158015610ff25750610ff281611f42565b9150935093915050565b600081815260066020526040812054815b818110156110605760008481526006602090815260408083208484526001019091529020546001600160a01b03161561104e5761104b600184613425565b92505b611059600182613425565b905061100d565b5061106c836000610de7565b1561107f5761107c600183613425565b91505b50919050565b6002546001600160a01b03811691600160a01b90910461ffff1690565b60008281526005602052604090205461091190336115f2565b6001600160a01b03918216600090815260d46020908152604080832093909416825291909152205490565b6002546003546001600160a01b0390911691565b60008054611107906133b2565b80601f0160208091040260200160405190810160405280929190818152602001828054611133906133b2565b80156111805780601f1061115557610100808354040283529160200191611180565b820191906000526020600020905b81548152906001019060200180831161116357829003601f168201915b505050505081565b6000805160206136d3833981519152610e7e81336115f2565b600254600160b01b900460ff1690565b6001600160a01b03163b151590565b60006111ca611f5c565b905090565b6001600160a01b0383166112315760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016107df565b6001600160a01b0382166112925760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016107df565b6001600160a01b03838116600081815260d4602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006111ca816104806111c0565b6127108111156113455760405162461bcd60e51b815260206004820152600f60248201526e45786365656473206d61782062707360881b60448201526064016107df565b600280546001600160b01b031916600160a01b61ffff8416026001600160a01b031916176001600160a01b0384169081179091556040518281527fe2497bd806ec41a6e0dd992c29a72efc0ef8fec9092d1978fd4a1e00b2f18304906020015b60405180910390a25050565b60006113bd84846110bb565b9050600019811461142557818110156114185760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016107df565b61142584848484036111cf565b50505050565b6001600160a01b03831661148f5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016107df565b6001600160a01b0382166114f15760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016107df565b6114fc838383611f7e565b6001600160a01b038316600090815260d36020526040902054818110156115745760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016107df565b6001600160a01b03808516600090815260d360205260408082208585039055918516815290812080548492906115ab908490613425565b92505081905550826001600160a01b0316846001600160a01b0316600080516020613713833981519152846040516115e591815260200190565b60405180910390a3611425565b60008281526004602090815260408083206001600160a01b038516845290915290205460ff166107f257611630816001600160a01b03166014612080565b61163b836020612080565b60405160200161164c9291906134d3565b60408051601f198184030181529082905262461bcd60e51b82526107df91600401612f03565b61167c828261221b565b6107f28282612276565b61169082826122e3565b60008281526006602090815260408083206001600160a01b03851680855260028201808552838620805487526001909301855292852080546001600160a01b031916905584529152555050565b6116e78282612345565b816001600160a01b03167f3f2c9d57c068687834f0de942a9babb9e5acab57d516d3480a3c16ee165a4273826040516113a591815260200190565b600754610100900460ff166117495760405162461bcd60e51b81526004016107df90613540565b61175161241e565b610bbc81612445565b600754610100900460ff166117815760405162461bcd60e51b81526004016107df90613540565b81516117949060d6906020850190612e12565b508051610e889060d7906020840190612e12565b600754610100900460ff166117cf5760405162461bcd60e51b81526004016107df90613540565b6117f281604051806040016040528060018152602001603160f81b8152506124d4565b610bbc81612505565b600754610100900460ff166118225760405162461bcd60e51b81526004016107df90613540565b61182a61252c565b565b600080805461183a906133b2565b80601f0160208091040260200160405190810160405280929190818152602001828054611866906133b2565b80156118b35780601f10611888576101008083540402835291602001916118b3565b820191906000526020600020905b81548152906001019060200180831161189657829003601f168201915b505085519394506118cf93600093506020870192509050612e12565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a16818360405161190192919061358b565b60405180910390a15050565b600082815260056020526040808220805490849055905190918391839186917fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff9190a4505050565b600180546001600160a01b0319166001600160a01b0383169081179091556040517f299d17e95023f496e0ffc4909cff1a61f74bb5eb18de6f900f4155bfa1b3b33390600090a250565b6003819055600280546001600160a01b0319166001600160a01b0384161790556040517ff8086cee80709bd44c82f89dbca54115ebd05e840a88ab81df9cf5be9754eb6390611901908490849061335b565b6000806119ff858585610fb9565b9250905080611a425760405162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a59081c995c5d595cdd608a1b60448201526064016107df565b42611a5360c0870160a088016135b9565b6001600160801b031611158015611a825750611a7560e0860160c087016135b9565b6001600160801b03164211155b611ac05760405162461bcd60e51b815260206004820152600f60248201526e14995c5d595cdd08195e1c1a5c9959608a1b60448201526064016107df565b6000611acf6020870187612fdd565b6001600160a01b03161415611b1c5760405162461bcd60e51b81526020600482015260136024820152721c9958da5c1a595b9d081d5b9919599a5b9959606a1b60448201526064016107df565b6000856040013511611b635760405162461bcd60e51b815260206004820152601060248201526f4d696e74696e67207a65726f2071747960801b60448201526064016107df565b5060e090930135600090815260d260205260409020805460ff191660011790555090919050565b80611bc6573415610e885760405162461bcd60e51b81526020600482015260066024820152652156616c756560d01b60448201526064016107df565b60006001600160a01b03831673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1415611bf65750348114611bfa565b5034155b80611c3b5760405162461bcd60e51b8152602060048201526011602482015270496e76616c6964206d73672076616c756560781b60448201526064016107df565b60006001600160a01b03851615611c525784611c5a565b611c5a610788565b90506000806000611c696111a1565b90506001816001811115611c7f57611c7f613374565b1415611c9657611c8d6110e6565b93509150611cc4565b6000611ca0611085565b9093509050612710611cb661ffff8316896135d4565b611cc091906135f3565b9350505b82861015611cf95760405162461bcd60e51b815260206004820152600260248201526110a360f11b60448201526064016107df565b611d0c87611d056111c0565b848661255a565b611d2887611d186111c0565b86611d23878b613615565b61255a565b5050505050505050565b6001600160a01b038216611d925760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016107df565b611d9e82600083611f7e565b6001600160a01b038216600090815260d3602052604090205481811015611e125760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016107df565b6001600160a01b038316600090815260d360205260408120838303905560d58054849290611e41908490613615565b90915550506040518281526000906001600160a01b038516906000805160206137138339815191529060200160405180910390a3505050565b6002805482919060ff60b01b1916600160b01b836001811115611e9f57611e9f613374565b02179055507fd246da9440709ce0dd3f4fd669abc85ada012ab9774b8ecdcc5059ba1486b9c181604051611ed3919061338a565b60405180910390a150565b6000611f3a83838080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611f349250611f2891508890506125a4565b80519060200120612698565b906126e6565b949350505050565b60006107b56000805160206136f383398151915283610de7565b6000611f67336109a5565b15611f79575060131936013560601c90565b503390565b611f976000805160206136b38339815191526000610de7565b158015611fac57506001600160a01b03831615155b8015611fc057506001600160a01b03821615155b1561203f57611fdd6000805160206136b383398151915284610de7565b80611ffb5750611ffb6000805160206136b383398151915283610de7565b61203f5760405162461bcd60e51b81526020600482015260156024820152743a3930b739b332b939903932b9ba3934b1ba32b21760591b60448201526064016107df565b6001600160a01b038316610e88576001600160a01b0382166000908152610105602052604081208054839290612076908490613425565b9091555050505050565b6060600061208f8360026135d4565b61209a906002613425565b6001600160401b038111156120b1576120b1612ff8565b6040519080825280601f01601f1916602001820160405280156120db576020820181803683370190505b509050600360fc1b816000815181106120f6576120f661362c565b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106121255761212561362c565b60200101906001600160f81b031916908160001a90535060006121498460026135d4565b612154906001613425565b90505b60018111156121cc576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106121885761218861362c565b1a60f81b82828151811061219e5761219e61362c565b60200101906001600160f81b031916908160001a90535060049490941c936121c581613642565b9050612157565b50831561081f5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016107df565b60008281526004602090815260408083206001600160a01b0385168085529252808320805460ff1916600117905551339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b6000828152600660205260408120805491600191906122958385613425565b9091555050600092835260066020908152604080852083865260018101835281862080546001600160a01b039096166001600160a01b03199096168617905593855260029093019052912055565b6122ed82826115f2565b60008281526004602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6001600160a01b03821661239b5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016107df565b6123a760008383611f7e565b8060d560008282546123b99190613425565b90915550506001600160a01b038216600090815260d36020526040812080548392906123e6908490613425565b90915550506040518181526001600160a01b038316906000906000805160206137138339815191529060200160405180910390a35050565b600754610100900460ff1661182a5760405162461bcd60e51b81526004016107df90613540565b600754610100900460ff1661246c5760405162461bcd60e51b81526004016107df90613540565b60005b81518110156107f2576001606c60008484815181106124905761249061362c565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055806124cc81613659565b91505061246f565b600754610100900460ff166124fb5760405162461bcd60e51b81526004016107df90613540565b6107f2828261270a565b600754610100900460ff16610bbc5760405162461bcd60e51b81526004016107df90613540565b600754610100900460ff166125535760405162461bcd60e51b81526004016107df90613540565b6001600855565b8061256457611425565b6001600160a01b03841673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee141561259857612593828261274b565b611425565b611425848484846127ed565b60607fbac245dbd9b8b2bb334c0675db20a7a7a8506de563990c4ce3207f4c3c5b75e16125d46020840184612fdd565b6125e46040850160208601612fdd565b604085013560608601356125fe60a0880160808901612fdd565b61260e60c0890160a08a016135b9565b61261e60e08a0160c08b016135b9565b6040805160208101999099526001600160a01b03978816908901529486166060880152608087019390935260a086019190915290921660c08401526001600160801b0391821660e0808501919091529116610100830152830135610120820152610140016040516020818303038152906040529050919050565b60006107b56126a5612846565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b60008060006126f585856128c1565b9150915061270281612907565b509392505050565b600754610100900460ff166127315760405162461bcd60e51b81526004016107df90613540565b815160209283012081519190920120609e91909155609f55565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114612798576040519150601f19603f3d011682016040523d82523d6000602084013e61279d565b606091505b5050905080610e885760405162461bcd60e51b815260206004820152601c60248201527b1b985d1a5d99481d1bdad95b881d1c985b9cd9995c8819985a5b195960221b60448201526064016107df565b816001600160a01b0316836001600160a01b0316141561280c57611425565b6001600160a01b038316301415612831576125936001600160a01b0385168383612abd565b6114256001600160a01b038516848484612b13565b60006111ca7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f612875609e5490565b609f546040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b6000808251604114156128f85760208301516040840151606085015160001a6128ec87828585612b4b565b94509450505050612900565b506000905060025b9250929050565b600081600481111561291b5761291b613374565b14156129245750565b600181600481111561293857612938613374565b14156129815760405162461bcd60e51b815260206004820152601860248201527745434453413a20696e76616c6964207369676e617475726560401b60448201526064016107df565b600281600481111561299557612995613374565b14156129e35760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016107df565b60038160048111156129f7576129f7613374565b1415612a505760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016107df565b6004816004811115612a6457612a64613374565b1415610bbc5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b60648201526084016107df565b610e888363a9059cbb60e01b8484604051602401612adc92919061335b565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152612c2e565b6040516001600160a01b03808516602483015283166044820152606481018290526114259085906323b872dd60e01b90608401612adc565b6000806fa2a8918ca85bafe22016d0b997e4df60600160ff1b03831115612b785750600090506003612c25565b8460ff16601b14158015612b9057508460ff16601c14155b15612ba15750600090506004612c25565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015612bf5573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116612c1e57600060019250925050612c25565b9150600090505b94509492505050565b6000612c83826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316612d009092919063ffffffff16565b805190915015610e885780806020019051810190612ca19190613674565b610e885760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016107df565b6060611f3a848460008585612d14856111b1565b612d605760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016107df565b600080866001600160a01b03168587604051612d7c9190613696565b60006040518083038185875af1925050503d8060008114612db9576040519150601f19603f3d011682016040523d82523d6000602084013e612dbe565b606091505b5091509150612dce828286612dd9565b979650505050505050565b60608315612de857508161081f565b825115612df85782518084602001fd5b8160405162461bcd60e51b81526004016107df9190612f03565b828054612e1e906133b2565b90600052602060002090601f016020900481019282612e405760008555612e86565b82601f10612e5957805160ff1916838001178555612e86565b82800160010185558215612e86579182015b82811115612e86578251825591602001919060010190612e6b565b50612e92929150612e96565b5090565b5b80821115612e925760008155600101612e97565b60005b83811015612ec6578181015183820152602001612eae565b838111156114255750506000910152565b60008151808452612eef816020860160208601612eab565b601f01601f19169290920160200192915050565b60208152600061081f6020830184612ed7565b80356001600160a01b0381168114612f2d57600080fd5b919050565b60008060408385031215612f4557600080fd5b612f4e83612f16565b946020939093013593505050565b600080600060608486031215612f7157600080fd5b612f7a84612f16565b9250612f8860208501612f16565b9150604084013590509250925092565b600060208284031215612faa57600080fd5b5035919050565b60008060408385031215612fc457600080fd5b82359150612fd460208401612f16565b90509250929050565b600060208284031215612fef57600080fd5b61081f82612f16565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171561303657613036612ff8565b604052919050565b600082601f83011261304f57600080fd5b81356001600160401b0381111561306857613068612ff8565b61307b601f8201601f191660200161300e565b81815284602083860101111561309057600080fd5b816020850160208301376000918101602001919091529392505050565b600082601f8301126130be57600080fd5b813560206001600160401b038211156130d9576130d9612ff8565b8160051b6130e882820161300e565b928352848101820192828101908785111561310257600080fd5b83870192505b84831015612dce5761311983612f16565b82529183019190830190613108565b80356001600160801b0381168114612f2d57600080fd5b600080600080600080600080610100898b03121561315c57600080fd5b61316589612f16565b975060208901356001600160401b038082111561318157600080fd5b61318d8c838d0161303e565b985060408b01359150808211156131a357600080fd5b6131af8c838d0161303e565b975060608b01359150808211156131c557600080fd5b6131d18c838d0161303e565b965060808b01359150808211156131e757600080fd5b506131f48b828c016130ad565b94505061320360a08a01612f16565b925061321160c08a01613128565b915061321f60e08a01612f16565b90509295985092959890939650565b600080600083850361012081121561324557600080fd5b6101008082121561325557600080fd5b85945084013590506001600160401b038082111561327257600080fd5b818601915086601f83011261328657600080fd5b81358181111561329557600080fd5b8760208285010111156132a757600080fd5b6020830194508093505050509250925092565b600080604083850312156132cd57600080fd5b50508035926020909101359150565b6000602082840312156132ee57600080fd5b81356001600160401b0381111561330457600080fd5b611f3a8482850161303e565b60006020828403121561332257600080fd5b81356002811061081f57600080fd5b6000806040838503121561334457600080fd5b61334d83612f16565b9150612fd460208401612f16565b6001600160a01b03929092168252602082015260400190565b634e487b7160e01b600052602160045260246000fd5b60208101600283106133ac57634e487b7160e01b600052602160045260246000fd5b91905290565b600181811c908216806133c657607f821691505b6020821081141561107f57634e487b7160e01b600052602260045260246000fd5b6020808252600e908201526d139bdd08185d5d1a1bdc9a5e995960921b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600082198211156134385761343861340f565b500190565b61010081016001600160a01b038061345485612f16565b1683528061346460208601612f16565b16602084015260408401356040840152606084013560608401528061348b60808601612f16565b1660808401525061349e60a08401613128565b6001600160801b0381811660a0850152806134bb60c08701613128565b1660c0850152505060e083013560e083015292915050565b7402832b936b4b9b9b4b7b7399d1030b1b1b7bab73a1605d1b815260008351613503816015850160208801612eab565b7001034b99036b4b9b9b4b733903937b6329607d1b6015918401918201528351613534816026840160208801612eab565b01602601949350505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60408152600061359e6040830185612ed7565b82810360208401526135b08185612ed7565b95945050505050565b6000602082840312156135cb57600080fd5b61081f82613128565b60008160001904831182151516156135ee576135ee61340f565b500290565b60008261361057634e487b7160e01b600052601260045260246000fd5b500490565b6000828210156136275761362761340f565b500390565b634e487b7160e01b600052603260045260246000fd5b6000816136515761365161340f565b506000190190565b600060001982141561366d5761366d61340f565b5060010190565b60006020828403121561368657600080fd5b8151801515811461081f57600080fd5b600082516136a8818460208701612eab565b919091019291505056fe8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c5297e68f3a27f04914f2c6db0ad63b5e5c8173cebcc1a5341df045cf6dad7adc9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa264697066735822122066dd91c6b06b60458de1ed790a69090b22ce604eab72369ce4b8419ccbcb23d764736f6c634300080c0033",
    "sourceMap": "1754:8034:387:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2493:98:447;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;676:104:72;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;929:32:644;;;911:51;;899:2;884:18;676:104:72;765:203:644;4770:197:447;;;;;;;;;;-1:-1:-1;4770:197:447;;;;;:::i;:::-;;:::i;:::-;;;1575:14:644;;1568:22;1550:41;;1538:2;1523:18;4770:197:447;1410:187:644;3581:106:447;;;;;;;;;;-1:-1:-1;3668:12:447;;3581:106;;;1748:25:644;;;1736:2;1721:18;3581:106:447;1602:177:644;2043:269:71;;;;;;;;;;-1:-1:-1;2043:269:71;;;;;:::i;:::-;;:::i;:::-;;5529:286:447;;;;;;;;;;-1:-1:-1;5529:286:447;;;;;:::i;:::-;;:::i;2740:120:69:-;;;;;;;;;;-1:-1:-1;2740:120:69;;;;;:::i;:::-;2808:7;2834:19;;;:13;:19;;;;;;;2740:120;3255:271;;;;;;;;;;-1:-1:-1;3255:271:69;;;;;:::i;:::-;;:::i;3430:91:447:-;;;;;;;;;;-1:-1:-1;3430:91:447;;3512:2;2885:36:644;;2873:2;2858:18;3430:91:447;2743:184:644;4466:217:69;;;;;;;;;;-1:-1:-1;4466:217:69;;;;;:::i;:::-;;:::i;6210:234:447:-;;;;;;;;;;-1:-1:-1;6210:234:447;;;;;:::i;:::-;;:::i;5409:163:387:-;;;;;;;;;;-1:-1:-1;5409:163:387;;;;;:::i;:::-;;:::i;918:134:209:-;;;;;;;;;;-1:-1:-1;918:134:209;;;;;:::i;:::-;;:::i;3192:998:387:-;;;;;;;;;;-1:-1:-1;3192:998:387;;;;;:::i;:::-;;:::i;1189:228:72:-;;;;;;;;;;-1:-1:-1;1189:228:72;;;;;:::i;:::-;;:::i;3745:125:447:-;;;;;;;;;;-1:-1:-1;3745:125:447;;;;;:::i;:::-;-1:-1:-1;;;;;3845:18:447;3819:7;3845:18;;;:9;:18;;;;;;;3745:125;2821:255:71;;;;;;;;;;-1:-1:-1;2821:255:71;;;;;:::i;:::-;;:::i;4880:459:387:-;;;;;;:::i;:::-;;:::i;1643:633:70:-;;;;;;;;;;-1:-1:-1;1643:633:70;;;;;:::i;:::-;;:::i;1324:131:69:-;;;;;;;;;;-1:-1:-1;1324:131:69;;;;;:::i;:::-;;:::i;1003:188:54:-;;;;;;;;;;-1:-1:-1;1003:188:54;;;;;:::i;:::-;;:::i;2704:102:447:-;;;;;;;;;;;;;:::i;5639:240:387:-;;;;;;;;;;-1:-1:-1;5639:240:387;;;;;:::i;:::-;;:::i;4466:133::-;;;;;;;;;;-1:-1:-1;4466:133:387;;;;;:::i;:::-;-1:-1:-1;;;;;4565:27:387;4539:7;4565:27;;;:19;:27;;;;;;;4466:133;742:49:69;;;;;;;;;;-1:-1:-1;742:49:69;787:4;742:49;;2206:211;;;;;;;;;;-1:-1:-1;2206:211:69;;;;;:::i;:::-;;:::i;6931:427:447:-;;;;;;;;;;-1:-1:-1;6931:427:447;;;;;:::i;:::-;;:::i;4066:189::-;;;;;;;;;;-1:-1:-1;4066:189:447;;;;;:::i;:::-;;:::i;3455:200:71:-;;;;;;;;;;-1:-1:-1;3455:200:71;;;;;:::i;:::-;;:::i;1252:293:82:-;;;;;;;;;;-1:-1:-1;1252:293:82;;;;;:::i;:::-;;:::i;:::-;;;;8072:14:644;;8065:22;8047:41;;-1:-1:-1;;;;;8124:32:644;;;8119:2;8104:18;;8097:60;8020:18;1252:293:82;7879:284:644;2683:398:70;;;;;;;;;;-1:-1:-1;2683:398:70;;;;;:::i;:::-;;:::i;1058:147:71:-;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;8358:32:644;;;8340:51;;8439:6;8427:19;;;8422:2;8407:18;;8400:47;8313:18;1058:147:71;8168:285:644;3897:171:69;;;;;;;;;;-1:-1:-1;3897:171:69;;;;;:::i;:::-;;:::i;4313:149:447:-;;;;;;;;;;-1:-1:-1;4313:149:447;;;;;:::i;:::-;;:::i;1268:136:71:-;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;565:34:54:-;;;;;;;;;;;;;:::i;6009:127:387:-;;;;;;;;;;-1:-1:-1;6009:127:387;;;;;:::i;:::-;;:::i;1467:107:71:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;2493:98:447:-;2547:13;2579:5;2572:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2493:98;:::o;676:104:72:-;764:9;;-1:-1:-1;;;;;764:9:72;;676:104::o;4770:197:447:-;4853:4;4869:13;4885:12;:10;:12::i;:::-;4869:28;;4907:32;4916:5;4923:7;4932:6;4907:8;:32::i;:::-;4956:4;4949:11;;;4770:197;;;;;:::o;2043:269:71:-;2160:24;:22;:24::i;:::-;2155:80;;2200:24;;-1:-1:-1;;;2200:24:71;;;;;;;:::i;:::-;;;;;;;;2155:80;2244:61;2266:21;2289:15;2244:21;:61::i;:::-;2043:269;;:::o;5529:286:447:-;5656:4;5672:15;5690:12;:10;:12::i;:::-;5672:30;;5712:38;5728:4;5734:7;5743:6;5712:15;:38::i;:::-;5760:27;5770:4;5776:2;5780:6;5760:9;:27::i;:::-;5804:4;5797:11;;;5529:286;;;;;;:::o;3255:271:69:-;3350:19;;;;:13;:19;;;;;;3339:43;;3371:10;3339;:43::i;:::-;3396:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;3396:23:69;;;;;;;;;;;;3392:93;;;3435:39;;-1:-1:-1;;;3435:39:69;;10418:2:644;3435:39:69;;;10400:21:644;10457:2;10437:18;;;10430:30;10496:31;10476:18;;;10469:59;10545:18;;3435:39:69;10216:353:644;3392:93:69;3494:25;3505:4;3511:7;3494:10;:25::i;4466:217::-;4557:10;-1:-1:-1;;;;;4557:21:69;;;4553:88;;4594:36;;-1:-1:-1;;;4594:36:69;;10776:2:644;4594:36:69;;;10758:21:644;10815:2;10795:18;;;10788:30;-1:-1:-1;;;10834:18:644;;;10827:56;10900:18;;4594:36:69;10574:350:644;4553:88:69;4650:26;4662:4;4668:7;4650:11;:26::i;6210:234:447:-;6298:4;6314:13;6330:12;:10;:12::i;:::-;6314:28;;6352:64;6361:5;6368:7;6405:10;6377:25;6387:5;6394:7;6377:9;:25::i;:::-;:38;;;;:::i;:::-;6352:8;:64::i;5409:163:387:-;5486:34;-1:-1:-1;;;;;;;;;;;5507:12:387;:10;:12::i;5486:34::-;5478:58;;;;-1:-1:-1;;;5478:58:387;;11396:2:644;5478:58:387;;;11378:21:644;11435:2;11415:18;;;11408:30;-1:-1:-1;;;11454:18:644;;;11447:41;11505:18;;5478:58:387;11194:335:644;5478:58:387;5546:19;5554:2;5558:6;5546:7;:19::i;918:134:209:-;-1:-1:-1;;;;;1017:28:209;994:4;1017:28;;;:17;:28;;;;;;;;;918:134::o;3192:998:387:-;3134:13:436;;;;;;;3133:14;;3179:34;;;;-1:-1:-1;3197:12:436;;3212:1;3197:12;;;;:16;3179:34;3178:108;;;;3220:44;3258:4;3220:29;:44::i;:::-;3219:45;:66;;;;-1:-1:-1;3268:12:436;;;;;:17;3219:66;3157:201;;;;-1:-1:-1;;;3157:201:436;;11736:2:644;3157:201:436;;;11718:21:644;11775:2;11755:18;;;11748:30;11814:34;11794:18;;;11787:62;-1:-1:-1;;;11865:18:644;;;11858:44;11919:19;;3157:201:436;11534:410:644;3157:201:436;3368:12;:16;;-1:-1:-1;;3368:16:436;3383:1;3368:16;;;3394:65;;;;3428:13;:20;;-1:-1:-1;;3428:20:436;;;;;3394:65;3600:41:387::1;3622:18;3600:21;:41::i;:::-;3651:38;3674:5;3681:7;3651:22;:38::i;:::-;3699:32;3725:5;3699:25;:32::i;:::-;3741:24;:22;:24::i;:::-;3776:31;3794:12;3776:17;:31::i;:::-;3818:45;787:4:69;3849:13:387::0;3818:10:::1;:45::i;:::-;3873:38;-1:-1:-1::0;;;;;;;;;;;3897:13:387::1;3873:10;:38::i;:::-;3921:40;-1:-1:-1::0;;;;;;;;;;;3947:13:387::1;3921:10;:40::i;:::-;3972:38;-1:-1:-1::0;;;;;;;;;;;3996:13:387::1;3972:10;:38::i;:::-;4020:39;-1:-1:-1::0;;;;;;;;;;;2626:24:387;4020:13:::1;:39::i;:::-;4070:61;4092:21;4115:15;-1:-1:-1::0;;;;;4070:61:387::1;:21;:61::i;:::-;4141:42;4168:14;4141:26;:42::i;:::-;3483:14:436::0;3479:99;;;3513:13;:21;;-1:-1:-1;;3513:21:436;;;3553:14;;-1:-1:-1;2885:36:644;;3553:14:436;;2873:2:644;2858:18;3553:14:436;;;;;;;3479:99;3101:483;3192:998:387;;;;;;;;:::o;1189:228:72:-;1279:29;:27;:29::i;:::-;1274:85;;1324:24;;-1:-1:-1;;;1324:24:72;;;;;;;:::i;1274:85::-;1368:42;1395:14;1368:26;:42::i;:::-;1189:228;:::o;2821:255:71:-;2926:24;:22;:24::i;:::-;2921:80;;2966:24;;-1:-1:-1;;;2966:24:71;;;;;;;:::i;2921:80::-;3011:58;3037:21;3060:8;3011:25;:58::i;4880:459:387:-;5032:14;1815:1:438;2569:7;;:19;;2561:63;;;;-1:-1:-1;;;2561:63:438;;12350:2:644;2561:63:438;;;12332:21:644;12389:2;12369:18;;;12362:30;12428:33;12408:18;;;12401:61;12479:18;;2561:63:438;12148:355:644;2561:63:438;1815:1;2699:7;:18;5071:33:387::1;5087:4:::0;5093:10;;5071:15:::1;:33::i;:::-;5062:42:::0;-1:-1:-1;5114:16:387::1;5133:7;;::::0;::::1;:4:::0;:7:::1;:::i;:::-;5114:26:::0;-1:-1:-1;5151:74:387::1;5172:25;::::0;;;::::1;::::0;::::1;;:::i;:::-;5199:13;::::0;;;::::1;::::0;::::1;;:::i;:::-;5214:4;:10;;;5151:20;:74::i;:::-;5235:32;5243:8;5253:4;:13;;;5235:7;:32::i;:::-;5317:8;-1:-1:-1::0;;;;;5283:49:387::1;5309:6;-1:-1:-1::0;;;;;5283:49:387::1;;5327:4;5283:49;;;;;;:::i;:::-;;;;;;;;-1:-1:-1::0;1772:1:438;2872:7;:22;4880:459:387;;-1:-1:-1;;;4880:459:387:o;1643:633:70:-;1727:14;1776:17;;;:11;:17;;;;;:23;1727:14;;1833:437;1857:12;1853:1;:16;1833:437;;;1937:1;1897:17;;;:11;:17;;;;;;;;:28;;;:25;;:28;;;;;;-1:-1:-1;;;;;1897:28:70;:42;1893:367;;1972:5;1963;:14;1959:133;;;2010:17;;;;:11;:17;;;;;;;;:28;;;:25;;;;:28;;;;-1:-1:-1;;;;;2010:28:70;;-1:-1:-1;2060:13:70;;-1:-1:-1;;2060:13:70;1959:133;2109:10;2118:1;2109:10;;:::i;:::-;;;1893:367;;;2144:25;2152:4;2166:1;2144:7;:25::i;:::-;:71;;;;-1:-1:-1;2178:17:70;;;;:11;:17;;;;;;;;:37;;;:25;;:37;;;;;;2173:42;;2144:71;2140:120;;;2235:10;2244:1;2235:10;;:::i;:::-;;;2140:120;1871:6;1876:1;1871:6;;:::i;:::-;;;1833:437;;;;1743:533;;1643:633;;;;:::o;1324:131:69:-;1402:4;1425:14;;;:8;:14;;;;;;;;-1:-1:-1;;;;;1425:23:69;;;;;;;;;;;;;;;1324:131::o;1003:188:54:-;1080:20;:18;:20::i;:::-;1075:76;;1116:24;;-1:-1:-1;;;1116:24:54;;;;;;;:::i;1075:76::-;1161:23;1179:4;1161:17;:23::i;2704:102:447:-;2760:13;2792:7;2785:14;;;;;:::i;5639:240:387:-;5715:14;5732:12;:10;:12::i;:::-;5715:29;;5768:6;-1:-1:-1;;;;;5758:16:387;:6;-1:-1:-1;;;;;5758:16:387;;5754:87;;5790:40;5806:6;5814;5822:7;5790:15;:40::i;:::-;5850:22;5856:6;5864:7;5850:5;:22::i;:::-;5705:174;5639:240;;:::o;2206:211:69:-;2285:4;2306:14;;;:8;:14;;;;;;;;:26;;;;;;;;;;;2301:88;;-1:-1:-1;2355:14:69;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;2355:23:69;;;;;;;;;;;;2348:30;;2301:88;-1:-1:-1;2406:4:69;2206:211;;;;:::o;6931:427:447:-;7024:4;7040:13;7056:12;:10;:12::i;:::-;7040:28;;7078:24;7105:25;7115:5;7122:7;7105:9;:25::i;:::-;7078:52;;7168:15;7148:16;:35;;7140:85;;;;-1:-1:-1;;;7140:85:447;;13651:2:644;7140:85:447;;;13633:21:644;13690:2;13670:18;;;13663:30;13729:34;13709:18;;;13702:62;-1:-1:-1;;;13780:18:644;;;13773:35;13825:19;;7140:85:447;13449:401:644;7140:85:447;7259:60;7268:5;7275:7;7303:15;7284:16;:34;7259:8;:60::i;:::-;-1:-1:-1;7347:4:447;;6931:427;-1:-1:-1;;;;6931:427:447:o;4066:189::-;4145:4;4161:13;4177:12;:10;:12::i;:::-;4161:28;;4199;4209:5;4216:2;4220:6;4199:9;:28::i;3455:200:71:-;3533:24;:22;:24::i;:::-;3528:80;;3573:24;;-1:-1:-1;;;3573:24:71;;;;;;;:::i;3528:80::-;3617:31;3639:8;3617:21;:31::i;1252:293:82:-;1384:12;1398:14;1437:33;1453:4;1459:10;;1437:15;:33::i;:::-;1498:8;;;;1491:16;;;;:6;:16;;;;;;1428:42;;-1:-1:-1;1491:16:82;;1490:17;:48;;;;;1511:27;1531:6;1511:19;:27::i;:::-;1480:58;;1252:293;;;;;;:::o;2683:398:70:-;2757:13;2805:17;;;:11;:17;;;;;:23;2757:13;2839:161;2863:12;2859:1;:16;2839:161;;;2943:1;2903:17;;;:11;:17;;;;;;;;:28;;;:25;;:28;;;;;;-1:-1:-1;;;;;2903:28:70;:42;2899:91;;2965:10;2974:1;2965:10;;:::i;:::-;;;2899:91;2877:6;2882:1;2877:6;;:::i;:::-;;;2839:161;;;;3013:25;3021:4;3035:1;3013:7;:25::i;:::-;3009:66;;;3054:10;3063:1;3054:10;;:::i;:::-;;;3009:66;2772:309;2683:398;;;:::o;1058:147:71:-;1153:20;;-1:-1:-1;;;;;1153:20:71;;;-1:-1:-1;;;1182:14:71;;;;;;1058:147::o;3897:171:69:-;3993:19;;;;:13;:19;;;;;;3982:43;;4014:10;3982;:43::i;4313:149:447:-;-1:-1:-1;;;;;4428:18:447;;;4402:7;4428:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4313:149::o;1268:136:71:-;1359:20;;1381:15;;-1:-1:-1;;;;;1359:20:71;;;;1268:136::o;565:34:54:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6009:127:387:-;-1:-1:-1;;;;;;;;;;;931:28:69;942:4;948:10;931;:28::i;1467:107:71:-;1552:15;;-1:-1:-1;;;1552:15:71;;;;;1467:107::o;1186:320:462:-;-1:-1:-1;;;;;1476:19:462;;:23;;;1186:320::o;9322:231:387:-;9471:14;9508:38;:36;:38::i;:::-;9501:45;;9322:231;:::o;10447:370:447:-;-1:-1:-1;;;;;10578:19:447;;10570:68;;;;-1:-1:-1;;;10570:68:447;;14057:2:644;10570:68:447;;;14039:21:644;14096:2;14076:18;;;14069:30;14135:34;14115:18;;;14108:62;-1:-1:-1;;;14186:18:644;;;14179:34;14230:19;;10570:68:447;13855:400:644;10570:68:447;-1:-1:-1;;;;;10656:21:447;;10648:68;;;;-1:-1:-1;;;10648:68:447;;14462:2:644;10648:68:447;;;14444:21:644;14501:2;14481:18;;;14474:30;14540:34;14520:18;;;14513:62;-1:-1:-1;;;14591:18:644;;;14584:32;14633:19;;10648:68:447;14260:398:644;10648:68:447;-1:-1:-1;;;;;10727:18:447;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10778:32;;1748:25:644;;;10778:32:447;;1721:18:644;10778:32:447;;;;;;;10447:370;;;:::o;8484:137:387:-;8550:4;8573:41;8550:4;8601:12;:10;:12::i;2371:375:71:-;2499:6;2481:15;:24;2477:80;;;2521:25;;-1:-1:-1;;;2521:25:71;;14865:2:644;2521:25:71;;;14847:21:644;14904:2;14884:18;;;14877:30;-1:-1:-1;;;14923:18:644;;;14916:45;14978:18;;2521:25:71;14663:339:644;2477:80:71;2567:14;:40;;-1:-1:-1;;;;;;2617:44:71;-1:-1:-1;;;2567:40:71;;;;-1:-1:-1;;;;;;2617:44:71;;-1:-1:-1;;;;;2617:44:71;;;;;;;;2677:62;;1748:25:644;;;2677:62:71;;1736:2:644;1721:18;2677:62:71;;;;;;;;2371:375;;:::o;11098:441:447:-;11228:24;11255:25;11265:5;11272:7;11255:9;:25::i;:::-;11228:52;;-1:-1:-1;;11294:16:447;:37;11290:243;;11375:6;11355:16;:26;;11347:68;;;;-1:-1:-1;;;11347:68:447;;15209:2:644;11347:68:447;;;15191:21:644;15248:2;15228:18;;;15221:30;15287:31;15267:18;;;15260:59;15336:18;;11347:68:447;15007:353:644;11347:68:447;11457:51;11466:5;11473:7;11501:6;11482:16;:25;11457:8;:51::i;:::-;11218:321;11098:441;;;:::o;7812:651::-;-1:-1:-1;;;;;7938:18:447;;7930:68;;;;-1:-1:-1;;;7930:68:447;;15567:2:644;7930:68:447;;;15549:21:644;15606:2;15586:18;;;15579:30;15645:34;15625:18;;;15618:62;-1:-1:-1;;;15696:18:644;;;15689:35;15741:19;;7930:68:447;15365:401:644;7930:68:447;-1:-1:-1;;;;;8016:16:447;;8008:64;;;;-1:-1:-1;;;8008:64:447;;15973:2:644;8008:64:447;;;15955:21:644;16012:2;15992:18;;;15985:30;16051:34;16031:18;;;16024:62;-1:-1:-1;;;16102:18:644;;;16095:33;16145:19;;8008:64:447;15771:399:644;8008:64:447;8083:38;8104:4;8110:2;8114:6;8083:20;:38::i;:::-;-1:-1:-1;;;;;8154:15:447;;8132:19;8154:15;;;:9;:15;;;;;;8187:21;;;;8179:72;;;;-1:-1:-1;;;8179:72:447;;16377:2:644;8179:72:447;;;16359:21:644;16416:2;16396:18;;;16389:30;16455:34;16435:18;;;16428:62;-1:-1:-1;;;16506:18:644;;;16499:36;16552:19;;8179:72:447;16175:402:644;8179:72:447;-1:-1:-1;;;;;8285:15:447;;;;;;;:9;:15;;;;;;8303:20;;;8285:38;;8343:13;;;;;;;;:23;;8317:6;;8285:15;8343:23;;8317:6;;8343:23;:::i;:::-;;;;;;;;8397:2;-1:-1:-1;;;;;8382:26:447;8391:4;-1:-1:-1;;;;;8382:26:447;-1:-1:-1;;;;;;;;;;;8401:6:447;8382:26;;;;1748:25:644;;1736:2;1721:18;;1602:177;8382:26:447;;;;;;;;8419:37;5639:240:387;5557:495:69;5645:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;5645:23:69;;;;;;;;;;;;5640:406;;5827:43;5857:7;-1:-1:-1;;;;;5827:43:69;5867:2;5827:21;:43::i;:::-;5941:40;5971:4;5978:2;5941:21;:40::i;:::-;5736:267;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;5736:267:69;;;;;;;;;;-1:-1:-1;;;5684:351:69;;;;;;;:::i;3475:152:70:-;3554:31;3571:4;3577:7;3554:16;:31::i;:::-;3595:25;3606:4;3612:7;3595:10;:25::i;3205:157::-;3285:32;3303:4;3309:7;3285:17;:32::i;:::-;4084:11;4098:17;;;:11;:17;;;;;;;;-1:-1:-1;;;;;4098:34:70;;;;;:25;;;:34;;;;;;;;4150:30;;:25;;;;:30;;;;;4143:37;;-1:-1:-1;;;;;;4143:37:70;;;4197:34;;;;4190:41;2043:269:71;;:::o;6375:133:387:-;6441:19;6447:3;6452:7;6441:5;:19::i;:::-;6488:3;-1:-1:-1;;;;;6475:26:387;;6493:7;6475:26;;;;1748:25:644;;1736:2;1721:18;;1602:177;470:194:209;4910:13:436;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:436;;;;;;;:::i;:::-;572:26:209::1;:24;:26::i;:::-;608:49;640:16;608:31;:49::i;2269:159:447:-:0;4910:13:436;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:436;;;;;;;:::i;:::-;2381:13:447;;::::1;::::0;:5:::1;::::0;:13:::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;2404:17:447;;::::1;::::0;:7:::1;::::0;:17:::1;::::0;::::1;::::0;::::1;:::i;854:176:82:-:0;4910:13:436;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:436;;;;;;;:::i;:::-;946:25:82::1;960:5;946:25;;;;;;;;;;;;;-1:-1:-1::0;;;946:25:82::1;;::::0;:13:::1;:25::i;:::-;981:42;1017:5;981:35;:42::i;1853:111:438:-:0;4910:13:436;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:436;;;;;;;:::i;:::-;1923:34:438::1;:32;:34::i;:::-;1853:111::o:0;1273:185:54:-;1339:21;1363:11;1339:35;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1384:18:54;;1339:35;;-1:-1:-1;1384:18:54;;:11;;-1:-1:-1;1384:18:54;;;;-1:-1:-1;1384:18:54;-1:-1:-1;1384:18:54;:::i;:::-;;1418:33;1437:7;1446:4;1418:33;;;;;;;:::i;:::-;;;;;;;;1329:129;1273:185;:::o;4743:245:69:-;4826:25;4854:19;;;:13;:19;;;;;;;;4883:31;;;;4929:52;;4854:19;;4905:9;;4854:19;;4868:4;;4929:52;;4826:25;4929:52;4816:172;4743:245;;:::o;1499:170:72:-;1578:9;:26;;-1:-1:-1;;;;;;1578:26:72;-1:-1:-1;;;;;1578:26:72;;;;;;;;1619:43;;;;-1:-1:-1;;1619:43:72;1499:170;:::o;3129:261:71:-;3232:15;:26;;;3268:20;:44;;-1:-1:-1;;;;;;3268:44:71;-1:-1:-1;;;;;3268:44:71;;;;;3328:55;;;;;;3268:44;;3232:26;;3328:55;:::i;1792:561:82:-;1889:14;1915:12;1957:24;1964:4;1970:10;;1957:6;:24::i;:::-;1937:44;-1:-1:-1;1937:44:82;-1:-1:-1;1937:44:82;1992:35;;;;-1:-1:-1;;;1992:35:82;;18373:2:644;1992:35:82;;;18355:21:644;18412:2;18392:18;;;18385:30;-1:-1:-1;;;18431:18:644;;;18424:45;18486:18;;1992:35:82;18171:339:644;1992:35:82;2089:15;2058:27;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2058:46:82;;;:94;;;;-1:-1:-1;2127:25:82;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2108:44:82;:15;:44;;2058:94;2037:156;;;;-1:-1:-1;;;2037:156:82;;18908:2:644;2037:156:82;;;18890:21:644;18947:2;18927:18;;;18920:30;-1:-1:-1;;;18966:18:644;;;18959:45;19021:18;;2037:156:82;18706:339:644;2037:156:82;2230:1;2211:7;;;;:4;:7;:::i;:::-;-1:-1:-1;;;;;2211:21:82;;;2203:53;;;;-1:-1:-1;;;2203:53:82;;19252:2:644;2203:53:82;;;19234:21:644;19291:2;19271:18;;;19264:30;-1:-1:-1;;;19310:18:644;;;19303:49;19369:18;;2203:53:82;19050:343:644;2203:53:82;2290:1;2274:4;:13;;;:17;2266:46;;;;-1:-1:-1;;;2266:46:82;;19600:2:644;2266:46:82;;;19582:21:644;19639:2;19619:18;;;19612:30;-1:-1:-1;;;19658:18:644;;;19651:46;19714:18;;2266:46:82;19398:340:644;2266:46:82;-1:-1:-1;2330:8:82;;;;;2323:16;;;;:6;:16;;;;;:23;;-1:-1:-1;;2323:23:82;2342:4;2323:23;;;-1:-1:-1;1792:561:82;;;-1:-1:-1;1792:561:82:o;6599:1264:387:-;6748:11;6744:95;;6783:9;:14;6775:33;;;;-1:-1:-1;;;6775:33:387;;19945:2:644;6775:33:387;;;19927:21:644;19984:1;19964:18;;;19957:29;-1:-1:-1;;;20002:18:644;;;19995:36;20048:18;;6775:33:387;19743:329:644;6744:95:387;6849:18;-1:-1:-1;;;;;6881:45:387;;408:42:284;6881:45:387;6877:172;;;-1:-1:-1;6958:9:387;:19;;6877:172;;;-1:-1:-1;7024:9:387;:14;6877:172;7066:13;7058:43;;;;-1:-1:-1;;;7058:43:387;;20279:2:644;7058:43:387;;;20261:21:644;20318:2;20298:18;;;20291:30;-1:-1:-1;;;20337:18:644;;;20330:47;20394:18;;7058:43:387;20077:341:644;7058:43:387;7112:21;-1:-1:-1;;;;;7136:35:387;;;:84;;7199:21;7136:84;;;7174:22;:20;:22::i;:::-;7112:108;;7231:12;7253:20;7284:23;7310:20;:18;:20::i;:::-;7284:46;-1:-1:-1;7355:20:387;7344:7;:31;;;;;;;;:::i;:::-;;7340:284;;;7414:24;:22;:24::i;:::-;7391:47;-1:-1:-1;7391:47:387;-1:-1:-1;7340:284:387;;;7469:21;7537:20;:18;:20::i;:::-;7504:53;;-1:-1:-1;7504:53:387;-1:-1:-1;2737:6:387;7579:23;;;;:6;:23;:::i;:::-;7578:35;;;;:::i;:::-;7571:42;;7455:169;7340:284;7652:4;7642:6;:14;;7634:29;;;;-1:-1:-1;;;7634:29:387;;21020:2:644;7634:29:387;;;21002:21:644;21059:1;21039:18;;;21032:29;-1:-1:-1;;;21077:18:644;;;21070:32;21119:18;;7634:29:387;20818:325:644;7634:29:387;7674:81;7711:9;7722:12;:10;:12::i;:::-;7736;7750:4;7674:36;:81::i;:::-;7765:91;7802:9;7813:12;:10;:12::i;:::-;7827:13;7842;7851:4;7842:6;:13;:::i;:::-;7765:36;:91::i;:::-;6734:1129;;;;;6599:1264;;;:::o;9448:576:447:-;-1:-1:-1;;;;;9531:21:447;;9523:67;;;;-1:-1:-1;;;9523:67:447;;21480:2:644;9523:67:447;;;21462:21:644;21519:2;21499:18;;;21492:30;21558:34;21538:18;;;21531:62;-1:-1:-1;;;21609:18:644;;;21602:31;21650:19;;9523:67:447;21278:397:644;9523:67:447;9601:49;9622:7;9639:1;9643:6;9601:20;:49::i;:::-;-1:-1:-1;;;;;9686:18:447;;9661:22;9686:18;;;:9;:18;;;;;;9722:24;;;;9714:71;;;;-1:-1:-1;;;9714:71:447;;21882:2:644;9714:71:447;;;21864:21:644;21921:2;21901:18;;;21894:30;21960:34;21940:18;;;21933:62;-1:-1:-1;;;22011:18:644;;;22004:32;22053:19;;9714:71:447;21680:398:644;9714:71:447;-1:-1:-1;;;;;9819:18:447;;;;;;:9;:18;;;;;9840:23;;;9819:44;;9883:12;:22;;9857:6;;9819:18;9883:22;;9857:6;;9883:22;:::i;:::-;;;;-1:-1:-1;;9921:37:447;;1748:25:644;;;9947:1:447;;-1:-1:-1;;;;;9921:37:447;;;-1:-1:-1;;;;;;;;;;;9921:37:447;1736:2:644;1721:18;9921:37:447;;;;;;;5705:174:387;5639:240;;:::o;3698:157:71:-;3774:15;:26;;3792:8;;3774:15;-1:-1:-1;;;;3774:26:71;-1:-1:-1;;;3792:8:71;3774:26;;;;;;;;:::i;:::-;;;;;;3816:32;3839:8;3816:32;;;;;;:::i;:::-;;;;;;;;3698:157;:::o;2427:204:82:-;2529:7;2555:69;2613:10;;2555:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2555:49:82;;-1:-1:-1;2582:20:82;;-1:-1:-1;2597:4:82;;-1:-1:-1;2582:14:82;:20::i;:::-;2572:31;;;;;;2555:16;:49::i;:::-;:57;;:69::i;:::-;2548:76;2427:204;-1:-1:-1;;;;2427:204:82:o;9179:137:387:-;9257:4;9280:29;-1:-1:-1;;;;;;;;;;;9301:7:387;9280;:29::i;1058:401:209:-;1120:14;1150:30;1169:10;1150:18;:30::i;:::-;1146:307;;;-1:-1:-1;;;1352:14:209;1348:23;1335:37;1331:2;1327:46;1058:401;:::o;1146:307::-;-1:-1:-1;929:10:464;;9322:231:387:o;7906:483::-;8096:34;-1:-1:-1;;;;;;;;;;;8127:1:387;8096:7;:34::i;:::-;8095:35;:57;;;;-1:-1:-1;;;;;;8134:18:387;;;;8095:57;:77;;;;-1:-1:-1;;;;;;8156:16:387;;;;8095:77;8091:200;;;8196:28;-1:-1:-1;;;;;;;;;;;8219:4:387;8196:7;:28::i;:::-;:58;;;;8228:26;-1:-1:-1;;;;;;;;;;;8251:2:387;8228:7;:26::i;:::-;8188:92;;;;-1:-1:-1;;;8188:92:387;;22285:2:644;8188:92:387;;;22267:21:644;22324:2;22304:18;;;22297:30;-1:-1:-1;;;22343:18:644;;;22336:51;22404:18;;8188:92:387;22083:345:644;8188:92:387;-1:-1:-1;;;;;8305:18:387;;8301:82;;-1:-1:-1;;;;;8339:23:387;;;;;;:19;:23;;;;;:33;;8366:6;;8339:23;:33;;8366:6;;8339:33;:::i;:::-;;;;-1:-1:-1;;7906:483:387;;;:::o;1565:441:292:-;1640:13;1665:19;1697:10;1701:6;1697:1;:10;:::i;:::-;:14;;1710:1;1697:14;:::i;:::-;-1:-1:-1;;;;;1687:25:292;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1687:25:292;;1665:47;;-1:-1:-1;;;1722:6:292;1729:1;1722:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1722:15:292;;;;;;;;;-1:-1:-1;;;1747:6:292;1754:1;1747:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1747:15:292;;;;;;;;-1:-1:-1;1777:9:292;1789:10;1793:6;1789:1;:10;:::i;:::-;:14;;1802:1;1789:14;:::i;:::-;1777:26;;1772:132;1809:1;1805;:5;1772:132;;;-1:-1:-1;;;1856:5:292;1864:3;1856:11;1843:25;;;;;;;:::i;:::-;;;;1831:6;1838:1;1831:9;;;;;;;;:::i;:::-;;;;:37;-1:-1:-1;;;;;1831:37:292;;;;;;;;-1:-1:-1;1892:1:292;1882:11;;;;;1812:3;;;:::i;:::-;;;1772:132;;;-1:-1:-1;1921:10:292;;1913:55;;;;-1:-1:-1;;;1913:55:292;;22908:2:644;1913:55:292;;;22890:21:644;;;22927:18;;;22920:30;22986:34;22966:18;;;22959:62;23038:18;;1913:55:292;22706:356:644;5036:168:69;5114:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;5114:23:69;;;;;;;;;;:30;;-1:-1:-1;;5114:30:69;5140:4;5114:30;;;5159:38;5186:10;;5123:4;;5159:38;;5114:14;5159:38;5036:168;;:::o;3690:253:70:-;3760:11;3774:17;;;:11;:17;;;;;:23;;;3834:1;;3774:17;3807:28;3834:1;3774:23;3807:28;:::i;:::-;;;;-1:-1:-1;;3846:17:70;;;;:11;:17;;;;;;;;:30;;;:25;;;:30;;;;;:40;;-1:-1:-1;;;;;3846:40:70;;;-1:-1:-1;;;;;;3846:40:70;;;;;;;3896:34;;;:25;;;;:34;;;;:40;3690:253::o;5253:204:69:-;5332:25;5343:4;5349:7;5332:10;:25::i;:::-;5374:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;5374:23:69;;;;;;;;;;5367:30;;-1:-1:-1;;5367:30:69;;;5412:38;5439:10;;5383:4;;5412:38;;5374:14;5412:38;5253:204;;:::o;8739:389:447:-;-1:-1:-1;;;;;8822:21:447;;8814:65;;;;-1:-1:-1;;;8814:65:447;;23269:2:644;8814:65:447;;;23251:21:644;23308:2;23288:18;;;23281:30;23347:33;23327:18;;;23320:61;23398:18;;8814:65:447;23067:355:644;8814:65:447;8890:49;8919:1;8923:7;8932:6;8890:20;:49::i;:::-;8966:6;8950:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8982:18:447;;;;;;:9;:18;;;;;:28;;9004:6;;8982:18;:28;;9004:6;;8982:28;:::i;:::-;;;;-1:-1:-1;;9025:37:447;;1748:25:644;;;-1:-1:-1;;;;;9025:37:447;;;9042:1;;-1:-1:-1;;;;;;;;;;;9025:37:447;1736:2:644;1721:18;9025:37:447;;;;;;;2043:269:71;;:::o;776:69:464:-;4910:13:436;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:436;;;;;;;:::i;670:242:209:-;4910:13:436;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:436;;;;;;;:::i;:::-;787:9:209::1;782:124;806:16;:23;802:1;:27;782:124;;;891:4;850:17;:38;868:16;885:1;868:19;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;-1:-1:-1;;;;;850:38:209::1;::::0;;;::::1;::::0;;;;;;-1:-1:-1;850:38:209;:45;;-1:-1:-1;;850:45:209::1;::::0;::::1;;::::0;;;::::1;::::0;;831:3;::::1;::::0;::::1;:::i;:::-;;;;782:124;;2306:147:470::0;4910:13:436;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:436;;;;;;;:::i;:::-;2408:38:470::1;2432:4;2438:7;2408:23;:38::i;1036:88:82:-:0;4910:13:436;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:436;;;;;;;:::i;1970:109:438:-;4910:13:436;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:436;;;;;;;:::i;:::-;1772:1:438::1;2050:7;:22:::0;1970:109::o;508:385:284:-;659:12;655:49;;687:7;;655:49;-1:-1:-1;;;;;718:25:284;;408:42;718:25;714:173;;;759:37;783:3;788:7;759:23;:37::i;:::-;714:173;;;827:49;845:9;856:5;863:3;868:7;827:17;:49::i;2703:446:82:-;2777:12;509:207;2874:7;;;;:4;:7;:::i;:::-;2899:25;;;;;;;;:::i;:::-;2942:13;;;;2973:10;;;;3001:13;;;;;;;;:::i;:::-;3032:27;;;;;;;;:::i;:::-;3077:25;;;;;;;;:::i;:::-;2820:322;;;;;;23938:25:644;;;;-1:-1:-1;;;;;24037:15:644;;;24017:18;;;24010:43;24089:15;;;24069:18;;;24062:43;24121:18;;;24114:34;;;;24164:19;;;24157:35;;;;24229:15;;;24208:19;;;24201:44;-1:-1:-1;;;;;24320:15:644;;;3120:8:82;24299:19:644;;;24292:44;;;;24373:15;;24352:19;;;24345:44;3120:8:82;;;24405:19:644;;;24398:35;23910:19;;2820:322:82;;;;;;;;;;;;2801:341;;2703:446;;;:::o;3890:176:470:-;3967:7;3993:66;4026:20;:18;:20::i;:::-;4048:10;8710:57:469;;-1:-1:-1;;;8710:57:469;;;25269:27:644;25312:11;;;25305:27;;;25348:12;;;25341:28;;;8674:7:469;;25385:12:644;;8710:57:469;;;;;;;;;;;;8700:68;;;;;;8693:75;;8581:194;;;;;3781:227;3859:7;3879:17;3898:18;3920:27;3931:4;3937:9;3920:10;:27::i;:::-;3878:69;;;;3957:18;3969:5;3957:11;:18::i;:::-;-1:-1:-1;3992:9:469;3781:227;-1:-1:-1;;;3781:227:469:o;2459:297:470:-;4910:13:436;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:436;;;;;;;:::i;:::-;2592:22:470;;::::1;::::0;;::::1;::::0;2648:25;;;;;::::1;::::0;2683:12:::1;:25:::0;;;;2718:15:::1;:31:::0;2459:297::o;2532:292:284:-;2714:12;2732:2;-1:-1:-1;;;;;2732:7:284;2748:5;2732:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2713:46;;;2777:7;2769:48;;;;-1:-1:-1;;;2769:48:284;;24856:2:644;2769:48:284;;;24838:21:644;24895:2;24875:18;;;24868:30;-1:-1:-1;;;24914:18:644;;;24907:58;24982:18;;2769:48:284;24654:352:644;2073:396:284;2234:3;-1:-1:-1;;;;;2225:12:284;:5;-1:-1:-1;;;;;2225:12:284;;2221:49;;;2253:7;;2221:49;-1:-1:-1;;;;;2284:22:284;;2301:4;2284:22;2280:183;;;2322:44;-1:-1:-1;;;;;2322:30:284;;2353:3;2358:7;2322:30;:44::i;2280:183::-;2397:55;-1:-1:-1;;;;;2397:34:284;;2432:5;2439:3;2444:7;2397:34;:55::i;2842:160:470:-;2895:7;2921:74;1595:95;2955:17;4386:12;;;4302:103;2955:17;4731:15;;3184:73;;;;;;27566:25:644;;;27607:18;;;27600:34;;;27650:18;;;27643:34;;;3228:13:470;27693:18:644;;;27686:34;3251:4:470;27736:19:644;;;27729:61;3148:7:470;;27538:19:644;;3184:73:470;;;;;;;;;;;;3174:84;;;;;;3167:91;;3008:257;;;;;;2265:730:469;2346:7;2355:12;2383:9;:16;2403:2;2383:22;2379:610;;;2719:4;2704:20;;2698:27;2768:4;2753:20;;2747:27;2825:4;2810:20;;2804:27;2421:9;2796:36;2866:25;2877:4;2796:36;2698:27;2747;2866:10;:25::i;:::-;2859:32;;;;;;;;;2379:610;-1:-1:-1;2938:1:469;;-1:-1:-1;2942:35:469;2379:610;2265:730;;;;;:::o;570:631::-;647:20;638:5;:29;;;;;;;;:::i;:::-;;634:561;;;570:631;:::o;634:561::-;743:29;734:5;:38;;;;;;;;:::i;:::-;;730:465;;;788:34;;-1:-1:-1;;;788:34:469;;25610:2:644;788:34:469;;;25592:21:644;25649:2;25629:18;;;25622:30;-1:-1:-1;;;25668:18:644;;;25661:54;25732:18;;788:34:469;25408:348:644;730:465:469;852:35;843:5;:44;;;;;;;;:::i;:::-;;839:356;;;903:41;;-1:-1:-1;;;903:41:469;;25963:2:644;903:41:469;;;25945:21:644;26002:2;25982:18;;;25975:30;26041:33;26021:18;;;26014:61;26092:18;;903:41:469;25761:355:644;839:356:469;974:30;965:5;:39;;;;;;;;:::i;:::-;;961:234;;;1020:44;;-1:-1:-1;;;1020:44:469;;26323:2:644;1020:44:469;;;26305:21:644;26362:2;26342:18;;;26335:30;26401:34;26381:18;;;26374:62;-1:-1:-1;;;26452:18:644;;;26445:32;26494:19;;1020:44:469;26121:398:644;961:234:469;1094:30;1085:5;:39;;;;;;;;:::i;:::-;;1081:114;;;1140:44;;-1:-1:-1;;;1140:44:469;;26726:2:644;1140:44:469;;;26708:21:644;26765:2;26745:18;;;26738:30;26804:34;26784:18;;;26777:62;-1:-1:-1;;;26855:18:644;;;26848:32;26897:19;;1140:44:469;26524:398:644;735:205:226;847:86;867:5;897:23;;;922:2;926:5;874:58;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;874:58:226;;;;;;;;;;;;;;-1:-1:-1;;;;;874:58:226;-1:-1:-1;;;;;;874:58:226;;;;;;;;;;847:19;:86::i;946:241::-;1111:68;;-1:-1:-1;;;;;27185:15:644;;;1111:68:226;;;27167:34:644;27237:15;;27217:18;;;27210:43;27269:18;;;27262:34;;;1084:96:226;;1104:5;;-1:-1:-1;;;1134:27:226;27102:18:644;;1111:68:226;26927:375:644;5189:1603:469;5315:7;;-1:-1:-1;;;;;6226:79:469;;6222:161;;;-1:-1:-1;6337:1:469;;-1:-1:-1;6341:30:469;6321:51;;6222:161;6396:1;:7;;6401:2;6396:7;;:18;;;;;6407:1;:7;;6412:2;6407:7;;6396:18;6392:100;;;-1:-1:-1;6446:1:469;;-1:-1:-1;6450:30:469;6430:51;;6392:100;6603:24;;;6586:14;6603:24;;;;;;;;;28028:25:644;;;28101:4;28089:17;;28069:18;;;28062:45;;;;28123:18;;;28116:34;;;28166:18;;;28159:34;;;6603:24:469;;28000:19:644;;6603:24:469;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6603:24:469;;-1:-1:-1;;6603:24:469;;;-1:-1:-1;;;;;;;6641:20:469;;6637:101;;6693:1;6697:29;6677:50;;;;;;;6637:101;6756:6;-1:-1:-1;6764:20:469;;-1:-1:-1;5189:1603:469;;;;;;;;:::o;3241:706:226:-;3660:23;3686:69;3714:4;3686:69;;;;;;;;;;;;;;;;;3694:5;-1:-1:-1;;;;;3686:27:226;;;:69;;;;;:::i;:::-;3769:17;;3660:95;;-1:-1:-1;3769:21:226;3765:176;;3864:10;3853:30;;;;;;;;;;;;:::i;:::-;3845:85;;;;-1:-1:-1;;;3845:85:226;;28688:2:644;3845:85:226;;;28670:21:644;28727:2;28707:18;;;28700:30;28766:34;28746:18;;;28739:62;-1:-1:-1;;;28817:18:644;;;28810:40;28867:19;;3845:85:226;28486:406:644;3827:223:288;3960:12;3991:52;4013:6;4021:4;4027:1;4030:12;3960;5202:18;5213:6;5202:10;:18::i;:::-;5194:60;;;;-1:-1:-1;;;5194:60:288;;29506:2:644;5194:60:288;;;29488:21:644;29545:2;29525:18;;;29518:30;29584:31;29564:18;;;29557:59;29633:18;;5194:60:288;29304:353:644;5194:60:288;5266:12;5280:23;5307:6;-1:-1:-1;;;;;5307:11:288;5327:5;5335:4;5307:33;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5265:75;;;;5357:51;5374:7;5383:10;5395:12;5357:16;:51::i;:::-;5350:58;4914:501;-1:-1:-1;;;;;;;4914:501:288:o;7529:692::-;7675:12;7703:7;7699:516;;;-1:-1:-1;7733:10:288;7726:17;;7699:516;7844:17;;:21;7840:365;;8038:10;8032:17;8098:15;8085:10;8081:2;8077:19;8070:44;7840:365;8177:12;8170:20;;-1:-1:-1;;;8170:20:288;;;;;;;;:::i;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:258:644;86:1;96:113;110:6;107:1;104:13;96:113;;;186:11;;;180:18;167:11;;;160:39;132:2;125:10;96:113;;;227:6;224:1;221:13;218:48;;;-1:-1:-1;;262:1:644;244:16;;237:27;14:258::o;277:::-;319:3;357:5;351:12;384:6;379:3;372:19;400:63;456:6;449:4;444:3;440:14;433:4;426:5;422:16;400:63;:::i;:::-;517:2;496:15;-1:-1:-1;;492:29:644;483:39;;;;524:4;479:50;;277:258;-1:-1:-1;;277:258:644:o;540:220::-;689:2;678:9;671:21;652:4;709:45;750:2;739:9;735:18;727:6;709:45;:::i;973:173::-;1041:20;;-1:-1:-1;;;;;1090:31:644;;1080:42;;1070:70;;1136:1;1133;1126:12;1070:70;973:173;;;:::o;1151:254::-;1219:6;1227;1280:2;1268:9;1259:7;1255:23;1251:32;1248:52;;;1296:1;1293;1286:12;1248:52;1319:29;1338:9;1319:29;:::i;:::-;1309:39;1395:2;1380:18;;;;1367:32;;-1:-1:-1;;;1151:254:644:o;1784:328::-;1861:6;1869;1877;1930:2;1918:9;1909:7;1905:23;1901:32;1898:52;;;1946:1;1943;1936:12;1898:52;1969:29;1988:9;1969:29;:::i;:::-;1959:39;;2017:38;2051:2;2040:9;2036:18;2017:38;:::i;:::-;2007:48;;2102:2;2091:9;2087:18;2074:32;2064:42;;1784:328;;;;;:::o;2117:180::-;2176:6;2229:2;2217:9;2208:7;2204:23;2200:32;2197:52;;;2245:1;2242;2235:12;2197:52;-1:-1:-1;2268:23:644;;2117:180;-1:-1:-1;2117:180:644:o;2484:254::-;2552:6;2560;2613:2;2601:9;2592:7;2588:23;2584:32;2581:52;;;2629:1;2626;2619:12;2581:52;2665:9;2652:23;2642:33;;2694:38;2728:2;2717:9;2713:18;2694:38;:::i;:::-;2684:48;;2484:254;;;;;:::o;2932:186::-;2991:6;3044:2;3032:9;3023:7;3019:23;3015:32;3012:52;;;3060:1;3057;3050:12;3012:52;3083:29;3102:9;3083:29;:::i;3123:127::-;3184:10;3179:3;3175:20;3172:1;3165:31;3215:4;3212:1;3205:15;3239:4;3236:1;3229:15;3255:275;3326:2;3320:9;3391:2;3372:13;;-1:-1:-1;;3368:27:644;3356:40;;-1:-1:-1;;;;;3411:34:644;;3447:22;;;3408:62;3405:88;;;3473:18;;:::i;:::-;3509:2;3502:22;3255:275;;-1:-1:-1;3255:275:644:o;3535:531::-;3578:5;3631:3;3624:4;3616:6;3612:17;3608:27;3598:55;;3649:1;3646;3639:12;3598:55;3685:6;3672:20;-1:-1:-1;;;;;3707:2:644;3704:26;3701:52;;;3733:18;;:::i;:::-;3777:55;3820:2;3801:13;;-1:-1:-1;;3797:27:644;3826:4;3793:38;3777:55;:::i;:::-;3857:2;3848:7;3841:19;3903:3;3896:4;3891:2;3883:6;3879:15;3875:26;3872:35;3869:55;;;3920:1;3917;3910:12;3869:55;3985:2;3978:4;3970:6;3966:17;3959:4;3950:7;3946:18;3933:55;4033:1;4008:16;;;4026:4;4004:27;3997:38;;;;4012:7;3535:531;-1:-1:-1;;;3535:531:644:o;4071:718::-;4125:5;4178:3;4171:4;4163:6;4159:17;4155:27;4145:55;;4196:1;4193;4186:12;4145:55;4232:6;4219:20;4258:4;-1:-1:-1;;;;;4277:2:644;4274:26;4271:52;;;4303:18;;:::i;:::-;4349:2;4346:1;4342:10;4372:28;4396:2;4392;4388:11;4372:28;:::i;:::-;4434:15;;;4504;;;4500:24;;;4465:12;;;;4536:15;;;4533:35;;;4564:1;4561;4554:12;4533:35;4600:2;4592:6;4588:15;4577:26;;4612:148;4628:6;4623:3;4620:15;4612:148;;;4694:23;4713:3;4694:23;:::i;:::-;4682:36;;4645:12;;;;4738;;;;4612:148;;4794:173;4862:20;;-1:-1:-1;;;;;4911:31:644;;4901:42;;4891:70;;4957:1;4954;4947:12;4972:1270;5149:6;5157;5165;5173;5181;5189;5197;5205;5258:3;5246:9;5237:7;5233:23;5229:33;5226:53;;;5275:1;5272;5265:12;5226:53;5298:29;5317:9;5298:29;:::i;:::-;5288:39;;5378:2;5367:9;5363:18;5350:32;-1:-1:-1;;;;;5442:2:644;5434:6;5431:14;5428:34;;;5458:1;5455;5448:12;5428:34;5481:50;5523:7;5514:6;5503:9;5499:22;5481:50;:::i;:::-;5471:60;;5584:2;5573:9;5569:18;5556:32;5540:48;;5613:2;5603:8;5600:16;5597:36;;;5629:1;5626;5619:12;5597:36;5652:52;5696:7;5685:8;5674:9;5670:24;5652:52;:::i;:::-;5642:62;;5757:2;5746:9;5742:18;5729:32;5713:48;;5786:2;5776:8;5773:16;5770:36;;;5802:1;5799;5792:12;5770:36;5825:52;5869:7;5858:8;5847:9;5843:24;5825:52;:::i;:::-;5815:62;;5930:3;5919:9;5915:19;5902:33;5886:49;;5960:2;5950:8;5947:16;5944:36;;;5976:1;5973;5966:12;5944:36;;5999:63;6054:7;6043:8;6032:9;6028:24;5999:63;:::i;:::-;5989:73;;;6081:39;6115:3;6104:9;6100:19;6081:39;:::i;:::-;6071:49;;6139:39;6173:3;6162:9;6158:19;6139:39;:::i;:::-;6129:49;;6197:39;6231:3;6220:9;6216:19;6197:39;:::i;:::-;6187:49;;4972:1270;;;;;;;;;;;:::o;6247:765::-;6358:6;6366;6374;6418:9;6409:7;6405:23;6448:3;6444:2;6440:12;6437:32;;;6465:1;6462;6455:12;6437:32;6488:3;6511:2;6507;6503:11;6500:31;;;6527:1;6524;6517:12;6500:31;6550:9;;-1:-1:-1;6595:18:644;;6582:32;;-1:-1:-1;;;;;;6663:14:644;;;6660:34;;;6690:1;6687;6680:12;6660:34;6728:6;6717:9;6713:22;6703:32;;6773:7;6766:4;6762:2;6758:13;6754:27;6744:55;;6795:1;6792;6785:12;6744:55;6835:2;6822:16;6861:2;6853:6;6850:14;6847:34;;;6877:1;6874;6867:12;6847:34;6924:7;6917:4;6908:6;6904:2;6900:15;6896:26;6893:39;6890:59;;;6945:1;6942;6935:12;6890:59;6976:4;6972:2;6968:13;6958:23;;7000:6;6990:16;;;;;6247:765;;;;;:::o;7017:248::-;7085:6;7093;7146:2;7134:9;7125:7;7121:23;7117:32;7114:52;;;7162:1;7159;7152:12;7114:52;-1:-1:-1;;7185:23:644;;;7255:2;7240:18;;;7227:32;;-1:-1:-1;7017:248:644:o;7270:322::-;7339:6;7392:2;7380:9;7371:7;7367:23;7363:32;7360:52;;;7408:1;7405;7398:12;7360:52;7448:9;7435:23;-1:-1:-1;;;;;7473:6:644;7470:30;7467:50;;;7513:1;7510;7503:12;7467:50;7536;7578:7;7569:6;7558:9;7554:22;7536:50;:::i;7597:277::-;7677:6;7730:2;7718:9;7709:7;7705:23;7701:32;7698:52;;;7746:1;7743;7736:12;7698:52;7785:9;7772:23;7824:1;7817:5;7814:12;7804:40;;7840:1;7837;7830:12;8458:260;8526:6;8534;8587:2;8575:9;8566:7;8562:23;8558:32;8555:52;;;8603:1;8600;8593:12;8555:52;8626:29;8645:9;8626:29;:::i;:::-;8616:39;;8674:38;8708:2;8697:9;8693:18;8674:38;:::i;8723:274::-;-1:-1:-1;;;;;8915:32:644;;;;8897:51;;8979:2;8964:18;;8957:34;8885:2;8870:18;;8723:274::o;9002:127::-;9063:10;9058:3;9054:20;9051:1;9044:31;9094:4;9091:1;9084:15;9118:4;9115:1;9108:15;9134:349;9287:2;9272:18;;9320:1;9309:13;;9299:144;;9365:10;9360:3;9356:20;9353:1;9346:31;9400:4;9397:1;9390:15;9428:4;9425:1;9418:15;9299:144;9452:25;;;9134:349;:::o;9488:380::-;9567:1;9563:12;;;;9610;;;9631:61;;9685:4;9677:6;9673:17;9663:27;;9631:61;9738:2;9730:6;9727:14;9707:18;9704:38;9701:161;;;9784:10;9779:3;9775:20;9772:1;9765:31;9819:4;9816:1;9809:15;9847:4;9844:1;9837:15;9873:338;10075:2;10057:21;;;10114:2;10094:18;;;10087:30;-1:-1:-1;;;10148:2:644;10133:18;;10126:44;10202:2;10187:18;;9873:338::o;10929:127::-;10990:10;10985:3;10981:20;10978:1;10971:31;11021:4;11018:1;11011:15;11045:4;11042:1;11035:15;11061:128;11101:3;11132:1;11128:6;11125:1;11122:13;11119:39;;;11138:18;;:::i;:::-;-1:-1:-1;11174:9:644;;11061:128::o;12508:936::-;12704:3;12689:19;;-1:-1:-1;;;;;12727:19:644;12777:26;12796:6;12777:26;:::i;:::-;12773:35;12762:9;12755:54;12890:2;12851:37;12882:4;12874:6;12870:17;12851:37;:::i;:::-;12847:46;12840:4;12829:9;12825:20;12818:76;12957:4;12949:6;12945:17;12932:31;12925:4;12914:9;12910:20;12903:61;13027:4;13019:6;13015:17;13002:31;12995:4;12984:9;12980:20;12973:61;13115:2;13076:37;13107:4;13099:6;13095:17;13076:37;:::i;:::-;13072:46;13065:4;13054:9;13050:20;13043:76;;13148:37;13179:4;13171:6;13167:17;13148:37;:::i;:::-;-1:-1:-1;;;;;13261:21:644;;;13254:4;13239:20;;13232:51;13204:19;13325:37;13356:4;13344:17;;13325:37;:::i;:::-;13321:46;13314:4;13303:9;13299:20;13292:76;;;13431:4;13423:6;13419:17;13406:31;13399:4;13388:9;13384:20;13377:61;12508:936;;;;:::o;16582:784::-;-1:-1:-1;;;16988:3:644;16981:36;16963:3;17046:6;17040:13;17062:62;17117:6;17112:2;17107:3;17103:12;17096:4;17088:6;17084:17;17062:62;:::i;:::-;-1:-1:-1;;;17183:2:644;17143:16;;;17175:11;;;17168:40;17233:13;;17255:63;17233:13;17304:2;17296:11;;17289:4;17277:17;;17255:63;:::i;:::-;17338:17;17357:2;17334:26;;16582:784;-1:-1:-1;;;;16582:784:644:o;17371:407::-;17573:2;17555:21;;;17612:2;17592:18;;;17585:30;17651:34;17646:2;17631:18;;17624:62;-1:-1:-1;;;17717:2:644;17702:18;;17695:41;17768:3;17753:19;;17371:407::o;17783:383::-;17980:2;17969:9;17962:21;17943:4;18006:45;18047:2;18036:9;18032:18;18024:6;18006:45;:::i;:::-;18099:9;18091:6;18087:22;18082:2;18071:9;18067:18;18060:50;18127:33;18153:6;18145;18127:33;:::i;:::-;18119:41;17783:383;-1:-1:-1;;;;;17783:383:644:o;18515:186::-;18574:6;18627:2;18615:9;18606:7;18602:23;18598:32;18595:52;;;18643:1;18640;18633:12;18595:52;18666:29;18685:9;18666:29;:::i;20423:168::-;20463:7;20529:1;20525;20521:6;20517:14;20514:1;20511:21;20506:1;20499:9;20492:17;20488:45;20485:71;;;20536:18;;:::i;:::-;-1:-1:-1;20576:9:644;;20423:168::o;20596:217::-;20636:1;20662;20652:132;;20706:10;20701:3;20697:20;20694:1;20687:31;20741:4;20738:1;20731:15;20769:4;20766:1;20759:15;20652:132;-1:-1:-1;20798:9:644;;20596:217::o;21148:125::-;21188:4;21216:1;21213;21210:8;21207:34;;;21221:18;;:::i;:::-;-1:-1:-1;21258:9:644;;21148:125::o;22433:127::-;22494:10;22489:3;22485:20;22482:1;22475:31;22525:4;22522:1;22515:15;22549:4;22546:1;22539:15;22565:136;22604:3;22632:5;22622:39;;22641:18;;:::i;:::-;-1:-1:-1;;;22677:18:644;;22565:136::o;23427:135::-;23466:3;-1:-1:-1;;23487:17:644;;23484:43;;;23507:18;;:::i;:::-;-1:-1:-1;23554:1:644;23543:13;;23427:135::o;28204:277::-;28271:6;28324:2;28312:9;28303:7;28299:23;28295:32;28292:52;;;28340:1;28337;28330:12;28292:52;28372:9;28366:16;28425:5;28418:13;28411:21;28404:5;28401:32;28391:60;;28447:1;28444;28437:12;29662:274;29791:3;29829:6;29823:13;29845:53;29891:6;29886:3;29879:4;29871:6;29867:17;29845:53;:::i;:::-;29914:16;;;;;29662:274;-1:-1:-1;;29662:274:644:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "DEFAULT_ADMIN_ROLE()": "a217fddf",
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "cancel(address,uint256)": "98590ef9",
    "contractURI()": "e8a3d485",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "getFlatPlatformFeeInfo()": "e57553da",
    "getPlatformFeeInfo()": "d45573f6",
    "getPlatformFeeType()": "f28083c3",
    "getRoleAdmin(bytes32)": "248a9ca3",
    "getRoleMember(bytes32,uint256)": "9010d07c",
    "getRoleMemberCount(bytes32)": "ca15c873",
    "getTotalMintedInLifetime(address)": "a1699dc8",
    "grantRole(bytes32,address)": "2f2ff15d",
    "hasRole(bytes32,address)": "91d14854",
    "hasRoleWithSwitch(bytes32,address)": "a32fa5b3",
    "increaseAllowance(address,uint256)": "39509351",
    "initialize(address,string,string,string,address[],address,uint128,address)": "5f34ff38",
    "isTrustedForwarder(address)": "572b6c05",
    "mintTo(address,uint256)": "449a52f8",
    "mintWithSignature((address,address,uint256,uint256,address,uint128,uint128,bytes32),bytes)": "8f0fefbb",
    "name()": "06fdde03",
    "primarySaleRecipient()": "079fe40e",
    "renounceRole(bytes32,address)": "36568abe",
    "revoke(address,uint256)": "eac449d9",
    "revokeRole(bytes32,address)": "d547741f",
    "setContractURI(string)": "938e3d7b",
    "setFlatPlatformFeeInfo(address,uint256)": "7e54523c",
    "setPlatformFeeInfo(address,uint256)": "1e7ac488",
    "setPlatformFeeType(uint8)": "b6f10c79",
    "setPrimarySaleRecipient(address)": "6f4f2837",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd",
    "verify((address,address,uint256,uint256,address,uint128,uint128,bytes32),bytes)": "c1b606e2"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"prevURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newURI\",\"type\":\"string\"}],\"name\":\"ContractURIUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"platformFeeRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"flatFee\",\"type\":\"uint256\"}],\"name\":\"FlatPlatformFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"platformFeeRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"platformFeeBps\",\"type\":\"uint256\"}],\"name\":\"PlatformFeeInfoUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"enum IPlatformFee.PlatformFeeType\",\"name\":\"feeType\",\"type\":\"uint8\"}],\"name\":\"PlatformFeeTypeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"PrimarySaleRecipientUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"mintedTo\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantityMinted\",\"type\":\"uint256\"}],\"name\":\"TokensMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"mintedTo\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"primarySaleRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"validityStartTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"validityEndTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"indexed\":false,\"internalType\":\"struct ISignatureMintERC20.MintRequest\",\"name\":\"mintRequest\",\"type\":\"tuple\"}],\"name\":\"TokensMintedWithSignature\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"cancel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFlatPlatformFeeInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPlatformFeeInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPlatformFeeType\",\"outputs\":[{\"internalType\":\"enum IPlatformFee.PlatformFeeType\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"getTotalMintedInLifetime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRoleWithSwitch\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_defaultAdmin\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_contractURI\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"_trustedForwarders\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"_saleRecipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"_platformFeeBps\",\"type\":\"uint128\"},{\"internalType\":\"address\",\"name\":\"_platformFeeRecipient\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mintTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"primarySaleRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"validityStartTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"validityEndTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"internalType\":\"struct ISignatureMintERC20.MintRequest\",\"name\":\"_req\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"mintWithSignature\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"primarySaleRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"revoke\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"setContractURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_platformFeeRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_flatFee\",\"type\":\"uint256\"}],\"name\":\"setFlatPlatformFeeInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_platformFeeRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_platformFeeBps\",\"type\":\"uint256\"}],\"name\":\"setPlatformFeeInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IPlatformFee.PlatformFeeType\",\"name\":\"_feeType\",\"type\":\"uint8\"}],\"name\":\"setPlatformFeeType\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_saleRecipient\",\"type\":\"address\"}],\"name\":\"setPrimarySaleRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"primarySaleRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"validityStartTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"validityEndTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"internalType\":\"struct ISignatureMintERC20.MintRequest\",\"name\":\"_req\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"verify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:description\":\"This contract is a loyalty points contract. Each token represents a loyalty point. Loyalty points can                      be cancelled (i.e. 'burned') by its owner or an approved operator. Loyalty points can be revoked                      (i.e. 'burned') without its owner's approval, by an admin of the contract.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getFlatPlatformFeeInfo()\":{\"details\":\"Returns the platform fee bps and recipient.\"},\"getPlatformFeeInfo()\":{\"details\":\"Returns the platform fee recipient and bps.\"},\"getPlatformFeeType()\":{\"details\":\"Returns the platform fee bps and recipient.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"See {grantRole} and {revokeRole}.                  To change a role's admin, use {_setRoleAdmin}.\",\"params\":{\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns `member` who has `role`, at `index` of role-members list.                  See struct {RoleMembers}, and mapping {roleMembers}\",\"params\":{\"index\":\"Index in list of current members for the role.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"},\"returns\":{\"member\":\" Address of account that has `role`\"}},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns `count` of accounts that have `role`.                  See struct {RoleMembers}, and mapping {roleMembers}\",\"params\":{\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"},\"returns\":{\"count\":\"  Total number of accounts that have `role`\"}},\"grantRole(bytes32,address)\":{\"details\":\"Caller must have admin role for the `role`.                  Emits {RoleGranted Event}.\",\"params\":{\"account\":\"Address of the account to which the role is being granted.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\",\"params\":{\"account\":\"Address of the account for which the role is being checked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"hasRoleWithSwitch(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.                  Role restrictions can be swtiched on and off:                      - If address(0) has ROLE, then the ROLE restrictions                        don't apply.                      - If address(0) does not have ROLE, then the ROLE                        restrictions will apply.\",\"params\":{\"account\":\"Address of the account for which the role is being checked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"initialize(address,string,string,string,address[],address,uint128,address)\":{\"details\":\"Initializes the contract, like a constructor.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"primarySaleRecipient()\":{\"details\":\"Returns primary sale recipient address.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Caller must have the `role`, with caller being the same as `account`.                  Emits {RoleRevoked Event}.\",\"params\":{\"account\":\"Address of the account from which the role is being revoked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"revokeRole(bytes32,address)\":{\"details\":\"Caller must have admin role for the `role`.                  Emits {RoleRevoked Event}.\",\"params\":{\"account\":\"Address of the account from which the role is being revoked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"setContractURI(string)\":{\"details\":\"Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.\",\"params\":{\"_uri\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"setPlatformFeeInfo(address,uint256)\":{\"details\":\"Caller should be authorized to set platform fee info.                  See {_canSetPlatformFeeInfo}.                  Emits {PlatformFeeInfoUpdated Event}; See {_setupPlatformFeeInfo}.\",\"params\":{\"_platformFeeBps\":\"Updated platformFeeBps.\",\"_platformFeeRecipient\":\"Address to be set as new platformFeeRecipient.\"}},\"setPrimarySaleRecipient(address)\":{\"details\":\"Caller should be authorized to set primary sales info.                  See {_canSetPrimarySaleRecipient}.                  Emits {PrimarySaleRecipientUpdated Event}; See {_setupPrimarySaleRecipient}.\",\"params\":{\"_saleRecipient\":\"Address to be set as new recipient of primary sales.\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"verify((address,address,uint256,uint256,address,uint128,uint128,bytes32),bytes)\":{\"details\":\"Verifies that a mint request is signed by an account holding MINTER_ROLE (at the time of the function call).\"}},\"stateVariables\":{\"MAX_BPS\":{\"details\":\"Max bps in the thirdweb system.\"},\"MINTER_ROLE\":{\"details\":\"Only MINTER_ROLE holders can sign off on `MintRequest`s.\"},\"REVOKE_ROLE\":{\"details\":\"Only REVOKE_ROLE holders can revoke a loyalty card.\"},\"TRANSFER_ROLE\":{\"details\":\"Only TRANSFER_ROLE holders can have tokens transferred from or to them, during restricted transfers.\"},\"_mintedToInLifetime\":{\"details\":\"Mapping from token owner => total tokens minted to them in the contract's lifetime.\"}},\"title\":\"LoyaltyPoints\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"cancel(address,uint256)\":{\"notice\":\"Burns `amount` of tokens. See {ERC20-_burn}.\"},\"contractURI()\":{\"notice\":\"Returns the contract metadata URI.\"},\"getRoleAdmin(bytes32)\":{\"notice\":\"Returns the admin role that controls the specified role.\"},\"getRoleMember(bytes32,uint256)\":{\"notice\":\"Returns the role-member from a list of members for a role,                  at a given index.\"},\"getRoleMemberCount(bytes32)\":{\"notice\":\"Returns total number of accounts that have a role.\"},\"getTotalMintedInLifetime(address)\":{\"notice\":\"Returns the total tokens minted to `owner` in the contract's lifetime.\"},\"grantRole(bytes32,address)\":{\"notice\":\"Grants a role to an account, if not previously granted.\"},\"hasRole(bytes32,address)\":{\"notice\":\"Checks whether an account has a particular role.\"},\"hasRoleWithSwitch(bytes32,address)\":{\"notice\":\"Checks whether an account has a particular role;                  role restrictions can be swtiched on and off.\"},\"mintTo(address,uint256)\":{\"notice\":\"Mints `amount` of tokens to the recipient `to`.\"},\"mintWithSignature((address,address,uint256,uint256,address,uint128,uint128,bytes32),bytes)\":{\"notice\":\"Mints tokens to a recipient using a signature from an authorized party.\"},\"renounceRole(bytes32,address)\":{\"notice\":\"Revokes role from the account.\"},\"revoke(address,uint256)\":{\"notice\":\"Burns `amount` of tokens from `owner`'s balance (without requiring approval from owner). See {ERC20-_burn}.\"},\"revokeRole(bytes32,address)\":{\"notice\":\"Revokes role from an account.\"},\"setContractURI(string)\":{\"notice\":\"Lets a contract admin set the URI for contract-level metadata.\"},\"setFlatPlatformFeeInfo(address,uint256)\":{\"notice\":\"Lets a module admin set a flat fee on primary sales.\"},\"setPlatformFeeInfo(address,uint256)\":{\"notice\":\"Updates the platform fee recipient and bps.\"},\"setPlatformFeeType(uint8)\":{\"notice\":\"Lets a module admin set platform fee type.\"},\"setPrimarySaleRecipient(address)\":{\"notice\":\"Updates primary sale recipient.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/prebuilts/unaudited/loyalty/LoyaltyPoints.sol\":\"LoyaltyPoints\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@std/=lib/forge-std/src/\",\":@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/\",\":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/\",\":contracts/=contracts/\",\":ds-test/=lib/ds-test/src/\",\":dynamic-contracts/=lib/dynamic-contracts/src/\",\":erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/ERC721A-Upgradeable/\",\":erc721a/=lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/\"]},\"sources\":{\"contracts/eip/interface/IERC20.sol\":{\"keccak256\":\"0x5bdd9dd97ba7d9d7c9a2953db287e4d9d7fa93a27a96bc2e72a8da4919b6f7ff\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://45527c265ee5de6bbb3ecfc052e7b1175531a82c2ac16172020aee855f7dd592\",\"dweb:/ipfs/QmVZthqbG916qUQSwv1LE8bB58ZGQ1VfQbLbbRV5urfEYA\"]},\"contracts/extension/ContractMetadata.sol\":{\"keccak256\":\"0xf53ab08ec3057056872c15e35a5610f7a43426bd2829786aed006d527177adfe\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ee132ae5efdd372152febfcd8fd3a7cb82c7019367d92c886f5096003a79f392\",\"dweb:/ipfs/QmRW1cGWmZAu57huZpTUwsWB8AxUFrBp6g4NqozXpbWsR6\"]},\"contracts/extension/Permissions.sol\":{\"keccak256\":\"0xe7e18181f2d2c8bae4afc7ee69ce1d547e7aa583182e8e0853ca33c49a28c04d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://75d5f5a9356c290e398a5dd05914b59c3d09e6fedde2da80b6f1012aedf323f8\",\"dweb:/ipfs/QmNrrf8Uyq33XBsE2NqVTW6HVX3XixFTjCG8KGbGxdEE84\"]},\"contracts/extension/PermissionsEnumerable.sol\":{\"keccak256\":\"0x434a6ffc16ddc437ffb37b8fbe4c9696385252f15a617c4606b8c5e10561caf3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1a9d4dac4bf2ae3c3c086af1956dc25e8b149b0914125e660cc0648791c247cb\",\"dweb:/ipfs/QmTMEggPdBea1JCamsShwRf3en2FgVTXNTPJ2isFtBk4Kk\"]},\"contracts/extension/PlatformFee.sol\":{\"keccak256\":\"0x8db4537648987b88dce356120fc96c48cffe53eaa5988b9a7e8aa023f4258163\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9e30009e63be23e60e92bf25582143596e3f01b2a1f7e121664559119a9f5890\",\"dweb:/ipfs/Qma3bi4NfCNZaukacNQMQ3j5kXn6Ym4mDa57Tqc26ssahE\"]},\"contracts/extension/PrimarySale.sol\":{\"keccak256\":\"0x9ef1ad82fadf988a07f4034b92ccdb3281682693e41759a79042814d36095f42\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0d962b48453e1f50b808193135c2f14265324fa8b75fe3b405ef7836e38921f7\",\"dweb:/ipfs/QmZDLNsZQj9kNcb15nBuWRpPwDdDvJS2gtFwqEs2Lwxb1N\"]},\"contracts/extension/SignatureMintERC20Upgradeable.sol\":{\"keccak256\":\"0x314429da21f4f15ef3f2c510dffb08884fcd602e3e53c70dd51aa6e231ad6838\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6098efdc3794ac758f7f073d8890a9d297ba79f55110f79e0ad378168576d893\",\"dweb:/ipfs/QmZcpL65TpuWtGoW7J9a2M5Rmv2mgDhTi1dh1YbURvPvfZ\"]},\"contracts/extension/interface/IContractMetadata.sol\":{\"keccak256\":\"0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a\",\"dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr\"]},\"contracts/extension/interface/IPermissions.sol\":{\"keccak256\":\"0xc0cd1f87bac474a06f85e2b341b9b57662aee957fc24180d42c872481c2f2ae3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7dec3eed451d63867531d693f0be3279fa2c9aef3130f0826c3520c06820fa5d\",\"dweb:/ipfs/QmTYANrcPdd9SCe99DWsKJ19evNRQKQGZeoS1Keew4M2cS\"]},\"contracts/extension/interface/IPermissionsEnumerable.sol\":{\"keccak256\":\"0x2e742c18a4481bad41d56424cd16c52def2fb415f69e5fb5f67d8d979300ff95\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d9be33bb865e3e82aca540a3e38cbc2bf2e431f9d1bf39c50d6c757e7b7bf3ee\",\"dweb:/ipfs/Qmdad1Xqj5SQ44Bk4bwD2uA36XnGHtqnVYSomKZQvnUBVG\"]},\"contracts/extension/interface/IPlatformFee.sol\":{\"keccak256\":\"0x8c23c2a223a3b94ccce125b418e5fabfb631695d927e336512bc8dca61bbc736\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://86dd8c93e75cb3a44d64c873154ee3857b604d1b07a9e52c120870172c2e9a34\",\"dweb:/ipfs/QmWXxEi7ygoRjN8yWYfVGbfhuwVg8bkLoHNzr3xMNa1VRv\"]},\"contracts/extension/interface/IPrimarySale.sol\":{\"keccak256\":\"0x77c89cb8d9b781b0a08b1fa81c95a0dd5c19200b2fb0dc884c1084b931624004\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a37b042af11a08ba5518dadf72c91745d1b5f42b1c20ea5282492bfd18f53869\",\"dweb:/ipfs/QmWEYYG5VqR8MRfr2rydDV98GLKmaJtCC8G1W7MzJ9qFnF\"]},\"contracts/extension/interface/ISignatureMintERC20.sol\":{\"keccak256\":\"0x07856a6a9e84482c0bb0ad79439bcdddaf22ad51ce1233a48cfff98020d3cf15\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5f8159aafb6eaf9a8207370189408eebce0d0cc590c1109857d7a3fe19a944c5\",\"dweb:/ipfs/QmTaL6qR7CtTwzfLYGX5fLNuaRJ643moCqhL1xdn4yGgEP\"]},\"contracts/external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol\":{\"keccak256\":\"0xdbc96b1264d2e2bd82cb7e697056929325e09d1641321145a8cec53b22b9567d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ca7ccf947d21d98878ec18e941b750cd2ae7c563e6d2a707da4f806038d67c8\",\"dweb:/ipfs/QmYVLYUPMD3b95vKrS5yjxcz2MDNNzkWJY9xc9bc9oTZdh\"]},\"contracts/external-deps/openzeppelin/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xa6149938a7c7c8af4244743aeaafcfb1fd9ce15ad45de58fa9576f0ed5599b2c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://839aa4ea6ef6d1972881bfd7420a9ddcd2f37139e3f0bf25310f93f48410702d\",\"dweb:/ipfs/QmSH65kStfbgMbfjFdfJqV412omPy6nB1JMvMt9q7SsytW\"]},\"contracts/infra/interface/IWETH.sol\":{\"keccak256\":\"0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1\",\"dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU\"]},\"contracts/lib/CurrencyTransferLib.sol\":{\"keccak256\":\"0x4a30bc9a8cd6cc8b855621fb1a651e2c3a1639b0ad153f1139c3ba463605672d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://417cc64ec6393f3cc89981ca9c32bbcc444a5f91363d69f84dd8ace888b2b859\",\"dweb:/ipfs/QmZeaQsYGx4VNoP8e1fcwC87PwvyakheWYeuwEwhFSJnvB\"]},\"contracts/lib/TWAddress.sol\":{\"keccak256\":\"0x460f032cf3bf43d586e126ab2ec8be4335767f497ccb699741546a1cfba94a7e\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://28fcbf6dde6c2eeb9864f6ec6f21dcc81ec426877debf4b912f2f3bc5b0fc91e\",\"dweb:/ipfs/QmS1SHrZDfefX8EE7DdvszTY6VPCHydf4HM7NKJ2gP72e6\"]},\"contracts/lib/TWStrings.sol\":{\"keccak256\":\"0xef7e9954d888f99baffc10db1d9bf6a2beb66c842d81dea90352ddded22cbbf8\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://832415134684f5413f9d0f3f5536aa30848690cfe54769f7730a3807438f3bf9\",\"dweb:/ipfs/QmduTiUdtsnyJVMXpdomohEWDVg46aZhnS9uTURu4x1NYt\"]},\"contracts/prebuilts/interface/ILoyaltyPoints.sol\":{\"keccak256\":\"0xb6496ef2bd4228f05b3af9479011c467e1942d7621fe0d6cae6afc20c9d32f94\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4afa2a9db584234c9e085e74afaea62e1cc8373d0f00a9658fd53a67ecf717d8\",\"dweb:/ipfs/QmXnByJbn2MGhccVnUgbtaUky7SnkMmgt3183fJuXFRWHa\"]},\"contracts/prebuilts/unaudited/loyalty/LoyaltyPoints.sol\":{\"keccak256\":\"0x3cb9da9650953f82ad9b8634467933029bb85b33e796e52235a69942bb1fa62a\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c675cce01282711f7bfcf8ecb03fab4f30a705f69293f30447fd5a791a219453\",\"dweb:/ipfs/QmSjTRbiDMfzgC2mcy4J5AHWWUzjLVmDi6twAPkQPCqPC1\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x8cc03c5ac17e8a7396e487cda41fc1f1dfdb91db7d528e6da84bee3b6dd7e167\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://607818f1b44548c2d8268176f73cdb290e1faed971b1061930d92698366e2a11\",\"dweb:/ipfs/QmQibMe3r5no95b6q7isGT5R75V8xSofWEDLXzp95b7LgZ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x7c7ac0bc6c340a7f320524b9a4b4b079ee9da3c51258080d4bab237f329a427c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e7000057dd28a5fd92e5687c2ee6044181531bab0fcb0e5003cbe33ae024d06d\",\"dweb:/ipfs/QmZYhnjEQxVqVcLMJMS7VbhuMSCNM4YCgom1wg5borSp18\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xea5339a7fff0ed42b45be56a88efdd0b2ddde9fa480dc99fef9a6a4c5b776863\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://841619682637df5579b4c396d281d6c55b26f1b1acce1d0ab67bead5e39cf60c\",\"dweb:/ipfs/QmNRtuKp43ZHJwswdyT3GivY4fDMvz3cxBe1FfDthG1JGj\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/ECDSAUpgradeable.sol\":{\"keccak256\":\"0xbf5daf926894541a40a64b43c3746aa1940c5a1b3b8d14a06465eea72a9b90cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fbdea6be4e36fc5406e81560d8f3f073a61c5d3cb5889b7c896ff5981e2128eb\",\"dweb:/ipfs/QmPpkPNkLEjDf4RZYjiypj9BrNyaXrb2U4pE9aq7sTG9km\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/draft-EIP712Upgradeable.sol\":{\"keccak256\":\"0xaf5a96100f421d61693605349511e43221d3c2e47d4b3efa87af2b936e2567fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://371fd95bad4416766089d3e621dee1fd86fece2b266ad3f9443fefe567e24e94\",\"dweb:/ipfs/QmNciwwtGev3Q8uVhnoE5PQUSCDpMp6KtVjiDgnGdqLmWX\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.12+commit.f00d7308"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "prevURI",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "newURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ContractURIUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "platformFeeRecipient",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "flatFee",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "FlatPlatformFeeUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "platformFeeRecipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "platformFeeBps",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PlatformFeeInfoUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "enum IPlatformFee.PlatformFeeType",
              "name": "feeType",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PlatformFeeTypeUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "PrimarySaleRecipientUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleAdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleGranted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleRevoked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "mintedTo",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "quantityMinted",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensMinted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "signer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "mintedTo",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "struct ISignatureMintERC20.MintRequest",
              "name": "mintRequest",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "primarySaleRecipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "quantity",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "uint128",
                  "name": "validityStartTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "validityEndTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensMintedWithSignature",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DEFAULT_ADMIN_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "cancel"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "contractURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getFlatPlatformFeeInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getPlatformFeeInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getPlatformFeeType",
          "outputs": [
            {
              "internalType": "enum IPlatformFee.PlatformFeeType",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleAdmin",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleMember",
          "outputs": [
            {
              "internalType": "address",
              "name": "member",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleMemberCount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "count",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getTotalMintedInLifetime",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRole",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRoleWithSwitch",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_defaultAdmin",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_symbol",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_contractURI",
              "type": "string"
            },
            {
              "internalType": "address[]",
              "name": "_trustedForwarders",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "_saleRecipient",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "_platformFeeBps",
              "type": "uint128"
            },
            {
              "internalType": "address",
              "name": "_platformFeeRecipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "forwarder",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isTrustedForwarder",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mintTo"
        },
        {
          "inputs": [
            {
              "internalType": "struct ISignatureMintERC20.MintRequest",
              "name": "_req",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "primarySaleRecipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "quantity",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "uint128",
                  "name": "validityStartTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "validityEndTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "_signature",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "mintWithSignature",
          "outputs": [
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "primarySaleRecipient",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceRole"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revoke"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeRole"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_uri",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setContractURI"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_platformFeeRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_flatFee",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setFlatPlatformFeeInfo"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_platformFeeRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_platformFeeBps",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPlatformFeeInfo"
        },
        {
          "inputs": [
            {
              "internalType": "enum IPlatformFee.PlatformFeeType",
              "name": "_feeType",
              "type": "uint8"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPlatformFeeType"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_saleRecipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPrimarySaleRecipient"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct ISignatureMintERC20.MintRequest",
              "name": "_req",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "primarySaleRecipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "quantity",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "uint128",
                  "name": "validityStartTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "validityEndTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "_signature",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "verify",
          "outputs": [
            {
              "internalType": "bool",
              "name": "success",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
          },
          "getFlatPlatformFeeInfo()": {
            "details": "Returns the platform fee bps and recipient."
          },
          "getPlatformFeeInfo()": {
            "details": "Returns the platform fee recipient and bps."
          },
          "getPlatformFeeType()": {
            "details": "Returns the platform fee bps and recipient."
          },
          "getRoleAdmin(bytes32)": {
            "details": "See {grantRole} and {revokeRole}.                  To change a role's admin, use {_setRoleAdmin}.",
            "params": {
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "getRoleMember(bytes32,uint256)": {
            "details": "Returns `member` who has `role`, at `index` of role-members list.                  See struct {RoleMembers}, and mapping {roleMembers}",
            "params": {
              "index": "Index in list of current members for the role.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            },
            "returns": {
              "member": " Address of account that has `role`"
            }
          },
          "getRoleMemberCount(bytes32)": {
            "details": "Returns `count` of accounts that have `role`.                  See struct {RoleMembers}, and mapping {roleMembers}",
            "params": {
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            },
            "returns": {
              "count": "  Total number of accounts that have `role`"
            }
          },
          "grantRole(bytes32,address)": {
            "details": "Caller must have admin role for the `role`.                  Emits {RoleGranted Event}.",
            "params": {
              "account": "Address of the account to which the role is being granted.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "hasRole(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`.",
            "params": {
              "account": "Address of the account for which the role is being checked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "hasRoleWithSwitch(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`.                  Role restrictions can be swtiched on and off:                      - If address(0) has ROLE, then the ROLE restrictions                        don't apply.                      - If address(0) does not have ROLE, then the ROLE                        restrictions will apply.",
            "params": {
              "account": "Address of the account for which the role is being checked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
          },
          "initialize(address,string,string,string,address[],address,uint128,address)": {
            "details": "Initializes the contract, like a constructor."
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "primarySaleRecipient()": {
            "details": "Returns primary sale recipient address."
          },
          "renounceRole(bytes32,address)": {
            "details": "Caller must have the `role`, with caller being the same as `account`.                  Emits {RoleRevoked Event}.",
            "params": {
              "account": "Address of the account from which the role is being revoked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "revokeRole(bytes32,address)": {
            "details": "Caller must have admin role for the `role`.                  Emits {RoleRevoked Event}.",
            "params": {
              "account": "Address of the account from which the role is being revoked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "setContractURI(string)": {
            "details": "Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.",
            "params": {
              "_uri": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "setPlatformFeeInfo(address,uint256)": {
            "details": "Caller should be authorized to set platform fee info.                  See {_canSetPlatformFeeInfo}.                  Emits {PlatformFeeInfoUpdated Event}; See {_setupPlatformFeeInfo}.",
            "params": {
              "_platformFeeBps": "Updated platformFeeBps.",
              "_platformFeeRecipient": "Address to be set as new platformFeeRecipient."
            }
          },
          "setPrimarySaleRecipient(address)": {
            "details": "Caller should be authorized to set primary sales info.                  See {_canSetPrimarySaleRecipient}.                  Emits {PrimarySaleRecipientUpdated Event}; See {_setupPrimarySaleRecipient}.",
            "params": {
              "_saleRecipient": "Address to be set as new recipient of primary sales."
            }
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
          },
          "verify((address,address,uint256,uint256,address,uint128,uint128,bytes32),bytes)": {
            "details": "Verifies that a mint request is signed by an account holding MINTER_ROLE (at the time of the function call)."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "cancel(address,uint256)": {
            "notice": "Burns `amount` of tokens. See {ERC20-_burn}."
          },
          "contractURI()": {
            "notice": "Returns the contract metadata URI."
          },
          "getRoleAdmin(bytes32)": {
            "notice": "Returns the admin role that controls the specified role."
          },
          "getRoleMember(bytes32,uint256)": {
            "notice": "Returns the role-member from a list of members for a role,                  at a given index."
          },
          "getRoleMemberCount(bytes32)": {
            "notice": "Returns total number of accounts that have a role."
          },
          "getTotalMintedInLifetime(address)": {
            "notice": "Returns the total tokens minted to `owner` in the contract's lifetime."
          },
          "grantRole(bytes32,address)": {
            "notice": "Grants a role to an account, if not previously granted."
          },
          "hasRole(bytes32,address)": {
            "notice": "Checks whether an account has a particular role."
          },
          "hasRoleWithSwitch(bytes32,address)": {
            "notice": "Checks whether an account has a particular role;                  role restrictions can be swtiched on and off."
          },
          "mintTo(address,uint256)": {
            "notice": "Mints `amount` of tokens to the recipient `to`."
          },
          "mintWithSignature((address,address,uint256,uint256,address,uint128,uint128,bytes32),bytes)": {
            "notice": "Mints tokens to a recipient using a signature from an authorized party."
          },
          "renounceRole(bytes32,address)": {
            "notice": "Revokes role from the account."
          },
          "revoke(address,uint256)": {
            "notice": "Burns `amount` of tokens from `owner`'s balance (without requiring approval from owner). See {ERC20-_burn}."
          },
          "revokeRole(bytes32,address)": {
            "notice": "Revokes role from an account."
          },
          "setContractURI(string)": {
            "notice": "Lets a contract admin set the URI for contract-level metadata."
          },
          "setFlatPlatformFeeInfo(address,uint256)": {
            "notice": "Lets a module admin set a flat fee on primary sales."
          },
          "setPlatformFeeInfo(address,uint256)": {
            "notice": "Updates the platform fee recipient and bps."
          },
          "setPlatformFeeType(uint8)": {
            "notice": "Lets a module admin set platform fee type."
          },
          "setPrimarySaleRecipient(address)": {
            "notice": "Updates primary sale recipient."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=lib/chainlink/",
        "@ds-test/=lib/ds-test/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@std/=lib/forge-std/src/",
        "@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/",
        "ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/",
        "ERC721A/=lib/ERC721A/contracts/",
        "chainlink/=lib/chainlink/",
        "contracts/=contracts/",
        "ds-test/=lib/ds-test/src/",
        "dynamic-contracts/=lib/dynamic-contracts/src/",
        "erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/",
        "erc721a-upgradeable/=lib/ERC721A-Upgradeable/",
        "erc721a/=lib/ERC721A/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/prebuilts/unaudited/loyalty/LoyaltyPoints.sol": "LoyaltyPoints"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/eip/interface/IERC20.sol": {
        "keccak256": "0x5bdd9dd97ba7d9d7c9a2953db287e4d9d7fa93a27a96bc2e72a8da4919b6f7ff",
        "urls": [
          "bzz-raw://45527c265ee5de6bbb3ecfc052e7b1175531a82c2ac16172020aee855f7dd592",
          "dweb:/ipfs/QmVZthqbG916qUQSwv1LE8bB58ZGQ1VfQbLbbRV5urfEYA"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/ContractMetadata.sol": {
        "keccak256": "0xf53ab08ec3057056872c15e35a5610f7a43426bd2829786aed006d527177adfe",
        "urls": [
          "bzz-raw://ee132ae5efdd372152febfcd8fd3a7cb82c7019367d92c886f5096003a79f392",
          "dweb:/ipfs/QmRW1cGWmZAu57huZpTUwsWB8AxUFrBp6g4NqozXpbWsR6"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Permissions.sol": {
        "keccak256": "0xe7e18181f2d2c8bae4afc7ee69ce1d547e7aa583182e8e0853ca33c49a28c04d",
        "urls": [
          "bzz-raw://75d5f5a9356c290e398a5dd05914b59c3d09e6fedde2da80b6f1012aedf323f8",
          "dweb:/ipfs/QmNrrf8Uyq33XBsE2NqVTW6HVX3XixFTjCG8KGbGxdEE84"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/PermissionsEnumerable.sol": {
        "keccak256": "0x434a6ffc16ddc437ffb37b8fbe4c9696385252f15a617c4606b8c5e10561caf3",
        "urls": [
          "bzz-raw://1a9d4dac4bf2ae3c3c086af1956dc25e8b149b0914125e660cc0648791c247cb",
          "dweb:/ipfs/QmTMEggPdBea1JCamsShwRf3en2FgVTXNTPJ2isFtBk4Kk"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/PlatformFee.sol": {
        "keccak256": "0x8db4537648987b88dce356120fc96c48cffe53eaa5988b9a7e8aa023f4258163",
        "urls": [
          "bzz-raw://9e30009e63be23e60e92bf25582143596e3f01b2a1f7e121664559119a9f5890",
          "dweb:/ipfs/Qma3bi4NfCNZaukacNQMQ3j5kXn6Ym4mDa57Tqc26ssahE"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/PrimarySale.sol": {
        "keccak256": "0x9ef1ad82fadf988a07f4034b92ccdb3281682693e41759a79042814d36095f42",
        "urls": [
          "bzz-raw://0d962b48453e1f50b808193135c2f14265324fa8b75fe3b405ef7836e38921f7",
          "dweb:/ipfs/QmZDLNsZQj9kNcb15nBuWRpPwDdDvJS2gtFwqEs2Lwxb1N"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/SignatureMintERC20Upgradeable.sol": {
        "keccak256": "0x314429da21f4f15ef3f2c510dffb08884fcd602e3e53c70dd51aa6e231ad6838",
        "urls": [
          "bzz-raw://6098efdc3794ac758f7f073d8890a9d297ba79f55110f79e0ad378168576d893",
          "dweb:/ipfs/QmZcpL65TpuWtGoW7J9a2M5Rmv2mgDhTi1dh1YbURvPvfZ"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IContractMetadata.sol": {
        "keccak256": "0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2",
        "urls": [
          "bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a",
          "dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPermissions.sol": {
        "keccak256": "0xc0cd1f87bac474a06f85e2b341b9b57662aee957fc24180d42c872481c2f2ae3",
        "urls": [
          "bzz-raw://7dec3eed451d63867531d693f0be3279fa2c9aef3130f0826c3520c06820fa5d",
          "dweb:/ipfs/QmTYANrcPdd9SCe99DWsKJ19evNRQKQGZeoS1Keew4M2cS"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPermissionsEnumerable.sol": {
        "keccak256": "0x2e742c18a4481bad41d56424cd16c52def2fb415f69e5fb5f67d8d979300ff95",
        "urls": [
          "bzz-raw://d9be33bb865e3e82aca540a3e38cbc2bf2e431f9d1bf39c50d6c757e7b7bf3ee",
          "dweb:/ipfs/Qmdad1Xqj5SQ44Bk4bwD2uA36XnGHtqnVYSomKZQvnUBVG"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPlatformFee.sol": {
        "keccak256": "0x8c23c2a223a3b94ccce125b418e5fabfb631695d927e336512bc8dca61bbc736",
        "urls": [
          "bzz-raw://86dd8c93e75cb3a44d64c873154ee3857b604d1b07a9e52c120870172c2e9a34",
          "dweb:/ipfs/QmWXxEi7ygoRjN8yWYfVGbfhuwVg8bkLoHNzr3xMNa1VRv"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPrimarySale.sol": {
        "keccak256": "0x77c89cb8d9b781b0a08b1fa81c95a0dd5c19200b2fb0dc884c1084b931624004",
        "urls": [
          "bzz-raw://a37b042af11a08ba5518dadf72c91745d1b5f42b1c20ea5282492bfd18f53869",
          "dweb:/ipfs/QmWEYYG5VqR8MRfr2rydDV98GLKmaJtCC8G1W7MzJ9qFnF"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/ISignatureMintERC20.sol": {
        "keccak256": "0x07856a6a9e84482c0bb0ad79439bcdddaf22ad51ce1233a48cfff98020d3cf15",
        "urls": [
          "bzz-raw://5f8159aafb6eaf9a8207370189408eebce0d0cc590c1109857d7a3fe19a944c5",
          "dweb:/ipfs/QmTaL6qR7CtTwzfLYGX5fLNuaRJ643moCqhL1xdn4yGgEP"
        ],
        "license": "Apache-2.0"
      },
      "contracts/external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol": {
        "keccak256": "0xdbc96b1264d2e2bd82cb7e697056929325e09d1641321145a8cec53b22b9567d",
        "urls": [
          "bzz-raw://7ca7ccf947d21d98878ec18e941b750cd2ae7c563e6d2a707da4f806038d67c8",
          "dweb:/ipfs/QmYVLYUPMD3b95vKrS5yjxcz2MDNNzkWJY9xc9bc9oTZdh"
        ],
        "license": "MIT"
      },
      "contracts/external-deps/openzeppelin/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xa6149938a7c7c8af4244743aeaafcfb1fd9ce15ad45de58fa9576f0ed5599b2c",
        "urls": [
          "bzz-raw://839aa4ea6ef6d1972881bfd7420a9ddcd2f37139e3f0bf25310f93f48410702d",
          "dweb:/ipfs/QmSH65kStfbgMbfjFdfJqV412omPy6nB1JMvMt9q7SsytW"
        ],
        "license": "MIT"
      },
      "contracts/infra/interface/IWETH.sol": {
        "keccak256": "0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b",
        "urls": [
          "bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1",
          "dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/CurrencyTransferLib.sol": {
        "keccak256": "0x4a30bc9a8cd6cc8b855621fb1a651e2c3a1639b0ad153f1139c3ba463605672d",
        "urls": [
          "bzz-raw://417cc64ec6393f3cc89981ca9c32bbcc444a5f91363d69f84dd8ace888b2b859",
          "dweb:/ipfs/QmZeaQsYGx4VNoP8e1fcwC87PwvyakheWYeuwEwhFSJnvB"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/TWAddress.sol": {
        "keccak256": "0x460f032cf3bf43d586e126ab2ec8be4335767f497ccb699741546a1cfba94a7e",
        "urls": [
          "bzz-raw://28fcbf6dde6c2eeb9864f6ec6f21dcc81ec426877debf4b912f2f3bc5b0fc91e",
          "dweb:/ipfs/QmS1SHrZDfefX8EE7DdvszTY6VPCHydf4HM7NKJ2gP72e6"
        ],
        "license": "Apache 2.0"
      },
      "contracts/lib/TWStrings.sol": {
        "keccak256": "0xef7e9954d888f99baffc10db1d9bf6a2beb66c842d81dea90352ddded22cbbf8",
        "urls": [
          "bzz-raw://832415134684f5413f9d0f3f5536aa30848690cfe54769f7730a3807438f3bf9",
          "dweb:/ipfs/QmduTiUdtsnyJVMXpdomohEWDVg46aZhnS9uTURu4x1NYt"
        ],
        "license": "Apache 2.0"
      },
      "contracts/prebuilts/interface/ILoyaltyPoints.sol": {
        "keccak256": "0xb6496ef2bd4228f05b3af9479011c467e1942d7621fe0d6cae6afc20c9d32f94",
        "urls": [
          "bzz-raw://4afa2a9db584234c9e085e74afaea62e1cc8373d0f00a9658fd53a67ecf717d8",
          "dweb:/ipfs/QmXnByJbn2MGhccVnUgbtaUky7SnkMmgt3183fJuXFRWHa"
        ],
        "license": "Apache-2.0"
      },
      "contracts/prebuilts/unaudited/loyalty/LoyaltyPoints.sol": {
        "keccak256": "0x3cb9da9650953f82ad9b8634467933029bb85b33e796e52235a69942bb1fa62a",
        "urls": [
          "bzz-raw://c675cce01282711f7bfcf8ecb03fab4f30a705f69293f30447fd5a791a219453",
          "dweb:/ipfs/QmSjTRbiDMfzgC2mcy4J5AHWWUzjLVmDi6twAPkQPCqPC1"
        ],
        "license": "Apache-2.0"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e",
        "urls": [
          "bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497",
          "dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol": {
        "keccak256": "0x8cc03c5ac17e8a7396e487cda41fc1f1dfdb91db7d528e6da84bee3b6dd7e167",
        "urls": [
          "bzz-raw://607818f1b44548c2d8268176f73cdb290e1faed971b1061930d92698366e2a11",
          "dweb:/ipfs/QmQibMe3r5no95b6q7isGT5R75V8xSofWEDLXzp95b7LgZ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol": {
        "keccak256": "0x7c7ac0bc6c340a7f320524b9a4b4b079ee9da3c51258080d4bab237f329a427c",
        "urls": [
          "bzz-raw://e7000057dd28a5fd92e5687c2ee6044181531bab0fcb0e5003cbe33ae024d06d",
          "dweb:/ipfs/QmZYhnjEQxVqVcLMJMS7VbhuMSCNM4YCgom1wg5borSp18"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol": {
        "keccak256": "0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff",
        "urls": [
          "bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2",
          "dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/IERC20MetadataUpgradeable.sol": {
        "keccak256": "0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb",
        "urls": [
          "bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d",
          "dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3",
        "urls": [
          "bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4",
          "dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol": {
        "keccak256": "0xea5339a7fff0ed42b45be56a88efdd0b2ddde9fa480dc99fef9a6a4c5b776863",
        "urls": [
          "bzz-raw://841619682637df5579b4c396d281d6c55b26f1b1acce1d0ab67bead5e39cf60c",
          "dweb:/ipfs/QmNRtuKp43ZHJwswdyT3GivY4fDMvz3cxBe1FfDthG1JGj"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/ECDSAUpgradeable.sol": {
        "keccak256": "0xbf5daf926894541a40a64b43c3746aa1940c5a1b3b8d14a06465eea72a9b90cc",
        "urls": [
          "bzz-raw://fbdea6be4e36fc5406e81560d8f3f073a61c5d3cb5889b7c896ff5981e2128eb",
          "dweb:/ipfs/QmPpkPNkLEjDf4RZYjiypj9BrNyaXrb2U4pE9aq7sTG9km"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/draft-EIP712Upgradeable.sol": {
        "keccak256": "0xaf5a96100f421d61693605349511e43221d3c2e47d4b3efa87af2b936e2567fc",
        "urls": [
          "bzz-raw://371fd95bad4416766089d3e621dee1fd86fece2b266ad3f9443fefe567e24e94",
          "dweb:/ipfs/QmNciwwtGev3Q8uVhnoE5PQUSCDpMp6KtVjiDgnGdqLmWX"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/prebuilts/unaudited/loyalty/LoyaltyPoints.sol",
    "id": 100447,
    "exportedSymbols": {
      "AddressUpgradeable": [
        155768
      ],
      "ContextUpgradeable": [
        156044
      ],
      "ContractMetadata": [
        17526
      ],
      "CurrencyTransferLib": [
        63578
      ],
      "ECDSAUpgradeable": [
        157055
      ],
      "EIP712Upgradeable": [
        157205
      ],
      "ERC20Upgradeable": [
        152704
      ],
      "ERC2771ContextUpgradeable": [
        45607
      ],
      "IContractMetadata": [
        32437
      ],
      "IERC20": [
        13899
      ],
      "IERC20MetadataUpgradeable": [
        153528
      ],
      "IERC20Upgradeable": [
        152782
      ],
      "ILoyaltyPoints": [
        75255
      ],
      "IPermissions": [
        33256
      ],
      "IPermissionsEnumerable": [
        33281
      ],
      "IPlatformFee": [
        33324
      ],
      "IPrimarySale": [
        33345
      ],
      "ISignatureMintERC20": [
        33840
      ],
      "IWETH": [
        54557
      ],
      "Initializable": [
        150199
      ],
      "LoyaltyPoints": [
        100446
      ],
      "Permissions": [
        21500
      ],
      "PermissionsEnumerable": [
        21799
      ],
      "PlatformFee": [
        22005
      ],
      "PrimarySale": [
        22067
      ],
      "ReentrancyGuardUpgradeable": [
        150385
      ],
      "SafeERC20": [
        48369
      ],
      "SignatureMintERC20Upgradeable": [
        23721
      ],
      "StringsUpgradeable": [
        156453
      ],
      "TWAddress": [
        64152
      ],
      "TWStrings": [
        64852
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:9750:387",
    "nodes": [
      {
        "id": 99861,
        "nodeType": "PragmaDirective",
        "src": "39:24:387",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".11"
        ]
      },
      {
        "id": 99862,
        "nodeType": "ImportDirective",
        "src": "740:44:387",
        "nodes": [],
        "absolutePath": "contracts/prebuilts/interface/ILoyaltyPoints.sol",
        "file": "../../interface/ILoyaltyPoints.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 100447,
        "sourceUnit": 75256,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 99863,
        "nodeType": "ImportDirective",
        "src": "794:78:387",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 100447,
        "sourceUnit": 152705,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 99864,
        "nodeType": "ImportDirective",
        "src": "881:46:387",
        "nodes": [],
        "absolutePath": "contracts/lib/CurrencyTransferLib.sol",
        "file": "../../../lib/CurrencyTransferLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 100447,
        "sourceUnit": 63579,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 99865,
        "nodeType": "ImportDirective",
        "src": "943:62:387",
        "nodes": [],
        "absolutePath": "contracts/extension/SignatureMintERC20Upgradeable.sol",
        "file": "../../../extension/SignatureMintERC20Upgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 100447,
        "sourceUnit": 23722,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 99866,
        "nodeType": "ImportDirective",
        "src": "1006:49:387",
        "nodes": [],
        "absolutePath": "contracts/extension/ContractMetadata.sol",
        "file": "../../../extension/ContractMetadata.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 100447,
        "sourceUnit": 17527,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 99867,
        "nodeType": "ImportDirective",
        "src": "1056:44:387",
        "nodes": [],
        "absolutePath": "contracts/extension/PrimarySale.sol",
        "file": "../../../extension/PrimarySale.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 100447,
        "sourceUnit": 22068,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 99868,
        "nodeType": "ImportDirective",
        "src": "1101:44:387",
        "nodes": [],
        "absolutePath": "contracts/extension/PlatformFee.sol",
        "file": "../../../extension/PlatformFee.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 100447,
        "sourceUnit": 22006,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 99869,
        "nodeType": "ImportDirective",
        "src": "1146:54:387",
        "nodes": [],
        "absolutePath": "contracts/extension/PermissionsEnumerable.sol",
        "file": "../../../extension/PermissionsEnumerable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 100447,
        "sourceUnit": 21800,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 99870,
        "nodeType": "ImportDirective",
        "src": "1201:82:387",
        "nodes": [],
        "absolutePath": "contracts/external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol",
        "file": "../../../external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 100447,
        "sourceUnit": 45608,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 99871,
        "nodeType": "ImportDirective",
        "src": "1284:85:387",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 100447,
        "sourceUnit": 150386,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 100446,
        "nodeType": "ContractDefinition",
        "src": "1754:8034:387",
        "nodes": [
          {
            "id": 99896,
            "nodeType": "VariableDeclaration",
            "src": "2310:67:387",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 99891,
              "nodeType": "StructuredDocumentation",
              "src": "2196:109:387",
              "text": "@dev Only TRANSFER_ROLE holders can have tokens transferred from or to them, during restricted transfers."
            },
            "mutability": "constant",
            "name": "TRANSFER_ROLE",
            "nameLocation": "2335:13:387",
            "scope": 100446,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 99892,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2310:7:387",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "5452414e534645525f524f4c45",
                  "id": 99894,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2361:15:387",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c",
                    "typeString": "literal_string \"TRANSFER_ROLE\""
                  },
                  "value": "TRANSFER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c",
                    "typeString": "literal_string \"TRANSFER_ROLE\""
                  }
                ],
                "id": 99893,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "2351:9:387",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 99895,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2351:26:387",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "id": 99902,
            "nodeType": "VariableDeclaration",
            "src": "2453:63:387",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 99897,
              "nodeType": "StructuredDocumentation",
              "src": "2383:65:387",
              "text": "@dev Only MINTER_ROLE holders can sign off on `MintRequest`s."
            },
            "mutability": "constant",
            "name": "MINTER_ROLE",
            "nameLocation": "2478:11:387",
            "scope": 100446,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 99898,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2453:7:387",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "4d494e5445525f524f4c45",
                  "id": 99900,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2502:13:387",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                    "typeString": "literal_string \"MINTER_ROLE\""
                  },
                  "value": "MINTER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                    "typeString": "literal_string \"MINTER_ROLE\""
                  }
                ],
                "id": 99899,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "2492:9:387",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 99901,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2492:24:387",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "id": 99908,
            "nodeType": "VariableDeclaration",
            "src": "2587:63:387",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 99903,
              "nodeType": "StructuredDocumentation",
              "src": "2522:60:387",
              "text": "@dev Only REVOKE_ROLE holders can revoke a loyalty card."
            },
            "mutability": "constant",
            "name": "REVOKE_ROLE",
            "nameLocation": "2612:11:387",
            "scope": 100446,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 99904,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2587:7:387",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "5245564f4b455f524f4c45",
                  "id": 99906,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2636:13:387",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_5297e68f3a27f04914f2c6db0ad63b5e5c8173cebcc1a5341df045cf6dad7adc",
                    "typeString": "literal_string \"REVOKE_ROLE\""
                  },
                  "value": "REVOKE_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_5297e68f3a27f04914f2c6db0ad63b5e5c8173cebcc1a5341df045cf6dad7adc",
                    "typeString": "literal_string \"REVOKE_ROLE\""
                  }
                ],
                "id": 99905,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "2626:9:387",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 99907,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2626:24:387",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "id": 99912,
            "nodeType": "VariableDeclaration",
            "src": "2702:41:387",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 99909,
              "nodeType": "StructuredDocumentation",
              "src": "2657:40:387",
              "text": "@dev Max bps in the thirdweb system."
            },
            "mutability": "constant",
            "name": "MAX_BPS",
            "nameLocation": "2727:7:387",
            "scope": 100446,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 99910,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2702:7:387",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31305f303030",
              "id": 99911,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2737:6:387",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000_by_1",
                "typeString": "int_const 10000"
              },
              "value": "10_000"
            },
            "visibility": "private"
          },
          {
            "id": 99917,
            "nodeType": "VariableDeclaration",
            "src": "2847:55:387",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 99913,
              "nodeType": "StructuredDocumentation",
              "src": "2750:92:387",
              "text": "@dev Mapping from token owner => total tokens minted to them in the contract's lifetime."
            },
            "mutability": "mutable",
            "name": "_mintedToInLifetime",
            "nameLocation": "2883:19:387",
            "scope": 100446,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 99916,
              "keyType": {
                "id": 99914,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2855:7:387",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2847:27:387",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 99915,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2866:7:387",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "id": 99923,
            "nodeType": "FunctionDefinition",
            "src": "3099:28:387",
            "nodes": [],
            "body": {
              "id": 99922,
              "nodeType": "Block",
              "src": "3125:2:387",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "id": 99920,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 99919,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 150119,
                  "src": "3113:11:387"
                },
                "nodeType": "ModifierInvocation",
                "src": "3113:11:387"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 99918,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3110:2:387"
            },
            "returnParameters": {
              "id": 99921,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3125:0:387"
            },
            "scope": 100446,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 100001,
            "nodeType": "FunctionDefinition",
            "src": "3192:998:387",
            "nodes": [],
            "body": {
              "id": 100000,
              "nodeType": "Block",
              "src": "3515:675:387",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 99947,
                        "name": "_trustedForwarders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99935,
                        "src": "3622:18:387",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      ],
                      "id": 99946,
                      "name": "__ERC2771Context_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45514,
                      "src": "3600:21:387",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address[] memory)"
                      }
                    },
                    "id": 99948,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3600:41:387",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99949,
                  "nodeType": "ExpressionStatement",
                  "src": "3600:41:387"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 99951,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99928,
                        "src": "3674:5:387",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 99952,
                        "name": "_symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99930,
                        "src": "3681:7:387",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 99950,
                      "name": "__ERC20_init_unchained",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 152158,
                      "src": "3651:22:387",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 99953,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3651:38:387",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99954,
                  "nodeType": "ExpressionStatement",
                  "src": "3651:38:387"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 99956,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99928,
                        "src": "3725:5:387",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 99955,
                      "name": "__SignatureMintERC20_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23546,
                      "src": "3699:25:387",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 99957,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3699:32:387",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99958,
                  "nodeType": "ExpressionStatement",
                  "src": "3699:32:387"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 99959,
                      "name": "__ReentrancyGuard_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 150349,
                      "src": "3741:22:387",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 99960,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3741:24:387",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99961,
                  "nodeType": "ExpressionStatement",
                  "src": "3741:24:387"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 99963,
                        "name": "_contractURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99932,
                        "src": "3794:12:387",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 99962,
                      "name": "_setupContractURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17519,
                      "src": "3776:17:387",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 99964,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3776:31:387",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99965,
                  "nodeType": "ExpressionStatement",
                  "src": "3776:31:387"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 99967,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21176,
                        "src": "3829:18:387",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 99968,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99926,
                        "src": "3849:13:387",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 99966,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        21723
                      ],
                      "referencedDeclaration": 21723,
                      "src": "3818:10:387",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 99969,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3818:45:387",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99970,
                  "nodeType": "ExpressionStatement",
                  "src": "3818:45:387"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 99972,
                        "name": "MINTER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99902,
                        "src": "3884:11:387",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 99973,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99926,
                        "src": "3897:13:387",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 99971,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        21723
                      ],
                      "referencedDeclaration": 21723,
                      "src": "3873:10:387",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 99974,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3873:38:387",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99975,
                  "nodeType": "ExpressionStatement",
                  "src": "3873:38:387"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 99977,
                        "name": "TRANSFER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99896,
                        "src": "3932:13:387",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 99978,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99926,
                        "src": "3947:13:387",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 99976,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        21723
                      ],
                      "referencedDeclaration": 21723,
                      "src": "3921:10:387",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 99979,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3921:40:387",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99980,
                  "nodeType": "ExpressionStatement",
                  "src": "3921:40:387"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 99982,
                        "name": "REVOKE_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99908,
                        "src": "3983:11:387",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 99983,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99926,
                        "src": "3996:13:387",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 99981,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        21723
                      ],
                      "referencedDeclaration": 21723,
                      "src": "3972:10:387",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 99984,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3972:38:387",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99985,
                  "nodeType": "ExpressionStatement",
                  "src": "3972:38:387"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 99987,
                        "name": "REVOKE_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99908,
                        "src": "4034:11:387",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 99988,
                        "name": "REVOKE_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99908,
                        "src": "4047:11:387",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 99986,
                      "name": "_setRoleAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21360,
                      "src": "4020:13:387",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32,bytes32)"
                      }
                    },
                    "id": 99989,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4020:39:387",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99990,
                  "nodeType": "ExpressionStatement",
                  "src": "4020:39:387"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 99992,
                        "name": "_platformFeeRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99941,
                        "src": "4092:21:387",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 99993,
                        "name": "_platformFeeBps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99939,
                        "src": "4115:15:387",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 99991,
                      "name": "_setupPlatformFeeInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21916,
                      "src": "4070:21:387",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 99994,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4070:61:387",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99995,
                  "nodeType": "ExpressionStatement",
                  "src": "4070:61:387"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 99997,
                        "name": "_saleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99937,
                        "src": "4168:14:387",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 99996,
                      "name": "_setupPrimarySaleRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22060,
                      "src": "4141:26:387",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 99998,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4141:42:387",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99999,
                  "nodeType": "ExpressionStatement",
                  "src": "4141:42:387"
                }
              ]
            },
            "documentation": {
              "id": 99924,
              "nodeType": "StructuredDocumentation",
              "src": "3133:54:387",
              "text": "@dev Initializes the contract, like a constructor."
            },
            "functionSelector": "5f34ff38",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 99944,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 99943,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 150119,
                  "src": "3503:11:387"
                },
                "nodeType": "ModifierInvocation",
                "src": "3503:11:387"
              }
            ],
            "name": "initialize",
            "nameLocation": "3201:10:387",
            "parameters": {
              "id": 99942,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99926,
                  "mutability": "mutable",
                  "name": "_defaultAdmin",
                  "nameLocation": "3229:13:387",
                  "nodeType": "VariableDeclaration",
                  "scope": 100001,
                  "src": "3221:21:387",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 99925,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3221:7:387",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 99928,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "3266:5:387",
                  "nodeType": "VariableDeclaration",
                  "scope": 100001,
                  "src": "3252:19:387",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 99927,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3252:6:387",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 99930,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "3295:7:387",
                  "nodeType": "VariableDeclaration",
                  "scope": 100001,
                  "src": "3281:21:387",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 99929,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3281:6:387",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 99932,
                  "mutability": "mutable",
                  "name": "_contractURI",
                  "nameLocation": "3326:12:387",
                  "nodeType": "VariableDeclaration",
                  "scope": 100001,
                  "src": "3312:26:387",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 99931,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3312:6:387",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 99935,
                  "mutability": "mutable",
                  "name": "_trustedForwarders",
                  "nameLocation": "3365:18:387",
                  "nodeType": "VariableDeclaration",
                  "scope": 100001,
                  "src": "3348:35:387",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 99933,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3348:7:387",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 99934,
                    "nodeType": "ArrayTypeName",
                    "src": "3348:9:387",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 99937,
                  "mutability": "mutable",
                  "name": "_saleRecipient",
                  "nameLocation": "3401:14:387",
                  "nodeType": "VariableDeclaration",
                  "scope": 100001,
                  "src": "3393:22:387",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 99936,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3393:7:387",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 99939,
                  "mutability": "mutable",
                  "name": "_platformFeeBps",
                  "nameLocation": "3433:15:387",
                  "nodeType": "VariableDeclaration",
                  "scope": 100001,
                  "src": "3425:23:387",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 99938,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "3425:7:387",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 99941,
                  "mutability": "mutable",
                  "name": "_platformFeeRecipient",
                  "nameLocation": "3466:21:387",
                  "nodeType": "VariableDeclaration",
                  "scope": 100001,
                  "src": "3458:29:387",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 99940,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3458:7:387",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3211:282:387"
            },
            "returnParameters": {
              "id": 99945,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3515:0:387"
            },
            "scope": 100446,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 100014,
            "nodeType": "FunctionDefinition",
            "src": "4466:133:387",
            "nodes": [],
            "body": {
              "id": 100013,
              "nodeType": "Block",
              "src": "4548:51:387",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 100009,
                      "name": "_mintedToInLifetime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99917,
                      "src": "4565:19:387",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 100011,
                    "indexExpression": {
                      "id": 100010,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100004,
                      "src": "4585:6:387",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4565:27:387",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 100008,
                  "id": 100012,
                  "nodeType": "Return",
                  "src": "4558:34:387"
                }
              ]
            },
            "baseFunctions": [
              75230
            ],
            "documentation": {
              "id": 100002,
              "nodeType": "StructuredDocumentation",
              "src": "4379:82:387",
              "text": "@notice Returns the total tokens minted to `owner` in the contract's lifetime."
            },
            "functionSelector": "a1699dc8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTotalMintedInLifetime",
            "nameLocation": "4475:24:387",
            "parameters": {
              "id": 100005,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100004,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "4508:6:387",
                  "nodeType": "VariableDeclaration",
                  "scope": 100014,
                  "src": "4500:14:387",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 100003,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4500:7:387",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4499:16:387"
            },
            "returnParameters": {
              "id": 100008,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100007,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 100014,
                  "src": "4539:7:387",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 100006,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4539:7:387",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4538:9:387"
            },
            "scope": 100446,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 100061,
            "nodeType": "FunctionDefinition",
            "src": "4880:459:387",
            "nodes": [],
            "body": {
              "id": 100060,
              "nodeType": "Block",
              "src": "5052:287:387",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 100032,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 100027,
                      "name": "signer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100025,
                      "src": "5062:6:387",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 100029,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 100018,
                          "src": "5087:4:387",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$33805_calldata_ptr",
                            "typeString": "struct ISignatureMintERC20.MintRequest calldata"
                          }
                        },
                        {
                          "id": 100030,
                          "name": "_signature",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 100020,
                          "src": "5093:10:387",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_MintRequest_$33805_calldata_ptr",
                            "typeString": "struct ISignatureMintERC20.MintRequest calldata"
                          },
                          {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        ],
                        "id": 100028,
                        "name": "_processRequest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23666,
                        "src": "5071:15:387",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_MintRequest_$33805_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_address_$",
                          "typeString": "function (struct ISignatureMintERC20.MintRequest calldata,bytes calldata) returns (address)"
                        }
                      },
                      "id": 100031,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5071:33:387",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5062:42:387",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 100033,
                  "nodeType": "ExpressionStatement",
                  "src": "5062:42:387"
                },
                {
                  "assignments": [
                    100035
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 100035,
                      "mutability": "mutable",
                      "name": "receiver",
                      "nameLocation": "5122:8:387",
                      "nodeType": "VariableDeclaration",
                      "scope": 100060,
                      "src": "5114:16:387",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 100034,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5114:7:387",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 100038,
                  "initialValue": {
                    "expression": {
                      "id": 100036,
                      "name": "_req",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100018,
                      "src": "5133:4:387",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MintRequest_$33805_calldata_ptr",
                        "typeString": "struct ISignatureMintERC20.MintRequest calldata"
                      }
                    },
                    "id": 100037,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "to",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 33790,
                    "src": "5133:7:387",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5114:26:387"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 100040,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 100018,
                          "src": "5172:4:387",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$33805_calldata_ptr",
                            "typeString": "struct ISignatureMintERC20.MintRequest calldata"
                          }
                        },
                        "id": 100041,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "primarySaleRecipient",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 33792,
                        "src": "5172:25:387",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 100042,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 100018,
                          "src": "5199:4:387",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$33805_calldata_ptr",
                            "typeString": "struct ISignatureMintERC20.MintRequest calldata"
                          }
                        },
                        "id": 100043,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "currency",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 33798,
                        "src": "5199:13:387",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 100044,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 100018,
                          "src": "5214:4:387",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$33805_calldata_ptr",
                            "typeString": "struct ISignatureMintERC20.MintRequest calldata"
                          }
                        },
                        "id": 100045,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "price",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 33796,
                        "src": "5214:10:387",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 100039,
                      "name": "_collectPriceOnClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100291,
                      "src": "5151:20:387",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 100046,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5151:74:387",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100047,
                  "nodeType": "ExpressionStatement",
                  "src": "5151:74:387"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 100049,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100035,
                        "src": "5243:8:387",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 100050,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 100018,
                          "src": "5253:4:387",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$33805_calldata_ptr",
                            "typeString": "struct ISignatureMintERC20.MintRequest calldata"
                          }
                        },
                        "id": 100051,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "quantity",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 33794,
                        "src": "5253:13:387",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 100048,
                      "name": "_mintTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100150,
                      "src": "5235:7:387",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 100052,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5235:32:387",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100053,
                  "nodeType": "ExpressionStatement",
                  "src": "5235:32:387"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 100055,
                        "name": "signer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100025,
                        "src": "5309:6:387",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 100056,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100035,
                        "src": "5317:8:387",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 100057,
                        "name": "_req",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100018,
                        "src": "5327:4:387",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MintRequest_$33805_calldata_ptr",
                          "typeString": "struct ISignatureMintERC20.MintRequest calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_MintRequest_$33805_calldata_ptr",
                          "typeString": "struct ISignatureMintERC20.MintRequest calldata"
                        }
                      ],
                      "id": 100054,
                      "name": "TokensMintedWithSignature",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33815,
                      "src": "5283:25:387",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_struct$_MintRequest_$33805_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,struct ISignatureMintERC20.MintRequest memory)"
                      }
                    },
                    "id": 100058,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5283:49:387",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100059,
                  "nodeType": "EmitStatement",
                  "src": "5278:54:387"
                }
              ]
            },
            "baseFunctions": [
              33839
            ],
            "documentation": {
              "id": 100015,
              "nodeType": "StructuredDocumentation",
              "src": "4792:83:387",
              "text": "@notice Mints tokens to a recipient using a signature from an authorized party."
            },
            "functionSelector": "8f0fefbb",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 100023,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 100022,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 150379,
                  "src": "5002:12:387"
                },
                "nodeType": "ModifierInvocation",
                "src": "5002:12:387"
              }
            ],
            "name": "mintWithSignature",
            "nameLocation": "4889:17:387",
            "parameters": {
              "id": 100021,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100018,
                  "mutability": "mutable",
                  "name": "_req",
                  "nameLocation": "4928:4:387",
                  "nodeType": "VariableDeclaration",
                  "scope": 100061,
                  "src": "4907:25:387",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_MintRequest_$33805_calldata_ptr",
                    "typeString": "struct ISignatureMintERC20.MintRequest"
                  },
                  "typeName": {
                    "id": 100017,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 100016,
                      "name": "MintRequest",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 33805,
                      "src": "4907:11:387"
                    },
                    "referencedDeclaration": 33805,
                    "src": "4907:11:387",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MintRequest_$33805_storage_ptr",
                      "typeString": "struct ISignatureMintERC20.MintRequest"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 100020,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "4949:10:387",
                  "nodeType": "VariableDeclaration",
                  "scope": 100061,
                  "src": "4934:25:387",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 100019,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4934:5:387",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4906:54:387"
            },
            "returnParameters": {
              "id": 100026,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100025,
                  "mutability": "mutable",
                  "name": "signer",
                  "nameLocation": "5040:6:387",
                  "nodeType": "VariableDeclaration",
                  "scope": 100061,
                  "src": "5032:14:387",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 100024,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5032:7:387",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5031:16:387"
            },
            "scope": 100446,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 100084,
            "nodeType": "FunctionDefinition",
            "src": "5409:163:387",
            "nodes": [],
            "body": {
              "id": 100083,
              "nodeType": "Block",
              "src": "5468:104:387",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 100071,
                            "name": "MINTER_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99902,
                            "src": "5494:11:387",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 100072,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                100432
                              ],
                              "referencedDeclaration": 100432,
                              "src": "5507:10:387",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 100073,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5507:12:387",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 100070,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21207,
                          "src": "5486:7:387",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 100074,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5486:34:387",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f74206d696e7465722e",
                        "id": 100075,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5522:13:387",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ef3ba029e0c0ab4a73c06188e1050a612d65341c83aa83d5839a5156e5f7b497",
                          "typeString": "literal_string \"not minter.\""
                        },
                        "value": "not minter."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ef3ba029e0c0ab4a73c06188e1050a612d65341c83aa83d5839a5156e5f7b497",
                          "typeString": "literal_string \"not minter.\""
                        }
                      ],
                      "id": 100069,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5478:7:387",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 100076,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5478:58:387",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100077,
                  "nodeType": "ExpressionStatement",
                  "src": "5478:58:387"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 100079,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100064,
                        "src": "5554:2:387",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 100080,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100066,
                        "src": "5558:6:387",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 100078,
                      "name": "_mintTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100150,
                      "src": "5546:7:387",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 100081,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5546:19:387",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100082,
                  "nodeType": "ExpressionStatement",
                  "src": "5546:19:387"
                }
              ]
            },
            "baseFunctions": [
              75238
            ],
            "documentation": {
              "id": 100062,
              "nodeType": "StructuredDocumentation",
              "src": "5345:59:387",
              "text": "@notice Mints `amount` of tokens to the recipient `to`."
            },
            "functionSelector": "449a52f8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintTo",
            "nameLocation": "5418:6:387",
            "parameters": {
              "id": 100067,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100064,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "5433:2:387",
                  "nodeType": "VariableDeclaration",
                  "scope": 100084,
                  "src": "5425:10:387",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 100063,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5425:7:387",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 100066,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "5445:6:387",
                  "nodeType": "VariableDeclaration",
                  "scope": 100084,
                  "src": "5437:14:387",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 100065,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5437:7:387",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5424:28:387"
            },
            "returnParameters": {
              "id": 100068,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5468:0:387"
            },
            "scope": 100446,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 100114,
            "nodeType": "FunctionDefinition",
            "src": "5639:240:387",
            "nodes": [],
            "body": {
              "id": 100113,
              "nodeType": "Block",
              "src": "5705:174:387",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    100093
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 100093,
                      "mutability": "mutable",
                      "name": "caller",
                      "nameLocation": "5723:6:387",
                      "nodeType": "VariableDeclaration",
                      "scope": 100113,
                      "src": "5715:14:387",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 100092,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5715:7:387",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 100096,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 100094,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        100432
                      ],
                      "referencedDeclaration": 100432,
                      "src": "5732:10:387",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 100095,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5732:12:387",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5715:29:387"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 100099,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 100097,
                      "name": "caller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100093,
                      "src": "5758:6:387",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 100098,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100087,
                      "src": "5768:6:387",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5758:16:387",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 100107,
                  "nodeType": "IfStatement",
                  "src": "5754:87:387",
                  "trueBody": {
                    "id": 100106,
                    "nodeType": "Block",
                    "src": "5776:65:387",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 100101,
                              "name": "_owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 100087,
                              "src": "5806:6:387",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 100102,
                              "name": "caller",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 100093,
                              "src": "5814:6:387",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 100103,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 100089,
                              "src": "5822:7:387",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 100100,
                            "name": "_spendAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 152676,
                            "src": "5790:15:387",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 100104,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5790:40:387",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 100105,
                        "nodeType": "ExpressionStatement",
                        "src": "5790:40:387"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 100109,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100087,
                        "src": "5856:6:387",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 100110,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100089,
                        "src": "5864:7:387",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 100108,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 152588,
                      "src": "5850:5:387",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 100111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5850:22:387",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100112,
                  "nodeType": "ExpressionStatement",
                  "src": "5850:22:387"
                }
              ]
            },
            "baseFunctions": [
              75246
            ],
            "documentation": {
              "id": 100085,
              "nodeType": "StructuredDocumentation",
              "src": "5578:56:387",
              "text": "@notice Burns `amount` of tokens. See {ERC20-_burn}."
            },
            "functionSelector": "98590ef9",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "cancel",
            "nameLocation": "5648:6:387",
            "parameters": {
              "id": 100090,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100087,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "5663:6:387",
                  "nodeType": "VariableDeclaration",
                  "scope": 100114,
                  "src": "5655:14:387",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 100086,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5655:7:387",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 100089,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "5679:7:387",
                  "nodeType": "VariableDeclaration",
                  "scope": 100114,
                  "src": "5671:15:387",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 100088,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5671:7:387",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5654:33:387"
            },
            "returnParameters": {
              "id": 100091,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5705:0:387"
            },
            "scope": 100446,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 100131,
            "nodeType": "FunctionDefinition",
            "src": "6009:127:387",
            "nodes": [],
            "body": {
              "id": 100130,
              "nodeType": "Block",
              "src": "6097:39:387",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 100126,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100117,
                        "src": "6113:6:387",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 100127,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100119,
                        "src": "6121:7:387",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 100125,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 152588,
                      "src": "6107:5:387",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 100128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6107:22:387",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100129,
                  "nodeType": "ExpressionStatement",
                  "src": "6107:22:387"
                }
              ]
            },
            "baseFunctions": [
              75254
            ],
            "documentation": {
              "id": 100115,
              "nodeType": "StructuredDocumentation",
              "src": "5885:119:387",
              "text": "@notice Burns `amount` of tokens from `owner`'s balance (without requiring approval from owner). See {ERC20-_burn}."
            },
            "functionSelector": "eac449d9",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 100122,
                    "name": "REVOKE_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 99908,
                    "src": "6084:11:387",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 100123,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 100121,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21189,
                  "src": "6075:8:387"
                },
                "nodeType": "ModifierInvocation",
                "src": "6075:21:387"
              }
            ],
            "name": "revoke",
            "nameLocation": "6018:6:387",
            "parameters": {
              "id": 100120,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100117,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "6033:6:387",
                  "nodeType": "VariableDeclaration",
                  "scope": 100131,
                  "src": "6025:14:387",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 100116,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6025:7:387",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 100119,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "6049:7:387",
                  "nodeType": "VariableDeclaration",
                  "scope": 100131,
                  "src": "6041:15:387",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 100118,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6041:7:387",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6024:33:387"
            },
            "returnParameters": {
              "id": 100124,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6097:0:387"
            },
            "scope": 100446,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 100150,
            "nodeType": "FunctionDefinition",
            "src": "6375:133:387",
            "nodes": [],
            "body": {
              "id": 100149,
              "nodeType": "Block",
              "src": "6431:77:387",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 100140,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100134,
                        "src": "6447:3:387",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 100141,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100136,
                        "src": "6452:7:387",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 100139,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 152516,
                      "src": "6441:5:387",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 100142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6441:19:387",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100143,
                  "nodeType": "ExpressionStatement",
                  "src": "6441:19:387"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 100145,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100134,
                        "src": "6488:3:387",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 100146,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100136,
                        "src": "6493:7:387",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 100144,
                      "name": "TokensMinted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75222,
                      "src": "6475:12:387",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 100147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6475:26:387",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100148,
                  "nodeType": "EmitStatement",
                  "src": "6470:31:387"
                }
              ]
            },
            "documentation": {
              "id": 100132,
              "nodeType": "StructuredDocumentation",
              "src": "6329:41:387",
              "text": "@dev Mints `amount` of tokens to `to`"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mintTo",
            "nameLocation": "6384:7:387",
            "parameters": {
              "id": 100137,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100134,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "6400:3:387",
                  "nodeType": "VariableDeclaration",
                  "scope": 100150,
                  "src": "6392:11:387",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 100133,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6392:7:387",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 100136,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "6413:7:387",
                  "nodeType": "VariableDeclaration",
                  "scope": 100150,
                  "src": "6405:15:387",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 100135,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6405:7:387",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6391:30:387"
            },
            "returnParameters": {
              "id": 100138,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6431:0:387"
            },
            "scope": 100446,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 100291,
            "nodeType": "FunctionDefinition",
            "src": "6599:1264:387",
            "nodes": [],
            "body": {
              "id": 100290,
              "nodeType": "Block",
              "src": "6734:1129:387",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 100162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 100160,
                      "name": "_price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100157,
                      "src": "6748:6:387",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 100161,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6758:1:387",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6748:11:387",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 100173,
                  "nodeType": "IfStatement",
                  "src": "6744:95:387",
                  "trueBody": {
                    "id": 100172,
                    "nodeType": "Block",
                    "src": "6761:78:387",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 100167,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 100164,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "6783:3:387",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 100165,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "6783:9:387",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 100166,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6796:1:387",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "6783:14:387",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "2156616c7565",
                              "id": 100168,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6799:8:387",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_208006903b0d1b8c530b3b2de29e1f765aa4311b3f136f1a342e9de039eda1b1",
                                "typeString": "literal_string \"!Value\""
                              },
                              "value": "!Value"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_208006903b0d1b8c530b3b2de29e1f765aa4311b3f136f1a342e9de039eda1b1",
                                "typeString": "literal_string \"!Value\""
                              }
                            ],
                            "id": 100163,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6775:7:387",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 100169,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6775:33:387",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 100170,
                        "nodeType": "ExpressionStatement",
                        "src": "6775:33:387"
                      },
                      {
                        "functionReturnParameters": 100159,
                        "id": 100171,
                        "nodeType": "Return",
                        "src": "6822:7:387"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    100175
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 100175,
                      "mutability": "mutable",
                      "name": "validMsgValue",
                      "nameLocation": "6854:13:387",
                      "nodeType": "VariableDeclaration",
                      "scope": 100290,
                      "src": "6849:18:387",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 100174,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "6849:4:387",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 100176,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6849:18:387"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 100180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 100177,
                      "name": "_currency",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100155,
                      "src": "6881:9:387",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 100178,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63578,
                        "src": "6894:19:387",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$63578_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 100179,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "NATIVE_TOKEN",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63346,
                      "src": "6894:32:387",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6881:45:387",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 100196,
                    "nodeType": "Block",
                    "src": "6994:55:387",
                    "statements": [
                      {
                        "expression": {
                          "id": 100194,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 100189,
                            "name": "validMsgValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 100175,
                            "src": "7008:13:387",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 100193,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 100190,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "7024:3:387",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 100191,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "7024:9:387",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 100192,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7037:1:387",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "7024:14:387",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "7008:30:387",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 100195,
                        "nodeType": "ExpressionStatement",
                        "src": "7008:30:387"
                      }
                    ]
                  },
                  "id": 100197,
                  "nodeType": "IfStatement",
                  "src": "6877:172:387",
                  "trueBody": {
                    "id": 100188,
                    "nodeType": "Block",
                    "src": "6928:60:387",
                    "statements": [
                      {
                        "expression": {
                          "id": 100186,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 100181,
                            "name": "validMsgValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 100175,
                            "src": "6942:13:387",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 100185,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 100182,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6958:3:387",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 100183,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "6958:9:387",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 100184,
                              "name": "_price",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 100157,
                              "src": "6971:6:387",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "6958:19:387",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "6942:35:387",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 100187,
                        "nodeType": "ExpressionStatement",
                        "src": "6942:35:387"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 100199,
                        "name": "validMsgValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100175,
                        "src": "7066:13:387",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964206d73672076616c7565",
                        "id": 100200,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7081:19:387",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_de0d8376eff7771bcc57765656c140a92c651b9eeb4df686f809560770e7fe49",
                          "typeString": "literal_string \"Invalid msg value\""
                        },
                        "value": "Invalid msg value"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_de0d8376eff7771bcc57765656c140a92c651b9eeb4df686f809560770e7fe49",
                          "typeString": "literal_string \"Invalid msg value\""
                        }
                      ],
                      "id": 100198,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7058:7:387",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 100201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7058:43:387",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100202,
                  "nodeType": "ExpressionStatement",
                  "src": "7058:43:387"
                },
                {
                  "assignments": [
                    100204
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 100204,
                      "mutability": "mutable",
                      "name": "saleRecipient",
                      "nameLocation": "7120:13:387",
                      "nodeType": "VariableDeclaration",
                      "scope": 100290,
                      "src": "7112:21:387",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 100203,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7112:7:387",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 100215,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 100210,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 100205,
                        "name": "_primarySaleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100153,
                        "src": "7136:21:387",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 100208,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7169:1:387",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 100207,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7161:7:387",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 100206,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7161:7:387",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 100209,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7161:10:387",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "7136:35:387",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 100213,
                      "name": "_primarySaleRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100153,
                      "src": "7199:21:387",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 100214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "7136:84:387",
                    "trueExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 100211,
                        "name": "primarySaleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22024,
                        "src": "7174:20:387",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 100212,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7174:22:387",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7112:108:387"
                },
                {
                  "assignments": [
                    100217
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 100217,
                      "mutability": "mutable",
                      "name": "fees",
                      "nameLocation": "7239:4:387",
                      "nodeType": "VariableDeclaration",
                      "scope": 100290,
                      "src": "7231:12:387",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 100216,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7231:7:387",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 100218,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7231:12:387"
                },
                {
                  "assignments": [
                    100220
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 100220,
                      "mutability": "mutable",
                      "name": "feeRecipient",
                      "nameLocation": "7261:12:387",
                      "nodeType": "VariableDeclaration",
                      "scope": 100290,
                      "src": "7253:20:387",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 100219,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7253:7:387",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 100221,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7253:20:387"
                },
                {
                  "assignments": [
                    100224
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 100224,
                      "mutability": "mutable",
                      "name": "feeType",
                      "nameLocation": "7300:7:387",
                      "nodeType": "VariableDeclaration",
                      "scope": 100290,
                      "src": "7284:23:387",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PlatformFeeType_$33287",
                        "typeString": "enum IPlatformFee.PlatformFeeType"
                      },
                      "typeName": {
                        "id": 100223,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 100222,
                          "name": "PlatformFeeType",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 33287,
                          "src": "7284:15:387"
                        },
                        "referencedDeclaration": 33287,
                        "src": "7284:15:387",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PlatformFeeType_$33287",
                          "typeString": "enum IPlatformFee.PlatformFeeType"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 100227,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 100225,
                      "name": "getPlatformFeeType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21858,
                      "src": "7310:18:387",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_enum$_PlatformFeeType_$33287_$",
                        "typeString": "function () view returns (enum IPlatformFee.PlatformFeeType)"
                      }
                    },
                    "id": 100226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7310:20:387",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_PlatformFeeType_$33287",
                      "typeString": "enum IPlatformFee.PlatformFeeType"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7284:46:387"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_PlatformFeeType_$33287",
                      "typeString": "enum IPlatformFee.PlatformFeeType"
                    },
                    "id": 100231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 100228,
                      "name": "feeType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100224,
                      "src": "7344:7:387",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PlatformFeeType_$33287",
                        "typeString": "enum IPlatformFee.PlatformFeeType"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 100229,
                        "name": "PlatformFeeType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33287,
                        "src": "7355:15:387",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_PlatformFeeType_$33287_$",
                          "typeString": "type(enum IPlatformFee.PlatformFeeType)"
                        }
                      },
                      "id": 100230,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Flat",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 33286,
                      "src": "7355:20:387",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PlatformFeeType_$33287",
                        "typeString": "enum IPlatformFee.PlatformFeeType"
                      }
                    },
                    "src": "7344:31:387",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 100259,
                    "nodeType": "Block",
                    "src": "7455:169:387",
                    "statements": [
                      {
                        "assignments": [
                          100241
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 100241,
                            "mutability": "mutable",
                            "name": "platformFeeBps",
                            "nameLocation": "7476:14:387",
                            "nodeType": "VariableDeclaration",
                            "scope": 100259,
                            "src": "7469:21:387",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            },
                            "typeName": {
                              "id": 100240,
                              "name": "uint16",
                              "nodeType": "ElementaryTypeName",
                              "src": "7469:6:387",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 100242,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7469:21:387"
                      },
                      {
                        "expression": {
                          "id": 100248,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 100243,
                                "name": "feeRecipient",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 100220,
                                "src": "7505:12:387",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 100244,
                                "name": "platformFeeBps",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 100241,
                                "src": "7519:14:387",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                }
                              }
                            ],
                            "id": 100245,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "7504:30:387",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_address_$_t_uint16_$",
                              "typeString": "tuple(address,uint16)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 100246,
                              "name": "getPlatformFeeInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21835,
                              "src": "7537:18:387",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$_t_uint16_$",
                                "typeString": "function () view returns (address,uint16)"
                              }
                            },
                            "id": 100247,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7537:20:387",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_address_$_t_uint16_$",
                              "typeString": "tuple(address,uint16)"
                            }
                          },
                          "src": "7504:53:387",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 100249,
                        "nodeType": "ExpressionStatement",
                        "src": "7504:53:387"
                      },
                      {
                        "expression": {
                          "id": 100257,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 100250,
                            "name": "fees",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 100217,
                            "src": "7571:4:387",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 100256,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 100253,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 100251,
                                    "name": "_price",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 100157,
                                    "src": "7579:6:387",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 100252,
                                    "name": "platformFeeBps",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 100241,
                                    "src": "7588:14:387",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint16",
                                      "typeString": "uint16"
                                    }
                                  },
                                  "src": "7579:23:387",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 100254,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "7578:25:387",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "id": 100255,
                              "name": "MAX_BPS",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 99912,
                              "src": "7606:7:387",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "7578:35:387",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7571:42:387",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 100258,
                        "nodeType": "ExpressionStatement",
                        "src": "7571:42:387"
                      }
                    ]
                  },
                  "id": 100260,
                  "nodeType": "IfStatement",
                  "src": "7340:284:387",
                  "trueBody": {
                    "id": 100239,
                    "nodeType": "Block",
                    "src": "7377:72:387",
                    "statements": [
                      {
                        "expression": {
                          "id": 100237,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 100232,
                                "name": "feeRecipient",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 100220,
                                "src": "7392:12:387",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 100233,
                                "name": "fees",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 100217,
                                "src": "7406:4:387",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 100234,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "7391:20:387",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                              "typeString": "tuple(address,uint256)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 100235,
                              "name": "getFlatPlatformFeeInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21848,
                              "src": "7414:22:387",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$_t_uint256_$",
                                "typeString": "function () view returns (address,uint256)"
                              }
                            },
                            "id": 100236,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7414:24:387",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                              "typeString": "tuple(address,uint256)"
                            }
                          },
                          "src": "7391:47:387",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 100238,
                        "nodeType": "ExpressionStatement",
                        "src": "7391:47:387"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 100264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 100262,
                          "name": "_price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 100157,
                          "src": "7642:6:387",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 100263,
                          "name": "fees",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 100217,
                          "src": "7652:4:387",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7642:14:387",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "2146",
                        "id": 100265,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7658:4:387",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f5ad93706ea377a27905624f1d8150ee2e566c85364e39741eb9fae4dfa34a29",
                          "typeString": "literal_string \"!F\""
                        },
                        "value": "!F"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f5ad93706ea377a27905624f1d8150ee2e566c85364e39741eb9fae4dfa34a29",
                          "typeString": "literal_string \"!F\""
                        }
                      ],
                      "id": 100261,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7634:7:387",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 100266,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7634:29:387",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100267,
                  "nodeType": "ExpressionStatement",
                  "src": "7634:29:387"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 100271,
                        "name": "_currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100155,
                        "src": "7711:9:387",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 100272,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            100432
                          ],
                          "referencedDeclaration": 100432,
                          "src": "7722:10:387",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 100273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7722:12:387",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 100274,
                        "name": "feeRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100220,
                        "src": "7736:12:387",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 100275,
                        "name": "fees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100217,
                        "src": "7750:4:387",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 100268,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63578,
                        "src": "7674:19:387",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$63578_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 100270,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferCurrency",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63383,
                      "src": "7674:36:387",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 100276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7674:81:387",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100277,
                  "nodeType": "ExpressionStatement",
                  "src": "7674:81:387"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 100281,
                        "name": "_currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100155,
                        "src": "7802:9:387",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 100282,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            100432
                          ],
                          "referencedDeclaration": 100432,
                          "src": "7813:10:387",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 100283,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7813:12:387",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 100284,
                        "name": "saleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100204,
                        "src": "7827:13:387",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 100287,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 100285,
                          "name": "_price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 100157,
                          "src": "7842:6:387",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 100286,
                          "name": "fees",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 100217,
                          "src": "7851:4:387",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7842:13:387",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 100278,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63578,
                        "src": "7765:19:387",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$63578_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 100280,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferCurrency",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63383,
                      "src": "7765:36:387",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 100288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7765:91:387",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100289,
                  "nodeType": "ExpressionStatement",
                  "src": "7765:91:387"
                }
              ]
            },
            "documentation": {
              "id": 100151,
              "nodeType": "StructuredDocumentation",
              "src": "6514:80:387",
              "text": "@dev Collects and distributes the primary sale value of tokens being minted."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_collectPriceOnClaim",
            "nameLocation": "6608:20:387",
            "parameters": {
              "id": 100158,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100153,
                  "mutability": "mutable",
                  "name": "_primarySaleRecipient",
                  "nameLocation": "6646:21:387",
                  "nodeType": "VariableDeclaration",
                  "scope": 100291,
                  "src": "6638:29:387",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 100152,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6638:7:387",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 100155,
                  "mutability": "mutable",
                  "name": "_currency",
                  "nameLocation": "6685:9:387",
                  "nodeType": "VariableDeclaration",
                  "scope": 100291,
                  "src": "6677:17:387",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 100154,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6677:7:387",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 100157,
                  "mutability": "mutable",
                  "name": "_price",
                  "nameLocation": "6712:6:387",
                  "nodeType": "VariableDeclaration",
                  "scope": 100291,
                  "src": "6704:14:387",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 100156,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6704:7:387",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6628:96:387"
            },
            "returnParameters": {
              "id": 100159,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6734:0:387"
            },
            "scope": 100446,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 100362,
            "nodeType": "FunctionDefinition",
            "src": "7906:483:387",
            "nodes": [],
            "body": {
              "id": 100361,
              "nodeType": "Block",
              "src": "8026:363:387",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 100305,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100294,
                        "src": "8063:4:387",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 100306,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100296,
                        "src": "8069:2:387",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 100307,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100298,
                        "src": "8073:6:387",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 100302,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "8036:5:387",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_LoyaltyPoints_$100446_$",
                          "typeString": "type(contract super LoyaltyPoints)"
                        }
                      },
                      "id": 100304,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_beforeTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 152687,
                      "src": "8036:26:387",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 100308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8036:44:387",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100309,
                  "nodeType": "ExpressionStatement",
                  "src": "8036:44:387"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 100331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 100324,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 100317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "8095:35:387",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 100311,
                              "name": "TRANSFER_ROLE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 99896,
                              "src": "8104:13:387",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 100314,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8127:1:387",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 100313,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8119:7:387",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 100312,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8119:7:387",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 100315,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8119:10:387",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 100310,
                            "name": "hasRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21207,
                            "src": "8096:7:387",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) view returns (bool)"
                            }
                          },
                          "id": 100316,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8096:34:387",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 100323,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 100318,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 100294,
                          "src": "8134:4:387",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 100321,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8150:1:387",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 100320,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8142:7:387",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 100319,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8142:7:387",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 100322,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8142:10:387",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8134:18:387",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "8095:57:387",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 100330,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 100325,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100296,
                        "src": "8156:2:387",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 100328,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8170:1:387",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 100327,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8162:7:387",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 100326,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8162:7:387",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 100329,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8162:10:387",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "8156:16:387",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "8095:77:387",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 100346,
                  "nodeType": "IfStatement",
                  "src": "8091:200:387",
                  "trueBody": {
                    "id": 100345,
                    "nodeType": "Block",
                    "src": "8174:117:387",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 100341,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "id": 100334,
                                    "name": "TRANSFER_ROLE",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 99896,
                                    "src": "8204:13:387",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "id": 100335,
                                    "name": "from",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 100294,
                                    "src": "8219:4:387",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 100333,
                                  "name": "hasRole",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 21207,
                                  "src": "8196:7:387",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                                    "typeString": "function (bytes32,address) view returns (bool)"
                                  }
                                },
                                "id": 100336,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8196:28:387",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "id": 100338,
                                    "name": "TRANSFER_ROLE",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 99896,
                                    "src": "8236:13:387",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "id": 100339,
                                    "name": "to",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 100296,
                                    "src": "8251:2:387",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 100337,
                                  "name": "hasRole",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 21207,
                                  "src": "8228:7:387",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                                    "typeString": "function (bytes32,address) view returns (bool)"
                                  }
                                },
                                "id": 100340,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8228:26:387",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "8196:58:387",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "7472616e736665727320726573747269637465642e",
                              "id": 100342,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8256:23:387",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_72e11b0ed7b28c874f482b967f28c4c024d99b0b661cdb5de6e5ca1f32712e14",
                                "typeString": "literal_string \"transfers restricted.\""
                              },
                              "value": "transfers restricted."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_72e11b0ed7b28c874f482b967f28c4c024d99b0b661cdb5de6e5ca1f32712e14",
                                "typeString": "literal_string \"transfers restricted.\""
                              }
                            ],
                            "id": 100332,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "8188:7:387",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 100343,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8188:92:387",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 100344,
                        "nodeType": "ExpressionStatement",
                        "src": "8188:92:387"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 100352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 100347,
                      "name": "from",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100294,
                      "src": "8305:4:387",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 100350,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8321:1:387",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 100349,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "8313:7:387",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 100348,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8313:7:387",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 100351,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8313:10:387",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8305:18:387",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 100360,
                  "nodeType": "IfStatement",
                  "src": "8301:82:387",
                  "trueBody": {
                    "id": 100359,
                    "nodeType": "Block",
                    "src": "8325:58:387",
                    "statements": [
                      {
                        "expression": {
                          "id": 100357,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 100353,
                              "name": "_mintedToInLifetime",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 99917,
                              "src": "8339:19:387",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 100355,
                            "indexExpression": {
                              "id": 100354,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 100296,
                              "src": "8359:2:387",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "8339:23:387",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 100356,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 100298,
                            "src": "8366:6:387",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8339:33:387",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 100358,
                        "nodeType": "ExpressionStatement",
                        "src": "8339:33:387"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              152687
            ],
            "documentation": {
              "id": 100292,
              "nodeType": "StructuredDocumentation",
              "src": "7869:32:387",
              "text": "@dev Runs on every transfer."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "7915:20:387",
            "overrides": {
              "id": 100300,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8017:8:387"
            },
            "parameters": {
              "id": 100299,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100294,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "7953:4:387",
                  "nodeType": "VariableDeclaration",
                  "scope": 100362,
                  "src": "7945:12:387",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 100293,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7945:7:387",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 100296,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "7975:2:387",
                  "nodeType": "VariableDeclaration",
                  "scope": 100362,
                  "src": "7967:10:387",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 100295,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7967:7:387",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 100298,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "7995:6:387",
                  "nodeType": "VariableDeclaration",
                  "scope": 100362,
                  "src": "7987:14:387",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 100297,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7987:7:387",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7935:72:387"
            },
            "returnParameters": {
              "id": 100301,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8026:0:387"
            },
            "scope": 100446,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 100376,
            "nodeType": "FunctionDefinition",
            "src": "8484:137:387",
            "nodes": [],
            "body": {
              "id": 100375,
              "nodeType": "Block",
              "src": "8556:65:387",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 100370,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21176,
                        "src": "8581:18:387",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 100371,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            100432
                          ],
                          "referencedDeclaration": 100432,
                          "src": "8601:10:387",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 100372,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8601:12:387",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 100369,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21207,
                      "src": "8573:7:387",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 100373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8573:41:387",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 100368,
                  "id": 100374,
                  "nodeType": "Return",
                  "src": "8566:48:387"
                }
              ]
            },
            "baseFunctions": [
              22004
            ],
            "documentation": {
              "id": 100363,
              "nodeType": "StructuredDocumentation",
              "src": "8395:84:387",
              "text": "@dev Checks whether platform fee info can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetPlatformFeeInfo",
            "nameLocation": "8493:22:387",
            "overrides": {
              "id": 100365,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8532:8:387"
            },
            "parameters": {
              "id": 100364,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8515:2:387"
            },
            "returnParameters": {
              "id": 100368,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100367,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 100376,
                  "src": "8550:4:387",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 100366,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8550:4:387",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8549:6:387"
            },
            "scope": 100446,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 100390,
            "nodeType": "FunctionDefinition",
            "src": "8721:142:387",
            "nodes": [],
            "body": {
              "id": 100389,
              "nodeType": "Block",
              "src": "8798:65:387",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 100384,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21176,
                        "src": "8823:18:387",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 100385,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            100432
                          ],
                          "referencedDeclaration": 100432,
                          "src": "8843:10:387",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 100386,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8843:12:387",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 100383,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21207,
                      "src": "8815:7:387",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 100387,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8815:41:387",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 100382,
                  "id": 100388,
                  "nodeType": "Return",
                  "src": "8808:48:387"
                }
              ]
            },
            "baseFunctions": [
              22066
            ],
            "documentation": {
              "id": 100377,
              "nodeType": "StructuredDocumentation",
              "src": "8627:89:387",
              "text": "@dev Checks whether primary sale recipient can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetPrimarySaleRecipient",
            "nameLocation": "8730:27:387",
            "overrides": {
              "id": 100379,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8774:8:387"
            },
            "parameters": {
              "id": 100378,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8757:2:387"
            },
            "returnParameters": {
              "id": 100382,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100381,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 100390,
                  "src": "8792:4:387",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 100380,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8792:4:387",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8791:6:387"
            },
            "scope": 100446,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 100404,
            "nodeType": "FunctionDefinition",
            "src": "8958:133:387",
            "nodes": [],
            "body": {
              "id": 100403,
              "nodeType": "Block",
              "src": "9026:65:387",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 100398,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21176,
                        "src": "9051:18:387",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 100399,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            100432
                          ],
                          "referencedDeclaration": 100432,
                          "src": "9071:10:387",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 100400,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9071:12:387",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 100397,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21207,
                      "src": "9043:7:387",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 100401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9043:41:387",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 100396,
                  "id": 100402,
                  "nodeType": "Return",
                  "src": "9036:48:387"
                }
              ]
            },
            "baseFunctions": [
              17525
            ],
            "documentation": {
              "id": 100391,
              "nodeType": "StructuredDocumentation",
              "src": "8869:84:387",
              "text": "@dev Checks whether contract metadata can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetContractURI",
            "nameLocation": "8967:18:387",
            "overrides": {
              "id": 100393,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9002:8:387"
            },
            "parameters": {
              "id": 100392,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8985:2:387"
            },
            "returnParameters": {
              "id": 100396,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100395,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 100404,
                  "src": "9020:4:387",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 100394,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9020:4:387",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9019:6:387"
            },
            "scope": 100446,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 100419,
            "nodeType": "FunctionDefinition",
            "src": "9179:137:387",
            "nodes": [],
            "body": {
              "id": 100418,
              "nodeType": "Block",
              "src": "9263:53:387",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 100414,
                        "name": "MINTER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99902,
                        "src": "9288:11:387",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 100415,
                        "name": "_signer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100407,
                        "src": "9301:7:387",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 100413,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21207,
                      "src": "9280:7:387",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 100416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9280:29:387",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 100412,
                  "id": 100417,
                  "nodeType": "Return",
                  "src": "9273:36:387"
                }
              ]
            },
            "baseFunctions": [
              23596
            ],
            "documentation": {
              "id": 100405,
              "nodeType": "StructuredDocumentation",
              "src": "9097:77:387",
              "text": "@dev Returns whether a given address is authorized to sign mint requests."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isAuthorizedSigner",
            "nameLocation": "9188:19:387",
            "overrides": {
              "id": 100409,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9239:8:387"
            },
            "parameters": {
              "id": 100408,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100407,
                  "mutability": "mutable",
                  "name": "_signer",
                  "nameLocation": "9216:7:387",
                  "nodeType": "VariableDeclaration",
                  "scope": 100419,
                  "src": "9208:15:387",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 100406,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9208:7:387",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9207:17:387"
            },
            "returnParameters": {
              "id": 100412,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100411,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 100419,
                  "src": "9257:4:387",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 100410,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9257:4:387",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9256:6:387"
            },
            "scope": 100446,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 100432,
            "nodeType": "FunctionDefinition",
            "src": "9322:231:387",
            "nodes": [],
            "body": {
              "id": 100431,
              "nodeType": "Block",
              "src": "9491:62:387",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 100427,
                        "name": "ERC2771ContextUpgradeable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45607,
                        "src": "9508:25:387",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC2771ContextUpgradeable_$45607_$",
                          "typeString": "type(contract ERC2771ContextUpgradeable)"
                        }
                      },
                      "id": 100428,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_msgSender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45575,
                      "src": "9508:36:387",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 100429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9508:38:387",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 100426,
                  "id": 100430,
                  "nodeType": "Return",
                  "src": "9501:45:387"
                }
              ]
            },
            "baseFunctions": [
              45575,
              156029
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgSender",
            "nameLocation": "9331:10:387",
            "overrides": {
              "id": 100423,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 100421,
                  "name": "ContextUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 156044,
                  "src": "9407:18:387"
                },
                {
                  "id": 100422,
                  "name": "ERC2771ContextUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 45607,
                  "src": "9427:25:387"
                }
              ],
              "src": "9398:55:387"
            },
            "parameters": {
              "id": 100420,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9341:2:387"
            },
            "returnParameters": {
              "id": 100426,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100425,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "9479:6:387",
                  "nodeType": "VariableDeclaration",
                  "scope": 100432,
                  "src": "9471:14:387",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 100424,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9471:7:387",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9470:16:387"
            },
            "scope": 100446,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 100445,
            "nodeType": "FunctionDefinition",
            "src": "9559:227:387",
            "nodes": [],
            "body": {
              "id": 100444,
              "nodeType": "Block",
              "src": "9726:60:387",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 100440,
                        "name": "ERC2771ContextUpgradeable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45607,
                        "src": "9743:25:387",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC2771ContextUpgradeable_$45607_$",
                          "typeString": "type(contract ERC2771ContextUpgradeable)"
                        }
                      },
                      "id": 100441,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_msgData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45602,
                      "src": "9743:34:387",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_calldata_ptr_$",
                        "typeString": "function () view returns (bytes calldata)"
                      }
                    },
                    "id": 100442,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9743:36:387",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_calldata_ptr",
                      "typeString": "bytes calldata"
                    }
                  },
                  "functionReturnParameters": 100439,
                  "id": 100443,
                  "nodeType": "Return",
                  "src": "9736:43:387"
                }
              ]
            },
            "baseFunctions": [
              45602,
              156038
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgData",
            "nameLocation": "9568:8:387",
            "overrides": {
              "id": 100436,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 100434,
                  "name": "ContextUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 156044,
                  "src": "9642:18:387"
                },
                {
                  "id": 100435,
                  "name": "ERC2771ContextUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 45607,
                  "src": "9662:25:387"
                }
              ],
              "src": "9633:55:387"
            },
            "parameters": {
              "id": 100433,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9576:2:387"
            },
            "returnParameters": {
              "id": 100439,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100438,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 100445,
                  "src": "9706:14:387",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 100437,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "9706:5:387",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9705:16:387"
            },
            "scope": 100446,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 99873,
              "name": "ILoyaltyPoints",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 75255,
              "src": "1784:14:387"
            },
            "id": 99874,
            "nodeType": "InheritanceSpecifier",
            "src": "1784:14:387"
          },
          {
            "baseName": {
              "id": 99875,
              "name": "ContractMetadata",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 17526,
              "src": "1804:16:387"
            },
            "id": 99876,
            "nodeType": "InheritanceSpecifier",
            "src": "1804:16:387"
          },
          {
            "baseName": {
              "id": 99877,
              "name": "PrimarySale",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 22067,
              "src": "1826:11:387"
            },
            "id": 99878,
            "nodeType": "InheritanceSpecifier",
            "src": "1826:11:387"
          },
          {
            "baseName": {
              "id": 99879,
              "name": "PlatformFee",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 22005,
              "src": "1843:11:387"
            },
            "id": 99880,
            "nodeType": "InheritanceSpecifier",
            "src": "1843:11:387"
          },
          {
            "baseName": {
              "id": 99881,
              "name": "PermissionsEnumerable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 21799,
              "src": "1860:21:387"
            },
            "id": 99882,
            "nodeType": "InheritanceSpecifier",
            "src": "1860:21:387"
          },
          {
            "baseName": {
              "id": 99883,
              "name": "ReentrancyGuardUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 150385,
              "src": "1887:26:387"
            },
            "id": 99884,
            "nodeType": "InheritanceSpecifier",
            "src": "1887:26:387"
          },
          {
            "baseName": {
              "id": 99885,
              "name": "ERC2771ContextUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 45607,
              "src": "1919:25:387"
            },
            "id": 99886,
            "nodeType": "InheritanceSpecifier",
            "src": "1919:25:387"
          },
          {
            "baseName": {
              "id": 99887,
              "name": "SignatureMintERC20Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 23721,
              "src": "1950:29:387"
            },
            "id": 99888,
            "nodeType": "InheritanceSpecifier",
            "src": "1950:29:387"
          },
          {
            "baseName": {
              "id": 99889,
              "name": "ERC20Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 152704,
              "src": "1985:16:387"
            },
            "id": 99890,
            "nodeType": "InheritanceSpecifier",
            "src": "1985:16:387"
          }
        ],
        "canonicalName": "LoyaltyPoints",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 99872,
          "nodeType": "StructuredDocumentation",
          "src": "1371:381:387",
          "text": "  @title LoyaltyPoints\n  @custom:description This contract is a loyalty points contract. Each token represents a loyalty point. Loyalty points can\n                      be cancelled (i.e. 'burned') by its owner or an approved operator. Loyalty points can be revoked\n                      (i.e. 'burned') without its owner's approval, by an admin of the contract."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          100446,
          152704,
          153528,
          152782,
          23721,
          33840,
          157205,
          45607,
          156044,
          150385,
          150199,
          21799,
          21500,
          33281,
          33256,
          22005,
          33324,
          22067,
          33345,
          17526,
          32437,
          75255
        ],
        "name": "LoyaltyPoints",
        "nameLocation": "1763:13:387",
        "scope": 100447,
        "usedErrors": []
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 387
}