{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "ApprovalCallerNotOwnerNorApproved",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ApprovalQueryForNonexistentToken",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BalanceQueryForZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidQueryRange",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MintERC2309QuantityExceedsLimit",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MintToZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MintZeroQuantity",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OwnerQueryForNonexistentToken",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OwnershipNotInitializedForExtraData",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferCallerNotOwnerNorApproved",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferFromIncorrectOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferToNonERC721ReceiverImplementer",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferToZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "URIQueryForNonexistentToken",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_fromTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_toTokenId",
          "type": "uint256"
        }
      ],
      "name": "BatchMetadataUpdate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "startTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxClaimableSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "supplyClaimed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "merkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "metadata",
              "type": "string"
            }
          ],
          "indexed": false,
          "internalType": "struct IClaimCondition.ClaimCondition[]",
          "name": "claimConditions",
          "type": "tuple[]"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "resetEligibility",
          "type": "bool"
        }
      ],
      "name": "ClaimConditionsUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "fromTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "toTokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "ConsecutiveTransfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "prevURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "newURI",
          "type": "string"
        }
      ],
      "name": "ContractURIUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newRoyaltyRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newRoyaltyBps",
          "type": "uint256"
        }
      ],
      "name": "DefaultRoyalty",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "MetadataUpdate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "prevOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnerUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "PrimarySaleRecipientUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "royaltyRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "royaltyBps",
          "type": "uint256"
        }
      ],
      "name": "RoyaltyForToken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "imageURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "animationURI",
          "type": "string"
        }
      ],
      "name": "SharedMetadataUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "claimConditionIndex",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "claimer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "startTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "quantityClaimed",
          "type": "uint256"
        }
      ],
      "name": "TokensClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_quantity",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_currency",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_pricePerToken",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            }
          ],
          "internalType": "struct IDrop.AllowlistProof",
          "name": "_allowlistProof",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "claim",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimCondition",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "currentStartId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "count",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "explicitOwnershipOf",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "uint64",
              "name": "startTimestamp",
              "type": "uint64"
            },
            {
              "internalType": "bool",
              "name": "burned",
              "type": "bool"
            },
            {
              "internalType": "uint24",
              "name": "extraData",
              "type": "uint24"
            }
          ],
          "internalType": "struct IERC721AUpgradeable.TokenOwnership",
          "name": "ownership",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getActiveClaimConditionId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_conditionId",
          "type": "uint256"
        }
      ],
      "name": "getClaimConditionById",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "startTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxClaimableSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "supplyClaimed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "merkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "metadata",
              "type": "string"
            }
          ],
          "internalType": "struct IClaimCondition.ClaimCondition",
          "name": "condition",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDefaultRoyaltyInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRoleMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "member",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "count",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getRoyaltyInfoForToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_conditionId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_claimer",
          "type": "address"
        }
      ],
      "name": "getSupplyClaimedByWallet",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "supplyClaimedByWallet",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRoleWithSwitch",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_defaultAdmin",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_contractURI",
          "type": "string"
        },
        {
          "internalType": "address[]",
          "name": "_trustedForwarders",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "_saleRecipient",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_royaltyRecipient",
          "type": "address"
        },
        {
          "internalType": "uint128",
          "name": "_royaltyBps",
          "type": "uint128"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "forwarder",
          "type": "address"
        }
      ],
      "name": "isTrustedForwarder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "multicall",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "results",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextTokenIdToClaim",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextTokenIdToMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "primarySaleRecipient",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "salePrice",
          "type": "uint256"
        }
      ],
      "name": "royaltyInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "royaltyAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "startTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxClaimableSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "supplyClaimed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "merkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "metadata",
              "type": "string"
            }
          ],
          "internalType": "struct IClaimCondition.ClaimCondition[]",
          "name": "_conditions",
          "type": "tuple[]"
        },
        {
          "internalType": "bool",
          "name": "_resetClaimEligibility",
          "type": "bool"
        }
      ],
      "name": "setClaimConditions",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "setContractURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_royaltyRecipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_royaltyBps",
          "type": "uint256"
        }
      ],
      "name": "setDefaultRoyaltyInfo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "setOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_saleRecipient",
          "type": "address"
        }
      ],
      "name": "setPrimarySaleRecipient",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_bps",
          "type": "uint256"
        }
      ],
      "name": "setRoyaltyInfoForToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "imageURI",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "animationURI",
              "type": "string"
            }
          ],
          "internalType": "struct ISharedMetadata.SharedMetadataInfo",
          "name": "_metadata",
          "type": "tuple"
        }
      ],
      "name": "setSharedMetadata",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sharedMetadata",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "imageURI",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "animationURI",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startTokenId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "tokensOfOwner",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "start",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "stop",
          "type": "uint256"
        }
      ],
      "name": "tokensOfOwnerIn",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalMinted",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_conditionId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_claimer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_quantity",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_currency",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_pricePerToken",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            }
          ],
          "internalType": "struct IDrop.AllowlistProof",
          "name": "_allowlistProof",
          "type": "tuple"
        }
      ],
      "name": "verifyClaim",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isOverride",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b50600054610100900460ff1615808015620000335750600054600160ff909116105b8062000063575062000050306200013d60201b620025101760201c565b15801562000063575060005460ff166001145b620000cb5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840160405180910390fd5b6000805460ff191660011790558015620000ef576000805461ff0019166101001790555b801562000136576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b506200014c565b6001600160a01b03163b151590565b61590c806200015c6000396000f3fe6080604052600436106102755760003560e01c80638da5cb5b1161014b5780638da5cb5b1461061b5780639010d07c1461063957806391d1485414610659578063938e3d7b1461067957806395d89b411461069957806399a2557a146106ae5780639bcf7a15146106ce578063a217fddf146106ee578063a22cb46514610703578063a2309ff814610723578063a32fa5b314610738578063a7d27d9d14610758578063ac9650d814610778578063acd083f814610444578063ad1eefc5146107a5578063b24f2d39146107e7578063b280f70314610812578063b88d4fde14610837578063c23dc68f1461084a578063c68907de146108b6578063c87b56dd146108cb578063ca15c873146108eb578063d547741f1461090b578063d637ed591461092b578063e6798baa1461095b578063e8a3d4851461096f578063e985e9c51461098457600080fd5b806301ffc9a71461027a57806306fdde03146102af578063079fe40e146102d1578063081812fc146102fe578063095ea7b31461031e57806313af40351461033357806318160ddd1461035357806323a2902b1461037657806323b872dd14610396578063248a9ca3146103a95780632a55205a146103d65780632f2ff15d1461040457806336568abe146104245780633b1475a71461044457806342842e0e1461045957806342966c681461046c57806349c5c5b61461048c5780634cc157df146104ac578063572b6c05146104ee578063600dd5ea1461050e5780636352211e1461052e5780636f4f28371461054e5780636f8934f41461056e57806370a082311461059b57806374bc7db7146105bb5780638462151c146105db57806384bb1e4214610608575b600080fd5b34801561028657600080fd5b5061029a6102953660046145ef565b6109a4565b60405190151581526020015b60405180910390f35b3480156102bb57600080fd5b506102c46109d0565b6040516102a69190614664565b3480156102dd57600080fd5b506102e6610a6b565b6040516001600160a01b0390911681526020016102a6565b34801561030a57600080fd5b506102e6610319366004614677565b610a7a565b61033161032c3660046146b0565b610abe565b005b34801561033f57600080fd5b5061033161034e3660046146dc565b610ace565b34801561035f57600080fd5b50610368610b07565b6040519081526020016102a6565b34801561038257600080fd5b5061029a61039136600461470b565b610b27565b6103316103a4366004614788565b610ee8565b3480156103b557600080fd5b506103686103c4366004614677565b6000908152600b602052604090205490565b3480156103e257600080fd5b506103f66103f13660046147c9565b6110a1565b6040516102a69291906147eb565b34801561041057600080fd5b5061033161041f366004614804565b6110de565b34801561043057600080fd5b5061033161043f366004614804565b611174565b34801561045057600080fd5b506103686111d3565b610331610467366004614788565b6111e2565b34801561047857600080fd5b50610331610487366004614677565b611202565b34801561049857600080fd5b506103316104a736600461497d565b61120d565b3480156104b857600080fd5b506104cc6104c7366004614677565b6114f0565b604080516001600160a01b03909316835261ffff9091166020830152016102a6565b3480156104fa57600080fd5b5061029a6105093660046146dc565b61155b565b34801561051a57600080fd5b506103316105293660046146b0565b611579565b34801561053a57600080fd5b506102e6610549366004614677565b6115a7565b34801561055a57600080fd5b506103316105693660046146dc565b6115b2565b34801561057a57600080fd5b5061058e610589366004614677565b6115df565b6040516102a69190614a6c565b3480156105a757600080fd5b506103686105b63660046146dc565b61173c565b3480156105c757600080fd5b506103316105d6366004614b32565b61179b565b3480156105e757600080fd5b506105fb6105f63660046146dc565b611adf565b6040516102a69190614b88565b610331610616366004614bc0565b611b0e565b34801561062757600080fd5b506005546001600160a01b03166102e6565b34801561064557600080fd5b506102e66106543660046147c9565b611c26565b34801561066557600080fd5b5061029a610674366004614804565b611d15565b34801561068557600080fd5b50610331610694366004614c4d565b611d40565b3480156106a557600080fd5b506102c4611d6d565b3480156106ba57600080fd5b506105fb6106c9366004614c81565b611d85565b3480156106da57600080fd5b506103316106e9366004614cb6565b611d9c565b3480156106fa57600080fd5b50610368600081565b34801561070f57600080fd5b5061033161071e366004614cdd565b611dcb565b34801561072f57600080fd5b50610368611e6d565b34801561074457600080fd5b5061029a610753366004614804565b611e7f565b34801561076457600080fd5b50610331610773366004614d0b565b611ed5565b34801561078457600080fd5b50610798610793366004614d3f565b611f02565b6040516102a69190614d80565b3480156107b157600080fd5b506103686107c0366004614804565b60009182526010602090815260408084206001600160a01b03909316845291905290205490565b3480156107f357600080fd5b506002546001600160a01b03811690600160a01b900461ffff166104cc565b34801561081e57600080fd5b50610827611ff6565b6040516102a69493929190614de2565b610331610845366004614e2f565b612232565b34801561085657600080fd5b5061086a610865366004614677565b612273565b6040516102a6919081516001600160a01b031681526020808301516001600160401b03169082015260408083015115159082015260609182015162ffffff169181019190915260800190565b3480156108c257600080fd5b506103686122ba565b3480156108d757600080fd5b506102c46108e6366004614677565b61235d565b3480156108f757600080fd5b50610368610906366004614677565b6123a3565b34801561091757600080fd5b50610331610926366004614804565b61242c565b34801561093757600080fd5b50600d54600e54610946919082565b604080519283526020830191909152016102a6565b34801561096757600080fd5b506001610368565b34801561097b57600080fd5b506102c4612445565b34801561099057600080fd5b5061029a61099f366004614e9a565b6124d3565b60006109af8261251f565b806109ca575063152a902d60e11b6001600160e01b03198316145b92915050565b60606109da61256d565b60020180546109e890614ec8565b80601f0160208091040260200160405190810160405280929190818152602001828054610a1490614ec8565b8015610a615780601f10610a3657610100808354040283529160200191610a61565b820191906000526020600020905b815481529060010190602001808311610a4457829003601f168201915b5050505050905090565b6004546001600160a01b031690565b6000610a8582612591565b610a9957610a996333d1c03960e21b6125ed565b610aa161256d565b60009283526006016020525060409020546001600160a01b031690565b610aca828260016125f7565b5050565b610ad66126ba565b610afb5760405162461bcd60e51b8152600401610af290614efd565b60405180910390fd5b610b04816126c8565b50565b60006001610b1361256d565b60010154610b1f61256d565b540303919050565b6000868152600f60209081526040808320815161010081018352815481526001820154938101939093526002810154918301919091526003810154606083015260048101546080830152600581015460a083015260068101546001600160a01b031660c08301526007810180548493929160e0840191610ba690614ec8565b80601f0160208091040260200160405190810160405280929190818152602001828054610bd290614ec8565b8015610c1f5780601f10610bf457610100808354040283529160200191610c1f565b820191906000526020600020905b815481529060010190602001808311610c0257829003601f168201915b50505091909252505050606081015160a082015160c08301516080840151939450919290919015610cff57610cfb610c578780614f25565b80806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250505060808088015191508d9060208b01359060408c013590610cac908d0160608e016146dc565b6040516001600160601b0319606095861b811660208301526034820194909452605481019290925290921b1660748201526088016040516020818303038152906040528051906020012061271a565b5094505b8415610d84576020860135610d145782610d1a565b85602001355b925060001986604001351415610d305781610d36565b85604001355b9150600019866040013514158015610d6757506000610d5b60808801606089016146dc565b6001600160a01b031614155b610d715780610d81565b610d8160808701606088016146dc565b90505b60008b81526010602090815260408083206001600160a01b03808f16855292529091205490898116908316141580610dbc5750828814155b15610dfc5760405162461bcd60e51b815260206004820152601060248201526f2150726963654f7243757272656e637960801b6044820152606401610af2565b891580610e11575083610e0f828c614f84565b115b15610e475760405162461bcd60e51b8152600401610af2906020808252600490820152632151747960e01b604082015260600190565b84602001518a8660400151610e5c9190614f84565b1115610e975760405162461bcd60e51b815260206004820152600a602482015269214d6178537570706c7960b01b6044820152606401610af2565b8451421015610ed95760405162461bcd60e51b815260206004820152600e60248201526d18d85b9d0818db185a5b481e595d60921b6044820152606401610af2565b50505050509695505050505050565b6000610ef3826127e8565b6001600160a01b039485169490915081168414610f1957610f1962a1148160e81b6125ed565b600080610f25846128a6565b91509150610f4b8187610f366128ce565b6001600160a01b039081169116811491141790565b610f6f57610f5b8661099f6128ce565b610f6f57610f6f632ce44b5f60e11b6125ed565b610f7c86868660016128d8565b8015610f8757600082555b610f8f61256d565b6001600160a01b0387166000908152600591909101602052604090208054600019019055610fbb61256d565b6001600160a01b03861660009081526005919091016020526040902080546001019055610fec85600160e11b612967565b610ff461256d565b60008681526004919091016020526040902055600160e11b8316611063576001840161101e61256d565b600082815260049190910160205260409020546110615761103d61256d565b548114611061578361104d61256d565b600083815260049190910160205260409020555b505b6001600160a01b0385168481886000805160206158b7833981519152600080a48061109857611098633a954ecd60e21b6125ed565b50505050505050565b6000806000806110b0866114f0565b90945084925061ffff1690506127106110c98287614f9c565b6110d39190614fd1565b925050509250929050565b6000828152600b60205260409020546110f7903361297c565b6000828152600a602090815260408083206001600160a01b038516845290915290205460ff161561116a5760405162461bcd60e51b815260206004820152601d60248201527f43616e206f6e6c79206772616e7420746f206e6f6e20686f6c646572730000006044820152606401610af2565b610aca82826129fc565b336001600160a01b038216146111c95760405162461bcd60e51b815260206004820152601a60248201527921b0b71037b7363c903932b737bab731b2903337b91039b2b63360311b6044820152606401610af2565b610aca8282612a10565b60006111dd612a67565b905090565b6111fd83838360405180602001604052806000815250612232565b505050565b610b04816001612a77565b611215612be0565b54610100900460ff166112345761122a612be0565b5460ff1615611238565b303b155b6112a45760405162461bcd60e51b815260206004820152603760248201527f455243373231415f5f496e697469616c697a61626c653a20636f6e7472616374604482015276081a5cc8185b1c9958591e481a5b9a5d1a585b1a5e9959604a1b6064820152608401610af2565b60006112ae612be0565b54610100900460ff1615905080156112fa5760016112ca612be0565b80549115156101000261ff001990921691909117905560016112ea612be0565b805460ff19169115159190911790555b600054610100900460ff161580801561131a5750600054600160ff909116105b8061133b575061132930612510565b15801561133b575060005460ff166001145b61139e5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610af2565b6000805460ff1916600117905580156113c1576000805461ff0019166101001790555b7f8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a661140c88612c04565b6114168b8b612c3c565b61141f89612c73565b6114288c6126c8565b61143360008d6129fc565b61143d818d6129fc565b611447828d6129fc565b6114528260006129fc565b61146586866001600160801b0316612d55565b61146e87612dd9565b60759190915560765580156114bd576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5080156114e55760006114ce612be0565b80549115156101000261ff00199092169190911790555b505050505050505050565b6000818152600360209081526040808320815180830190925280546001600160a01b0316808352600190910154928201929092528291156115375780516020820151611551565b6002546001600160a01b03811690600160a01b900461ffff165b9250925050915091565b6001600160a01b031660009081526043602052604090205460ff1690565b6115816126ba565b61159d5760405162461bcd60e51b8152600401610af290614efd565b610aca8282612d55565b60006109ca826127e8565b6115ba6126ba565b6115d65760405162461bcd60e51b8152600401610af290614efd565b610b0481612dd9565b61163360405180610100016040528060008152602001600081526020016000815260200160008152602001600080191681526020016000815260200160006001600160a01b03168152602001606081525090565b6000828152600f6020908152604091829020825161010081018452815481526001820154928101929092526002810154928201929092526003820154606082015260048201546080820152600582015460a082015260068201546001600160a01b031660c082015260078201805491929160e0840191906116b390614ec8565b80601f01602080910402602001604051908101604052809291908181526020018280546116df90614ec8565b801561172c5780601f106117015761010080835404028352916020019161172c565b820191906000526020600020905b81548152906001019060200180831161170f57829003601f168201915b5050505050815250509050919050565b60006001600160a01b03821661175c5761175c6323d3ad8160e21b6125ed565b6001600160401b0361176c61256d565b6005016000846001600160a01b03166001600160a01b0316815260200190815260200160002054169050919050565b6117a36126ba565b6117bf5760405162461bcd60e51b8152600401610af290614efd565b600d54600e548183156117d9576117d68284614f84565b90505b600e859055600d8190556000805b8681101561198c5780158061181f575087878281811061180957611809614fe5565b905060200281019061181b9190614ffb565b3582105b6118505760405162461bcd60e51b815260206004820152600260248201526114d560f21b6044820152606401610af2565b6000600f8161185f8487614f84565b815260200190815260200160002060020154905088888381811061188557611885614fe5565b90506020028101906118979190614ffb565b602001358111156118df5760405162461bcd60e51b81526020600482015260126024820152711b585e081cdd5c1c1b1e4818db185a5b595960721b6044820152606401610af2565b8888838181106118f1576118f1614fe5565b90506020028101906119039190614ffb565b600f60006119118588614f84565b8152602001908152602001600020818161192b9190615166565b50819050600f600061193d8588614f84565b815260208101919091526040016000206002015588888381811061196357611963614fe5565b90506020028101906119759190614ffb565b359250819050611984816151e4565b9150506117e7565b508415611a0c57835b82811015611a06576000818152600f6020526040812081815560018101829055600281018290556003810182905560048101829055600581018290556006810180546001600160a01b0319169055906119f160078301826144df565b505080806119fe906151e4565b915050611995565b50611a9b565b85831115611a9b57855b83811015611a9957600f6000611a2c8386614f84565b81526020810191909152604001600090812081815560018101829055600281018290556003810182905560048101829055600581018290556006810180546001600160a01b031916905590611a8460078301826144df565b50508080611a91906151e4565b915050611a16565b505b7fbf4016fceeaaa4ac5cf4be865b559ff85825ab4ca7aa7b661d16e2f544c03098878787604051611ace9392919061526d565b60405180910390a150505050505050565b606060016000611aed612a67565b90506060818314611b0657611b03858484612e23565b90505b949350505050565b6000611b186122ba565b9050611b2f81611b266128ce565b88888888610b27565b506000818152600f602052604081206002018054889290611b51908490614f84565b909155505060008181526010602052604081208791611b6e6128ce565b6001600160a01b03166001600160a01b031681526020019081526020016000206000828254611b9d9190614f84565b90915550611bb090506000878787612f33565b6000611bbc888861301c565b9050876001600160a01b0316611bd06128ce565b6001600160a01b0316837ffa76a4010d9533e3e964f2930a65fb6042a12fa6ff5b08281837a10b0be7321e848b604051611c14929190918252602082015260400190565b60405180910390a45050505050505050565b6000828152600c602052604081205481805b82811015611d0c576000868152600c602090815260408083208484526001019091529020546001600160a01b031615611cb55784821415611ca3576000868152600c602090815260408083209383526001909301905220546001600160a01b031692506109ca915050565b611cae600183614f84565b9150611cfa565b611cc0866000611d15565b8015611ce757506000868152600c6020908152604080832083805260020190915290205481145b15611cfa57611cf7600183614f84565b91505b611d05600182614f84565b9050611c38565b50505092915050565b6000918252600a602090815260408084206001600160a01b0393909316845291905290205460ff1690565b611d486126ba565b611d645760405162461bcd60e51b8152600401610af290614efd565b610b0481612c73565b6060611d7761256d565b60030180546109e890614ec8565b6060611d92848484612e23565b90505b9392505050565b611da46126ba565b611dc05760405162461bcd60e51b8152600401610af290614efd565b6111fd838383613032565b80611dd461256d565b6007016000611de16128ce565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff191692151592909217909155611e256128ce565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051611e61911515815260200190565b60405180910390a35050565b60006001611e79612a67565b03905090565b6000828152600a6020908152604080832083805290915281205460ff16611ecc57506000828152600a602090815260408083206001600160a01b038516845290915290205460ff166109ca565b50600192915050565b611edd6130d9565b611ef95760405162461bcd60e51b8152600401610af290614efd565b610b04816130e9565b6060816001600160401b03811115611f1c57611f1c614834565b604051908082528060200260200182016040528015611f4f57816020015b6060815260200190600190039081611f3a5790505b50905060005b82811015611fef57611fbf30858584818110611f7357611f73614fe5565b9050602002810190611f85919061501b565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061332292505050565b828281518110611fd157611fd1614fe5565b60200260200101819052508080611fe7906151e4565b915050611f55565b5092915050565b60068054819061200590614ec8565b80601f016020809104026020016040519081016040528092919081815260200182805461203190614ec8565b801561207e5780601f106120535761010080835404028352916020019161207e565b820191906000526020600020905b81548152906001019060200180831161206157829003601f168201915b50505050509080600101805461209390614ec8565b80601f01602080910402602001604051908101604052809291908181526020018280546120bf90614ec8565b801561210c5780601f106120e15761010080835404028352916020019161210c565b820191906000526020600020905b8154815290600101906020018083116120ef57829003601f168201915b50505050509080600201805461212190614ec8565b80601f016020809104026020016040519081016040528092919081815260200182805461214d90614ec8565b801561219a5780601f1061216f5761010080835404028352916020019161219a565b820191906000526020600020905b81548152906001019060200180831161217d57829003601f168201915b5050505050908060030180546121af90614ec8565b80601f01602080910402602001604051908101604052809291908181526020018280546121db90614ec8565b80156122285780601f106121fd57610100808354040283529160200191612228565b820191906000526020600020905b81548152906001019060200180831161220b57829003601f168201915b5050505050905084565b61223d848484610ee8565b6001600160a01b0383163b1561226d5761225984848484613347565b61226d5761226d6368d2bf6b60e11b6125ed565b50505050565b61227b614519565b600182106122b55761228b612a67565b8210156122b5575b61229c8261342c565b6122ac5760001990910190612293565b6109ca8261344c565b919050565b600e54600d5460009182916122cf9190614f84565b90505b600d5481111561232657600f60006122eb600184615355565b81526020019081526020016000206000015442106123145761230e600182615355565b91505090565b8061231e8161536c565b9150506122d2565b5060405162461bcd60e51b815260206004820152600b60248201526a10a1a7a72224aa24a7a71760a91b6044820152606401610af2565b606061236882612591565b61239a5760405162461bcd60e51b815260206004820152600360248201526208525160ea1b6044820152606401610af2565b6109ca82613477565b6000818152600c6020526040812054815b81811015612407576000848152600c602090815260408083208484526001019091529020546001600160a01b0316156123f5576123f2600184614f84565b92505b612400600182614f84565b90506123b4565b50612413836000611d15565b1561242657612423600183614f84565b91505b50919050565b6000828152600b60205260409020546111c9903361297c565b6001805461245290614ec8565b80601f016020809104026020016040519081016040528092919081815260200182805461247e90614ec8565b80156124cb5780601f106124a0576101008083540402835291602001916124cb565b820191906000526020600020905b8154815290600101906020018083116124ae57829003601f168201915b505050505081565b60006124dd61256d565b6001600160a01b039384166000908152600791909101602090815260408083209490951682529290925250205460ff1690565b6001600160a01b03163b151590565b60006301ffc9a760e01b6001600160e01b03198316148061255057506380ac58cd60e01b6001600160e01b03198316145b806109ca5750506001600160e01b031916635b5e139f60e01b1490565b7f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c4090565b6000816001116122b5576125a361256d565b548210156122b55760005b6125b661256d565b600084815260049190910160205260409020549050806125e0576125d98361536c565b92506125ae565b600160e01b161592915050565b8060005260046000fd5b6000612602836115a7565b905081801561262a5750806001600160a01b031661261e6128ce565b6001600160a01b031614155b1561264f5761263b8161099f6128ce565b61264f5761264f6367d9dca160e11b6125ed565b8361265861256d565b6000858152600691909101602052604080822080546001600160a01b0319166001600160a01b0394851617905551859287811692908516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259190a450505050565b60006111dd816106746136ef565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b6000808281805b87518110156127dc57612735600283614f9c565b9150600088828151811061274b5761274b614fe5565b6020026020010151905080841161278d5760408051602081018690529081018290526060016040516020818303038152906040528051906020012093506127c9565b60408051602081018390529081018590526060016040516020818303038152906040528051906020012093506001836127c69190614f84565b92505b50806127d4816151e4565b915050612721565b50941495939450505050565b600081600111612896576127fa61256d565b600083815260049190910160205260409020549050806128865761281c61256d565b54821061283357612833636f96cda160e11b6125ed565b61283b61256d565b600019909201600081815260049390930160205260409092205490508061286157612833565b600160e01b811661287157919050565b612881636f96cda160e11b6125ed565b612833565b600160e01b811661289657919050565b6122b5636f96cda160e11b6125ed565b60008060006128b361256d565b60009485526006016020525050604090912080549092909150565b60006111dd6136ef565b6128e56075546000611d15565b1580156128fa57506001600160a01b03841615155b801561290e57506001600160a01b03831615155b1561226d5761291f60755485611d15565b158015612935575061293360755484611d15565b155b1561226d5760405162461bcd60e51b8152602060048201526002602482015261085560f21b6044820152606401610af2565b4260a01b176001600160a01b03919091161790565b6000828152600a602090815260408083206001600160a01b038516845290915290205460ff16610aca576129ba816001600160a01b031660146136f9565b6129c58360206136f9565b6040516020016129d692919061539f565b60408051601f198184030181529082905262461bcd60e51b8252610af291600401614664565b612a068282613894565b610aca82826138ef565b612a1a828261395c565b6000828152600c602090815260408083206001600160a01b03851680855260028201808552838620805487526001909301855292852080546001600160a01b031916905584529152555050565b6000612a7161256d565b54919050565b6000612a82836127e8565b905080600080612a91866128a6565b915091508415612acc57612aa88184610f366128ce565b612acc57612ab88361099f6128ce565b612acc57612acc632ce44b5f60e11b6125ed565b612ada8360008860016128d8565b8015612ae557600082555b6001600160801b03612af561256d565b6001600160a01b0385166000908152600591909101602052604090208054919091019055612b2783600360e01b612967565b612b2f61256d565b60008881526004919091016020526040902055600160e11b8416612b9e5760018601612b5961256d565b60008281526004919091016020526040902054612b9c57612b7861256d565b548114612b9c5784612b8861256d565b600083815260049190910160205260409020555b505b60405186906000906001600160a01b038616906000805160206158b7833981519152908390a4612bcc61256d565b600190810180549091019055505050505050565b7fee151c8401928dc223602bb187aff91b9a56c7cae5476ef1b3287b085a16c85f90565b600054610100900460ff16612c2b5760405162461bcd60e51b8152600401610af29061540c565b612c336139be565b610b04816139e7565b612c44612be0565b54610100900460ff16612c695760405162461bcd60e51b8152600401610af290615457565b610aca8282613a76565b600060018054612c8290614ec8565b80601f0160208091040260200160405190810160405280929190818152602001828054612cae90614ec8565b8015612cfb5780601f10612cd057610100808354040283529160200191612cfb565b820191906000526020600020905b815481529060010190602001808311612cde57829003601f168201915b50508551939450612d1793600193506020870192509050614540565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a168183604051612d499291906154ab565b60405180910390a15050565b612710811115612d775760405162461bcd60e51b8152600401610af2906154d9565b600280546001600160a01b0384166001600160b01b03199091168117600160a01b61ffff851602179091556040518281527f90d7ec04bcb8978719414f82e52e4cb651db41d0e6f8cea6118c2191e6183adb9060200160405180910390a25050565b600480546001600160a01b0319166001600160a01b0383169081179091556040517f299d17e95023f496e0ffc4909cff1a61f74bb5eb18de6f900f4155bfa1b3b33390600090a250565b6060818310612e3c57612e3c631960ccad60e11b6125ed565b6001831015612e4a57600192505b6000612e54612a67565b9050808310612e61578092505b60606000612e6e8761173c565b85871090810291508115612f1f578187870311612e8b5786860391505b60405192506001820160051b83016040526000612ea788612273565b905060008160400151612eb8575080515b60005b612ec48a61344c565b9250604083015160008114612edc5760009250612f01565b835115612ee857835192505b8b831860601b612f01576001820191508a8260051b8801525b5060018a019950888a1480612f1557508481145b15612ebb57855250505b50909695505050505050565b505050505050565b80612f74573415612f6f5760405162461bcd60e51b81526020600482015260066024820152652156616c756560d01b6044820152606401610af2565b61226d565b6000612f808285614f9c565b905060006001600160a01b03841673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1415612fb25750348114612fb6565b5034155b80612fe85760405162461bcd60e51b815260206004820152600260248201526110ab60f11b6044820152606401610af2565b60006001600160a01b03871615612fff5786613007565b613007610a6b565b9050611098856130156136ef565b8386613af2565b6000613026612a67565b90506109ca8383613b37565b6127108111156130545760405162461bcd60e51b8152600401610af2906154d9565b6040805180820182526001600160a01b038481168083526020808401868152600089815260038352869020945185546001600160a01b031916941693909317845591516001909301929092559151838152909185917f7365cf4122f072a3365c20d54eff9b38d73c096c28e1892ec8f5b0e403a0f12d910160405180910390a3505050565b60006111dd6076546106746136ef565b6040805160808101909152806130ff838061501b565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050908252506020908101906131489084018461501b565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050509082525060200161318f604084018461501b565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050908252506020016131d6606084018461501b565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050509152508051805160069161322291839160200190614540565b50602082810151805161323b9260018501920190614540565b5060408201518051613257916002840191602090910190614540565b5060608201518051613273916003840191602090910190614540565b5050604080516000815260001960208201527f6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c92500160405180910390a17f8edd7f36d5f01bd45e59cf55b0a670dcf701fc20f678970a8c243b2346d6acaf6132dc828061501b565b6132e9602085018561501b565b6132f6604087018761501b565b613303606089018961501b565b604051613317989796959493929190615502565b60405180910390a150565b6060611d95838360405180606001604052806027815260200161589060279139613b51565b6000836001600160a01b031663150b7a026133606128ce565b8786866040518563ffffffff1660e01b81526004016133829493929190615562565b6020604051808303816000875af19250505080156133bd575060408051601f3d908101601f191682019092526133ba91810190615595565b60015b61340f573d8080156133eb576040519150601f19603f3d011682016040523d82523d6000602084013e6133f0565b606091505b508051613407576134076368d2bf6b60e11b6125ed565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050949350505050565b600061343661256d565b6000928352600401602052506040902054151590565b613454614519565b6109ca61345f61256d565b60008481526004919091016020526040902054613c2c565b60606000600660405180608001604052908160008201805461349890614ec8565b80601f01602080910402602001604051908101604052809291908181526020018280546134c490614ec8565b80156135115780601f106134e657610100808354040283529160200191613511565b820191906000526020600020905b8154815290600101906020018083116134f457829003601f168201915b5050505050815260200160018201805461352a90614ec8565b80601f016020809104026020016040519081016040528092919081815260200182805461355690614ec8565b80156135a35780601f10613578576101008083540402835291602001916135a3565b820191906000526020600020905b81548152906001019060200180831161358657829003601f168201915b505050505081526020016002820180546135bc90614ec8565b80601f01602080910402602001604051908101604052809291908181526020018280546135e890614ec8565b80156136355780601f1061360a57610100808354040283529160200191613635565b820191906000526020600020905b81548152906001019060200180831161361857829003601f168201915b5050505050815260200160038201805461364e90614ec8565b80601f016020809104026020016040519081016040528092919081815260200182805461367a90614ec8565b80156136c75780601f1061369c576101008083540402835291602001916136c7565b820191906000526020600020905b8154815290600101906020018083116136aa57829003601f168201915b5050505050815250509050612423816000015182602001518360400151846060015187613c6f565b60006111dd613ca4565b60606000613708836002614f9c565b613713906002614f84565b6001600160401b0381111561372a5761372a614834565b6040519080825280601f01601f191660200182016040528015613754576020820181803683370190505b509050600360fc1b8160008151811061376f5761376f614fe5565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061379e5761379e614fe5565b60200101906001600160f81b031916908160001a90535060006137c2846002614f9c565b6137cd906001614f84565b90505b6001811115613845576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061380157613801614fe5565b1a60f81b82828151811061381757613817614fe5565b60200101906001600160f81b031916908160001a90535060049490941c9361383e8161536c565b90506137d0565b508315611d955760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610af2565b6000828152600a602090815260408083206001600160a01b0385168085529252808320805460ff1916600117905551339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b6000828152600c602052604081208054916001919061390e8385614f84565b90915550506000928352600c6020908152604080852083865260018101835281862080546001600160a01b039096166001600160a01b03199096168617905593855260029093019052912055565b613966828261297c565b6000828152600a602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b600054610100900460ff166139e55760405162461bcd60e51b8152600401610af29061540c565b565b600054610100900460ff16613a0e5760405162461bcd60e51b8152600401610af29061540c565b60005b8151811015610aca57600160436000848481518110613a3257613a32614fe5565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff191691151591909117905580613a6e816151e4565b915050613a11565b613a7e612be0565b54610100900460ff16613aa35760405162461bcd60e51b8152600401610af290615457565b81613aac61256d565b6002019080519060200190613ac2929190614540565b5080613acc61256d565b6003019080519060200190613ae2929190614540565b506001613aed61256d565b555050565b80613afc5761226d565b6001600160a01b03841673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1415613b2b57612f6f8282613cc6565b61226d84848484613d68565b610aca828260405180602001604052806000815250613dc1565b6060613b5c84612510565b613bb75760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610af2565b600080856001600160a01b031685604051613bd291906155b2565b600060405180830381855af49150503d8060008114613c0d576040519150601f19603f3d011682016040523d82523d6000602084013e613c12565b606091505b5091509150613c22828286613e3a565b9695505050505050565b613c34614519565b6001600160a01b03821681526001600160401b0360a083901c166020820152600160e01b82161515604082015260e89190911c606082015290565b60606000613c7d8585613e73565b90506000613c8d88888487613f00565b9050613c9881613f46565b98975050505050505050565b6000613caf3361155b565b15613cc1575060131936013560601c90565b503390565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114613d13576040519150601f19603f3d011682016040523d82523d6000602084013e613d18565b606091505b50509050806111fd5760405162461bcd60e51b815260206004820152601c60248201527b1b985d1a5d99481d1bdad95b881d1c985b9cd9995c8819985a5b195960221b6044820152606401610af2565b816001600160a01b0316836001600160a01b03161415613d875761226d565b6001600160a01b038316301415613dac57612f6f6001600160a01b0385168383613f77565b61226d6001600160a01b038516848484613fcd565b613dcb8383614005565b6001600160a01b0383163b156111fd576000613de561256d565b5490508281035b613dff6000868380600101945086613347565b613e1357613e136368d2bf6b60e11b6125ed565b818110613dec5781613e2361256d565b5414613e3357613e3360006125ed565b5050505050565b60608315613e49575081611d95565b825115613e595782518084602001fd5b8160405162461bcd60e51b8152600401610af29190614664565b81518151606091158015911515908290613e8a5750805b15613eba578484604051602001613ea29291906155c4565b604051602081830303815290604052925050506109ca565b8115613ed15784604051602001613ea2919061563b565b8015613ee85783604051602001613ea2919061567b565b50506040805160208101909152600081529392505050565b606084613f0c836140e4565b8585613f17866140e4565b89604051602001613f2d969594939291906156c3565b6040516020818303038152906040529050949350505050565b6060613f51826141e1565b604051602001613f6191906157d9565b6040516020818303038152906040529050919050565b6111fd8363a9059cbb60e01b8484604051602401613f969291906147eb565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152614334565b6040516001600160a01b038085166024830152831660448201526064810182905261226d9085906323b872dd60e01b90608401613f96565b600061400f61256d565b549050816140275761402763b562e8dd60e01b6125ed565b61403460008483856128d8565b614044836001841460e11b612967565b61404c61256d565b600083815260049190910160205260409020556001600160401b01820261407161256d565b6001600160a01b038516600081815260059290920160205260409091208054909201909155806140aa576140aa622e076360e81b6125ed565b818301825b808360006000805160206158b7833981519152600080a4600101808214156140af57816140da61256d565b55506111fd915050565b6060816141085750506040805180820190915260018152600360fc1b602082015290565b8160005b8115614132578061411c816151e4565b915061412b9050600a83614fd1565b915061410c565b6000816001600160401b0381111561414c5761414c614834565b6040519080825280601f01601f191660200182016040528015614176576020820181803683370190505b5090505b8415611b065761418b600183615355565b9150614198600a8661581e565b6141a3906030614f84565b60f81b8183815181106141b8576141b8614fe5565b60200101906001600160f81b031916908160001a9053506141da600a86614fd1565b945061417a565b606081516000141561420157505060408051602081019091526000815290565b600060405180606001604052806040815260200161585060409139905060006003845160026142309190614f84565b61423a9190614fd1565b614245906004614f9c565b6001600160401b0381111561425c5761425c614834565b6040519080825280601f01601f191660200182016040528015614286576020820181803683370190505b509050600182016020820185865187015b808210156142f2576003820191508151603f8160121c168501518453600184019350603f81600c1c168501518453600184019350603f8160061c168501518453600184019350603f8116850151845350600183019250614297565b505060038651066001811461430e576002811461432157614329565b603d6001830353603d6002830353614329565b603d60018303535b509195945050505050565b6000614389826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166144069092919063ffffffff16565b8051909150156111fd57808060200190518101906143a79190615832565b6111fd5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610af2565b6060611d9284846000858561441a85612510565b6144665760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610af2565b600080866001600160a01b0316858760405161448291906155b2565b60006040518083038185875af1925050503d80600081146144bf576040519150601f19603f3d011682016040523d82523d6000602084013e6144c4565b606091505b50915091506144d4828286613e3a565b979650505050505050565b5080546144eb90614ec8565b6000825580601f106144fb575050565b601f016020900490600052602060002090810190610b0491906145c4565b60408051608081018252600080825260208201819052918101829052606081019190915290565b82805461454c90614ec8565b90600052602060002090601f01602090048101928261456e57600085556145b4565b82601f1061458757805160ff19168380011785556145b4565b828001600101855582156145b4579182015b828111156145b4578251825591602001919060010190614599565b506145c09291506145c4565b5090565b5b808211156145c057600081556001016145c5565b6001600160e01b031981168114610b0457600080fd5b60006020828403121561460157600080fd5b8135611d95816145d9565b60005b8381101561462757818101518382015260200161460f565b8381111561226d5750506000910152565b6000815180845261465081602086016020860161460c565b601f01601f19169290920160200192915050565b602081526000611d956020830184614638565b60006020828403121561468957600080fd5b5035919050565b6001600160a01b0381168114610b0457600080fd5b80356122b581614690565b600080604083850312156146c357600080fd5b82356146ce81614690565b946020939093013593505050565b6000602082840312156146ee57600080fd5b8135611d9581614690565b60006080828403121561242657600080fd5b60008060008060008060c0878903121561472457600080fd5b86359550602087013561473681614690565b945060408701359350606087013561474d81614690565b92506080870135915060a08701356001600160401b0381111561476f57600080fd5b61477b89828a016146f9565b9150509295509295509295565b60008060006060848603121561479d57600080fd5b83356147a881614690565b925060208401356147b881614690565b929592945050506040919091013590565b600080604083850312156147dc57600080fd5b50508035926020909101359150565b6001600160a01b03929092168252602082015260400190565b6000806040838503121561481757600080fd5b82359150602083013561482981614690565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171561487257614872614834565b604052919050565b600082601f83011261488b57600080fd5b81356001600160401b038111156148a4576148a4614834565b6148b7601f8201601f191660200161484a565b8181528460208386010111156148cc57600080fd5b816020850160208301376000918101602001919091529392505050565b600082601f8301126148fa57600080fd5b813560206001600160401b0382111561491557614915614834565b8160051b61492482820161484a565b928352848101820192828101908785111561493e57600080fd5b83870192505b848310156144d457823561495781614690565b82529183019190830190614944565b80356001600160801b03811681146122b557600080fd5b600080600080600080600080610100898b03121561499a57600080fd5b6149a3896146a5565b975060208901356001600160401b03808211156149bf57600080fd5b6149cb8c838d0161487a565b985060408b01359150808211156149e157600080fd5b6149ed8c838d0161487a565b975060608b0135915080821115614a0357600080fd5b614a0f8c838d0161487a565b965060808b0135915080821115614a2557600080fd5b50614a328b828c016148e9565b945050614a4160a08a016146a5565b9250614a4f60c08a016146a5565b9150614a5d60e08a01614966565b90509295985092959890939650565b6020815281516020820152602082015160408201526040820151606082015260608201516080820152608082015160a082015260a082015160c082015260018060a01b0360c08301511660e0820152600060e0830151610100808185015250611b06610120840182614638565b60008083601f840112614aeb57600080fd5b5081356001600160401b03811115614b0257600080fd5b6020830191508360208260051b8501011115614b1d57600080fd5b9250929050565b8015158114610b0457600080fd5b600080600060408486031215614b4757600080fd5b83356001600160401b03811115614b5d57600080fd5b614b6986828701614ad9565b9094509250506020840135614b7d81614b24565b809150509250925092565b6020808252825182820181905260009190848201906040850190845b81811015612f1f57835183529284019291840191600101614ba4565b60008060008060008060c08789031215614bd957600080fd5b8635614be481614690565b9550602087013594506040870135614bfb81614690565b93506060870135925060808701356001600160401b0380821115614c1e57600080fd5b614c2a8a838b016146f9565b935060a0890135915080821115614c4057600080fd5b5061477b89828a0161487a565b600060208284031215614c5f57600080fd5b81356001600160401b03811115614c7557600080fd5b611b068482850161487a565b600080600060608486031215614c9657600080fd5b8335614ca181614690565b95602085013595506040909401359392505050565b600080600060608486031215614ccb57600080fd5b8335925060208401356147b881614690565b60008060408385031215614cf057600080fd5b8235614cfb81614690565b9150602083013561482981614b24565b600060208284031215614d1d57600080fd5b81356001600160401b03811115614d3357600080fd5b611b06848285016146f9565b60008060208385031215614d5257600080fd5b82356001600160401b03811115614d6857600080fd5b614d7485828601614ad9565b90969095509350505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015614dd557603f19888603018452614dc3858351614638565b94509285019290850190600101614da7565b5092979650505050505050565b608081526000614df56080830187614638565b8281036020840152614e078187614638565b90508281036040840152614e1b8186614638565b905082810360608401526144d48185614638565b60008060008060808587031215614e4557600080fd5b8435614e5081614690565b93506020850135614e6081614690565b92506040850135915060608501356001600160401b03811115614e8257600080fd5b614e8e8782880161487a565b91505092959194509250565b60008060408385031215614ead57600080fd5b8235614eb881614690565b9150602083013561482981614690565b600181811c90821680614edc57607f821691505b6020821081141561242657634e487b7160e01b600052602260045260246000fd5b6020808252600e908201526d139bdd08185d5d1a1bdc9a5e995960921b604082015260600190565b6000808335601e19843603018112614f3c57600080fd5b8301803591506001600160401b03821115614f5657600080fd5b6020019150600581901b3603821315614b1d57600080fd5b634e487b7160e01b600052601160045260246000fd5b60008219821115614f9757614f97614f6e565b500190565b6000816000190483118215151615614fb657614fb6614f6e565b500290565b634e487b7160e01b600052601260045260246000fd5b600082614fe057614fe0614fbb565b500490565b634e487b7160e01b600052603260045260246000fd5b6000823560fe1983360301811261501157600080fd5b9190910192915050565b6000808335601e1984360301811261503257600080fd5b8301803591506001600160401b0382111561504c57600080fd5b602001915036819003821315614b1d57600080fd5b601f8211156111fd57600081815260208120601f850160051c810160208610156150885750805b601f850160051c820191505b81811015612f2b57828155600101615094565b6001600160401b038311156150be576150be614834565b6150d2836150cc8354614ec8565b83615061565b6000601f84116001811461510657600085156150ee5750838201355b600019600387901b1c1916600186901b178355613e33565b600083815260209020601f19861690835b828110156151375786850135825560209485019460019092019101615117565b50868210156151545760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b813581556020820135600182015560408201356002820155606082013560038201556080820135600482015560a082013560058201556006810160c08301356151ae81614690565b81546001600160a01b0319166001600160a01b03919091161790556151d660e083018361501b565b61226d8183600786016150a7565b60006000198214156151f8576151f8614f6e565b5060010190565b6000808335601e1984360301811261521657600080fd5b83016020810192503590506001600160401b0381111561523557600080fd5b803603831315614b1d57600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60408082528181018490526000906060808401600587901b850182018885805b8a81101561533f57888403605f190185528235368d900360fe190181126152b2578283fd5b8c018035855260208082013581870152888201358987015287820135888701526080808301359087015260a080830135908701526101009060c0808401356152f981614690565b6001600160a01b03169088015260e0615314848201856151ff565b945083828a0152615328848a018683615244565b99830199985050509490940193505060010161528d565b50505086151560208701529350611b0692505050565b60008282101561536757615367614f6e565b500390565b60008161537b5761537b614f6e565b506000190190565b6000815161539581856020860161460c565b9290920192915050565b7402832b936b4b9b9b4b7b7399d1030b1b1b7bab73a1605d1b8152600083516153cf81601585016020880161460c565b7001034b99036b4b9b9b4b733903937b6329607d1b601591840191820152835161540081602684016020880161460c565b01602601949350505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60208082526034908201527f455243373231415f5f496e697469616c697a61626c653a20636f6e7472616374604082015273206973206e6f7420696e697469616c697a696e6760601b606082015260800190565b6040815260006154be6040830185614638565b82810360208401526154d08185614638565b95945050505050565b6020808252600f908201526e45786365656473206d61782062707360881b604082015260600190565b608081526000615516608083018a8c615244565b828103602084015261552981898b615244565b9050828103604084015261553e818789615244565b90508281036060840152615553818587615244565b9b9a5050505050505050505050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090613c2290830184614638565b6000602082840312156155a757600080fd5b8151611d95816145d9565b6000825161501181846020870161460c565b6834b6b0b3b2911d101160b91b815282516000906155e981600985016020880161460c565b741116101130b734b6b0ba34b7b72fbab936111d101160591b600991840191820152835161561e81601e84016020880161460c565b631116101160e11b601e9290910191820152602201949350505050565b6834b6b0b3b2911d101160b91b8152815160009061566081600985016020870161460c565b631116101160e11b6009939091019283015250600d01919050565b7030b734b6b0ba34b7b72fbab936111d101160791b815281516000906156a881601185016020870161460c565b631116101160e11b6011939091019283015250601501919050565b693d913730b6b2911d101160b11b815286516000906156e981600a850160208c0161460c565b600160fd1b600a91840191820152875161570a81600b840160208c0161460c565b631116101160e11b600b929091019182018190526e3232b9b1b934b83a34b7b7111d101160891b600f830152875161574981601e850160208c0161460c565b601e9201918201528551615764816022840160208a0161460c565b770383937b832b93a34b2b9911d103d91373ab6b132b9111d160451b602292909101918201526157cc6157bd6157b76157a0603a850189615383565b6a1610113730b6b2911d101160a91b8152600b0190565b86615383565b62227d7d60e81b815260030190565b9998505050505050505050565b7f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c00000081526000825161581181601d85016020870161460c565b91909101601d0192915050565b60008261582d5761582d614fbb565b500690565b60006020828403121561584457600080fd5b8151611d9581614b2456fe4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa26469706673582212201b80ee89dfe396ff4fd2f5a86b9b1ead1737e205d2e03fa5c53ed98033a9896864736f6c634300080c0033",
    "sourceMap": "1546:8327:364:-:0;;;2563:28;;;;;;;;;-1:-1:-1;3111:19:436;3134:13;;;;;;3133:14;;3179:34;;;;-1:-1:-1;3197:12:436;;3212:1;3197:12;;;;:16;3179:34;3178:108;;;;3220:44;3258:4;3220:29;;;;;:44;;:::i;:::-;3219:45;:66;;;;-1:-1:-1;3268:12:436;;;;;:17;3219:66;3157:201;;;;-1:-1:-1;;;3157:201:436;;216:2:644;3157:201:436;;;198:21:644;255:2;235:18;;;228:30;294:34;274:18;;;267:62;-1:-1:-1;;;345:18:644;;;338:44;399:19;;3157:201:436;;;;;;;;3368:12;:16;;-1:-1:-1;;3368:16:436;3383:1;3368:16;;;3394:65;;;;3428:13;:20;;-1:-1:-1;;3428:20:436;;;;;3394:65;3483:14;3479:99;;;3529:5;3513:21;;-1:-1:-1;;3513:21:436;;;3553:14;;-1:-1:-1;581:36:644;;3553:14:436;;569:2:644;554:18;3553:14:436;;;;;;;3479:99;3101:483;1546:8327:364;;1186:320:462;-1:-1:-1;;;;;1476:19:462;;:23;;;1186:320::o;429:194:644:-;1546:8327:364;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "1546:8327:364:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4334:301;;;;;;;;;;-1:-1:-1;4334:301:364;;;;;:::i;:::-;;:::i;:::-;;;661:14:644;;654:22;636:41;;624:2;609:18;4334:301:364;;;;;;;;9336:122:46;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;676:104:72:-;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;1625:32:644;;;1607:51;;1595:2;1580:18;676:104:72;1461:203:644;16415:247:46;;;;;;;;;;-1:-1:-1;16415:247:46;;;;;:::i;:::-;;:::i;16143:122::-;;;;;;:::i;:::-;;:::i;:::-;;1133:173:68;;;;;;;;;;-1:-1:-1;1133:173:68;;;;;:::i;:::-;;:::i;4918:365:46:-;;;;;;;;;;;;;:::i;:::-;;;2847:25:644;;;2835:2;2820:18;4918:365:46;2701:177:644;4806:2222:56;;;;;;;;;;-1:-1:-1;4806:2222:56;;;;;:::i;:::-;;:::i;20209:3591:46:-;;;;;;:::i;:::-;;:::i;2740:120:69:-;;;;;;;;;;-1:-1:-1;2740:120:69;;;;;:::i;:::-;2808:7;2834:19;;;:13;:19;;;;;;;2740:120;1421:347:75;;;;;;;;;;-1:-1:-1;1421:347:75;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;3255:271:69:-;;;;;;;;;;-1:-1:-1;3255:271:69;;;;;:::i;:::-;;:::i;4466:217::-;;;;;;;;;;-1:-1:-1;4466:217:69;;;;;:::i;:::-;;:::i;8167:99:364:-;;;;;;;;;;;;;:::i;23891:187:46:-;;;;;;:::i;:::-;;:::i;8491:184:364:-;;;;;;;;;;-1:-1:-1;8491:184:364;;;;;:::i;:::-;;:::i;2656:1095::-;;;;;;;;;;-1:-1:-1;2656:1095:364;;;;;:::i;:::-;;:::i;2008:381:75:-;;;;;;;;;;-1:-1:-1;2008:381:75;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;8973:32:644;;;8955:51;;9054:6;9042:19;;;9037:2;9022:18;;9015:47;8928:18;2008:381:75;8783:285:644;918:134:209;;;;;;;;;;-1:-1:-1;918:134:209;;;;;:::i;:::-;;:::i;3087:256:75:-;;;;;;;;;;-1:-1:-1;3087:256:75;;;;;:::i;:::-;;:::i;10745:150:46:-;;;;;;;;;;-1:-1:-1;10745:150:46;;;;;:::i;:::-;;:::i;1189:228:72:-;;;;;;;;;;-1:-1:-1;1189:228:72;;;;;:::i;:::-;;:::i;7548:177:56:-;;;;;;;;;;-1:-1:-1;7548:177:56;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;6165:263:46:-;;;;;;;;;;-1:-1:-1;6165:263:46;;;;;:::i;:::-;;:::i;1949:2760:56:-;;;;;;;;;;-1:-1:-1;1949:2760:56;;;;;:::i;:::-;;:::i;3016:319:44:-;;;;;;;;;;-1:-1:-1;3016:319:44;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;699:1187:56:-;;;;;;:::i;:::-;;:::i;871:86:68:-;;;;;;;;;;-1:-1:-1;944:6:68;;-1:-1:-1;;;;;944:6:68;871:86;;1643:633:70;;;;;;;;;;-1:-1:-1;1643:633:70;;;;;:::i;:::-;;:::i;1324:131:69:-;;;;;;;;;;-1:-1:-1;1324:131:69;;;;;:::i;:::-;;:::i;1003:188:54:-;;;;;;;;;;-1:-1:-1;1003:188:54;;;;;:::i;:::-;;:::i;9529:126:46:-;;;;;;;;;;;;;:::i;2364:217:44:-;;;;;;;;;;-1:-1:-1;2364:217:44;;;;;:::i;:::-;;:::i;4281:288:75:-;;;;;;;;;;-1:-1:-1;4281:288:75;;;;;:::i;:::-;;:::i;742:49:69:-;;;;;;;;;;-1:-1:-1;742:49:69;787:4;742:49;;16989:255:46;;;;;;;;;;-1:-1:-1;16989:255:46;;;;;:::i;:::-;;:::i;7940:145:364:-;;;;;;;;;;;;;:::i;2206:211:69:-;;;;;;;;;;-1:-1:-1;2206:211:69;;;;;:::i;:::-;;:::i;417:217:76:-;;;;;;;;;;-1:-1:-1;417:217:76;;;;;:::i;:::-;;:::i;698:319:63:-;;;;;;;;;;-1:-1:-1;698:319:63;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;7807:255:56:-;;;;;;;;;;-1:-1:-1;7807:255:56;;;;;:::i;:::-;7926:29;7995:50;;;:36;:50;;;;;;;;-1:-1:-1;;;;;7995:60:56;;;;;;;;;;;;7807:255;2499:144:75;;;;;;;;;;-1:-1:-1;2599:16:75;;-1:-1:-1;;;;;2599:16:75;;;-1:-1:-1;;;2624:10:75;;;;2499:144;;325:40:76;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;24659:405:46:-;;;;;;:::i;:::-;;:::i;1411:579:44:-;;;;;;;;;;-1:-1:-1;1411:579:44;;;;;:::i;:::-;;:::i;:::-;;;;;;18112:13:644;;-1:-1:-1;;;;;18108:39:644;18090:58;;18208:4;18196:17;;;18190:24;-1:-1:-1;;;;;18186:49:644;18164:20;;;18157:79;18306:4;18294:17;;;18288:24;18281:32;18274:40;18252:20;;;18245:70;18375:4;18363:17;;;18357:24;18383:8;18353:39;18331:20;;;18324:69;;;;18077:3;18062:19;;17877:522;7116:367:56;;;;;;;;;;;;;:::i;3998:305:364:-;;;;;;;;;;-1:-1:-1;3998:305:364;;;;;:::i;:::-;;:::i;2683:398:70:-;;;;;;;;;;-1:-1:-1;2683:398:70;;;;;:::i;:::-;;:::i;3897:171:69:-;;;;;;;;;;-1:-1:-1;3897:171:69;;;;;:::i;:::-;;:::i;430:40:56:-;;;;;;;;;;-1:-1:-1;430:40:56;;;;;;;;;;;;;18578:25:644;;;18634:2;18619:18;;18612:34;;;;18551:18;430:40:56;18404:248:644;4788:93:364;;;;;;;;;;-1:-1:-1;4774:1:364;4788:93;8167:99;565:34:54;;;;;;;;;;;;;:::i;17394:186:46:-;;;;;;;;;;-1:-1:-1;17394:186:46;;;;;:::i;:::-;;:::i;4334:301:364:-;4509:4;4536:36;4560:11;4536:23;:36::i;:::-;:92;;;-1:-1:-1;;;;;;;;;;4576:52:364;;;4536:92;4529:99;4334:301;-1:-1:-1;;4334:301:364:o;9336:122:46:-;9390:13;9422:23;:21;:23::i;:::-;:29;;9415:36;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9336:122;:::o;676:104:72:-;764:9;;-1:-1:-1;;;;;764:9:72;;676:104::o;16415:247:46:-;16491:7;16515:16;16523:7;16515;:16::i;:::-;16510:73;;16533:50;-1:-1:-1;;;16533:7:46;:50::i;:::-;16601:23;:21;:23::i;:::-;:48;;;;:39;;:48;;-1:-1:-1;16601:48:46;;;:54;-1:-1:-1;;;;;16601:54:46;;16415:247::o;16143:122::-;16231:27;16240:2;16244:7;16253:4;16231:8;:27::i;:::-;16143:122;;:::o;1133:173:68:-;1203:14;:12;:14::i;:::-;1198:70;;1233:24;;-1:-1:-1;;;1233:24:68;;;;;;;:::i;:::-;;;;;;;;1198:70;1277:22;1289:9;1277:11;:22::i;:::-;1133:173;:::o;4918:365:46:-;4979:7;4774:1:364;5212:23:46;:21;:23::i;:::-;:36;;;5172:23;:21;:23::i;:::-;:37;:76;:94;;4918:365;-1:-1:-1;4918:365:46:o;4806:2222:56:-;5045:15;5114:39;;;:25;:39;;;;;;;;5072:81;;;;;;;;;;;;;;;;;;;;;;5114:25;5072:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5072:81:56;;;;;;;;;;5045:15;;5072:81;5114:39;5072:81;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5072:81:56;;;;-1:-1:-1;;;5184:40:56;;;;5255:31;;;;5320:26;;;;5361:28;;;;5072:81;;-1:-1:-1;5184:40:56;;5255:31;;5320:26;5361:42;5357:515;;5436:425;5472:21;:15;;:21;:::i;:::-;5436:425;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5511:28:56;;;;;;-1:-1:-1;5630:8:56;;5664:38;;;;;5728:29;;;;;5783:24;;;;;;;;:::i;:::-;5588:241;;-1:-1:-1;;;;;;20563:2:644;20599:15;;;20595:24;;5588:241:56;;;20583:37:644;20636:12;;;20629:28;;;;20673:12;;;20666:28;;;;20728:15;;;20724:24;20710:12;;;20703:46;20765:13;;5588:241:56;;;;;;;;;;;;5557:290;;;;;;5436:18;:425::i;:::-;-1:-1:-1;5419:442:56;-1:-1:-1;5357:515:56;5886:10;5882:534;;;5925:38;;;;:129;;6044:10;5925:129;;;5987:15;:38;;;5925:129;5912:142;;-1:-1:-1;;6081:15:56;:29;;;:50;;:127;;6198:10;6081:127;;;6150:15;:29;;;6081:127;6068:140;;-1:-1:-1;;6238:15:56;:29;;;:50;;:92;;;;-1:-1:-1;6328:1:56;6292:24;;;;;;;;:::i;:::-;-1:-1:-1;;;;;6292:38:56;;;6238:92;:167;;6392:13;6238:167;;;6349:24;;;;;;;;:::i;:::-;6222:183;;5882:534;6426:29;6458:50;;;:36;:50;;;;;;;;-1:-1:-1;;;;;6458:60:56;;;;;;;;;;;;6533:26;;;;;;;;;:58;;;6581:10;6563:14;:28;;6533:58;6529:115;;;6607:26;;-1:-1:-1;;;6607:26:56;;20991:2:644;6607:26:56;;;20973:21:644;21030:2;21010:18;;;21003:30;-1:-1:-1;;;21049:18:644;;;21042:46;21105:18;;6607:26:56;20789:340:644;6529:115:56;6658:14;;;:66;;-1:-1:-1;6713:10:56;6677:33;6689:21;6677:9;:33;:::i;:::-;:46;6658:66;6654:111;;;6740:14;;-1:-1:-1;;;6740:14:56;;;;;;21601:2:644;21583:21;;;21640:1;21620:18;;;21613:29;-1:-1:-1;;;21673:2:644;21658:18;;21651:34;21717:2;21702:18;;21399:327;6654:111:56;6824:17;:36;;;6812:9;6778:17;:31;;;:43;;;;:::i;:::-;:82;6774:133;;;6876:20;;-1:-1:-1;;;6876:20:56;;21933:2:644;6876:20:56;;;21915:21:644;21972:2;21952:18;;;21945:30;-1:-1:-1;;;21991:18:644;;;21984:40;22041:18;;6876:20:56;21731:334:644;6774:133:56;6921:32;;6956:15;-1:-1:-1;6917:105:56;;;6987:24;;-1:-1:-1;;;6987:24:56;;22272:2:644;6987:24:56;;;22254:21:644;22311:2;22291:18;;;22284:30;-1:-1:-1;;;22330:18:644;;;22323:44;22384:18;;6987:24:56;22070:338:644;6917:105:56;5062:1966;;;;;4806:2222;;;;;;;;:::o;20209:3591:46:-;20346:27;20376;20395:7;20376:18;:27::i;:::-;-1:-1:-1;;;;;20528:22:46;;;;20346:57;;-1:-1:-1;20586:45:46;;;;20582:95;;20633:44;-1:-1:-1;;;20633:7:46;:44::i;:::-;20689:27;20718:23;20745:35;20772:7;20745:26;:35::i;:::-;20688:92;;;;20877:68;20902:15;20919:4;20925:19;:17;:19::i;:::-;-1:-1:-1;;;;;18791:32:46;;;18637:28;;18918:20;;18940:30;;18915:56;;18341:646;20877:68;20872:188;;20964:43;20981:4;20987:19;:17;:19::i;20964:43::-;20959:101;;21009:51;-1:-1:-1;;;21009:7:46;:51::i;:::-;21071:43;21093:4;21099:2;21103:7;21112:1;21071:21;:43::i;:::-;21203:15;21200:157;;;21341:1;21320:19;21313:30;21200:157;21729:23;:21;:23::i;:::-;-1:-1:-1;;;;;21729:48:46;;;;;;:42;;;;;:48;;;;;21727:50;;-1:-1:-1;;21727:50:46;;;21821:23;:21;:23::i;:::-;-1:-1:-1;;;;;21821:46:46;;;;;;:42;;;;;:46;;;;;21819:48;;;;;;22184:143;21821:46;-1:-1:-1;;;22184:18:46;:143::i;:::-;22131:23;:21;:23::i;:::-;:50;;;;:41;;;;;:50;;;;;:196;-1:-1:-1;;;22444:47:46;;22440:689;;22548:1;22538:11;;22669:23;:21;:23::i;:::-;:54;;;;:41;;;;;:54;;;;;;22665:450;;22829:23;:21;:23::i;:::-;:37;22814:52;;22810:287;;23055:19;22998:23;:21;:23::i;:::-;:54;;;;:41;;;;;:54;;;;;:76;22810:287;22498:631;22440:689;-1:-1:-1;;;;;23257:20:46;;23628:7;23257:20;23560:4;-1:-1:-1;;;;;;;;;;;23238:16:46;;23371:292;23686:13;23682:58;;23701:39;-1:-1:-1;;;23701:7:46;:39::i;:::-;20336:3464;;;;20209:3591;;;:::o;1421:347:75:-;1558:16;1576:21;1614:17;1633:11;1648:31;1671:7;1648:22;:31::i;:::-;1613:66;;-1:-1:-1;1613:66:75;;-1:-1:-1;1613:66:75;;;-1:-1:-1;1755:6:75;1736:15;1613:66;1736:9;:15;:::i;:::-;1735:26;;;;:::i;:::-;1719:42;;1603:165;;1421:347;;;;;:::o;3255:271:69:-;3350:19;;;;:13;:19;;;;;;3339:43;;3371:10;3339;:43::i;:::-;3396:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;3396:23:69;;;;;;;;;;;;3392:93;;;3435:39;;-1:-1:-1;;;3435:39:69;;23045:2:644;3435:39:69;;;23027:21:644;23084:2;23064:18;;;23057:30;23123:31;23103:18;;;23096:59;23172:18;;3435:39:69;22843:353:644;3392:93:69;3494:25;3505:4;3511:7;3494:10;:25::i;4466:217::-;4557:10;-1:-1:-1;;;;;4557:21:69;;;4553:88;;4594:36;;-1:-1:-1;;;4594:36:69;;23403:2:644;4594:36:69;;;23385:21:644;23442:2;23422:18;;;23415:30;-1:-1:-1;;;23461:18:644;;;23454:56;23527:18;;4594:36:69;23201:350:644;4553:88:69;4650:26;4662:4;4668:7;4650:11;:26::i;8167:99:364:-;8219:7;8245:14;:12;:14::i;:::-;8238:21;;8167:99;:::o;23891:187:46:-;24032:39;24049:4;24055:2;24059:7;24032:39;;;;;;;;;;;;:16;:39::i;:::-;23891:187;;;:::o;8491:184:364:-;8648:20;8654:7;8663:4;8648:5;:20::i;2656:1095::-;1660:38:47;:36;:38::i;:::-;:52;;;;;;:158;;1767:38;:36;:38::i;:::-;:51;;;1766:52;1660:158;;;3233:4;3297:17;3340:7;1731:16;1639:260;;;;-1:-1:-1;;;1639:260:47;;23758:2:644;1639:260:47;;;23740:21:644;23797:2;23777:18;;;23770:30;23836:34;23816:18;;;23809:62;-1:-1:-1;;;23887:18:644;;;23880:53;23950:19;;1639:260:47;23556:419:644;1639:260:47;1910:19;1933:38;:36;:38::i;:::-;:52;;;;;;1932:53;;-1:-1:-1;1995:176:47;;;;2084:4;2029:38;:36;:38::i;:::-;:59;;;;;;;-1:-1:-1;;2029:59:47;;;;;;;;;:52;2102:38;:36;:38::i;:::-;:58;;-1:-1:-1;;2102:58:47;;;;;;;;;;1995:176;3111:19:436::1;3134:13:::0;::::1;::::0;::::1;;;3133:14;::::0;3179:34;::::1;;;-1:-1:-1::0;3197:12:436::1;::::0;3212:1:::1;3197:12;::::0;;::::1;:16;3179:34;3178:108;;;;3220:44;3258:4;3220:29;:44::i;:::-;3219:45;:66;;;;-1:-1:-1::0;3268:12:436::1;::::0;::::1;;::::0;:17:::1;3219:66;3157:201;;;::::0;-1:-1:-1;;;3157:201:436;;24182:2:644;3157:201:436::1;::::0;::::1;24164:21:644::0;24221:2;24201:18;;;24194:30;24260:34;24240:18;;;24233:62;-1:-1:-1;;;24311:18:644;;;24304:44;24365:19;;3157:201:436::1;23980:410:644::0;3157:201:436::1;3368:12;:16:::0;;-1:-1:-1;;3368:16:436::1;3383:1;3368:16;::::0;;3394:65;::::1;;;3428:13;:20:::0;;-1:-1:-1;;3428:20:436::1;;;::::0;;3394:65:::1;3024:26:364::2;3082:24;3192:41;3214:18:::0;3192:21:::2;:41::i;:::-;3243:30;3258:5;3265:7;3243:14;:30::i;:::-;3284:31;3302:12;3284:17;:31::i;:::-;3325:26;3337:13;3325:11;:26::i;:::-;3362:45;787:4:69;3393:13:364::0;3362:10:::2;:45::i;:::-;3417:38;3428:11;3441:13;3417:10;:38::i;:::-;3465:40;3476:13;3491;3465:10;:40::i;:::-;3515:37;3526:13;3549:1;3515:10;:37::i;:::-;3563:56;3588:17;3607:11;-1:-1:-1::0;;;;;3563:56:364::2;:24;:56::i;:::-;3629:42;3656:14;3629:26;:42::i;:::-;3682:12;:28:::0;;;;3720:10:::2;:24:::0;3479:99:436;::::1;;;3529:5;3513:21:::0;;-1:-1:-1;;3513:21:436::1;::::0;;3553:14:::1;::::0;-1:-1:-1;24547:36:644;;3553:14:436::1;::::0;24535:2:644;24520:18;3553:14:436::1;;;;;;;3479:99;3101:483;2197:14:47::0;2193:105;;;2282:5;2227:38;:36;:38::i;:::-;:60;;;;;;;-1:-1:-1;;2227:60:47;;;;;;;;;2193:105;1358:946;2656:1095:364;;;;;;;;:::o;2008:381:75:-;2088:7;2152:29;;;:19;:29;;;;;;;;2115:66;;;;;;;;;;-1:-1:-1;;;;;2115:66:75;;;;;;;;;;;;;;;;2088:7;;2211:39;:171;;2327:25;;2361:19;;;;2211:171;;;2270:16;;-1:-1:-1;;;;;2270:16:75;;;-1:-1:-1;;;2295:10:75;;;;2211:171;2192:190;;;;;2008:381;;;:::o;918:134:209:-;-1:-1:-1;;;;;1017:28:209;994:4;1017:28;;;:17;:28;;;;;;;;;918:134::o;3087:256:75:-;3199:20;:18;:20::i;:::-;3194:76;;3235:24;;-1:-1:-1;;;3235:24:75;;;;;;;:::i;3194:76::-;3280:56;3305:17;3324:11;3280:24;:56::i;10745:150:46:-;10817:7;10859:27;10878:7;10859:18;:27::i;1189:228:72:-;1279:29;:27;:29::i;:::-;1274:85;;1324:24;;-1:-1:-1;;;1324:24:72;;;;;;;:::i;1274:85::-;1368:42;1395:14;1368:26;:42::i;7548:177:56:-;7624:31;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7624:31:56;7679:39;;;;:25;:39;;;;;;;;;7667:51;;;;;;;;;;;;;;;;;;;;;;7679:25;7667:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7667:51:56;;;;;;;;;;;;7679:39;7667:51;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7548:177;;;:::o;6165:263:46:-;6237:7;-1:-1:-1;;;;;6260:19:46;;6256:69;;6281:44;-1:-1:-1;;;6281:7:46;:44::i;:::-;-1:-1:-1;;;;;6342:23:46;:21;:23::i;:::-;:42;;:49;6385:5;-1:-1:-1;;;;;6342:49:46;-1:-1:-1;;;;;6342:49:46;;;;;;;;;;;;;:79;6335:86;;6165:263;;;:::o;1949:2760:56:-;2114:24;:22;:24::i;:::-;2109:80;;2154:24;;-1:-1:-1;;;2154:24:56;;;;;;;:::i;2109:80::-;2228:14;:29;2296:20;;2228:29;2733:108;;;;2791:39;2812:18;2791;:39;:::i;:::-;2775:55;;2733:108;2851:20;:41;;;:14;2902:45;;;:29;;3003:643;3023:22;;;3003:643;;;3074:6;;;:69;;;3114:11;;3126:1;3114:14;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:29;3084:59;;3074:69;3066:84;;;;-1:-1:-1;;;3066:84:56;;25266:2:644;3066:84:56;;;25248:21:644;25305:1;25285:18;;;25278:29;-1:-1:-1;;;25323:18:644;;;25316:32;25365:18;;3066:84:56;25064:325:644;3066:84:56;3165:28;3196:25;3165:28;3222:17;3238:1;3222:13;:17;:::i;:::-;3196:44;;;;;;;;;;;:58;;;3165:89;;3295:11;;3307:1;3295:14;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:33;;;3272:20;:56;3268:123;;;3348:28;;-1:-1:-1;;;3348:28:56;;25596:2:644;3348:28:56;;;25578:21:644;25635:2;25615:18;;;25608:30;-1:-1:-1;;;25654:18:644;;;25647:48;25712:18;;3348:28:56;25394:342:644;3268:123:56;3452:11;;3464:1;3452:14;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;3405:25;:44;3431:17;3447:1;3431:13;:17;:::i;:::-;3405:44;;;;;;;;;;;:61;;;;;;:::i;:::-;-1:-1:-1;3541:20:56;;-1:-1:-1;3480:25:56;:44;3506:17;3522:1;3506:13;:17;:::i;:::-;3480:44;;;;;;;;;;;-1:-1:-1;3480:44:56;:58;;:81;3606:11;;3618:1;3606:14;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:29;;-1:-1:-1;3047:3:56;;-1:-1:-1;3047:3:56;;;:::i;:::-;;;;3003:643;;;;4186:22;4182:446;;;4241:18;4224:129;4265:13;4261:1;:17;4224:129;;;4310:28;;;;:25;:28;;;;;4303:35;;;;;;;;;4310:25;4303:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4303:35:56;;;4310:28;4303:35;;;;4310:28;4303:35;:::i;:::-;;;4280:3;;;;;:::i;:::-;;;;4224:129;;;;4182:446;;;4387:39;;;4383:235;;;4463:11;4446:158;4487:18;4483:1;:22;4446:158;;;4541:25;:44;4567:17;4583:1;4567:13;:17;:::i;:::-;4541:44;;;;;;;;;;;-1:-1:-1;4541:44:56;;;4534:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4534:51:56;;;4541:44;4534:51;;;;-1:-1:-1;4534:51:56;:::i;:::-;;;4507:3;;;;;:::i;:::-;;;;4446:158;;;;4383:235;4643:59;4666:11;;4679:22;4643:59;;;;;;;;:::i;:::-;;;;;;;;2099:2610;;;;1949:2760;;;:::o;3016:319:44:-;3094:16;4774:1:364;3122:13:44;3178:14;:12;:14::i;:::-;3163:29;;3202:25;3250:4;3241:5;:13;3237:66;;3267:36;3284:5;3291;3298:4;3267:16;:36::i;:::-;3256:47;;3237:66;3320:8;3016:319;-1:-1:-1;;;;3016:319:44:o;699:1187:56:-;1048:25;1076:27;:25;:27::i;:::-;1048:55;;1114:103;1126:17;1145:16;:14;:16::i;:::-;1163:9;1174;1185:14;1201:15;1114:11;:103::i;:::-;-1:-1:-1;1262:44:56;;;;:25;:44;;;;;:25;:58;:71;;1324:9;;1262:44;:71;;1324:9;;1262:71;:::i;:::-;;;;-1:-1:-1;;1343:55:56;;;;:36;:55;;;;;1420:9;;1399:16;:14;:16::i;:::-;-1:-1:-1;;;;;1343:73:56;-1:-1:-1;;;;;1343:73:56;;;;;;;;;;;;;:86;;;;;;;:::i;:::-;;;;-1:-1:-1;1486:70:56;;-1:-1:-1;1515:1:56;1519:9;1530;1541:14;1486:20;:70::i;:::-;1615:20;1638:44;1661:9;1672;1638:22;:44::i;:::-;1615:67;;1749:9;-1:-1:-1;;;;;1698:86:56;1731:16;:14;:16::i;:::-;-1:-1:-1;;;;;1698:86:56;1712:17;1698:86;1760:12;1774:9;1698:86;;;;;;18578:25:644;;;18634:2;18619:18;;18612:34;18566:2;18551:18;;18404:248;1698:86:56;;;;;;;;942:944;;699:1187;;;;;;:::o;1643:633:70:-;1727:14;1776:17;;;:11;:17;;;;;:23;1727:14;;1833:437;1857:12;1853:1;:16;1833:437;;;1937:1;1897:17;;;:11;:17;;;;;;;;:28;;;:25;;:28;;;;;;-1:-1:-1;;;;;1897:28:70;:42;1893:367;;1972:5;1963;:14;1959:133;;;2010:17;;;;:11;:17;;;;;;;;:28;;;:25;;;;:28;;;;-1:-1:-1;;;;;2010:28:70;;-1:-1:-1;2060:13:70;;-1:-1:-1;;2060:13:70;1959:133;2109:10;2118:1;2109:10;;:::i;:::-;;;1893:367;;;2144:25;2152:4;2166:1;2144:7;:25::i;:::-;:71;;;;-1:-1:-1;2178:17:70;;;;:11;:17;;;;;;;;:37;;;:25;;:37;;;;;;2173:42;;2144:71;2140:120;;;2235:10;2244:1;2235:10;;:::i;:::-;;;2140:120;1871:6;1876:1;1871:6;;:::i;:::-;;;1833:437;;;;1743:533;;1643:633;;;;:::o;1324:131:69:-;1402:4;1425:14;;;:8;:14;;;;;;;;-1:-1:-1;;;;;1425:23:69;;;;;;;;;;;;;;;1324:131::o;1003:188:54:-;1080:20;:18;:20::i;:::-;1075:76;;1116:24;;-1:-1:-1;;;1116:24:54;;;;;;;:::i;1075:76::-;1161:23;1179:4;1161:17;:23::i;9529:126:46:-;9585:13;9617:23;:21;:23::i;:::-;:31;;9610:38;;;;;:::i;2364:217:44:-;2503:16;2538:36;2555:5;2562;2569:4;2538:16;:36::i;:::-;2531:43;;2364:217;;;;;;:::o;4281:288:75:-;4428:20;:18;:20::i;:::-;4423:76;;4464:24;;-1:-1:-1;;;4464:24:75;;;;;;;:::i;4423:76::-;4509:53;4535:8;4545:10;4557:4;4509:25;:53::i;16989:255:46:-;17159:8;17083:23;:21;:23::i;:::-;:42;;:63;17126:19;:17;:19::i;:::-;-1:-1:-1;;;;;17083:63:46;;;;;;;;;;;;;;;;;-1:-1:-1;17083:63:46;;;:73;;;;;;;;;;;;:84;;-1:-1:-1;;17083:84:46;;;;;;;;;;;17197:19;:17;:19::i;:::-;-1:-1:-1;;;;;17182:55:46;;17228:8;17182:55;;;;661:14:644;654:22;636:41;;624:2;609:18;;496:187;17182:55:46;;;;;;;;16989:255;;:::o;7940:145:364:-;7986:7;4774:1;8036:14;:12;:14::i;:::-;:32;8029:39;;7940:145;:::o;2206:211:69:-;2285:4;2306:14;;;:8;:14;;;;;;;;:26;;;;;;;;;;;2301:88;;-1:-1:-1;2355:14:69;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;2355:23:69;;;;;;;;;;;;2348:30;;2301:88;-1:-1:-1;2406:4:69;2206:211;;;;:::o;417:217:76:-;515:23;:21;:23::i;:::-;510:79;;554:24;;-1:-1:-1;;;554:24:76;;;;;;;:::i;510:79::-;598:29;617:9;598:18;:29::i;698:319:63:-;775:22;831:4;-1:-1:-1;;;;;819:24:63;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;809:34;;858:9;853:134;873:15;;;853:134;;;922:54;961:4;968;;973:1;968:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;922:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;922:30:63;;-1:-1:-1;;;922:54:63:i;:::-;909:7;917:1;909:10;;;;;;;;:::i;:::-;;;;;;:67;;;;890:3;;;;;:::i;:::-;;;;853:134;;;;698:319;;;;:::o;325:40:76:-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;24659:405:46:-;24828:31;24841:4;24847:2;24851:7;24828:12;:31::i;:::-;-1:-1:-1;;;;;24873:14:46;;;:19;24869:189;;24911:56;24942:4;24948:2;24952:7;24961:5;24911:30;:56::i;:::-;24906:152;;24987:56;-1:-1:-1;;;24987:7:46;:56::i;:::-;24659:405;;;;:::o;1411:579:44:-;1535:31;;:::i;:::-;4774:1:364;1610:7:44;:26;1606:368;;1670:14;:12;:14::i;:::-;1660:7;:24;1656:304;;;1840:51;1848:32;1872:7;1848:23;:32::i;:::-;1840:51;;-1:-1:-1;;1882:9:44;;;;1840:51;;;1920:21;1933:7;1920:12;:21::i;1656:304::-;1411:579;;;:::o;7116:367:56:-;7242:20;;:14;7210:29;7174:7;;;;7210:52;;7242:20;7210:52;:::i;:::-;7198:64;;7193:252;7268:14;:29;7264:33;;7193:252;;;7341:25;:32;7367:5;7371:1;7367;:5;:::i;:::-;7341:32;;;;;;;;;;;:47;;;7322:15;:66;7318:117;;7415:5;7419:1;7415;:5;:::i;:::-;7408:12;;;7116:367;:::o;7318:117::-;7299:3;;;;:::i;:::-;;;;7193:252;;;-1:-1:-1;7455:21:56;;-1:-1:-1;;;7455:21:56;;33247:2:644;7455:21:56;;;33229::644;33286:2;33266:18;;;33259:30;-1:-1:-1;;;33305:18:644;;;33298:41;33356:18;;7455:21:56;33045:335:644;3998:305:364;4153:13;4187:17;4195:8;4187:7;:17::i;:::-;4182:62;;4220:13;;-1:-1:-1;;;4220:13:364;;33587:2:644;4220:13:364;;;33569:21:644;33626:1;33606:18;;;33599:29;-1:-1:-1;;;33644:18:644;;;33637:33;33687:18;;4220:13:364;33385:326:644;4182:62:364;4261:35;4287:8;4261:25;:35::i;2683:398:70:-;2757:13;2805:17;;;:11;:17;;;;;:23;2757:13;2839:161;2863:12;2859:1;:16;2839:161;;;2943:1;2903:17;;;:11;:17;;;;;;;;:28;;;:25;;:28;;;;;;-1:-1:-1;;;;;2903:28:70;:42;2899:91;;2965:10;2974:1;2965:10;;:::i;:::-;;;2899:91;2877:6;2882:1;2877:6;;:::i;:::-;;;2839:161;;;;3013:25;3021:4;3035:1;3013:7;:25::i;:::-;3009:66;;;3054:10;3063:1;3054:10;;:::i;:::-;;;3009:66;2772:309;2683:398;;;:::o;3897:171:69:-;3993:19;;;;:13;:19;;;;;;3982:43;;4014:10;3982;:43::i;565:34:54:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;17394:186:46:-;17491:4;17514:23;:21;:23::i;:::-;-1:-1:-1;;;;;17514:49:46;;;;;;;:42;;;;;:49;;;;;;;;:59;;;;;;;;;;-1:-1:-1;17514:59:46;;;;;17394:186::o;1186:320:462:-;-1:-1:-1;;;;;1476:19:462;;:23;;;1186:320::o;8452:630:46:-;8537:4;-1:-1:-1;;;;;;;;;8855:25:46;;;;:101;;-1:-1:-1;;;;;;;;;;8931:25:46;;;8855:101;:177;;;-1:-1:-1;;;;;;;;9007:25:46;-1:-1:-1;;;9007:25:46;;8452:630::o;1793:159:45:-;1740:46;;1793:159::o;17829:408:46:-;17894:11;17940:7;4774:1:364;17921:26:46;17917:314;;17977:23;:21;:23::i;:::-;:37;17967:47;;17963:258;;;18034:14;18066:84;18083:23;:21;:23::i;:::-;:50;;;;:41;;;;;:50;;;;;;;-1:-1:-1;18073:66:46;18066:84;;18141:9;;;:::i;:::-;;;18066:84;;;-1:-1:-1;;;18177:24:46;:29;;17829:408;-1:-1:-1;;17829:408:46:o;43654:160::-;43753:13;43747:4;43740:27;43793:4;43787;43780:18;35086:484;35210:13;35226:16;35234:7;35226;:16::i;:::-;35210:32;;35257:13;:45;;;;;35297:5;-1:-1:-1;;;;;35274:28:46;:19;:17;:19::i;:::-;-1:-1:-1;;;;;35274:28:46;;;35257:45;35253:198;;;35321:44;35338:5;35345:19;:17;:19::i;35321:44::-;35316:135;;35385:51;-1:-1:-1;;;35385:7:46;:51::i;:::-;35518:2;35461:23;:21;:23::i;:::-;:48;;;;:39;;;;;:48;;;;;;:59;;-1:-1:-1;;;;;;35461:59:46;-1:-1:-1;;;;;35461:59:46;;;;;;35535:28;35461:48;;35535:28;;;;;;;;;;35461:48;35535:28;35200:370;35086:484;;;:::o;6620:127:364:-;6676:4;6699:41;6676:4;6727:12;:10;:12::i;1421:172:68:-;1501:6;;;-1:-1:-1;;;;;1517:18:68;;;-1:-1:-1;;;;;;1517:18:68;;;;;;;1551:35;;1501:6;;;1517:18;1501:6;;1551:35;;1480:18;;1551:35;1470:123;1421:172;:::o;898:906:286:-;1019:4;;1067;1019;;1109:567;1133:5;:12;1129:1;:16;1109:567;;;1166:10;1175:1;1166:10;;:::i;:::-;;;1190:20;1213:5;1219:1;1213:8;;;;;;;;:::i;:::-;;;;;;;1190:31;;1256:12;1240;:28;1236:430;;1391:44;;;;;;33873:19:644;;;33908:12;;;33901:28;;;33945:12;;1391:44:286;;;;;;;;;;;;1381:55;;;;;;1366:70;;1236:430;;;1578:44;;;;;;33873:19:644;;;33908:12;;;33901:28;;;33945:12;;1578:44:286;;;;;;;;;;;;1568:55;;;;;;1553:70;;1650:1;1641:10;;;;;:::i;:::-;;;1236:430;-1:-1:-1;1147:3:286;;;;:::i;:::-;;;;1109:567;;;-1:-1:-1;1769:20:286;;;;;-1:-1:-1;;;;898:906:286:o;12282:2050:46:-;12349:14;12398:7;4774:1:364;12379:26:46;12375:1894;;12430:23;:21;:23::i;:::-;:50;;;;:41;;;;;:50;;;;;;;-1:-1:-1;12578:11:46;12574:1318;;12624:23;:21;:23::i;:::-;:37;12613:48;;12609:101;;12663:47;-1:-1:-1;;;12663:7:46;:47::i;:::-;13333:23;:21;:23::i;:::-;-1:-1:-1;;13375:9:46;;;13333:52;;;;:41;;;;;:52;;;;;;;;-1:-1:-1;13433:11:46;13429:25;;13257:621;;13429:25;-1:-1:-1;;;13480:24:46;;13476:48;;12282:2050;;;:::o;13476:48::-;13812:47;-1:-1:-1;;;13812:7:46;:47::i;:::-;13257:621;;12574:1318;-1:-1:-1;;;14214:24:46;;14210:48;;12282:2050;;;:::o;14210:48::-;14278:47;-1:-1:-1;;;14278:7:46;:47::i;19095:513::-;19194:27;19223:23;19262:53;19318:23;:21;:23::i;:::-;:48;;;;:39;;:48;;-1:-1:-1;;19318:48:46;;;;19566:26;;19318:48;;19566:26;;-1:-1:-1;19095:513:46:o;9415:114:364:-;9484:7;9510:12;:10;:12::i;8729:563::-;9076:33;9084:12;;9106:1;9076:7;:33::i;:::-;9075:34;:56;;;;-1:-1:-1;;;;;;9113:18:364;;;;9075:56;:76;;;;-1:-1:-1;;;;;;9135:16:364;;;;9075:76;9071:215;;;9172:27;9180:12;;9194:4;9172:7;:27::i;:::-;9171:28;:58;;;;;9204:25;9212:12;;9226:2;9204:7;:25::i;:::-;9203:26;9171:58;9167:109;;;9249:12;;-1:-1:-1;;;9249:12:364;;34170:2:644;9249:12:364;;;34152:21:644;34209:1;34189:18;;;34182:29;-1:-1:-1;;;34227:18:644;;;34220:32;34269:18;;9249:12:364;33968:325:644;14865:443:46;15271:11;15246:23;15242:41;15239:52;-1:-1:-1;;;;;15099:28:46;;;;15229:63;;14865:443::o;5557:495:69:-;5645:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;5645:23:69;;;;;;;;;;;;5640:406;;5827:43;5857:7;-1:-1:-1;;;;;5827:43:69;5867:2;5827:21;:43::i;:::-;5941:40;5971:4;5978:2;5941:21;:40::i;:::-;5736:267;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;5736:267:69;;;;;;;;;;-1:-1:-1;;;5684:351:69;;;;;;;:::i;3475:152:70:-;3554:31;3571:4;3577:7;3554:16;:31::i;:::-;3595:25;3606:4;3612:7;3595:10;:25::i;3205:157::-;3285:32;3303:4;3309:7;3285:17;:32::i;:::-;4084:11;4098:17;;;:11;:17;;;;;;;;-1:-1:-1;;;;;4098:34:70;;;;;:25;;;:34;;;;;;;;4150:30;;:25;;;;:30;;;;;4143:37;;-1:-1:-1;;;;;;4143:37:70;;;4197:34;;;;4190:41;16143:122:46;;:::o;4590:125::-;4645:7;4671:23;:21;:23::i;:::-;:37;;4590:125;-1:-1:-1;4590:125:46:o;36132:3168::-;36211:27;36241;36260:7;36241:18;:27::i;:::-;36211:57;-1:-1:-1;36211:57:46;36279:12;;36399:35;36426:7;36399:26;:35::i;:::-;36342:92;;;;36449:13;36445:321;;;36568:68;36593:15;36610:4;36616:19;:17;:19::i;36568:68::-;36563:192;;36659:43;36676:4;36682:19;:17;:19::i;36659:43::-;36654:101;;36704:51;-1:-1:-1;;;36704:7:46;:51::i;:::-;36776;36798:4;36812:1;36816:7;36825:1;36776:21;:51::i;:::-;36916:15;36913:157;;;37054:1;37033:19;37026:30;36913:157;-1:-1:-1;;;;;37659:23:46;:21;:23::i;:::-;-1:-1:-1;;;;;37659:48:46;;;;;;:42;;;;;:48;;;;;:84;;;;;;;;38027:173;37659:48;-1:-1:-1;;;38027:18:46;:173::i;:::-;37974:23;:21;:23::i;:::-;:50;;;;:41;;;;;:50;;;;;:226;-1:-1:-1;;;38317:47:46;;38313:689;;38421:1;38411:11;;38542:23;:21;:23::i;:::-;:54;;;;:41;;;;;:54;;;;;;38538:450;;38702:23;:21;:23::i;:::-;:37;38687:52;;38683:287;;38928:19;38871:23;:21;:23::i;:::-;:54;;;;:41;;;;;:54;;;;;:76;38683:287;38371:631;38313:689;39027:35;;39054:7;;39050:1;;-1:-1:-1;;;;;39027:35:46;;;-1:-1:-1;;;;;;;;;;;39027:35:46;39050:1;;39027:35;39245:23;:21;:23::i;:::-;:36;;;;:38;;;;;;;-1:-1:-1;;;;;;36132:3168:46:o;590:159:48:-;525:58;;590:159::o;470:194:209:-;4910:13:436;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:436;;;;;;;:::i;:::-;572:26:209::1;:24;:26::i;:::-;608:49;640:16;608:31;:49::i;3655:158:46:-:0;2559:38:47;:36;:38::i;:::-;:52;;;;;;2538:151;;;;-1:-1:-1;;;2538:151:47;;;;;;;:::i;:::-;3766:40:46::1;3791:5;3798:7;3766:24;:40::i;1273:185:54:-:0;1339:21;1363:11;1339:35;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1384:18:54;;1339:35;;-1:-1:-1;1384:18:54;;:11;;-1:-1:-1;1384:18:54;;;;-1:-1:-1;1384:18:54;-1:-1:-1;1384:18:54;:::i;:::-;;1418:33;1437:7;1446:4;1418:33;;;;;;;:::i;:::-;;;;;;;;1329:129;1273:185;:::o;3430:334:75:-;3549:6;3535:11;:20;3531:76;;;3571:25;;-1:-1:-1;;;3571:25:75;;;;;;;:::i;3531:76::-;3617:16;:36;;-1:-1:-1;;;;;3617:36:75;;-1:-1:-1;;;;;;3663:32:75;;;;;-1:-1:-1;;;3663:32:75;;;;;;;;3711:46;;2847:25:644;;;3711:46:75;;2835:2:644;2820:18;3711:46:75;;;;;;;3430:334;;:::o;1499:170:72:-;1578:9;:26;;-1:-1:-1;;;;;;1578:26:72;-1:-1:-1;;;;;1578:26:72;;;;;;;;1619:43;;;;-1:-1:-1;;1619:43:72;1499:170;:::o;3583:4263:44:-;3705:16;3770:4;3761:5;:13;3757:54;;3776:35;-1:-1:-1;;;3776:7:44;:35::i;:::-;4774:1:364;3887:5:44;:23;3883:85;;;4774:1:364;3930:23:44;;3883:85;3981:17;4001:14;:12;:14::i;:::-;3981:34;;4091:9;4083:4;:17;4079:72;;4127:9;4120:16;;4079:72;4164:25;4203;4231:16;4241:5;4231:9;:16::i;:::-;4280:12;;;4437:35;;;;-1:-1:-1;4503:22:44;;4499:3302;;4722:17;4713:5;4706:4;:12;:33;4702:112;;4790:5;4783:4;:12;4763:32;;4702:112;4933:4;4927:11;4915:23;;5183:1;5164:17;5160:25;5157:1;5153:33;5143:8;5139:48;5133:4;5126:62;5359:31;5393:26;5413:5;5393:19;:26::i;:::-;5359:60;;5437:25;5729:9;:16;;;5724:98;;-1:-1:-1;5789:14:44;;5724:98;5839:19;6026:1616;6063:19;6076:5;6063:12;:19::i;:::-;6051:31;;6167:4;6156:9;6152:20;6146:27;6262:1;6257:893;;;;7466:1;7445:22;;6139:1354;;6257:893;6536:9;6530:16;6527:121;;;6608:9;6602:16;6581:37;;6527:121;6935:5;6916:17;6912:29;6908:2;6904:38;6894:230;;7010:1;6997:11;6993:19;6978:34;;7088:5;7073:11;7070:1;7066:19;7056:8;7052:34;7045:49;6894:230;6139:1354;7538:1;7531:5;7527:13;7518:22;;7599:4;7590:5;:13;:49;;;;7622:17;7607:11;:32;7590:49;7588:52;6026:1616;;7740:29;;-1:-1:-1;;4499:3302:44;-1:-1:-1;7821:8:44;;3583:4263;-1:-1:-1;;;;;;3583:4263:44:o;8505:237:56:-;;;;;;;:::o;5154:840:364:-;5354:19;5350:103;;5397:9;:14;5389:33;;;;-1:-1:-1;;;5389:33:364;;37066:2:644;5389:33:364;;;37048:21:644;37105:1;37085:18;;;37078:29;-1:-1:-1;;;37123:18:644;;;37116:36;37169:18;;5389:33:364;36864:329:644;5389:33:364;5436:7;;5350:103;5463:18;5484:33;5503:14;5484:16;:33;:::i;:::-;5463:54;-1:-1:-1;5528:18:364;-1:-1:-1;;;;;5560:45:364;;408:42:284;5560:45:364;5556:176;;;-1:-1:-1;5637:9:364;:23;;5556:176;;;-1:-1:-1;5707:9:364;:14;5556:176;5749:13;5741:28;;;;-1:-1:-1;;;5741:28:364;;37400:2:644;5741:28:364;;;37382:21:644;37439:1;37419:18;;;37412:29;-1:-1:-1;;;37457:18:644;;;37450:32;37499:18;;5741:28:364;37198:325:644;5741:28:364;5780:21;-1:-1:-1;;;;;5804:35:364;;;:84;;5867:21;5804:84;;;5842:22;:20;:22::i;:::-;5780:108;;5899:88;5936:9;5947:12;:10;:12::i;:::-;5961:13;5976:10;5899:36;:88::i;6047:248::-;6174:21;6227:14;:12;:14::i;:::-;6211:30;;6251:37;6261:3;6266:21;6251:9;:37::i;4671:362:75:-;4818:6;4811:4;:13;4807:69;;;4840:25;;-1:-1:-1;;;4840:25:75;;;;;;;:::i;4807:69::-;4918:49;;;;;;;;-1:-1:-1;;;;;4918:49:75;;;;;;;;;;;;;-1:-1:-1;4886:29:75;;;:19;:29;;;;;:81;;;;-1:-1:-1;;;;;;4886:81:75;;;;;;;;;;;-1:-1:-1;4886:81:75;;;;;;;4983:43;;2847:25:644;;;4918:49:75;;4886:29;;4983:43;;2820:18:644;4983:43:75;;;;;;;4671:362;;;:::o;7538:136:364:-;7611:4;7634:33;7642:10;;7654:12;:10;:12::i;756:594:76:-;859:204;;;;;;;;;;898:14;:9;;:14;:::i;:::-;859:204;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;859:204:76;;;-1:-1:-1;859:204:76;;;;;939:21;;;;:9;:21;:::i;:::-;859:204;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;859:204:76;;;-1:-1:-1;859:204:76;;984:18;;;;:9;:18;:::i;:::-;859:204;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;859:204:76;;;-1:-1:-1;859:204:76;;1030:22;;;;:9;:22;:::i;:::-;859:204;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;859:204:76;;-1:-1:-1;842:221:76;;;;:14;;:221;;:14;;:221;;;;:::i;:::-;-1:-1:-1;842:221:76;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;842:221:76;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;842:221:76;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;1079:41:76;;;1099:1;18578:25:644;;-1:-1:-1;;18634:2:644;18619:18;;18612:34;1079:41:76;;-1:-1:-1;18551:18:644;1079:41:76;;;;;;;1136:207;1178:14;:9;;:14;:::i;:::-;1219:21;;;;:9;:21;:::i;:::-;1264:18;;;;:9;:18;:::i;:::-;1310:22;;;;:9;:22;:::i;:::-;1136:207;;;;;;;;;;;;;:::i;:::-;;;;;;;;756:594;:::o;6538:198:288:-;6621:12;6652:77;6673:6;6681:4;6652:77;;;;;;;;;;;;;;;;;:20;:77::i;27090:693:46:-;27248:4;27316:2;-1:-1:-1;;;;;27280:56:46;;27337:19;:17;:19::i;:::-;27358:4;27364:7;27373:5;27280:99;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;27280:99:46;;;;;;;;-1:-1:-1;;27280:99:46;;;;;;;;;;;;:::i;:::-;;;27264:513;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;27566:13:46;;27562:113;;27604:56;-1:-1:-1;;;27604:7:46;:56::i;:::-;27745:6;27739:13;27730:6;27726:2;27722:15;27715:38;27264:513;-1:-1:-1;;;;;;27433:75:46;-1:-1:-1;;;27433:75:46;;-1:-1:-1;27090:693:46;;;;;;:::o;11695:162::-;11774:4;11797:23;:21;:23::i;:::-;:48;;;;:41;;:48;;-1:-1:-1;11797:48:46;;;;:53;;;11695:162::o;11333:183::-;11401:21;;:::i;:::-;11441:68;11460:23;:21;:23::i;:::-;:48;;;;:41;;;;;:48;;;;;;11441:18;:68::i;1461:452:76:-;1536:13;1561:30;1594:14;1561:47;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1638:268;1704:4;:9;;;1744:4;:16;;;1788:4;:13;;;1833:4;:17;;;1884:7;1638:41;:268::i;9535:167:364:-;9624:14;9657:38;:36;:38::i;1565:441:292:-;1640:13;1665:19;1697:10;1701:6;1697:1;:10;:::i;:::-;:14;;1710:1;1697:14;:::i;:::-;-1:-1:-1;;;;;1687:25:292;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1687:25:292;;1665:47;;-1:-1:-1;;;1722:6:292;1729:1;1722:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1722:15:292;;;;;;;;;-1:-1:-1;;;1747:6:292;1754:1;1747:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1747:15:292;;;;;;;;-1:-1:-1;1777:9:292;1789:10;1793:6;1789:1;:10;:::i;:::-;:14;;1802:1;1789:14;:::i;:::-;1777:26;;1772:132;1809:1;1805;:5;1772:132;;;-1:-1:-1;;;1856:5:292;1864:3;1856:11;1843:25;;;;;;;:::i;:::-;;;;1831:6;1838:1;1831:9;;;;;;;;:::i;:::-;;;;:37;-1:-1:-1;;;;;1831:37:292;;;;;;;;-1:-1:-1;1892:1:292;1882:11;;;;;1812:3;;;:::i;:::-;;;1772:132;;;-1:-1:-1;1921:10:292;;1913:55;;;;-1:-1:-1;;;1913:55:292;;39574:2:644;1913:55:292;;;39556:21:644;;;39593:18;;;39586:30;39652:34;39632:18;;;39625:62;39704:18;;1913:55:292;39372:356:644;5036:168:69;5114:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;5114:23:69;;;;;;;;;;:30;;-1:-1:-1;;5114:30:69;5140:4;5114:30;;;5159:38;5186:10;;5123:4;;5159:38;;5114:14;5159:38;5036:168;;:::o;3690:253:70:-;3760:11;3774:17;;;:11;:17;;;;;:23;;;3834:1;;3774:17;3807:28;3834:1;3774:23;3807:28;:::i;:::-;;;;-1:-1:-1;;3846:17:70;;;;:11;:17;;;;;;;;:30;;;:25;;;:30;;;;;:40;;-1:-1:-1;;;;;3846:40:70;;;-1:-1:-1;;;;;;3846:40:70;;;;;;;3896:34;;;:25;;;;:34;;;;:40;3690:253::o;5253:204:69:-;5332:25;5343:4;5349:7;5332:10;:25::i;:::-;5374:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;5374:23:69;;;;;;;;;;5367:30;;-1:-1:-1;;5367:30:69;;;5412:38;5439:10;;5383:4;;5412:38;;5374:14;5412:38;5253:204;;:::o;776:69:464:-;4910:13:436;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:436;;;;;;;:::i;:::-;776::464:o;670:242:209:-;4910:13:436;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:436;;;;;;;:::i;:::-;787:9:209::1;782:124;806:16;:23;802:1;:27;782:124;;;891:4;850:17;:38;868:16;885:1;868:19;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;-1:-1:-1;;;;;850:38:209::1;::::0;;;::::1;::::0;;;;;;-1:-1:-1;850:38:209;:45;;-1:-1:-1;;850:45:209::1;::::0;::::1;;::::0;;;::::1;::::0;;831:3;::::1;::::0;::::1;:::i;:::-;;;;782:124;;3819:281:46::0;2559:38:47;:36;:38::i;:::-;:52;;;;;;2538:151;;;;-1:-1:-1;;;2538:151:47;;;;;;;:::i;:::-;3972:5:46::1;3940:23;:21;:23::i;:::-;:29;;:37;;;;;;;;;;;;:::i;:::-;;4021:7;3987:23;:21;:23::i;:::-;:31;;:41;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;4774:1:364;4038:23:46::1;:21;:23::i;:::-;:55:::0;-1:-1:-1;;3819:281:46:o;508:385:284:-;659:12;655:49;;687:7;;655:49;-1:-1:-1;;;;;718:25:284;;408:42;718:25;714:173;;;759:37;783:3;788:7;759:23;:37::i;714:173::-;827:49;845:9;856:5;863:3;868:7;827:17;:49::i;34196:110:46:-;34272:27;34282:2;34286:8;34272:27;;;;;;;;;;;;:9;:27::i;6922:387:288:-;7063:12;7095:18;7106:6;7095:10;:18::i;:::-;7087:69;;;;-1:-1:-1;;;7087:69:288;;39935:2:644;7087:69:288;;;39917:21:644;39974:2;39954:18;;;39947:30;40013:34;39993:18;;;39986:62;-1:-1:-1;;;40064:18:644;;;40057:36;40110:19;;7087:69:288;39733:402:644;7087:69:288;7168:12;7182:23;7209:6;-1:-1:-1;;;;;7209:19:288;7229:4;7209:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7167:67;;;;7251:51;7268:7;7277:10;7289:12;7251:16;:51::i;:::-;7244:58;6922:387;-1:-1:-1;;;;;;6922:387:288:o;14426:361:46:-;14492:31;;:::i;:::-;-1:-1:-1;;;;;14535:41:46;;;;-1:-1:-1;;;;;2074:3:46;14620:33;;;14586:68;:24;;;:68;-1:-1:-1;;;14683:24:46;;:29;;14664:16;;;:48;2583:3;14751:28;;;;14722:19;;;:58;14535:9;14426:361::o;760:466:287:-;983:13;1008:29;1040:38;1055:8;1065:12;1040:14;:38::i;:::-;1008:70;;1088:17;1108:70;1127:4;1133:11;1146:15;1163:14;1108:18;:70::i;:::-;1088:90;;1195:24;1214:4;1195:18;:24::i;:::-;1188:31;760:466;-1:-1:-1;;;;;;;;760:466:287:o;1058:401:209:-;1120:14;1150:30;1169:10;1150:18;:30::i;:::-;1146:307;;;-1:-1:-1;;;1352:14:209;1348:23;1335:37;1331:2;1327:46;1058:401;:::o;1146:307::-;-1:-1:-1;929:10:464;;8167:99:364:o;2532:292:284:-;2714:12;2732:2;-1:-1:-1;;;;;2732:7:284;2748:5;2732:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2713:46;;;2777:7;2769:48;;;;-1:-1:-1;;;2769:48:284;;40831:2:644;2769:48:284;;;40813:21:644;40870:2;40850:18;;;40843:30;-1:-1:-1;;;40889:18:644;;;40882:58;40957:18;;2769:48:284;40629:352:644;2073:396:284;2234:3;-1:-1:-1;;;;;2225:12:284;:5;-1:-1:-1;;;;;2225:12:284;;2221:49;;;2253:7;;2221:49;-1:-1:-1;;;;;2284:22:284;;2301:4;2284:22;2280:183;;;2322:44;-1:-1:-1;;;;;2322:30:284;;2353:3;2358:7;2322:30;:44::i;2280:183::-;2397:55;-1:-1:-1;;;;;2397:34:284;;2432:5;2439:3;2444:7;2397:34;:55::i;33381:736:46:-;33507:19;33513:2;33517:8;33507:5;:19::i;:::-;-1:-1:-1;;;;;33565:14:46;;;:19;33561:540;;33604:11;33618:23;:21;:23::i;:::-;:37;;-1:-1:-1;33689:14:46;;;33721:238;33751:62;33790:1;33794:2;33798:7;;;;;;33807:5;33751:30;:62::i;:::-;33746:174;;33841:56;-1:-1:-1;;;33841:7:46;:56::i;:::-;33954:3;33946:5;:11;33721:238;;34063:3;34022:23;:21;:23::i;:::-;:37;:44;34018:68;;34068:18;34083:1;34068:7;:18::i;:::-;33586:515;;33381:736;;;:::o;7529:692:288:-;7675:12;7703:7;7699:516;;;-1:-1:-1;7733:10:288;7726:17;;7699:516;7844:17;;:21;7840:365;;8038:10;8032:17;8098:15;8085:10;8081:2;8077:19;8070:44;7840:365;8177:12;8170:20;;-1:-1:-1;;;8170:20:288;;;;;;;;:::i;2753:654:287:-;2893:22;;2949:26;;2852:13;;2893:26;;;;2949:30;;;2893:26;;2993:24;;;3005:12;2993:24;2989:156;;;3077:8;3112:12;3047:86;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3033:101;;;;;;2989:156;3158:8;3154:101;;;3226:8;3196:47;;;;;;;;:::i;3154:101::-;3268:12;3264:117;;;3348:12;3310:59;;;;;;;;:::i;3264:117::-;-1:-1:-1;;3391:9:287;;;;;;;;;-1:-1:-1;3391:9:287;;;2753:654;-1:-1:-1;;;2753:654:287:o;1470:701::-;1655:12;1762:4;1805:34;1824:14;1805:18;:34::i;:::-;1916:11;1969:9;2040:34;2059:14;2040:18;:34::i;:::-;2123:4;1698:466;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1679:485;;1470:701;;;;;;:::o;2309:187::-;2379:13;2468:19;2482:4;2468:13;:19::i;:::-;2418:70;;;;;;;;:::i;:::-;;;;;;;;;;;;;2404:85;;2309:187;;;:::o;735:205:226:-;847:86;867:5;897:23;;;922:2;926:5;874:58;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;874:58:226;;;;;;;;;;;;;;-1:-1:-1;;;;;874:58:226;-1:-1:-1;;;;;;874:58:226;;;;;;;;;;847:19;:86::i;946:241::-;1111:68;;-1:-1:-1;;;;;46516:15:644;;;1111:68:226;;;46498:34:644;46568:15;;46548:18;;;46541:43;46600:18;;;46593:34;;;1084:96:226;;1104:5;;-1:-1:-1;;;1134:27:226;46433:18:644;;1111:68:226;46258:375:644;28229:2347:46;28301:20;28324:23;:21;:23::i;:::-;:37;;-1:-1:-1;28375:13:46;28371:53;;28390:34;-1:-1:-1;;;28390:7:46;:34::i;:::-;28435:61;28465:1;28469:2;28473:12;28487:8;28435:21;:61::i;:::-;28982:136;29018:2;15704:1;15691:15;;15665:24;15661:46;28982:18;:136::i;:::-;28924:23;:21;:23::i;:::-;:55;;;;:41;;;;;:55;;;;;:194;-1:-1:-1;;;;;29379:45:46;;29329:23;:21;:23::i;:::-;-1:-1:-1;;;;;29329:46:46;;;;;;:42;;;;;:46;;;;;;:95;;;;;;;;29609:13;29605:54;;29624:35;-1:-1:-1;;;29624:7:46;:35::i;:::-;29688:23;;;:12;29770:662;30180:7;30137:8;30093:1;-1:-1:-1;;;;;;;;;;;29966:1:46;29902;29872:351;30414:9;;:16;;;;29770:662;;30486:3;30446:23;:21;:23::i;:::-;:43;-1:-1:-1;30509:60:46;;-1:-1:-1;;24659:405:46;305:703:292;361:13;578:10;574:51;;-1:-1:-1;;604:10:292;;;;;;;;;;;;-1:-1:-1;;;604:10:292;;;;;305:703::o;574:51::-;649:5;634:12;688:75;695:9;;688:75;;720:8;;;;:::i;:::-;;-1:-1:-1;742:10:292;;-1:-1:-1;750:2:292;742:10;;:::i;:::-;;;688:75;;;772:19;804:6;-1:-1:-1;;;;;794:17:292;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;794:17:292;;772:39;;821:150;828:10;;821:150;;854:11;864:1;854:11;;:::i;:::-;;-1:-1:-1;922:10:292;930:2;922:5;:10;:::i;:::-;909:24;;:2;:24;:::i;:::-;896:39;;879:6;886;879:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;879:56:292;;;;;;;;-1:-1:-1;949:11:292;958:2;949:11;;:::i;:::-;;;821:150;;505:3026:229;563:13;795:4;:11;810:1;795:16;791:31;;;-1:-1:-1;;813:9:229;;;;;;;;;-1:-1:-1;813:9:229;;;505:3026::o;791:31::-;872:19;894:6;;;;;;;;;;;;;;;;;872:28;;1303:20;1362:1;1343:4;:11;1357:1;1343:15;;;;:::i;:::-;1342:21;;;;:::i;:::-;1337:27;;:1;:27;:::i;:::-;-1:-1:-1;;;;;1326:39:229;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1326:39:229;;1303:62;;1540:1;1533:5;1529:13;1641:2;1633:6;1629:15;1748:4;1799;1793:11;1787:4;1783:22;1711:1403;1832:6;1823:7;1820:19;1711:1403;;;1934:1;1925:7;1921:15;1910:26;;1972:7;1966:14;2615:4;2607:5;2603:2;2599:14;2595:25;2585:8;2581:40;2575:47;2564:9;2556:67;2668:1;2657:9;2653:17;2640:30;;2758:4;2750:5;2746:2;2742:14;2738:25;2728:8;2724:40;2718:47;2707:9;2699:67;2811:1;2800:9;2796:17;2783:30;;2900:4;2892:5;2889:1;2885:13;2881:24;2871:8;2867:39;2861:46;2850:9;2842:66;2953:1;2942:9;2938:17;2925:30;;3034:4;3027:5;3023:16;3013:8;3009:31;3003:38;2992:9;2984:58;;3087:1;3076:9;3072:17;3059:30;;1711:1403;;;1715:104;;3272:1;3265:4;3259:11;3255:19;3292:1;3287:120;;;;3425:1;3420:71;;;;3248:243;;3287:120;3339:4;3335:1;3324:9;3320:17;3312:32;3388:4;3384:1;3373:9;3369:17;3361:32;3287:120;;3420:71;3472:4;3468:1;3457:9;3453:17;3445:32;3248:243;-1:-1:-1;3518:6:229;;505:3026;-1:-1:-1;;;;;505:3026:229:o;3241:706:226:-;3660:23;3686:69;3714:4;3686:69;;;;;;;;;;;;;;;;;3694:5;-1:-1:-1;;;;;3686:27:226;;;:69;;;;;:::i;:::-;3769:17;;3660:95;;-1:-1:-1;3769:21:226;3765:176;;3864:10;3853:30;;;;;;;;;;;;:::i;:::-;3845:85;;;;-1:-1:-1;;;3845:85:226;;47207:2:644;3845:85:226;;;47189:21:644;47246:2;47226:18;;;47219:30;47285:34;47265:18;;;47258:62;-1:-1:-1;;;47336:18:644;;;47329:40;47386:19;;3845:85:226;47005:406:644;3827:223:288;3960:12;3991:52;4013:6;4021:4;4027:1;4030:12;3960;5202:18;5213:6;5202:10;:18::i;:::-;5194:60;;;;-1:-1:-1;;;5194:60:288;;48025:2:644;5194:60:288;;;48007:21:644;48064:2;48044:18;;;48037:30;48103:31;48083:18;;;48076:59;48152:18;;5194:60:288;47823:353:644;5194:60:288;5266:12;5280:23;5307:6;-1:-1:-1;;;;;5307:11:288;5327:5;5335:4;5307:33;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5265:75;;;;5357:51;5374:7;5383:10;5395:12;5357:16;:51::i;:::-;5350:58;4914:501;-1:-1:-1;;;;;;;4914:501:288:o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:131:644;-1:-1:-1;;;;;;88:32:644;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;688:258::-;760:1;770:113;784:6;781:1;778:13;770:113;;;860:11;;;854:18;841:11;;;834:39;806:2;799:10;770:113;;;901:6;898:1;895:13;892:48;;;-1:-1:-1;;936:1:644;918:16;;911:27;688:258::o;951:269::-;1004:3;1042:5;1036:12;1069:6;1064:3;1057:19;1085:63;1141:6;1134:4;1129:3;1125:14;1118:4;1111:5;1107:16;1085:63;:::i;:::-;1202:2;1181:15;-1:-1:-1;;1177:29:644;1168:39;;;;1209:4;1164:50;;951:269;-1:-1:-1;;951:269:644:o;1225:231::-;1374:2;1363:9;1356:21;1337:4;1394:56;1446:2;1435:9;1431:18;1423:6;1394:56;:::i;1669:180::-;1728:6;1781:2;1769:9;1760:7;1756:23;1752:32;1749:52;;;1797:1;1794;1787:12;1749:52;-1:-1:-1;1820:23:644;;1669:180;-1:-1:-1;1669:180:644:o;1854:131::-;-1:-1:-1;;;;;1929:31:644;;1919:42;;1909:70;;1975:1;1972;1965:12;1990:134;2058:20;;2087:31;2058:20;2087:31;:::i;2129:315::-;2197:6;2205;2258:2;2246:9;2237:7;2233:23;2229:32;2226:52;;;2274:1;2271;2264:12;2226:52;2313:9;2300:23;2332:31;2357:5;2332:31;:::i;:::-;2382:5;2434:2;2419:18;;;;2406:32;;-1:-1:-1;;;2129:315:644:o;2449:247::-;2508:6;2561:2;2549:9;2540:7;2536:23;2532:32;2529:52;;;2577:1;2574;2567:12;2529:52;2616:9;2603:23;2635:31;2660:5;2635:31;:::i;2883:163::-;2950:5;2995:3;2986:6;2981:3;2977:16;2973:26;2970:46;;;3012:1;3009;3002:12;3051:854;3190:6;3198;3206;3214;3222;3230;3283:3;3271:9;3262:7;3258:23;3254:33;3251:53;;;3300:1;3297;3290:12;3251:53;3336:9;3323:23;3313:33;;3396:2;3385:9;3381:18;3368:32;3409:31;3434:5;3409:31;:::i;:::-;3459:5;-1:-1:-1;3511:2:644;3496:18;;3483:32;;-1:-1:-1;3567:2:644;3552:18;;3539:32;3580:33;3539:32;3580:33;:::i;:::-;3632:7;-1:-1:-1;3686:3:644;3671:19;;3658:33;;-1:-1:-1;3742:3:644;3727:19;;3714:33;-1:-1:-1;;;;;3759:30:644;;3756:50;;;3802:1;3799;3792:12;3756:50;3825:74;3891:7;3882:6;3871:9;3867:22;3825:74;:::i;:::-;3815:84;;;3051:854;;;;;;;;:::o;3910:456::-;3987:6;3995;4003;4056:2;4044:9;4035:7;4031:23;4027:32;4024:52;;;4072:1;4069;4062:12;4024:52;4111:9;4098:23;4130:31;4155:5;4130:31;:::i;:::-;4180:5;-1:-1:-1;4237:2:644;4222:18;;4209:32;4250:33;4209:32;4250:33;:::i;:::-;3910:456;;4302:7;;-1:-1:-1;;;4356:2:644;4341:18;;;;4328:32;;3910:456::o;4738:248::-;4806:6;4814;4867:2;4855:9;4846:7;4842:23;4838:32;4835:52;;;4883:1;4880;4873:12;4835:52;-1:-1:-1;;4906:23:644;;;4976:2;4961:18;;;4948:32;;-1:-1:-1;4738:248:644:o;4991:274::-;-1:-1:-1;;;;;5183:32:644;;;;5165:51;;5247:2;5232:18;;5225:34;5153:2;5138:18;;4991:274::o;5270:315::-;5338:6;5346;5399:2;5387:9;5378:7;5374:23;5370:32;5367:52;;;5415:1;5412;5405:12;5367:52;5451:9;5438:23;5428:33;;5511:2;5500:9;5496:18;5483:32;5524:31;5549:5;5524:31;:::i;:::-;5574:5;5564:15;;;5270:315;;;;;:::o;5590:127::-;5651:10;5646:3;5642:20;5639:1;5632:31;5682:4;5679:1;5672:15;5706:4;5703:1;5696:15;5722:275;5793:2;5787:9;5858:2;5839:13;;-1:-1:-1;;5835:27:644;5823:40;;-1:-1:-1;;;;;5878:34:644;;5914:22;;;5875:62;5872:88;;;5940:18;;:::i;:::-;5976:2;5969:22;5722:275;;-1:-1:-1;5722:275:644:o;6002:531::-;6045:5;6098:3;6091:4;6083:6;6079:17;6075:27;6065:55;;6116:1;6113;6106:12;6065:55;6152:6;6139:20;-1:-1:-1;;;;;6174:2:644;6171:26;6168:52;;;6200:18;;:::i;:::-;6244:55;6287:2;6268:13;;-1:-1:-1;;6264:27:644;6293:4;6260:38;6244:55;:::i;:::-;6324:2;6315:7;6308:19;6370:3;6363:4;6358:2;6350:6;6346:15;6342:26;6339:35;6336:55;;;6387:1;6384;6377:12;6336:55;6452:2;6445:4;6437:6;6433:17;6426:4;6417:7;6413:18;6400:55;6500:1;6475:16;;;6493:4;6471:27;6464:38;;;;6479:7;6002:531;-1:-1:-1;;;6002:531:644:o;6538:787::-;6592:5;6645:3;6638:4;6630:6;6626:17;6622:27;6612:55;;6663:1;6660;6653:12;6612:55;6699:6;6686:20;6725:4;-1:-1:-1;;;;;6744:2:644;6741:26;6738:52;;;6770:18;;:::i;:::-;6816:2;6813:1;6809:10;6839:28;6863:2;6859;6855:11;6839:28;:::i;:::-;6901:15;;;6971;;;6967:24;;;6932:12;;;;7003:15;;;7000:35;;;7031:1;7028;7021:12;7000:35;7067:2;7059:6;7055:15;7044:26;;7079:217;7095:6;7090:3;7087:15;7079:217;;;7175:3;7162:17;7192:31;7217:5;7192:31;:::i;:::-;7236:18;;7112:12;;;;7274;;;;7079:217;;7330:173;7398:20;;-1:-1:-1;;;;;7447:31:644;;7437:42;;7427:70;;7493:1;7490;7483:12;7508:1270;7685:6;7693;7701;7709;7717;7725;7733;7741;7794:3;7782:9;7773:7;7769:23;7765:33;7762:53;;;7811:1;7808;7801:12;7762:53;7834:29;7853:9;7834:29;:::i;:::-;7824:39;;7914:2;7903:9;7899:18;7886:32;-1:-1:-1;;;;;7978:2:644;7970:6;7967:14;7964:34;;;7994:1;7991;7984:12;7964:34;8017:50;8059:7;8050:6;8039:9;8035:22;8017:50;:::i;:::-;8007:60;;8120:2;8109:9;8105:18;8092:32;8076:48;;8149:2;8139:8;8136:16;8133:36;;;8165:1;8162;8155:12;8133:36;8188:52;8232:7;8221:8;8210:9;8206:24;8188:52;:::i;:::-;8178:62;;8293:2;8282:9;8278:18;8265:32;8249:48;;8322:2;8312:8;8309:16;8306:36;;;8338:1;8335;8328:12;8306:36;8361:52;8405:7;8394:8;8383:9;8379:24;8361:52;:::i;:::-;8351:62;;8466:3;8455:9;8451:19;8438:33;8422:49;;8496:2;8486:8;8483:16;8480:36;;;8512:1;8509;8502:12;8480:36;;8535:63;8590:7;8579:8;8568:9;8564:24;8535:63;:::i;:::-;8525:73;;;8617:39;8651:3;8640:9;8636:19;8617:39;:::i;:::-;8607:49;;8675:39;8709:3;8698:9;8694:19;8675:39;:::i;:::-;8665:49;;8733:39;8767:3;8756:9;8752:19;8733:39;:::i;:::-;8723:49;;7508:1270;;;;;;;;;;;:::o;9073:837::-;9268:2;9257:9;9250:21;9313:6;9307:13;9302:2;9291:9;9287:18;9280:41;9375:2;9367:6;9363:15;9357:22;9352:2;9341:9;9337:18;9330:50;9434:2;9426:6;9422:15;9416:22;9411:2;9400:9;9396:18;9389:50;9494:2;9486:6;9482:15;9476:22;9470:3;9459:9;9455:19;9448:51;9554:3;9546:6;9542:16;9536:23;9530:3;9519:9;9515:19;9508:52;9615:3;9607:6;9603:16;9597:23;9591:3;9580:9;9576:19;9569:52;9704:1;9700;9695:3;9691:11;9687:19;9680:3;9672:6;9668:16;9662:23;9658:49;9652:3;9641:9;9637:19;9630:78;9231:4;9755:3;9747:6;9743:16;9737:23;9779:6;9821:2;9816;9805:9;9801:18;9794:30;;9841:63;9899:3;9888:9;9884:19;9870:12;9841:63;:::i;9915:390::-;10001:8;10011:6;10065:3;10058:4;10050:6;10046:17;10042:27;10032:55;;10083:1;10080;10073:12;10032:55;-1:-1:-1;10106:20:644;;-1:-1:-1;;;;;10138:30:644;;10135:50;;;10181:1;10178;10171:12;10135:50;10218:4;10210:6;10206:17;10194:29;;10278:3;10271:4;10261:6;10258:1;10254:14;10246:6;10242:27;10238:38;10235:47;10232:67;;;10295:1;10292;10285:12;10232:67;9915:390;;;;;:::o;10310:118::-;10396:5;10389:13;10382:21;10375:5;10372:32;10362:60;;10418:1;10415;10408:12;10433:624;10560:6;10568;10576;10629:2;10617:9;10608:7;10604:23;10600:32;10597:52;;;10645:1;10642;10635:12;10597:52;10685:9;10672:23;-1:-1:-1;;;;;10710:6:644;10707:30;10704:50;;;10750:1;10747;10740:12;10704:50;10789:93;10874:7;10865:6;10854:9;10850:22;10789:93;:::i;:::-;10901:8;;-1:-1:-1;10763:119:644;-1:-1:-1;;10986:2:644;10971:18;;10958:32;10999:28;10958:32;10999:28;:::i;:::-;11046:5;11036:15;;;10433:624;;;;;:::o;11062:632::-;11233:2;11285:21;;;11355:13;;11258:18;;;11377:22;;;11204:4;;11233:2;11456:15;;;;11430:2;11415:18;;;11204:4;11499:169;11513:6;11510:1;11507:13;11499:169;;;11574:13;;11562:26;;11643:15;;;;11608:12;;;;11535:1;11528:9;11499:169;;11699:1006;11847:6;11855;11863;11871;11879;11887;11940:3;11928:9;11919:7;11915:23;11911:33;11908:53;;;11957:1;11954;11947:12;11908:53;11996:9;11983:23;12015:31;12040:5;12015:31;:::i;:::-;12065:5;-1:-1:-1;12117:2:644;12102:18;;12089:32;;-1:-1:-1;12173:2:644;12158:18;;12145:32;12186:33;12145:32;12186:33;:::i;:::-;12238:7;-1:-1:-1;12292:2:644;12277:18;;12264:32;;-1:-1:-1;12347:3:644;12332:19;;12319:33;-1:-1:-1;;;;;12401:14:644;;;12398:34;;;12428:1;12425;12418:12;12398:34;12451:74;12517:7;12508:6;12497:9;12493:22;12451:74;:::i;:::-;12441:84;;12578:3;12567:9;12563:19;12550:33;12534:49;;12608:2;12598:8;12595:16;12592:36;;;12624:1;12621;12614:12;12592:36;;12647:52;12691:7;12680:8;12669:9;12665:24;12647:52;:::i;12963:322::-;13032:6;13085:2;13073:9;13064:7;13060:23;13056:32;13053:52;;;13101:1;13098;13091:12;13053:52;13141:9;13128:23;-1:-1:-1;;;;;13166:6:644;13163:30;13160:50;;;13206:1;13203;13196:12;13160:50;13229;13271:7;13262:6;13251:9;13247:22;13229:50;:::i;13290:383::-;13367:6;13375;13383;13436:2;13424:9;13415:7;13411:23;13407:32;13404:52;;;13452:1;13449;13442:12;13404:52;13491:9;13478:23;13510:31;13535:5;13510:31;:::i;:::-;13560:5;13612:2;13597:18;;13584:32;;-1:-1:-1;13663:2:644;13648:18;;;13635:32;;13290:383;-1:-1:-1;;;13290:383:644:o;13678:::-;13755:6;13763;13771;13824:2;13812:9;13803:7;13799:23;13795:32;13792:52;;;13840:1;13837;13830:12;13792:52;13876:9;13863:23;13853:33;;13936:2;13925:9;13921:18;13908:32;13949:31;13974:5;13949:31;:::i;14066:382::-;14131:6;14139;14192:2;14180:9;14171:7;14167:23;14163:32;14160:52;;;14208:1;14205;14198:12;14160:52;14247:9;14234:23;14266:31;14291:5;14266:31;:::i;:::-;14316:5;-1:-1:-1;14373:2:644;14358:18;;14345:32;14386:30;14345:32;14386:30;:::i;14453:375::-;14551:6;14604:2;14592:9;14583:7;14579:23;14575:32;14572:52;;;14620:1;14617;14610:12;14572:52;14660:9;14647:23;-1:-1:-1;;;;;14685:6:644;14682:30;14679:50;;;14725:1;14722;14715:12;14679:50;14748:74;14814:7;14805:6;14794:9;14790:22;14748:74;:::i;14833:471::-;14930:6;14938;14991:2;14979:9;14970:7;14966:23;14962:32;14959:52;;;15007:1;15004;14997:12;14959:52;15047:9;15034:23;-1:-1:-1;;;;;15072:6:644;15069:30;15066:50;;;15112:1;15109;15102:12;15066:50;15151:93;15236:7;15227:6;15216:9;15212:22;15151:93;:::i;:::-;15263:8;;15125:119;;-1:-1:-1;14833:471:644;-1:-1:-1;;;;14833:471:644:o;15309:812::-;15469:4;15498:2;15538;15527:9;15523:18;15568:2;15557:9;15550:21;15591:6;15626;15620:13;15657:6;15649;15642:22;15695:2;15684:9;15680:18;15673:25;;15757:2;15747:6;15744:1;15740:14;15729:9;15725:30;15721:39;15707:53;;15795:2;15787:6;15783:15;15816:1;15826:266;15840:6;15837:1;15834:13;15826:266;;;15933:2;15929:7;15917:9;15909:6;15905:22;15901:36;15896:3;15889:49;15961:51;16005:6;15996;15990:13;15961:51;:::i;:::-;15951:61;-1:-1:-1;16070:12:644;;;;16035:15;;;;15862:1;15855:9;15826:266;;;-1:-1:-1;16109:6:644;;15309:812;-1:-1:-1;;;;;;;15309:812:644:o;16446:755::-;16739:3;16728:9;16721:22;16702:4;16766:57;16818:3;16807:9;16803:19;16795:6;16766:57;:::i;:::-;16871:9;16863:6;16859:22;16854:2;16843:9;16839:18;16832:50;16905:44;16942:6;16934;16905:44;:::i;:::-;16891:58;;16997:9;16989:6;16985:22;16980:2;16969:9;16965:18;16958:50;17031:44;17068:6;17060;17031:44;:::i;:::-;17017:58;;17123:9;17115:6;17111:22;17106:2;17095:9;17091:18;17084:50;17151:44;17188:6;17180;17151:44;:::i;17206:666::-;17301:6;17309;17317;17325;17378:3;17366:9;17357:7;17353:23;17349:33;17346:53;;;17395:1;17392;17385:12;17346:53;17434:9;17421:23;17453:31;17478:5;17453:31;:::i;:::-;17503:5;-1:-1:-1;17560:2:644;17545:18;;17532:32;17573:33;17532:32;17573:33;:::i;:::-;17625:7;-1:-1:-1;17679:2:644;17664:18;;17651:32;;-1:-1:-1;17734:2:644;17719:18;;17706:32;-1:-1:-1;;;;;17750:30:644;;17747:50;;;17793:1;17790;17783:12;17747:50;17816;17858:7;17849:6;17838:9;17834:22;17816:50;:::i;:::-;17806:60;;;17206:666;;;;;;;:::o;18657:388::-;18725:6;18733;18786:2;18774:9;18765:7;18761:23;18757:32;18754:52;;;18802:1;18799;18792:12;18754:52;18841:9;18828:23;18860:31;18885:5;18860:31;:::i;:::-;18910:5;-1:-1:-1;18967:2:644;18952:18;;18939:32;18980:33;18939:32;18980:33;:::i;19050:380::-;19129:1;19125:12;;;;19172;;;19193:61;;19247:4;19239:6;19235:17;19225:27;;19193:61;19300:2;19292:6;19289:14;19269:18;19266:38;19263:161;;;19346:10;19341:3;19337:20;19334:1;19327:31;19381:4;19378:1;19371:15;19409:4;19406:1;19399:15;19435:338;19637:2;19619:21;;;19676:2;19656:18;;;19649:30;-1:-1:-1;;;19710:2:644;19695:18;;19688:44;19764:2;19749:18;;19435:338::o;19778:545::-;19871:4;19877:6;19937:11;19924:25;20031:2;20027:7;20016:8;20000:14;19996:29;19992:43;19972:18;19968:68;19958:96;;20050:1;20047;20040:12;19958:96;20077:33;;20129:20;;;-1:-1:-1;;;;;;20161:30:644;;20158:50;;;20204:1;20201;20194:12;20158:50;20237:4;20225:17;;-1:-1:-1;20288:1:644;20284:14;;;20268;20264:35;20254:46;;20251:66;;;20313:1;20310;20303:12;21134:127;21195:10;21190:3;21186:20;21183:1;21176:31;21226:4;21223:1;21216:15;21250:4;21247:1;21240:15;21266:128;21306:3;21337:1;21333:6;21330:1;21327:13;21324:39;;;21343:18;;:::i;:::-;-1:-1:-1;21379:9:644;;21266:128::o;22413:168::-;22453:7;22519:1;22515;22511:6;22507:14;22504:1;22501:21;22496:1;22489:9;22482:17;22478:45;22475:71;;;22526:18;;:::i;:::-;-1:-1:-1;22566:9:644;;22413:168::o;22586:127::-;22647:10;22642:3;22638:20;22635:1;22628:31;22678:4;22675:1;22668:15;22702:4;22699:1;22692:15;22718:120;22758:1;22784;22774:35;;22789:18;;:::i;:::-;-1:-1:-1;22823:9:644;;22718:120::o;24594:127::-;24655:10;24650:3;24646:20;24643:1;24636:31;24686:4;24683:1;24676:15;24710:4;24707:1;24700:15;24726:333;24827:4;24885:11;24872:25;24979:3;24975:8;24964;24948:14;24944:29;24940:44;24920:18;24916:69;24906:97;;24999:1;24996;24989:12;24906:97;25020:33;;;;;24726:333;-1:-1:-1;;24726:333:644:o;25741:522::-;25819:4;25825:6;25885:11;25872:25;25979:2;25975:7;25964:8;25948:14;25944:29;25940:43;25920:18;25916:68;25906:96;;25998:1;25995;25988:12;25906:96;26025:33;;26077:20;;;-1:-1:-1;;;;;;26109:30:644;;26106:50;;;26152:1;26149;26142:12;26106:50;26185:4;26173:17;;-1:-1:-1;26216:14:644;26212:27;;;26202:38;;26199:58;;;26253:1;26250;26243:12;26394:545;26496:2;26491:3;26488:11;26485:448;;;26532:1;26557:5;26553:2;26546:17;26602:4;26598:2;26588:19;26672:2;26660:10;26656:19;26653:1;26649:27;26643:4;26639:38;26708:4;26696:10;26693:20;26690:47;;;-1:-1:-1;26731:4:644;26690:47;26786:2;26781:3;26777:12;26774:1;26770:20;26764:4;26760:31;26750:41;;26841:82;26859:2;26852:5;26849:13;26841:82;;;26904:17;;;26885:1;26874:13;26841:82;;27115:1190;-1:-1:-1;;;;;27218:3:644;27215:27;27212:53;;;27245:18;;:::i;:::-;27274:94;27364:3;27324:38;27356:4;27350:11;27324:38;:::i;:::-;27318:4;27274:94;:::i;:::-;27394:1;27419:2;27414:3;27411:11;27436:1;27431:616;;;;28091:1;28108:3;28105:93;;;-1:-1:-1;28164:19:644;;;28151:33;28105:93;-1:-1:-1;;27072:1:644;27068:11;;;27064:24;27060:29;27050:40;27096:1;27092:11;;;27047:57;28211:78;;27404:895;;27431:616;26341:1;26334:14;;;26378:4;26365:18;;-1:-1:-1;;27467:17:644;;;27568:9;27590:229;27604:7;27601:1;27598:14;27590:229;;;27693:19;;;27680:33;27665:49;;27800:4;27785:20;;;;27753:1;27741:14;;;;27620:12;27590:229;;;27594:3;27847;27838:7;27835:16;27832:159;;;27971:1;27967:6;27961:3;27955;27952:1;27948:11;27944:21;27940:34;27936:39;27923:9;27918:3;27914:19;27901:33;27897:79;27889:6;27882:95;27832:159;;;28034:1;28028:3;28025:1;28021:11;28017:19;28011:4;28004:33;27404:895;;27115:1190;;;:::o;28310:956::-;28489:5;28476:19;28470:4;28463:33;28550:2;28543:5;28539:14;28526:28;28522:1;28516:4;28512:12;28505:50;28609:2;28602:5;28598:14;28585:28;28581:1;28575:4;28571:12;28564:50;28668:2;28661:5;28657:14;28644:28;28640:1;28634:4;28630:12;28623:50;28727:3;28720:5;28716:15;28703:29;28699:1;28693:4;28689:12;28682:51;28787:3;28780:5;28776:15;28763:29;28759:1;28753:4;28749:12;28742:51;28830:1;28824:4;28820:12;28880:3;28873:5;28869:15;28856:29;28894:33;28919:7;28894:33;:::i;:::-;28962:17;;-1:-1:-1;;;;;;28958:48:644;-1:-1:-1;;;;;29008:33:644;;;;28955:87;28936:107;;29086:66;29147:3;29136:15;;29140:5;29086:66;:::i;:::-;29161:99;29246:13;29233:11;29229:1;29223:4;29219:12;29161:99;:::i;29271:135::-;29310:3;-1:-1:-1;;29331:17:644;;29328:43;;;29351:18;;:::i;:::-;-1:-1:-1;29398:1:644;29387:13;;29271:135::o;29411:504::-;29470:5;29477:6;29537:3;29524:17;29623:2;29619:7;29608:8;29592:14;29588:29;29584:43;29564:18;29560:68;29550:96;;29642:1;29639;29632:12;29550:96;29670:33;;29774:4;29761:18;;;-1:-1:-1;29722:21:644;;-1:-1:-1;;;;;;29791:30:644;;29788:50;;;29834:1;29831;29824:12;29788:50;29884:6;29868:14;29864:27;29854:8;29850:42;29847:62;;;29905:1;29902;29895:12;29920:267;30009:6;30004:3;29997:19;30061:6;30054:5;30047:4;30042:3;30038:14;30025:43;-1:-1:-1;30113:1:644;30088:16;;;30106:4;30084:27;;;30077:38;;;;30169:2;30148:15;;;-1:-1:-1;;30144:29:644;30135:39;;;30131:50;;29920:267::o;30192:2051::-;30463:2;30515:21;;;30488:18;;;30571:22;;;30434:4;;30612:2;30630:18;;;30694:1;30690:14;;;30675:30;;30671:39;;30733:6;30434:4;;30788:1372;30804:6;30799:3;30796:15;30788:1372;;;30873:22;;;-1:-1:-1;;30869:36:644;30857:49;;30945:20;;31020:14;31016:27;;;-1:-1:-1;;31012:42:644;30988:67;;30978:95;;31069:1;31066;31059:12;30978:95;31099:31;;31187:19;;31172:35;;31230:4;31284:14;;;31271:28;31254:15;;;31247:53;31350:14;;;31337:28;31320:15;;;31313:53;31416:14;;;31403:28;31386:15;;;31379:53;31455:4;31509:14;;;31496:28;31479:15;;;31472:53;31548:4;31602:14;;;31589:28;31572:15;;;31565:53;31153:6;;31641:4;31686:14;;;31673:28;31714:33;31673:28;31714:33;:::i;:::-;-1:-1:-1;;;;;31784:33:644;31767:15;;;31760:58;31841:4;31892:54;31931:14;;;31935:5;31892:54;:::i;:::-;31858:88;;31983:2;31978;31970:6;31966:15;31959:27;32009:71;32076:2;32068:6;32064:15;32050:12;32036;32009:71;:::i;:::-;32138:12;;;;31999:81;-1:-1:-1;;;32103:15:644;;;;;-1:-1:-1;;30830:1:644;30821:11;30788:1372;;;-1:-1:-1;;;470:13:644;;463:21;32231:4;32216:20;;451:34;32177:6;-1:-1:-1;32192:45:644;;-1:-1:-1;;;400:91:644;32774:125;32814:4;32842:1;32839;32836:8;32833:34;;;32847:18;;:::i;:::-;-1:-1:-1;32884:9:644;;32774:125::o;32904:136::-;32943:3;32971:5;32961:39;;32980:18;;:::i;:::-;-1:-1:-1;;;33016:18:644;;32904:136::o;34298:185::-;34340:3;34378:5;34372:12;34393:52;34438:6;34433:3;34426:4;34419:5;34415:16;34393:52;:::i;:::-;34461:16;;;;;34298:185;-1:-1:-1;;34298:185:644:o;34488:784::-;-1:-1:-1;;;34894:3:644;34887:36;34869:3;34952:6;34946:13;34968:62;35023:6;35018:2;35013:3;35009:12;35002:4;34994:6;34990:17;34968:62;:::i;:::-;-1:-1:-1;;;35089:2:644;35049:16;;;35081:11;;;35074:40;35139:13;;35161:63;35139:13;35210:2;35202:11;;35195:4;35183:17;;35161:63;:::i;:::-;35244:17;35263:2;35240:26;;34488:784;-1:-1:-1;;;;34488:784:644:o;35277:407::-;35479:2;35461:21;;;35518:2;35498:18;;;35491:30;35557:34;35552:2;35537:18;;35530:62;-1:-1:-1;;;35623:2:644;35608:18;;35601:41;35674:3;35659:19;;35277:407::o;35689:416::-;35891:2;35873:21;;;35930:2;35910:18;;;35903:30;35969:34;35964:2;35949:18;;35942:62;-1:-1:-1;;;36035:2:644;36020:18;;36013:50;36095:3;36080:19;;35689:416::o;36110:405::-;36307:2;36296:9;36289:21;36270:4;36333:56;36385:2;36374:9;36370:18;36362:6;36333:56;:::i;:::-;36437:9;36429:6;36425:22;36420:2;36409:9;36405:18;36398:50;36465:44;36502:6;36494;36465:44;:::i;:::-;36457:52;36110:405;-1:-1:-1;;;;;36110:405:644:o;36520:339::-;36722:2;36704:21;;;36761:2;36741:18;;;36734:30;-1:-1:-1;;;36795:2:644;36780:18;;36773:45;36850:2;36835:18;;36520:339::o;37789:819::-;38122:3;38111:9;38104:22;38085:4;38149:63;38207:3;38196:9;38192:19;38184:6;38176;38149:63;:::i;:::-;38260:9;38252:6;38248:22;38243:2;38232:9;38228:18;38221:50;38294;38337:6;38329;38321;38294:50;:::i;:::-;38280:64;;38392:9;38384:6;38380:22;38375:2;38364:9;38360:18;38353:50;38426;38469:6;38461;38453;38426:50;:::i;:::-;38412:64;;38524:9;38516:6;38512:22;38507:2;38496:9;38492:18;38485:50;38552;38595:6;38587;38579;38552:50;:::i;:::-;38544:58;37789:819;-1:-1:-1;;;;;;;;;;;37789:819:644:o;38613:500::-;-1:-1:-1;;;;;38882:15:644;;;38864:34;;38934:15;;38929:2;38914:18;;38907:43;38981:2;38966:18;;38959:34;;;39029:3;39024:2;39009:18;;39002:31;;;38807:4;;39050:57;;39087:19;;39079:6;39050:57;:::i;39118:249::-;39187:6;39240:2;39228:9;39219:7;39215:23;39211:32;39208:52;;;39256:1;39253;39246:12;39208:52;39288:9;39282:16;39307:30;39331:5;39307:30;:::i;40140:274::-;40269:3;40307:6;40301:13;40323:53;40369:6;40364:3;40357:4;40349:6;40345:17;40323:53;:::i;40986:995::-;-1:-1:-1;;;41486:43:644;;41552:13;;41468:3;;41574:61;41552:13;41624:1;41615:11;;41608:4;41596:17;;41574:61;:::i;:::-;-1:-1:-1;;;41694:1:644;41654:16;;;41686:10;;;41679:73;41777:13;;41799:63;41777:13;41848:2;41840:11;;41833:4;41821:17;;41799:63;:::i;:::-;-1:-1:-1;;;41922:2:644;41881:17;;;;41914:11;;;41907:41;41972:2;41964:11;;40986:995;-1:-1:-1;;;;40986:995:644:o;41986:617::-;-1:-1:-1;;;42337:43:644;;42403:13;;42319:3;;42425:61;42403:13;42475:1;42466:11;;42459:4;42447:17;;42425:61;:::i;:::-;-1:-1:-1;;;42545:1:644;42505:16;;;;42537:10;;;42530:40;-1:-1:-1;42594:2:644;42586:11;;41986:617;-1:-1:-1;41986:617:644:o;42608:635::-;-1:-1:-1;;;42959:59:644;;43041:13;;42941:3;;43063:62;43041:13;43113:2;43104:12;;43097:4;43085:17;;43063:62;:::i;:::-;-1:-1:-1;;;43184:2:644;43144:16;;;;43176:11;;;43169:41;-1:-1:-1;43234:2:644;43226:11;;42608:635;-1:-1:-1;42608:635:644:o;43532:2268::-;-1:-1:-1;;;44729:45:644;;44797:13;;44711:3;;44819:62;44797:13;44869:2;44860:12;;44853:4;44841:17;;44819:62;:::i;:::-;-1:-1:-1;;;44940:2:644;44900:16;;;44932:11;;;44925:24;44974:13;;44996:63;44974:13;45045:2;45037:11;;45030:4;45018:17;;44996:63;:::i;:::-;-1:-1:-1;;;45158:2:644;45078:17;;;;45150:11;;;45143:23;;;-1:-1:-1;;;45190:2:644;45182:11;;45175:63;45263:13;;45285:63;45263:13;45334:2;45326:11;;45319:4;45307:17;;45285:63;:::i;:::-;45408:2;45367:17;;45400:11;;;45393:23;45441:13;;45463:63;45441:13;45512:2;45504:11;;45497:4;45485:17;;45463:63;:::i;:::-;-1:-1:-1;;;45586:2:644;45545:17;;;;45578:11;;;45571:80;45667:127;45697:96;45723:69;45753:38;45787:2;45779:11;;45771:6;45753:38;:::i;:::-;-1:-1:-1;;;43313:47:644;;43385:2;43376:12;;43248:146;45723:69;45715:6;45697:96;:::i;:::-;-1:-1:-1;;;43464:30:644;;43519:1;43510:11;;43399:128;45667:127;45660:134;43532:2268;-1:-1:-1;;;;;;;;;43532:2268:644:o;45805:448::-;46067:31;46062:3;46055:44;46037:3;46128:6;46122:13;46144:62;46199:6;46194:2;46189:3;46185:12;46178:4;46170:6;46166:17;46144:62;:::i;:::-;46226:16;;;;46244:2;46222:25;;45805:448;-1:-1:-1;;45805:448:644:o;46638:112::-;46670:1;46696;46686:35;;46701:18;;:::i;:::-;-1:-1:-1;46735:9:644;;46638:112::o;46755:245::-;46822:6;46875:2;46863:9;46854:7;46850:23;46846:32;46843:52;;;46891:1;46888;46881:12;46843:52;46923:9;46917:16;46942:28;46964:5;46942:28;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "DEFAULT_ADMIN_ROLE()": "a217fddf",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "burn(uint256)": "42966c68",
    "claim(address,uint256,address,uint256,(bytes32[],uint256,uint256,address),bytes)": "84bb1e42",
    "claimCondition()": "d637ed59",
    "contractURI()": "e8a3d485",
    "explicitOwnershipOf(uint256)": "c23dc68f",
    "getActiveClaimConditionId()": "c68907de",
    "getApproved(uint256)": "081812fc",
    "getClaimConditionById(uint256)": "6f8934f4",
    "getDefaultRoyaltyInfo()": "b24f2d39",
    "getRoleAdmin(bytes32)": "248a9ca3",
    "getRoleMember(bytes32,uint256)": "9010d07c",
    "getRoleMemberCount(bytes32)": "ca15c873",
    "getRoyaltyInfoForToken(uint256)": "4cc157df",
    "getSupplyClaimedByWallet(uint256,address)": "ad1eefc5",
    "grantRole(bytes32,address)": "2f2ff15d",
    "hasRole(bytes32,address)": "91d14854",
    "hasRoleWithSwitch(bytes32,address)": "a32fa5b3",
    "initialize(address,string,string,string,address[],address,address,uint128)": "49c5c5b6",
    "isApprovedForAll(address,address)": "e985e9c5",
    "isTrustedForwarder(address)": "572b6c05",
    "multicall(bytes[])": "ac9650d8",
    "name()": "06fdde03",
    "nextTokenIdToClaim()": "acd083f8",
    "nextTokenIdToMint()": "3b1475a7",
    "owner()": "8da5cb5b",
    "ownerOf(uint256)": "6352211e",
    "primarySaleRecipient()": "079fe40e",
    "renounceRole(bytes32,address)": "36568abe",
    "revokeRole(bytes32,address)": "d547741f",
    "royaltyInfo(uint256,uint256)": "2a55205a",
    "safeTransferFrom(address,address,uint256)": "42842e0e",
    "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
    "setApprovalForAll(address,bool)": "a22cb465",
    "setClaimConditions((uint256,uint256,uint256,uint256,bytes32,uint256,address,string)[],bool)": "74bc7db7",
    "setContractURI(string)": "938e3d7b",
    "setDefaultRoyaltyInfo(address,uint256)": "600dd5ea",
    "setOwner(address)": "13af4035",
    "setPrimarySaleRecipient(address)": "6f4f2837",
    "setRoyaltyInfoForToken(uint256,address,uint256)": "9bcf7a15",
    "setSharedMetadata((string,string,string,string))": "a7d27d9d",
    "sharedMetadata()": "b280f703",
    "startTokenId()": "e6798baa",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "tokenURI(uint256)": "c87b56dd",
    "tokensOfOwner(address)": "8462151c",
    "tokensOfOwnerIn(address,uint256,uint256)": "99a2557a",
    "totalMinted()": "a2309ff8",
    "totalSupply()": "18160ddd",
    "transferFrom(address,address,uint256)": "23b872dd",
    "verifyClaim(uint256,address,uint256,address,uint256,(bytes32[],uint256,uint256,address))": "23a2902b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidQueryRange\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxClaimableSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"}],\"indexed\":false,\"internalType\":\"struct IClaimCondition.ClaimCondition[]\",\"name\":\"claimConditions\",\"type\":\"tuple[]\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"resetEligibility\",\"type\":\"bool\"}],\"name\":\"ClaimConditionsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"prevURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newURI\",\"type\":\"string\"}],\"name\":\"ContractURIUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newRoyaltyRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newRoyaltyBps\",\"type\":\"uint256\"}],\"name\":\"DefaultRoyalty\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"prevOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"PrimarySaleRecipientUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"royaltyRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"royaltyBps\",\"type\":\"uint256\"}],\"name\":\"RoyaltyForToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"imageURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"animationURI\",\"type\":\"string\"}],\"name\":\"SharedMetadataUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"claimConditionIndex\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantityClaimed\",\"type\":\"uint256\"}],\"name\":\"TokensClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_pricePerToken\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"internalType\":\"struct IDrop.AllowlistProof\",\"name\":\"_allowlistProof\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimCondition\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"currentStartId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"explicitOwnershipOf\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"startTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"burned\",\"type\":\"bool\"},{\"internalType\":\"uint24\",\"name\":\"extraData\",\"type\":\"uint24\"}],\"internalType\":\"struct IERC721AUpgradeable.TokenOwnership\",\"name\":\"ownership\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getActiveClaimConditionId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_conditionId\",\"type\":\"uint256\"}],\"name\":\"getClaimConditionById\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxClaimableSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"}],\"internalType\":\"struct IClaimCondition.ClaimCondition\",\"name\":\"condition\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDefaultRoyaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getRoyaltyInfoForToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_conditionId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_claimer\",\"type\":\"address\"}],\"name\":\"getSupplyClaimedByWallet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"supplyClaimedByWallet\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRoleWithSwitch\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_defaultAdmin\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_contractURI\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"_trustedForwarders\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"_saleRecipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_royaltyRecipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"_royaltyBps\",\"type\":\"uint128\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextTokenIdToClaim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextTokenIdToMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"primarySaleRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxClaimableSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"}],\"internalType\":\"struct IClaimCondition.ClaimCondition[]\",\"name\":\"_conditions\",\"type\":\"tuple[]\"},{\"internalType\":\"bool\",\"name\":\"_resetClaimEligibility\",\"type\":\"bool\"}],\"name\":\"setClaimConditions\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"setContractURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_royaltyRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_royaltyBps\",\"type\":\"uint256\"}],\"name\":\"setDefaultRoyaltyInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_saleRecipient\",\"type\":\"address\"}],\"name\":\"setPrimarySaleRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_bps\",\"type\":\"uint256\"}],\"name\":\"setRoyaltyInfoForToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"imageURI\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"animationURI\",\"type\":\"string\"}],\"internalType\":\"struct ISharedMetadata.SharedMetadataInfo\",\"name\":\"_metadata\",\"type\":\"tuple\"}],\"name\":\"setSharedMetadata\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sharedMetadata\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"imageURI\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"animationURI\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startTokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"tokensOfOwner\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stop\",\"type\":\"uint256\"}],\"name\":\"tokensOfOwnerIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_conditionId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_claimer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_pricePerToken\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"internalType\":\"struct IDrop.AllowlistProof\",\"name\":\"_allowlistProof\",\"type\":\"tuple\"}],\"name\":\"verifyClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isOverride\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. See {ERC721A-_approve}. Requirements: - The caller must own the token or be an approved operator.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in `owner`'s account.\"},\"burn(uint256)\":{\"details\":\"Burns `tokenId`. See {ERC721-_burn}.\"},\"claim(address,uint256,address,uint256,(bytes32[],uint256,uint256,address),bytes)\":{\"details\":\"Lets an account claim tokens.\"},\"explicitOwnershipOf(uint256)\":{\"details\":\"Returns the `TokenOwnership` struct at `tokenId` without reverting. If the `tokenId` is out of bounds: - `addr = address(0)` - `startTimestamp = 0` - `burned = false` - `extraData = 0` If the `tokenId` is burned: - `addr = <Address of owner before token was burned>` - `startTimestamp = <Timestamp when token was burned>` - `burned = true` - `extraData = <Extra data when token was burned>` Otherwise: - `addr = <Address of owner>` - `startTimestamp = <Timestamp of start of ownership>` - `burned = false` - `extraData = <Extra data at start of ownership>`\"},\"getActiveClaimConditionId()\":{\"details\":\"At any given moment, returns the uid for the active claim condition.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"getClaimConditionById(uint256)\":{\"details\":\"Returns the claim condition at the given uid.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"See {grantRole} and {revokeRole}.                  To change a role's admin, use {_setRoleAdmin}.\",\"params\":{\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns `member` who has `role`, at `index` of role-members list.                  See struct {RoleMembers}, and mapping {roleMembers}\",\"params\":{\"index\":\"Index in list of current members for the role.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"},\"returns\":{\"member\":\" Address of account that has `role`\"}},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns `count` of accounts that have `role`.                  See struct {RoleMembers}, and mapping {roleMembers}\",\"params\":{\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"},\"returns\":{\"count\":\"  Total number of accounts that have `role`\"}},\"getRoyaltyInfoForToken(uint256)\":{\"details\":\"Returns royalty recipient and bps for `_tokenId`.\",\"params\":{\"_tokenId\":\"The tokenID of the NFT for which to query royalty info.\"}},\"getSupplyClaimedByWallet(uint256,address)\":{\"details\":\"Returns the supply claimed by claimer for a given conditionId.\"},\"grantRole(bytes32,address)\":{\"details\":\"Caller must have admin role for the `role`.                  Emits {RoleGranted Event}.\",\"params\":{\"account\":\"Address of the account to which the role is being granted.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\",\"params\":{\"account\":\"Address of the account for which the role is being checked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"hasRoleWithSwitch(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.                  Role restrictions can be swtiched on and off:                      - If address(0) has ROLE, then the ROLE restrictions                        don't apply.                      - If address(0) does not have ROLE, then the ROLE                        restrictions will apply.\",\"params\":{\"account\":\"Address of the account for which the role is being checked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"initialize(address,string,string,string,address[],address,address,uint128)\":{\"details\":\"Initializes the contract, like a constructor.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}.\"},\"multicall(bytes[])\":{\"details\":\"Receives and executes a batch of function calls on this contract.\",\"params\":{\"data\":\"The bytes data that makes up the batch of function calls to execute.\"},\"returns\":{\"results\":\"The bytes data that makes up the result of the batch of function calls executed.\"}},\"name()\":{\"details\":\"Returns the token collection name.\"},\"nextTokenIdToClaim()\":{\"details\":\"The next token ID of the NFT that can be claimed.\"},\"nextTokenIdToMint()\":{\"details\":\"The tokenId of the next NFT that will be minted / lazy minted.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"primarySaleRecipient()\":{\"details\":\"Returns primary sale recipient address.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Caller must have the `role`, with caller being the same as `account`.                  Emits {RoleRevoked Event}.\",\"params\":{\"account\":\"Address of the account from which the role is being revoked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"revokeRole(bytes32,address)\":{\"details\":\"Caller must have admin role for the `role`.                  Emits {RoleRevoked Event}.\",\"params\":{\"account\":\"Address of the account from which the role is being revoked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"royaltyInfo(uint256,uint256)\":{\"details\":\"Returns royalty amount and recipient for `tokenId` and `salePrice`.\",\"params\":{\"salePrice\":\"Sale price of the token.\",\"tokenId\":\"The tokenID of the NFT for which to query royalty info.\"},\"returns\":{\"receiver\":\"       Address of royalty recipient account.\",\"royaltyAmount\":\"  Royalty amount calculated at current royaltyBps value.\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"setClaimConditions((uint256,uint256,uint256,uint256,bytes32,uint256,address,string)[],bool)\":{\"details\":\"Lets a contract admin set claim conditions.\"},\"setContractURI(string)\":{\"details\":\"Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.\",\"params\":{\"_uri\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"setDefaultRoyaltyInfo(address,uint256)\":{\"details\":\"Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {DefaultRoyalty Event}; See {_setupDefaultRoyaltyInfo}.\",\"params\":{\"_royaltyBps\":\"Updated royalty bps.\",\"_royaltyRecipient\":\"Address to be set as default royalty recipient.\"}},\"setOwner(address)\":{\"params\":{\"_newOwner\":\"The address to set as the new owner of the contract.\"}},\"setPrimarySaleRecipient(address)\":{\"details\":\"Caller should be authorized to set primary sales info.                  See {_canSetPrimarySaleRecipient}.                  Emits {PrimarySaleRecipientUpdated Event}; See {_setupPrimarySaleRecipient}.\",\"params\":{\"_saleRecipient\":\"Address to be set as new recipient of primary sales.\"}},\"setRoyaltyInfoForToken(uint256,address,uint256)\":{\"details\":\"Sets royalty info for `_tokenId`. Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {RoyaltyForToken Event}; See {_setupRoyaltyInfoForToken}.\",\"params\":{\"_bps\":\"Updated royalty bps for the token Id.\",\"_recipient\":\"Address to be set as royalty recipient for given token Id.\"}},\"supportsInterface(bytes4)\":{\"details\":\"See ERC 165\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the URI for a given tokenId.\"},\"tokensOfOwner(address)\":{\"details\":\"Returns an array of token IDs owned by `owner`. This function scans the ownership mapping and is O(`totalSupply`) in complexity. It is meant to be called off-chain. See {ERC721AQueryable-tokensOfOwnerIn} for splitting the scan into multiple smaller scans if the collection is large enough to cause an out-of-gas error (10K collections should be fine).\"},\"tokensOfOwnerIn(address,uint256,uint256)\":{\"details\":\"Returns an array of token IDs owned by `owner`, in the range [`start`, `stop`) (i.e. `start <= tokenId < stop`). This function allows for tokens to be queried if the collection grows too big for a single call of {ERC721AQueryable-tokensOfOwner}. Requirements: - `start < stop`\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"},\"verifyClaim(uint256,address,uint256,address,uint256,(bytes32[],uint256,uint256,address))\":{\"details\":\"Checks a request to claim NFTs against the active claim condition's criteria.\"}},\"stateVariables\":{\"MAX_BPS\":{\"details\":\"Max bps in the thirdweb system.\"},\"minterRole\":{\"details\":\"Only MINTER_ROLE holders can update the shared metadata of tokens.\"},\"transferRole\":{\"details\":\"Only transfers to or from TRANSFER_ROLE holders are valid, when transfers are restricted.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"InvalidQueryRange()\":[{\"notice\":\"Invalid query range (`start` >= `stop`).\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"events\":{\"ClaimConditionsUpdated((uint256,uint256,uint256,uint256,bytes32,uint256,address,string)[],bool)\":{\"notice\":\"Emitted when the contract's claim conditions are updated.\"},\"SharedMetadataUpdated(string,string,string,string)\":{\"notice\":\"Emitted when shared metadata is lazy minted.\"},\"TokensClaimed(uint256,address,address,uint256,uint256)\":{\"notice\":\"Emitted when tokens are claimed via `claim`.\"}},\"kind\":\"user\",\"methods\":{\"contractURI()\":{\"notice\":\"Returns the contract metadata URI.\"},\"getDefaultRoyaltyInfo()\":{\"notice\":\"Returns the defualt royalty recipient and BPS for this contract's NFTs.\"},\"getRoleAdmin(bytes32)\":{\"notice\":\"Returns the admin role that controls the specified role.\"},\"getRoleMember(bytes32,uint256)\":{\"notice\":\"Returns the role-member from a list of members for a role,                  at a given index.\"},\"getRoleMemberCount(bytes32)\":{\"notice\":\"Returns total number of accounts that have a role.\"},\"getRoyaltyInfoForToken(uint256)\":{\"notice\":\"View royalty info for a given token.\"},\"grantRole(bytes32,address)\":{\"notice\":\"Grants a role to an account, if not previously granted.\"},\"hasRole(bytes32,address)\":{\"notice\":\"Checks whether an account has a particular role.\"},\"hasRoleWithSwitch(bytes32,address)\":{\"notice\":\"Checks whether an account has a particular role;                  role restrictions can be swtiched on and off.\"},\"multicall(bytes[])\":{\"notice\":\"Receives and executes a batch of function calls on this contract.\"},\"owner()\":{\"notice\":\"Returns the owner of the contract.\"},\"renounceRole(bytes32,address)\":{\"notice\":\"Revokes role from the account.\"},\"revokeRole(bytes32,address)\":{\"notice\":\"Revokes role from an account.\"},\"royaltyInfo(uint256,uint256)\":{\"notice\":\"View royalty info for a given token and sale price.\"},\"setContractURI(string)\":{\"notice\":\"Lets a contract admin set the URI for contract-level metadata.\"},\"setDefaultRoyaltyInfo(address,uint256)\":{\"notice\":\"Updates default royalty recipient and bps.\"},\"setOwner(address)\":{\"notice\":\"Lets an authorized wallet set a new owner for the contract.\"},\"setPrimarySaleRecipient(address)\":{\"notice\":\"Updates primary sale recipient.\"},\"setRoyaltyInfoForToken(uint256,address,uint256)\":{\"notice\":\"Updates default royalty recipient and bps for a particular token.\"},\"setSharedMetadata((string,string,string,string))\":{\"notice\":\"Set shared metadata for NFTs\"},\"sharedMetadata()\":{\"notice\":\"Token metadata information\"},\"totalMinted()\":{\"notice\":\"Returns the total amount of tokens minted in the contract.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/prebuilts/open-edition/OpenEditionERC721.sol\":\"OpenEditionERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@std/=lib/forge-std/src/\",\":@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/\",\":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/\",\":contracts/=contracts/\",\":ds-test/=lib/ds-test/src/\",\":dynamic-contracts/=lib/dynamic-contracts/src/\",\":erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/ERC721A-Upgradeable/\",\":erc721a/=lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/\"]},\"sources\":{\"contracts/eip/interface/IERC165.sol\":{\"keccak256\":\"0x35d0a916f70344a5fcc6c67cb531b6150d2fce43e72a6282385eab02020f2f49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75ccd8b9a8b52a93b8097fcb8181b7afb6d72bbe6eaabf434f0481a7a207cc8a\",\"dweb:/ipfs/QmPUZAEE4nwkijcE2amAXAWEVGVG5XaKWGhpgnRwpAf93R\"]},\"contracts/eip/interface/IERC20.sol\":{\"keccak256\":\"0x5bdd9dd97ba7d9d7c9a2953db287e4d9d7fa93a27a96bc2e72a8da4919b6f7ff\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://45527c265ee5de6bbb3ecfc052e7b1175531a82c2ac16172020aee855f7dd592\",\"dweb:/ipfs/QmVZthqbG916qUQSwv1LE8bB58ZGQ1VfQbLbbRV5urfEYA\"]},\"contracts/eip/interface/IERC2981.sol\":{\"keccak256\":\"0x7886c17b1bc3df885201378fd070d2f00d05fa54f20f7daf10382ec6ff4bd0c9\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://a0802623ba9555f6d186bab5fd139203b643e88ea31d78f4f05cddd4008ac6cf\",\"dweb:/ipfs/QmYbqzSKkKmF2xYeH1zGNewBDNAhukuaZEUVAvYgnKt1He\"]},\"contracts/eip/interface/IERC4906.sol\":{\"keccak256\":\"0xa31c36a97c9133c8a451aaec1aa585537cacd71760eb6c5ce402155313efb392\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f3d6fee0ee338d9d0041e7a094efe2f0cd1d4a05b8b127e4f8928f5d3bac8fc4\",\"dweb:/ipfs/Qmcrgw6xMNvsFBfYh51FmFnRP14EEThSSp4n6F6QeKLhy3\"]},\"contracts/eip/interface/IERC721.sol\":{\"keccak256\":\"0xbd9f2dd131e8f1e4e50b1b116eae917510ab9bf5d4356de37c5daf4cffdfa049\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ac3530b317083464271b100de1976ed9179b9e7d5a4fc3d992c61c80676a676\",\"dweb:/ipfs/QmUq1AVzymvp7Y8H1eypGEGU4icjzn5vDSvKMNpXnoaeMT\"]},\"contracts/eip/queryable/ERC721AQueryableUpgradeable.sol\":{\"keccak256\":\"0xcea59e91a24bd3d1f96e7a2d55f16975c73d05c27958d83cfdb9e4d32af9f31a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://55aa2f46ac5c44440475284305a3428d404313560d688783e6bc7e2b2183fbec\",\"dweb:/ipfs/QmTTq6SJ2yZrpsqshztataPDa4Jp9KhfKwRVMUR3eJLtrC\"]},\"contracts/eip/queryable/ERC721AStorage.sol\":{\"keccak256\":\"0x5703e46ac0beec3d3e64e5cc9fa8841a9860d375777515fe341ade8c3dd2418a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8949a575710a700da1c9753ead62b1b98a5cceb446cd13a5271e94f557071760\",\"dweb:/ipfs/QmPRMyXzfHDom2Pfn5aQJJsA4AsojZBmsiDk2fNdtLW5yS\"]},\"contracts/eip/queryable/ERC721AUpgradeable.sol\":{\"keccak256\":\"0xec0039115e836191bd350b6d5e4781b27cbe85bfed9e4009b6bf891addfb6291\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e69d0987ba4390bf21bdc6e149ad5d3c1b06894418c723a42575327a4edbc8ac\",\"dweb:/ipfs/QmPfUAP2NNR8kuQkSAbrBDPEyEKsUXLgwQoq9H5i5RRBhL\"]},\"contracts/eip/queryable/ERC721A__Initializable.sol\":{\"keccak256\":\"0x91d642fafae97248c4da7e8e4d861af2f52bdf19abadd9bbd337226439208146\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b018641078c2cce6629f097b9824b5fbf9f1ba8c7b95de92467997a4c9831d5\",\"dweb:/ipfs/QmP4G7zZmwyxp3awVJtdPzLQ77MY6wNe6CBfjfkfQJkdLZ\"]},\"contracts/eip/queryable/ERC721A__InitializableStorage.sol\":{\"keccak256\":\"0x2bc417d73b72ea83a2952fe8da3fa4cc96a12fdb8fc3d4ee7cf8639ad5f39b43\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29e4dd2c81f14dba0525f55e81718da757c1e60d6b74bc33964d185d1abb051c\",\"dweb:/ipfs/QmcywxZ2UPRTbQYgNKpMjt43TC9hYbGnAnX2atMrVqQsZ9\"]},\"contracts/eip/queryable/IERC721AQueryableUpgradeable.sol\":{\"keccak256\":\"0x8ed8602663a08364759d98051c6c8f872bd056e84e8901bbb05bcd7f823d390f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ef76d5d5955157fa01116cd735c88181b954f57180662db3afa01d19611799a\",\"dweb:/ipfs/QmTXSaJdYuA9RFSSBibEycJ3sqLAkC8uQGTEkeYHcyBTYd\"]},\"contracts/eip/queryable/IERC721AUpgradeable.sol\":{\"keccak256\":\"0xa8e2bf92476033e48df3911783487b46bcd20f6490a6fdc8c93ca7a0e94bca20\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e9c32378e93dc798ff46d6679313fa3a0fbb1be1afd6fa2bef0d1417a77d5c8\",\"dweb:/ipfs/QmVqTn3xKbiUaUyRweDj64r4JDB4RhcMRxpdwc76jcA5gK\"]},\"contracts/extension/ContractMetadata.sol\":{\"keccak256\":\"0xf53ab08ec3057056872c15e35a5610f7a43426bd2829786aed006d527177adfe\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ee132ae5efdd372152febfcd8fd3a7cb82c7019367d92c886f5096003a79f392\",\"dweb:/ipfs/QmRW1cGWmZAu57huZpTUwsWB8AxUFrBp6g4NqozXpbWsR6\"]},\"contracts/extension/Drop.sol\":{\"keccak256\":\"0x11e1f936e81e51b69d5130acc57a1b95c6428f55265492a7f8bbc1e76a7f9acc\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9d1ac7b9be364630343fc9d0509c67e8ba9de07a28a9520461a4c81fe122701c\",\"dweb:/ipfs/Qme1eucpamqAkL2xFfcYHWPmo4aNk8SNuWSfk2R2uW7pYZ\"]},\"contracts/extension/Multicall.sol\":{\"keccak256\":\"0x737a71c74307fa360863550d64bbaef599bbcb47829b19c3743ed1ff22b9af55\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://7e82a79ee183dffa3ec01faac0907e04d72a185e55b7c24bff8e8e952b05f4c2\",\"dweb:/ipfs/QmQ9neZqpcgJtGgm84FBzMqFntZ1Sk1KFTWhjCMq8vnKDg\"]},\"contracts/extension/Ownable.sol\":{\"keccak256\":\"0x45447691686861237d5e1acb9d723d861a3fb3d561335e4f385d1547f25e27a5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5142293e36c736f744c73aaecab5f7be8e2d5ac70acc67851e0cea5171fd6782\",\"dweb:/ipfs/QmVJT5B84o5vFc5E2VteZdBhrT1HMutc7Ax72UKD1aZatJ\"]},\"contracts/extension/Permissions.sol\":{\"keccak256\":\"0xe7e18181f2d2c8bae4afc7ee69ce1d547e7aa583182e8e0853ca33c49a28c04d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://75d5f5a9356c290e398a5dd05914b59c3d09e6fedde2da80b6f1012aedf323f8\",\"dweb:/ipfs/QmNrrf8Uyq33XBsE2NqVTW6HVX3XixFTjCG8KGbGxdEE84\"]},\"contracts/extension/PermissionsEnumerable.sol\":{\"keccak256\":\"0x434a6ffc16ddc437ffb37b8fbe4c9696385252f15a617c4606b8c5e10561caf3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1a9d4dac4bf2ae3c3c086af1956dc25e8b149b0914125e660cc0648791c247cb\",\"dweb:/ipfs/QmTMEggPdBea1JCamsShwRf3en2FgVTXNTPJ2isFtBk4Kk\"]},\"contracts/extension/PrimarySale.sol\":{\"keccak256\":\"0x9ef1ad82fadf988a07f4034b92ccdb3281682693e41759a79042814d36095f42\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0d962b48453e1f50b808193135c2f14265324fa8b75fe3b405ef7836e38921f7\",\"dweb:/ipfs/QmZDLNsZQj9kNcb15nBuWRpPwDdDvJS2gtFwqEs2Lwxb1N\"]},\"contracts/extension/Royalty.sol\":{\"keccak256\":\"0xcc3110048db91d4ecd05afcc6721fce6ade5eee8c2da0af8955e86ece8754350\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a1e830502fda46ab7618b65e155341d42bf007717edb27711b09bf6250ce1485\",\"dweb:/ipfs/QmY5fKpg7aCubR7fENu9htRFspU8hpSo7CVUNJxQdh8kv1\"]},\"contracts/extension/SharedMetadata.sol\":{\"keccak256\":\"0x4a6cd7459ebc1afc270c46559e1e6e4e92546da350c012f3d42cce90b0352091\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://0577c1d6f6c66746167581e209f2043ccb476ab47e2e59e35deacec43c748421\",\"dweb:/ipfs/QmPqczyrVhdfBhtEVayQbFFUEM6CjCX2E1SPQyGKcMKL1G\"]},\"contracts/extension/interface/IClaimCondition.sol\":{\"keccak256\":\"0x391e69970031edb30dfa59f8db33c7446b349cd5ec505fd99f0f0b672b19e6d6\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fd9eafca6098421f3aa25bf0a0b24386facc764b7ecb8e6ce4a890afa3c6d459\",\"dweb:/ipfs/QmPXTSX2ie5wsZ6FyXWS4YMa7aPpYNyza9Rym1n799B5LU\"]},\"contracts/extension/interface/IClaimConditionMultiPhase.sol\":{\"keccak256\":\"0x8388214d6cc8f1fd481aed7e062a8b23d5959e870a56076017fcf474404dbbfa\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://54c039ba9f0e674a6bdbb0ab015ad4054feffaea7eb3cc7c485aa95761156125\",\"dweb:/ipfs/QmTya89XYsc1iGAhfsHeZkgGaAv7ivA5Vr4jrGCifYHmKh\"]},\"contracts/extension/interface/IContractMetadata.sol\":{\"keccak256\":\"0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a\",\"dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr\"]},\"contracts/extension/interface/IDrop.sol\":{\"keccak256\":\"0xa8fa4a9fde50a512383c1608295dab741357852822bf089b64dfc8e89041bbad\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://67e26a8f07f05daeebae7a4a652bfe90d4b62d057b737e00a9d3c1782f5bb093\",\"dweb:/ipfs/QmR9b1N5BAuRibaK1iJkyUD7kXE7F3GocjM985oT9wPdZo\"]},\"contracts/extension/interface/IMulticall.sol\":{\"keccak256\":\"0xe2bbd37b8fdb9cc8b933e598512a068ebb214b3f5abc2bc634916def55be4ef3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://012352099c262348ac755a53b082af520babc6c66dc5f1251fc23609728340ca\",\"dweb:/ipfs/QmcXEgzQ53jdJX5ZNy8zivvUjDq7J8WTnR1yAiwTpkQ2ar\"]},\"contracts/extension/interface/IOwnable.sol\":{\"keccak256\":\"0xd659a64da6264fdd50ee379be032fea4917eba4fadfd6d366107fb17e46907f3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c15940c4a3d229f4fdd1226fe297a58fde10b07b86a34de1ed11a8802dd5dea9\",\"dweb:/ipfs/QmS8p8CxWiahLkYsCWNhFjCnmQzuc4ck3kjYYuCFj8LsmC\"]},\"contracts/extension/interface/IPermissions.sol\":{\"keccak256\":\"0xc0cd1f87bac474a06f85e2b341b9b57662aee957fc24180d42c872481c2f2ae3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7dec3eed451d63867531d693f0be3279fa2c9aef3130f0826c3520c06820fa5d\",\"dweb:/ipfs/QmTYANrcPdd9SCe99DWsKJ19evNRQKQGZeoS1Keew4M2cS\"]},\"contracts/extension/interface/IPermissionsEnumerable.sol\":{\"keccak256\":\"0x2e742c18a4481bad41d56424cd16c52def2fb415f69e5fb5f67d8d979300ff95\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d9be33bb865e3e82aca540a3e38cbc2bf2e431f9d1bf39c50d6c757e7b7bf3ee\",\"dweb:/ipfs/Qmdad1Xqj5SQ44Bk4bwD2uA36XnGHtqnVYSomKZQvnUBVG\"]},\"contracts/extension/interface/IPrimarySale.sol\":{\"keccak256\":\"0x77c89cb8d9b781b0a08b1fa81c95a0dd5c19200b2fb0dc884c1084b931624004\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a37b042af11a08ba5518dadf72c91745d1b5f42b1c20ea5282492bfd18f53869\",\"dweb:/ipfs/QmWEYYG5VqR8MRfr2rydDV98GLKmaJtCC8G1W7MzJ9qFnF\"]},\"contracts/extension/interface/IRoyalty.sol\":{\"keccak256\":\"0x13912ba3970fdedd1eb5bf8bf0bcc5e64e43f2cadb8d22c3d6fb695fd9877385\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b84d19df7aa9cb7460cca50ab050cdcfffb62f53c246daf35df276cad7088e9b\",\"dweb:/ipfs/QmNPPHJuiW1KCcq3aXELnA4X8NaSPM9S2vHbsBEEDYiwP8\"]},\"contracts/extension/interface/ISharedMetadata.sol\":{\"keccak256\":\"0x854451e0d70760c7fbe438aa6f09e3c310fd501567e78ae7d37ab19dd82e0499\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://e5df37ec2be0af127bb0fd549cdf2599e55f5eeceed841953939309eb81e2a15\",\"dweb:/ipfs/QmVc3TgdN9MJU5HL8G9Tdx3ThzYtmLRtBrF9QrM3WDdMm7\"]},\"contracts/external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol\":{\"keccak256\":\"0xdbc96b1264d2e2bd82cb7e697056929325e09d1641321145a8cec53b22b9567d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ca7ccf947d21d98878ec18e941b750cd2ae7c563e6d2a707da4f806038d67c8\",\"dweb:/ipfs/QmYVLYUPMD3b95vKrS5yjxcz2MDNNzkWJY9xc9bc9oTZdh\"]},\"contracts/external-deps/openzeppelin/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xa6149938a7c7c8af4244743aeaafcfb1fd9ce15ad45de58fa9576f0ed5599b2c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://839aa4ea6ef6d1972881bfd7420a9ddcd2f37139e3f0bf25310f93f48410702d\",\"dweb:/ipfs/QmSH65kStfbgMbfjFdfJqV412omPy6nB1JMvMt9q7SsytW\"]},\"contracts/external-deps/openzeppelin/utils/Base64.sol\":{\"keccak256\":\"0x5f3461639fe20794cfb4db4a6d8477388a15b2e70a018043084b7c4bedfa8136\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77e5309e2cc4cdc3395214edb0ff43ff5a5f7373f5a425383e540f6fab530f96\",\"dweb:/ipfs/QmTV8DZ9knJDa3b5NPBFQqjvTzodyZVjRUg5mx5A99JPLJ\"]},\"contracts/infra/interface/IWETH.sol\":{\"keccak256\":\"0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1\",\"dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU\"]},\"contracts/lib/CurrencyTransferLib.sol\":{\"keccak256\":\"0x4a30bc9a8cd6cc8b855621fb1a651e2c3a1639b0ad153f1139c3ba463605672d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://417cc64ec6393f3cc89981ca9c32bbcc444a5f91363d69f84dd8ace888b2b859\",\"dweb:/ipfs/QmZeaQsYGx4VNoP8e1fcwC87PwvyakheWYeuwEwhFSJnvB\"]},\"contracts/lib/MerkleProof.sol\":{\"keccak256\":\"0xfeb51ecaba6f9c1649a143825dc3b7ca0eb9edff7787c7a54957dfd542f7ece0\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://8819ab0f7546a6a0dc126d5dbf019ba015563220689f661b1da4174f7ce87bbf\",\"dweb:/ipfs/QmT6Q9YQGMJbCWhE6G4ze8dsqjMyewnErTNGgLFSAHkFU7\"]},\"contracts/lib/NFTMetadataRendererLib.sol\":{\"keccak256\":\"0x9e12205ebe6fb7d2ea3fdc57e4e7e8b0c859a7907ed4ea9d912133b67c0eee75\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://530f58f9b6861d1d8c33b3387fdab0f495bdc95742319ea563f1e5902e9080e1\",\"dweb:/ipfs/QmP8yDzk468awMtEaB8yyN9q74U2tv3fLQy6QC9iraQjxF\"]},\"contracts/lib/TWAddress.sol\":{\"keccak256\":\"0x460f032cf3bf43d586e126ab2ec8be4335767f497ccb699741546a1cfba94a7e\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://28fcbf6dde6c2eeb9864f6ec6f21dcc81ec426877debf4b912f2f3bc5b0fc91e\",\"dweb:/ipfs/QmS1SHrZDfefX8EE7DdvszTY6VPCHydf4HM7NKJ2gP72e6\"]},\"contracts/lib/TWStrings.sol\":{\"keccak256\":\"0xef7e9954d888f99baffc10db1d9bf6a2beb66c842d81dea90352ddded22cbbf8\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://832415134684f5413f9d0f3f5536aa30848690cfe54769f7730a3807438f3bf9\",\"dweb:/ipfs/QmduTiUdtsnyJVMXpdomohEWDVg46aZhnS9uTURu4x1NYt\"]},\"contracts/prebuilts/open-edition/OpenEditionERC721.sol\":{\"keccak256\":\"0xa81b312a10e023602307bf0739ea6cc2359c200cfa75b61fd13c7ccf30325502\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f9a67333df0eb77b56a736a7094a116eaee9d1dd68c5a4d37415685e0e28df6e\",\"dweb:/ipfs/Qmb426Ud16nyrPjLaqfuqxnKWxXZnDJy2DeS8B8kyB1gXj\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC2981Upgradeable.sol\":{\"keccak256\":\"0xa8ff557539dcfed5706eddde2aa929e06bb1764e71aa8c1048a78970bf3ca37d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6be9c619be5e1c7ecf1c3d13adc5fa81ae602ca3866b739b2f43443a77f5606c\",\"dweb:/ipfs/QmTSxboNCPMfhuvaCfZhEusxZ4BNxwzZoWFys8kzD29EcA\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xea5339a7fff0ed42b45be56a88efdd0b2ddde9fa480dc99fef9a6a4c5b776863\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://841619682637df5579b4c396d281d6c55b26f1b1acce1d0ab67bead5e39cf60c\",\"dweb:/ipfs/QmNRtuKp43ZHJwswdyT3GivY4fDMvz3cxBe1FfDthG1JGj\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.12+commit.f00d7308"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ApprovalCallerNotOwnerNorApproved"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ApprovalQueryForNonexistentToken"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BalanceQueryForZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidQueryRange"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MintERC2309QuantityExceedsLimit"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MintToZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MintZeroQuantity"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OwnerQueryForNonexistentToken"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OwnershipNotInitializedForExtraData"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferCallerNotOwnerNorApproved"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferFromIncorrectOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferToNonERC721ReceiverImplementer"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferToZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "URIQueryForNonexistentToken"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "approved",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_fromTokenId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_toTokenId",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "BatchMetadataUpdate",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "struct IClaimCondition.ClaimCondition[]",
              "name": "claimConditions",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "startTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxClaimableSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "supplyClaimed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "merkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "metadata",
                  "type": "string"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "resetEligibility",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ClaimConditionsUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "fromTokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "toTokenId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ConsecutiveTransfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "prevURI",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "newURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ContractURIUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newRoyaltyRecipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newRoyaltyBps",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DefaultRoyalty",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MetadataUpdate",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "prevOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnerUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "PrimarySaleRecipientUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleAdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleGranted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleRevoked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "royaltyRecipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "royaltyBps",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RoyaltyForToken",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "imageURI",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "animationURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SharedMetadataUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "claimConditionIndex",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "claimer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "startTokenId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "quantityClaimed",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensClaimed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DEFAULT_ADMIN_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "approve"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_quantity",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_currency",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "struct IDrop.AllowlistProof",
              "name": "_allowlistProof",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32[]",
                  "name": "proof",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "claim"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "claimCondition",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "currentStartId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "count",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "contractURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "explicitOwnershipOf",
          "outputs": [
            {
              "internalType": "struct IERC721AUpgradeable.TokenOwnership",
              "name": "ownership",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "uint64",
                  "name": "startTimestamp",
                  "type": "uint64"
                },
                {
                  "internalType": "bool",
                  "name": "burned",
                  "type": "bool"
                },
                {
                  "internalType": "uint24",
                  "name": "extraData",
                  "type": "uint24"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getActiveClaimConditionId",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getApproved",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_conditionId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getClaimConditionById",
          "outputs": [
            {
              "internalType": "struct IClaimCondition.ClaimCondition",
              "name": "condition",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "startTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxClaimableSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "supplyClaimed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "merkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "metadata",
                  "type": "string"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getDefaultRoyaltyInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleAdmin",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleMember",
          "outputs": [
            {
              "internalType": "address",
              "name": "member",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleMemberCount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "count",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoyaltyInfoForToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_conditionId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_claimer",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getSupplyClaimedByWallet",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "supplyClaimedByWallet",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRole",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRoleWithSwitch",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_defaultAdmin",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_symbol",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_contractURI",
              "type": "string"
            },
            {
              "internalType": "address[]",
              "name": "_trustedForwarders",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "_saleRecipient",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_royaltyRecipient",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "_royaltyBps",
              "type": "uint128"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "forwarder",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isTrustedForwarder",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes[]",
              "name": "data",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "multicall",
          "outputs": [
            {
              "internalType": "bytes[]",
              "name": "results",
              "type": "bytes[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nextTokenIdToClaim",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nextTokenIdToMint",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "primarySaleRecipient",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeRole"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "salePrice",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "royaltyInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "royaltyAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "struct IClaimCondition.ClaimCondition[]",
              "name": "_conditions",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "startTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxClaimableSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "supplyClaimed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "merkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "metadata",
                  "type": "string"
                }
              ]
            },
            {
              "internalType": "bool",
              "name": "_resetClaimEligibility",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setClaimConditions"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_uri",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setContractURI"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_royaltyRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_royaltyBps",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDefaultRoyaltyInfo"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_saleRecipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPrimarySaleRecipient"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_bps",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRoyaltyInfoForToken"
        },
        {
          "inputs": [
            {
              "internalType": "struct ISharedMetadata.SharedMetadataInfo",
              "name": "_metadata",
              "type": "tuple",
              "components": [
                {
                  "internalType": "string",
                  "name": "name",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "imageURI",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "animationURI",
                  "type": "string"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setSharedMetadata"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "sharedMetadata",
          "outputs": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "imageURI",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "animationURI",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "startTokenId",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokensOfOwner",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "start",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "stop",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokensOfOwnerIn",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalMinted",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "transferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_conditionId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_claimer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_quantity",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_currency",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "struct IDrop.AllowlistProof",
              "name": "_allowlistProof",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32[]",
                  "name": "proof",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "verifyClaim",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isOverride",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "approve(address,uint256)": {
            "details": "Gives permission to `to` to transfer `tokenId` token to another account. See {ERC721A-_approve}. Requirements: - The caller must own the token or be an approved operator."
          },
          "balanceOf(address)": {
            "details": "Returns the number of tokens in `owner`'s account."
          },
          "burn(uint256)": {
            "details": "Burns `tokenId`. See {ERC721-_burn}."
          },
          "claim(address,uint256,address,uint256,(bytes32[],uint256,uint256,address),bytes)": {
            "details": "Lets an account claim tokens."
          },
          "explicitOwnershipOf(uint256)": {
            "details": "Returns the `TokenOwnership` struct at `tokenId` without reverting. If the `tokenId` is out of bounds: - `addr = address(0)` - `startTimestamp = 0` - `burned = false` - `extraData = 0` If the `tokenId` is burned: - `addr = <Address of owner before token was burned>` - `startTimestamp = <Timestamp when token was burned>` - `burned = true` - `extraData = <Extra data when token was burned>` Otherwise: - `addr = <Address of owner>` - `startTimestamp = <Timestamp of start of ownership>` - `burned = false` - `extraData = <Extra data at start of ownership>`"
          },
          "getActiveClaimConditionId()": {
            "details": "At any given moment, returns the uid for the active claim condition."
          },
          "getApproved(uint256)": {
            "details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
          },
          "getClaimConditionById(uint256)": {
            "details": "Returns the claim condition at the given uid."
          },
          "getRoleAdmin(bytes32)": {
            "details": "See {grantRole} and {revokeRole}.                  To change a role's admin, use {_setRoleAdmin}.",
            "params": {
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "getRoleMember(bytes32,uint256)": {
            "details": "Returns `member` who has `role`, at `index` of role-members list.                  See struct {RoleMembers}, and mapping {roleMembers}",
            "params": {
              "index": "Index in list of current members for the role.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            },
            "returns": {
              "member": " Address of account that has `role`"
            }
          },
          "getRoleMemberCount(bytes32)": {
            "details": "Returns `count` of accounts that have `role`.                  See struct {RoleMembers}, and mapping {roleMembers}",
            "params": {
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            },
            "returns": {
              "count": "  Total number of accounts that have `role`"
            }
          },
          "getRoyaltyInfoForToken(uint256)": {
            "details": "Returns royalty recipient and bps for `_tokenId`.",
            "params": {
              "_tokenId": "The tokenID of the NFT for which to query royalty info."
            }
          },
          "getSupplyClaimedByWallet(uint256,address)": {
            "details": "Returns the supply claimed by claimer for a given conditionId."
          },
          "grantRole(bytes32,address)": {
            "details": "Caller must have admin role for the `role`.                  Emits {RoleGranted Event}.",
            "params": {
              "account": "Address of the account to which the role is being granted.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "hasRole(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`.",
            "params": {
              "account": "Address of the account for which the role is being checked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "hasRoleWithSwitch(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`.                  Role restrictions can be swtiched on and off:                      - If address(0) has ROLE, then the ROLE restrictions                        don't apply.                      - If address(0) does not have ROLE, then the ROLE                        restrictions will apply.",
            "params": {
              "account": "Address of the account for which the role is being checked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "initialize(address,string,string,string,address[],address,address,uint128)": {
            "details": "Initializes the contract, like a constructor."
          },
          "isApprovedForAll(address,address)": {
            "details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}."
          },
          "multicall(bytes[])": {
            "details": "Receives and executes a batch of function calls on this contract.",
            "params": {
              "data": "The bytes data that makes up the batch of function calls to execute."
            },
            "returns": {
              "results": "The bytes data that makes up the result of the batch of function calls executed."
            }
          },
          "name()": {
            "details": "Returns the token collection name."
          },
          "nextTokenIdToClaim()": {
            "details": "The next token ID of the NFT that can be claimed."
          },
          "nextTokenIdToMint()": {
            "details": "The tokenId of the next NFT that will be minted / lazy minted."
          },
          "ownerOf(uint256)": {
            "details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
          },
          "primarySaleRecipient()": {
            "details": "Returns primary sale recipient address."
          },
          "renounceRole(bytes32,address)": {
            "details": "Caller must have the `role`, with caller being the same as `account`.                  Emits {RoleRevoked Event}.",
            "params": {
              "account": "Address of the account from which the role is being revoked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "revokeRole(bytes32,address)": {
            "details": "Caller must have admin role for the `role`.                  Emits {RoleRevoked Event}.",
            "params": {
              "account": "Address of the account from which the role is being revoked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "royaltyInfo(uint256,uint256)": {
            "details": "Returns royalty amount and recipient for `tokenId` and `salePrice`.",
            "params": {
              "salePrice": "Sale price of the token.",
              "tokenId": "The tokenID of the NFT for which to query royalty info."
            },
            "returns": {
              "receiver": "       Address of royalty recipient account.",
              "royaltyAmount": "  Royalty amount calculated at current royaltyBps value."
            }
          },
          "safeTransferFrom(address,address,uint256)": {
            "details": "Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            "details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
          },
          "setApprovalForAll(address,bool)": {
            "details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
          },
          "setClaimConditions((uint256,uint256,uint256,uint256,bytes32,uint256,address,string)[],bool)": {
            "details": "Lets a contract admin set claim conditions."
          },
          "setContractURI(string)": {
            "details": "Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.",
            "params": {
              "_uri": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "setDefaultRoyaltyInfo(address,uint256)": {
            "details": "Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {DefaultRoyalty Event}; See {_setupDefaultRoyaltyInfo}.",
            "params": {
              "_royaltyBps": "Updated royalty bps.",
              "_royaltyRecipient": "Address to be set as default royalty recipient."
            }
          },
          "setOwner(address)": {
            "params": {
              "_newOwner": "The address to set as the new owner of the contract."
            }
          },
          "setPrimarySaleRecipient(address)": {
            "details": "Caller should be authorized to set primary sales info.                  See {_canSetPrimarySaleRecipient}.                  Emits {PrimarySaleRecipientUpdated Event}; See {_setupPrimarySaleRecipient}.",
            "params": {
              "_saleRecipient": "Address to be set as new recipient of primary sales."
            }
          },
          "setRoyaltyInfoForToken(uint256,address,uint256)": {
            "details": "Sets royalty info for `_tokenId`. Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {RoyaltyForToken Event}; See {_setupRoyaltyInfoForToken}.",
            "params": {
              "_bps": "Updated royalty bps for the token Id.",
              "_recipient": "Address to be set as royalty recipient for given token Id."
            }
          },
          "supportsInterface(bytes4)": {
            "details": "See ERC 165"
          },
          "symbol()": {
            "details": "Returns the token collection symbol."
          },
          "tokenURI(uint256)": {
            "details": "Returns the URI for a given tokenId."
          },
          "tokensOfOwner(address)": {
            "details": "Returns an array of token IDs owned by `owner`. This function scans the ownership mapping and is O(`totalSupply`) in complexity. It is meant to be called off-chain. See {ERC721AQueryable-tokensOfOwnerIn} for splitting the scan into multiple smaller scans if the collection is large enough to cause an out-of-gas error (10K collections should be fine)."
          },
          "tokensOfOwnerIn(address,uint256,uint256)": {
            "details": "Returns an array of token IDs owned by `owner`, in the range [`start`, `stop`) (i.e. `start <= tokenId < stop`). This function allows for tokens to be queried if the collection grows too big for a single call of {ERC721AQueryable-tokensOfOwner}. Requirements: - `start < stop`"
          },
          "totalSupply()": {
            "details": "Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}."
          },
          "transferFrom(address,address,uint256)": {
            "details": "Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
          },
          "verifyClaim(uint256,address,uint256,address,uint256,(bytes32[],uint256,uint256,address))": {
            "details": "Checks a request to claim NFTs against the active claim condition's criteria."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "contractURI()": {
            "notice": "Returns the contract metadata URI."
          },
          "getDefaultRoyaltyInfo()": {
            "notice": "Returns the defualt royalty recipient and BPS for this contract's NFTs."
          },
          "getRoleAdmin(bytes32)": {
            "notice": "Returns the admin role that controls the specified role."
          },
          "getRoleMember(bytes32,uint256)": {
            "notice": "Returns the role-member from a list of members for a role,                  at a given index."
          },
          "getRoleMemberCount(bytes32)": {
            "notice": "Returns total number of accounts that have a role."
          },
          "getRoyaltyInfoForToken(uint256)": {
            "notice": "View royalty info for a given token."
          },
          "grantRole(bytes32,address)": {
            "notice": "Grants a role to an account, if not previously granted."
          },
          "hasRole(bytes32,address)": {
            "notice": "Checks whether an account has a particular role."
          },
          "hasRoleWithSwitch(bytes32,address)": {
            "notice": "Checks whether an account has a particular role;                  role restrictions can be swtiched on and off."
          },
          "multicall(bytes[])": {
            "notice": "Receives and executes a batch of function calls on this contract."
          },
          "owner()": {
            "notice": "Returns the owner of the contract."
          },
          "renounceRole(bytes32,address)": {
            "notice": "Revokes role from the account."
          },
          "revokeRole(bytes32,address)": {
            "notice": "Revokes role from an account."
          },
          "royaltyInfo(uint256,uint256)": {
            "notice": "View royalty info for a given token and sale price."
          },
          "setContractURI(string)": {
            "notice": "Lets a contract admin set the URI for contract-level metadata."
          },
          "setDefaultRoyaltyInfo(address,uint256)": {
            "notice": "Updates default royalty recipient and bps."
          },
          "setOwner(address)": {
            "notice": "Lets an authorized wallet set a new owner for the contract."
          },
          "setPrimarySaleRecipient(address)": {
            "notice": "Updates primary sale recipient."
          },
          "setRoyaltyInfoForToken(uint256,address,uint256)": {
            "notice": "Updates default royalty recipient and bps for a particular token."
          },
          "setSharedMetadata((string,string,string,string))": {
            "notice": "Set shared metadata for NFTs"
          },
          "sharedMetadata()": {
            "notice": "Token metadata information"
          },
          "totalMinted()": {
            "notice": "Returns the total amount of tokens minted in the contract."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=lib/chainlink/",
        "@ds-test/=lib/ds-test/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@std/=lib/forge-std/src/",
        "@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/",
        "ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/",
        "ERC721A/=lib/ERC721A/contracts/",
        "chainlink/=lib/chainlink/",
        "contracts/=contracts/",
        "ds-test/=lib/ds-test/src/",
        "dynamic-contracts/=lib/dynamic-contracts/src/",
        "erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/",
        "erc721a-upgradeable/=lib/ERC721A-Upgradeable/",
        "erc721a/=lib/ERC721A/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/prebuilts/open-edition/OpenEditionERC721.sol": "OpenEditionERC721"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/eip/interface/IERC165.sol": {
        "keccak256": "0x35d0a916f70344a5fcc6c67cb531b6150d2fce43e72a6282385eab02020f2f49",
        "urls": [
          "bzz-raw://75ccd8b9a8b52a93b8097fcb8181b7afb6d72bbe6eaabf434f0481a7a207cc8a",
          "dweb:/ipfs/QmPUZAEE4nwkijcE2amAXAWEVGVG5XaKWGhpgnRwpAf93R"
        ],
        "license": "MIT"
      },
      "contracts/eip/interface/IERC20.sol": {
        "keccak256": "0x5bdd9dd97ba7d9d7c9a2953db287e4d9d7fa93a27a96bc2e72a8da4919b6f7ff",
        "urls": [
          "bzz-raw://45527c265ee5de6bbb3ecfc052e7b1175531a82c2ac16172020aee855f7dd592",
          "dweb:/ipfs/QmVZthqbG916qUQSwv1LE8bB58ZGQ1VfQbLbbRV5urfEYA"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC2981.sol": {
        "keccak256": "0x7886c17b1bc3df885201378fd070d2f00d05fa54f20f7daf10382ec6ff4bd0c9",
        "urls": [
          "bzz-raw://a0802623ba9555f6d186bab5fd139203b643e88ea31d78f4f05cddd4008ac6cf",
          "dweb:/ipfs/QmYbqzSKkKmF2xYeH1zGNewBDNAhukuaZEUVAvYgnKt1He"
        ],
        "license": "Apache 2.0"
      },
      "contracts/eip/interface/IERC4906.sol": {
        "keccak256": "0xa31c36a97c9133c8a451aaec1aa585537cacd71760eb6c5ce402155313efb392",
        "urls": [
          "bzz-raw://f3d6fee0ee338d9d0041e7a094efe2f0cd1d4a05b8b127e4f8928f5d3bac8fc4",
          "dweb:/ipfs/Qmcrgw6xMNvsFBfYh51FmFnRP14EEThSSp4n6F6QeKLhy3"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC721.sol": {
        "keccak256": "0xbd9f2dd131e8f1e4e50b1b116eae917510ab9bf5d4356de37c5daf4cffdfa049",
        "urls": [
          "bzz-raw://8ac3530b317083464271b100de1976ed9179b9e7d5a4fc3d992c61c80676a676",
          "dweb:/ipfs/QmUq1AVzymvp7Y8H1eypGEGU4icjzn5vDSvKMNpXnoaeMT"
        ],
        "license": "MIT"
      },
      "contracts/eip/queryable/ERC721AQueryableUpgradeable.sol": {
        "keccak256": "0xcea59e91a24bd3d1f96e7a2d55f16975c73d05c27958d83cfdb9e4d32af9f31a",
        "urls": [
          "bzz-raw://55aa2f46ac5c44440475284305a3428d404313560d688783e6bc7e2b2183fbec",
          "dweb:/ipfs/QmTTq6SJ2yZrpsqshztataPDa4Jp9KhfKwRVMUR3eJLtrC"
        ],
        "license": "MIT"
      },
      "contracts/eip/queryable/ERC721AStorage.sol": {
        "keccak256": "0x5703e46ac0beec3d3e64e5cc9fa8841a9860d375777515fe341ade8c3dd2418a",
        "urls": [
          "bzz-raw://8949a575710a700da1c9753ead62b1b98a5cceb446cd13a5271e94f557071760",
          "dweb:/ipfs/QmPRMyXzfHDom2Pfn5aQJJsA4AsojZBmsiDk2fNdtLW5yS"
        ],
        "license": "MIT"
      },
      "contracts/eip/queryable/ERC721AUpgradeable.sol": {
        "keccak256": "0xec0039115e836191bd350b6d5e4781b27cbe85bfed9e4009b6bf891addfb6291",
        "urls": [
          "bzz-raw://e69d0987ba4390bf21bdc6e149ad5d3c1b06894418c723a42575327a4edbc8ac",
          "dweb:/ipfs/QmPfUAP2NNR8kuQkSAbrBDPEyEKsUXLgwQoq9H5i5RRBhL"
        ],
        "license": "MIT"
      },
      "contracts/eip/queryable/ERC721A__Initializable.sol": {
        "keccak256": "0x91d642fafae97248c4da7e8e4d861af2f52bdf19abadd9bbd337226439208146",
        "urls": [
          "bzz-raw://1b018641078c2cce6629f097b9824b5fbf9f1ba8c7b95de92467997a4c9831d5",
          "dweb:/ipfs/QmP4G7zZmwyxp3awVJtdPzLQ77MY6wNe6CBfjfkfQJkdLZ"
        ],
        "license": "MIT"
      },
      "contracts/eip/queryable/ERC721A__InitializableStorage.sol": {
        "keccak256": "0x2bc417d73b72ea83a2952fe8da3fa4cc96a12fdb8fc3d4ee7cf8639ad5f39b43",
        "urls": [
          "bzz-raw://29e4dd2c81f14dba0525f55e81718da757c1e60d6b74bc33964d185d1abb051c",
          "dweb:/ipfs/QmcywxZ2UPRTbQYgNKpMjt43TC9hYbGnAnX2atMrVqQsZ9"
        ],
        "license": "MIT"
      },
      "contracts/eip/queryable/IERC721AQueryableUpgradeable.sol": {
        "keccak256": "0x8ed8602663a08364759d98051c6c8f872bd056e84e8901bbb05bcd7f823d390f",
        "urls": [
          "bzz-raw://5ef76d5d5955157fa01116cd735c88181b954f57180662db3afa01d19611799a",
          "dweb:/ipfs/QmTXSaJdYuA9RFSSBibEycJ3sqLAkC8uQGTEkeYHcyBTYd"
        ],
        "license": "MIT"
      },
      "contracts/eip/queryable/IERC721AUpgradeable.sol": {
        "keccak256": "0xa8e2bf92476033e48df3911783487b46bcd20f6490a6fdc8c93ca7a0e94bca20",
        "urls": [
          "bzz-raw://3e9c32378e93dc798ff46d6679313fa3a0fbb1be1afd6fa2bef0d1417a77d5c8",
          "dweb:/ipfs/QmVqTn3xKbiUaUyRweDj64r4JDB4RhcMRxpdwc76jcA5gK"
        ],
        "license": "MIT"
      },
      "contracts/extension/ContractMetadata.sol": {
        "keccak256": "0xf53ab08ec3057056872c15e35a5610f7a43426bd2829786aed006d527177adfe",
        "urls": [
          "bzz-raw://ee132ae5efdd372152febfcd8fd3a7cb82c7019367d92c886f5096003a79f392",
          "dweb:/ipfs/QmRW1cGWmZAu57huZpTUwsWB8AxUFrBp6g4NqozXpbWsR6"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Drop.sol": {
        "keccak256": "0x11e1f936e81e51b69d5130acc57a1b95c6428f55265492a7f8bbc1e76a7f9acc",
        "urls": [
          "bzz-raw://9d1ac7b9be364630343fc9d0509c67e8ba9de07a28a9520461a4c81fe122701c",
          "dweb:/ipfs/Qme1eucpamqAkL2xFfcYHWPmo4aNk8SNuWSfk2R2uW7pYZ"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Multicall.sol": {
        "keccak256": "0x737a71c74307fa360863550d64bbaef599bbcb47829b19c3743ed1ff22b9af55",
        "urls": [
          "bzz-raw://7e82a79ee183dffa3ec01faac0907e04d72a185e55b7c24bff8e8e952b05f4c2",
          "dweb:/ipfs/QmQ9neZqpcgJtGgm84FBzMqFntZ1Sk1KFTWhjCMq8vnKDg"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/Ownable.sol": {
        "keccak256": "0x45447691686861237d5e1acb9d723d861a3fb3d561335e4f385d1547f25e27a5",
        "urls": [
          "bzz-raw://5142293e36c736f744c73aaecab5f7be8e2d5ac70acc67851e0cea5171fd6782",
          "dweb:/ipfs/QmVJT5B84o5vFc5E2VteZdBhrT1HMutc7Ax72UKD1aZatJ"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Permissions.sol": {
        "keccak256": "0xe7e18181f2d2c8bae4afc7ee69ce1d547e7aa583182e8e0853ca33c49a28c04d",
        "urls": [
          "bzz-raw://75d5f5a9356c290e398a5dd05914b59c3d09e6fedde2da80b6f1012aedf323f8",
          "dweb:/ipfs/QmNrrf8Uyq33XBsE2NqVTW6HVX3XixFTjCG8KGbGxdEE84"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/PermissionsEnumerable.sol": {
        "keccak256": "0x434a6ffc16ddc437ffb37b8fbe4c9696385252f15a617c4606b8c5e10561caf3",
        "urls": [
          "bzz-raw://1a9d4dac4bf2ae3c3c086af1956dc25e8b149b0914125e660cc0648791c247cb",
          "dweb:/ipfs/QmTMEggPdBea1JCamsShwRf3en2FgVTXNTPJ2isFtBk4Kk"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/PrimarySale.sol": {
        "keccak256": "0x9ef1ad82fadf988a07f4034b92ccdb3281682693e41759a79042814d36095f42",
        "urls": [
          "bzz-raw://0d962b48453e1f50b808193135c2f14265324fa8b75fe3b405ef7836e38921f7",
          "dweb:/ipfs/QmZDLNsZQj9kNcb15nBuWRpPwDdDvJS2gtFwqEs2Lwxb1N"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Royalty.sol": {
        "keccak256": "0xcc3110048db91d4ecd05afcc6721fce6ade5eee8c2da0af8955e86ece8754350",
        "urls": [
          "bzz-raw://a1e830502fda46ab7618b65e155341d42bf007717edb27711b09bf6250ce1485",
          "dweb:/ipfs/QmY5fKpg7aCubR7fENu9htRFspU8hpSo7CVUNJxQdh8kv1"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/SharedMetadata.sol": {
        "keccak256": "0x4a6cd7459ebc1afc270c46559e1e6e4e92546da350c012f3d42cce90b0352091",
        "urls": [
          "bzz-raw://0577c1d6f6c66746167581e209f2043ccb476ab47e2e59e35deacec43c748421",
          "dweb:/ipfs/QmPqczyrVhdfBhtEVayQbFFUEM6CjCX2E1SPQyGKcMKL1G"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/interface/IClaimCondition.sol": {
        "keccak256": "0x391e69970031edb30dfa59f8db33c7446b349cd5ec505fd99f0f0b672b19e6d6",
        "urls": [
          "bzz-raw://fd9eafca6098421f3aa25bf0a0b24386facc764b7ecb8e6ce4a890afa3c6d459",
          "dweb:/ipfs/QmPXTSX2ie5wsZ6FyXWS4YMa7aPpYNyza9Rym1n799B5LU"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IClaimConditionMultiPhase.sol": {
        "keccak256": "0x8388214d6cc8f1fd481aed7e062a8b23d5959e870a56076017fcf474404dbbfa",
        "urls": [
          "bzz-raw://54c039ba9f0e674a6bdbb0ab015ad4054feffaea7eb3cc7c485aa95761156125",
          "dweb:/ipfs/QmTya89XYsc1iGAhfsHeZkgGaAv7ivA5Vr4jrGCifYHmKh"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IContractMetadata.sol": {
        "keccak256": "0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2",
        "urls": [
          "bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a",
          "dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IDrop.sol": {
        "keccak256": "0xa8fa4a9fde50a512383c1608295dab741357852822bf089b64dfc8e89041bbad",
        "urls": [
          "bzz-raw://67e26a8f07f05daeebae7a4a652bfe90d4b62d057b737e00a9d3c1782f5bb093",
          "dweb:/ipfs/QmR9b1N5BAuRibaK1iJkyUD7kXE7F3GocjM985oT9wPdZo"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IMulticall.sol": {
        "keccak256": "0xe2bbd37b8fdb9cc8b933e598512a068ebb214b3f5abc2bc634916def55be4ef3",
        "urls": [
          "bzz-raw://012352099c262348ac755a53b082af520babc6c66dc5f1251fc23609728340ca",
          "dweb:/ipfs/QmcXEgzQ53jdJX5ZNy8zivvUjDq7J8WTnR1yAiwTpkQ2ar"
        ],
        "license": "MIT"
      },
      "contracts/extension/interface/IOwnable.sol": {
        "keccak256": "0xd659a64da6264fdd50ee379be032fea4917eba4fadfd6d366107fb17e46907f3",
        "urls": [
          "bzz-raw://c15940c4a3d229f4fdd1226fe297a58fde10b07b86a34de1ed11a8802dd5dea9",
          "dweb:/ipfs/QmS8p8CxWiahLkYsCWNhFjCnmQzuc4ck3kjYYuCFj8LsmC"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPermissions.sol": {
        "keccak256": "0xc0cd1f87bac474a06f85e2b341b9b57662aee957fc24180d42c872481c2f2ae3",
        "urls": [
          "bzz-raw://7dec3eed451d63867531d693f0be3279fa2c9aef3130f0826c3520c06820fa5d",
          "dweb:/ipfs/QmTYANrcPdd9SCe99DWsKJ19evNRQKQGZeoS1Keew4M2cS"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPermissionsEnumerable.sol": {
        "keccak256": "0x2e742c18a4481bad41d56424cd16c52def2fb415f69e5fb5f67d8d979300ff95",
        "urls": [
          "bzz-raw://d9be33bb865e3e82aca540a3e38cbc2bf2e431f9d1bf39c50d6c757e7b7bf3ee",
          "dweb:/ipfs/Qmdad1Xqj5SQ44Bk4bwD2uA36XnGHtqnVYSomKZQvnUBVG"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPrimarySale.sol": {
        "keccak256": "0x77c89cb8d9b781b0a08b1fa81c95a0dd5c19200b2fb0dc884c1084b931624004",
        "urls": [
          "bzz-raw://a37b042af11a08ba5518dadf72c91745d1b5f42b1c20ea5282492bfd18f53869",
          "dweb:/ipfs/QmWEYYG5VqR8MRfr2rydDV98GLKmaJtCC8G1W7MzJ9qFnF"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IRoyalty.sol": {
        "keccak256": "0x13912ba3970fdedd1eb5bf8bf0bcc5e64e43f2cadb8d22c3d6fb695fd9877385",
        "urls": [
          "bzz-raw://b84d19df7aa9cb7460cca50ab050cdcfffb62f53c246daf35df276cad7088e9b",
          "dweb:/ipfs/QmNPPHJuiW1KCcq3aXELnA4X8NaSPM9S2vHbsBEEDYiwP8"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/ISharedMetadata.sol": {
        "keccak256": "0x854451e0d70760c7fbe438aa6f09e3c310fd501567e78ae7d37ab19dd82e0499",
        "urls": [
          "bzz-raw://e5df37ec2be0af127bb0fd549cdf2599e55f5eeceed841953939309eb81e2a15",
          "dweb:/ipfs/QmVc3TgdN9MJU5HL8G9Tdx3ThzYtmLRtBrF9QrM3WDdMm7"
        ],
        "license": "Apache 2.0"
      },
      "contracts/external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol": {
        "keccak256": "0xdbc96b1264d2e2bd82cb7e697056929325e09d1641321145a8cec53b22b9567d",
        "urls": [
          "bzz-raw://7ca7ccf947d21d98878ec18e941b750cd2ae7c563e6d2a707da4f806038d67c8",
          "dweb:/ipfs/QmYVLYUPMD3b95vKrS5yjxcz2MDNNzkWJY9xc9bc9oTZdh"
        ],
        "license": "MIT"
      },
      "contracts/external-deps/openzeppelin/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xa6149938a7c7c8af4244743aeaafcfb1fd9ce15ad45de58fa9576f0ed5599b2c",
        "urls": [
          "bzz-raw://839aa4ea6ef6d1972881bfd7420a9ddcd2f37139e3f0bf25310f93f48410702d",
          "dweb:/ipfs/QmSH65kStfbgMbfjFdfJqV412omPy6nB1JMvMt9q7SsytW"
        ],
        "license": "MIT"
      },
      "contracts/external-deps/openzeppelin/utils/Base64.sol": {
        "keccak256": "0x5f3461639fe20794cfb4db4a6d8477388a15b2e70a018043084b7c4bedfa8136",
        "urls": [
          "bzz-raw://77e5309e2cc4cdc3395214edb0ff43ff5a5f7373f5a425383e540f6fab530f96",
          "dweb:/ipfs/QmTV8DZ9knJDa3b5NPBFQqjvTzodyZVjRUg5mx5A99JPLJ"
        ],
        "license": "MIT"
      },
      "contracts/infra/interface/IWETH.sol": {
        "keccak256": "0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b",
        "urls": [
          "bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1",
          "dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/CurrencyTransferLib.sol": {
        "keccak256": "0x4a30bc9a8cd6cc8b855621fb1a651e2c3a1639b0ad153f1139c3ba463605672d",
        "urls": [
          "bzz-raw://417cc64ec6393f3cc89981ca9c32bbcc444a5f91363d69f84dd8ace888b2b859",
          "dweb:/ipfs/QmZeaQsYGx4VNoP8e1fcwC87PwvyakheWYeuwEwhFSJnvB"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/MerkleProof.sol": {
        "keccak256": "0xfeb51ecaba6f9c1649a143825dc3b7ca0eb9edff7787c7a54957dfd542f7ece0",
        "urls": [
          "bzz-raw://8819ab0f7546a6a0dc126d5dbf019ba015563220689f661b1da4174f7ce87bbf",
          "dweb:/ipfs/QmT6Q9YQGMJbCWhE6G4ze8dsqjMyewnErTNGgLFSAHkFU7"
        ],
        "license": "Apache 2.0"
      },
      "contracts/lib/NFTMetadataRendererLib.sol": {
        "keccak256": "0x9e12205ebe6fb7d2ea3fdc57e4e7e8b0c859a7907ed4ea9d912133b67c0eee75",
        "urls": [
          "bzz-raw://530f58f9b6861d1d8c33b3387fdab0f495bdc95742319ea563f1e5902e9080e1",
          "dweb:/ipfs/QmP8yDzk468awMtEaB8yyN9q74U2tv3fLQy6QC9iraQjxF"
        ],
        "license": "Apache 2.0"
      },
      "contracts/lib/TWAddress.sol": {
        "keccak256": "0x460f032cf3bf43d586e126ab2ec8be4335767f497ccb699741546a1cfba94a7e",
        "urls": [
          "bzz-raw://28fcbf6dde6c2eeb9864f6ec6f21dcc81ec426877debf4b912f2f3bc5b0fc91e",
          "dweb:/ipfs/QmS1SHrZDfefX8EE7DdvszTY6VPCHydf4HM7NKJ2gP72e6"
        ],
        "license": "Apache 2.0"
      },
      "contracts/lib/TWStrings.sol": {
        "keccak256": "0xef7e9954d888f99baffc10db1d9bf6a2beb66c842d81dea90352ddded22cbbf8",
        "urls": [
          "bzz-raw://832415134684f5413f9d0f3f5536aa30848690cfe54769f7730a3807438f3bf9",
          "dweb:/ipfs/QmduTiUdtsnyJVMXpdomohEWDVg46aZhnS9uTURu4x1NYt"
        ],
        "license": "Apache 2.0"
      },
      "contracts/prebuilts/open-edition/OpenEditionERC721.sol": {
        "keccak256": "0xa81b312a10e023602307bf0739ea6cc2359c200cfa75b61fd13c7ccf30325502",
        "urls": [
          "bzz-raw://f9a67333df0eb77b56a736a7094a116eaee9d1dd68c5a4d37415685e0e28df6e",
          "dweb:/ipfs/Qmb426Ud16nyrPjLaqfuqxnKWxXZnDJy2DeS8B8kyB1gXj"
        ],
        "license": "Apache-2.0"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC2981Upgradeable.sol": {
        "keccak256": "0xa8ff557539dcfed5706eddde2aa929e06bb1764e71aa8c1048a78970bf3ca37d",
        "urls": [
          "bzz-raw://6be9c619be5e1c7ecf1c3d13adc5fa81ae602ca3866b739b2f43443a77f5606c",
          "dweb:/ipfs/QmTSxboNCPMfhuvaCfZhEusxZ4BNxwzZoWFys8kzD29EcA"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e",
        "urls": [
          "bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497",
          "dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3",
        "urls": [
          "bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4",
          "dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol": {
        "keccak256": "0xea5339a7fff0ed42b45be56a88efdd0b2ddde9fa480dc99fef9a6a4c5b776863",
        "urls": [
          "bzz-raw://841619682637df5579b4c396d281d6c55b26f1b1acce1d0ab67bead5e39cf60c",
          "dweb:/ipfs/QmNRtuKp43ZHJwswdyT3GivY4fDMvz3cxBe1FfDthG1JGj"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol": {
        "keccak256": "0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09",
        "urls": [
          "bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758",
          "dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/prebuilts/open-edition/OpenEditionERC721.sol",
    "id": 86169,
    "exportedSymbols": {
      "AddressUpgradeable": [
        155768
      ],
      "Base64": [
        48461
      ],
      "ContextUpgradeable": [
        156044
      ],
      "ContractMetadata": [
        17526
      ],
      "CurrencyTransferLib": [
        63578
      ],
      "Drop": [
        18332
      ],
      "ERC2771ContextUpgradeable": [
        45607
      ],
      "ERC721AQueryableUpgradeable": [
        14507
      ],
      "ERC721AStorage": [
        14558
      ],
      "ERC721AUpgradeable": [
        16535
      ],
      "ERC721A__IERC721ReceiverUpgradeable": [
        14579
      ],
      "ERC721A__Initializable": [
        16638
      ],
      "ERC721A__InitializableStorage": [
        16664
      ],
      "IClaimCondition": [
        32285
      ],
      "IClaimConditionMultiPhase": [
        32308
      ],
      "IContractMetadata": [
        32437
      ],
      "IDrop": [
        32573
      ],
      "IERC165": [
        13829
      ],
      "IERC165Upgradeable": [
        157261
      ],
      "IERC20": [
        13899
      ],
      "IERC2981": [
        13973
      ],
      "IERC2981Upgradeable": [
        150048
      ],
      "IERC4906": [
        13992
      ],
      "IERC721": [
        14105
      ],
      "IERC721AQueryableUpgradeable": [
        16705
      ],
      "IERC721AUpgradeable": [
        16911
      ],
      "IMulticall": [
        32926
      ],
      "IOwnable": [
        33183
      ],
      "IPermissions": [
        33256
      ],
      "IPermissionsEnumerable": [
        33281
      ],
      "IPrimarySale": [
        33345
      ],
      "IRoyalty": [
        33409
      ],
      "ISharedMetadata": [
        33624
      ],
      "IWETH": [
        54557
      ],
      "Initializable": [
        150199
      ],
      "MerkleProof": [
        63678
      ],
      "Multicall": [
        20595
      ],
      "NFTMetadataRenderer": [
        63857
      ],
      "OpenEditionERC721": [
        86168
      ],
      "Ownable": [
        21153
      ],
      "Permissions": [
        21500
      ],
      "PermissionsEnumerable": [
        21799
      ],
      "PrimarySale": [
        22067
      ],
      "Royalty": [
        22395
      ],
      "SafeERC20": [
        48369
      ],
      "SharedMetadata": [
        22504
      ],
      "StringsUpgradeable": [
        156453
      ],
      "TWAddress": [
        64152
      ],
      "TWStrings": [
        64852
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:9835:364",
    "nodes": [
      {
        "id": 85602,
        "nodeType": "PragmaDirective",
        "src": "39:24:364",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".11"
        ]
      },
      {
        "id": 85603,
        "nodeType": "ImportDirective",
        "src": "775:74:364",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 86169,
        "sourceUnit": 156454,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 85604,
        "nodeType": "ImportDirective",
        "src": "850:80:364",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC2981Upgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/interfaces/IERC2981Upgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 86169,
        "sourceUnit": 150049,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 85605,
        "nodeType": "ImportDirective",
        "src": "932:61:364",
        "nodes": [],
        "absolutePath": "contracts/eip/queryable/ERC721AQueryableUpgradeable.sol",
        "file": "../../eip/queryable/ERC721AQueryableUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 86169,
        "sourceUnit": 14508,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 85606,
        "nodeType": "ImportDirective",
        "src": "1043:79:364",
        "nodes": [],
        "absolutePath": "contracts/external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol",
        "file": "../../external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 86169,
        "sourceUnit": 45608,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 85607,
        "nodeType": "ImportDirective",
        "src": "1123:43:364",
        "nodes": [],
        "absolutePath": "contracts/lib/CurrencyTransferLib.sol",
        "file": "../../lib/CurrencyTransferLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 86169,
        "sourceUnit": 63579,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 85608,
        "nodeType": "ImportDirective",
        "src": "1208:39:364",
        "nodes": [],
        "absolutePath": "contracts/extension/Multicall.sol",
        "file": "../../extension/Multicall.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 86169,
        "sourceUnit": 20596,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 85609,
        "nodeType": "ImportDirective",
        "src": "1248:46:364",
        "nodes": [],
        "absolutePath": "contracts/extension/ContractMetadata.sol",
        "file": "../../extension/ContractMetadata.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 86169,
        "sourceUnit": 17527,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 85610,
        "nodeType": "ImportDirective",
        "src": "1295:37:364",
        "nodes": [],
        "absolutePath": "contracts/extension/Royalty.sol",
        "file": "../../extension/Royalty.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 86169,
        "sourceUnit": 22396,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 85611,
        "nodeType": "ImportDirective",
        "src": "1333:41:364",
        "nodes": [],
        "absolutePath": "contracts/extension/PrimarySale.sol",
        "file": "../../extension/PrimarySale.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 86169,
        "sourceUnit": 22068,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 85612,
        "nodeType": "ImportDirective",
        "src": "1375:37:364",
        "nodes": [],
        "absolutePath": "contracts/extension/Ownable.sol",
        "file": "../../extension/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 86169,
        "sourceUnit": 21154,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 85613,
        "nodeType": "ImportDirective",
        "src": "1413:44:364",
        "nodes": [],
        "absolutePath": "contracts/extension/SharedMetadata.sol",
        "file": "../../extension/SharedMetadata.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 86169,
        "sourceUnit": 22505,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 85614,
        "nodeType": "ImportDirective",
        "src": "1458:51:364",
        "nodes": [],
        "absolutePath": "contracts/extension/PermissionsEnumerable.sol",
        "file": "../../extension/PermissionsEnumerable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 86169,
        "sourceUnit": 21800,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 85615,
        "nodeType": "ImportDirective",
        "src": "1510:34:364",
        "nodes": [],
        "absolutePath": "contracts/extension/Drop.sol",
        "file": "../../extension/Drop.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 86169,
        "sourceUnit": 18333,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 86168,
        "nodeType": "ContractDefinition",
        "src": "1546:8327:364",
        "nodes": [
          {
            "id": 85640,
            "nodeType": "UsingForDirective",
            "src": "1801:37:364",
            "nodes": [],
            "libraryName": {
              "id": 85638,
              "name": "StringsUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 156453,
              "src": "1807:18:364"
            },
            "typeName": {
              "id": 85639,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1830:7:364",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 85643,
            "nodeType": "VariableDeclaration",
            "src": "2131:28:364",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 85641,
              "nodeType": "StructuredDocumentation",
              "src": "2028:98:364",
              "text": "@dev Only transfers to or from TRANSFER_ROLE holders are valid, when transfers are restricted."
            },
            "mutability": "mutable",
            "name": "transferRole",
            "nameLocation": "2147:12:364",
            "scope": 86168,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 85642,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2131:7:364",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "id": 85646,
            "nodeType": "VariableDeclaration",
            "src": "2245:26:364",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 85644,
              "nodeType": "StructuredDocumentation",
              "src": "2165:75:364",
              "text": "@dev Only MINTER_ROLE holders can update the shared metadata of tokens."
            },
            "mutability": "mutable",
            "name": "minterRole",
            "nameLocation": "2261:10:364",
            "scope": 86168,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 85645,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2245:7:364",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "id": 85650,
            "nodeType": "VariableDeclaration",
            "src": "2323:41:364",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 85647,
              "nodeType": "StructuredDocumentation",
              "src": "2278:40:364",
              "text": "@dev Max bps in the thirdweb system."
            },
            "mutability": "constant",
            "name": "MAX_BPS",
            "nameLocation": "2348:7:364",
            "scope": 86168,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 85648,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2323:7:364",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31305f303030",
              "id": 85649,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2358:6:364",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000_by_1",
                "typeString": "int_const 10000"
              },
              "value": "10_000"
            },
            "visibility": "private"
          },
          {
            "id": 85656,
            "nodeType": "FunctionDefinition",
            "src": "2563:28:364",
            "nodes": [],
            "body": {
              "id": 85655,
              "nodeType": "Block",
              "src": "2589:2:364",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "id": 85653,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 85652,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 150119,
                  "src": "2577:11:364"
                },
                "nodeType": "ModifierInvocation",
                "src": "2577:11:364"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 85651,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2574:2:364"
            },
            "returnParameters": {
              "id": 85654,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2589:0:364"
            },
            "scope": 86168,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 85751,
            "nodeType": "FunctionDefinition",
            "src": "2656:1095:364",
            "nodes": [],
            "body": {
              "id": 85750,
              "nodeType": "Block",
              "src": "2990:761:364",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    85682
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 85682,
                      "mutability": "mutable",
                      "name": "_transferRole",
                      "nameLocation": "3008:13:364",
                      "nodeType": "VariableDeclaration",
                      "scope": 85750,
                      "src": "3000:21:364",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 85681,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3000:7:364",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 85686,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "5452414e534645525f524f4c45",
                        "id": 85684,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3034:15:364",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c",
                          "typeString": "literal_string \"TRANSFER_ROLE\""
                        },
                        "value": "TRANSFER_ROLE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c",
                          "typeString": "literal_string \"TRANSFER_ROLE\""
                        }
                      ],
                      "id": 85683,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "3024:9:364",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 85685,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3024:26:364",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3000:50:364"
                },
                {
                  "assignments": [
                    85688
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 85688,
                      "mutability": "mutable",
                      "name": "_minterRole",
                      "nameLocation": "3068:11:364",
                      "nodeType": "VariableDeclaration",
                      "scope": 85750,
                      "src": "3060:19:364",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 85687,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3060:7:364",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 85692,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "4d494e5445525f524f4c45",
                        "id": 85690,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3092:13:364",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                          "typeString": "literal_string \"MINTER_ROLE\""
                        },
                        "value": "MINTER_ROLE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                          "typeString": "literal_string \"MINTER_ROLE\""
                        }
                      ],
                      "id": 85689,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "3082:9:364",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 85691,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3082:24:364",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3060:46:364"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 85694,
                        "name": "_trustedForwarders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85668,
                        "src": "3214:18:364",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      ],
                      "id": 85693,
                      "name": "__ERC2771Context_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45514,
                      "src": "3192:21:364",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address[] memory)"
                      }
                    },
                    "id": 85695,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3192:41:364",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85696,
                  "nodeType": "ExpressionStatement",
                  "src": "3192:41:364"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 85698,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85661,
                        "src": "3258:5:364",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 85699,
                        "name": "_symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85663,
                        "src": "3265:7:364",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 85697,
                      "name": "__ERC721A_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14669,
                      "src": "3243:14:364",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 85700,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3243:30:364",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85701,
                  "nodeType": "ExpressionStatement",
                  "src": "3243:30:364"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 85703,
                        "name": "_contractURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85665,
                        "src": "3302:12:364",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 85702,
                      "name": "_setupContractURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17519,
                      "src": "3284:17:364",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 85704,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3284:31:364",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85705,
                  "nodeType": "ExpressionStatement",
                  "src": "3284:31:364"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 85707,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85659,
                        "src": "3337:13:364",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 85706,
                      "name": "_setupOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21146,
                      "src": "3325:11:364",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 85708,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3325:26:364",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85709,
                  "nodeType": "ExpressionStatement",
                  "src": "3325:26:364"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 85711,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21176,
                        "src": "3373:18:364",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 85712,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85659,
                        "src": "3393:13:364",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 85710,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        21723
                      ],
                      "referencedDeclaration": 21723,
                      "src": "3362:10:364",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 85713,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3362:45:364",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85714,
                  "nodeType": "ExpressionStatement",
                  "src": "3362:45:364"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 85716,
                        "name": "_minterRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85688,
                        "src": "3428:11:364",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 85717,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85659,
                        "src": "3441:13:364",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 85715,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        21723
                      ],
                      "referencedDeclaration": 21723,
                      "src": "3417:10:364",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 85718,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3417:38:364",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85719,
                  "nodeType": "ExpressionStatement",
                  "src": "3417:38:364"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 85721,
                        "name": "_transferRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85682,
                        "src": "3476:13:364",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 85722,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85659,
                        "src": "3491:13:364",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 85720,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        21723
                      ],
                      "referencedDeclaration": 21723,
                      "src": "3465:10:364",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 85723,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3465:40:364",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85724,
                  "nodeType": "ExpressionStatement",
                  "src": "3465:40:364"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 85726,
                        "name": "_transferRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85682,
                        "src": "3526:13:364",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 85729,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3549:1:364",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 85728,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3541:7:364",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 85727,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3541:7:364",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 85730,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3541:10:364",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 85725,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        21723
                      ],
                      "referencedDeclaration": 21723,
                      "src": "3515:10:364",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 85731,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3515:37:364",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85732,
                  "nodeType": "ExpressionStatement",
                  "src": "3515:37:364"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 85734,
                        "name": "_royaltyRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85672,
                        "src": "3588:17:364",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 85735,
                        "name": "_royaltyBps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85674,
                        "src": "3607:11:364",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 85733,
                      "name": "_setupDefaultRoyaltyInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22326,
                      "src": "3563:24:364",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 85736,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3563:56:364",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85737,
                  "nodeType": "ExpressionStatement",
                  "src": "3563:56:364"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 85739,
                        "name": "_saleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85670,
                        "src": "3656:14:364",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 85738,
                      "name": "_setupPrimarySaleRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22060,
                      "src": "3629:26:364",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 85740,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3629:42:364",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85741,
                  "nodeType": "ExpressionStatement",
                  "src": "3629:42:364"
                },
                {
                  "expression": {
                    "id": 85744,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 85742,
                      "name": "transferRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 85643,
                      "src": "3682:12:364",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 85743,
                      "name": "_transferRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 85682,
                      "src": "3697:13:364",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "3682:28:364",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 85745,
                  "nodeType": "ExpressionStatement",
                  "src": "3682:28:364"
                },
                {
                  "expression": {
                    "id": 85748,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 85746,
                      "name": "minterRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 85646,
                      "src": "3720:10:364",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 85747,
                      "name": "_minterRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 85688,
                      "src": "3733:11:364",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "3720:24:364",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 85749,
                  "nodeType": "ExpressionStatement",
                  "src": "3720:24:364"
                }
              ]
            },
            "documentation": {
              "id": 85657,
              "nodeType": "StructuredDocumentation",
              "src": "2597:54:364",
              "text": "@dev Initializes the contract, like a constructor."
            },
            "functionSelector": "49c5c5b6",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 85677,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 85676,
                  "name": "initializerERC721A",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 16602,
                  "src": "2959:18:364"
                },
                "nodeType": "ModifierInvocation",
                "src": "2959:18:364"
              },
              {
                "id": 85679,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 85678,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 150119,
                  "src": "2978:11:364"
                },
                "nodeType": "ModifierInvocation",
                "src": "2978:11:364"
              }
            ],
            "name": "initialize",
            "nameLocation": "2665:10:364",
            "parameters": {
              "id": 85675,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85659,
                  "mutability": "mutable",
                  "name": "_defaultAdmin",
                  "nameLocation": "2693:13:364",
                  "nodeType": "VariableDeclaration",
                  "scope": 85751,
                  "src": "2685:21:364",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 85658,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2685:7:364",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 85661,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "2730:5:364",
                  "nodeType": "VariableDeclaration",
                  "scope": 85751,
                  "src": "2716:19:364",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 85660,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2716:6:364",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 85663,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "2759:7:364",
                  "nodeType": "VariableDeclaration",
                  "scope": 85751,
                  "src": "2745:21:364",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 85662,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2745:6:364",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 85665,
                  "mutability": "mutable",
                  "name": "_contractURI",
                  "nameLocation": "2790:12:364",
                  "nodeType": "VariableDeclaration",
                  "scope": 85751,
                  "src": "2776:26:364",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 85664,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2776:6:364",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 85668,
                  "mutability": "mutable",
                  "name": "_trustedForwarders",
                  "nameLocation": "2829:18:364",
                  "nodeType": "VariableDeclaration",
                  "scope": 85751,
                  "src": "2812:35:364",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 85666,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2812:7:364",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 85667,
                    "nodeType": "ArrayTypeName",
                    "src": "2812:9:364",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 85670,
                  "mutability": "mutable",
                  "name": "_saleRecipient",
                  "nameLocation": "2865:14:364",
                  "nodeType": "VariableDeclaration",
                  "scope": 85751,
                  "src": "2857:22:364",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 85669,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2857:7:364",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 85672,
                  "mutability": "mutable",
                  "name": "_royaltyRecipient",
                  "nameLocation": "2897:17:364",
                  "nodeType": "VariableDeclaration",
                  "scope": 85751,
                  "src": "2889:25:364",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 85671,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2889:7:364",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 85674,
                  "mutability": "mutable",
                  "name": "_royaltyBps",
                  "nameLocation": "2932:11:364",
                  "nodeType": "VariableDeclaration",
                  "scope": 85751,
                  "src": "2924:19:364",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 85673,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "2924:7:364",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2675:274:364"
            },
            "returnParameters": {
              "id": 85680,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2990:0:364"
            },
            "scope": 86168,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 85777,
            "nodeType": "FunctionDefinition",
            "src": "3998:305:364",
            "nodes": [],
            "body": {
              "id": 85776,
              "nodeType": "Block",
              "src": "4172:131:364",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "id": 85765,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "4186:18:364",
                    "subExpression": {
                      "arguments": [
                        {
                          "id": 85763,
                          "name": "_tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 85754,
                          "src": "4195:8:364",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 85762,
                        "name": "_exists",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15422,
                        "src": "4187:7:364",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (uint256) view returns (bool)"
                        }
                      },
                      "id": 85764,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4187:17:364",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 85771,
                  "nodeType": "IfStatement",
                  "src": "4182:62:364",
                  "trueBody": {
                    "id": 85770,
                    "nodeType": "Block",
                    "src": "4206:38:364",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "214944",
                              "id": 85767,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4227:5:364",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_bb93743f09f74891390357bf755064ac37fe4e3bc84b64922d94e34b2182452a",
                                "typeString": "literal_string \"!ID\""
                              },
                              "value": "!ID"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_bb93743f09f74891390357bf755064ac37fe4e3bc84b64922d94e34b2182452a",
                                "typeString": "literal_string \"!ID\""
                              }
                            ],
                            "id": 85766,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -19,
                              -19
                            ],
                            "referencedDeclaration": -19,
                            "src": "4220:6:364",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 85768,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4220:13:364",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 85769,
                        "nodeType": "ExpressionStatement",
                        "src": "4220:13:364"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 85773,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85754,
                        "src": "4287:8:364",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 85772,
                      "name": "_getURIFromSharedMetadata",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22497,
                      "src": "4261:25:364",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (uint256) view returns (string memory)"
                      }
                    },
                    "id": 85774,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4261:35:364",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 85761,
                  "id": 85775,
                  "nodeType": "Return",
                  "src": "4254:42:364"
                }
              ]
            },
            "baseFunctions": [
              15006,
              16899
            ],
            "documentation": {
              "id": 85752,
              "nodeType": "StructuredDocumentation",
              "src": "3948:45:364",
              "text": "@dev Returns the URI for a given tokenId."
            },
            "functionSelector": "c87b56dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "4007:8:364",
            "overrides": {
              "id": 85758,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 85756,
                  "name": "ERC721AUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 16535,
                  "src": "4095:18:364"
                },
                {
                  "id": 85757,
                  "name": "IERC721AUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 16911,
                  "src": "4115:19:364"
                }
              ],
              "src": "4086:49:364"
            },
            "parameters": {
              "id": 85755,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85754,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "4024:8:364",
                  "nodeType": "VariableDeclaration",
                  "scope": 85777,
                  "src": "4016:16:364",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 85753,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4016:7:364",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4015:18:364"
            },
            "returnParameters": {
              "id": 85761,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85760,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 85777,
                  "src": "4153:13:364",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 85759,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4153:6:364",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4152:15:364"
            },
            "scope": 86168,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 85802,
            "nodeType": "FunctionDefinition",
            "src": "4334:301:364",
            "nodes": [],
            "body": {
              "id": 85801,
              "nodeType": "Block",
              "src": "4519:116:364",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 85799,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 85791,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 85780,
                          "src": "4560:11:364",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 85789,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -25,
                          "src": "4536:5:364",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_OpenEditionERC721_$86168_$",
                            "typeString": "type(contract super OpenEditionERC721)"
                          }
                        },
                        "id": 85790,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14935,
                        "src": "4536:23:364",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view returns (bool)"
                        }
                      },
                      "id": 85792,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4536:36:364",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 85798,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 85794,
                              "name": "IERC2981Upgradeable",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 150048,
                              "src": "4581:19:364",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC2981Upgradeable_$150048_$",
                                "typeString": "type(contract IERC2981Upgradeable)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_IERC2981Upgradeable_$150048_$",
                                "typeString": "type(contract IERC2981Upgradeable)"
                              }
                            ],
                            "id": 85793,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "4576:4:364",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 85795,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4576:25:364",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_IERC2981Upgradeable_$150048",
                            "typeString": "type(contract IERC2981Upgradeable)"
                          }
                        },
                        "id": 85796,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "interfaceId",
                        "nodeType": "MemberAccess",
                        "src": "4576:37:364",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 85797,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85780,
                        "src": "4617:11:364",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "src": "4576:52:364",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4536:92:364",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 85788,
                  "id": 85800,
                  "nodeType": "Return",
                  "src": "4529:99:364"
                }
              ]
            },
            "baseFunctions": [
              13828,
              14935,
              16770
            ],
            "documentation": {
              "id": 85778,
              "nodeType": "StructuredDocumentation",
              "src": "4309:20:364",
              "text": "@dev See ERC 165"
            },
            "functionSelector": "01ffc9a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "4343:17:364",
            "overrides": {
              "id": 85785,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 85782,
                  "name": "ERC721AUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 16535,
                  "src": "4442:18:364"
                },
                {
                  "id": 85783,
                  "name": "IERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 13829,
                  "src": "4462:7:364"
                },
                {
                  "id": 85784,
                  "name": "IERC721AUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 16911,
                  "src": "4471:19:364"
                }
              ],
              "src": "4433:58:364"
            },
            "parameters": {
              "id": 85781,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85780,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "4368:11:364",
                  "nodeType": "VariableDeclaration",
                  "scope": 85802,
                  "src": "4361:18:364",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 85779,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "4361:6:364",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4360:20:364"
            },
            "returnParameters": {
              "id": 85788,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85787,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 85802,
                  "src": "4509:4:364",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 85786,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4509:4:364",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4508:6:364"
            },
            "scope": 86168,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 85812,
            "nodeType": "FunctionDefinition",
            "src": "4691:91:364",
            "nodes": [],
            "body": {
              "id": 85811,
              "nodeType": "Block",
              "src": "4757:25:364",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "hexValue": "31",
                    "id": 85809,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4774:1:364",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "functionReturnParameters": 85808,
                  "id": 85810,
                  "nodeType": "Return",
                  "src": "4767:8:364"
                }
              ]
            },
            "baseFunctions": [
              14713
            ],
            "documentation": {
              "id": 85803,
              "nodeType": "StructuredDocumentation",
              "src": "4641:45:364",
              "text": "@dev The start token ID for the contract."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_startTokenId",
            "nameLocation": "4700:13:364",
            "overrides": {
              "id": 85805,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4730:8:364"
            },
            "parameters": {
              "id": 85804,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4713:2:364"
            },
            "returnParameters": {
              "id": 85808,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85807,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 85812,
                  "src": "4748:7:364",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 85806,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4748:7:364",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4747:9:364"
            },
            "scope": 86168,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 85821,
            "nodeType": "FunctionDefinition",
            "src": "4788:93:364",
            "nodes": [],
            "body": {
              "id": 85820,
              "nodeType": "Block",
              "src": "4842:39:364",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 85817,
                      "name": "_startTokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        85812
                      ],
                      "referencedDeclaration": 85812,
                      "src": "4859:13:364",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
                        "typeString": "function () pure returns (uint256)"
                      }
                    },
                    "id": 85818,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4859:15:364",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 85816,
                  "id": 85819,
                  "nodeType": "Return",
                  "src": "4852:22:364"
                }
              ]
            },
            "functionSelector": "e6798baa",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "startTokenId",
            "nameLocation": "4797:12:364",
            "parameters": {
              "id": 85813,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4809:2:364"
            },
            "returnParameters": {
              "id": 85816,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85815,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 85821,
                  "src": "4833:7:364",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 85814,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4833:7:364",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4832:9:364"
            },
            "scope": 86168,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 85907,
            "nodeType": "FunctionDefinition",
            "src": "5154:840:364",
            "nodes": [],
            "body": {
              "id": 85906,
              "nodeType": "Block",
              "src": "5340:654:364",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 85836,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 85834,
                      "name": "_pricePerToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 85830,
                      "src": "5354:14:364",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 85835,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5372:1:364",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5354:19:364",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 85847,
                  "nodeType": "IfStatement",
                  "src": "5350:103:364",
                  "trueBody": {
                    "id": 85846,
                    "nodeType": "Block",
                    "src": "5375:78:364",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 85841,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 85838,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "5397:3:364",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 85839,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "5397:9:364",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 85840,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5410:1:364",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "5397:14:364",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "2156616c7565",
                              "id": 85842,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5413:8:364",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_208006903b0d1b8c530b3b2de29e1f765aa4311b3f136f1a342e9de039eda1b1",
                                "typeString": "literal_string \"!Value\""
                              },
                              "value": "!Value"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_208006903b0d1b8c530b3b2de29e1f765aa4311b3f136f1a342e9de039eda1b1",
                                "typeString": "literal_string \"!Value\""
                              }
                            ],
                            "id": 85837,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5389:7:364",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 85843,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5389:33:364",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 85844,
                        "nodeType": "ExpressionStatement",
                        "src": "5389:33:364"
                      },
                      {
                        "functionReturnParameters": 85833,
                        "id": 85845,
                        "nodeType": "Return",
                        "src": "5436:7:364"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    85849
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 85849,
                      "mutability": "mutable",
                      "name": "totalPrice",
                      "nameLocation": "5471:10:364",
                      "nodeType": "VariableDeclaration",
                      "scope": 85906,
                      "src": "5463:18:364",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 85848,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5463:7:364",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 85853,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 85852,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 85850,
                      "name": "_quantityToClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 85826,
                      "src": "5484:16:364",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 85851,
                      "name": "_pricePerToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 85830,
                      "src": "5503:14:364",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5484:33:364",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5463:54:364"
                },
                {
                  "assignments": [
                    85855
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 85855,
                      "mutability": "mutable",
                      "name": "validMsgValue",
                      "nameLocation": "5533:13:364",
                      "nodeType": "VariableDeclaration",
                      "scope": 85906,
                      "src": "5528:18:364",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 85854,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "5528:4:364",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 85856,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5528:18:364"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 85860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 85857,
                      "name": "_currency",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 85828,
                      "src": "5560:9:364",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 85858,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63578,
                        "src": "5573:19:364",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$63578_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 85859,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "NATIVE_TOKEN",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63346,
                      "src": "5573:32:364",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5560:45:364",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 85876,
                    "nodeType": "Block",
                    "src": "5677:55:364",
                    "statements": [
                      {
                        "expression": {
                          "id": 85874,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 85869,
                            "name": "validMsgValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 85855,
                            "src": "5691:13:364",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 85873,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 85870,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5707:3:364",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 85871,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "5707:9:364",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 85872,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5720:1:364",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "5707:14:364",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "5691:30:364",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 85875,
                        "nodeType": "ExpressionStatement",
                        "src": "5691:30:364"
                      }
                    ]
                  },
                  "id": 85877,
                  "nodeType": "IfStatement",
                  "src": "5556:176:364",
                  "trueBody": {
                    "id": 85868,
                    "nodeType": "Block",
                    "src": "5607:64:364",
                    "statements": [
                      {
                        "expression": {
                          "id": 85866,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 85861,
                            "name": "validMsgValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 85855,
                            "src": "5621:13:364",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 85865,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 85862,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5637:3:364",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 85863,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "5637:9:364",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 85864,
                              "name": "totalPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 85849,
                              "src": "5650:10:364",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "5637:23:364",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "5621:39:364",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 85867,
                        "nodeType": "ExpressionStatement",
                        "src": "5621:39:364"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 85879,
                        "name": "validMsgValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85855,
                        "src": "5749:13:364",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "2156",
                        "id": 85880,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5764:4:364",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4ab0e284d9415599667c0851e9b633cbc3046603c10b78f97a804ca375843fda",
                          "typeString": "literal_string \"!V\""
                        },
                        "value": "!V"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4ab0e284d9415599667c0851e9b633cbc3046603c10b78f97a804ca375843fda",
                          "typeString": "literal_string \"!V\""
                        }
                      ],
                      "id": 85878,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5741:7:364",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 85881,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5741:28:364",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85882,
                  "nodeType": "ExpressionStatement",
                  "src": "5741:28:364"
                },
                {
                  "assignments": [
                    85884
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 85884,
                      "mutability": "mutable",
                      "name": "saleRecipient",
                      "nameLocation": "5788:13:364",
                      "nodeType": "VariableDeclaration",
                      "scope": 85906,
                      "src": "5780:21:364",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 85883,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5780:7:364",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 85895,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 85890,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 85885,
                        "name": "_primarySaleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85824,
                        "src": "5804:21:364",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 85888,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5837:1:364",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 85887,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5829:7:364",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 85886,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5829:7:364",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 85889,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5829:10:364",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "5804:35:364",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 85893,
                      "name": "_primarySaleRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 85824,
                      "src": "5867:21:364",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 85894,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "5804:84:364",
                    "trueExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 85891,
                        "name": "primarySaleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22024,
                        "src": "5842:20:364",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 85892,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5842:22:364",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5780:108:364"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 85899,
                        "name": "_currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85828,
                        "src": "5936:9:364",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 85900,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            86155
                          ],
                          "referencedDeclaration": 86155,
                          "src": "5947:10:364",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 85901,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5947:12:364",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 85902,
                        "name": "saleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85884,
                        "src": "5961:13:364",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 85903,
                        "name": "totalPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85849,
                        "src": "5976:10:364",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 85896,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63578,
                        "src": "5899:19:364",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$63578_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 85898,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferCurrency",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63383,
                      "src": "5899:36:364",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 85904,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5899:88:364",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85905,
                  "nodeType": "ExpressionStatement",
                  "src": "5899:88:364"
                }
              ]
            },
            "baseFunctions": [
              18315
            ],
            "documentation": {
              "id": 85822,
              "nodeType": "StructuredDocumentation",
              "src": "5070:79:364",
              "text": "@dev Collects and distributes the primary sale value of NFTs being claimed."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_collectPriceOnClaim",
            "nameLocation": "5163:20:364",
            "overrides": {
              "id": 85832,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5331:8:364"
            },
            "parameters": {
              "id": 85831,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85824,
                  "mutability": "mutable",
                  "name": "_primarySaleRecipient",
                  "nameLocation": "5201:21:364",
                  "nodeType": "VariableDeclaration",
                  "scope": 85907,
                  "src": "5193:29:364",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 85823,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5193:7:364",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 85826,
                  "mutability": "mutable",
                  "name": "_quantityToClaim",
                  "nameLocation": "5240:16:364",
                  "nodeType": "VariableDeclaration",
                  "scope": 85907,
                  "src": "5232:24:364",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 85825,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5232:7:364",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 85828,
                  "mutability": "mutable",
                  "name": "_currency",
                  "nameLocation": "5274:9:364",
                  "nodeType": "VariableDeclaration",
                  "scope": 85907,
                  "src": "5266:17:364",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 85827,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5266:7:364",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 85830,
                  "mutability": "mutable",
                  "name": "_pricePerToken",
                  "nameLocation": "5301:14:364",
                  "nodeType": "VariableDeclaration",
                  "scope": 85907,
                  "src": "5293:22:364",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 85829,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5293:7:364",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5183:138:364"
            },
            "returnParameters": {
              "id": 85833,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5340:0:364"
            },
            "scope": 86168,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 85929,
            "nodeType": "FunctionDefinition",
            "src": "6047:248:364",
            "nodes": [],
            "body": {
              "id": 85928,
              "nodeType": "Block",
              "src": "6201:94:364",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 85921,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 85918,
                      "name": "startTokenId_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 85916,
                      "src": "6211:13:364",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 85919,
                        "name": "_nextTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14725,
                        "src": "6227:12:364",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 85920,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6227:14:364",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6211:30:364",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 85922,
                  "nodeType": "ExpressionStatement",
                  "src": "6211:30:364"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 85924,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85910,
                        "src": "6261:3:364",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 85925,
                        "name": "_quantityBeingClaimed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85912,
                        "src": "6266:21:364",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 85923,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        16135,
                        16150
                      ],
                      "referencedDeclaration": 16150,
                      "src": "6251:9:364",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 85926,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6251:37:364",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85927,
                  "nodeType": "ExpressionStatement",
                  "src": "6251:37:364"
                }
              ]
            },
            "baseFunctions": [
              18325
            ],
            "documentation": {
              "id": 85908,
              "nodeType": "StructuredDocumentation",
              "src": "6000:42:364",
              "text": "@dev Transfers the NFTs being claimed."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transferTokensOnClaim",
            "nameLocation": "6056:22:364",
            "overrides": {
              "id": 85914,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6148:8:364"
            },
            "parameters": {
              "id": 85913,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85910,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "6087:3:364",
                  "nodeType": "VariableDeclaration",
                  "scope": 85929,
                  "src": "6079:11:364",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 85909,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6079:7:364",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 85912,
                  "mutability": "mutable",
                  "name": "_quantityBeingClaimed",
                  "nameLocation": "6100:21:364",
                  "nodeType": "VariableDeclaration",
                  "scope": 85929,
                  "src": "6092:29:364",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 85911,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6092:7:364",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6078:44:364"
            },
            "returnParameters": {
              "id": 85917,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85916,
                  "mutability": "mutable",
                  "name": "startTokenId_",
                  "nameLocation": "6182:13:364",
                  "nodeType": "VariableDeclaration",
                  "scope": 85929,
                  "src": "6174:21:364",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 85915,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6174:7:364",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6173:23:364"
            },
            "scope": 86168,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 85943,
            "nodeType": "FunctionDefinition",
            "src": "6395:142:364",
            "nodes": [],
            "body": {
              "id": 85942,
              "nodeType": "Block",
              "src": "6472:65:364",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 85937,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21176,
                        "src": "6497:18:364",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 85938,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            86155
                          ],
                          "referencedDeclaration": 86155,
                          "src": "6517:10:364",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 85939,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6517:12:364",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 85936,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21207,
                      "src": "6489:7:364",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 85940,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6489:41:364",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 85935,
                  "id": 85941,
                  "nodeType": "Return",
                  "src": "6482:48:364"
                }
              ]
            },
            "baseFunctions": [
              22066
            ],
            "documentation": {
              "id": 85930,
              "nodeType": "StructuredDocumentation",
              "src": "6301:89:364",
              "text": "@dev Checks whether primary sale recipient can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetPrimarySaleRecipient",
            "nameLocation": "6404:27:364",
            "overrides": {
              "id": 85932,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6448:8:364"
            },
            "parameters": {
              "id": 85931,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6431:2:364"
            },
            "returnParameters": {
              "id": 85935,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85934,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 85943,
                  "src": "6466:4:364",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 85933,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6466:4:364",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6465:6:364"
            },
            "scope": 86168,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 85957,
            "nodeType": "FunctionDefinition",
            "src": "6620:127:364",
            "nodes": [],
            "body": {
              "id": 85956,
              "nodeType": "Block",
              "src": "6682:65:364",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 85951,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21176,
                        "src": "6707:18:364",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 85952,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            86155
                          ],
                          "referencedDeclaration": 86155,
                          "src": "6727:10:364",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 85953,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6727:12:364",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 85950,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21207,
                      "src": "6699:7:364",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 85954,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6699:41:364",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 85949,
                  "id": 85955,
                  "nodeType": "Return",
                  "src": "6692:48:364"
                }
              ]
            },
            "baseFunctions": [
              21152
            ],
            "documentation": {
              "id": 85944,
              "nodeType": "StructuredDocumentation",
              "src": "6543:72:364",
              "text": "@dev Checks whether owner can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetOwner",
            "nameLocation": "6629:12:364",
            "overrides": {
              "id": 85946,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6658:8:364"
            },
            "parameters": {
              "id": 85945,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6641:2:364"
            },
            "returnParameters": {
              "id": 85949,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85948,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 85957,
                  "src": "6676:4:364",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 85947,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6676:4:364",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6675:6:364"
            },
            "scope": 86168,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 85971,
            "nodeType": "FunctionDefinition",
            "src": "6837:133:364",
            "nodes": [],
            "body": {
              "id": 85970,
              "nodeType": "Block",
              "src": "6905:65:364",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 85965,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21176,
                        "src": "6930:18:364",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 85966,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            86155
                          ],
                          "referencedDeclaration": 86155,
                          "src": "6950:10:364",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 85967,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6950:12:364",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 85964,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21207,
                      "src": "6922:7:364",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 85968,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6922:41:364",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 85963,
                  "id": 85969,
                  "nodeType": "Return",
                  "src": "6915:48:364"
                }
              ]
            },
            "baseFunctions": [
              22394
            ],
            "documentation": {
              "id": 85958,
              "nodeType": "StructuredDocumentation",
              "src": "6753:79:364",
              "text": "@dev Checks whether royalty info can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetRoyaltyInfo",
            "nameLocation": "6846:18:364",
            "overrides": {
              "id": 85960,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6881:8:364"
            },
            "parameters": {
              "id": 85959,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6864:2:364"
            },
            "returnParameters": {
              "id": 85963,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85962,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 85971,
                  "src": "6899:4:364",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 85961,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6899:4:364",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6898:6:364"
            },
            "scope": 86168,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 85985,
            "nodeType": "FunctionDefinition",
            "src": "7065:133:364",
            "nodes": [],
            "body": {
              "id": 85984,
              "nodeType": "Block",
              "src": "7133:65:364",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 85979,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21176,
                        "src": "7158:18:364",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 85980,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            86155
                          ],
                          "referencedDeclaration": 86155,
                          "src": "7178:10:364",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 85981,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7178:12:364",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 85978,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21207,
                      "src": "7150:7:364",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 85982,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7150:41:364",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 85977,
                  "id": 85983,
                  "nodeType": "Return",
                  "src": "7143:48:364"
                }
              ]
            },
            "baseFunctions": [
              17525
            ],
            "documentation": {
              "id": 85972,
              "nodeType": "StructuredDocumentation",
              "src": "6976:84:364",
              "text": "@dev Checks whether contract metadata can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetContractURI",
            "nameLocation": "7074:18:364",
            "overrides": {
              "id": 85974,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7109:8:364"
            },
            "parameters": {
              "id": 85973,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7092:2:364"
            },
            "returnParameters": {
              "id": 85977,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85976,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 85985,
                  "src": "7127:4:364",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 85975,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7127:4:364",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7126:6:364"
            },
            "scope": 86168,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 85999,
            "nodeType": "FunctionDefinition",
            "src": "7293:137:364",
            "nodes": [],
            "body": {
              "id": 85998,
              "nodeType": "Block",
              "src": "7365:65:364",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 85993,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21176,
                        "src": "7390:18:364",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 85994,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            86155
                          ],
                          "referencedDeclaration": 86155,
                          "src": "7410:10:364",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 85995,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7410:12:364",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 85992,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21207,
                      "src": "7382:7:364",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 85996,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7382:41:364",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 85991,
                  "id": 85997,
                  "nodeType": "Return",
                  "src": "7375:48:364"
                }
              ]
            },
            "baseFunctions": [
              18331
            ],
            "documentation": {
              "id": 85986,
              "nodeType": "StructuredDocumentation",
              "src": "7204:84:364",
              "text": "@dev Checks whether platform fee info can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetClaimConditions",
            "nameLocation": "7302:22:364",
            "overrides": {
              "id": 85988,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7341:8:364"
            },
            "parameters": {
              "id": 85987,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7324:2:364"
            },
            "returnParameters": {
              "id": 85991,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85990,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 85999,
                  "src": "7359:4:364",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 85989,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7359:4:364",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7358:6:364"
            },
            "scope": 86168,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 86013,
            "nodeType": "FunctionDefinition",
            "src": "7538:136:364",
            "nodes": [],
            "body": {
              "id": 86012,
              "nodeType": "Block",
              "src": "7617:57:364",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 86007,
                        "name": "minterRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85646,
                        "src": "7642:10:364",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 86008,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            86155
                          ],
                          "referencedDeclaration": 86155,
                          "src": "7654:10:364",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 86009,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7654:12:364",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 86006,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21207,
                      "src": "7634:7:364",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 86010,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7634:33:364",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 86005,
                  "id": 86011,
                  "nodeType": "Return",
                  "src": "7627:40:364"
                }
              ]
            },
            "baseFunctions": [
              22503
            ],
            "documentation": {
              "id": 86000,
              "nodeType": "StructuredDocumentation",
              "src": "7436:97:364",
              "text": "@dev Returns whether the shared metadata of tokens can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetSharedMetadata",
            "nameLocation": "7547:21:364",
            "overrides": {
              "id": 86002,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7593:8:364"
            },
            "parameters": {
              "id": 86001,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7568:2:364"
            },
            "returnParameters": {
              "id": 86005,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86004,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 86013,
                  "src": "7611:4:364",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 86003,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7611:4:364",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7610:6:364"
            },
            "scope": 86168,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 86027,
            "nodeType": "FunctionDefinition",
            "src": "7940:145:364",
            "nodes": [],
            "body": {
              "id": 86026,
              "nodeType": "Block",
              "src": "7995:90:364",
              "nodes": [],
              "statements": [
                {
                  "id": 86025,
                  "nodeType": "UncheckedBlock",
                  "src": "8005:74:364",
                  "statements": [
                    {
                      "expression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 86023,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 86019,
                            "name": "_nextTokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14725,
                            "src": "8036:12:364",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 86020,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8036:14:364",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 86021,
                            "name": "_startTokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              85812
                            ],
                            "referencedDeclaration": 85812,
                            "src": "8053:13:364",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
                              "typeString": "function () pure returns (uint256)"
                            }
                          },
                          "id": 86022,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8053:15:364",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8036:32:364",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "functionReturnParameters": 86018,
                      "id": 86024,
                      "nodeType": "Return",
                      "src": "8029:39:364"
                    }
                  ]
                }
              ]
            },
            "documentation": {
              "id": 86014,
              "nodeType": "StructuredDocumentation",
              "src": "7858:77:364",
              "text": " Returns the total amount of tokens minted in the contract."
            },
            "functionSelector": "a2309ff8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalMinted",
            "nameLocation": "7949:11:364",
            "parameters": {
              "id": 86015,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7960:2:364"
            },
            "returnParameters": {
              "id": 86018,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86017,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 86027,
                  "src": "7986:7:364",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 86016,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7986:7:364",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7985:9:364"
            },
            "scope": 86168,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 86037,
            "nodeType": "FunctionDefinition",
            "src": "8167:99:364",
            "nodes": [],
            "body": {
              "id": 86036,
              "nodeType": "Block",
              "src": "8228:38:364",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 86033,
                      "name": "_nextTokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14725,
                      "src": "8245:12:364",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 86034,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8245:14:364",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 86032,
                  "id": 86035,
                  "nodeType": "Return",
                  "src": "8238:21:364"
                }
              ]
            },
            "documentation": {
              "id": 86028,
              "nodeType": "StructuredDocumentation",
              "src": "8091:71:364",
              "text": "@dev The tokenId of the next NFT that will be minted / lazy minted."
            },
            "functionSelector": "3b1475a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "nextTokenIdToMint",
            "nameLocation": "8176:17:364",
            "parameters": {
              "id": 86029,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8193:2:364"
            },
            "returnParameters": {
              "id": 86032,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86031,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 86037,
                  "src": "8219:7:364",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 86030,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8219:7:364",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8218:9:364"
            },
            "scope": 86168,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 86047,
            "nodeType": "FunctionDefinition",
            "src": "8335:100:364",
            "nodes": [],
            "body": {
              "id": 86046,
              "nodeType": "Block",
              "src": "8397:38:364",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 86043,
                      "name": "_nextTokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14725,
                      "src": "8414:12:364",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 86044,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8414:14:364",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 86042,
                  "id": 86045,
                  "nodeType": "Return",
                  "src": "8407:21:364"
                }
              ]
            },
            "documentation": {
              "id": 86038,
              "nodeType": "StructuredDocumentation",
              "src": "8272:58:364",
              "text": "@dev The next token ID of the NFT that can be claimed."
            },
            "functionSelector": "acd083f8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "nextTokenIdToClaim",
            "nameLocation": "8344:18:364",
            "parameters": {
              "id": 86039,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8362:2:364"
            },
            "returnParameters": {
              "id": 86042,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86041,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 86047,
                  "src": "8388:7:364",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 86040,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8388:7:364",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8387:9:364"
            },
            "scope": 86168,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 86059,
            "nodeType": "FunctionDefinition",
            "src": "8491:184:364",
            "nodes": [],
            "body": {
              "id": 86058,
              "nodeType": "Block",
              "src": "8539:136:364",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 86054,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86050,
                        "src": "8654:7:364",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 86055,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8663:4:364",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 86053,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        16231,
                        16407
                      ],
                      "referencedDeclaration": 16407,
                      "src": "8648:5:364",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (uint256,bool)"
                      }
                    },
                    "id": 86056,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8648:20:364",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86057,
                  "nodeType": "ExpressionStatement",
                  "src": "8648:20:364"
                }
              ]
            },
            "documentation": {
              "id": 86048,
              "nodeType": "StructuredDocumentation",
              "src": "8441:45:364",
              "text": "@dev Burns `tokenId`. See {ERC721-_burn}."
            },
            "functionSelector": "42966c68",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "8500:4:364",
            "parameters": {
              "id": 86051,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86050,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8513:7:364",
                  "nodeType": "VariableDeclaration",
                  "scope": 86059,
                  "src": "8505:15:364",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 86049,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8505:7:364",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8504:17:364"
            },
            "returnParameters": {
              "id": 86052,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8539:0:364"
            },
            "scope": 86168,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 86123,
            "nodeType": "FunctionDefinition",
            "src": "8729:563:364",
            "nodes": [],
            "body": {
              "id": 86122,
              "nodeType": "Block",
              "src": "8891:401:364",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 86075,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86062,
                        "src": "8929:4:364",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 86076,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86064,
                        "src": "8935:2:364",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 86077,
                        "name": "startTokenId_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86066,
                        "src": "8939:13:364",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 86078,
                        "name": "quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86068,
                        "src": "8954:8:364",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 86072,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "8901:5:364",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_OpenEditionERC721_$86168_$",
                          "typeString": "type(contract super OpenEditionERC721)"
                        }
                      },
                      "id": 86074,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_beforeTokenTransfers",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15725,
                      "src": "8901:27:364",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 86079,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8901:62:364",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86080,
                  "nodeType": "ExpressionStatement",
                  "src": "8901:62:364"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 86102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 86095,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 86088,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "9075:34:364",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 86082,
                              "name": "transferRole",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 85643,
                              "src": "9084:12:364",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 86085,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9106:1:364",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 86084,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "9098:7:364",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 86083,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "9098:7:364",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 86086,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9098:10:364",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 86081,
                            "name": "hasRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21207,
                            "src": "9076:7:364",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) view returns (bool)"
                            }
                          },
                          "id": 86087,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9076:33:364",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 86094,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 86089,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86062,
                          "src": "9113:4:364",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 86092,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9129:1:364",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 86091,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9121:7:364",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 86090,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9121:7:364",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 86093,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9121:10:364",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9113:18:364",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "9075:56:364",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 86101,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 86096,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86064,
                        "src": "9135:2:364",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 86099,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9149:1:364",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 86098,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9141:7:364",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 86097,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9141:7:364",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 86100,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9141:10:364",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "9135:16:364",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "9075:76:364",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 86121,
                  "nodeType": "IfStatement",
                  "src": "9071:215:364",
                  "trueBody": {
                    "id": 86120,
                    "nodeType": "Block",
                    "src": "9153:133:364",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 86113,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 86107,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "9171:28:364",
                            "subExpression": {
                              "arguments": [
                                {
                                  "id": 86104,
                                  "name": "transferRole",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 85643,
                                  "src": "9180:12:364",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "id": 86105,
                                  "name": "from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 86062,
                                  "src": "9194:4:364",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 86103,
                                "name": "hasRole",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 21207,
                                "src": "9172:7:364",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (bytes32,address) view returns (bool)"
                                }
                              },
                              "id": 86106,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9172:27:364",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "id": 86112,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "9203:26:364",
                            "subExpression": {
                              "arguments": [
                                {
                                  "id": 86109,
                                  "name": "transferRole",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 85643,
                                  "src": "9212:12:364",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "id": 86110,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 86064,
                                  "src": "9226:2:364",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 86108,
                                "name": "hasRole",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 21207,
                                "src": "9204:7:364",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (bytes32,address) view returns (bool)"
                                }
                              },
                              "id": 86111,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9204:25:364",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "9171:58:364",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 86119,
                        "nodeType": "IfStatement",
                        "src": "9167:109:364",
                        "trueBody": {
                          "id": 86118,
                          "nodeType": "Block",
                          "src": "9231:45:364",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "hexValue": "2154",
                                    "id": 86115,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "9256:4:364",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_7db3b04d902e8ae9e0c6f3e0ba4170cc392ab92143dfd3399cb577e88ea77ce4",
                                      "typeString": "literal_string \"!T\""
                                    },
                                    "value": "!T"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_7db3b04d902e8ae9e0c6f3e0ba4170cc392ab92143dfd3399cb577e88ea77ce4",
                                      "typeString": "literal_string \"!T\""
                                    }
                                  ],
                                  "id": 86114,
                                  "name": "revert",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -19,
                                    -19
                                  ],
                                  "referencedDeclaration": -19,
                                  "src": "9249:6:364",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (string memory) pure"
                                  }
                                },
                                "id": 86116,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9249:12:364",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 86117,
                              "nodeType": "ExpressionStatement",
                              "src": "9249:12:364"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              15725
            ],
            "documentation": {
              "id": 86060,
              "nodeType": "StructuredDocumentation",
              "src": "8681:43:364",
              "text": "@dev See {ERC721-_beforeTokenTransfer}."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfers",
            "nameLocation": "8738:21:364",
            "overrides": {
              "id": 86070,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8882:8:364"
            },
            "parameters": {
              "id": 86069,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86062,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "8777:4:364",
                  "nodeType": "VariableDeclaration",
                  "scope": 86123,
                  "src": "8769:12:364",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 86061,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8769:7:364",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86064,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8799:2:364",
                  "nodeType": "VariableDeclaration",
                  "scope": 86123,
                  "src": "8791:10:364",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 86063,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8791:7:364",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86066,
                  "mutability": "mutable",
                  "name": "startTokenId_",
                  "nameLocation": "8819:13:364",
                  "nodeType": "VariableDeclaration",
                  "scope": 86123,
                  "src": "8811:21:364",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 86065,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8811:7:364",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86068,
                  "mutability": "mutable",
                  "name": "quantity",
                  "nameLocation": "8850:8:364",
                  "nodeType": "VariableDeclaration",
                  "scope": 86123,
                  "src": "8842:16:364",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 86067,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8842:7:364",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8759:105:364"
            },
            "returnParameters": {
              "id": 86071,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8891:0:364"
            },
            "scope": 86168,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 86133,
            "nodeType": "FunctionDefinition",
            "src": "9298:111:364",
            "nodes": [],
            "body": {
              "id": 86132,
              "nodeType": "Block",
              "src": "9373:36:364",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 86129,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        86155
                      ],
                      "referencedDeclaration": 86155,
                      "src": "9390:10:364",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 86130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9390:12:364",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 86128,
                  "id": 86131,
                  "nodeType": "Return",
                  "src": "9383:19:364"
                }
              ]
            },
            "baseFunctions": [
              18267
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_dropMsgSender",
            "nameLocation": "9307:14:364",
            "overrides": {
              "id": 86125,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9346:8:364"
            },
            "parameters": {
              "id": 86124,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9321:2:364"
            },
            "returnParameters": {
              "id": 86128,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86127,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 86133,
                  "src": "9364:7:364",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 86126,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9364:7:364",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9363:9:364"
            },
            "scope": 86168,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 86143,
            "nodeType": "FunctionDefinition",
            "src": "9415:114:364",
            "nodes": [],
            "body": {
              "id": 86142,
              "nodeType": "Block",
              "src": "9493:36:364",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 86139,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        86155
                      ],
                      "referencedDeclaration": 86155,
                      "src": "9510:10:364",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 86140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9510:12:364",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 86138,
                  "id": 86141,
                  "nodeType": "Return",
                  "src": "9503:19:364"
                }
              ]
            },
            "baseFunctions": [
              16516
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgSenderERC721A",
            "nameLocation": "9424:17:364",
            "overrides": {
              "id": 86135,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9466:8:364"
            },
            "parameters": {
              "id": 86134,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9441:2:364"
            },
            "returnParameters": {
              "id": 86138,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86137,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 86143,
                  "src": "9484:7:364",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 86136,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9484:7:364",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9483:9:364"
            },
            "scope": 86168,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 86155,
            "nodeType": "FunctionDefinition",
            "src": "9535:167:364",
            "nodes": [],
            "body": {
              "id": 86154,
              "nodeType": "Block",
              "src": "9640:62:364",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 86150,
                        "name": "ERC2771ContextUpgradeable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45607,
                        "src": "9657:25:364",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC2771ContextUpgradeable_$45607_$",
                          "typeString": "type(contract ERC2771ContextUpgradeable)"
                        }
                      },
                      "id": 86151,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_msgSender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45575,
                      "src": "9657:36:364",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 86152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9657:38:364",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 86149,
                  "id": 86153,
                  "nodeType": "Return",
                  "src": "9650:45:364"
                }
              ]
            },
            "baseFunctions": [
              45575
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgSender",
            "nameLocation": "9544:10:364",
            "overrides": {
              "id": 86146,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 86145,
                  "name": "ERC2771ContextUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 45607,
                  "src": "9588:25:364"
                }
              ],
              "src": "9579:35:364"
            },
            "parameters": {
              "id": 86144,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9554:2:364"
            },
            "returnParameters": {
              "id": 86149,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86148,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "9632:6:364",
                  "nodeType": "VariableDeclaration",
                  "scope": 86155,
                  "src": "9624:14:364",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 86147,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9624:7:364",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9623:16:364"
            },
            "scope": 86168,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 86167,
            "nodeType": "FunctionDefinition",
            "src": "9708:163:364",
            "nodes": [],
            "body": {
              "id": 86166,
              "nodeType": "Block",
              "src": "9811:60:364",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 86162,
                        "name": "ERC2771ContextUpgradeable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45607,
                        "src": "9828:25:364",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC2771ContextUpgradeable_$45607_$",
                          "typeString": "type(contract ERC2771ContextUpgradeable)"
                        }
                      },
                      "id": 86163,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_msgData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45602,
                      "src": "9828:34:364",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_calldata_ptr_$",
                        "typeString": "function () view returns (bytes calldata)"
                      }
                    },
                    "id": 86164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9828:36:364",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_calldata_ptr",
                      "typeString": "bytes calldata"
                    }
                  },
                  "functionReturnParameters": 86161,
                  "id": 86165,
                  "nodeType": "Return",
                  "src": "9821:43:364"
                }
              ]
            },
            "baseFunctions": [
              45602
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgData",
            "nameLocation": "9717:8:364",
            "overrides": {
              "id": 86158,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 86157,
                  "name": "ERC2771ContextUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 45607,
                  "src": "9759:25:364"
                }
              ],
              "src": "9750:35:364"
            },
            "parameters": {
              "id": 86156,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9725:2:364"
            },
            "returnParameters": {
              "id": 86161,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86160,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 86167,
                  "src": "9795:14:364",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 86159,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "9795:5:364",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9794:16:364"
            },
            "scope": 86168,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 85616,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 150199,
              "src": "1580:13:364"
            },
            "id": 85617,
            "nodeType": "InheritanceSpecifier",
            "src": "1580:13:364"
          },
          {
            "baseName": {
              "id": 85618,
              "name": "ContractMetadata",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 17526,
              "src": "1599:16:364"
            },
            "id": 85619,
            "nodeType": "InheritanceSpecifier",
            "src": "1599:16:364"
          },
          {
            "baseName": {
              "id": 85620,
              "name": "Royalty",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 22395,
              "src": "1621:7:364"
            },
            "id": 85621,
            "nodeType": "InheritanceSpecifier",
            "src": "1621:7:364"
          },
          {
            "baseName": {
              "id": 85622,
              "name": "PrimarySale",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 22067,
              "src": "1634:11:364"
            },
            "id": 85623,
            "nodeType": "InheritanceSpecifier",
            "src": "1634:11:364"
          },
          {
            "baseName": {
              "id": 85624,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 21153,
              "src": "1651:7:364"
            },
            "id": 85625,
            "nodeType": "InheritanceSpecifier",
            "src": "1651:7:364"
          },
          {
            "baseName": {
              "id": 85626,
              "name": "SharedMetadata",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 22504,
              "src": "1664:14:364"
            },
            "id": 85627,
            "nodeType": "InheritanceSpecifier",
            "src": "1664:14:364"
          },
          {
            "baseName": {
              "id": 85628,
              "name": "PermissionsEnumerable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 21799,
              "src": "1684:21:364"
            },
            "id": 85629,
            "nodeType": "InheritanceSpecifier",
            "src": "1684:21:364"
          },
          {
            "baseName": {
              "id": 85630,
              "name": "Drop",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 18332,
              "src": "1711:4:364"
            },
            "id": 85631,
            "nodeType": "InheritanceSpecifier",
            "src": "1711:4:364"
          },
          {
            "baseName": {
              "id": 85632,
              "name": "ERC2771ContextUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 45607,
              "src": "1721:25:364"
            },
            "id": 85633,
            "nodeType": "InheritanceSpecifier",
            "src": "1721:25:364"
          },
          {
            "baseName": {
              "id": 85634,
              "name": "Multicall",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 20595,
              "src": "1752:9:364"
            },
            "id": 85635,
            "nodeType": "InheritanceSpecifier",
            "src": "1752:9:364"
          },
          {
            "baseName": {
              "id": 85636,
              "name": "ERC721AQueryableUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 14507,
              "src": "1767:27:364"
            },
            "id": 85637,
            "nodeType": "InheritanceSpecifier",
            "src": "1767:27:364"
          }
        ],
        "canonicalName": "OpenEditionERC721",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          86168,
          14507,
          16705,
          16535,
          16911,
          16638,
          20595,
          32926,
          45607,
          156044,
          18332,
          32573,
          32308,
          32285,
          21799,
          21500,
          33281,
          33256,
          22504,
          13992,
          21153,
          33183,
          22067,
          33345,
          22395,
          33409,
          13973,
          13829,
          33624,
          17526,
          150199,
          32437
        ],
        "name": "OpenEditionERC721",
        "nameLocation": "1555:17:364",
        "scope": 86169,
        "usedErrors": [
          16673,
          16711,
          16714,
          16717,
          16720,
          16723,
          16726,
          16729,
          16732,
          16735,
          16738,
          16741,
          16744,
          16747
        ]
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 364
}