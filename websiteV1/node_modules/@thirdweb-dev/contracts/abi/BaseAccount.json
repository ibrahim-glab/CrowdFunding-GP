{
  "abi": [
    {
      "inputs": [],
      "name": "entryPoint",
      "outputs": [
        {
          "internalType": "contract IEntryPoint",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getNonce",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "initCode",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "callData",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "callGasLimit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "verificationGasLimit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "preVerificationGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxFeePerGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxPriorityFeePerGas",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "paymasterAndData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "internalType": "struct UserOperation",
          "name": "userOp",
          "type": "tuple"
        },
        {
          "internalType": "bytes32",
          "name": "userOpHash",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "missingAccountFunds",
          "type": "uint256"
        }
      ],
      "name": "validateUserOp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "validationData",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "entryPoint()": "b0d691fe",
    "getNonce()": "d087d288",
    "validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)": "3a871cdd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"entryPoint\",\"outputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"missingAccountFunds\",\"type\":\"uint256\"}],\"name\":\"validateUserOp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"entryPoint()\":{\"notice\":\"return the entryPoint used by this account. subclass should return the current entryPoint used by this account.\"},\"getNonce()\":{\"notice\":\"Return the account nonce. This method returns the next sequential nonce. For a nonce of a specific key, use `entrypoint.getNonce(account, key)`\"},\"validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"notice\":\"Validate user's signature and nonce. subclass doesn't need to override this method. Instead, it should override the specific internal validation methods.\"}},\"notice\":\"Basic account implementation. this contract provides the basic logic for implementing the IAccount interface  - validateUserOp specific account implementation should inherit it and provide the account-specific logic\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/prebuilts/account/utils/BaseAccount.sol\":\"BaseAccount\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@std/=lib/forge-std/src/\",\":@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/\",\":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/\",\":contracts/=contracts/\",\":ds-test/=lib/ds-test/src/\",\":dynamic-contracts/=lib/dynamic-contracts/src/\",\":erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/ERC721A-Upgradeable/\",\":erc721a/=lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/\"]},\"sources\":{\"contracts/prebuilts/account/interface/IAccount.sol\":{\"keccak256\":\"0x98f2d41bd69f4b46a697957681d2e14cf2f10b6133ede864b838f821899d4e41\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ddaae235044c84994f693a38030d3923bb8e65f9b7f1fc5028a424a16f7a723c\",\"dweb:/ipfs/QmdXzv1k9mdECGxUDigBf6GAb3bn3qMdTKcmGadJ4EoLzL\"]},\"contracts/prebuilts/account/interface/IAggregator.sol\":{\"keccak256\":\"0xf933b69fee393c235a75d99f8d310091b955e8af0240d3855939e16e86a85873\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://772937aa4c500fac35a8edf31c413c59d307d8558c941272a51deba44c0f730e\",\"dweb:/ipfs/QmNvW9G3BCTLFvSBb15ZqJMzETWF5drE7gAfbLxkz6aknJ\"]},\"contracts/prebuilts/account/interface/IEntrypoint.sol\":{\"keccak256\":\"0xe94c12629f153c344d698c207f32a0744b49d3849df95101e631fbb96a8f6f8d\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://810ae34240668bf730ffd252bff57ff6f94215c6a461c6d42bc9b8842a0e5114\",\"dweb:/ipfs/QmQ1SnuCxgvEAHS4z2y6Vz4P5scwCxRP1wBqYQvKcabqAK\"]},\"contracts/prebuilts/account/interface/INonceManager.sol\":{\"keccak256\":\"0xf509795f7336c849ac5d247d71af20376b67201c647aa847fd17ca8e7909dec3\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b3418173e37999ba0015bb352ab1b9dfbe1296143a8565ea3d3ce7a9a9e087b4\",\"dweb:/ipfs/QmS93Dw1FfPj5kHk9cLrh1VssbwNyaKKo5LNmEHwxzDqNp\"]},\"contracts/prebuilts/account/interface/IStakeManager.sol\":{\"keccak256\":\"0x61562da096c3c3da5755bbb5b552ea713723d7be36975cd401022ff321753b73\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://e6bcd63477257007d2fcd92b38c8105cb82c2d0eae3836ac856839234481f4ab\",\"dweb:/ipfs/QmZuNE3y1RvtRXYiw3eiT25YQH2SAa1kFcpxAgW9KX6KtZ\"]},\"contracts/prebuilts/account/utils/BaseAccount.sol\":{\"keccak256\":\"0x87502116044c3de1707a3dc73d67d4e89faf3bc8aac7f4d6f77abbf164a9feec\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ea097b8c3bb46d6c9ed6d91836f8c11a84319af849f71aa82624b7bdce4d9e8d\",\"dweb:/ipfs/QmeXGaqW48WCCvFoHTmP7eRX5Jq4uMW9p6kfyvRGFbApfT\"]},\"contracts/prebuilts/account/utils/Helpers.sol\":{\"keccak256\":\"0xb7d1f138c5d0a2d3302c2256d2bd0ab8976baf89edfe0d2de35c5017aeb079c7\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a2a8db74e00c5e83f03f35f067a341df50b2171877f1847cd1b544fac6457561\",\"dweb:/ipfs/QmZyhkL5WD97uMmpiXWqjipiWGN1GLhZgadXR56eLQMZEh\"]},\"contracts/prebuilts/account/utils/UserOperation.sol\":{\"keccak256\":\"0x3f3aa133687f459f9fb538835a54aa769418dd6303a02c9fa691690fcc397964\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://993f8daa2320ca301167767fff33a6989697394fe6dc65905edc4b32368850b5\",\"dweb:/ipfs/Qmaymg8dsE6mrfAWJPs4DXbHR1wxESJnxyFhNkm7AmKBCK\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.12+commit.f00d7308"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "entryPoint",
          "outputs": [
            {
              "internalType": "contract IEntryPoint",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getNonce",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct UserOperation",
              "name": "userOp",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "initCode",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "callData",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "callGasLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "verificationGasLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "preVerificationGas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxFeePerGas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxPriorityFeePerGas",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "paymasterAndData",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "bytes32",
              "name": "userOpHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "missingAccountFunds",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "validateUserOp",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "validationData",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "entryPoint()": {
            "notice": "return the entryPoint used by this account. subclass should return the current entryPoint used by this account."
          },
          "getNonce()": {
            "notice": "Return the account nonce. This method returns the next sequential nonce. For a nonce of a specific key, use `entrypoint.getNonce(account, key)`"
          },
          "validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)": {
            "notice": "Validate user's signature and nonce. subclass doesn't need to override this method. Instead, it should override the specific internal validation methods."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=lib/chainlink/",
        "@ds-test/=lib/ds-test/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@std/=lib/forge-std/src/",
        "@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/",
        "ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/",
        "ERC721A/=lib/ERC721A/contracts/",
        "chainlink/=lib/chainlink/",
        "contracts/=contracts/",
        "ds-test/=lib/ds-test/src/",
        "dynamic-contracts/=lib/dynamic-contracts/src/",
        "erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/",
        "erc721a-upgradeable/=lib/ERC721A-Upgradeable/",
        "erc721a/=lib/ERC721A/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/prebuilts/account/utils/BaseAccount.sol": "BaseAccount"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/prebuilts/account/interface/IAccount.sol": {
        "keccak256": "0x98f2d41bd69f4b46a697957681d2e14cf2f10b6133ede864b838f821899d4e41",
        "urls": [
          "bzz-raw://ddaae235044c84994f693a38030d3923bb8e65f9b7f1fc5028a424a16f7a723c",
          "dweb:/ipfs/QmdXzv1k9mdECGxUDigBf6GAb3bn3qMdTKcmGadJ4EoLzL"
        ],
        "license": "GPL-3.0"
      },
      "contracts/prebuilts/account/interface/IAggregator.sol": {
        "keccak256": "0xf933b69fee393c235a75d99f8d310091b955e8af0240d3855939e16e86a85873",
        "urls": [
          "bzz-raw://772937aa4c500fac35a8edf31c413c59d307d8558c941272a51deba44c0f730e",
          "dweb:/ipfs/QmNvW9G3BCTLFvSBb15ZqJMzETWF5drE7gAfbLxkz6aknJ"
        ],
        "license": "GPL-3.0"
      },
      "contracts/prebuilts/account/interface/IEntrypoint.sol": {
        "keccak256": "0xe94c12629f153c344d698c207f32a0744b49d3849df95101e631fbb96a8f6f8d",
        "urls": [
          "bzz-raw://810ae34240668bf730ffd252bff57ff6f94215c6a461c6d42bc9b8842a0e5114",
          "dweb:/ipfs/QmQ1SnuCxgvEAHS4z2y6Vz4P5scwCxRP1wBqYQvKcabqAK"
        ],
        "license": "GPL-3.0"
      },
      "contracts/prebuilts/account/interface/INonceManager.sol": {
        "keccak256": "0xf509795f7336c849ac5d247d71af20376b67201c647aa847fd17ca8e7909dec3",
        "urls": [
          "bzz-raw://b3418173e37999ba0015bb352ab1b9dfbe1296143a8565ea3d3ce7a9a9e087b4",
          "dweb:/ipfs/QmS93Dw1FfPj5kHk9cLrh1VssbwNyaKKo5LNmEHwxzDqNp"
        ],
        "license": "GPL-3.0"
      },
      "contracts/prebuilts/account/interface/IStakeManager.sol": {
        "keccak256": "0x61562da096c3c3da5755bbb5b552ea713723d7be36975cd401022ff321753b73",
        "urls": [
          "bzz-raw://e6bcd63477257007d2fcd92b38c8105cb82c2d0eae3836ac856839234481f4ab",
          "dweb:/ipfs/QmZuNE3y1RvtRXYiw3eiT25YQH2SAa1kFcpxAgW9KX6KtZ"
        ],
        "license": "GPL-3.0-only"
      },
      "contracts/prebuilts/account/utils/BaseAccount.sol": {
        "keccak256": "0x87502116044c3de1707a3dc73d67d4e89faf3bc8aac7f4d6f77abbf164a9feec",
        "urls": [
          "bzz-raw://ea097b8c3bb46d6c9ed6d91836f8c11a84319af849f71aa82624b7bdce4d9e8d",
          "dweb:/ipfs/QmeXGaqW48WCCvFoHTmP7eRX5Jq4uMW9p6kfyvRGFbApfT"
        ],
        "license": "GPL-3.0"
      },
      "contracts/prebuilts/account/utils/Helpers.sol": {
        "keccak256": "0xb7d1f138c5d0a2d3302c2256d2bd0ab8976baf89edfe0d2de35c5017aeb079c7",
        "urls": [
          "bzz-raw://a2a8db74e00c5e83f03f35f067a341df50b2171877f1847cd1b544fac6457561",
          "dweb:/ipfs/QmZyhkL5WD97uMmpiXWqjipiWGN1GLhZgadXR56eLQMZEh"
        ],
        "license": "GPL-3.0"
      },
      "contracts/prebuilts/account/utils/UserOperation.sol": {
        "keccak256": "0x3f3aa133687f459f9fb538835a54aa769418dd6303a02c9fa691690fcc397964",
        "urls": [
          "bzz-raw://993f8daa2320ca301167767fff33a6989697394fe6dc65905edc4b32368850b5",
          "dweb:/ipfs/Qmaymg8dsE6mrfAWJPs4DXbHR1wxESJnxyFhNkm7AmKBCK"
        ],
        "license": "GPL-3.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/prebuilts/account/utils/BaseAccount.sol",
    "id": 68151,
    "exportedSymbols": {
      "BaseAccount": [
        68150
      ],
      "IAccount": [
        65029
      ],
      "IAggregator": [
        65173
      ],
      "IEntryPoint": [
        65377
      ],
      "INonceManager": [
        65396
      ],
      "IStakeManager": [
        65536
      ],
      "UserOperation": [
        71805
      ],
      "UserOperationLib": [
        71975
      ],
      "ValidationData": [
        70855
      ],
      "_intersectTimeRange": [
        70999
      ],
      "_packValidationData": [
        71036,
        71074
      ],
      "_parseValidationData": [
        70914
      ],
      "calldataKeccak": [
        71084
      ]
    },
    "nodeType": "SourceUnit",
    "src": "36:4660:315",
    "nodes": [
      {
        "id": 68010,
        "nodeType": "PragmaDirective",
        "src": "36:24:315",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".12"
        ]
      },
      {
        "id": 68011,
        "nodeType": "ImportDirective",
        "src": "145:35:315",
        "nodes": [],
        "absolutePath": "contracts/prebuilts/account/interface/IAccount.sol",
        "file": "../interface/IAccount.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 68151,
        "sourceUnit": 65030,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 68012,
        "nodeType": "ImportDirective",
        "src": "181:38:315",
        "nodes": [],
        "absolutePath": "contracts/prebuilts/account/interface/IEntrypoint.sol",
        "file": "../interface/IEntrypoint.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 68151,
        "sourceUnit": 65378,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 68013,
        "nodeType": "ImportDirective",
        "src": "220:23:315",
        "nodes": [],
        "absolutePath": "contracts/prebuilts/account/utils/Helpers.sol",
        "file": "./Helpers.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 68151,
        "sourceUnit": 71085,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 68150,
        "nodeType": "ContractDefinition",
        "src": "478:4217:315",
        "nodes": [
          {
            "id": 68020,
            "nodeType": "UsingForDirective",
            "src": "526:41:315",
            "nodes": [],
            "libraryName": {
              "id": 68017,
              "name": "UserOperationLib",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 71975,
              "src": "532:16:315"
            },
            "typeName": {
              "id": 68019,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 68018,
                "name": "UserOperation",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 71805,
                "src": "553:13:315"
              },
              "referencedDeclaration": 71805,
              "src": "553:13:315",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_UserOperation_$71805_storage_ptr",
                "typeString": "struct UserOperation"
              }
            }
          },
          {
            "id": 68023,
            "nodeType": "VariableDeclaration",
            "src": "694:51:315",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "SIG_VALIDATION_FAILED",
            "nameLocation": "720:21:315",
            "scope": 68150,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 68021,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "694:7:315",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 68022,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "744:1:315",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "internal"
          },
          {
            "id": 68040,
            "nodeType": "FunctionDefinition",
            "src": "933:121:315",
            "nodes": [],
            "body": {
              "id": 68039,
              "nodeType": "Block",
              "src": "991:63:315",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 68034,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1038:4:315",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BaseAccount_$68150",
                              "typeString": "contract BaseAccount"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BaseAccount_$68150",
                              "typeString": "contract BaseAccount"
                            }
                          ],
                          "id": 68033,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1030:7:315",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 68032,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1030:7:315",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 68035,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1030:13:315",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 68036,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1045:1:315",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 68029,
                          "name": "entryPoint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 68047,
                          "src": "1008:10:315",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IEntryPoint_$65377_$",
                            "typeString": "function () view returns (contract IEntryPoint)"
                          }
                        },
                        "id": 68030,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1008:12:315",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IEntryPoint_$65377",
                          "typeString": "contract IEntryPoint"
                        }
                      },
                      "id": 68031,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getNonce",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 65389,
                      "src": "1008:21:315",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_uint192_$returns$_t_uint256_$",
                        "typeString": "function (address,uint192) view external returns (uint256)"
                      }
                    },
                    "id": 68037,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1008:39:315",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 68028,
                  "id": 68038,
                  "nodeType": "Return",
                  "src": "1001:46:315"
                }
              ]
            },
            "documentation": {
              "id": 68024,
              "nodeType": "StructuredDocumentation",
              "src": "752:176:315",
              "text": " Return the account nonce.\n This method returns the next sequential nonce.\n For a nonce of a specific key, use `entrypoint.getNonce(account, key)`"
            },
            "functionSelector": "d087d288",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNonce",
            "nameLocation": "942:8:315",
            "parameters": {
              "id": 68025,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "950:2:315"
            },
            "returnParameters": {
              "id": 68028,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 68027,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 68040,
                  "src": "982:7:315",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 68026,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "982:7:315",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "981:9:315"
            },
            "scope": 68150,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 68047,
            "nodeType": "FunctionDefinition",
            "src": "1202:64:315",
            "nodes": [],
            "documentation": {
              "id": 68041,
              "nodeType": "StructuredDocumentation",
              "src": "1060:137:315",
              "text": " return the entryPoint used by this account.\n subclass should return the current entryPoint used by this account."
            },
            "functionSelector": "b0d691fe",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "entryPoint",
            "nameLocation": "1211:10:315",
            "parameters": {
              "id": 68042,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1221:2:315"
            },
            "returnParameters": {
              "id": 68046,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 68045,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 68047,
                  "src": "1253:11:315",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IEntryPoint_$65377",
                    "typeString": "contract IEntryPoint"
                  },
                  "typeName": {
                    "id": 68044,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 68043,
                      "name": "IEntryPoint",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 65377,
                      "src": "1253:11:315"
                    },
                    "referencedDeclaration": 65377,
                    "src": "1253:11:315",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IEntryPoint_$65377",
                      "typeString": "contract IEntryPoint"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1252:13:315"
            },
            "scope": 68150,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 68081,
            "nodeType": "FunctionDefinition",
            "src": "1456:379:315",
            "nodes": [],
            "body": {
              "id": 68080,
              "nodeType": "Block",
              "src": "1649:186:315",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 68061,
                      "name": "_requireFromEntryPoint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68098,
                      "src": "1659:22:315",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$__$",
                        "typeString": "function () view"
                      }
                    },
                    "id": 68062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1659:24:315",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68063,
                  "nodeType": "ExpressionStatement",
                  "src": "1659:24:315"
                },
                {
                  "expression": {
                    "id": 68069,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 68064,
                      "name": "validationData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68059,
                      "src": "1693:14:315",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 68066,
                          "name": "userOp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 68051,
                          "src": "1729:6:315",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserOperation_$71805_calldata_ptr",
                            "typeString": "struct UserOperation calldata"
                          }
                        },
                        {
                          "id": 68067,
                          "name": "userOpHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 68053,
                          "src": "1737:10:315",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_UserOperation_$71805_calldata_ptr",
                            "typeString": "struct UserOperation calldata"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 68065,
                        "name": "_validateSignature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68109,
                        "src": "1710:18:315",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_UserOperation_$71805_calldata_ptr_$_t_bytes32_$returns$_t_uint256_$",
                          "typeString": "function (struct UserOperation calldata,bytes32) returns (uint256)"
                        }
                      },
                      "id": 68068,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1710:38:315",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1693:55:315",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 68070,
                  "nodeType": "ExpressionStatement",
                  "src": "1693:55:315"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 68072,
                          "name": "userOp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 68051,
                          "src": "1773:6:315",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserOperation_$71805_calldata_ptr",
                            "typeString": "struct UserOperation calldata"
                          }
                        },
                        "id": 68073,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nonce",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 71786,
                        "src": "1773:12:315",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 68071,
                      "name": "_validateNonce",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68116,
                      "src": "1758:14:315",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) view"
                      }
                    },
                    "id": 68074,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1758:28:315",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68075,
                  "nodeType": "ExpressionStatement",
                  "src": "1758:28:315"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 68077,
                        "name": "missingAccountFunds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68055,
                        "src": "1808:19:315",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 68076,
                      "name": "_payPrefund",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68149,
                      "src": "1796:11:315",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 68078,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1796:32:315",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68079,
                  "nodeType": "ExpressionStatement",
                  "src": "1796:32:315"
                }
              ]
            },
            "baseFunctions": [
              65028
            ],
            "documentation": {
              "id": 68048,
              "nodeType": "StructuredDocumentation",
              "src": "1272:179:315",
              "text": " Validate user's signature and nonce.\n subclass doesn't need to override this method. Instead, it should override the specific internal validation methods."
            },
            "functionSelector": "3a871cdd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "validateUserOp",
            "nameLocation": "1465:14:315",
            "overrides": {
              "id": 68057,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1607:8:315"
            },
            "parameters": {
              "id": 68056,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 68051,
                  "mutability": "mutable",
                  "name": "userOp",
                  "nameLocation": "1512:6:315",
                  "nodeType": "VariableDeclaration",
                  "scope": 68081,
                  "src": "1489:29:315",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_UserOperation_$71805_calldata_ptr",
                    "typeString": "struct UserOperation"
                  },
                  "typeName": {
                    "id": 68050,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 68049,
                      "name": "UserOperation",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 71805,
                      "src": "1489:13:315"
                    },
                    "referencedDeclaration": 71805,
                    "src": "1489:13:315",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserOperation_$71805_storage_ptr",
                      "typeString": "struct UserOperation"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 68053,
                  "mutability": "mutable",
                  "name": "userOpHash",
                  "nameLocation": "1536:10:315",
                  "nodeType": "VariableDeclaration",
                  "scope": 68081,
                  "src": "1528:18:315",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 68052,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1528:7:315",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 68055,
                  "mutability": "mutable",
                  "name": "missingAccountFunds",
                  "nameLocation": "1564:19:315",
                  "nodeType": "VariableDeclaration",
                  "scope": 68081,
                  "src": "1556:27:315",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 68054,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1556:7:315",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1479:110:315"
            },
            "returnParameters": {
              "id": 68060,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 68059,
                  "mutability": "mutable",
                  "name": "validationData",
                  "nameLocation": "1633:14:315",
                  "nodeType": "VariableDeclaration",
                  "scope": 68081,
                  "src": "1625:22:315",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 68058,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1625:7:315",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1624:24:315"
            },
            "scope": 68150,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 68098,
            "nodeType": "FunctionDefinition",
            "src": "1916:149:315",
            "nodes": [],
            "body": {
              "id": 68097,
              "nodeType": "Block",
              "src": "1972:93:315",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 68093,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 68086,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1990:3:315",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 68087,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1990:10:315",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 68090,
                                "name": "entryPoint",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 68047,
                                "src": "2012:10:315",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IEntryPoint_$65377_$",
                                  "typeString": "function () view returns (contract IEntryPoint)"
                                }
                              },
                              "id": 68091,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2012:12:315",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IEntryPoint_$65377",
                                "typeString": "contract IEntryPoint"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IEntryPoint_$65377",
                                "typeString": "contract IEntryPoint"
                              }
                            ],
                            "id": 68089,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2004:7:315",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 68088,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2004:7:315",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 68092,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2004:21:315",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1990:35:315",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6163636f756e743a206e6f742066726f6d20456e747279506f696e74",
                        "id": 68094,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2027:30:315",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f684c2c0c9ec797849b62669189fe025e9077c00ba7812987ce38c0071ad7a50",
                          "typeString": "literal_string \"account: not from EntryPoint\""
                        },
                        "value": "account: not from EntryPoint"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f684c2c0c9ec797849b62669189fe025e9077c00ba7812987ce38c0071ad7a50",
                          "typeString": "literal_string \"account: not from EntryPoint\""
                        }
                      ],
                      "id": 68085,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1982:7:315",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 68095,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1982:76:315",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68096,
                  "nodeType": "ExpressionStatement",
                  "src": "1982:76:315"
                }
              ]
            },
            "documentation": {
              "id": 68082,
              "nodeType": "StructuredDocumentation",
              "src": "1841:70:315",
              "text": " ensure the request comes from the known entrypoint."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_requireFromEntryPoint",
            "nameLocation": "1925:22:315",
            "parameters": {
              "id": 68083,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1947:2:315"
            },
            "returnParameters": {
              "id": 68084,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1972:0:315"
            },
            "scope": 68150,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 68109,
            "nodeType": "FunctionDefinition",
            "src": "2980:153:315",
            "nodes": [],
            "documentation": {
              "id": 68099,
              "nodeType": "StructuredDocumentation",
              "src": "2071:904:315",
              "text": " validate the signature is valid for this message.\n @param userOp validate the userOp.signature field\n @param userOpHash convenient field: the hash of the request, to check the signature against\n          (also hashes the entrypoint and chain id)\n @return validationData signature and time-range of this operation\n      <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,\n         otherwise, an address of an \"authorizer\" contract.\n      <6-byte> validUntil - last timestamp this operation is valid. 0 for \"indefinite\"\n      <6-byte> validAfter - first timestamp this operation is valid\n      If the account doesn't use time-range, it is enough to return SIG_VALIDATION_FAILED value (1) for signature failure.\n      Note that the validation code cannot use block.timestamp (or block.number) directly."
            },
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "_validateSignature",
            "nameLocation": "2989:18:315",
            "parameters": {
              "id": 68105,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 68102,
                  "mutability": "mutable",
                  "name": "userOp",
                  "nameLocation": "3031:6:315",
                  "nodeType": "VariableDeclaration",
                  "scope": 68109,
                  "src": "3008:29:315",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_UserOperation_$71805_calldata_ptr",
                    "typeString": "struct UserOperation"
                  },
                  "typeName": {
                    "id": 68101,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 68100,
                      "name": "UserOperation",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 71805,
                      "src": "3008:13:315"
                    },
                    "referencedDeclaration": 71805,
                    "src": "3008:13:315",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserOperation_$71805_storage_ptr",
                      "typeString": "struct UserOperation"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 68104,
                  "mutability": "mutable",
                  "name": "userOpHash",
                  "nameLocation": "3047:10:315",
                  "nodeType": "VariableDeclaration",
                  "scope": 68109,
                  "src": "3039:18:315",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 68103,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3039:7:315",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3007:51:315"
            },
            "returnParameters": {
              "id": 68108,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 68107,
                  "mutability": "mutable",
                  "name": "validationData",
                  "nameLocation": "3117:14:315",
                  "nodeType": "VariableDeclaration",
                  "scope": 68109,
                  "src": "3109:22:315",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 68106,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3109:7:315",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3108:24:315"
            },
            "scope": 68150,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 68116,
            "nodeType": "FunctionDefinition",
            "src": "3784:63:315",
            "nodes": [],
            "body": {
              "id": 68115,
              "nodeType": "Block",
              "src": "3845:2:315",
              "nodes": [],
              "statements": []
            },
            "documentation": {
              "id": 68110,
              "nodeType": "StructuredDocumentation",
              "src": "3139:640:315",
              "text": " Validate the nonce of the UserOperation.\n This method may validate the nonce requirement of this account.\n e.g.\n To limit the nonce to use sequenced UserOps only (no \"out of order\" UserOps):\n      `require(nonce < type(uint64).max)`\n For a hypothetical account that *requires* the nonce to be out-of-order:\n      `require(nonce & type(uint64).max == 0)`\n The actual nonce uniqueness is managed by the EntryPoint, and thus no other\n action is needed by the account itself.\n @param nonce to validate\n solhint-disable-next-line no-empty-blocks"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_validateNonce",
            "nameLocation": "3793:14:315",
            "parameters": {
              "id": 68113,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 68112,
                  "mutability": "mutable",
                  "name": "nonce",
                  "nameLocation": "3816:5:315",
                  "nodeType": "VariableDeclaration",
                  "scope": 68116,
                  "src": "3808:13:315",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 68111,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3808:7:315",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3807:15:315"
            },
            "returnParameters": {
              "id": 68114,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3845:0:315"
            },
            "scope": 68150,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 68149,
            "nodeType": "FunctionDefinition",
            "src": "4355:338:315",
            "nodes": [],
            "body": {
              "id": 68148,
              "nodeType": "Block",
              "src": "4422:271:315",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 68124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 68122,
                      "name": "missingAccountFunds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68119,
                      "src": "4436:19:315",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 68123,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4459:1:315",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4436:24:315",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 68147,
                  "nodeType": "IfStatement",
                  "src": "4432:255:315",
                  "trueBody": {
                    "id": 68146,
                    "nodeType": "Block",
                    "src": "4462:225:315",
                    "statements": [
                      {
                        "assignments": [
                          68126,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 68126,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "4482:7:315",
                            "nodeType": "VariableDeclaration",
                            "scope": 68146,
                            "src": "4477:12:315",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 68125,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "4477:4:315",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 68142,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "",
                              "id": 68140,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4574:2:315",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 68129,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "4503:3:315",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 68130,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "4503:10:315",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 68128,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "4495:8:315",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_payable_$",
                                    "typeString": "type(address payable)"
                                  },
                                  "typeName": {
                                    "id": 68127,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4495:8:315",
                                    "stateMutability": "payable",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 68131,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4495:19:315",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "id": 68132,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "src": "4495:24:315",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 68139,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value",
                              "gas"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 68133,
                                "name": "missingAccountFunds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 68119,
                                "src": "4528:19:315",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 68136,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "4559:7:315",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint256_$",
                                        "typeString": "type(uint256)"
                                      },
                                      "typeName": {
                                        "id": 68135,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4559:7:315",
                                        "typeDescriptions": {}
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_type$_t_uint256_$",
                                        "typeString": "type(uint256)"
                                      }
                                    ],
                                    "id": 68134,
                                    "name": "type",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -27,
                                    "src": "4554:4:315",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                      "typeString": "function () pure"
                                    }
                                  },
                                  "id": 68137,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4554:13:315",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_meta_type_t_uint256",
                                    "typeString": "type(uint256)"
                                  }
                                },
                                "id": 68138,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "max",
                                "nodeType": "MemberAccess",
                                "src": "4554:17:315",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "4495:78:315",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$gasvalue",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 68141,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4495:82:315",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4476:101:315"
                      },
                      {
                        "expression": {
                          "components": [
                            {
                              "id": 68143,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 68126,
                              "src": "4592:7:315",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 68144,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "4591:9:315",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 68145,
                        "nodeType": "ExpressionStatement",
                        "src": "4591:9:315"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 68117,
              "nodeType": "StructuredDocumentation",
              "src": "3853:497:315",
              "text": " sends to the entrypoint (msg.sender) the missing funds for this transaction.\n subclass MAY override this method for better funds management\n (e.g. send to the entryPoint more than the minimum required, so that in future transactions\n it will not be required to send again)\n @param missingAccountFunds the minimum value this method should send the entrypoint.\n  this value MAY be zero, in case there is enough deposit, or the userOp has a paymaster."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_payPrefund",
            "nameLocation": "4364:11:315",
            "parameters": {
              "id": 68120,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 68119,
                  "mutability": "mutable",
                  "name": "missingAccountFunds",
                  "nameLocation": "4384:19:315",
                  "nodeType": "VariableDeclaration",
                  "scope": 68149,
                  "src": "4376:27:315",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 68118,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4376:7:315",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4375:29:315"
            },
            "returnParameters": {
              "id": 68121,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4422:0:315"
            },
            "scope": 68150,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 68015,
              "name": "IAccount",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 65029,
              "src": "511:8:315"
            },
            "id": 68016,
            "nodeType": "InheritanceSpecifier",
            "src": "511:8:315"
          }
        ],
        "canonicalName": "BaseAccount",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 68014,
          "nodeType": "StructuredDocumentation",
          "src": "245:232:315",
          "text": " Basic account implementation.\n this contract provides the basic logic for implementing the IAccount interface  - validateUserOp\n specific account implementation should inherit it and provide the account-specific logic"
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          68150,
          65029
        ],
        "name": "BaseAccount",
        "nameLocation": "496:11:315",
        "scope": 68151,
        "usedErrors": []
      }
    ],
    "license": "GPL-3.0"
  },
  "id": 315
}