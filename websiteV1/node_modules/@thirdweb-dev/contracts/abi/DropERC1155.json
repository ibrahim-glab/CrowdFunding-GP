{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_fromTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_toTokenId",
          "type": "uint256"
        }
      ],
      "name": "BatchMetadataUpdate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "startTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxClaimableSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "supplyClaimed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "merkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "metadata",
              "type": "string"
            }
          ],
          "indexed": false,
          "internalType": "struct IClaimCondition.ClaimCondition[]",
          "name": "claimConditions",
          "type": "tuple[]"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "resetEligibility",
          "type": "bool"
        }
      ],
      "name": "ClaimConditionsUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "prevURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "newURI",
          "type": "string"
        }
      ],
      "name": "ContractURIUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newRoyaltyRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newRoyaltyBps",
          "type": "uint256"
        }
      ],
      "name": "DefaultRoyalty",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "platformFeeRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "flatFee",
          "type": "uint256"
        }
      ],
      "name": "FlatPlatformFeeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "maxTotalSupply",
          "type": "uint256"
        }
      ],
      "name": "MaxTotalSupplyUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "MetadataFrozen",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "prevOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnerUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "platformFeeRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "platformFeeBps",
          "type": "uint256"
        }
      ],
      "name": "PlatformFeeInfoUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "enum IPlatformFee.PlatformFeeType",
          "name": "feeType",
          "type": "uint8"
        }
      ],
      "name": "PlatformFeeTypeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "PrimarySaleRecipientUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "royaltyRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "royaltyBps",
          "type": "uint256"
        }
      ],
      "name": "RoyaltyForToken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "saleRecipient",
          "type": "address"
        }
      ],
      "name": "SaleRecipientForTokenUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "claimConditionIndex",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "claimer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "quantityClaimed",
          "type": "uint256"
        }
      ],
      "name": "TokensClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "startTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "endTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "baseURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "encryptedBaseURI",
          "type": "bytes"
        }
      ],
      "name": "TokensLazyMinted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        }
      ],
      "name": "TransferBatch",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "TransferSingle",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "value",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "URI",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "accounts",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        }
      ],
      "name": "balanceOfBatch",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "batchFrozen",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        }
      ],
      "name": "burnBatch",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_quantity",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_currency",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_pricePerToken",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            }
          ],
          "internalType": "struct IDrop1155.AllowlistProof",
          "name": "_allowlistProof",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "claim",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "claimCondition",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "currentStartId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "count",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractType",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractVersion",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "freezeBatchBaseURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getActiveClaimConditionId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBaseURICount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getBatchIdAtIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_conditionId",
          "type": "uint256"
        }
      ],
      "name": "getClaimConditionById",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "startTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxClaimableSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "supplyClaimed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "merkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "metadata",
              "type": "string"
            }
          ],
          "internalType": "struct IClaimCondition.ClaimCondition",
          "name": "condition",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDefaultRoyaltyInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getFlatPlatformFeeInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPlatformFeeInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPlatformFeeType",
      "outputs": [
        {
          "internalType": "enum IPlatformFee.PlatformFeeType",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRoleMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "member",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "count",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getRoyaltyInfoForToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_conditionId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_claimer",
          "type": "address"
        }
      ],
      "name": "getSupplyClaimedByWallet",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "supplyClaimedByWallet",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRoleWithSwitch",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_defaultAdmin",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_contractURI",
          "type": "string"
        },
        {
          "internalType": "address[]",
          "name": "_trustedForwarders",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "_saleRecipient",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_royaltyRecipient",
          "type": "address"
        },
        {
          "internalType": "uint128",
          "name": "_royaltyBps",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "_platformFeeBps",
          "type": "uint128"
        },
        {
          "internalType": "address",
          "name": "_platformFeeRecipient",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "forwarder",
          "type": "address"
        }
      ],
      "name": "isTrustedForwarder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_baseURIForTokens",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "lazyMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "batchId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "maxTotalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "multicall",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "results",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextTokenIdToMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "primarySaleRecipient",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "salePrice",
          "type": "uint256"
        }
      ],
      "name": "royaltyInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "royaltyAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeBatchTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "saleRecipient",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "startTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxClaimableSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "supplyClaimed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "merkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "metadata",
              "type": "string"
            }
          ],
          "internalType": "struct IClaimCondition.ClaimCondition[]",
          "name": "_conditions",
          "type": "tuple[]"
        },
        {
          "internalType": "bool",
          "name": "_resetClaimEligibility",
          "type": "bool"
        }
      ],
      "name": "setClaimConditions",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "setContractURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_royaltyRecipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_royaltyBps",
          "type": "uint256"
        }
      ],
      "name": "setDefaultRoyaltyInfo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_platformFeeRecipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_flatFee",
          "type": "uint256"
        }
      ],
      "name": "setFlatPlatformFeeInfo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxTotalSupply",
          "type": "uint256"
        }
      ],
      "name": "setMaxTotalSupply",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "setOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_platformFeeRecipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_platformFeeBps",
          "type": "uint256"
        }
      ],
      "name": "setPlatformFeeInfo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IPlatformFee.PlatformFeeType",
          "name": "_feeType",
          "type": "uint8"
        }
      ],
      "name": "setPlatformFeeType",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_saleRecipient",
          "type": "address"
        }
      ],
      "name": "setPrimarySaleRecipient",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_bps",
          "type": "uint256"
        }
      ],
      "name": "setRoyaltyInfoForToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_saleRecipient",
          "type": "address"
        }
      ],
      "name": "setSaleRecipientForToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "updateBatchBaseURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "uri",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_conditionId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_claimer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_quantity",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_currency",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_pricePerToken",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            }
          ],
          "internalType": "struct IDrop1155.AllowlistProof",
          "name": "_allowlistProof",
          "type": "tuple"
        }
      ],
      "name": "verifyClaim",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isOverride",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b50600054610100900460ff1615808015620000335750600054600160ff909116105b8062000063575062000050306200013d60201b620026001760201c565b15801562000063575060005460ff166001145b620000cb5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840160405180910390fd5b6000805460ff191660011790558015620000ef576000805461ff0019166101001790555b801562000136576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b506200014c565b6001600160a01b03163b151590565b615f29806200015c6000396000f3fe6080604052600436106102c15760003560e01c80638da5cb5b116101775780638da5cb5b146107215780639010d07c1461073f57806391d148541461075f578063938e3d7b1461077f57806395d89b411461079f5780639bcf7a15146107b4578063a07ced9e146107d4578063a0a8e460146107f4578063a217fddf14610810578063a22cb46514610825578063a32fa5b314610845578063ac9650d814610865578063b24f2d3914610892578063b6f10c79146108bd578063bd85b039146108dd578063c7337d6b1461090b578063ca15c87314610942578063cb2ef6f714610962578063d37c353b14610983578063d45573f6146109a3578063d45b28d7146109b8578063d547741f146109e5578063de903ddd14610a05578063e159163414610a25578063e57553da14610a45578063e8a3d48514610a69578063e9703d2514610a7e578063e985e9c514610ac7578063ea1def9c14610b10578063f242432a14610b30578063f28083c314610b5057600080fd5b8062fdd58e146102c657806301ffc9a7146102f957806306fdde0314610329578063079fe40e1461034b5780630e89341c1461036d57806313af40351461038d578063183718d1146103af5780631e7ac488146103cf5780632419f51b146103ef578063248a9ca31461040f57806324aaffaa1461043c57806329c49b9b1461046a5780632a55205a1461048a5780632eb2c2d6146104b85780632f2ff15d146104d857806336568abe146104f85780633b1475a7146105185780634cc157df1461052d5780634e1273f41461056f578063572b6c051461059c57806357bc3d78146105bc5780635811ddab146105cf5780635ab063e81461061c578063600dd5ea1461063c57806363b45e2d1461065c5780636b20c454146106715780636f4f2837146106915780637e54523c146106b157806383040532146106d157806387198cf214610701575b600080fd5b3480156102d257600080fd5b506102e66102e136600461496d565b610b77565b6040519081526020015b60405180910390f35b34801561030557600080fd5b506103196103143660046149af565b610c12565b60405190151581526020016102f0565b34801561033557600080fd5b5061033e610c3a565b6040516102f09190614a24565b34801561035757600080fd5b50610360610cc9565b6040516102f09190614a37565b34801561037957600080fd5b5061033e610388366004614a4b565b610cd8565b34801561039957600080fd5b506103ad6103a8366004614a64565b610d19565b005b3480156103bb57600080fd5b506103ad6103ca366004614ada565b610d49565b3480156103db57600080fd5b506103ad6103ea36600461496d565b6110a9565b3480156103fb57600080fd5b506102e661040a366004614a4b565b6110db565b34801561041b57600080fd5b506102e661042a366004614a4b565b6000908152600d602052604090205490565b34801561044857600080fd5b506102e6610457366004614a4b565b6101106020526000908152604090205481565b34801561047657600080fd5b506103ad610485366004614b38565b611149565b34801561049657600080fd5b506104aa6104a5366004614b68565b6111bc565b6040516102f0929190614b8a565b3480156104c457600080fd5b506103ad6104d3366004614cec565b6111f9565b3480156104e457600080fd5b506103ad6104f3366004614b38565b611257565b34801561050457600080fd5b506103ad610513366004614b38565b6112ed565b34801561052457600080fd5b50600b546102e6565b34801561053957600080fd5b5061054d610548366004614a4b565b61134c565b604080516001600160a01b03909316835261ffff9091166020830152016102f0565b34801561057b57600080fd5b5061058f61058a366004614e08565b6113b7565b6040516102f09190614ea6565b3480156105a857600080fd5b506103196105b7366004614a64565b6114e0565b6103ad6105ca366004614ecb565b6114fe565b3480156105db57600080fd5b506102e66105ea366004614f70565b6000928352600f60209081526040808520938552600390930181528284206001600160a01b0390921684525290205490565b34801561062857600080fd5b506102e6610637366004614a4b565b611641565b34801561064857600080fd5b506103ad61065736600461496d565b6116f2565b34801561066857600080fd5b506008546102e6565b34801561067d57600080fd5b506103ad61068c366004614fa9565b611720565b34801561069d57600080fd5b506103ad6106ac366004614a64565b6117bd565b3480156106bd57600080fd5b506103ad6106cc36600461496d565b6117ea565b3480156106dd57600080fd5b506103196106ec366004614a4b565b600a6020526000908152604090205460ff1681565b34801561070d57600080fd5b506103ad61071c366004614b68565b611818565b34801561072d57600080fd5b506007546001600160a01b0316610360565b34801561074b57600080fd5b5061036061075a366004614b68565b611875565b34801561076b57600080fd5b5061031961077a366004614b38565b611964565b34801561078b57600080fd5b506103ad61079a36600461501e565b61198f565b3480156107ab57600080fd5b5061033e6119bc565b3480156107c057600080fd5b506103ad6107cf366004615052565b6119ca565b3480156107e057600080fd5b506103ad6107ef366004614a4b565b6119f9565b34801561080057600080fd5b50604051600481526020016102f0565b34801561081c57600080fd5b506102e6600081565b34801561083157600080fd5b506103ad61084036600461508a565b611a1d565b34801561085157600080fd5b50610319610860366004614b38565b611a2f565b34801561087157600080fd5b506108856108803660046150b8565b611a85565b6040516102f091906150f9565b34801561089e57600080fd5b506004546001600160a01b03811690600160a01b900461ffff1661054d565b3480156108c957600080fd5b506103ad6108d836600461515b565b611b79565b3480156108e957600080fd5b506102e66108f8366004614a4b565b61010f6020526000908152604090205481565b34801561091757600080fd5b50610360610926366004614a4b565b610111602052600090815260409020546001600160a01b031681565b34801561094e57600080fd5b506102e661095d366004614a4b565b611ba6565b34801561096e57600080fd5b506a44726f704552433131353560a81b6102e6565b34801561098f57600080fd5b506102e661099e3660046151bd565b611c2f565b3480156109af57600080fd5b5061054d611d39565b3480156109c457600080fd5b506109d86109d3366004614b68565b611d56565b6040516102f09190615236565b3480156109f157600080fd5b506103ad610a00366004614b38565b611ebd565b348015610a1157600080fd5b506103ad610a203660046152a3565b611ed6565b348015610a3157600080fd5b506103ad610a40366004615305565b611f31565b348015610a5157600080fd5b506104aa6002546003546001600160a01b0390911691565b348015610a7557600080fd5b5061033e612196565b348015610a8a57600080fd5b50610ab2610a99366004614a4b565b600f602052600090815260409020805460019091015482565b604080519283526020830191909152016102f0565b348015610ad357600080fd5b50610319610ae2366004615417565b6001600160a01b03918216600090815260d96020908152604080832093909416825291909152205460ff1690565b348015610b1c57600080fd5b50610319610b2b366004615445565b6121a3565b348015610b3c57600080fd5b506103ad610b4b3660046154be565b6125a9565b348015610b5c57600080fd5b50600254600160b01b900460ff166040516102f0919061553c565b60006001600160a01b038316610be75760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a2061646472657373207a65726f206973206e6f742061207660448201526930b634b21037bbb732b960b11b60648201526084015b60405180910390fd5b50600081815260d8602090815260408083206001600160a01b03861684529091529020545b92915050565b6000610c1d8261260f565b80610c0c5750506001600160e01b03191663152a902d60e11b1490565b61010a8054610c4890615564565b80601f0160208091040260200160405190810160405280929190818152602001828054610c7490615564565b8015610cc15780601f10610c9657610100808354040283529160200191610cc1565b820191906000526020600020905b815481529060010190602001808311610ca457829003601f168201915b505050505081565b6006546001600160a01b031690565b60606000610ce58361265f565b905080610cf1846127fb565b604051602001610d02929190615599565b604051602081830303815290604052915050919050565b610d216128f8565b610d3d5760405162461bcd60e51b8152600401610bde906155c8565b610d468161290b565b50565b610d516128f8565b610d6d5760405162461bcd60e51b8152600401610bde906155c8565b6000848152600f6020526040902080546001820154818415610d9657610d938284615606565b90505b600184018690558084556000805b87811015610f4f57801580610ddc5750888882818110610dc657610dc661561e565b9050602002810190610dd89190615634565b3582105b610e0d5760405162461bcd60e51b815260206004820152600260248201526114d560f21b6044820152606401610bde565b60006002870181610e1e8487615606565b8152602001908152602001600020600201549050898983818110610e4457610e4461561e565b9050602002810190610e569190615634565b60200135811115610e9e5760405162461bcd60e51b81526020600482015260126024820152711b585e081cdd5c1c1b1e4818db185a5b595960721b6044820152606401610bde565b898983818110610eb057610eb061561e565b9050602002810190610ec29190615634565b600288016000610ed28588615606565b81526020019081526020016000208181610eec919061579f565b50819050600288016000610f008588615606565b8152602081019190915260400160002060020155898983818110610f2657610f2661561e565b9050602002810190610f389190615634565b359250819050610f478161581d565b915050610da4565b508515610fd157835b82811015610fcb576000818152600280880160205260408220828155600181018390559081018290556003810182905560048101829055600581018290556006810180546001600160a01b031916905590610fb66007830182614875565b50508080610fc39061581d565b915050610f58565b50611062565b8683111561106257865b8381101561106057600286016000610ff38386615606565b81526020810191909152604001600090812081815560018101829055600281018290556003810182905560048101829055600581018290556006810180546001600160a01b03191690559061104b6007830182614875565b505080806110589061581d565b915050610fdb565b505b887f066f72a648b18490c0bc4ab07d508cdb5d6589fa188c63cfba1e0547f3a6556a898989604051611096939291906158a6565b60405180910390a2505050505050505050565b6110b16128f8565b6110cd5760405162461bcd60e51b8152600401610bde906155c8565b6110d7828261295d565b5050565b60006110e660085490565b82106111245760405162461bcd60e51b815260206004820152600d60248201526c092dcecc2d8d2c840d2dcc8caf609b1b6044820152606401610bde565b600882815481106111375761113761561e565b90600052602060002001549050919050565b600061115581336129eb565b600083815261011160205260409081902080546001600160a01b0319166001600160a01b0385161790555183907f359479172ba65a6639b0df237f704e030498cb7135d5e89b56f598bd1d84b016906111af908590614a37565b60405180910390a2505050565b6000806000806111cb8661134c565b90945084925061ffff1690506127106111e4828761598e565b6111ee91906159c3565b925050509250929050565b611201612a6b565b6001600160a01b0316856001600160a01b03161480611227575061122785610ae2612a6b565b6112435760405162461bcd60e51b8152600401610bde906159d7565b6112508585858585612a75565b5050505050565b6000828152600d602052604090205461127090336129eb565b6000828152600c602090815260408083206001600160a01b038516845290915290205460ff16156112e35760405162461bcd60e51b815260206004820152601d60248201527f43616e206f6e6c79206772616e7420746f206e6f6e20686f6c646572730000006044820152606401610bde565b6110d78282612c2d565b336001600160a01b038216146113425760405162461bcd60e51b815260206004820152601a60248201527921b0b71037b7363c903932b737bab731b2903337b91039b2b63360311b6044820152606401610bde565b6110d78282612c41565b6000818152600560209081526040808320815180830190925280546001600160a01b03168083526001909101549282019290925282911561139357805160208201516113ad565b6004546001600160a01b03811690600160a01b900461ffff165b9250925050915091565b6060815183511461141c5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b6064820152608401610bde565b600083516001600160401b0381111561143757611437614ba3565b604051908082528060200260200182016040528015611460578160200160208202803683370190505b50905060005b84518110156114d8576114ab8582815181106114845761148461561e565b602002602001015185838151811061149e5761149e61561e565b6020026020010151610b77565b8282815181106114bd576114bd61561e565b60209081029190910101526114d18161581d565b9050611466565b509392505050565b6001600160a01b031660009081526042602052604090205460ff1690565b61150d86888787878787612c98565b600061151887611641565b905061153081611526612d29565b89898989896121a3565b506000878152600f6020908152604080832084845260029081019092528220018054889290611560908490615606565b90915550506000878152600f602090815260408083208484526003019091528120879161158b612d29565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008282546115ba9190615606565b909155506115ce9050876000888888612d33565b6115d9888888612e75565b876001600160a01b03166115eb612d29565b6001600160a01b0316827ffa76a4010d9533e3e964f2930a65fb6042a12fa6ff5b08281837a10b0be7321e8a8a60405161162f929190918252602082015260400190565b60405180910390a45050505050505050565b6000818152600f6020526040812060018101548154839161166191615606565b90505b81548111156116bb5760028201600061167e600184615a26565b81526020019081526020016000206000015442106116a9576116a1600182615a26565b949350505050565b806116b381615a3d565b915050611664565b5060405162461bcd60e51b815260206004820152600b60248201526a10a1a7a72224aa24a7a71760a91b6044820152606401610bde565b6116fa6128f8565b6117165760405162461bcd60e51b8152600401610bde906155c8565b6110d78282612e90565b611728612a6b565b6001600160a01b0316836001600160a01b0316148061174e575061174e83610ae2612a6b565b6117ad5760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f726044820152691030b8383937bb32b21760b11b6064820152608401610bde565b6117b8838383612f0d565b505050565b6117c56128f8565b6117e15760405162461bcd60e51b8152600401610bde906155c8565b610d468161312d565b6117f26128f8565b61180e5760405162461bcd60e51b8152600401610bde906155c8565b6110d78282613177565b600061182481336129eb565b6000838152610110602090815260409182902084905581518581529081018490527fc58cd6132bb46df23d468939c03dd023b74b509aaa6b04c39d5a6461c65963bd910160405180910390a1505050565b6000828152600e602052604081205481805b8281101561195b576000868152600e602090815260408083208484526001019091529020546001600160a01b03161561190457848214156118f2576000868152600e602090815260408083209383526001909301905220546001600160a01b03169250610c0c915050565b6118fd600183615606565b9150611949565b61190f866000611964565b801561193657506000868152600e6020908152604080832083805260020190915290205481145b1561194957611946600183615606565b91505b611954600182615606565b9050611887565b50505092915050565b6000918252600c602090815260408084206001600160a01b0393909316845291905290205460ff1690565b6119976128f8565b6119b35760405162461bcd60e51b8152600401610bde906155c8565b610d46816131d5565b61010b8054610c4890615564565b6119d26128f8565b6119ee5760405162461bcd60e51b8152600401610bde906155c8565b6117b88383836132ab565b61010e54611a0781336129eb565b6000611a12836110db565b90506117b881613353565b6110d7611a28612a6b565b8383613470565b6000828152600c6020908152604080832083805290915281205460ff16611a7c57506000828152600c602090815260408083206001600160a01b038516845290915290205460ff16610c0c565b50600192915050565b6060816001600160401b03811115611a9f57611a9f614ba3565b604051908082528060200260200182016040528015611ad257816020015b6060815260200190600190039081611abd5790505b50905060005b82811015611b7257611b4230858584818110611af657611af661561e565b9050602002810190611b089190615654565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061354992505050565b828281518110611b5457611b5461561e565b60200260200101819052508080611b6a9061581d565b915050611ad8565b5092915050565b611b816128f8565b611b9d5760405162461bcd60e51b8152600401610bde906155c8565b610d468161363b565b6000818152600e6020526040812054815b81811015611c0a576000848152600e602090815260408083208484526001019091529020546001600160a01b031615611bf857611bf5600184615606565b92505b611c03600182615606565b9050611bb7565b50611c16836000611964565b15611c2957611c26600183615606565b91505b50919050565b6000611c3961369f565b611c555760405162461bcd60e51b8152600401610bde906155c8565b85611c8a5760405162461bcd60e51b81526020600482015260056024820152640c08185b5d60da1b6044820152606401610bde565b6000600b549050611cd2818888888080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506136b092505050565b600b919091559150807f2a0365091ef1a40953c670dce28177e37520648a6fdc91506bffac0ab045570d6001611d088a84615606565b611d129190615a26565b88888888604051611d27959493929190615a54565b60405180910390a25095945050505050565b6002546001600160a01b03811691600160a01b90910461ffff1690565b611daa60405180610100016040528060008152602001600081526020016000815260200160008152602001600080191681526020016000815260200160006001600160a01b03168152602001606081525090565b6000838152600f6020908152604080832085845260029081018352928190208151610100810183528154815260018201549381019390935292830154908201526003820154606082015260048201546080820152600582015460a082015260068201546001600160a01b031660c082015260078201805491929160e084019190611e3390615564565b80601f0160208091040260200160405190810160405280929190818152602001828054611e5f90615564565b8015611eac5780601f10611e8157610100808354040283529160200191611eac565b820191906000526020600020905b815481529060010190602001808311611e8f57829003601f168201915b505050505081525050905092915050565b6000828152600d602052604090205461134290336129eb565b61010e54611ee481336129eb565b6000611eef856110db565b90506112508185858080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061371d92505050565b600054610100900460ff1615808015611f515750600054600160ff909116105b80611f725750611f6030612600565b158015611f72575060005460ff166001145b611fd55760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610bde565b6000805460ff191660011790558015611ff8576000805461ff0019166101001790555b7f8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a67f6bd6b5318a46e5fff572d5e4258a20774aab40cc35ac7680654b9081fcc82f806120648a6137c9565b61207c60405180602001604052806000815250613801565b6120858b6131d5565b61208e8e61290b565b61209960008f612c2d565b6120a3828f612c2d565b6120ad838f612c2d565b6120b8836000612c2d565b6120c2818f612c2d565b6120cc8182613831565b6120df85876001600160801b031661295d565b6120f288886001600160801b0316612e90565b6120fb8961312d565b8261010c819055508161010d819055508061010e819055508c61010a908051906020019061212a9291906148af565b508b5161213f9061010b9060208f01906148af565b505050508015612189576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050505050505050565b60018054610c4890615564565b6000858152600f602090815260408083208a8452600290810183528184208251610100810184528154815260018201549481019490945290810154918301919091526003810154606083015260048101546080830152600581015460a083015260068101546001600160a01b031660c08301526007810180548493929160e084019161222e90615564565b80601f016020809104026020016040519081016040528092919081815260200182805461225a90615564565b80156122a75780601f1061227c576101008083540402835291602001916122a7565b820191906000526020600020905b81548152906001019060200180831161228a57829003601f168201915b50505091909252505050606081015160a082015160c08301516080840151939450919290919015612387576123836122df8780615a8d565b80806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250505060808088015191508e9060208b01359060408c013590612334908d0160608e01614a64565b6040516001600160601b0319606095861b811660208301526034820194909452605481019290925290921b16607482015260880160405160208183030381529060405280519060200120613879565b5094505b841561240c57602086013561239c57826123a2565b85602001355b9250600019866040013514156123b857816123be565b85604001355b91506000198660400135141580156123ef575060006123e36080880160608901614a64565b6001600160a01b031614155b6123f95780612409565b6124096080870160608801614a64565b90505b6000600f60008c815260200190815260200160002060030160008e815260200190815260200160002060008d6001600160a01b03166001600160a01b03168152602001908152602001600020549050816001600160a01b0316896001600160a01b031614158061247c5750828814155b156124bc5760405162461bcd60e51b815260206004820152601060248201526f2150726963654f7243757272656e637960801b6044820152606401610bde565b8915806124d15750836124cf828c615606565b115b156125075760405162461bcd60e51b8152600401610bde906020808252600490820152632151747960e01b604082015260600190565b84602001518a866040015161251c9190615606565b11156125575760405162461bcd60e51b815260206004820152600a602482015269214d6178537570706c7960b01b6044820152606401610bde565b84514210156125995760405162461bcd60e51b815260206004820152600e60248201526d18d85b9d0818db185a5b481e595d60921b6044820152606401610bde565b5050505050979650505050505050565b6125b1612a6b565b6001600160a01b0316856001600160a01b031614806125d757506125d785610ae2612a6b565b6125f35760405162461bcd60e51b8152600401610bde906159d7565b6112508585858585613947565b6001600160a01b03163b151590565b60006001600160e01b03198216636cdb3d1360e11b148061264057506001600160e01b031982166303a24d0760e21b145b80610c0c57506301ffc9a760e01b6001600160e01b0319831614610c0c565b6060600061266c60085490565b9050600060088054806020026020016040519081016040528092919081815260200182805480156126bc57602002820191906000526020600020905b8154815260200190600101908083116126a8575b5050505050905060005b828110156127c0578181815181106126e0576126e061561e565b60200260200101518510156127ae57600960008383815181106127055761270561561e565b60200260200101518152602001908152602001600020805461272690615564565b80601f016020809104026020016040519081016040528092919081815260200182805461275290615564565b801561279f5780601f106127745761010080835404028352916020019161279f565b820191906000526020600020905b81548152906001019060200180831161278257829003601f168201915b50505050509350505050919050565b6127b9600182615606565b90506126c6565b5060405162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a59081d1bdad95b9259608a1b6044820152606401610bde565b60608161281f5750506040805180820190915260018152600360fc1b602082015290565b8160005b811561284957806128338161581d565b91506128429050600a836159c3565b9150612823565b6000816001600160401b0381111561286357612863614ba3565b6040519080825280601f01601f19166020018201604052801561288d576020820181803683370190505b5090505b84156116a1576128a2600183615a26565b91506128af600a86615ad6565b6128ba906030615606565b60f81b8183815181106128cf576128cf61561e565b60200101906001600160f81b031916908160001a9053506128f1600a866159c3565b9450612891565b60006129068161077a612a6b565b905090565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b61271081111561297f5760405162461bcd60e51b8152600401610bde90615aea565b600280546001600160b01b031916600160a01b61ffff8416026001600160a01b031916176001600160a01b0384169081179091556040518281527fe2497bd806ec41a6e0dd992c29a72efc0ef8fec9092d1978fd4a1e00b2f18304906020015b60405180910390a25050565b6000828152600c602090815260408083206001600160a01b038516845290915290205460ff166110d757612a29816001600160a01b03166014613a8e565b612a34836020613a8e565b604051602001612a45929190615b13565b60408051601f198184030181529082905262461bcd60e51b8252610bde91600401614a24565b6000612906613c30565b8151835114612a965760405162461bcd60e51b8152600401610bde90615b80565b6001600160a01b038416612abc5760405162461bcd60e51b8152600401610bde90615bc8565b6000612ac6612a6b565b9050612ad6818787878787613c55565b60005b8451811015612bbf576000858281518110612af657612af661561e565b602002602001015190506000858381518110612b1457612b1461561e565b602090810291909101810151600084815260d8835260408082206001600160a01b038e168352909352919091205490915081811015612b655760405162461bcd60e51b8152600401610bde90615c0d565b600083815260d8602090815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290612ba4908490615606565b9250508190555050505080612bb89061581d565b9050612ad9565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051612c0f929190615c57565b60405180910390a4612c25818787878787613e17565b505050505050565b612c378282613f7a565b6110d78282613fd5565b612c4b8282614042565b6000828152600e602090815260408083206001600160a01b03851680855260028201808552838620805487526001909301855292852080546001600160a01b031916905584529152555050565b600087815261011060205260409020541580612cda57506000878152610110602090815260408083205461010f90925290912054612cd7908790615606565b11155b612d205760405162461bcd60e51b8152602060048201526017602482015276657863656564206d617820746f74616c20737570706c7960481b6044820152606401610bde565b50505050505050565b6000612906612a6b565b80612d5b573415612d565760405162461bcd60e51b8152600401610bde90615c7c565b611250565b600080612d66611d39565b909250905060006001600160a01b03871615612d825786612dc6565b600088815261011160205260409020546001600160a01b031615612dbe57600088815261011160205260409020546001600160a01b0316612dc6565b612dc6610cc9565b90506000612dd4858861598e565b90506000612710612de961ffff86168461598e565b612df391906159c3565b905060006001600160a01b03881673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1415612e255750348214612e29565b5034155b80612e465760405162461bcd60e51b8152600401610bde90615c7c565b612e5988612e52612a6b565b88856140a4565b61218988612e65612a6b565b86612e708688615a26565b6140a4565b6117b8838383604051806020016040528060008152506140ee565b612710811115612eb25760405162461bcd60e51b8152600401610bde90615aea565b600480546001600160a01b0384166001600160b01b03199091168117600160a01b61ffff851602179091556040518281527f90d7ec04bcb8978719414f82e52e4cb651db41d0e6f8cea6118c2191e6183adb906020016129df565b6001600160a01b038316612f6f5760405162461bcd60e51b815260206004820152602360248201527f455243313135353a206275726e2066726f6d20746865207a65726f206164647260448201526265737360e81b6064820152608401610bde565b8051825114612f905760405162461bcd60e51b8152600401610bde90615b80565b6000612f9a612a6b565b9050612fba81856000868660405180602001604052806000815250613c55565b60005b83518110156130be576000848281518110612fda57612fda61561e565b602002602001015190506000848381518110612ff857612ff861561e565b602090810291909101810151600084815260d8835260408082206001600160a01b038c1683529093529190912054909150818110156130855760405162461bcd60e51b8152602060048201526024808201527f455243313135353a206275726e20616d6f756e7420657863656564732062616c604482015263616e636560e01b6064820152608401610bde565b600092835260d8602090815260408085206001600160a01b038b16865290915290922091039055806130b68161581d565b915050612fbd565b5060006001600160a01b0316846001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb868660405161310f929190615c57565b60405180910390a46040805160208101909152600090525b50505050565b600680546001600160a01b0319166001600160a01b0383169081179091556040517f299d17e95023f496e0ffc4909cff1a61f74bb5eb18de6f900f4155bfa1b3b33390600090a250565b6003819055600280546001600160a01b0319166001600160a01b0384161790556040517ff8086cee80709bd44c82f89dbca54115ebd05e840a88ab81df9cf5be9754eb63906131c99084908490614b8a565b60405180910390a15050565b6000600180546131e490615564565b80601f016020809104026020016040519081016040528092919081815260200182805461321090615564565b801561325d5780601f106132325761010080835404028352916020019161325d565b820191906000526020600020905b81548152906001019060200180831161324057829003601f168201915b50508551939450613279936001935060208701925090506148af565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a1681836040516131c9929190615c98565b6127108111156132cd5760405162461bcd60e51b8152600401610bde90615aea565b6040805180820182526001600160a01b038481168083526020808401868152600089815260058352869020945185546001600160a01b031916941693909317845591516001909301929092559151838152909185917f7365cf4122f072a3365c20d54eff9b38d73c096c28e1892ec8f5b0e403a0f12d91015b60405180910390a3505050565b6000818152600960205260408120805461336c90615564565b80601f016020809104026020016040519081016040528092919081815260200182805461339890615564565b80156133e55780601f106133ba576101008083540402835291602001916133e5565b820191906000526020600020905b8154815290600101906020018083116133c857829003601f168201915b50505050509050600081511161342d5760405162461bcd60e51b815260206004820152600d60248201526c092dcecc2d8d2c840c4c2e8c6d609b1b6044820152606401610bde565b6000828152600a6020526040808220805460ff19166001179055517feef043febddf4e1d1cf1f72ff1407b84e036e805aa0934418cb82095da8d71649190a15050565b816001600160a01b0316836001600160a01b031614156134e45760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b6064820152608401610bde565b6001600160a01b03838116600081815260d96020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c319101613346565b606061355483612600565b6135af5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610bde565b600080846001600160a01b0316846040516135ca9190615cbd565b600060405180830381855af49150503d8060008114613605576040519150601f19603f3d011682016040523d82523d6000602084013e61360a565b606091505b50915091506136328282604051806060016040528060278152602001615ecd60279139614215565b95945050505050565b6002805482919060ff60b01b1916600160b01b83600181111561366057613660615526565b02179055507fd246da9440709ce0dd3f4fd669abc85ada012ab9774b8ecdcc5059ba1486b9c181604051613694919061553c565b60405180910390a150565b600061290661010d5461077a612a6b565b6000806136bd8486615606565b60088054600181019091557ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee301819055600081815260096020908152604090912085519294508493506137149290918601906148af565b50935093915050565b6000828152600a602052604090205460ff161561376b5760405162461bcd60e51b815260206004820152600c60248201526b2130ba31b410333937bd32b760a11b6044820152606401610bde565b6000828152600960209081526040909120825161378a928401906148af565b507f6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c6137b58361424e565b6040805191825260208201859052016131c9565b600054610100900460ff166137f05760405162461bcd60e51b8152600401610bde90615ccf565b6137f8614369565b610d4681614392565b600054610100900460ff166138285760405162461bcd60e51b8152600401610bde90615ccf565b610d4681614421565b6000828152600d6020526040808220805490849055905190918391839186917fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff9190a4505050565b6000808281805b875181101561393b5761389460028361598e565b915060008882815181106138aa576138aa61561e565b602002602001015190508084116138ec576040805160208101869052908101829052606001604051602081830303815290604052805190602001209350613928565b60408051602081018390529081018590526060016040516020818303038152906040528051906020012093506001836139259190615606565b92505b50806139338161581d565b915050613880565b50941495939450505050565b6001600160a01b03841661396d5760405162461bcd60e51b8152600401610bde90615bc8565b6000613977612a6b565b9050600061398485614434565b9050600061399185614434565b90506139a1838989858589613c55565b600086815260d8602090815260408083206001600160a01b038c168452909152902054858110156139e45760405162461bcd60e51b8152600401610bde90615c0d565b600087815260d8602090815260408083206001600160a01b038d8116855292528083208985039055908a16825281208054889290613a23908490615606565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4613a83848a8a8a8a8a61447f565b505050505050505050565b60606000613a9d83600261598e565b613aa8906002615606565b6001600160401b03811115613abf57613abf614ba3565b6040519080825280601f01601f191660200182016040528015613ae9576020820181803683370190505b509050600360fc1b81600081518110613b0457613b0461561e565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110613b3357613b3361561e565b60200101906001600160f81b031916908160001a9053506000613b5784600261598e565b613b62906001615606565b90505b6001811115613bda576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110613b9657613b9661561e565b1a60f81b828281518110613bac57613bac61561e565b60200101906001600160f81b031916908160001a90535060049490941c93613bd381615a3d565b9050613b65565b508315613c295760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610bde565b9392505050565b6000613c3b336114e0565b15613c4d575060131936013560601c90565b503390565b90565b613c6361010c546000611964565b158015613c7857506001600160a01b03851615155b8015613c8c57506001600160a01b03841615155b15613d0957613c9e61010c5486611964565b80613cb15750613cb161010c5485611964565b613d095760405162461bcd60e51b8152602060048201526024808201527f7265737472696374656420746f205452414e534645525f524f4c4520686f6c6460448201526332b9399760e11b6064820152608401610bde565b6001600160a01b038516613d915760005b8351811015613d8f57828181518110613d3557613d3561561e565b602002602001015161010f6000868481518110613d5457613d5461561e565b602002602001015181526020019081526020016000206000828254613d799190615606565b90915550613d8890508161581d565b9050613d1a565b505b6001600160a01b038416612c255760005b8351811015612d2057828181518110613dbd57613dbd61561e565b602002602001015161010f6000868481518110613ddc57613ddc61561e565b602002602001015181526020019081526020016000206000828254613e019190615a26565b90915550613e1090508161581d565b9050613da2565b613e29846001600160a01b0316612600565b15612c255760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190613e629089908990889088908890600401615d1a565b6020604051808303816000875af1925050508015613e9d575060408051601f3d908101601f19168201909252613e9a91810190615d6c565b60015b613f4a57613ea9615d89565b806308c379a01415613ee35750613ebe615da4565b80613ec95750613ee5565b8060405162461bcd60e51b8152600401610bde9190614a24565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b6064820152608401610bde565b6001600160e01b0319811663bc197c8160e01b14612d205760405162461bcd60e51b8152600401610bde90615e2d565b6000828152600c602090815260408083206001600160a01b0385168085529252808320805460ff1916600117905551339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b6000828152600e6020526040812080549160019190613ff48385615606565b90915550506000928352600e6020908152604080852083865260018101835281862080546001600160a01b039096166001600160a01b03199096168617905593855260029093019052912055565b61404c82826129eb565b6000828152600c602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b806140ae57613127565b6001600160a01b03841673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14156140e2576140dd8282614541565b613127565b613127848484846145e3565b6001600160a01b03841661414e5760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b6064820152608401610bde565b6000614158612a6b565b9050600061416585614434565b9050600061417285614434565b905061418383600089858589613c55565b600086815260d8602090815260408083206001600160a01b038b168452909152812080548792906141b5908490615606565b909155505060408051878152602081018790526001600160a01b03808a1692600092918716917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4612d208360008989898961447f565b60608315614224575081613c29565b8251156142345782518084602001fd5b8160405162461bcd60e51b8152600401610bde9190614a24565b60008061425a60085490565b9050600060088054806020026020016040519081016040528092919081815260200182805480156142aa57602002820191906000526020600020905b815481526020019060010190808311614296575b5050505050905060005b8281101561432e578181815181106142ce576142ce61561e565b602002602001015185141561431c57801561431157816142ef600183615a26565b815181106142ff576142ff61561e565b60200260200101519350505050919050565b506000949350505050565b806143268161581d565b9150506142b4565b5060405162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a590818985d18da1259608a1b6044820152606401610bde565b600054610100900460ff166143905760405162461bcd60e51b8152600401610bde90615ccf565b565b600054610100900460ff166143b95760405162461bcd60e51b8152600401610bde90615ccf565b60005b81518110156110d7576001604260008484815181106143dd576143dd61561e565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055806144198161581d565b9150506143bc565b80516110d79060da9060208401906148af565b6040805160018082528183019092526060916000919060208083019080368337019050509050828160008151811061446e5761446e61561e565b602090810291909101015292915050565b614491846001600160a01b0316612600565b15612c255760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e61906144ca9089908990889088908890600401615e75565b6020604051808303816000875af1925050508015614505575060408051601f3d908101601f1916820190925261450291810190615d6c565b60015b61451157613ea9615d89565b6001600160e01b0319811663f23a6e6160e01b14612d205760405162461bcd60e51b8152600401610bde90615e2d565b6000826001600160a01b03168260405160006040518083038185875af1925050503d806000811461458e576040519150601f19603f3d011682016040523d82523d6000602084013e614593565b606091505b50509050806117b85760405162461bcd60e51b815260206004820152601c60248201527b1b985d1a5d99481d1bdad95b881d1c985b9cd9995c8819985a5b195960221b6044820152606401610bde565b816001600160a01b0316836001600160a01b0316141561460257613127565b6001600160a01b038316301415614627576140dd6001600160a01b038516838361463c565b6131276001600160a01b038516848484614692565b6117b88363a9059cbb60e01b848460405160240161465b929190614b8a565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526146ca565b6040516001600160a01b03808516602483015283166044820152606481018290526131279085906323b872dd60e01b9060840161465b565b600061471f826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661479c9092919063ffffffff16565b8051909150156117b8578080602001905181019061473d9190615eaf565b6117b85760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610bde565b60606116a18484600085856147b085612600565b6147fc5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610bde565b600080866001600160a01b031685876040516148189190615cbd565b60006040518083038185875af1925050503d8060008114614855576040519150601f19603f3d011682016040523d82523d6000602084013e61485a565b606091505b509150915061486a828286614215565b979650505050505050565b50805461488190615564565b6000825580601f10614891575050565b601f016020900490600052602060002090810190610d469190614933565b8280546148bb90615564565b90600052602060002090601f0160209004810192826148dd5760008555614923565b82601f106148f657805160ff1916838001178555614923565b82800160010185558215614923579182015b82811115614923578251825591602001919060010190614908565b5061492f929150614933565b5090565b5b8082111561492f5760008155600101614934565b6001600160a01b0381168114610d4657600080fd5b803561496881614948565b919050565b6000806040838503121561498057600080fd5b823561498b81614948565b946020939093013593505050565b6001600160e01b031981168114610d4657600080fd5b6000602082840312156149c157600080fd5b8135613c2981614999565b60005b838110156149e75781810151838201526020016149cf565b838111156131275750506000910152565b60008151808452614a108160208601602086016149cc565b601f01601f19169290920160200192915050565b602081526000613c2960208301846149f8565b6001600160a01b0391909116815260200190565b600060208284031215614a5d57600080fd5b5035919050565b600060208284031215614a7657600080fd5b8135613c2981614948565b60008083601f840112614a9357600080fd5b5081356001600160401b03811115614aaa57600080fd5b6020830191508360208260051b8501011115614ac557600080fd5b9250929050565b8015158114610d4657600080fd5b60008060008060608587031215614af057600080fd5b8435935060208501356001600160401b03811115614b0d57600080fd5b614b1987828801614a81565b9094509250506040850135614b2d81614acc565b939692955090935050565b60008060408385031215614b4b57600080fd5b823591506020830135614b5d81614948565b809150509250929050565b60008060408385031215614b7b57600080fd5b50508035926020909101359150565b6001600160a01b03929092168252602082015260400190565b634e487b7160e01b600052604160045260246000fd5b601f8201601f191681016001600160401b0381118282101715614bde57614bde614ba3565b6040525050565b60006001600160401b03821115614bfe57614bfe614ba3565b5060051b60200190565b600082601f830112614c1957600080fd5b81356020614c2682614be5565b604051614c338282614bb9565b83815260059390931b8501820192828101915086841115614c5357600080fd5b8286015b84811015614c6e5780358352918301918301614c57565b509695505050505050565b600082601f830112614c8a57600080fd5b81356001600160401b03811115614ca357614ca3614ba3565b604051614cba601f8301601f191660200182614bb9565b818152846020838601011115614ccf57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a08688031215614d0457600080fd5b8535614d0f81614948565b94506020860135614d1f81614948565b935060408601356001600160401b0380821115614d3b57600080fd5b614d4789838a01614c08565b94506060880135915080821115614d5d57600080fd5b614d6989838a01614c08565b93506080880135915080821115614d7f57600080fd5b50614d8c88828901614c79565b9150509295509295909350565b600082601f830112614daa57600080fd5b81356020614db782614be5565b604051614dc48282614bb9565b83815260059390931b8501820192828101915086841115614de457600080fd5b8286015b84811015614c6e578035614dfb81614948565b8352918301918301614de8565b60008060408385031215614e1b57600080fd5b82356001600160401b0380821115614e3257600080fd5b614e3e86838701614d99565b93506020850135915080821115614e5457600080fd5b50614e6185828601614c08565b9150509250929050565b600081518084526020808501945080840160005b83811015614e9b57815187529582019590820190600101614e7f565b509495945050505050565b602081526000613c296020830184614e6b565b600060808284031215611c2957600080fd5b600080600080600080600060e0888a031215614ee657600080fd5b8735614ef181614948565b965060208801359550604088013594506060880135614f0f81614948565b93506080880135925060a08801356001600160401b0380821115614f3257600080fd5b614f3e8b838c01614eb9565b935060c08a0135915080821115614f5457600080fd5b50614f618a828b01614c79565b91505092959891949750929550565b600080600060608486031215614f8557600080fd5b83359250602084013591506040840135614f9e81614948565b809150509250925092565b600080600060608486031215614fbe57600080fd5b8335614fc981614948565b925060208401356001600160401b0380821115614fe557600080fd5b614ff187838801614c08565b9350604086013591508082111561500757600080fd5b5061501486828701614c08565b9150509250925092565b60006020828403121561503057600080fd5b81356001600160401b0381111561504657600080fd5b6116a184828501614c79565b60008060006060848603121561506757600080fd5b83359250602084013561507981614948565b929592945050506040919091013590565b6000806040838503121561509d57600080fd5b82356150a881614948565b91506020830135614b5d81614acc565b600080602083850312156150cb57600080fd5b82356001600160401b038111156150e157600080fd5b6150ed85828601614a81565b90969095509350505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561514e57603f1988860301845261513c8583516149f8565b94509285019290850190600101615120565b5092979650505050505050565b60006020828403121561516d57600080fd5b813560028110613c2957600080fd5b60008083601f84011261518e57600080fd5b5081356001600160401b038111156151a557600080fd5b602083019150836020828501011115614ac557600080fd5b6000806000806000606086880312156151d557600080fd5b8535945060208601356001600160401b03808211156151f357600080fd5b6151ff89838a0161517c565b9096509450604088013591508082111561521857600080fd5b506152258882890161517c565b969995985093965092949392505050565b6020815281516020820152602082015160408201526040820151606082015260608201516080820152608082015160a082015260a082015160c082015260018060a01b0360c08301511660e0820152600060e08301516101008081850152506116a16101208401826149f8565b6000806000604084860312156152b857600080fd5b8335925060208401356001600160401b038111156152d557600080fd5b6152e18682870161517c565b9497909650939450505050565b80356001600160801b038116811461496857600080fd5b6000806000806000806000806000806101408b8d03121561532557600080fd5b61532e8b61495d565b995060208b01356001600160401b038082111561534a57600080fd5b6153568e838f01614c79565b9a5060408d013591508082111561536c57600080fd5b6153788e838f01614c79565b995060608d013591508082111561538e57600080fd5b61539a8e838f01614c79565b985060808d01359150808211156153b057600080fd5b506153bd8d828e01614d99565b9650506153cc60a08c0161495d565b94506153da60c08c0161495d565b93506153e860e08c016152ee565b92506153f76101008c016152ee565b91506154066101208c0161495d565b90509295989b9194979a5092959850565b6000806040838503121561542a57600080fd5b823561543581614948565b91506020830135614b5d81614948565b600080600080600080600060e0888a03121561546057600080fd5b87359650602088013561547281614948565b95506040880135945060608801359350608088013561549081614948565b925060a0880135915060c08801356001600160401b038111156154b257600080fd5b614f618a828b01614eb9565b600080600080600060a086880312156154d657600080fd5b85356154e181614948565b945060208601356154f181614948565b9350604086013592506060860135915060808601356001600160401b0381111561551a57600080fd5b614d8c88828901614c79565b634e487b7160e01b600052602160045260246000fd5b602081016002831061555e57634e487b7160e01b600052602160045260246000fd5b91905290565b600181811c9082168061557857607f821691505b60208210811415611c2957634e487b7160e01b600052602260045260246000fd5b600083516155ab8184602088016149cc565b8351908301906155bf8183602088016149cc565b01949350505050565b6020808252600e908201526d139bdd08185d5d1a1bdc9a5e995960921b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b60008219821115615619576156196155f0565b500190565b634e487b7160e01b600052603260045260246000fd5b6000823560fe1983360301811261564a57600080fd5b9190910192915050565b6000808335601e1984360301811261566b57600080fd5b8301803591506001600160401b0382111561568557600080fd5b602001915036819003821315614ac557600080fd5b601f8211156117b857600081815260208120601f850160051c810160208610156156c15750805b601f850160051c820191505b81811015612c25578281556001016156cd565b6001600160401b038311156156f7576156f7614ba3565b61570b836157058354615564565b8361569a565b6000601f84116001811461573f57600085156157275750838201355b600019600387901b1c1916600186901b178355611250565b600083815260209020601f19861690835b828110156157705786850135825560209485019460019092019101615750565b508682101561578d5760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b813581556020820135600182015560408201356002820155606082013560038201556080820135600482015560a082013560058201556006810160c08301356157e781614948565b81546001600160a01b0319166001600160a01b039190911617905561580f60e0830183615654565b6131278183600786016156e0565b6000600019821415615831576158316155f0565b5060010190565b6000808335601e1984360301811261584f57600080fd5b83016020810192503590506001600160401b0381111561586e57600080fd5b803603831315614ac557600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60408082528181018490526000906060808401600587901b850182018885805b8a81101561597857888403605f190185528235368d900360fe190181126158eb578283fd5b8c018035855260208082013581870152888201358987015287820135888701526080808301359087015260a080830135908701526101009060c08084013561593281614948565b6001600160a01b03169088015260e061594d84820185615838565b945083828a0152615961848a01868361587d565b9983019998505050949094019350506001016158c6565b505050861515602087015293506116a192505050565b60008160001904831182151516156159a8576159a86155f0565b500290565b634e487b7160e01b600052601260045260246000fd5b6000826159d2576159d26159ad565b500490565b6020808252602f908201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60408201526e195c881b9bdc88185c1c1c9bdd9959608a1b606082015260800190565b600082821015615a3857615a386155f0565b500390565b600081615a4c57615a4c6155f0565b506000190190565b858152606060208201526000615a6e60608301868861587d565b8281036040840152615a8181858761587d565b98975050505050505050565b6000808335601e19843603018112615aa457600080fd5b8301803591506001600160401b03821115615abe57600080fd5b6020019150600581901b3603821315614ac557600080fd5b600082615ae557615ae56159ad565b500690565b6020808252600f908201526e45786365656473206d61782062707360881b604082015260600190565b7402832b936b4b9b9b4b7b7399d1030b1b1b7bab73a1605d1b815260008351615b438160158501602088016149cc565b7001034b99036b4b9b9b4b733903937b6329607d1b6015918401918201528351615b748160268401602088016149cc565b01602601949350505050565b60208082526028908201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206040820152670dad2e6dac2e8c6d60c31b606082015260800190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b604081526000615c6a6040830185614e6b565b82810360208401526136328185614e6b565b60208082526002908201526110ab60f11b604082015260600190565b604081526000615cab60408301856149f8565b828103602084015261363281856149f8565b6000825161564a8184602087016149cc565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6001600160a01b0386811682528516602082015260a060408201819052600090615d4690830186614e6b565b8281036060840152615d588186614e6b565b90508281036080840152615a8181856149f8565b600060208284031215615d7e57600080fd5b8151613c2981614999565b600060033d1115613c525760046000803e5060005160e01c90565b600060443d1015615db25790565b6040516003193d81016004833e81513d6001600160401b038160248401118184111715615de157505050505090565b8285019150815181811115615df95750505050505090565b843d8701016020828501011115615e135750505050505090565b615e2260208286010187614bb9565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b03868116825285166020820152604081018490526060810183905260a06080820181905260009061486a908301846149f8565b600060208284031215615ec157600080fd5b8151613c2981614acc56fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220d4ef4b6569c230db1e5c94208ab6741f66e5149eb4d93d54732fb859896a959464736f6c634300080c0033",
    "sourceMap": "1644:12928:325:-:0;;;4055:28;;;;;;;;;-1:-1:-1;3111:19:436;3134:13;;;;;;3133:14;;3179:34;;;;-1:-1:-1;3197:12:436;;3212:1;3197:12;;;;:16;3179:34;3178:108;;;;3220:44;3258:4;3220:29;;;;;:44;;:::i;:::-;3219:45;:66;;;;-1:-1:-1;3268:12:436;;;;;:17;3219:66;3157:201;;;;-1:-1:-1;;;3157:201:436;;216:2:644;3157:201:436;;;198:21:644;255:2;235:18;;;228:30;294:34;274:18;;;267:62;-1:-1:-1;;;345:18:644;;;338:44;399:19;;3157:201:436;;;;;;;;3368:12;:16;;-1:-1:-1;;3368:16:436;3383:1;3368:16;;;3394:65;;;;3428:13;:20;;-1:-1:-1;;3428:20:436;;;;;3394:65;3483:14;3479:99;;;3529:5;3513:21;;-1:-1:-1;;3513:21:436;;;3553:14;;-1:-1:-1;581:36:644;;3553:14:436;;569:2:644;554:18;3553:14:436;;;;;;;3479:99;3101:483;1644:12928:325;;1186:320:462;-1:-1:-1;;;;;1476:19:462;;:23;;;1186:320::o;429:194:644:-;1644:12928:325;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106102c15760003560e01c80638da5cb5b116101775780638da5cb5b146107215780639010d07c1461073f57806391d148541461075f578063938e3d7b1461077f57806395d89b411461079f5780639bcf7a15146107b4578063a07ced9e146107d4578063a0a8e460146107f4578063a217fddf14610810578063a22cb46514610825578063a32fa5b314610845578063ac9650d814610865578063b24f2d3914610892578063b6f10c79146108bd578063bd85b039146108dd578063c7337d6b1461090b578063ca15c87314610942578063cb2ef6f714610962578063d37c353b14610983578063d45573f6146109a3578063d45b28d7146109b8578063d547741f146109e5578063de903ddd14610a05578063e159163414610a25578063e57553da14610a45578063e8a3d48514610a69578063e9703d2514610a7e578063e985e9c514610ac7578063ea1def9c14610b10578063f242432a14610b30578063f28083c314610b5057600080fd5b8062fdd58e146102c657806301ffc9a7146102f957806306fdde0314610329578063079fe40e1461034b5780630e89341c1461036d57806313af40351461038d578063183718d1146103af5780631e7ac488146103cf5780632419f51b146103ef578063248a9ca31461040f57806324aaffaa1461043c57806329c49b9b1461046a5780632a55205a1461048a5780632eb2c2d6146104b85780632f2ff15d146104d857806336568abe146104f85780633b1475a7146105185780634cc157df1461052d5780634e1273f41461056f578063572b6c051461059c57806357bc3d78146105bc5780635811ddab146105cf5780635ab063e81461061c578063600dd5ea1461063c57806363b45e2d1461065c5780636b20c454146106715780636f4f2837146106915780637e54523c146106b157806383040532146106d157806387198cf214610701575b600080fd5b3480156102d257600080fd5b506102e66102e136600461496d565b610b77565b6040519081526020015b60405180910390f35b34801561030557600080fd5b506103196103143660046149af565b610c12565b60405190151581526020016102f0565b34801561033557600080fd5b5061033e610c3a565b6040516102f09190614a24565b34801561035757600080fd5b50610360610cc9565b6040516102f09190614a37565b34801561037957600080fd5b5061033e610388366004614a4b565b610cd8565b34801561039957600080fd5b506103ad6103a8366004614a64565b610d19565b005b3480156103bb57600080fd5b506103ad6103ca366004614ada565b610d49565b3480156103db57600080fd5b506103ad6103ea36600461496d565b6110a9565b3480156103fb57600080fd5b506102e661040a366004614a4b565b6110db565b34801561041b57600080fd5b506102e661042a366004614a4b565b6000908152600d602052604090205490565b34801561044857600080fd5b506102e6610457366004614a4b565b6101106020526000908152604090205481565b34801561047657600080fd5b506103ad610485366004614b38565b611149565b34801561049657600080fd5b506104aa6104a5366004614b68565b6111bc565b6040516102f0929190614b8a565b3480156104c457600080fd5b506103ad6104d3366004614cec565b6111f9565b3480156104e457600080fd5b506103ad6104f3366004614b38565b611257565b34801561050457600080fd5b506103ad610513366004614b38565b6112ed565b34801561052457600080fd5b50600b546102e6565b34801561053957600080fd5b5061054d610548366004614a4b565b61134c565b604080516001600160a01b03909316835261ffff9091166020830152016102f0565b34801561057b57600080fd5b5061058f61058a366004614e08565b6113b7565b6040516102f09190614ea6565b3480156105a857600080fd5b506103196105b7366004614a64565b6114e0565b6103ad6105ca366004614ecb565b6114fe565b3480156105db57600080fd5b506102e66105ea366004614f70565b6000928352600f60209081526040808520938552600390930181528284206001600160a01b0390921684525290205490565b34801561062857600080fd5b506102e6610637366004614a4b565b611641565b34801561064857600080fd5b506103ad61065736600461496d565b6116f2565b34801561066857600080fd5b506008546102e6565b34801561067d57600080fd5b506103ad61068c366004614fa9565b611720565b34801561069d57600080fd5b506103ad6106ac366004614a64565b6117bd565b3480156106bd57600080fd5b506103ad6106cc36600461496d565b6117ea565b3480156106dd57600080fd5b506103196106ec366004614a4b565b600a6020526000908152604090205460ff1681565b34801561070d57600080fd5b506103ad61071c366004614b68565b611818565b34801561072d57600080fd5b506007546001600160a01b0316610360565b34801561074b57600080fd5b5061036061075a366004614b68565b611875565b34801561076b57600080fd5b5061031961077a366004614b38565b611964565b34801561078b57600080fd5b506103ad61079a36600461501e565b61198f565b3480156107ab57600080fd5b5061033e6119bc565b3480156107c057600080fd5b506103ad6107cf366004615052565b6119ca565b3480156107e057600080fd5b506103ad6107ef366004614a4b565b6119f9565b34801561080057600080fd5b50604051600481526020016102f0565b34801561081c57600080fd5b506102e6600081565b34801561083157600080fd5b506103ad61084036600461508a565b611a1d565b34801561085157600080fd5b50610319610860366004614b38565b611a2f565b34801561087157600080fd5b506108856108803660046150b8565b611a85565b6040516102f091906150f9565b34801561089e57600080fd5b506004546001600160a01b03811690600160a01b900461ffff1661054d565b3480156108c957600080fd5b506103ad6108d836600461515b565b611b79565b3480156108e957600080fd5b506102e66108f8366004614a4b565b61010f6020526000908152604090205481565b34801561091757600080fd5b50610360610926366004614a4b565b610111602052600090815260409020546001600160a01b031681565b34801561094e57600080fd5b506102e661095d366004614a4b565b611ba6565b34801561096e57600080fd5b506a44726f704552433131353560a81b6102e6565b34801561098f57600080fd5b506102e661099e3660046151bd565b611c2f565b3480156109af57600080fd5b5061054d611d39565b3480156109c457600080fd5b506109d86109d3366004614b68565b611d56565b6040516102f09190615236565b3480156109f157600080fd5b506103ad610a00366004614b38565b611ebd565b348015610a1157600080fd5b506103ad610a203660046152a3565b611ed6565b348015610a3157600080fd5b506103ad610a40366004615305565b611f31565b348015610a5157600080fd5b506104aa6002546003546001600160a01b0390911691565b348015610a7557600080fd5b5061033e612196565b348015610a8a57600080fd5b50610ab2610a99366004614a4b565b600f602052600090815260409020805460019091015482565b604080519283526020830191909152016102f0565b348015610ad357600080fd5b50610319610ae2366004615417565b6001600160a01b03918216600090815260d96020908152604080832093909416825291909152205460ff1690565b348015610b1c57600080fd5b50610319610b2b366004615445565b6121a3565b348015610b3c57600080fd5b506103ad610b4b3660046154be565b6125a9565b348015610b5c57600080fd5b50600254600160b01b900460ff166040516102f0919061553c565b60006001600160a01b038316610be75760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a2061646472657373207a65726f206973206e6f742061207660448201526930b634b21037bbb732b960b11b60648201526084015b60405180910390fd5b50600081815260d8602090815260408083206001600160a01b03861684529091529020545b92915050565b6000610c1d8261260f565b80610c0c5750506001600160e01b03191663152a902d60e11b1490565b61010a8054610c4890615564565b80601f0160208091040260200160405190810160405280929190818152602001828054610c7490615564565b8015610cc15780601f10610c9657610100808354040283529160200191610cc1565b820191906000526020600020905b815481529060010190602001808311610ca457829003601f168201915b505050505081565b6006546001600160a01b031690565b60606000610ce58361265f565b905080610cf1846127fb565b604051602001610d02929190615599565b604051602081830303815290604052915050919050565b610d216128f8565b610d3d5760405162461bcd60e51b8152600401610bde906155c8565b610d468161290b565b50565b610d516128f8565b610d6d5760405162461bcd60e51b8152600401610bde906155c8565b6000848152600f6020526040902080546001820154818415610d9657610d938284615606565b90505b600184018690558084556000805b87811015610f4f57801580610ddc5750888882818110610dc657610dc661561e565b9050602002810190610dd89190615634565b3582105b610e0d5760405162461bcd60e51b815260206004820152600260248201526114d560f21b6044820152606401610bde565b60006002870181610e1e8487615606565b8152602001908152602001600020600201549050898983818110610e4457610e4461561e565b9050602002810190610e569190615634565b60200135811115610e9e5760405162461bcd60e51b81526020600482015260126024820152711b585e081cdd5c1c1b1e4818db185a5b595960721b6044820152606401610bde565b898983818110610eb057610eb061561e565b9050602002810190610ec29190615634565b600288016000610ed28588615606565b81526020019081526020016000208181610eec919061579f565b50819050600288016000610f008588615606565b8152602081019190915260400160002060020155898983818110610f2657610f2661561e565b9050602002810190610f389190615634565b359250819050610f478161581d565b915050610da4565b508515610fd157835b82811015610fcb576000818152600280880160205260408220828155600181018390559081018290556003810182905560048101829055600581018290556006810180546001600160a01b031916905590610fb66007830182614875565b50508080610fc39061581d565b915050610f58565b50611062565b8683111561106257865b8381101561106057600286016000610ff38386615606565b81526020810191909152604001600090812081815560018101829055600281018290556003810182905560048101829055600581018290556006810180546001600160a01b03191690559061104b6007830182614875565b505080806110589061581d565b915050610fdb565b505b887f066f72a648b18490c0bc4ab07d508cdb5d6589fa188c63cfba1e0547f3a6556a898989604051611096939291906158a6565b60405180910390a2505050505050505050565b6110b16128f8565b6110cd5760405162461bcd60e51b8152600401610bde906155c8565b6110d7828261295d565b5050565b60006110e660085490565b82106111245760405162461bcd60e51b815260206004820152600d60248201526c092dcecc2d8d2c840d2dcc8caf609b1b6044820152606401610bde565b600882815481106111375761113761561e565b90600052602060002001549050919050565b600061115581336129eb565b600083815261011160205260409081902080546001600160a01b0319166001600160a01b0385161790555183907f359479172ba65a6639b0df237f704e030498cb7135d5e89b56f598bd1d84b016906111af908590614a37565b60405180910390a2505050565b6000806000806111cb8661134c565b90945084925061ffff1690506127106111e4828761598e565b6111ee91906159c3565b925050509250929050565b611201612a6b565b6001600160a01b0316856001600160a01b03161480611227575061122785610ae2612a6b565b6112435760405162461bcd60e51b8152600401610bde906159d7565b6112508585858585612a75565b5050505050565b6000828152600d602052604090205461127090336129eb565b6000828152600c602090815260408083206001600160a01b038516845290915290205460ff16156112e35760405162461bcd60e51b815260206004820152601d60248201527f43616e206f6e6c79206772616e7420746f206e6f6e20686f6c646572730000006044820152606401610bde565b6110d78282612c2d565b336001600160a01b038216146113425760405162461bcd60e51b815260206004820152601a60248201527921b0b71037b7363c903932b737bab731b2903337b91039b2b63360311b6044820152606401610bde565b6110d78282612c41565b6000818152600560209081526040808320815180830190925280546001600160a01b03168083526001909101549282019290925282911561139357805160208201516113ad565b6004546001600160a01b03811690600160a01b900461ffff165b9250925050915091565b6060815183511461141c5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b6064820152608401610bde565b600083516001600160401b0381111561143757611437614ba3565b604051908082528060200260200182016040528015611460578160200160208202803683370190505b50905060005b84518110156114d8576114ab8582815181106114845761148461561e565b602002602001015185838151811061149e5761149e61561e565b6020026020010151610b77565b8282815181106114bd576114bd61561e565b60209081029190910101526114d18161581d565b9050611466565b509392505050565b6001600160a01b031660009081526042602052604090205460ff1690565b61150d86888787878787612c98565b600061151887611641565b905061153081611526612d29565b89898989896121a3565b506000878152600f6020908152604080832084845260029081019092528220018054889290611560908490615606565b90915550506000878152600f602090815260408083208484526003019091528120879161158b612d29565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008282546115ba9190615606565b909155506115ce9050876000888888612d33565b6115d9888888612e75565b876001600160a01b03166115eb612d29565b6001600160a01b0316827ffa76a4010d9533e3e964f2930a65fb6042a12fa6ff5b08281837a10b0be7321e8a8a60405161162f929190918252602082015260400190565b60405180910390a45050505050505050565b6000818152600f6020526040812060018101548154839161166191615606565b90505b81548111156116bb5760028201600061167e600184615a26565b81526020019081526020016000206000015442106116a9576116a1600182615a26565b949350505050565b806116b381615a3d565b915050611664565b5060405162461bcd60e51b815260206004820152600b60248201526a10a1a7a72224aa24a7a71760a91b6044820152606401610bde565b6116fa6128f8565b6117165760405162461bcd60e51b8152600401610bde906155c8565b6110d78282612e90565b611728612a6b565b6001600160a01b0316836001600160a01b0316148061174e575061174e83610ae2612a6b565b6117ad5760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f726044820152691030b8383937bb32b21760b11b6064820152608401610bde565b6117b8838383612f0d565b505050565b6117c56128f8565b6117e15760405162461bcd60e51b8152600401610bde906155c8565b610d468161312d565b6117f26128f8565b61180e5760405162461bcd60e51b8152600401610bde906155c8565b6110d78282613177565b600061182481336129eb565b6000838152610110602090815260409182902084905581518581529081018490527fc58cd6132bb46df23d468939c03dd023b74b509aaa6b04c39d5a6461c65963bd910160405180910390a1505050565b6000828152600e602052604081205481805b8281101561195b576000868152600e602090815260408083208484526001019091529020546001600160a01b03161561190457848214156118f2576000868152600e602090815260408083209383526001909301905220546001600160a01b03169250610c0c915050565b6118fd600183615606565b9150611949565b61190f866000611964565b801561193657506000868152600e6020908152604080832083805260020190915290205481145b1561194957611946600183615606565b91505b611954600182615606565b9050611887565b50505092915050565b6000918252600c602090815260408084206001600160a01b0393909316845291905290205460ff1690565b6119976128f8565b6119b35760405162461bcd60e51b8152600401610bde906155c8565b610d46816131d5565b61010b8054610c4890615564565b6119d26128f8565b6119ee5760405162461bcd60e51b8152600401610bde906155c8565b6117b88383836132ab565b61010e54611a0781336129eb565b6000611a12836110db565b90506117b881613353565b6110d7611a28612a6b565b8383613470565b6000828152600c6020908152604080832083805290915281205460ff16611a7c57506000828152600c602090815260408083206001600160a01b038516845290915290205460ff16610c0c565b50600192915050565b6060816001600160401b03811115611a9f57611a9f614ba3565b604051908082528060200260200182016040528015611ad257816020015b6060815260200190600190039081611abd5790505b50905060005b82811015611b7257611b4230858584818110611af657611af661561e565b9050602002810190611b089190615654565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061354992505050565b828281518110611b5457611b5461561e565b60200260200101819052508080611b6a9061581d565b915050611ad8565b5092915050565b611b816128f8565b611b9d5760405162461bcd60e51b8152600401610bde906155c8565b610d468161363b565b6000818152600e6020526040812054815b81811015611c0a576000848152600e602090815260408083208484526001019091529020546001600160a01b031615611bf857611bf5600184615606565b92505b611c03600182615606565b9050611bb7565b50611c16836000611964565b15611c2957611c26600183615606565b91505b50919050565b6000611c3961369f565b611c555760405162461bcd60e51b8152600401610bde906155c8565b85611c8a5760405162461bcd60e51b81526020600482015260056024820152640c08185b5d60da1b6044820152606401610bde565b6000600b549050611cd2818888888080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506136b092505050565b600b919091559150807f2a0365091ef1a40953c670dce28177e37520648a6fdc91506bffac0ab045570d6001611d088a84615606565b611d129190615a26565b88888888604051611d27959493929190615a54565b60405180910390a25095945050505050565b6002546001600160a01b03811691600160a01b90910461ffff1690565b611daa60405180610100016040528060008152602001600081526020016000815260200160008152602001600080191681526020016000815260200160006001600160a01b03168152602001606081525090565b6000838152600f6020908152604080832085845260029081018352928190208151610100810183528154815260018201549381019390935292830154908201526003820154606082015260048201546080820152600582015460a082015260068201546001600160a01b031660c082015260078201805491929160e084019190611e3390615564565b80601f0160208091040260200160405190810160405280929190818152602001828054611e5f90615564565b8015611eac5780601f10611e8157610100808354040283529160200191611eac565b820191906000526020600020905b815481529060010190602001808311611e8f57829003601f168201915b505050505081525050905092915050565b6000828152600d602052604090205461134290336129eb565b61010e54611ee481336129eb565b6000611eef856110db565b90506112508185858080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061371d92505050565b600054610100900460ff1615808015611f515750600054600160ff909116105b80611f725750611f6030612600565b158015611f72575060005460ff166001145b611fd55760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610bde565b6000805460ff191660011790558015611ff8576000805461ff0019166101001790555b7f8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a67f6bd6b5318a46e5fff572d5e4258a20774aab40cc35ac7680654b9081fcc82f806120648a6137c9565b61207c60405180602001604052806000815250613801565b6120858b6131d5565b61208e8e61290b565b61209960008f612c2d565b6120a3828f612c2d565b6120ad838f612c2d565b6120b8836000612c2d565b6120c2818f612c2d565b6120cc8182613831565b6120df85876001600160801b031661295d565b6120f288886001600160801b0316612e90565b6120fb8961312d565b8261010c819055508161010d819055508061010e819055508c61010a908051906020019061212a9291906148af565b508b5161213f9061010b9060208f01906148af565b505050508015612189576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050505050505050565b60018054610c4890615564565b6000858152600f602090815260408083208a8452600290810183528184208251610100810184528154815260018201549481019490945290810154918301919091526003810154606083015260048101546080830152600581015460a083015260068101546001600160a01b031660c08301526007810180548493929160e084019161222e90615564565b80601f016020809104026020016040519081016040528092919081815260200182805461225a90615564565b80156122a75780601f1061227c576101008083540402835291602001916122a7565b820191906000526020600020905b81548152906001019060200180831161228a57829003601f168201915b50505091909252505050606081015160a082015160c08301516080840151939450919290919015612387576123836122df8780615a8d565b80806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250505060808088015191508e9060208b01359060408c013590612334908d0160608e01614a64565b6040516001600160601b0319606095861b811660208301526034820194909452605481019290925290921b16607482015260880160405160208183030381529060405280519060200120613879565b5094505b841561240c57602086013561239c57826123a2565b85602001355b9250600019866040013514156123b857816123be565b85604001355b91506000198660400135141580156123ef575060006123e36080880160608901614a64565b6001600160a01b031614155b6123f95780612409565b6124096080870160608801614a64565b90505b6000600f60008c815260200190815260200160002060030160008e815260200190815260200160002060008d6001600160a01b03166001600160a01b03168152602001908152602001600020549050816001600160a01b0316896001600160a01b031614158061247c5750828814155b156124bc5760405162461bcd60e51b815260206004820152601060248201526f2150726963654f7243757272656e637960801b6044820152606401610bde565b8915806124d15750836124cf828c615606565b115b156125075760405162461bcd60e51b8152600401610bde906020808252600490820152632151747960e01b604082015260600190565b84602001518a866040015161251c9190615606565b11156125575760405162461bcd60e51b815260206004820152600a602482015269214d6178537570706c7960b01b6044820152606401610bde565b84514210156125995760405162461bcd60e51b815260206004820152600e60248201526d18d85b9d0818db185a5b481e595d60921b6044820152606401610bde565b5050505050979650505050505050565b6125b1612a6b565b6001600160a01b0316856001600160a01b031614806125d757506125d785610ae2612a6b565b6125f35760405162461bcd60e51b8152600401610bde906159d7565b6112508585858585613947565b6001600160a01b03163b151590565b60006001600160e01b03198216636cdb3d1360e11b148061264057506001600160e01b031982166303a24d0760e21b145b80610c0c57506301ffc9a760e01b6001600160e01b0319831614610c0c565b6060600061266c60085490565b9050600060088054806020026020016040519081016040528092919081815260200182805480156126bc57602002820191906000526020600020905b8154815260200190600101908083116126a8575b5050505050905060005b828110156127c0578181815181106126e0576126e061561e565b60200260200101518510156127ae57600960008383815181106127055761270561561e565b60200260200101518152602001908152602001600020805461272690615564565b80601f016020809104026020016040519081016040528092919081815260200182805461275290615564565b801561279f5780601f106127745761010080835404028352916020019161279f565b820191906000526020600020905b81548152906001019060200180831161278257829003601f168201915b50505050509350505050919050565b6127b9600182615606565b90506126c6565b5060405162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a59081d1bdad95b9259608a1b6044820152606401610bde565b60608161281f5750506040805180820190915260018152600360fc1b602082015290565b8160005b811561284957806128338161581d565b91506128429050600a836159c3565b9150612823565b6000816001600160401b0381111561286357612863614ba3565b6040519080825280601f01601f19166020018201604052801561288d576020820181803683370190505b5090505b84156116a1576128a2600183615a26565b91506128af600a86615ad6565b6128ba906030615606565b60f81b8183815181106128cf576128cf61561e565b60200101906001600160f81b031916908160001a9053506128f1600a866159c3565b9450612891565b60006129068161077a612a6b565b905090565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b61271081111561297f5760405162461bcd60e51b8152600401610bde90615aea565b600280546001600160b01b031916600160a01b61ffff8416026001600160a01b031916176001600160a01b0384169081179091556040518281527fe2497bd806ec41a6e0dd992c29a72efc0ef8fec9092d1978fd4a1e00b2f18304906020015b60405180910390a25050565b6000828152600c602090815260408083206001600160a01b038516845290915290205460ff166110d757612a29816001600160a01b03166014613a8e565b612a34836020613a8e565b604051602001612a45929190615b13565b60408051601f198184030181529082905262461bcd60e51b8252610bde91600401614a24565b6000612906613c30565b8151835114612a965760405162461bcd60e51b8152600401610bde90615b80565b6001600160a01b038416612abc5760405162461bcd60e51b8152600401610bde90615bc8565b6000612ac6612a6b565b9050612ad6818787878787613c55565b60005b8451811015612bbf576000858281518110612af657612af661561e565b602002602001015190506000858381518110612b1457612b1461561e565b602090810291909101810151600084815260d8835260408082206001600160a01b038e168352909352919091205490915081811015612b655760405162461bcd60e51b8152600401610bde90615c0d565b600083815260d8602090815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290612ba4908490615606565b9250508190555050505080612bb89061581d565b9050612ad9565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051612c0f929190615c57565b60405180910390a4612c25818787878787613e17565b505050505050565b612c378282613f7a565b6110d78282613fd5565b612c4b8282614042565b6000828152600e602090815260408083206001600160a01b03851680855260028201808552838620805487526001909301855292852080546001600160a01b031916905584529152555050565b600087815261011060205260409020541580612cda57506000878152610110602090815260408083205461010f90925290912054612cd7908790615606565b11155b612d205760405162461bcd60e51b8152602060048201526017602482015276657863656564206d617820746f74616c20737570706c7960481b6044820152606401610bde565b50505050505050565b6000612906612a6b565b80612d5b573415612d565760405162461bcd60e51b8152600401610bde90615c7c565b611250565b600080612d66611d39565b909250905060006001600160a01b03871615612d825786612dc6565b600088815261011160205260409020546001600160a01b031615612dbe57600088815261011160205260409020546001600160a01b0316612dc6565b612dc6610cc9565b90506000612dd4858861598e565b90506000612710612de961ffff86168461598e565b612df391906159c3565b905060006001600160a01b03881673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1415612e255750348214612e29565b5034155b80612e465760405162461bcd60e51b8152600401610bde90615c7c565b612e5988612e52612a6b565b88856140a4565b61218988612e65612a6b565b86612e708688615a26565b6140a4565b6117b8838383604051806020016040528060008152506140ee565b612710811115612eb25760405162461bcd60e51b8152600401610bde90615aea565b600480546001600160a01b0384166001600160b01b03199091168117600160a01b61ffff851602179091556040518281527f90d7ec04bcb8978719414f82e52e4cb651db41d0e6f8cea6118c2191e6183adb906020016129df565b6001600160a01b038316612f6f5760405162461bcd60e51b815260206004820152602360248201527f455243313135353a206275726e2066726f6d20746865207a65726f206164647260448201526265737360e81b6064820152608401610bde565b8051825114612f905760405162461bcd60e51b8152600401610bde90615b80565b6000612f9a612a6b565b9050612fba81856000868660405180602001604052806000815250613c55565b60005b83518110156130be576000848281518110612fda57612fda61561e565b602002602001015190506000848381518110612ff857612ff861561e565b602090810291909101810151600084815260d8835260408082206001600160a01b038c1683529093529190912054909150818110156130855760405162461bcd60e51b8152602060048201526024808201527f455243313135353a206275726e20616d6f756e7420657863656564732062616c604482015263616e636560e01b6064820152608401610bde565b600092835260d8602090815260408085206001600160a01b038b16865290915290922091039055806130b68161581d565b915050612fbd565b5060006001600160a01b0316846001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb868660405161310f929190615c57565b60405180910390a46040805160208101909152600090525b50505050565b600680546001600160a01b0319166001600160a01b0383169081179091556040517f299d17e95023f496e0ffc4909cff1a61f74bb5eb18de6f900f4155bfa1b3b33390600090a250565b6003819055600280546001600160a01b0319166001600160a01b0384161790556040517ff8086cee80709bd44c82f89dbca54115ebd05e840a88ab81df9cf5be9754eb63906131c99084908490614b8a565b60405180910390a15050565b6000600180546131e490615564565b80601f016020809104026020016040519081016040528092919081815260200182805461321090615564565b801561325d5780601f106132325761010080835404028352916020019161325d565b820191906000526020600020905b81548152906001019060200180831161324057829003601f168201915b50508551939450613279936001935060208701925090506148af565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a1681836040516131c9929190615c98565b6127108111156132cd5760405162461bcd60e51b8152600401610bde90615aea565b6040805180820182526001600160a01b038481168083526020808401868152600089815260058352869020945185546001600160a01b031916941693909317845591516001909301929092559151838152909185917f7365cf4122f072a3365c20d54eff9b38d73c096c28e1892ec8f5b0e403a0f12d91015b60405180910390a3505050565b6000818152600960205260408120805461336c90615564565b80601f016020809104026020016040519081016040528092919081815260200182805461339890615564565b80156133e55780601f106133ba576101008083540402835291602001916133e5565b820191906000526020600020905b8154815290600101906020018083116133c857829003601f168201915b50505050509050600081511161342d5760405162461bcd60e51b815260206004820152600d60248201526c092dcecc2d8d2c840c4c2e8c6d609b1b6044820152606401610bde565b6000828152600a6020526040808220805460ff19166001179055517feef043febddf4e1d1cf1f72ff1407b84e036e805aa0934418cb82095da8d71649190a15050565b816001600160a01b0316836001600160a01b031614156134e45760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b6064820152608401610bde565b6001600160a01b03838116600081815260d96020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c319101613346565b606061355483612600565b6135af5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610bde565b600080846001600160a01b0316846040516135ca9190615cbd565b600060405180830381855af49150503d8060008114613605576040519150601f19603f3d011682016040523d82523d6000602084013e61360a565b606091505b50915091506136328282604051806060016040528060278152602001615ecd60279139614215565b95945050505050565b6002805482919060ff60b01b1916600160b01b83600181111561366057613660615526565b02179055507fd246da9440709ce0dd3f4fd669abc85ada012ab9774b8ecdcc5059ba1486b9c181604051613694919061553c565b60405180910390a150565b600061290661010d5461077a612a6b565b6000806136bd8486615606565b60088054600181019091557ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee301819055600081815260096020908152604090912085519294508493506137149290918601906148af565b50935093915050565b6000828152600a602052604090205460ff161561376b5760405162461bcd60e51b815260206004820152600c60248201526b2130ba31b410333937bd32b760a11b6044820152606401610bde565b6000828152600960209081526040909120825161378a928401906148af565b507f6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c6137b58361424e565b6040805191825260208201859052016131c9565b600054610100900460ff166137f05760405162461bcd60e51b8152600401610bde90615ccf565b6137f8614369565b610d4681614392565b600054610100900460ff166138285760405162461bcd60e51b8152600401610bde90615ccf565b610d4681614421565b6000828152600d6020526040808220805490849055905190918391839186917fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff9190a4505050565b6000808281805b875181101561393b5761389460028361598e565b915060008882815181106138aa576138aa61561e565b602002602001015190508084116138ec576040805160208101869052908101829052606001604051602081830303815290604052805190602001209350613928565b60408051602081018390529081018590526060016040516020818303038152906040528051906020012093506001836139259190615606565b92505b50806139338161581d565b915050613880565b50941495939450505050565b6001600160a01b03841661396d5760405162461bcd60e51b8152600401610bde90615bc8565b6000613977612a6b565b9050600061398485614434565b9050600061399185614434565b90506139a1838989858589613c55565b600086815260d8602090815260408083206001600160a01b038c168452909152902054858110156139e45760405162461bcd60e51b8152600401610bde90615c0d565b600087815260d8602090815260408083206001600160a01b038d8116855292528083208985039055908a16825281208054889290613a23908490615606565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4613a83848a8a8a8a8a61447f565b505050505050505050565b60606000613a9d83600261598e565b613aa8906002615606565b6001600160401b03811115613abf57613abf614ba3565b6040519080825280601f01601f191660200182016040528015613ae9576020820181803683370190505b509050600360fc1b81600081518110613b0457613b0461561e565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110613b3357613b3361561e565b60200101906001600160f81b031916908160001a9053506000613b5784600261598e565b613b62906001615606565b90505b6001811115613bda576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110613b9657613b9661561e565b1a60f81b828281518110613bac57613bac61561e565b60200101906001600160f81b031916908160001a90535060049490941c93613bd381615a3d565b9050613b65565b508315613c295760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610bde565b9392505050565b6000613c3b336114e0565b15613c4d575060131936013560601c90565b503390565b90565b613c6361010c546000611964565b158015613c7857506001600160a01b03851615155b8015613c8c57506001600160a01b03841615155b15613d0957613c9e61010c5486611964565b80613cb15750613cb161010c5485611964565b613d095760405162461bcd60e51b8152602060048201526024808201527f7265737472696374656420746f205452414e534645525f524f4c4520686f6c6460448201526332b9399760e11b6064820152608401610bde565b6001600160a01b038516613d915760005b8351811015613d8f57828181518110613d3557613d3561561e565b602002602001015161010f6000868481518110613d5457613d5461561e565b602002602001015181526020019081526020016000206000828254613d799190615606565b90915550613d8890508161581d565b9050613d1a565b505b6001600160a01b038416612c255760005b8351811015612d2057828181518110613dbd57613dbd61561e565b602002602001015161010f6000868481518110613ddc57613ddc61561e565b602002602001015181526020019081526020016000206000828254613e019190615a26565b90915550613e1090508161581d565b9050613da2565b613e29846001600160a01b0316612600565b15612c255760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190613e629089908990889088908890600401615d1a565b6020604051808303816000875af1925050508015613e9d575060408051601f3d908101601f19168201909252613e9a91810190615d6c565b60015b613f4a57613ea9615d89565b806308c379a01415613ee35750613ebe615da4565b80613ec95750613ee5565b8060405162461bcd60e51b8152600401610bde9190614a24565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b6064820152608401610bde565b6001600160e01b0319811663bc197c8160e01b14612d205760405162461bcd60e51b8152600401610bde90615e2d565b6000828152600c602090815260408083206001600160a01b0385168085529252808320805460ff1916600117905551339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b6000828152600e6020526040812080549160019190613ff48385615606565b90915550506000928352600e6020908152604080852083865260018101835281862080546001600160a01b039096166001600160a01b03199096168617905593855260029093019052912055565b61404c82826129eb565b6000828152600c602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b806140ae57613127565b6001600160a01b03841673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14156140e2576140dd8282614541565b613127565b613127848484846145e3565b6001600160a01b03841661414e5760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b6064820152608401610bde565b6000614158612a6b565b9050600061416585614434565b9050600061417285614434565b905061418383600089858589613c55565b600086815260d8602090815260408083206001600160a01b038b168452909152812080548792906141b5908490615606565b909155505060408051878152602081018790526001600160a01b03808a1692600092918716917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4612d208360008989898961447f565b60608315614224575081613c29565b8251156142345782518084602001fd5b8160405162461bcd60e51b8152600401610bde9190614a24565b60008061425a60085490565b9050600060088054806020026020016040519081016040528092919081815260200182805480156142aa57602002820191906000526020600020905b815481526020019060010190808311614296575b5050505050905060005b8281101561432e578181815181106142ce576142ce61561e565b602002602001015185141561431c57801561431157816142ef600183615a26565b815181106142ff576142ff61561e565b60200260200101519350505050919050565b506000949350505050565b806143268161581d565b9150506142b4565b5060405162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a590818985d18da1259608a1b6044820152606401610bde565b600054610100900460ff166143905760405162461bcd60e51b8152600401610bde90615ccf565b565b600054610100900460ff166143b95760405162461bcd60e51b8152600401610bde90615ccf565b60005b81518110156110d7576001604260008484815181106143dd576143dd61561e565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055806144198161581d565b9150506143bc565b80516110d79060da9060208401906148af565b6040805160018082528183019092526060916000919060208083019080368337019050509050828160008151811061446e5761446e61561e565b602090810291909101015292915050565b614491846001600160a01b0316612600565b15612c255760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e61906144ca9089908990889088908890600401615e75565b6020604051808303816000875af1925050508015614505575060408051601f3d908101601f1916820190925261450291810190615d6c565b60015b61451157613ea9615d89565b6001600160e01b0319811663f23a6e6160e01b14612d205760405162461bcd60e51b8152600401610bde90615e2d565b6000826001600160a01b03168260405160006040518083038185875af1925050503d806000811461458e576040519150601f19603f3d011682016040523d82523d6000602084013e614593565b606091505b50509050806117b85760405162461bcd60e51b815260206004820152601c60248201527b1b985d1a5d99481d1bdad95b881d1c985b9cd9995c8819985a5b195960221b6044820152606401610bde565b816001600160a01b0316836001600160a01b0316141561460257613127565b6001600160a01b038316301415614627576140dd6001600160a01b038516838361463c565b6131276001600160a01b038516848484614692565b6117b88363a9059cbb60e01b848460405160240161465b929190614b8a565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526146ca565b6040516001600160a01b03808516602483015283166044820152606481018290526131279085906323b872dd60e01b9060840161465b565b600061471f826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661479c9092919063ffffffff16565b8051909150156117b8578080602001905181019061473d9190615eaf565b6117b85760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610bde565b60606116a18484600085856147b085612600565b6147fc5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610bde565b600080866001600160a01b031685876040516148189190615cbd565b60006040518083038185875af1925050503d8060008114614855576040519150601f19603f3d011682016040523d82523d6000602084013e61485a565b606091505b509150915061486a828286614215565b979650505050505050565b50805461488190615564565b6000825580601f10614891575050565b601f016020900490600052602060002090810190610d469190614933565b8280546148bb90615564565b90600052602060002090601f0160209004810192826148dd5760008555614923565b82601f106148f657805160ff1916838001178555614923565b82800160010185558215614923579182015b82811115614923578251825591602001919060010190614908565b5061492f929150614933565b5090565b5b8082111561492f5760008155600101614934565b6001600160a01b0381168114610d4657600080fd5b803561496881614948565b919050565b6000806040838503121561498057600080fd5b823561498b81614948565b946020939093013593505050565b6001600160e01b031981168114610d4657600080fd5b6000602082840312156149c157600080fd5b8135613c2981614999565b60005b838110156149e75781810151838201526020016149cf565b838111156131275750506000910152565b60008151808452614a108160208601602086016149cc565b601f01601f19169290920160200192915050565b602081526000613c2960208301846149f8565b6001600160a01b0391909116815260200190565b600060208284031215614a5d57600080fd5b5035919050565b600060208284031215614a7657600080fd5b8135613c2981614948565b60008083601f840112614a9357600080fd5b5081356001600160401b03811115614aaa57600080fd5b6020830191508360208260051b8501011115614ac557600080fd5b9250929050565b8015158114610d4657600080fd5b60008060008060608587031215614af057600080fd5b8435935060208501356001600160401b03811115614b0d57600080fd5b614b1987828801614a81565b9094509250506040850135614b2d81614acc565b939692955090935050565b60008060408385031215614b4b57600080fd5b823591506020830135614b5d81614948565b809150509250929050565b60008060408385031215614b7b57600080fd5b50508035926020909101359150565b6001600160a01b03929092168252602082015260400190565b634e487b7160e01b600052604160045260246000fd5b601f8201601f191681016001600160401b0381118282101715614bde57614bde614ba3565b6040525050565b60006001600160401b03821115614bfe57614bfe614ba3565b5060051b60200190565b600082601f830112614c1957600080fd5b81356020614c2682614be5565b604051614c338282614bb9565b83815260059390931b8501820192828101915086841115614c5357600080fd5b8286015b84811015614c6e5780358352918301918301614c57565b509695505050505050565b600082601f830112614c8a57600080fd5b81356001600160401b03811115614ca357614ca3614ba3565b604051614cba601f8301601f191660200182614bb9565b818152846020838601011115614ccf57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a08688031215614d0457600080fd5b8535614d0f81614948565b94506020860135614d1f81614948565b935060408601356001600160401b0380821115614d3b57600080fd5b614d4789838a01614c08565b94506060880135915080821115614d5d57600080fd5b614d6989838a01614c08565b93506080880135915080821115614d7f57600080fd5b50614d8c88828901614c79565b9150509295509295909350565b600082601f830112614daa57600080fd5b81356020614db782614be5565b604051614dc48282614bb9565b83815260059390931b8501820192828101915086841115614de457600080fd5b8286015b84811015614c6e578035614dfb81614948565b8352918301918301614de8565b60008060408385031215614e1b57600080fd5b82356001600160401b0380821115614e3257600080fd5b614e3e86838701614d99565b93506020850135915080821115614e5457600080fd5b50614e6185828601614c08565b9150509250929050565b600081518084526020808501945080840160005b83811015614e9b57815187529582019590820190600101614e7f565b509495945050505050565b602081526000613c296020830184614e6b565b600060808284031215611c2957600080fd5b600080600080600080600060e0888a031215614ee657600080fd5b8735614ef181614948565b965060208801359550604088013594506060880135614f0f81614948565b93506080880135925060a08801356001600160401b0380821115614f3257600080fd5b614f3e8b838c01614eb9565b935060c08a0135915080821115614f5457600080fd5b50614f618a828b01614c79565b91505092959891949750929550565b600080600060608486031215614f8557600080fd5b83359250602084013591506040840135614f9e81614948565b809150509250925092565b600080600060608486031215614fbe57600080fd5b8335614fc981614948565b925060208401356001600160401b0380821115614fe557600080fd5b614ff187838801614c08565b9350604086013591508082111561500757600080fd5b5061501486828701614c08565b9150509250925092565b60006020828403121561503057600080fd5b81356001600160401b0381111561504657600080fd5b6116a184828501614c79565b60008060006060848603121561506757600080fd5b83359250602084013561507981614948565b929592945050506040919091013590565b6000806040838503121561509d57600080fd5b82356150a881614948565b91506020830135614b5d81614acc565b600080602083850312156150cb57600080fd5b82356001600160401b038111156150e157600080fd5b6150ed85828601614a81565b90969095509350505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561514e57603f1988860301845261513c8583516149f8565b94509285019290850190600101615120565b5092979650505050505050565b60006020828403121561516d57600080fd5b813560028110613c2957600080fd5b60008083601f84011261518e57600080fd5b5081356001600160401b038111156151a557600080fd5b602083019150836020828501011115614ac557600080fd5b6000806000806000606086880312156151d557600080fd5b8535945060208601356001600160401b03808211156151f357600080fd5b6151ff89838a0161517c565b9096509450604088013591508082111561521857600080fd5b506152258882890161517c565b969995985093965092949392505050565b6020815281516020820152602082015160408201526040820151606082015260608201516080820152608082015160a082015260a082015160c082015260018060a01b0360c08301511660e0820152600060e08301516101008081850152506116a16101208401826149f8565b6000806000604084860312156152b857600080fd5b8335925060208401356001600160401b038111156152d557600080fd5b6152e18682870161517c565b9497909650939450505050565b80356001600160801b038116811461496857600080fd5b6000806000806000806000806000806101408b8d03121561532557600080fd5b61532e8b61495d565b995060208b01356001600160401b038082111561534a57600080fd5b6153568e838f01614c79565b9a5060408d013591508082111561536c57600080fd5b6153788e838f01614c79565b995060608d013591508082111561538e57600080fd5b61539a8e838f01614c79565b985060808d01359150808211156153b057600080fd5b506153bd8d828e01614d99565b9650506153cc60a08c0161495d565b94506153da60c08c0161495d565b93506153e860e08c016152ee565b92506153f76101008c016152ee565b91506154066101208c0161495d565b90509295989b9194979a5092959850565b6000806040838503121561542a57600080fd5b823561543581614948565b91506020830135614b5d81614948565b600080600080600080600060e0888a03121561546057600080fd5b87359650602088013561547281614948565b95506040880135945060608801359350608088013561549081614948565b925060a0880135915060c08801356001600160401b038111156154b257600080fd5b614f618a828b01614eb9565b600080600080600060a086880312156154d657600080fd5b85356154e181614948565b945060208601356154f181614948565b9350604086013592506060860135915060808601356001600160401b0381111561551a57600080fd5b614d8c88828901614c79565b634e487b7160e01b600052602160045260246000fd5b602081016002831061555e57634e487b7160e01b600052602160045260246000fd5b91905290565b600181811c9082168061557857607f821691505b60208210811415611c2957634e487b7160e01b600052602260045260246000fd5b600083516155ab8184602088016149cc565b8351908301906155bf8183602088016149cc565b01949350505050565b6020808252600e908201526d139bdd08185d5d1a1bdc9a5e995960921b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b60008219821115615619576156196155f0565b500190565b634e487b7160e01b600052603260045260246000fd5b6000823560fe1983360301811261564a57600080fd5b9190910192915050565b6000808335601e1984360301811261566b57600080fd5b8301803591506001600160401b0382111561568557600080fd5b602001915036819003821315614ac557600080fd5b601f8211156117b857600081815260208120601f850160051c810160208610156156c15750805b601f850160051c820191505b81811015612c25578281556001016156cd565b6001600160401b038311156156f7576156f7614ba3565b61570b836157058354615564565b8361569a565b6000601f84116001811461573f57600085156157275750838201355b600019600387901b1c1916600186901b178355611250565b600083815260209020601f19861690835b828110156157705786850135825560209485019460019092019101615750565b508682101561578d5760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b813581556020820135600182015560408201356002820155606082013560038201556080820135600482015560a082013560058201556006810160c08301356157e781614948565b81546001600160a01b0319166001600160a01b039190911617905561580f60e0830183615654565b6131278183600786016156e0565b6000600019821415615831576158316155f0565b5060010190565b6000808335601e1984360301811261584f57600080fd5b83016020810192503590506001600160401b0381111561586e57600080fd5b803603831315614ac557600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60408082528181018490526000906060808401600587901b850182018885805b8a81101561597857888403605f190185528235368d900360fe190181126158eb578283fd5b8c018035855260208082013581870152888201358987015287820135888701526080808301359087015260a080830135908701526101009060c08084013561593281614948565b6001600160a01b03169088015260e061594d84820185615838565b945083828a0152615961848a01868361587d565b9983019998505050949094019350506001016158c6565b505050861515602087015293506116a192505050565b60008160001904831182151516156159a8576159a86155f0565b500290565b634e487b7160e01b600052601260045260246000fd5b6000826159d2576159d26159ad565b500490565b6020808252602f908201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60408201526e195c881b9bdc88185c1c1c9bdd9959608a1b606082015260800190565b600082821015615a3857615a386155f0565b500390565b600081615a4c57615a4c6155f0565b506000190190565b858152606060208201526000615a6e60608301868861587d565b8281036040840152615a8181858761587d565b98975050505050505050565b6000808335601e19843603018112615aa457600080fd5b8301803591506001600160401b03821115615abe57600080fd5b6020019150600581901b3603821315614ac557600080fd5b600082615ae557615ae56159ad565b500690565b6020808252600f908201526e45786365656473206d61782062707360881b604082015260600190565b7402832b936b4b9b9b4b7b7399d1030b1b1b7bab73a1605d1b815260008351615b438160158501602088016149cc565b7001034b99036b4b9b9b4b733903937b6329607d1b6015918401918201528351615b748160268401602088016149cc565b01602601949350505050565b60208082526028908201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206040820152670dad2e6dac2e8c6d60c31b606082015260800190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b604081526000615c6a6040830185614e6b565b82810360208401526136328185614e6b565b60208082526002908201526110ab60f11b604082015260600190565b604081526000615cab60408301856149f8565b828103602084015261363281856149f8565b6000825161564a8184602087016149cc565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6001600160a01b0386811682528516602082015260a060408201819052600090615d4690830186614e6b565b8281036060840152615d588186614e6b565b90508281036080840152615a8181856149f8565b600060208284031215615d7e57600080fd5b8151613c2981614999565b600060033d1115613c525760046000803e5060005160e01c90565b600060443d1015615db25790565b6040516003193d81016004833e81513d6001600160401b038160248401118184111715615de157505050505090565b8285019150815181811115615df95750505050505090565b843d8701016020828501011115615e135750505050505090565b615e2260208286010187614bb9565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b03868116825285166020820152604081018490526060810183905260a06080820181905260009061486a908301846149f8565b600060208284031215615ec157600080fd5b8151613c2981614acc56fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220d4ef4b6569c230db1e5c94208ab6741f66e5149eb4d93d54732fb859896a959464736f6c634300080c0033",
    "sourceMap": "1644:12928:325:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2593:227:439;;;;;;;;;;-1:-1:-1;2593:227:439;;;;;:::i;:::-;;:::i;:::-;;;755:25:644;;;743:2;728:18;2593:227:439;;;;;;;;6149:280:325;;;;;;;;;;-1:-1:-1;6149:280:325;;;;;:::i;:::-;;:::i;:::-;;;1438:14:644;;1431:22;1413:41;;1401:2;1386:18;6149:280:325;1273:187:644;2155:18:325;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;676:104:72:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;5907:211:325:-;;;;;;;;;;-1:-1:-1;5907:211:325;;;;;:::i;:::-;;:::i;1133:173:68:-;;;;;;;;;;-1:-1:-1;1133:173:68;;;;;:::i;:::-;;:::i;:::-;;2212:2857:57;;;;;;;;;;-1:-1:-1;2212:2857:57;;;;;:::i;:::-;;:::i;2043:269:71:-;;;;;;;;;;-1:-1:-1;2043:269:71;;;;;:::i;:::-;;:::i;1973:203:52:-;;;;;;;;;;-1:-1:-1;1973:203:52;;;;;:::i;:::-;;:::i;2740:120:69:-;;;;;;;;;;-1:-1:-1;2740:120:69;;;;;:::i;:::-;2808:7;2834:19;;;:13;:19;;;;;;;2740:120;3172:49:325;;;;;;;;;;-1:-1:-1;3172:49:325;;;;;:::i;:::-;;;;;;;;;;;;;;7383:240;;;;;;;;;;-1:-1:-1;7383:240:325;;;;;:::i;:::-;;:::i;1421:347:75:-;;;;;;;;;;-1:-1:-1;1421:347:75;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;4473:427:439:-;;;;;;;;;;-1:-1:-1;4473:427:439;;;;;:::i;:::-;;:::i;3255:271:69:-;;;;;;;;;;-1:-1:-1;3255:271:69;;;;;:::i;:::-;;:::i;4466:217::-;;;;;;;;;;-1:-1:-1;4466:217:69;;;;;:::i;:::-;;:::i;12413:106:325:-;;;;;;;;;;-1:-1:-1;12491:21:325;;12413:106;;2008:381:75;;;;;;;;;;-1:-1:-1;2008:381:75;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;8744:32:644;;;8726:51;;8825:6;8813:19;;;8808:2;8793:18;;8786:47;8699:18;2008:381:75;8554:285:644;2977:508:439;;;;;;;;;;-1:-1:-1;2977:508:439;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;918:134:209:-;;;;;;;;;;-1:-1:-1;918:134:209;;;;;:::i;:::-;;:::i;795:1354:57:-;;;;;;:::i;:::-;;:::i;8359:285::-;;;;;;;;;;-1:-1:-1;8359:285:57;;;;;:::i;:::-;8502:29;8567:24;;;:14;:24;;;;;;;;:60;;;:46;;;;:60;;;;;-1:-1:-1;;;;;8567:70:57;;;;;;;;;;8359:285;7523:456;;;;;;;;;;-1:-1:-1;7523:456:57;;;;;:::i;:::-;;:::i;3087:256:75:-;;;;;;;;;;-1:-1:-1;3087:256:75;;;;;:::i;:::-;;:::i;1655:96:52:-;;;;;;;;;;-1:-1:-1;1729:8:52;:15;1655:96;;12619:343:325;;;;;;;;;;-1:-1:-1;12619:343:325;;;;;:::i;:::-;;:::i;1189:228:72:-;;;;;;;;;;-1:-1:-1;1189:228:72;;;;;:::i;:::-;;:::i;2821:255:71:-;;;;;;;;;;-1:-1:-1;2821:255:71;;;;;:::i;:::-;;:::i;898:43:52:-;;;;;;;;;;-1:-1:-1;898:43:52;;;;;:::i;:::-;;;;;;;;;;;;;;;;7071:230:325;;;;;;;;;;-1:-1:-1;7071:230:325;;;;;:::i;:::-;;:::i;871:86:68:-;;;;;;;;;;-1:-1:-1;944:6:68;;-1:-1:-1;;;;;944:6:68;871:86;;1643:633:70;;;;;;;;;;-1:-1:-1;1643:633:70;;;;;:::i;:::-;;:::i;1324:131:69:-;;;;;;;;;;-1:-1:-1;1324:131:69;;;;;:::i;:::-;;:::i;1003:188:54:-;;;;;;;;;;-1:-1:-1;1003:188:54;;;;;:::i;:::-;;:::i;2200:20:325:-;;;;;;;;;;;;;:::i;4281:288:75:-;;;;;;;;;;-1:-1:-1;4281:288:75;;;;;:::i;:::-;;:::i;8180:169:325:-;;;;;;;;;;-1:-1:-1;8180:169:325;;;;;:::i;:::-;;:::i;6728:89::-;;;;;;;;;;-1:-1:-1;6728:89:325;;6808:1;14433:36:644;;14421:2;14406:18;6728:89:325;14291:184:644;742:49:69;;;;;;;;;;-1:-1:-1;742:49:69;787:4;742:49;;3553:153:439;;;;;;;;;;-1:-1:-1;3553:153:439;;;;;:::i;:::-;;:::i;2206:211:69:-;;;;;;;;;;-1:-1:-1;2206:211:69;;;;;:::i;:::-;;:::i;632:301:466:-;;;;;;;;;;-1:-1:-1;632:301:466;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2499:144:75:-;;;;;;;;;;-1:-1:-1;2599:16:75;;-1:-1:-1;;;;;2599:16:75;;;-1:-1:-1;;;2624:10:75;;;;2499:144;;3455:200:71;;;;;;;;;;-1:-1:-1;3455:200:71;;;;;:::i;:::-;;:::i;3015:46:325:-;;;;;;;;;;-1:-1:-1;3015:46:325;;;;;:::i;:::-;;;;;;;;;;;;;;3313:48;;;;;;;;;;-1:-1:-1;3313:48:325;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;3313:48:325;;;2683:398:70;;;;;;;;;;-1:-1:-1;2683:398:70;;;;;:::i;:::-;;:::i;6620:102:325:-;;;;;;;;;;-1:-1:-1;;;;6620:102:325;;1254:592:61;;;;;;;;;;-1:-1:-1;1254:592:61;;;;;:::i;:::-;;:::i;1058:147:71:-;;;;;;;;;;;;;:::i;8044:233:57:-;;;;;;;;;;-1:-1:-1;8044:233:57;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3897:171:69:-;;;;;;;;;;-1:-1:-1;3897:171:69;;;;;:::i;:::-;;:::i;7831:194:325:-;;;;;;;;;;-1:-1:-1;7831:194:325;;;;;:::i;:::-;;:::i;4148:1511::-;;;;;;;;;;-1:-1:-1;4148:1511:325;;;;;:::i;:::-;;:::i;1268:136:71:-;;;;;;;;;;;;1359:20;;1381:15;;-1:-1:-1;;;;;1359:20:71;;;;1268:136;565:34:54;;;;;;;;;;;;;:::i;506:60:57:-;;;;;;;;;;-1:-1:-1;506:60:57;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;20666:25:644;;;20722:2;20707:18;;20700:34;;;;20639:18;506:60:57;20492:248:644;3773:166:439;;;;;;;;;;-1:-1:-1;3773:166:439;;;;;:::i;:::-;-1:-1:-1;;;;;3895:27:439;;;3872:4;3895:27;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;;;;3773:166;5166:2269:57;;;;;;;;;;-1:-1:-1;5166:2269:57;;;;;:::i;:::-;;:::i;4006:395:439:-;;;;;;;;;;-1:-1:-1;4006:395:439;;;;;:::i;:::-;;:::i;1467:107:71:-;;;;;;;;;;-1:-1:-1;1552:15:71;;-1:-1:-1;;;1552:15:71;;;;1467:107;;;;;;:::i;2593:227:439:-;2679:7;-1:-1:-1;;;;;2706:21:439;;2698:76;;;;-1:-1:-1;;;2698:76:439;;23493:2:644;2698:76:439;;;23475:21:644;23532:2;23512:18;;;23505:30;23571:34;23551:18;;;23544:62;-1:-1:-1;;;23622:18:644;;;23615:40;23672:19;;2698:76:439;;;;;;;;;-1:-1:-1;2791:13:439;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;2791:22:439;;;;;;;;;;2593:227;;;;;:::o;6149:280:325:-;6303:4;6330:36;6354:11;6330:23;:36::i;:::-;:92;;;-1:-1:-1;;;;;;;;6370:52:325;-1:-1:-1;;;6370:52:325;;6149:280::o;2155:18::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;676:104:72:-;764:9;;-1:-1:-1;;;;;764:9:72;;676:104::o;5907:211:325:-;5968:13;5993:22;6018:21;6030:8;6018:11;:21::i;:::-;5993:46;;6080:8;6090:19;:8;:17;:19::i;:::-;6063:47;;;;;;;;;:::i;:::-;;;;;;;;;;;;;6049:62;;;5907:211;;;:::o;1133:173:68:-;1203:14;:12;:14::i;:::-;1198:70;;1233:24;;-1:-1:-1;;;1233:24:68;;;;;;;:::i;1198:70::-;1277:22;1289:9;1277:11;:22::i;:::-;1133:173;:::o;2212:2857:57:-;2397:24;:22;:24::i;:::-;2392:80;;2437:24;;-1:-1:-1;;;2437:24:57;;;;;;;:::i;2392:80::-;2481:40;2524:24;;;:14;:24;;;;;2587:28;;2654:19;;;;2587:28;3090:108;;;;3148:39;3169:18;3148;:39;:::i;:::-;3132:55;;3090:108;3208:19;;;:40;;;3258:44;;;:28;;3358:640;3378:22;;;3358:640;;;3429:6;;;:69;;;3469:11;;3481:1;3469:14;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:29;3439:59;;3429:69;3421:84;;;;-1:-1:-1;;;3421:84:57;;25842:2:644;3421:84:57;;;25824:21:644;25881:1;25861:18;;;25854:29;-1:-1:-1;;;25899:18:644;;;25892:32;25941:18;;3421:84:57;25640:325:644;3421:84:57;3520:28;3551:24;;;3520:28;3576:17;3592:1;3576:13;:17;:::i;:::-;3551:43;;;;;;;;;;;:57;;;3520:88;;3649:11;;3661:1;3649:14;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:33;;;3626:20;:56;3622:123;;;3702:28;;-1:-1:-1;;;3702:28:57;;26172:2:644;3702:28:57;;;26154:21:644;26211:2;26191:18;;;26184:30;-1:-1:-1;;;26230:18:644;;;26223:48;26288:18;;3702:28:57;25970:342:644;3622:123:57;3805:11;;3817:1;3805:14;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;3759:24;;;:43;3784:17;3800:1;3784:13;:17;:::i;:::-;3759:43;;;;;;;;;;;:60;;;;;;:::i;:::-;-1:-1:-1;3893:20:57;;-1:-1:-1;3833:24:57;;;:43;3858:17;3874:1;3858:13;:17;:::i;:::-;3833:43;;;;;;;;;;;-1:-1:-1;3833:43:57;:57;;:80;3958:11;;3970:1;3958:14;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:29;;-1:-1:-1;3402:3:57;;-1:-1:-1;3402:3:57;;;:::i;:::-;;;;3358:640;;;;4538:22;4534:444;;;4593:18;4576:128;4617:13;4613:1;:17;4576:128;;;4662:27;;;;:24;;;;:27;;;;;4655:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4655:34:57;;;4662:27;4655:34;;;;4662:27;4655:34;:::i;:::-;;;4632:3;;;;;:::i;:::-;;;;4576:128;;;;4534:444;;;4738:39;;;4734:234;;;4814:11;4797:157;4838:18;4834:1;:22;4797:157;;;4892:24;;;:43;4917:17;4933:1;4917:13;:17;:::i;:::-;4892:43;;;;;;;;;;;-1:-1:-1;4892:43:57;;;4885:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4885:50:57;;;4892:43;4885:50;;;;-1:-1:-1;4885:50:57;:::i;:::-;;;4858:3;;;;;:::i;:::-;;;;4797:157;;;;4734:234;5016:8;4993:69;5026:11;;5039:22;4993:69;;;;;;;;:::i;:::-;;;;;;;;2382:2687;;;;;2212:2857;;;;:::o;2043:269:71:-;2160:24;:22;:24::i;:::-;2155:80;;2200:24;;-1:-1:-1;;;2200:24:71;;;;;;;:::i;2155:80::-;2244:61;2266:21;2289:15;2244:21;:61::i;:::-;2043:269;;:::o;1973:203:52:-;2037:7;2070:17;1729:8;:15;;1655:96;2070:17;2060:6;:27;2056:81;;2103:23;;-1:-1:-1;;;2103:23:52;;33014:2:644;2103:23:52;;;32996:21:644;33053:2;33033:18;;;33026:30;-1:-1:-1;;;33072:18:644;;;33065:43;33125:18;;2103:23:52;32812:337:644;2056:81:52;2153:8;2162:6;2153:16;;;;;;;;:::i;:::-;;;;;;;;;2146:23;;1973:203;;;:::o;7383:240:325:-;787:4:69;931:28;787:4;948:10;931;:28::i;:::-;7507:23:325::1;::::0;;;:13:::1;:23;::::0;;;;;;:40;;-1:-1:-1;;;;;;7507:40:325::1;-1:-1:-1::0;;;;;7507:40:325;::::1;;::::0;;7562:54;7507:23;;7562:54:::1;::::0;::::1;::::0;7507:40;;7562:54:::1;:::i;:::-;;;;;;;;7383:240:::0;;;:::o;1421:347:75:-;1558:16;1576:21;1614:17;1633:11;1648:31;1671:7;1648:22;:31::i;:::-;1613:66;;-1:-1:-1;1613:66:75;;-1:-1:-1;1613:66:75;;;-1:-1:-1;1755:6:75;1736:15;1613:66;1736:9;:15;:::i;:::-;1735:26;;;;:::i;:::-;1719:42;;1603:165;;1421:347;;;;;:::o;4473:427:439:-;4706:12;:10;:12::i;:::-;-1:-1:-1;;;;;4698:20:439;:4;-1:-1:-1;;;;;4698:20:439;;:60;;;;4722:36;4739:4;4745:12;:10;:12::i;4722:36::-;4677:154;;;;-1:-1:-1;;;4677:154:439;;;;;;;:::i;:::-;4841:52;4864:4;4870:2;4874:3;4879:7;4888:4;4841:22;:52::i;:::-;4473:427;;;;;:::o;3255:271:69:-;3350:19;;;;:13;:19;;;;;;3339:43;;3371:10;3339;:43::i;:::-;3396:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;3396:23:69;;;;;;;;;;;;3392:93;;;3435:39;;-1:-1:-1;;;3435:39:69;;34202:2:644;3435:39:69;;;34184:21:644;34241:2;34221:18;;;34214:30;34280:31;34260:18;;;34253:59;34329:18;;3435:39:69;34000:353:644;3392:93:69;3494:25;3505:4;3511:7;3494:10;:25::i;4466:217::-;4557:10;-1:-1:-1;;;;;4557:21:69;;;4553:88;;4594:36;;-1:-1:-1;;;4594:36:69;;34560:2:644;4594:36:69;;;34542:21:644;34599:2;34579:18;;;34572:30;-1:-1:-1;;;34618:18:644;;;34611:56;34684:18;;4594:36:69;34358:350:644;4553:88:69;4650:26;4662:4;4668:7;4650:11;:26::i;2008:381:75:-;2088:7;2152:29;;;:19;:29;;;;;;;;2115:66;;;;;;;;;;-1:-1:-1;;;;;2115:66:75;;;;;;;;;;;;;;;;2088:7;;2211:39;:171;;2327:25;;2361:19;;;;2211:171;;;2270:16;;-1:-1:-1;;;;;2270:16:75;;;-1:-1:-1;;;2295:10:75;;;;2211:171;2192:190;;;;;2008:381;;;:::o;2977:508:439:-;3128:16;3187:3;:10;3168:8;:15;:29;3160:83;;;;-1:-1:-1;;;3160:83:439;;34915:2:644;3160:83:439;;;34897:21:644;34954:2;34934:18;;;34927:30;34993:34;34973:18;;;34966:62;-1:-1:-1;;;35044:18:644;;;35037:39;35093:19;;3160:83:439;34713:405:644;3160:83:439;3254:30;3301:8;:15;-1:-1:-1;;;;;3287:30:439;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3287:30:439;;3254:63;;3333:9;3328:120;3352:8;:15;3348:1;:19;3328:120;;;3407:30;3417:8;3426:1;3417:11;;;;;;;;:::i;:::-;;;;;;;3430:3;3434:1;3430:6;;;;;;;;:::i;:::-;;;;;;;3407:9;:30::i;:::-;3388:13;3402:1;3388:16;;;;;;;;:::i;:::-;;;;;;;;;;:49;3369:3;;;:::i;:::-;;;3328:120;;;-1:-1:-1;3465:13:439;2977:508;-1:-1:-1;;;2977:508:439:o;918:134:209:-;-1:-1:-1;;;;;1017:28:209;994:4;1017:28;;;:17;:28;;;;;;;;;918:134::o;795:1354:57:-;1074:95;1087:8;1097:9;1108;1119;1130:14;1146:15;1163:5;1074:12;:95::i;:::-;1180:25;1208:35;1234:8;1208:25;:35::i;:::-;1180:63;;1254:207;1279:17;1310:16;:14;:16::i;:::-;1340:8;1362:9;1385;1408:14;1436:15;1254:11;:207::i;:::-;-1:-1:-1;1506:24:57;;;;:14;:24;;;;;;;;:54;;;:35;;;;:54;;;;;:68;:81;;1578:9;;1506:24;:81;;1578:9;;1506:81;:::i;:::-;;;;-1:-1:-1;;1597:24:57;;;;:14;:24;;;;;;;;:65;;;:46;;:65;;;;;1684:9;;1663:16;:14;:16::i;:::-;-1:-1:-1;;;;;1597:83:57;-1:-1:-1;;;;;1597:83:57;;;;;;;;;;;;;:96;;;;;;;:::i;:::-;;;;-1:-1:-1;1750:79:57;;-1:-1:-1;1770:8:57;1788:1;1792:9;1803;1814:14;1750:19;:79::i;:::-;1886:53;1908:9;1919:8;1929:9;1886:21;:53::i;:::-;2006:9;-1:-1:-1;;;;;1955:82:57;1988:16;:14;:16::i;:::-;-1:-1:-1;;;;;1955:82:57;1969:17;1955:82;2017:8;2027:9;1955:82;;;;;;20666:25:644;;;20722:2;20707:18;;20700:34;20654:2;20639:18;;20492:248;1955:82:57;;;;;;;;1064:1085;795:1354;;;;;;;:::o;7523:456::-;7597:7;7659:24;;;:14;:24;;;;;7741:19;;;;7710:28;;7597:7;;7710:50;;;:::i;:::-;7698:62;;7693:248;7766:28;;7762:32;;7693:248;;;7838:24;;;:31;7863:5;7867:1;7863;:5;:::i;:::-;7838:31;;;;;;;;;;;:46;;;7819:15;:65;7815:116;;7911:5;7915:1;7911;:5;:::i;:::-;7904:12;7523:456;-1:-1:-1;;;;7523:456:57:o;7815:116::-;7796:3;;;;:::i;:::-;;;;7693:248;;;-1:-1:-1;7951:21:57;;-1:-1:-1;;;7951:21:57;;35596:2:644;7951:21:57;;;35578::644;35635:2;35615:18;;;35608:30;-1:-1:-1;;;35654:18:644;;;35647:41;35705:18;;7951:21:57;35394:335:644;3087:256:75;3199:20;:18;:20::i;:::-;3194:76;;3235:24;;-1:-1:-1;;;3235:24:75;;;;;;;:::i;3194:76::-;3280:56;3305:17;3324:11;3280:24;:56::i;12619:343:325:-;12789:12;:10;:12::i;:::-;-1:-1:-1;;;;;12778:23:325;:7;-1:-1:-1;;;;;12778:23:325;;:66;;;;12805:39;12822:7;12831:12;:10;:12::i;12805:39::-;12757:155;;;;-1:-1:-1;;;12757:155:325;;35936:2:644;12757:155:325;;;35918:21:644;35975:2;35955:18;;;35948:30;36014:34;35994:18;;;35987:62;-1:-1:-1;;;36065:18:644;;;36058:40;36115:19;;12757:155:325;35734:406:644;12757:155:325;12923:32;12934:7;12943:3;12948:6;12923:10;:32::i;:::-;12619:343;;;:::o;1189:228:72:-;1279:29;:27;:29::i;:::-;1274:85;;1324:24;;-1:-1:-1;;;1324:24:72;;;;;;;:::i;1274:85::-;1368:42;1395:14;1368:26;:42::i;2821:255:71:-;2926:24;:22;:24::i;:::-;2921:80;;2966:24;;-1:-1:-1;;;2966:24:71;;;;;;;:::i;2921:80::-;3011:58;3037:21;3060:8;3011:25;:58::i;7071:230:325:-;787:4:69;931:28;787:4;948:10;931;:28::i;:::-;7189:24:325::1;::::0;;;:14:::1;:24;::::0;;;;;;;;:42;;;7246:48;;20666:25:644;;;20707:18;;;20700:34;;;7246:48:325::1;::::0;20639:18:644;7246:48:325::1;;;;;;;7071:230:::0;;;:::o;1643:633:70:-;1727:14;1776:17;;;:11;:17;;;;;:23;1727:14;;1833:437;1857:12;1853:1;:16;1833:437;;;1937:1;1897:17;;;:11;:17;;;;;;;;:28;;;:25;;:28;;;;;;-1:-1:-1;;;;;1897:28:70;:42;1893:367;;1972:5;1963;:14;1959:133;;;2010:17;;;;:11;:17;;;;;;;;:28;;;:25;;;;:28;;;;-1:-1:-1;;;;;2010:28:70;;-1:-1:-1;2060:13:70;;-1:-1:-1;;2060:13:70;1959:133;2109:10;2118:1;2109:10;;:::i;:::-;;;1893:367;;;2144:25;2152:4;2166:1;2144:7;:25::i;:::-;:71;;;;-1:-1:-1;2178:17:70;;;;:11;:17;;;;;;;;:37;;;:25;;:37;;;;;;2173:42;;2144:71;2140:120;;;2235:10;2244:1;2235:10;;:::i;:::-;;;2140:120;1871:6;1876:1;1871:6;;:::i;:::-;;;1833:437;;;;1743:533;;1643:633;;;;:::o;1324:131:69:-;1402:4;1425:14;;;:8;:14;;;;;;;;-1:-1:-1;;;;;1425:23:69;;;;;;;;;;;;;;;1324:131::o;1003:188:54:-;1080:20;:18;:20::i;:::-;1075:76;;1116:24;;-1:-1:-1;;;1116:24:54;;;;;;;:::i;1075:76::-;1161:23;1179:4;1161:17;:23::i;2200:20:325:-;;;;;;;:::i;4281:288:75:-;4428:20;:18;:20::i;:::-;4423:76;;4464:24;;-1:-1:-1;;;4464:24:75;;;;;;;:::i;4423:76::-;4509:53;4535:8;4545:10;4557:4;4509:25;:53::i;8180:169:325:-;8242:12;;931:28:69;942:4;948:10;931;:28::i;:::-;8266:15:325::1;8284:25;8302:6;8284:17;:25::i;:::-;8266:43;;8319:23;8334:7;8319:14;:23::i;3553:153:439:-:0;3647:52;3666:12;:10;:12::i;:::-;3680:8;3690;3647:18;:52::i;2206:211:69:-;2285:4;2306:14;;;:8;:14;;;;;;;;:26;;;;;;;;;;;2301:88;;-1:-1:-1;2355:14:69;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;2355:23:69;;;;;;;;;;;;2348:30;;2301:88;-1:-1:-1;2406:4:69;2206:211;;;;:::o;632:301:466:-;700:22;756:4;-1:-1:-1;;;;;744:24:466;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;734:34;;783:9;778:125;798:15;;;778:125;;;847:45;877:4;884;;889:1;884:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;847:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;847:21:466;;-1:-1:-1;;;847:45:466:i;:::-;834:7;842:1;834:10;;;;;;;;:::i;:::-;;;;;;:58;;;;815:3;;;;;:::i;:::-;;;;778:125;;;;632:301;;;;:::o;3455:200:71:-;3533:24;:22;:24::i;:::-;3528:80;;3573:24;;-1:-1:-1;;;3573:24:71;;;;;;;:::i;3528:80::-;3617:31;3639:8;3617:21;:31::i;2683:398:70:-;2757:13;2805:17;;;:11;:17;;;;;:23;2757:13;2839:161;2863:12;2859:1;:16;2839:161;;;2943:1;2903:17;;;:11;:17;;;;;;;;:28;;;:25;;:28;;;;;;-1:-1:-1;;;;;2903:28:70;:42;2899:91;;2965:10;2974:1;2965:10;;:::i;:::-;;;2899:91;2877:6;2882:1;2877:6;;:::i;:::-;;;2839:161;;;;3013:25;3021:4;3035:1;3013:7;:25::i;:::-;3009:66;;;3054:10;3063:1;3054:10;;:::i;:::-;;;3009:66;2772:309;2683:398;;;:::o;1254:592:61:-;1409:15;1441:14;:12;:14::i;:::-;1436:70;;1471:24;;-1:-1:-1;;;1471:24:61;;;;;;;:::i;1436:70::-;1520:12;1516:58;;1548:15;;-1:-1:-1;;;1548:15:61;;36873:2:644;1548:15:61;;;36855:21:644;36912:1;36892:18;;;36885:29;-1:-1:-1;;;36930:18:644;;;36923:35;36975:18;;1548:15:61;36671:328:644;1516:58:61;1584:15;1602:21;;1584:39;;1669:55;1688:7;1697;1706:17;;1669:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1669:18:61;;-1:-1:-1;;;1669:55:61:i;:::-;1635:21;1634:90;;;;;-1:-1:-1;1757:7:61;1740:74;1786:1;1766:17;1776:7;1757;1766:17;:::i;:::-;:21;;;;:::i;:::-;1789:17;;1808:5;;1740:74;;;;;;;;;;:::i;:::-;;;;;;;;1825:14;1254:592;;;;;;;:::o;1058:147:71:-;1153:20;;-1:-1:-1;;;;;1153:20:71;;;-1:-1:-1;;;1182:14:71;;;;;;1058:147::o;8044:233:57:-;8162:31;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8162:31:57;8221:24;;;;:14;:24;;;;;;;;:49;;;:35;;;;:49;;;;;;8209:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8209:61:57;;;;;;;;;;;;8221:49;8209:61;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8044:233;;;;:::o;3897:171:69:-;3993:19;;;;:13;:19;;;;;;3982:43;;4014:10;3982;:43::i;7831:194:325:-;7915:12;;931:28:69;942:4;948:10;931;:28::i;:::-;7939:15:325::1;7957:25;7975:6;7957:17;:25::i;:::-;7939:43;;7992:26;8004:7;8013:4;;7992:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;7992:11:325::1;::::0;-1:-1:-1;;;7992:26:325:i:1;4148:1511::-:0;3111:19:436;3134:13;;;;;;3133:14;;3179:34;;;;-1:-1:-1;3197:12:436;;3212:1;3197:12;;;;:16;3179:34;3178:108;;;;3220:44;3258:4;3220:29;:44::i;:::-;3219:45;:66;;;;-1:-1:-1;3268:12:436;;;;;:17;3219:66;3157:201;;;;-1:-1:-1;;;3157:201:436;;37717:2:644;3157:201:436;;;37699:21:644;37756:2;37736:18;;;37729:30;37795:34;37775:18;;;37768:62;-1:-1:-1;;;37846:18:644;;;37839:44;37900:19;;3157:201:436;37515:410:644;3157:201:436;3368:12;:16;;-1:-1:-1;;3368:16:436;3383:1;3368:16;;;3394:65;;;;3428:13;:20;;-1:-1:-1;;3428:20:436;;;;;3394:65;4569:26:325::1;4627:24;4685:26;4797:41;4819:18:::0;4797:21:::1;:41::i;:::-;4848:28;;;;;;;;;;;;::::0;:24:::1;:28::i;:::-;4932:31;4950:12;4932:17;:31::i;:::-;4973:26;4985:13;4973:11;:26::i;:::-;5010:45;787:4:69;5041:13:325::0;5010:10:::1;:45::i;:::-;5065:38;5076:11;5089:13;5065:10;:38::i;:::-;5113:40;5124:13;5139;5113:10;:40::i;:::-;5163:37;5174:13;5197:1;5163:10;:37::i;:::-;5210:40;5221:13;5236;5210:10;:40::i;:::-;5260:43;5274:13;5289;5260;:43::i;:::-;5314:61;5336:21;5359:15;-1:-1:-1::0;;;;;5314:61:325::1;:21;:61::i;:::-;5385:56;5410:17;5429:11;-1:-1:-1::0;;;;;5385:56:325::1;:24;:56::i;:::-;5451:42;5478:14;5451:26;:42::i;:::-;5519:13;5504:12;:28;;;;5555:11;5542:10;:24;;;;5591:13;5576:12;:28;;;;5621:5;5614:4;:12;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;5636:16:325;;::::1;::::0;:6:::1;::::0;:16:::1;::::0;::::1;::::0;::::1;:::i;:::-;;4535:1124;;;3483:14:436::0;3479:99;;;3529:5;3513:21;;-1:-1:-1;;3513:21:436;;;3553:14;;-1:-1:-1;14433:36:644;;3553:14:436;;14421:2:644;14406:18;3553:14:436;;;;;;;3479:99;3101:483;4148:1511:325;;;;;;;;;;:::o;565:34:54:-;;;;;;;:::i;5166:2269:57:-;5431:15;5500:24;;;:14;:24;;;;;;;;:49;;;:35;;;;:49;;;;;5458:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5458:91:57;;;;;;;;;;5431:15;;5458:91;5500:49;5458:91;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5458:91:57;;;;-1:-1:-1;;;5580:40:57;;;;5651:31;;;;5716:26;;;;5757:28;;;;5458:91;;-1:-1:-1;5580:40:57;;5651:31;;5716:26;5757:42;5753:515;;5832:425;5868:21;:15;;:21;:::i;:::-;5832:425;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5907:28:57;;;;;;-1:-1:-1;6026:8:57;;6060:38;;;;;6124:29;;;;;6179:24;;;;;;;;:::i;:::-;5984:241;;-1:-1:-1;;;;;;38914:2:644;38950:15;;;38946:24;;5984:241:57;;;38934:37:644;38987:12;;;38980:28;;;;39024:12;;;39017:28;;;;39079:15;;;39075:24;39061:12;;;39054:46;39116:13;;5984:241:57;;;;;;;;;;;;5953:290;;;;;;5832:18;:425::i;:::-;-1:-1:-1;5815:442:57;-1:-1:-1;5753:515:57;6282:10;6278:534;;;6321:38;;;;:129;;6440:10;6321:129;;;6383:15;:38;;;6321:129;6308:142;;-1:-1:-1;;6477:15:57;:29;;;:50;;:127;;6594:10;6477:127;;;6546:15;:29;;;6477:127;6464:140;;-1:-1:-1;;6634:15:57;:29;;;:50;;:92;;;;-1:-1:-1;6724:1:57;6688:24;;;;;;;;:::i;:::-;-1:-1:-1;;;;;6688:38:57;;;6634:92;:167;;6788:13;6634:167;;;6745:24;;;;;;;;:::i;:::-;6618:183;;6278:534;6822:29;6854:14;:24;6869:8;6854:24;;;;;;;;;;;:46;;:60;6901:12;6854:60;;;;;;;;;;;:70;6915:8;-1:-1:-1;;;;;6854:70:57;-1:-1:-1;;;;;6854:70:57;;;;;;;;;;;;;6822:102;;6952:13;-1:-1:-1;;;;;6939:26:57;:9;-1:-1:-1;;;;;6939:26:57;;;:58;;;;6987:10;6969:14;:28;;6939:58;6935:115;;;7013:26;;-1:-1:-1;;;7013:26:57;;39342:2:644;7013:26:57;;;39324:21:644;39381:2;39361:18;;;39354:30;-1:-1:-1;;;39400:18:644;;;39393:46;39456:18;;7013:26:57;39140:340:644;6935:115:57;7064:14;;;:66;;-1:-1:-1;7119:10:57;7083:33;7095:21;7083:9;:33;:::i;:::-;:46;7064:66;7060:111;;;7146:14;;-1:-1:-1;;;7146:14:57;;;;;;39687:2:644;39669:21;;;39726:1;39706:18;;;39699:29;-1:-1:-1;;;39759:2:644;39744:18;;39737:34;39803:2;39788:18;;39485:327;7060:111:57;7231:17;:36;;;7219:9;7185:17;:31;;;:43;;;;:::i;:::-;:82;7181:133;;;7283:20;;-1:-1:-1;;;7283:20:57;;40019:2:644;7283:20:57;;;40001:21:644;40058:2;40038:18;;;40031:30;-1:-1:-1;;;40077:18:644;;;40070:40;40127:18;;7283:20:57;39817:334:644;7181:133:57;7328:32;;7363:15;-1:-1:-1;7324:105:57;;;7394:24;;-1:-1:-1;;;7394:24:57;;40358:2:644;7394:24:57;;;40340:21:644;40397:2;40377:18;;;40370:30;-1:-1:-1;;;40416:18:644;;;40409:44;40470:18;;7394:24:57;40156:338:644;7324:105:57;5448:1987;;;;;5166:2269;;;;;;;;;:::o;4006:395:439:-;4214:12;:10;:12::i;:::-;-1:-1:-1;;;;;4206:20:439;:4;-1:-1:-1;;;;;4206:20:439;;:60;;;;4230:36;4247:4;4253:12;:10;:12::i;4230:36::-;4185:154;;;;-1:-1:-1;;;4185:154:439;;;;;;;:::i;:::-;4349:45;4367:4;4373:2;4377;4381:6;4389:4;4349:17;:45::i;1186:320:462:-;-1:-1:-1;;;;;1476:19:462;;:23;;;1186:320::o;1600:349:439:-;1724:4;-1:-1:-1;;;;;;1759:52:439;;-1:-1:-1;;;1759:52:439;;:131;;-1:-1:-1;;;;;;;1827:63:439;;-1:-1:-1;;;1827:63:439;1759:131;:183;;;-1:-1:-1;;;;;;;;;;1168:51:471;;;1906:36:439;1060:166:471;2849:390:52;2911:13;2936:25;2964:17;1729:8;:15;;1655:96;2964:17;2936:45;;2991:24;3018:8;2991:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3042:9;3037:161;3061:17;3057:1;:21;3037:161;;;3117:7;3125:1;3117:10;;;;;;;;:::i;:::-;;;;;;;3106:8;:21;3102:86;;;3154:7;:19;3162:7;3170:1;3162:10;;;;;;;;:::i;:::-;;;;;;;3154:19;;;;;;;;;;;3147:26;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2849:390;;;:::o;3102:86::-;3080:6;3085:1;3080:6;;:::i;:::-;;;3037:161;;;-1:-1:-1;3207:25:52;;-1:-1:-1;;;3207:25:52;;40701:2:644;3207:25:52;;;40683:21:644;40740:2;40720:18;;;40713:30;-1:-1:-1;;;40759:18:644;;;40752:45;40814:18;;3207:25:52;40499:339:644;403:703:467;459:13;676:10;672:51;;-1:-1:-1;;702:10:467;;;;;;;;;;;;-1:-1:-1;;;702:10:467;;;;;403:703::o;672:51::-;747:5;732:12;786:75;793:9;;786:75;;818:8;;;;:::i;:::-;;-1:-1:-1;840:10:467;;-1:-1:-1;848:2:467;840:10;;:::i;:::-;;;786:75;;;870:19;902:6;-1:-1:-1;;;;;892:17:467;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;892:17:467;;870:39;;919:150;926:10;;919:150;;952:11;962:1;952:11;;:::i;:::-;;-1:-1:-1;1020:10:467;1028:2;1020:5;:10;:::i;:::-;1007:24;;:2;:24;:::i;:::-;994:39;;977:6;984;977:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;977:56:467;;;;;;;;-1:-1:-1;1047:11:467;1056:2;1047:11;;:::i;:::-;;;919:150;;11124:127:325;11180:4;11203:41;11180:4;11231:12;:10;:12::i;11203:41::-;11196:48;;11124:127;:::o;1421:172:68:-;1501:6;;;-1:-1:-1;;;;;1517:18:68;;;-1:-1:-1;;;;;;1517:18:68;;;;;;;1551:35;;1501:6;;;1517:18;1501:6;;1551:35;;1480:18;;1551:35;1470:123;1421:172;:::o;2371:375:71:-;2499:6;2481:15;:24;2477:80;;;2521:25;;-1:-1:-1;;;2521:25:71;;;;;;;:::i;2477:80::-;2567:14;:40;;-1:-1:-1;;;;;;2617:44:71;-1:-1:-1;;;2567:40:71;;;;-1:-1:-1;;;;;;2617:44:71;;-1:-1:-1;;;;;2617:44:71;;;;;;;;2677:62;;755:25:644;;;2677:62:71;;743:2:644;728:18;2677:62:71;;;;;;;;2371:375;;:::o;5557:495:69:-;5645:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;5645:23:69;;;;;;;;;;;;5640:406;;5827:43;5857:7;-1:-1:-1;;;;;5827:43:69;5867:2;5827:21;:43::i;:::-;5941:40;5971:4;5978:2;5941:21;:40::i;:::-;5736:267;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;5736:267:69;;;;;;;;;;-1:-1:-1;;;5684:351:69;;;;;;;:::i;14106:231:325:-;14255:14;14292:38;:36;:38::i;6643:1115:439:-;6863:7;:14;6849:3;:10;:28;6841:81;;;;-1:-1:-1;;;6841:81:439;;;;;;;:::i;:::-;-1:-1:-1;;;;;6940:16:439;;6932:66;;;;-1:-1:-1;;;6932:66:439;;;;;;;:::i;:::-;7009:16;7028:12;:10;:12::i;:::-;7009:31;;7051:60;7072:8;7082:4;7088:2;7092:3;7097:7;7106:4;7051:20;:60::i;:::-;7127:9;7122:411;7146:3;:10;7142:1;:14;7122:411;;;7177:10;7190:3;7194:1;7190:6;;;;;;;;:::i;:::-;;;;;;;7177:19;;7210:14;7227:7;7235:1;7227:10;;;;;;;;:::i;:::-;;;;;;;;;;;;7252:19;7274:13;;;:9;:13;;;;;;-1:-1:-1;;;;;7274:19:439;;;;;;;;;;;;7227:10;;-1:-1:-1;7315:21:439;;;;7307:76;;;;-1:-1:-1;;;7307:76:439;;;;;;;:::i;:::-;7425:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;7425:19:439;;;;;;;;;;7447:20;;;7425:42;;7495:17;;;;;;;:27;;7447:20;;7425:13;7495:27;;7447:20;;7495:27;:::i;:::-;;;;;;;;7163:370;;;7158:3;;;;:::i;:::-;;;7122:411;;;;7578:2;-1:-1:-1;;;;;7548:47:439;7572:4;-1:-1:-1;;;;;7548:47:439;7562:8;-1:-1:-1;;;;;7548:47:439;;7582:3;7587:7;7548:47;;;;;;;:::i;:::-;;;;;;;;7676:75;7712:8;7722:4;7728:2;7732:3;7737:7;7746:4;7676:35;:75::i;:::-;6831:927;6643:1115;;;;;:::o;3475:152:70:-;3554:31;3571:4;3577:7;3554:16;:31::i;:::-;3595:25;3606:4;3612:7;3595:10;:25::i;3205:157::-;3285:32;3303:4;3309:7;3285:17;:32::i;:::-;4084:11;4098:17;;;:11;:17;;;;;;;;-1:-1:-1;;;;;4098:34:70;;;;;:25;;;:34;;;;;;;;4150:30;;:25;;;;:30;;;;;4143:37;;-1:-1:-1;;;;;;4143:37:70;;;4197:34;;;;4190:41;2043:269:71;;:::o;8592:391:325:-;8833:24;;;;:14;:24;;;;;;:29;;:94;;-1:-1:-1;8903:24:325;;;;:14;:24;;;;;;;;;8866:11;:21;;;;;;;:33;;8890:9;;8866:33;:::i;:::-;:61;;8833:94;8812:164;;;;-1:-1:-1;;;8812:164:325;;43991:2:644;8812:164:325;;;43973:21:644;44030:2;44010:18;;;44003:30;-1:-1:-1;;;44049:18:644;;;44042:53;44112:18;;8812:164:325;43789:347:644;8812:164:325;8592:391;;;;;;;:::o;13989:111::-;14055:7;14081:12;:10;:12::i;9073:1236::-;9298:19;9294:99;;9341:9;:14;9333:29;;;;-1:-1:-1;;;9333:29:325;;;;;;;:::i;:::-;9376:7;;9294:99;9404:28;9434:21;9459:20;:18;:20::i;:::-;9403:76;;-1:-1:-1;9403:76:325;-1:-1:-1;9490:22:325;-1:-1:-1;;;;;9515:35:325;;;:176;;9670:21;9515:176;;;9601:1;9566:23;;;:13;:23;;;;;;-1:-1:-1;;;;;9566:23:325;:37;:88;;9631:23;;;;:13;:23;;;;;;-1:-1:-1;;;;;9631:23:325;9566:88;;;9606:22;:20;:22::i;:::-;9490:201;-1:-1:-1;9702:18:325;9723:33;9742:14;9723:16;:33;:::i;:::-;9702:54;-1:-1:-1;9766:20:325;2734:6;9790:27;;;;9702:54;9790:27;:::i;:::-;9789:39;;;;:::i;:::-;9766:62;-1:-1:-1;9839:18:325;-1:-1:-1;;;;;9871:45:325;;408:42:284;9871:45:325;9867:176;;;-1:-1:-1;9948:9:325;:23;;9867:176;;;-1:-1:-1;10018:9:325;:14;9867:176;10060:13;10052:28;;;;-1:-1:-1;;;10052:28:325;;;;;;;:::i;:::-;10091:97;10128:9;10139:12;:10;:12::i;:::-;10153:20;10175:12;10091:36;:97::i;:::-;10198:104;10235:9;10246:12;:10;:12::i;:::-;10260:14;10276:25;10289:12;10276:10;:25;:::i;:::-;10198:36;:104::i;10362:205::-;10513:47;10519:3;10524:8;10534:21;10513:47;;;;;;;;;;;;:5;:47::i;3430:334:75:-;3549:6;3535:11;:20;3531:76;;;3571:25;;-1:-1:-1;;;3571:25:75;;;;;;;:::i;3531:76::-;3617:16;:36;;-1:-1:-1;;;;;3617:36:75;;-1:-1:-1;;;;;;3663:32:75;;;;;-1:-1:-1;;;3663:32:75;;;;;;;;3711:46;;755:25:644;;;3711:46:75;;743:2:644;728:18;3711:46:75;609:177:644;12241:943:439;-1:-1:-1;;;;;12388:18:439;;12380:66;;;;-1:-1:-1;;;12380:66:439;;44673:2:644;12380:66:439;;;44655:21:644;44712:2;44692:18;;;44685:30;44751:34;44731:18;;;44724:62;-1:-1:-1;;;44802:18:644;;;44795:33;44845:19;;12380:66:439;44471:399:644;12380:66:439;12478:7;:14;12464:3;:10;:28;12456:81;;;;-1:-1:-1;;;12456:81:439;;;;;;;:::i;:::-;12548:16;12567:12;:10;:12::i;:::-;12548:31;;12590:66;12611:8;12621:4;12635:1;12639:3;12644:7;12590:66;;;;;;;;;;;;:20;:66::i;:::-;12672:9;12667:364;12691:3;:10;12687:1;:14;12667:364;;;12722:10;12735:3;12739:1;12735:6;;;;;;;;:::i;:::-;;;;;;;12722:19;;12755:14;12772:7;12780:1;12772:10;;;;;;;;:::i;:::-;;;;;;;;;;;;12797:19;12819:13;;;:9;:13;;;;;;-1:-1:-1;;;;;12819:19:439;;;;;;;;;;;;12772:10;;-1:-1:-1;12860:21:439;;;;12852:70;;;;-1:-1:-1;;;12852:70:439;;45077:2:644;12852:70:439;;;45059:21:644;45116:2;45096:18;;;45089:30;45155:34;45135:18;;;45128:62;-1:-1:-1;;;45206:18:644;;;45199:34;45250:19;;12852:70:439;44875:400:644;12852:70:439;12964:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;12964:19:439;;;;;;;;;;12986:20;;12964:42;;12703:3;;;;:::i;:::-;;;;12667:364;;;;13084:1;-1:-1:-1;;;;;13046:55:439;13070:4;-1:-1:-1;;;;;13046:55:439;13060:8;-1:-1:-1;;;;;13046:55:439;;13088:3;13093:7;13046:55;;;;;;;:::i;:::-;;;;;;;;13112:65;;;;;;;;;13156:1;13112:65;;;12370:814;12241:943;;;:::o;1499:170:72:-;1578:9;:26;;-1:-1:-1;;;;;;1578:26:72;-1:-1:-1;;;;;1578:26:72;;;;;;;;1619:43;;;;-1:-1:-1;;1619:43:72;1499:170;:::o;3129:261:71:-;3232:15;:26;;;3268:20;:44;;-1:-1:-1;;;;;;3268:44:71;-1:-1:-1;;;;;3268:44:71;;;;;3328:55;;;;;;3268:44;;3232:26;;3328:55;:::i;:::-;;;;;;;;3129:261;;:::o;1273:185:54:-;1339:21;1363:11;1339:35;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1384:18:54;;1339:35;;-1:-1:-1;1384:18:54;;:11;;-1:-1:-1;1384:18:54;;;;-1:-1:-1;1384:18:54;-1:-1:-1;1384:18:54;:::i;:::-;;1418:33;1437:7;1446:4;1418:33;;;;;;;:::i;4671:362:75:-;4818:6;4811:4;:13;4807:69;;;4840:25;;-1:-1:-1;;;4840:25:75;;;;;;;:::i;4807:69::-;4918:49;;;;;;;;-1:-1:-1;;;;;4918:49:75;;;;;;;;;;;;;-1:-1:-1;4886:29:75;;;:19;:29;;;;;:81;;;;-1:-1:-1;;;;;;4886:81:75;;;;;;;;;;;-1:-1:-1;4886:81:75;;;;;;;4983:43;;755:25:644;;;4918:49:75;;4886:29;;4983:43;;728:18:644;4983:43:75;;;;;;;;4671:362;;;:::o;4185:255:52:-;4246:29;4278:17;;;:7;:17;;;;;4246:49;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4345:1;4319:15;4313:29;:33;4305:59;;;;-1:-1:-1;;;4305:59:52;;45870:2:644;4305:59:52;;;45852:21:644;45909:2;45889:18;;;45882:30;-1:-1:-1;;;45928:18:644;;;45921:43;45981:18;;4305:59:52;45668:337:644;4305:59:52;4374:21;;;;:11;:21;;;;;;:28;;-1:-1:-1;;4374:28:52;4398:4;4374:28;;;4417:16;;;4374:21;4417:16;4236:204;4185:255;:::o;13320:323:439:-;13470:8;-1:-1:-1;;;;;13461:17:439;:5;-1:-1:-1;;;;;13461:17:439;;;13453:71;;;;-1:-1:-1;;;13453:71:439;;46212:2:644;13453:71:439;;;46194:21:644;46251:2;46231:18;;;46224:30;46290:34;46270:18;;;46263:62;-1:-1:-1;;;46341:18:644;;;46334:39;46390:19;;13453:71:439;46010:405:644;13453:71:439;-1:-1:-1;;;;;13534:25:439;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;13534:46:439;;;;;;;;;;13595:41;;1413::644;;;13595::439;;1386:18:644;13595:41:439;1273:187:644;1119:455:466;1202:12;1234:37;1264:6;1234:29;:37::i;:::-;1226:88;;;;-1:-1:-1;;;1226:88:466;;46622:2:644;1226:88:466;;;46604:21:644;46661:2;46641:18;;;46634:30;46700:34;46680:18;;;46673:62;-1:-1:-1;;;46751:18:644;;;46744:36;46797:19;;1226:88:466;46420:402:644;1226:88:466;1385:12;1399:23;1426:6;-1:-1:-1;;;;;1426:19:466;1446:4;1426:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1384:67;;;;1468:99;1504:7;1513:10;1468:99;;;;;;;;;;;;;;;;;:35;:99::i;:::-;1461:106;1119:455;-1:-1:-1;;;;;1119:455:466:o;3698:157:71:-;3774:15;:26;;3792:8;;3774:15;-1:-1:-1;;;;3774:26:71;-1:-1:-1;;;3792:8:71;3774:26;;;;;;;;:::i;:::-;;;;;;3816:32;3839:8;3816:32;;;;;;:::i;:::-;;;;;;;;3698:157;:::o;12026:127:325:-;12090:4;12113:33;12121:10;;12133:12;:10;:12::i;4535:362:52:-;4685:25;;4749:24;4760:13;4749:8;:24;:::i;:::-;4821:8;:22;;;;;;;;;;;;;-1:-1:-1;4854:16:52;;;:7;4821:22;4854:16;;;;;;;:36;;4739:34;;-1:-1:-1;4739:34:52;;-1:-1:-1;4854:36:52;;:16;;:36;;;;:::i;:::-;;4535:362;;;;;;:::o;3851:246::-;3942:21;;;;:11;:21;;;;;;;;3941:22;3933:47;;;;-1:-1:-1;;;3933:47:52;;47308:2:644;3933:47:52;;;47290:21:644;47347:2;47327:18;;;47320:30;-1:-1:-1;;;47366:18:644;;;47359:42;47418:18;;3933:47:52;47106:336:644;3933:47:52;3990:17;;;;:7;:17;;;;;;;;:28;;;;;;;;:::i;:::-;;4033:57;4053:26;4070:8;4053:16;:26::i;:::-;4033:57;;;20666:25:644;;;20722:2;20707:18;;20700:34;;;20639:18;4033:57:52;20492:248:644;470:194:209;4910:13:436;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:436;;;;;;;:::i;:::-;572:26:209::1;:24;:26::i;:::-;608:49;640:16;608:31;:49::i;1423:110:439:-:0;4910:13:436;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:436;;;;;;;:::i;:::-;1513:13:439::1;1521:4;1513:7;:13::i;4743:245:69:-:0;4826:25;4854:19;;;:13;:19;;;;;;;;4883:31;;;;4929:52;;4854:19;;4905:9;;4854:19;;4868:4;;4929:52;;4826:25;4929:52;4816:172;4743:245;;:::o;898:906:286:-;1019:4;;1067;1019;;1109:567;1133:5;:12;1129:1;:16;1109:567;;;1166:10;1175:1;1166:10;;:::i;:::-;;;1190:20;1213:5;1219:1;1213:8;;;;;;;;:::i;:::-;;;;;;;1190:31;;1256:12;1240;:28;1236:430;;1391:44;;;;;;48016:19:644;;;48051:12;;;48044:28;;;48088:12;;1391:44:286;;;;;;;;;;;;1381:55;;;;;;1366:70;;1236:430;;;1578:44;;;;;;48016:19:644;;;48051:12;;;48044:28;;;48088:12;;1578:44:286;;;;;;;;;;;;1568:55;;;;;;1553:70;;1650:1;1641:10;;;;;:::i;:::-;;;1236:430;-1:-1:-1;1147:3:286;;;;:::i;:::-;;;;1109:567;;;-1:-1:-1;1769:20:286;;;;;-1:-1:-1;;;;898:906:286:o;5350:947:439:-;-1:-1:-1;;;;;5531:16:439;;5523:66;;;;-1:-1:-1;;;5523:66:439;;;;;;;:::i;:::-;5600:16;5619:12;:10;:12::i;:::-;5600:31;;5641:20;5664:21;5682:2;5664:17;:21::i;:::-;5641:44;;5695:24;5722:25;5740:6;5722:17;:25::i;:::-;5695:52;;5758:60;5779:8;5789:4;5795:2;5799:3;5804:7;5813:4;5758:20;:60::i;:::-;5829:19;5851:13;;;:9;:13;;;;;;;;-1:-1:-1;;;;;5851:19:439;;;;;;;;;;5888:21;;;;5880:76;;;;-1:-1:-1;;;5880:76:439;;;;;;;:::i;:::-;5990:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;5990:19:439;;;;;;;;;;6012:20;;;5990:42;;6052:17;;;;;;;:27;;6012:20;;5990:13;6052:27;;6012:20;;6052:27;:::i;:::-;;;;-1:-1:-1;;6095:46:439;;;20666:25:644;;;20722:2;20707:18;;20700:34;;;-1:-1:-1;;;;;6095:46:439;;;;;;;;;;;;;;20639:18:644;6095:46:439;;;;;;;6222:68;6253:8;6263:4;6269:2;6273;6277:6;6285:4;6222:30;:68::i;:::-;5513:784;;;;5350:947;;;;;:::o;1565:441:292:-;1640:13;1665:19;1697:10;1701:6;1697:1;:10;:::i;:::-;:14;;1710:1;1697:14;:::i;:::-;-1:-1:-1;;;;;1687:25:292;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1687:25:292;;1665:47;;-1:-1:-1;;;1722:6:292;1729:1;1722:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1722:15:292;;;;;;;;;-1:-1:-1;;;1747:6:292;1754:1;1747:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1747:15:292;;;;;;;;-1:-1:-1;1777:9:292;1789:10;1793:6;1789:1;:10;:::i;:::-;:14;;1802:1;1789:14;:::i;:::-;1777:26;;1772:132;1809:1;1805;:5;1772:132;;;-1:-1:-1;;;1856:5:292;1864:3;1856:11;1843:25;;;;;;;:::i;:::-;;;;1831:6;1838:1;1831:9;;;;;;;;:::i;:::-;;;;:37;-1:-1:-1;;;;;1831:37:292;;;;;;;;-1:-1:-1;1892:1:292;1882:11;;;;;1812:3;;;:::i;:::-;;;1772:132;;;-1:-1:-1;1921:10:292;;1913:55;;;;-1:-1:-1;;;1913:55:292;;48313:2:644;1913:55:292;;;48295:21:644;;;48332:18;;;48325:30;48391:34;48371:18;;;48364:62;48443:18;;1913:55:292;48111:356:644;1913:55:292;1992:6;1565:441;-1:-1:-1;;;1565:441:292:o;1058:401:209:-;1120:14;1150:30;1169:10;1150:18;:30::i;:::-;1146:307;;;-1:-1:-1;;;1352:14:209;1348:23;1335:37;1331:2;1327:46;1058:401;:::o;1146:307::-;-1:-1:-1;929:10:464;;11124:127:325:o;1146:307:209:-;1058:401;:::o;13032:951:325:-;13442:33;13450:12;;13472:1;13442:7;:33::i;:::-;13441:34;:56;;;;-1:-1:-1;;;;;;13479:18:325;;;;13441:56;:76;;;;-1:-1:-1;;;;;;13501:16:325;;;;13441:76;13437:212;;;13541:27;13549:12;;13563:4;13541:7;:27::i;:::-;:56;;;;13572:25;13580:12;;13594:2;13572:7;:25::i;:::-;13533:105;;;;-1:-1:-1;;;13533:105:325;;48674:2:644;13533:105:325;;;48656:21:644;48713:2;48693:18;;;48686:30;48752:34;48732:18;;;48725:62;-1:-1:-1;;;48803:18:644;;;48796:34;48847:19;;13533:105:325;48472:400:644;13533:105:325;-1:-1:-1;;;;;13663:18:325;;13659:155;;13702:9;13697:107;13721:3;:10;13717:1;:14;13697:107;;;13779:7;13787:1;13779:10;;;;;;;;:::i;:::-;;;;;;;13756:11;:19;13768:3;13772:1;13768:6;;;;;;;;:::i;:::-;;;;;;;13756:19;;;;;;;;;;;;:33;;;;;;;:::i;:::-;;;;-1:-1:-1;13733:3:325;;-1:-1:-1;13733:3:325;;:::i;:::-;;;13697:107;;;;13659:155;-1:-1:-1;;;;;13828:16:325;;13824:153;;13865:9;13860:107;13884:3;:10;13880:1;:14;13860:107;;;13942:7;13950:1;13942:10;;;;;;;;:::i;:::-;;;;;;;13919:11;:19;13931:3;13935:1;13931:6;;;;;;;;:::i;:::-;;;;;;;13919:19;;;;;;;;;;;;:33;;;;;;;:::i;:::-;;;;-1:-1:-1;13896:3:325;;-1:-1:-1;13896:3:325;;:::i;:::-;;;13860:107;;16698:814:439;16930:15;:2;-1:-1:-1;;;;;16930:13:439;;:15::i;:::-;16926:580;;;16965:90;;-1:-1:-1;;;16965:90:439;;-1:-1:-1;;;;;16965:54:439;;;;;:90;;17020:8;;17030:4;;17036:3;;17041:7;;17050:4;;16965:90;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16965:90:439;;;;;;;;-1:-1:-1;;16965:90:439;;;;;;;;;;;;:::i;:::-;;;16961:535;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;17372:6;17365:14;;-1:-1:-1;;;17365:14:439;;;;;;;;:::i;16961:535::-;;;17419:62;;-1:-1:-1;;;17419:62:439;;51025:2:644;17419:62:439;;;51007:21:644;51064:2;51044:18;;;51037:30;51103:34;51083:18;;;51076:62;-1:-1:-1;;;51154:18:644;;;51147:50;51214:19;;17419:62:439;50823:416:644;16961:535:439;-1:-1:-1;;;;;;17134:71:439;;-1:-1:-1;;;17134:71:439;17130:168;;17229:50;;-1:-1:-1;;;17229:50:439;;;;;;;:::i;5036:168:69:-;5114:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;5114:23:69;;;;;;;;;;:30;;-1:-1:-1;;5114:30:69;5140:4;5114:30;;;5159:38;5186:10;;5123:4;;5159:38;;5114:14;5159:38;5036:168;;:::o;3690:253:70:-;3760:11;3774:17;;;:11;:17;;;;;:23;;;3834:1;;3774:17;3807:28;3834:1;3774:23;3807:28;:::i;:::-;;;;-1:-1:-1;;3846:17:70;;;;:11;:17;;;;;;;;:30;;;:25;;;:30;;;;;:40;;-1:-1:-1;;;;;3846:40:70;;;-1:-1:-1;;;;;;3846:40:70;;;;;;;3896:34;;;:25;;;;:34;;;;:40;3690:253::o;5253:204:69:-;5332:25;5343:4;5349:7;5332:10;:25::i;:::-;5374:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;5374:23:69;;;;;;;;;;5367:30;;-1:-1:-1;;5367:30:69;;;5412:38;5439:10;;5383:4;;5412:38;;5374:14;5412:38;5253:204;;:::o;508:385:284:-;659:12;655:49;;687:7;;655:49;-1:-1:-1;;;;;718:25:284;;408:42;718:25;714:173;;;759:37;783:3;788:7;759:23;:37::i;:::-;714:173;;;827:49;845:9;856:5;863:3;868:7;827:17;:49::i;9040:709:439:-;-1:-1:-1;;;;;9187:16:439;;9179:62;;;;-1:-1:-1;;;9179:62:439;;51855:2:644;9179:62:439;;;51837:21:644;51894:2;51874:18;;;51867:30;51933:34;51913:18;;;51906:62;-1:-1:-1;;;51984:18:644;;;51977:31;52025:19;;9179:62:439;51653:397:644;9179:62:439;9252:16;9271:12;:10;:12::i;:::-;9252:31;;9293:20;9316:21;9334:2;9316:17;:21::i;:::-;9293:44;;9347:24;9374:25;9392:6;9374:17;:25::i;:::-;9347:52;;9410:66;9431:8;9449:1;9453:2;9457:3;9462:7;9471:4;9410:20;:66::i;:::-;9487:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;9487:17:439;;;;;;;;;:27;;9508:6;;9487:13;:27;;9508:6;;9487:27;:::i;:::-;;;;-1:-1:-1;;9529:52:439;;;20666:25:644;;;20722:2;20707:18;;20700:34;;;-1:-1:-1;;;;;9529:52:439;;;;9562:1;;9529:52;;;;;;20639:18:644;9529:52:439;;;;;;;9668:74;9699:8;9717:1;9721:2;9725;9729:6;9737:4;9668:30;:74::i;6622:742:462:-;6768:12;6796:7;6792:566;;;-1:-1:-1;6826:10:462;6819:17;;6792:566;6937:17;;:21;6933:415;;7181:10;7175:17;7241:15;7228:10;7224:2;7220:19;7213:44;6933:415;7320:12;7313:20;;-1:-1:-1;;;7313:20:462;;;;;;;;:::i;3307:459:52:-;3374:7;3393:25;3421:17;1729:8;:15;;1655:96;3421:17;3393:45;;3448:24;3475:8;3448:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3499:9;3494:231;3518:17;3514:1;:21;3494:231;;;3572:7;3580:1;3572:10;;;;;;;;:::i;:::-;;;;;;;3560:8;:22;3556:159;;;3606:5;;3602:73;;3642:7;3650:5;3654:1;3650;:5;:::i;:::-;3642:14;;;;;;;;:::i;:::-;;;;;;;3635:21;;;;;3307:459;;;:::o;3602:73::-;-1:-1:-1;3699:1:52;;3307:459;-1:-1:-1;;;;3307:459:52:o;3556:159::-;3537:3;;;;:::i;:::-;;;;3494:231;;;-1:-1:-1;3734:25:52;;-1:-1:-1;;;3734:25:52;;52257:2:644;3734:25:52;;;52239:21:644;52296:2;52276:18;;;52269:30;-1:-1:-1;;;52315:18:644;;;52308:45;52370:18;;3734:25:52;52055:339:644;776:69:464;4910:13:436;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:436;;;;;;;:::i;:::-;776::464:o;670:242:209:-;4910:13:436;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:436;;;;;;;:::i;:::-;787:9:209::1;782:124;806:16;:23;802:1;:27;782:124;;;891:4;850:17;:38;868:16;885:1;868:19;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;-1:-1:-1;;;;;850:38:209::1;::::0;;;::::1;::::0;;;;;;-1:-1:-1;850:38:209;:45;;-1:-1:-1;;850:45:209::1;::::0;::::1;;::::0;;;::::1;::::0;;831:3;::::1;::::0;::::1;:::i;:::-;;;;782:124;;8581:86:439::0;8647:13;;;;:4;;:13;;;;;:::i;17518:193::-;17637:16;;;17651:1;17637:16;;;;;;;;;17584;;17612:22;;17637:16;;;;;;;;;;;;-1:-1:-1;17637:16:439;17612:41;;17674:7;17663:5;17669:1;17663:8;;;;;;;;:::i;:::-;;;;;;;;;;:18;17699:5;17518:193;-1:-1:-1;;17518:193:439:o;15945:747::-;16152:15;:2;-1:-1:-1;;;;;16152:13:439;;:15::i;:::-;16148:538;;;16187:83;;-1:-1:-1;;;16187:83:439;;-1:-1:-1;;;;;16187:49:439;;;;;:83;;16237:8;;16247:4;;16253:2;;16257:6;;16265:4;;16187:83;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16187:83:439;;;;;;;;-1:-1:-1;;16187:83:439;;;;;;;;;;;;:::i;:::-;;;16183:493;;;;:::i;:::-;-1:-1:-1;;;;;;16319:66:439;;-1:-1:-1;;;16319:66:439;16315:163;;16409:50;;-1:-1:-1;;;16409:50:439;;;;;;;:::i;2532:292:284:-;2714:12;2732:2;-1:-1:-1;;;;;2732:7:284;2748:5;2732:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2713:46;;;2777:7;2769:48;;;;-1:-1:-1;;;2769:48:284;;53377:2:644;2769:48:284;;;53359:21:644;53416:2;53396:18;;;53389:30;-1:-1:-1;;;53435:18:644;;;53428:58;53503:18;;2769:48:284;53175:352:644;2073:396:284;2234:3;-1:-1:-1;;;;;2225:12:284;:5;-1:-1:-1;;;;;2225:12:284;;2221:49;;;2253:7;;2221:49;-1:-1:-1;;;;;2284:22:284;;2301:4;2284:22;2280:183;;;2322:44;-1:-1:-1;;;;;2322:30:284;;2353:3;2358:7;2322:30;:44::i;2280:183::-;2397:55;-1:-1:-1;;;;;2397:34:284;;2432:5;2439:3;2444:7;2397:34;:55::i;735:205:226:-;847:86;867:5;897:23;;;922:2;926:5;874:58;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;874:58:226;;;;;;;;;;;;;;-1:-1:-1;;;;;874:58:226;-1:-1:-1;;;;;;874:58:226;;;;;;;;;;847:19;:86::i;946:241::-;1111:68;;-1:-1:-1;;;;;53790:15:644;;;1111:68:226;;;53772:34:644;53842:15;;53822:18;;;53815:43;53874:18;;;53867:34;;;1084:96:226;;1104:5;;-1:-1:-1;;;1134:27:226;53707:18:644;;1111:68:226;53532:375:644;3241:706:226;3660:23;3686:69;3714:4;3686:69;;;;;;;;;;;;;;;;;3694:5;-1:-1:-1;;;;;3686:27:226;;;:69;;;;;:::i;:::-;3769:17;;3660:95;;-1:-1:-1;3769:21:226;3765:176;;3864:10;3853:30;;;;;;;;;;;;:::i;:::-;3845:85;;;;-1:-1:-1;;;3845:85:226;;54364:2:644;3845:85:226;;;54346:21:644;54403:2;54383:18;;;54376:30;54442:34;54422:18;;;54415:62;-1:-1:-1;;;54493:18:644;;;54486:40;54543:19;;3845:85:226;54162:406:644;3827:223:288;3960:12;3991:52;4013:6;4021:4;4027:1;4030:12;3960;5202:18;5213:6;5202:10;:18::i;:::-;5194:60;;;;-1:-1:-1;;;5194:60:288;;55182:2:644;5194:60:288;;;55164:21:644;55221:2;55201:18;;;55194:30;55260:31;55240:18;;;55233:59;55309:18;;5194:60:288;54980:353:644;5194:60:288;5266:12;5280:23;5307:6;-1:-1:-1;;;;;5307:11:288;5327:5;5335:4;5307:33;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5265:75;;;;5357:51;5374:7;5383:10;5395:12;5357:16;:51::i;:::-;5350:58;4914:501;-1:-1:-1;;;;;;;4914:501:288:o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:131:644;-1:-1:-1;;;;;89:31:644;;79:42;;69:70;;135:1;132;125:12;150:134;218:20;;247:31;218:20;247:31;:::i;:::-;150:134;;;:::o;289:315::-;357:6;365;418:2;406:9;397:7;393:23;389:32;386:52;;;434:1;431;424:12;386:52;473:9;460:23;492:31;517:5;492:31;:::i;:::-;542:5;594:2;579:18;;;;566:32;;-1:-1:-1;;;289:315:644:o;791:131::-;-1:-1:-1;;;;;;865:32:644;;855:43;;845:71;;912:1;909;902:12;927:245;985:6;1038:2;1026:9;1017:7;1013:23;1009:32;1006:52;;;1054:1;1051;1044:12;1006:52;1093:9;1080:23;1112:30;1136:5;1112:30;:::i;1465:258::-;1537:1;1547:113;1561:6;1558:1;1555:13;1547:113;;;1637:11;;;1631:18;1618:11;;;1611:39;1583:2;1576:10;1547:113;;;1678:6;1675:1;1672:13;1669:48;;;-1:-1:-1;;1713:1:644;1695:16;;1688:27;1465:258::o;1728:::-;1770:3;1808:5;1802:12;1835:6;1830:3;1823:19;1851:63;1907:6;1900:4;1895:3;1891:14;1884:4;1877:5;1873:16;1851:63;:::i;:::-;1968:2;1947:15;-1:-1:-1;;1943:29:644;1934:39;;;;1975:4;1930:50;;1728:258;-1:-1:-1;;1728:258:644:o;1991:220::-;2140:2;2129:9;2122:21;2103:4;2160:45;2201:2;2190:9;2186:18;2178:6;2160:45;:::i;2216:203::-;-1:-1:-1;;;;;2380:32:644;;;;2362:51;;2350:2;2335:18;;2216:203::o;2424:180::-;2483:6;2536:2;2524:9;2515:7;2511:23;2507:32;2504:52;;;2552:1;2549;2542:12;2504:52;-1:-1:-1;2575:23:644;;2424:180;-1:-1:-1;2424:180:644:o;2609:247::-;2668:6;2721:2;2709:9;2700:7;2696:23;2692:32;2689:52;;;2737:1;2734;2727:12;2689:52;2776:9;2763:23;2795:31;2820:5;2795:31;:::i;2861:390::-;2947:8;2957:6;3011:3;3004:4;2996:6;2992:17;2988:27;2978:55;;3029:1;3026;3019:12;2978:55;-1:-1:-1;3052:20:644;;-1:-1:-1;;;;;3084:30:644;;3081:50;;;3127:1;3124;3117:12;3081:50;3164:4;3156:6;3152:17;3140:29;;3224:3;3217:4;3207:6;3204:1;3200:14;3192:6;3188:27;3184:38;3181:47;3178:67;;;3241:1;3238;3231:12;3178:67;2861:390;;;;;:::o;3256:118::-;3342:5;3335:13;3328:21;3321:5;3318:32;3308:60;;3364:1;3361;3354:12;3379:692;3515:6;3523;3531;3539;3592:2;3580:9;3571:7;3567:23;3563:32;3560:52;;;3608:1;3605;3598:12;3560:52;3644:9;3631:23;3621:33;;3705:2;3694:9;3690:18;3677:32;-1:-1:-1;;;;;3724:6:644;3721:30;3718:50;;;3764:1;3761;3754:12;3718:50;3803:93;3888:7;3879:6;3868:9;3864:22;3803:93;:::i;:::-;3915:8;;-1:-1:-1;3777:119:644;-1:-1:-1;;4000:2:644;3985:18;;3972:32;4013:28;3972:32;4013:28;:::i;:::-;3379:692;;;;-1:-1:-1;3379:692:644;;-1:-1:-1;;3379:692:644:o;4443:315::-;4511:6;4519;4572:2;4560:9;4551:7;4547:23;4543:32;4540:52;;;4588:1;4585;4578:12;4540:52;4624:9;4611:23;4601:33;;4684:2;4673:9;4669:18;4656:32;4697:31;4722:5;4697:31;:::i;:::-;4747:5;4737:15;;;4443:315;;;;;:::o;4763:248::-;4831:6;4839;4892:2;4880:9;4871:7;4867:23;4863:32;4860:52;;;4908:1;4905;4898:12;4860:52;-1:-1:-1;;4931:23:644;;;5001:2;4986:18;;;4973:32;;-1:-1:-1;4763:248:644:o;5016:274::-;-1:-1:-1;;;;;5208:32:644;;;;5190:51;;5272:2;5257:18;;5250:34;5178:2;5163:18;;5016:274::o;5295:127::-;5356:10;5351:3;5347:20;5344:1;5337:31;5387:4;5384:1;5377:15;5411:4;5408:1;5401:15;5427:249;5537:2;5518:13;;-1:-1:-1;;5514:27:644;5502:40;;-1:-1:-1;;;;;5557:34:644;;5593:22;;;5554:62;5551:88;;;5619:18;;:::i;:::-;5655:2;5648:22;-1:-1:-1;;5427:249:644:o;5681:183::-;5741:4;-1:-1:-1;;;;;5766:6:644;5763:30;5760:56;;;5796:18;;:::i;:::-;-1:-1:-1;5841:1:644;5837:14;5853:4;5833:25;;5681:183::o;5869:724::-;5923:5;5976:3;5969:4;5961:6;5957:17;5953:27;5943:55;;5994:1;5991;5984:12;5943:55;6030:6;6017:20;6056:4;6079:43;6119:2;6079:43;:::i;:::-;6151:2;6145:9;6163:31;6191:2;6183:6;6163:31;:::i;:::-;6229:18;;;6321:1;6317:10;;;;6305:23;;6301:32;;;6263:15;;;;-1:-1:-1;6345:15:644;;;6342:35;;;6373:1;6370;6363:12;6342:35;6409:2;6401:6;6397:15;6421:142;6437:6;6432:3;6429:15;6421:142;;;6503:17;;6491:30;;6541:12;;;;6454;;6421:142;;;-1:-1:-1;6581:6:644;5869:724;-1:-1:-1;;;;;;5869:724:644:o;6598:555::-;6640:5;6693:3;6686:4;6678:6;6674:17;6670:27;6660:55;;6711:1;6708;6701:12;6660:55;6747:6;6734:20;-1:-1:-1;;;;;6769:2:644;6766:26;6763:52;;;6795:18;;:::i;:::-;6844:2;6838:9;6856:67;6911:2;6892:13;;-1:-1:-1;;6888:27:644;6917:4;6884:38;6838:9;6856:67;:::i;:::-;6947:2;6939:6;6932:18;6993:3;6986:4;6981:2;6973:6;6969:15;6965:26;6962:35;6959:55;;;7010:1;7007;7000:12;6959:55;7074:2;7067:4;7059:6;7055:17;7048:4;7040:6;7036:17;7023:54;7121:1;7097:15;;;7114:4;7093:26;7086:37;;;;7101:6;6598:555;-1:-1:-1;;;6598:555:644:o;7158:1071::-;7312:6;7320;7328;7336;7344;7397:3;7385:9;7376:7;7372:23;7368:33;7365:53;;;7414:1;7411;7404:12;7365:53;7453:9;7440:23;7472:31;7497:5;7472:31;:::i;:::-;7522:5;-1:-1:-1;7579:2:644;7564:18;;7551:32;7592:33;7551:32;7592:33;:::i;:::-;7644:7;-1:-1:-1;7702:2:644;7687:18;;7674:32;-1:-1:-1;;;;;7755:14:644;;;7752:34;;;7782:1;7779;7772:12;7752:34;7805:61;7858:7;7849:6;7838:9;7834:22;7805:61;:::i;:::-;7795:71;;7919:2;7908:9;7904:18;7891:32;7875:48;;7948:2;7938:8;7935:16;7932:36;;;7964:1;7961;7954:12;7932:36;7987:63;8042:7;8031:8;8020:9;8016:24;7987:63;:::i;:::-;7977:73;;8103:3;8092:9;8088:19;8075:33;8059:49;;8133:2;8123:8;8120:16;8117:36;;;8149:1;8146;8139:12;8117:36;;8172:51;8215:7;8204:8;8193:9;8189:24;8172:51;:::i;:::-;8162:61;;;7158:1071;;;;;;;;:::o;8844:799::-;8898:5;8951:3;8944:4;8936:6;8932:17;8928:27;8918:55;;8969:1;8966;8959:12;8918:55;9005:6;8992:20;9031:4;9054:43;9094:2;9054:43;:::i;:::-;9126:2;9120:9;9138:31;9166:2;9158:6;9138:31;:::i;:::-;9204:18;;;9296:1;9292:10;;;;9280:23;;9276:32;;;9238:15;;;;-1:-1:-1;9320:15:644;;;9317:35;;;9348:1;9345;9338:12;9317:35;9384:2;9376:6;9372:15;9396:217;9412:6;9407:3;9404:15;9396:217;;;9492:3;9479:17;9509:31;9534:5;9509:31;:::i;:::-;9553:18;;9591:12;;;;9429;;9396:217;;9648:595;9766:6;9774;9827:2;9815:9;9806:7;9802:23;9798:32;9795:52;;;9843:1;9840;9833:12;9795:52;9883:9;9870:23;-1:-1:-1;;;;;9953:2:644;9945:6;9942:14;9939:34;;;9969:1;9966;9959:12;9939:34;9992:61;10045:7;10036:6;10025:9;10021:22;9992:61;:::i;:::-;9982:71;;10106:2;10095:9;10091:18;10078:32;10062:48;;10135:2;10125:8;10122:16;10119:36;;;10151:1;10148;10141:12;10119:36;;10174:63;10229:7;10218:8;10207:9;10203:24;10174:63;:::i;:::-;10164:73;;;9648:595;;;;;:::o;10248:435::-;10301:3;10339:5;10333:12;10366:6;10361:3;10354:19;10392:4;10421:2;10416:3;10412:12;10405:19;;10458:2;10451:5;10447:14;10479:1;10489:169;10503:6;10500:1;10497:13;10489:169;;;10564:13;;10552:26;;10598:12;;;;10633:15;;;;10525:1;10518:9;10489:169;;;-1:-1:-1;10674:3:644;;10248:435;-1:-1:-1;;;;;10248:435:644:o;10688:261::-;10867:2;10856:9;10849:21;10830:4;10887:56;10939:2;10928:9;10924:18;10916:6;10887:56;:::i;10954:163::-;11021:5;11066:3;11057:6;11052:3;11048:16;11044:26;11041:46;;;11083:1;11080;11073:12;11122:1074;11279:6;11287;11295;11303;11311;11319;11327;11380:3;11368:9;11359:7;11355:23;11351:33;11348:53;;;11397:1;11394;11387:12;11348:53;11436:9;11423:23;11455:31;11480:5;11455:31;:::i;:::-;11505:5;-1:-1:-1;11557:2:644;11542:18;;11529:32;;-1:-1:-1;11608:2:644;11593:18;;11580:32;;-1:-1:-1;11664:2:644;11649:18;;11636:32;11677:33;11636:32;11677:33;:::i;:::-;11729:7;-1:-1:-1;11783:3:644;11768:19;;11755:33;;-1:-1:-1;11839:3:644;11824:19;;11811:33;-1:-1:-1;;;;;11893:14:644;;;11890:34;;;11920:1;11917;11910:12;11890:34;11943:74;12009:7;12000:6;11989:9;11985:22;11943:74;:::i;:::-;11933:84;;12070:3;12059:9;12055:19;12042:33;12026:49;;12100:2;12090:8;12087:16;12084:36;;;12116:1;12113;12106:12;12084:36;;12139:51;12182:7;12171:8;12160:9;12156:24;12139:51;:::i;:::-;12129:61;;;11122:1074;;;;;;;;;;:::o;12201:383::-;12278:6;12286;12294;12347:2;12335:9;12326:7;12322:23;12318:32;12315:52;;;12363:1;12360;12353:12;12315:52;12399:9;12386:23;12376:33;;12456:2;12445:9;12441:18;12428:32;12418:42;;12510:2;12499:9;12495:18;12482:32;12523:31;12548:5;12523:31;:::i;:::-;12573:5;12563:15;;;12201:383;;;;;:::o;12589:730::-;12716:6;12724;12732;12785:2;12773:9;12764:7;12760:23;12756:32;12753:52;;;12801:1;12798;12791:12;12753:52;12840:9;12827:23;12859:31;12884:5;12859:31;:::i;:::-;12909:5;-1:-1:-1;12965:2:644;12950:18;;12937:32;-1:-1:-1;;;;;13018:14:644;;;13015:34;;;13045:1;13042;13035:12;13015:34;13068:61;13121:7;13112:6;13101:9;13097:22;13068:61;:::i;:::-;13058:71;;13182:2;13171:9;13167:18;13154:32;13138:48;;13211:2;13201:8;13198:16;13195:36;;;13227:1;13224;13217:12;13195:36;;13250:63;13305:7;13294:8;13283:9;13279:24;13250:63;:::i;:::-;13240:73;;;12589:730;;;;;:::o;13577:321::-;13646:6;13699:2;13687:9;13678:7;13674:23;13670:32;13667:52;;;13715:1;13712;13705:12;13667:52;13755:9;13742:23;-1:-1:-1;;;;;13780:6:644;13777:30;13774:50;;;13820:1;13817;13810:12;13774:50;13843:49;13884:7;13875:6;13864:9;13860:22;13843:49;:::i;13903:383::-;13980:6;13988;13996;14049:2;14037:9;14028:7;14024:23;14020:32;14017:52;;;14065:1;14062;14055:12;14017:52;14101:9;14088:23;14078:33;;14161:2;14150:9;14146:18;14133:32;14174:31;14199:5;14174:31;:::i;:::-;13903:383;;14224:5;;-1:-1:-1;;;14276:2:644;14261:18;;;;14248:32;;13903:383::o;14480:382::-;14545:6;14553;14606:2;14594:9;14585:7;14581:23;14577:32;14574:52;;;14622:1;14619;14612:12;14574:52;14661:9;14648:23;14680:31;14705:5;14680:31;:::i;:::-;14730:5;-1:-1:-1;14787:2:644;14772:18;;14759:32;14800:30;14759:32;14800:30;:::i;14867:471::-;14964:6;14972;15025:2;15013:9;15004:7;15000:23;14996:32;14993:52;;;15041:1;15038;15031:12;14993:52;15081:9;15068:23;-1:-1:-1;;;;;15106:6:644;15103:30;15100:50;;;15146:1;15143;15136:12;15100:50;15185:93;15270:7;15261:6;15250:9;15246:22;15185:93;:::i;:::-;15297:8;;15159:119;;-1:-1:-1;14867:471:644;-1:-1:-1;;;;14867:471:644:o;15343:801::-;15503:4;15532:2;15572;15561:9;15557:18;15602:2;15591:9;15584:21;15625:6;15660;15654:13;15691:6;15683;15676:22;15729:2;15718:9;15714:18;15707:25;;15791:2;15781:6;15778:1;15774:14;15763:9;15759:30;15755:39;15741:53;;15829:2;15821:6;15817:15;15850:1;15860:255;15874:6;15871:1;15868:13;15860:255;;;15967:2;15963:7;15951:9;15943:6;15939:22;15935:36;15930:3;15923:49;15995:40;16028:6;16019;16013:13;15995:40;:::i;:::-;15985:50;-1:-1:-1;16093:12:644;;;;16058:15;;;;15896:1;15889:9;15860:255;;;-1:-1:-1;16132:6:644;;15343:801;-1:-1:-1;;;;;;;15343:801:644:o;16149:277::-;16229:6;16282:2;16270:9;16261:7;16257:23;16253:32;16250:52;;;16298:1;16295;16288:12;16250:52;16337:9;16324:23;16376:1;16369:5;16366:12;16356:40;;16392:1;16389;16382:12;16431:348;16483:8;16493:6;16547:3;16540:4;16532:6;16528:17;16524:27;16514:55;;16565:1;16562;16555:12;16514:55;-1:-1:-1;16588:20:644;;-1:-1:-1;;;;;16620:30:644;;16617:50;;;16663:1;16660;16653:12;16617:50;16700:4;16692:6;16688:17;16676:29;;16752:3;16745:4;16736:6;16728;16724:19;16720:30;16717:39;16714:59;;;16769:1;16766;16759:12;16784:788;16884:6;16892;16900;16908;16916;16969:2;16957:9;16948:7;16944:23;16940:32;16937:52;;;16985:1;16982;16975:12;16937:52;17021:9;17008:23;16998:33;;17082:2;17071:9;17067:18;17054:32;-1:-1:-1;;;;;17146:2:644;17138:6;17135:14;17132:34;;;17162:1;17159;17152:12;17132:34;17201:59;17252:7;17243:6;17232:9;17228:22;17201:59;:::i;:::-;17279:8;;-1:-1:-1;17175:85:644;-1:-1:-1;17367:2:644;17352:18;;17339:32;;-1:-1:-1;17383:16:644;;;17380:36;;;17412:1;17409;17402:12;17380:36;;17451:61;17504:7;17493:8;17482:9;17478:24;17451:61;:::i;:::-;16784:788;;;;-1:-1:-1;16784:788:644;;-1:-1:-1;17531:8:644;;17425:87;16784:788;-1:-1:-1;;;16784:788:644:o;17577:826::-;17772:2;17761:9;17754:21;17817:6;17811:13;17806:2;17795:9;17791:18;17784:41;17879:2;17871:6;17867:15;17861:22;17856:2;17845:9;17841:18;17834:50;17938:2;17930:6;17926:15;17920:22;17915:2;17904:9;17900:18;17893:50;17998:2;17990:6;17986:15;17980:22;17974:3;17963:9;17959:19;17952:51;18058:3;18050:6;18046:16;18040:23;18034:3;18023:9;18019:19;18012:52;18119:3;18111:6;18107:16;18101:23;18095:3;18084:9;18080:19;18073:52;18208:1;18204;18199:3;18195:11;18191:19;18184:3;18176:6;18172:16;18166:23;18162:49;18156:3;18145:9;18141:19;18134:78;17735:4;18259:3;18251:6;18247:16;18241:23;18283:6;18325:2;18320;18309:9;18305:18;18298:30;;18345:52;18392:3;18381:9;18377:19;18363:12;18345:52;:::i;18408:479::-;18488:6;18496;18504;18557:2;18545:9;18536:7;18532:23;18528:32;18525:52;;;18573:1;18570;18563:12;18525:52;18609:9;18596:23;18586:33;;18670:2;18659:9;18655:18;18642:32;-1:-1:-1;;;;;18689:6:644;18686:30;18683:50;;;18729:1;18726;18719:12;18683:50;18768:59;18819:7;18810:6;18799:9;18795:22;18768:59;:::i;:::-;18408:479;;18846:8;;-1:-1:-1;18742:85:644;;-1:-1:-1;;;;18408:479:644:o;18892:173::-;18960:20;;-1:-1:-1;;;;;19009:31:644;;18999:42;;18989:70;;19055:1;19052;19045:12;19070:1417;19265:6;19273;19281;19289;19297;19305;19313;19321;19329;19337;19390:3;19378:9;19369:7;19365:23;19361:33;19358:53;;;19407:1;19404;19397:12;19358:53;19430:29;19449:9;19430:29;:::i;:::-;19420:39;;19510:2;19499:9;19495:18;19482:32;-1:-1:-1;;;;;19574:2:644;19566:6;19563:14;19560:34;;;19590:1;19587;19580:12;19560:34;19613:49;19654:7;19645:6;19634:9;19630:22;19613:49;:::i;:::-;19603:59;;19715:2;19704:9;19700:18;19687:32;19671:48;;19744:2;19734:8;19731:16;19728:36;;;19760:1;19757;19750:12;19728:36;19783:51;19826:7;19815:8;19804:9;19800:24;19783:51;:::i;:::-;19773:61;;19887:2;19876:9;19872:18;19859:32;19843:48;;19916:2;19906:8;19903:16;19900:36;;;19932:1;19929;19922:12;19900:36;19955:51;19998:7;19987:8;19976:9;19972:24;19955:51;:::i;:::-;19945:61;;20059:3;20048:9;20044:19;20031:33;20015:49;;20089:2;20079:8;20076:16;20073:36;;;20105:1;20102;20095:12;20073:36;;20128:63;20183:7;20172:8;20161:9;20157:24;20128:63;:::i;:::-;20118:73;;;20210:39;20244:3;20233:9;20229:19;20210:39;:::i;:::-;20200:49;;20268:39;20302:3;20291:9;20287:19;20268:39;:::i;:::-;20258:49;;20326:39;20360:3;20349:9;20345:19;20326:39;:::i;:::-;20316:49;;20384:39;20418:3;20407:9;20403:19;20384:39;:::i;:::-;20374:49;;20442:39;20476:3;20465:9;20461:19;20442:39;:::i;:::-;20432:49;;19070:1417;;;;;;;;;;;;;:::o;20745:388::-;20813:6;20821;20874:2;20862:9;20853:7;20849:23;20845:32;20842:52;;;20890:1;20887;20880:12;20842:52;20929:9;20916:23;20948:31;20973:5;20948:31;:::i;:::-;20998:5;-1:-1:-1;21055:2:644;21040:18;;21027:32;21068:33;21027:32;21068:33;:::i;21138:923::-;21286:6;21294;21302;21310;21318;21326;21334;21387:3;21375:9;21366:7;21362:23;21358:33;21355:53;;;21404:1;21401;21394:12;21355:53;21440:9;21427:23;21417:33;;21500:2;21489:9;21485:18;21472:32;21513:31;21538:5;21513:31;:::i;:::-;21563:5;-1:-1:-1;21615:2:644;21600:18;;21587:32;;-1:-1:-1;21666:2:644;21651:18;;21638:32;;-1:-1:-1;21722:3:644;21707:19;;21694:33;21736;21694;21736;:::i;:::-;21788:7;-1:-1:-1;21842:3:644;21827:19;;21814:33;;-1:-1:-1;21898:3:644;21883:19;;21870:33;-1:-1:-1;;;;;21915:30:644;;21912:50;;;21958:1;21955;21948:12;21912:50;21981:74;22047:7;22038:6;22027:9;22023:22;21981:74;:::i;22066:734::-;22170:6;22178;22186;22194;22202;22255:3;22243:9;22234:7;22230:23;22226:33;22223:53;;;22272:1;22269;22262:12;22223:53;22311:9;22298:23;22330:31;22355:5;22330:31;:::i;:::-;22380:5;-1:-1:-1;22437:2:644;22422:18;;22409:32;22450:33;22409:32;22450:33;:::i;:::-;22502:7;-1:-1:-1;22556:2:644;22541:18;;22528:32;;-1:-1:-1;22607:2:644;22592:18;;22579:32;;-1:-1:-1;22662:3:644;22647:19;;22634:33;-1:-1:-1;;;;;22679:30:644;;22676:50;;;22722:1;22719;22712:12;22676:50;22745:49;22786:7;22777:6;22766:9;22762:22;22745:49;:::i;22805:127::-;22866:10;22861:3;22857:20;22854:1;22847:31;22897:4;22894:1;22887:15;22921:4;22918:1;22911:15;22937:349;23090:2;23075:18;;23123:1;23112:13;;23102:144;;23168:10;23163:3;23159:20;23156:1;23149:31;23203:4;23200:1;23193:15;23231:4;23228:1;23221:15;23102:144;23255:25;;;22937:349;:::o;23702:380::-;23781:1;23777:12;;;;23824;;;23845:61;;23899:4;23891:6;23887:17;23877:27;;23845:61;23952:2;23944:6;23941:14;23921:18;23918:38;23915:161;;;23998:10;23993:3;23989:20;23986:1;23979:31;24033:4;24030:1;24023:15;24061:4;24058:1;24051:15;24087:470;24266:3;24304:6;24298:13;24320:53;24366:6;24361:3;24354:4;24346:6;24342:17;24320:53;:::i;:::-;24436:13;;24395:16;;;;24458:57;24436:13;24395:16;24492:4;24480:17;;24458:57;:::i;:::-;24531:20;;24087:470;-1:-1:-1;;;;24087:470:644:o;24562:338::-;24764:2;24746:21;;;24803:2;24783:18;;;24776:30;-1:-1:-1;;;24837:2:644;24822:18;;24815:44;24891:2;24876:18;;24562:338::o;24905:127::-;24966:10;24961:3;24957:20;24954:1;24947:31;24997:4;24994:1;24987:15;25021:4;25018:1;25011:15;25037:128;25077:3;25108:1;25104:6;25101:1;25098:13;25095:39;;;25114:18;;:::i;:::-;-1:-1:-1;25150:9:644;;25037:128::o;25170:127::-;25231:10;25226:3;25222:20;25219:1;25212:31;25262:4;25259:1;25252:15;25286:4;25283:1;25276:15;25302:333;25403:4;25461:11;25448:25;25555:3;25551:8;25540;25524:14;25520:29;25516:44;25496:18;25492:69;25482:97;;25575:1;25572;25565:12;25482:97;25596:33;;;;;25302:333;-1:-1:-1;;25302:333:644:o;26317:516::-;26389:4;26395:6;26455:11;26442:25;26549:2;26545:7;26534:8;26518:14;26514:29;26510:43;26490:18;26486:68;26476:96;;26568:1;26565;26558:12;26476:96;26595:33;;26647:20;;;-1:-1:-1;;;;;;26679:30:644;;26676:50;;;26722:1;26719;26712:12;26676:50;26755:4;26743:17;;-1:-1:-1;26786:14:644;26782:27;;;26772:38;;26769:58;;;26823:1;26820;26813:12;26964:545;27066:2;27061:3;27058:11;27055:448;;;27102:1;27127:5;27123:2;27116:17;27172:4;27168:2;27158:19;27242:2;27230:10;27226:19;27223:1;27219:27;27213:4;27209:38;27278:4;27266:10;27263:20;27260:47;;;-1:-1:-1;27301:4:644;27260:47;27356:2;27351:3;27347:12;27344:1;27340:20;27334:4;27330:31;27320:41;;27411:82;27429:2;27422:5;27419:13;27411:82;;;27474:17;;;27455:1;27444:13;27411:82;;27685:1190;-1:-1:-1;;;;;27788:3:644;27785:27;27782:53;;;27815:18;;:::i;:::-;27844:94;27934:3;27894:38;27926:4;27920:11;27894:38;:::i;:::-;27888:4;27844:94;:::i;:::-;27964:1;27989:2;27984:3;27981:11;28006:1;28001:616;;;;28661:1;28678:3;28675:93;;;-1:-1:-1;28734:19:644;;;28721:33;28675:93;-1:-1:-1;;27642:1:644;27638:11;;;27634:24;27630:29;27620:40;27666:1;27662:11;;;27617:57;28781:78;;27974:895;;28001:616;26911:1;26904:14;;;26948:4;26935:18;;-1:-1:-1;;28037:17:644;;;28138:9;28160:229;28174:7;28171:1;28168:14;28160:229;;;28263:19;;;28250:33;28235:49;;28370:4;28355:20;;;;28323:1;28311:14;;;;28190:12;28160:229;;;28164:3;28417;28408:7;28405:16;28402:159;;;28541:1;28537:6;28531:3;28525;28522:1;28518:11;28514:21;28510:34;28506:39;28493:9;28488:3;28484:19;28471:33;28467:79;28459:6;28452:95;28402:159;;;28604:1;28598:3;28595:1;28591:11;28587:19;28581:4;28574:33;27974:895;;27685:1190;;;:::o;28880:950::-;29059:5;29046:19;29040:4;29033:33;29120:2;29113:5;29109:14;29096:28;29092:1;29086:4;29082:12;29075:50;29179:2;29172:5;29168:14;29155:28;29151:1;29145:4;29141:12;29134:50;29238:2;29231:5;29227:14;29214:28;29210:1;29204:4;29200:12;29193:50;29297:3;29290:5;29286:15;29273:29;29269:1;29263:4;29259:12;29252:51;29357:3;29350:5;29346:15;29333:29;29329:1;29323:4;29319:12;29312:51;29400:1;29394:4;29390:12;29450:3;29443:5;29439:15;29426:29;29464:33;29489:7;29464:33;:::i;:::-;29532:17;;-1:-1:-1;;;;;;29528:48:644;-1:-1:-1;;;;;29578:33:644;;;;29525:87;29506:107;;29656:60;29711:3;29700:15;;29704:5;29656:60;:::i;:::-;29725:99;29810:13;29797:11;29793:1;29787:4;29783:12;29725:99;:::i;29835:135::-;29874:3;-1:-1:-1;;29895:17:644;;29892:43;;;29915:18;;:::i;:::-;-1:-1:-1;29962:1:644;29951:13;;29835:135::o;29975:504::-;30034:5;30041:6;30101:3;30088:17;30187:2;30183:7;30172:8;30156:14;30152:29;30148:43;30128:18;30124:68;30114:96;;30206:1;30203;30196:12;30114:96;30234:33;;30338:4;30325:18;;;-1:-1:-1;30286:21:644;;-1:-1:-1;;;;;;30355:30:644;;30352:50;;;30398:1;30395;30388:12;30352:50;30448:6;30432:14;30428:27;30418:8;30414:42;30411:62;;;30469:1;30466;30459:12;30484:267;30573:6;30568:3;30561:19;30625:6;30618:5;30611:4;30606:3;30602:14;30589:43;-1:-1:-1;30677:1:644;30652:16;;;30670:4;30648:27;;;30641:38;;;;30733:2;30712:15;;;-1:-1:-1;;30708:29:644;30699:39;;;30695:50;;30484:267::o;30756:2051::-;31027:2;31079:21;;;31052:18;;;31135:22;;;30998:4;;31176:2;31194:18;;;31258:1;31254:14;;;31239:30;;31235:39;;31297:6;30998:4;;31352:1372;31368:6;31363:3;31360:15;31352:1372;;;31437:22;;;-1:-1:-1;;31433:36:644;31421:49;;31509:20;;31584:14;31580:27;;;-1:-1:-1;;31576:42:644;31552:67;;31542:95;;31633:1;31630;31623:12;31542:95;31663:31;;31751:19;;31736:35;;31794:4;31848:14;;;31835:28;31818:15;;;31811:53;31914:14;;;31901:28;31884:15;;;31877:53;31980:14;;;31967:28;31950:15;;;31943:53;32019:4;32073:14;;;32060:28;32043:15;;;32036:53;32112:4;32166:14;;;32153:28;32136:15;;;32129:53;31717:6;;32205:4;32250:14;;;32237:28;32278:33;32237:28;32278:33;:::i;:::-;-1:-1:-1;;;;;32348:33:644;32331:15;;;32324:58;32405:4;32456:54;32495:14;;;32499:5;32456:54;:::i;:::-;32422:88;;32547:2;32542;32534:6;32530:15;32523:27;32573:71;32640:2;32632:6;32628:15;32614:12;32600;32573:71;:::i;:::-;32702:12;;;;32563:81;-1:-1:-1;;;32667:15:644;;;;;-1:-1:-1;;31394:1:644;31385:11;31352:1372;;;-1:-1:-1;;;1247:13:644;;1240:21;32795:4;32780:20;;1228:34;32741:6;-1:-1:-1;32756:45:644;;-1:-1:-1;;;1177:91:644;33154:168;33194:7;33260:1;33256;33252:6;33248:14;33245:1;33242:21;33237:1;33230:9;33223:17;33219:45;33216:71;;;33267:18;;:::i;:::-;-1:-1:-1;33307:9:644;;33154:168::o;33327:127::-;33388:10;33383:3;33379:20;33376:1;33369:31;33419:4;33416:1;33409:15;33443:4;33440:1;33433:15;33459:120;33499:1;33525;33515:35;;33530:18;;:::i;:::-;-1:-1:-1;33564:9:644;;33459:120::o;33584:411::-;33786:2;33768:21;;;33825:2;33805:18;;;33798:30;33864:34;33859:2;33844:18;;33837:62;-1:-1:-1;;;33930:2:644;33915:18;;33908:45;33985:3;33970:19;;33584:411::o;35123:125::-;35163:4;35191:1;35188;35185:8;35182:34;;;35196:18;;:::i;:::-;-1:-1:-1;35233:9:644;;35123:125::o;35253:136::-;35292:3;35320:5;35310:39;;35329:18;;:::i;:::-;-1:-1:-1;;;35365:18:644;;35253:136::o;37004:506::-;37247:6;37236:9;37229:25;37290:2;37285;37274:9;37270:18;37263:30;37210:4;37316:62;37374:2;37363:9;37359:18;37351:6;37343;37316:62;:::i;:::-;37426:9;37418:6;37414:22;37409:2;37398:9;37394:18;37387:50;37454;37497:6;37489;37481;37454:50;:::i;:::-;37446:58;37004:506;-1:-1:-1;;;;;;;;37004:506:644:o;38129:545::-;38222:4;38228:6;38288:11;38275:25;38382:2;38378:7;38367:8;38351:14;38347:29;38343:43;38323:18;38319:68;38309:96;;38401:1;38398;38391:12;38309:96;38428:33;;38480:20;;;-1:-1:-1;;;;;;38512:30:644;;38509:50;;;38555:1;38552;38545:12;38509:50;38588:4;38576:17;;-1:-1:-1;38639:1:644;38635:14;;;38619;38615:35;38605:46;;38602:66;;;38664:1;38661;38654:12;40843:112;40875:1;40901;40891:35;;40906:18;;:::i;:::-;-1:-1:-1;40940:9:644;;40843:112::o;40960:339::-;41162:2;41144:21;;;41201:2;41181:18;;;41174:30;-1:-1:-1;;;41235:2:644;41220:18;;41213:45;41290:2;41275:18;;40960:339::o;41304:784::-;-1:-1:-1;;;41710:3:644;41703:36;41685:3;41768:6;41762:13;41784:62;41839:6;41834:2;41829:3;41825:12;41818:4;41810:6;41806:17;41784:62;:::i;:::-;-1:-1:-1;;;41905:2:644;41865:16;;;41897:11;;;41890:40;41955:13;;41977:63;41955:13;42026:2;42018:11;;42011:4;41999:17;;41977:63;:::i;:::-;42060:17;42079:2;42056:26;;41304:784;-1:-1:-1;;;;41304:784:644:o;42093:404::-;42295:2;42277:21;;;42334:2;42314:18;;;42307:30;42373:34;42368:2;42353:18;;42346:62;-1:-1:-1;;;42439:2:644;42424:18;;42417:38;42487:3;42472:19;;42093:404::o;42502:401::-;42704:2;42686:21;;;42743:2;42723:18;;;42716:30;42782:34;42777:2;42762:18;;42755:62;-1:-1:-1;;;42848:2:644;42833:18;;42826:35;42893:3;42878:19;;42502:401::o;42908:406::-;43110:2;43092:21;;;43149:2;43129:18;;;43122:30;43188:34;43183:2;43168:18;;43161:62;-1:-1:-1;;;43254:2:644;43239:18;;43232:40;43304:3;43289:19;;42908:406::o;43319:465::-;43576:2;43565:9;43558:21;43539:4;43602:56;43654:2;43643:9;43639:18;43631:6;43602:56;:::i;:::-;43706:9;43698:6;43694:22;43689:2;43678:9;43674:18;43667:50;43734:44;43771:6;43763;43734:44;:::i;44141:325::-;44343:2;44325:21;;;44382:1;44362:18;;;44355:29;-1:-1:-1;;;44415:2:644;44400:18;;44393:32;44457:2;44442:18;;44141:325::o;45280:383::-;45477:2;45466:9;45459:21;45440:4;45503:45;45544:2;45533:9;45529:18;45521:6;45503:45;:::i;:::-;45596:9;45588:6;45584:22;45579:2;45568:9;45564:18;45557:50;45624:33;45650:6;45642;45624:33;:::i;46827:274::-;46956:3;46994:6;46988:13;47010:53;47056:6;47051:3;47044:4;47036:6;47032:17;47010:53;:::i;47447:407::-;47649:2;47631:21;;;47688:2;47668:18;;;47661:30;47727:34;47722:2;47707:18;;47700:62;-1:-1:-1;;;47793:2:644;47778:18;;47771:41;47844:3;47829:19;;47447:407::o;48877:827::-;-1:-1:-1;;;;;49274:15:644;;;49256:34;;49326:15;;49321:2;49306:18;;49299:43;49236:3;49373:2;49358:18;;49351:31;;;49199:4;;49405:57;;49442:19;;49434:6;49405:57;:::i;:::-;49510:9;49502:6;49498:22;49493:2;49482:9;49478:18;49471:50;49544:44;49581:6;49573;49544:44;:::i;:::-;49530:58;;49637:9;49629:6;49625:22;49619:3;49608:9;49604:19;49597:51;49665:33;49691:6;49683;49665:33;:::i;49709:249::-;49778:6;49831:2;49819:9;49810:7;49806:23;49802:32;49799:52;;;49847:1;49844;49837:12;49799:52;49879:9;49873:16;49898:30;49922:5;49898:30;:::i;49963:179::-;49998:3;50040:1;50022:16;50019:23;50016:120;;;50086:1;50083;50080;50065:23;-1:-1:-1;50123:1:644;50117:8;50112:3;50108:18;49963:179;:::o;50147:671::-;50186:3;50228:4;50210:16;50207:26;50204:39;;;50147:671;:::o;50204:39::-;50270:2;50264:9;-1:-1:-1;;50335:16:644;50331:25;;50328:1;50264:9;50307:50;50386:4;50380:11;50410:16;-1:-1:-1;;;;;50516:2:644;50509:4;50501:6;50497:17;50494:25;50489:2;50481:6;50478:14;50475:45;50472:58;;;50523:5;;;;;50147:671;:::o;50472:58::-;50560:6;50554:4;50550:17;50539:28;;50596:3;50590:10;50623:2;50615:6;50612:14;50609:27;;;50629:5;;;;;;50147:671;:::o;50609:27::-;50713:2;50694:16;50688:4;50684:27;50680:36;50673:4;50664:6;50659:3;50655:16;50651:27;50648:69;50645:82;;;50720:5;;;;;;50147:671;:::o;50645:82::-;50736:57;50787:4;50778:6;50770;50766:19;50762:30;50756:4;50736:57;:::i;:::-;-1:-1:-1;50809:3:644;;50147:671;-1:-1:-1;;;;;50147:671:644:o;51244:404::-;51446:2;51428:21;;;51485:2;51465:18;;;51458:30;51524:34;51519:2;51504:18;;51497:62;-1:-1:-1;;;51590:2:644;51575:18;;51568:38;51638:3;51623:19;;51244:404::o;52399:561::-;-1:-1:-1;;;;;52696:15:644;;;52678:34;;52748:15;;52743:2;52728:18;;52721:43;52795:2;52780:18;;52773:34;;;52838:2;52823:18;;52816:34;;;52658:3;52881;52866:19;;52859:32;;;52621:4;;52908:46;;52934:19;;52926:6;52908:46;:::i;53912:245::-;53979:6;54032:2;54020:9;54011:7;54007:23;54003:32;54000:52;;;54048:1;54045;54038:12;54000:52;54080:9;54074:16;54099:28;54121:5;54099:28;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "DEFAULT_ADMIN_ROLE()": "a217fddf",
    "balanceOf(address,uint256)": "00fdd58e",
    "balanceOfBatch(address[],uint256[])": "4e1273f4",
    "batchFrozen(uint256)": "83040532",
    "burnBatch(address,uint256[],uint256[])": "6b20c454",
    "claim(address,uint256,uint256,address,uint256,(bytes32[],uint256,uint256,address),bytes)": "57bc3d78",
    "claimCondition(uint256)": "e9703d25",
    "contractType()": "cb2ef6f7",
    "contractURI()": "e8a3d485",
    "contractVersion()": "a0a8e460",
    "freezeBatchBaseURI(uint256)": "a07ced9e",
    "getActiveClaimConditionId(uint256)": "5ab063e8",
    "getBaseURICount()": "63b45e2d",
    "getBatchIdAtIndex(uint256)": "2419f51b",
    "getClaimConditionById(uint256,uint256)": "d45b28d7",
    "getDefaultRoyaltyInfo()": "b24f2d39",
    "getFlatPlatformFeeInfo()": "e57553da",
    "getPlatformFeeInfo()": "d45573f6",
    "getPlatformFeeType()": "f28083c3",
    "getRoleAdmin(bytes32)": "248a9ca3",
    "getRoleMember(bytes32,uint256)": "9010d07c",
    "getRoleMemberCount(bytes32)": "ca15c873",
    "getRoyaltyInfoForToken(uint256)": "4cc157df",
    "getSupplyClaimedByWallet(uint256,uint256,address)": "5811ddab",
    "grantRole(bytes32,address)": "2f2ff15d",
    "hasRole(bytes32,address)": "91d14854",
    "hasRoleWithSwitch(bytes32,address)": "a32fa5b3",
    "initialize(address,string,string,string,address[],address,address,uint128,uint128,address)": "e1591634",
    "isApprovedForAll(address,address)": "e985e9c5",
    "isTrustedForwarder(address)": "572b6c05",
    "lazyMint(uint256,string,bytes)": "d37c353b",
    "maxTotalSupply(uint256)": "24aaffaa",
    "multicall(bytes[])": "ac9650d8",
    "name()": "06fdde03",
    "nextTokenIdToMint()": "3b1475a7",
    "owner()": "8da5cb5b",
    "primarySaleRecipient()": "079fe40e",
    "renounceRole(bytes32,address)": "36568abe",
    "revokeRole(bytes32,address)": "d547741f",
    "royaltyInfo(uint256,uint256)": "2a55205a",
    "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
    "safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
    "saleRecipient(uint256)": "c7337d6b",
    "setApprovalForAll(address,bool)": "a22cb465",
    "setClaimConditions(uint256,(uint256,uint256,uint256,uint256,bytes32,uint256,address,string)[],bool)": "183718d1",
    "setContractURI(string)": "938e3d7b",
    "setDefaultRoyaltyInfo(address,uint256)": "600dd5ea",
    "setFlatPlatformFeeInfo(address,uint256)": "7e54523c",
    "setMaxTotalSupply(uint256,uint256)": "87198cf2",
    "setOwner(address)": "13af4035",
    "setPlatformFeeInfo(address,uint256)": "1e7ac488",
    "setPlatformFeeType(uint8)": "b6f10c79",
    "setPrimarySaleRecipient(address)": "6f4f2837",
    "setRoyaltyInfoForToken(uint256,address,uint256)": "9bcf7a15",
    "setSaleRecipientForToken(uint256,address)": "29c49b9b",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "totalSupply(uint256)": "bd85b039",
    "updateBatchBaseURI(uint256,string)": "de903ddd",
    "uri(uint256)": "0e89341c",
    "verifyClaim(uint256,address,uint256,uint256,address,uint256,(bytes32[],uint256,uint256,address))": "ea1def9c"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxClaimableSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"}],\"indexed\":false,\"internalType\":\"struct IClaimCondition.ClaimCondition[]\",\"name\":\"claimConditions\",\"type\":\"tuple[]\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"resetEligibility\",\"type\":\"bool\"}],\"name\":\"ClaimConditionsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"prevURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newURI\",\"type\":\"string\"}],\"name\":\"ContractURIUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newRoyaltyRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newRoyaltyBps\",\"type\":\"uint256\"}],\"name\":\"DefaultRoyalty\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"platformFeeRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"flatFee\",\"type\":\"uint256\"}],\"name\":\"FlatPlatformFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxTotalSupply\",\"type\":\"uint256\"}],\"name\":\"MaxTotalSupplyUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"MetadataFrozen\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"prevOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"platformFeeRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"platformFeeBps\",\"type\":\"uint256\"}],\"name\":\"PlatformFeeInfoUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"enum IPlatformFee.PlatformFeeType\",\"name\":\"feeType\",\"type\":\"uint8\"}],\"name\":\"PlatformFeeTypeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"PrimarySaleRecipientUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"royaltyRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"royaltyBps\",\"type\":\"uint256\"}],\"name\":\"RoyaltyForToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"saleRecipient\",\"type\":\"address\"}],\"name\":\"SaleRecipientForTokenUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"claimConditionIndex\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantityClaimed\",\"type\":\"uint256\"}],\"name\":\"TokensClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"startTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"encryptedBaseURI\",\"type\":\"bytes\"}],\"name\":\"TokensLazyMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"batchFrozen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"burnBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_pricePerToken\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"internalType\":\"struct IDrop1155.AllowlistProof\",\"name\":\"_allowlistProof\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"claimCondition\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"currentStartId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractType\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractVersion\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"freezeBatchBaseURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getActiveClaimConditionId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaseURICount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getBatchIdAtIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_conditionId\",\"type\":\"uint256\"}],\"name\":\"getClaimConditionById\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxClaimableSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"}],\"internalType\":\"struct IClaimCondition.ClaimCondition\",\"name\":\"condition\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDefaultRoyaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFlatPlatformFeeInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPlatformFeeInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPlatformFeeType\",\"outputs\":[{\"internalType\":\"enum IPlatformFee.PlatformFeeType\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getRoyaltyInfoForToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_conditionId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_claimer\",\"type\":\"address\"}],\"name\":\"getSupplyClaimedByWallet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"supplyClaimedByWallet\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRoleWithSwitch\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_defaultAdmin\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_contractURI\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"_trustedForwarders\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"_saleRecipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_royaltyRecipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"_royaltyBps\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"_platformFeeBps\",\"type\":\"uint128\"},{\"internalType\":\"address\",\"name\":\"_platformFeeRecipient\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_baseURIForTokens\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"lazyMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"batchId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"maxTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextTokenIdToMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"primarySaleRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"saleRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxClaimableSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"}],\"internalType\":\"struct IClaimCondition.ClaimCondition[]\",\"name\":\"_conditions\",\"type\":\"tuple[]\"},{\"internalType\":\"bool\",\"name\":\"_resetClaimEligibility\",\"type\":\"bool\"}],\"name\":\"setClaimConditions\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"setContractURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_royaltyRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_royaltyBps\",\"type\":\"uint256\"}],\"name\":\"setDefaultRoyaltyInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_platformFeeRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_flatFee\",\"type\":\"uint256\"}],\"name\":\"setFlatPlatformFeeInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxTotalSupply\",\"type\":\"uint256\"}],\"name\":\"setMaxTotalSupply\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_platformFeeRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_platformFeeBps\",\"type\":\"uint256\"}],\"name\":\"setPlatformFeeInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IPlatformFee.PlatformFeeType\",\"name\":\"_feeType\",\"type\":\"uint8\"}],\"name\":\"setPlatformFeeType\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_saleRecipient\",\"type\":\"address\"}],\"name\":\"setPrimarySaleRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_bps\",\"type\":\"uint256\"}],\"name\":\"setRoyaltyInfoForToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_saleRecipient\",\"type\":\"address\"}],\"name\":\"setSaleRecipientForToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"updateBatchBaseURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_conditionId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_claimer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_pricePerToken\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"internalType\":\"struct IDrop1155.AllowlistProof\",\"name\":\"_allowlistProof\",\"type\":\"tuple\"}],\"name\":\"verifyClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isOverride\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"MaxTotalSupplyUpdated(uint256,uint256)\":{\"details\":\"Emitted when the global max supply of a token is updated.\"},\"SaleRecipientForTokenUpdated(uint256,address)\":{\"details\":\"Emitted when the sale recipient for a particular tokenId is updated.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"burnBatch(address,uint256[],uint256[])\":{\"details\":\"Lets a token owner burn multiple tokens they own at once (i.e. destroy for good)\"},\"claim(address,uint256,uint256,address,uint256,(bytes32[],uint256,uint256,address),bytes)\":{\"details\":\"Lets an account claim tokens.\"},\"freezeBatchBaseURI(uint256)\":{\"params\":{\"_index\":\"Index of the desired batch in batchIds array.\"}},\"getActiveClaimConditionId(uint256)\":{\"details\":\"At any given moment, returns the uid for the active claim condition.\"},\"getBaseURICount()\":{\"details\":\"Each batch of tokens has an in ID and an associated `baseURI`.                  See {batchIds}.\"},\"getBatchIdAtIndex(uint256)\":{\"details\":\"See {getBaseURICount}.\",\"params\":{\"_index\":\"Index of the desired batch in batchIds array.\"}},\"getClaimConditionById(uint256,uint256)\":{\"details\":\"Returns the claim condition at the given uid.\"},\"getFlatPlatformFeeInfo()\":{\"details\":\"Returns the platform fee bps and recipient.\"},\"getPlatformFeeInfo()\":{\"details\":\"Returns the platform fee recipient and bps.\"},\"getPlatformFeeType()\":{\"details\":\"Returns the platform fee bps and recipient.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"See {grantRole} and {revokeRole}.                  To change a role's admin, use {_setRoleAdmin}.\",\"params\":{\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns `member` who has `role`, at `index` of role-members list.                  See struct {RoleMembers}, and mapping {roleMembers}\",\"params\":{\"index\":\"Index in list of current members for the role.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"},\"returns\":{\"member\":\" Address of account that has `role`\"}},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns `count` of accounts that have `role`.                  See struct {RoleMembers}, and mapping {roleMembers}\",\"params\":{\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"},\"returns\":{\"count\":\"  Total number of accounts that have `role`\"}},\"getRoyaltyInfoForToken(uint256)\":{\"details\":\"Returns royalty recipient and bps for `_tokenId`.\",\"params\":{\"_tokenId\":\"The tokenID of the NFT for which to query royalty info.\"}},\"getSupplyClaimedByWallet(uint256,uint256,address)\":{\"details\":\"Returns the supply claimed by claimer for a given conditionId.\"},\"grantRole(bytes32,address)\":{\"details\":\"Caller must have admin role for the `role`.                  Emits {RoleGranted Event}.\",\"params\":{\"account\":\"Address of the account to which the role is being granted.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\",\"params\":{\"account\":\"Address of the account for which the role is being checked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"hasRoleWithSwitch(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.                  Role restrictions can be swtiched on and off:                      - If address(0) has ROLE, then the ROLE restrictions                        don't apply.                      - If address(0) does not have ROLE, then the ROLE                        restrictions will apply.\",\"params\":{\"account\":\"Address of the account for which the role is being checked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"initialize(address,string,string,string,address[],address,address,uint128,uint128,address)\":{\"details\":\"Initializes the contract, like a constructor.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"lazyMint(uint256,string,bytes)\":{\"params\":{\"_amount\":\"The number of NFTs to lazy mint.\",\"_baseURIForTokens\":\"The base URI for the 'n' number of NFTs being lazy minted, where the metadata for each                           of those NFTs is `${baseURIForTokens}/${tokenId}`.\",\"_data\":\"Additional bytes data to be used at the discretion of the consumer of the contract.\"},\"returns\":{\"batchId\":\"         A unique integer identifier for the batch of NFTs lazy minted together.\"}},\"multicall(bytes[])\":{\"details\":\"Receives and executes a batch of function calls on this contract.\"},\"nextTokenIdToMint()\":{\"details\":\"The tokenId of the next NFT that will be minted / lazy minted.\"},\"primarySaleRecipient()\":{\"details\":\"Returns primary sale recipient address.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Caller must have the `role`, with caller being the same as `account`.                  Emits {RoleRevoked Event}.\",\"params\":{\"account\":\"Address of the account from which the role is being revoked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"revokeRole(bytes32,address)\":{\"details\":\"Caller must have admin role for the `role`.                  Emits {RoleRevoked Event}.\",\"params\":{\"account\":\"Address of the account from which the role is being revoked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"royaltyInfo(uint256,uint256)\":{\"details\":\"Returns royalty amount and recipient for `tokenId` and `salePrice`.\",\"params\":{\"salePrice\":\"Sale price of the token.\",\"tokenId\":\"The tokenID of the NFT for which to query royalty info.\"},\"returns\":{\"receiver\":\"       Address of royalty recipient account.\",\"royaltyAmount\":\"  Royalty amount calculated at current royaltyBps value.\"}},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"setClaimConditions(uint256,(uint256,uint256,uint256,uint256,bytes32,uint256,address,string)[],bool)\":{\"details\":\"Lets a contract admin set claim conditions.\"},\"setContractURI(string)\":{\"details\":\"Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.\",\"params\":{\"_uri\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"setDefaultRoyaltyInfo(address,uint256)\":{\"details\":\"Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {DefaultRoyalty Event}; See {_setupDefaultRoyaltyInfo}.\",\"params\":{\"_royaltyBps\":\"Updated royalty bps.\",\"_royaltyRecipient\":\"Address to be set as default royalty recipient.\"}},\"setMaxTotalSupply(uint256,uint256)\":{\"details\":\"Lets a module admin set a max total supply for token.\"},\"setOwner(address)\":{\"params\":{\"_newOwner\":\"The address to set as the new owner of the contract.\"}},\"setPlatformFeeInfo(address,uint256)\":{\"details\":\"Caller should be authorized to set platform fee info.                  See {_canSetPlatformFeeInfo}.                  Emits {PlatformFeeInfoUpdated Event}; See {_setupPlatformFeeInfo}.\",\"params\":{\"_platformFeeBps\":\"Updated platformFeeBps.\",\"_platformFeeRecipient\":\"Address to be set as new platformFeeRecipient.\"}},\"setPrimarySaleRecipient(address)\":{\"details\":\"Caller should be authorized to set primary sales info.                  See {_canSetPrimarySaleRecipient}.                  Emits {PrimarySaleRecipientUpdated Event}; See {_setupPrimarySaleRecipient}.\",\"params\":{\"_saleRecipient\":\"Address to be set as new recipient of primary sales.\"}},\"setRoyaltyInfoForToken(uint256,address,uint256)\":{\"details\":\"Sets royalty info for `_tokenId`. Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {RoyaltyForToken Event}; See {_setupRoyaltyInfoForToken}.\",\"params\":{\"_bps\":\"Updated royalty bps for the token Id.\",\"_recipient\":\"Address to be set as royalty recipient for given token Id.\"}},\"setSaleRecipientForToken(uint256,address)\":{\"details\":\"Lets a contract admin set the recipient for all primary sales.\"},\"supportsInterface(bytes4)\":{\"details\":\"See ERC 165\"},\"updateBatchBaseURI(uint256,string)\":{\"params\":{\"_index\":\"Index of the desired batch in batchIds array.\",\"_uri\":\"the new base URI for the batch.\"}},\"uri(uint256)\":{\"details\":\"Returns the uri for a given tokenId.\"},\"verifyClaim(uint256,address,uint256,uint256,address,uint256,(bytes32[],uint256,uint256,address))\":{\"details\":\"Checks a request to claim NFTs against the active claim condition's criteria.\"}},\"stateVariables\":{\"MAX_BPS\":{\"details\":\"Max bps in the thirdweb system.\"},\"maxTotalSupply\":{\"details\":\"Mapping from token ID => maximum possible total circulating supply of tokens with that ID.\"},\"metadataRole\":{\"details\":\"Only METADATA_ROLE holders can reveal the URI for a batch of delayed reveal NFTs, and update or freeze batch metadata.\"},\"minterRole\":{\"details\":\"Only MINTER_ROLE holders can sign off on `MintRequest`s and lazy mint tokens.\"},\"saleRecipient\":{\"details\":\"Mapping from token ID => the address of the recipient of primary sales.\"},\"totalSupply\":{\"details\":\"Mapping from token ID => total circulating supply of tokens with that ID.\"},\"transferRole\":{\"details\":\"Only transfers to or from TRANSFER_ROLE holders are valid, when transfers are restricted.\"}},\"version\":1},\"userdoc\":{\"events\":{\"BatchMetadataUpdate(uint256,uint256)\":{\"notice\":\"So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"ClaimConditionsUpdated(uint256,(uint256,uint256,uint256,uint256,bytes32,uint256,address,string)[],bool)\":{\"notice\":\"Emitted when the contract's claim conditions are updated.\"},\"TokensClaimed(uint256,address,address,uint256,uint256)\":{\"notice\":\"Emitted when tokens are claimed.\"}},\"kind\":\"user\",\"methods\":{\"contractURI()\":{\"notice\":\"Returns the contract metadata URI.\"},\"freezeBatchBaseURI(uint256)\":{\"notice\":\"Freezes the base URI for a batch of tokens.\"},\"getBaseURICount()\":{\"notice\":\"Returns the count of batches of NFTs.\"},\"getBatchIdAtIndex(uint256)\":{\"notice\":\"Returns the ID for the batch of tokens at the given index.\"},\"getDefaultRoyaltyInfo()\":{\"notice\":\"Returns the defualt royalty recipient and BPS for this contract's NFTs.\"},\"getRoleAdmin(bytes32)\":{\"notice\":\"Returns the admin role that controls the specified role.\"},\"getRoleMember(bytes32,uint256)\":{\"notice\":\"Returns the role-member from a list of members for a role,                  at a given index.\"},\"getRoleMemberCount(bytes32)\":{\"notice\":\"Returns total number of accounts that have a role.\"},\"getRoyaltyInfoForToken(uint256)\":{\"notice\":\"View royalty info for a given token.\"},\"grantRole(bytes32,address)\":{\"notice\":\"Grants a role to an account, if not previously granted.\"},\"hasRole(bytes32,address)\":{\"notice\":\"Checks whether an account has a particular role.\"},\"hasRoleWithSwitch(bytes32,address)\":{\"notice\":\"Checks whether an account has a particular role;                  role restrictions can be swtiched on and off.\"},\"lazyMint(uint256,string,bytes)\":{\"notice\":\"Lets an authorized address lazy mint a given amount of NFTs.\"},\"owner()\":{\"notice\":\"Returns the owner of the contract.\"},\"renounceRole(bytes32,address)\":{\"notice\":\"Revokes role from the account.\"},\"revokeRole(bytes32,address)\":{\"notice\":\"Revokes role from an account.\"},\"royaltyInfo(uint256,uint256)\":{\"notice\":\"View royalty info for a given token and sale price.\"},\"setContractURI(string)\":{\"notice\":\"Lets a contract admin set the URI for contract-level metadata.\"},\"setDefaultRoyaltyInfo(address,uint256)\":{\"notice\":\"Updates default royalty recipient and bps.\"},\"setFlatPlatformFeeInfo(address,uint256)\":{\"notice\":\"Lets a module admin set a flat fee on primary sales.\"},\"setOwner(address)\":{\"notice\":\"Lets an authorized wallet set a new owner for the contract.\"},\"setPlatformFeeInfo(address,uint256)\":{\"notice\":\"Updates the platform fee recipient and bps.\"},\"setPlatformFeeType(uint8)\":{\"notice\":\"Lets a module admin set platform fee type.\"},\"setPrimarySaleRecipient(address)\":{\"notice\":\"Updates primary sale recipient.\"},\"setRoyaltyInfoForToken(uint256,address,uint256)\":{\"notice\":\"Updates default royalty recipient and bps for a particular token.\"},\"updateBatchBaseURI(uint256,string)\":{\"notice\":\"Updates the base URI for a batch of tokens.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/prebuilts/drop/DropERC1155.sol\":\"DropERC1155\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@std/=lib/forge-std/src/\",\":@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/\",\":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/\",\":contracts/=contracts/\",\":ds-test/=lib/ds-test/src/\",\":dynamic-contracts/=lib/dynamic-contracts/src/\",\":erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/ERC721A-Upgradeable/\",\":erc721a/=lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/\"]},\"sources\":{\"contracts/eip/interface/IERC165.sol\":{\"keccak256\":\"0x35d0a916f70344a5fcc6c67cb531b6150d2fce43e72a6282385eab02020f2f49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75ccd8b9a8b52a93b8097fcb8181b7afb6d72bbe6eaabf434f0481a7a207cc8a\",\"dweb:/ipfs/QmPUZAEE4nwkijcE2amAXAWEVGVG5XaKWGhpgnRwpAf93R\"]},\"contracts/eip/interface/IERC20.sol\":{\"keccak256\":\"0x5bdd9dd97ba7d9d7c9a2953db287e4d9d7fa93a27a96bc2e72a8da4919b6f7ff\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://45527c265ee5de6bbb3ecfc052e7b1175531a82c2ac16172020aee855f7dd592\",\"dweb:/ipfs/QmVZthqbG916qUQSwv1LE8bB58ZGQ1VfQbLbbRV5urfEYA\"]},\"contracts/eip/interface/IERC2981.sol\":{\"keccak256\":\"0x7886c17b1bc3df885201378fd070d2f00d05fa54f20f7daf10382ec6ff4bd0c9\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://a0802623ba9555f6d186bab5fd139203b643e88ea31d78f4f05cddd4008ac6cf\",\"dweb:/ipfs/QmYbqzSKkKmF2xYeH1zGNewBDNAhukuaZEUVAvYgnKt1He\"]},\"contracts/extension/BatchMintMetadata.sol\":{\"keccak256\":\"0x1d1ee64f8456dc8b4cdd096e27ac4687babd485f49a728146126744d67f25f2f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9e01b0d51bdccbcce9095f606c8624926b518c1385c1349c41896236a0345ee0\",\"dweb:/ipfs/QmWHTbztwRf9Fyq4617MrVSqF8o7UXMT5nFe6epQ92N6L9\"]},\"contracts/extension/ContractMetadata.sol\":{\"keccak256\":\"0xf53ab08ec3057056872c15e35a5610f7a43426bd2829786aed006d527177adfe\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ee132ae5efdd372152febfcd8fd3a7cb82c7019367d92c886f5096003a79f392\",\"dweb:/ipfs/QmRW1cGWmZAu57huZpTUwsWB8AxUFrBp6g4NqozXpbWsR6\"]},\"contracts/extension/Drop1155.sol\":{\"keccak256\":\"0xe45caeb13c768eaf73d223f677862aa732d1bfef1233af4531298ccdfda4a36f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ca83844fbfee7bbb0d2ca8e86981448200bd78de3e2d95ee7b1313b54998ecf3\",\"dweb:/ipfs/QmUvbwXwyVuJRpvLa88oEH3ZbVL3qagXrNamouhmifZrPg\"]},\"contracts/extension/LazyMint.sol\":{\"keccak256\":\"0xe88710d7f2ac2834be6ed3c2bff1314f0d9c8c65aec7d05df9a6381d48a6f170\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c4734764afb84ecb1c5a99a441296a38f524c602227d0eae9bca3b325c895827\",\"dweb:/ipfs/QmWbwqzY6SqgitawoYeZmHiFvW6dp2fHoQfnb9WuVNr6E9\"]},\"contracts/extension/Ownable.sol\":{\"keccak256\":\"0x45447691686861237d5e1acb9d723d861a3fb3d561335e4f385d1547f25e27a5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5142293e36c736f744c73aaecab5f7be8e2d5ac70acc67851e0cea5171fd6782\",\"dweb:/ipfs/QmVJT5B84o5vFc5E2VteZdBhrT1HMutc7Ax72UKD1aZatJ\"]},\"contracts/extension/Permissions.sol\":{\"keccak256\":\"0xe7e18181f2d2c8bae4afc7ee69ce1d547e7aa583182e8e0853ca33c49a28c04d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://75d5f5a9356c290e398a5dd05914b59c3d09e6fedde2da80b6f1012aedf323f8\",\"dweb:/ipfs/QmNrrf8Uyq33XBsE2NqVTW6HVX3XixFTjCG8KGbGxdEE84\"]},\"contracts/extension/PermissionsEnumerable.sol\":{\"keccak256\":\"0x434a6ffc16ddc437ffb37b8fbe4c9696385252f15a617c4606b8c5e10561caf3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1a9d4dac4bf2ae3c3c086af1956dc25e8b149b0914125e660cc0648791c247cb\",\"dweb:/ipfs/QmTMEggPdBea1JCamsShwRf3en2FgVTXNTPJ2isFtBk4Kk\"]},\"contracts/extension/PlatformFee.sol\":{\"keccak256\":\"0x8db4537648987b88dce356120fc96c48cffe53eaa5988b9a7e8aa023f4258163\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9e30009e63be23e60e92bf25582143596e3f01b2a1f7e121664559119a9f5890\",\"dweb:/ipfs/Qma3bi4NfCNZaukacNQMQ3j5kXn6Ym4mDa57Tqc26ssahE\"]},\"contracts/extension/PrimarySale.sol\":{\"keccak256\":\"0x9ef1ad82fadf988a07f4034b92ccdb3281682693e41759a79042814d36095f42\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0d962b48453e1f50b808193135c2f14265324fa8b75fe3b405ef7836e38921f7\",\"dweb:/ipfs/QmZDLNsZQj9kNcb15nBuWRpPwDdDvJS2gtFwqEs2Lwxb1N\"]},\"contracts/extension/Royalty.sol\":{\"keccak256\":\"0xcc3110048db91d4ecd05afcc6721fce6ade5eee8c2da0af8955e86ece8754350\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a1e830502fda46ab7618b65e155341d42bf007717edb27711b09bf6250ce1485\",\"dweb:/ipfs/QmY5fKpg7aCubR7fENu9htRFspU8hpSo7CVUNJxQdh8kv1\"]},\"contracts/extension/interface/IClaimCondition.sol\":{\"keccak256\":\"0x391e69970031edb30dfa59f8db33c7446b349cd5ec505fd99f0f0b672b19e6d6\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fd9eafca6098421f3aa25bf0a0b24386facc764b7ecb8e6ce4a890afa3c6d459\",\"dweb:/ipfs/QmPXTSX2ie5wsZ6FyXWS4YMa7aPpYNyza9Rym1n799B5LU\"]},\"contracts/extension/interface/IClaimConditionMultiPhase.sol\":{\"keccak256\":\"0x8388214d6cc8f1fd481aed7e062a8b23d5959e870a56076017fcf474404dbbfa\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://54c039ba9f0e674a6bdbb0ab015ad4054feffaea7eb3cc7c485aa95761156125\",\"dweb:/ipfs/QmTya89XYsc1iGAhfsHeZkgGaAv7ivA5Vr4jrGCifYHmKh\"]},\"contracts/extension/interface/IContractMetadata.sol\":{\"keccak256\":\"0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a\",\"dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr\"]},\"contracts/extension/interface/IDrop1155.sol\":{\"keccak256\":\"0xee20b25b4c52a1b931f8258758d1b8b5e44c4b7c365b6d5ebcb3d7ef2714c703\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6234aa8e83511c56f93d2f30a61625e065c27a87df2c4fc041ca721490187a89\",\"dweb:/ipfs/QmVWJTVM7Na3ZZRTkWuG52k7PaeVpf5zoke1e3ogB4YUir\"]},\"contracts/extension/interface/ILazyMint.sol\":{\"keccak256\":\"0x480953502a40e438d855392e322adc0369e2109f6d46fb9ec2bb3ad0afbb0aec\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2b3bb332d4f5e38f9786b00564ad417e48c689b4a92a60888c3845b986c995a3\",\"dweb:/ipfs/QmPVM4KTUeLD7uVCfP8MBQNRo7pU8xF3rXQuDcx3C6cLxA\"]},\"contracts/extension/interface/IOwnable.sol\":{\"keccak256\":\"0xd659a64da6264fdd50ee379be032fea4917eba4fadfd6d366107fb17e46907f3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c15940c4a3d229f4fdd1226fe297a58fde10b07b86a34de1ed11a8802dd5dea9\",\"dweb:/ipfs/QmS8p8CxWiahLkYsCWNhFjCnmQzuc4ck3kjYYuCFj8LsmC\"]},\"contracts/extension/interface/IPermissions.sol\":{\"keccak256\":\"0xc0cd1f87bac474a06f85e2b341b9b57662aee957fc24180d42c872481c2f2ae3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7dec3eed451d63867531d693f0be3279fa2c9aef3130f0826c3520c06820fa5d\",\"dweb:/ipfs/QmTYANrcPdd9SCe99DWsKJ19evNRQKQGZeoS1Keew4M2cS\"]},\"contracts/extension/interface/IPermissionsEnumerable.sol\":{\"keccak256\":\"0x2e742c18a4481bad41d56424cd16c52def2fb415f69e5fb5f67d8d979300ff95\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d9be33bb865e3e82aca540a3e38cbc2bf2e431f9d1bf39c50d6c757e7b7bf3ee\",\"dweb:/ipfs/Qmdad1Xqj5SQ44Bk4bwD2uA36XnGHtqnVYSomKZQvnUBVG\"]},\"contracts/extension/interface/IPlatformFee.sol\":{\"keccak256\":\"0x8c23c2a223a3b94ccce125b418e5fabfb631695d927e336512bc8dca61bbc736\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://86dd8c93e75cb3a44d64c873154ee3857b604d1b07a9e52c120870172c2e9a34\",\"dweb:/ipfs/QmWXxEi7ygoRjN8yWYfVGbfhuwVg8bkLoHNzr3xMNa1VRv\"]},\"contracts/extension/interface/IPrimarySale.sol\":{\"keccak256\":\"0x77c89cb8d9b781b0a08b1fa81c95a0dd5c19200b2fb0dc884c1084b931624004\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a37b042af11a08ba5518dadf72c91745d1b5f42b1c20ea5282492bfd18f53869\",\"dweb:/ipfs/QmWEYYG5VqR8MRfr2rydDV98GLKmaJtCC8G1W7MzJ9qFnF\"]},\"contracts/extension/interface/IRoyalty.sol\":{\"keccak256\":\"0x13912ba3970fdedd1eb5bf8bf0bcc5e64e43f2cadb8d22c3d6fb695fd9877385\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b84d19df7aa9cb7460cca50ab050cdcfffb62f53c246daf35df276cad7088e9b\",\"dweb:/ipfs/QmNPPHJuiW1KCcq3aXELnA4X8NaSPM9S2vHbsBEEDYiwP8\"]},\"contracts/external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol\":{\"keccak256\":\"0xdbc96b1264d2e2bd82cb7e697056929325e09d1641321145a8cec53b22b9567d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ca7ccf947d21d98878ec18e941b750cd2ae7c563e6d2a707da4f806038d67c8\",\"dweb:/ipfs/QmYVLYUPMD3b95vKrS5yjxcz2MDNNzkWJY9xc9bc9oTZdh\"]},\"contracts/external-deps/openzeppelin/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xa6149938a7c7c8af4244743aeaafcfb1fd9ce15ad45de58fa9576f0ed5599b2c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://839aa4ea6ef6d1972881bfd7420a9ddcd2f37139e3f0bf25310f93f48410702d\",\"dweb:/ipfs/QmSH65kStfbgMbfjFdfJqV412omPy6nB1JMvMt9q7SsytW\"]},\"contracts/infra/interface/IWETH.sol\":{\"keccak256\":\"0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1\",\"dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU\"]},\"contracts/lib/CurrencyTransferLib.sol\":{\"keccak256\":\"0x4a30bc9a8cd6cc8b855621fb1a651e2c3a1639b0ad153f1139c3ba463605672d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://417cc64ec6393f3cc89981ca9c32bbcc444a5f91363d69f84dd8ace888b2b859\",\"dweb:/ipfs/QmZeaQsYGx4VNoP8e1fcwC87PwvyakheWYeuwEwhFSJnvB\"]},\"contracts/lib/MerkleProof.sol\":{\"keccak256\":\"0xfeb51ecaba6f9c1649a143825dc3b7ca0eb9edff7787c7a54957dfd542f7ece0\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://8819ab0f7546a6a0dc126d5dbf019ba015563220689f661b1da4174f7ce87bbf\",\"dweb:/ipfs/QmT6Q9YQGMJbCWhE6G4ze8dsqjMyewnErTNGgLFSAHkFU7\"]},\"contracts/lib/TWAddress.sol\":{\"keccak256\":\"0x460f032cf3bf43d586e126ab2ec8be4335767f497ccb699741546a1cfba94a7e\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://28fcbf6dde6c2eeb9864f6ec6f21dcc81ec426877debf4b912f2f3bc5b0fc91e\",\"dweb:/ipfs/QmS1SHrZDfefX8EE7DdvszTY6VPCHydf4HM7NKJ2gP72e6\"]},\"contracts/lib/TWStrings.sol\":{\"keccak256\":\"0xef7e9954d888f99baffc10db1d9bf6a2beb66c842d81dea90352ddded22cbbf8\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://832415134684f5413f9d0f3f5536aa30848690cfe54769f7730a3807438f3bf9\",\"dweb:/ipfs/QmduTiUdtsnyJVMXpdomohEWDVg46aZhnS9uTURu4x1NYt\"]},\"contracts/prebuilts/drop/DropERC1155.sol\":{\"keccak256\":\"0x0cc9f7c66e2848d953b724c46d57db0d0c7396942d4f903dc62953d83bba2ec1\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0d099f543a7ee13109bed6dd6a96b3fdf82065048977986c1afe371782e0ea39\",\"dweb:/ipfs/QmacvufgsP8xUvWRKHVpo9YmcCQkB6CS7VnevKs73xiKJ3\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC2981Upgradeable.sol\":{\"keccak256\":\"0xa8ff557539dcfed5706eddde2aa929e06bb1764e71aa8c1048a78970bf3ca37d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6be9c619be5e1c7ecf1c3d13adc5fa81ae602ca3866b739b2f43443a77f5606c\",\"dweb:/ipfs/QmTSxboNCPMfhuvaCfZhEusxZ4BNxwzZoWFys8kzD29EcA\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":{\"keccak256\":\"0xe9208ac0602174f0ed30fb10c6292193308424dfa375a8270027d65878d4a812\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://55486f8de97b0ab0ea1310f5f671dc1fecd72b7660d07ba0f5254a6df06cdc39\",\"dweb:/ipfs/QmRAP85D5Vr8M68NDGNUuo84rLwMVmrUEE8cr9i8FZtJwx\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/IERC1155ReceiverUpgradeable.sol\":{\"keccak256\":\"0xffcb29612efb57efc8f0d4897deb5abaeac830022c59a3aa17446d698dbc856b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a4da6e241d1d8c2ef214c311e02c749f45b5e0dd8168c667bc8ee6f67dcf4ce\",\"dweb:/ipfs/QmdsKj5frsNS7ZCfJBm4XNfy6MueV9udBF2FiBxVXwxybG\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/IERC1155Upgradeable.sol\":{\"keccak256\":\"0x091a49ef99a2be002680781a10cc9dd74c0f348301ede5482c4ea625f79a8ffe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e037192cadfd20ad0f1b0c54a0c770a1ba551e7d0fcb6d3708e5ba352f88ded2\",\"dweb:/ipfs/QmTXwY6odV1ToDZAYxbbLKThe9M5PUWTmWBjwT776hH4qm\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/IERC1155MetadataURIUpgradeable.sol\":{\"keccak256\":\"0xa350df12a8c10e821af05e0863f44e8317a0efa44df27bfd5dc1d63fdfa3c448\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1870980d15f9003916faf2a9a0eac6dcd4f0e28e2af6f5a3cee0cd685d460ee9\",\"dweb:/ipfs/QmY8K1YZQmuL2WDTPC8QwCm3ztrUD7JKmnvoZkMyGZceiM\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/MulticallUpgradeable.sol\":{\"keccak256\":\"0xb8709268fac307114f6cbb5e3cee798d91cd0adfea4d337c4920f8f0b2414f15\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34975544d7bea644eee9ad6e9034b7bbbc0b165159b77f60d0c6004300ab601d\",\"dweb:/ipfs/QmUW5vLADhvVqSdBe96QFM6gzwtv9pagpaUkzXmaeQTWPQ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xea5339a7fff0ed42b45be56a88efdd0b2ddde9fa480dc99fef9a6a4c5b776863\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://841619682637df5579b4c396d281d6c55b26f1b1acce1d0ab67bead5e39cf60c\",\"dweb:/ipfs/QmNRtuKp43ZHJwswdyT3GivY4fDMvz3cxBe1FfDthG1JGj\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7\",\"dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.12+commit.f00d7308"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_fromTokenId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_toTokenId",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "BatchMetadataUpdate",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "struct IClaimCondition.ClaimCondition[]",
              "name": "claimConditions",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "startTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxClaimableSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "supplyClaimed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "merkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "metadata",
                  "type": "string"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "resetEligibility",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ClaimConditionsUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "prevURI",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "newURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ContractURIUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newRoyaltyRecipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newRoyaltyBps",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DefaultRoyalty",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "platformFeeRecipient",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "flatFee",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "FlatPlatformFeeUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "maxTotalSupply",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MaxTotalSupplyUpdated",
          "anonymous": false
        },
        {
          "inputs": [],
          "type": "event",
          "name": "MetadataFrozen",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "prevOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnerUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "platformFeeRecipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "platformFeeBps",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PlatformFeeInfoUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "enum IPlatformFee.PlatformFeeType",
              "name": "feeType",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PlatformFeeTypeUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "PrimarySaleRecipientUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleAdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleGranted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleRevoked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "royaltyRecipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "royaltyBps",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RoyaltyForToken",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "saleRecipient",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SaleRecipientForTokenUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "claimConditionIndex",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "claimer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "quantityClaimed",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensClaimed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "startTokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "endTokenId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "baseURI",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "encryptedBaseURI",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensLazyMinted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "values",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TransferBatch",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TransferSingle",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "value",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "URI",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DEFAULT_ADMIN_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "accounts",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOfBatch",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "batchFrozen",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "values",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burnBatch"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_quantity",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_currency",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "struct IDrop1155.AllowlistProof",
              "name": "_allowlistProof",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32[]",
                  "name": "proof",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "claim"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "claimCondition",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "currentStartId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "count",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "contractType",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "contractURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "contractVersion",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_index",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "freezeBatchBaseURI"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getActiveClaimConditionId",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getBaseURICount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getBatchIdAtIndex",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_conditionId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getClaimConditionById",
          "outputs": [
            {
              "internalType": "struct IClaimCondition.ClaimCondition",
              "name": "condition",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "startTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxClaimableSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "supplyClaimed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "merkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "metadata",
                  "type": "string"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getDefaultRoyaltyInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getFlatPlatformFeeInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getPlatformFeeInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getPlatformFeeType",
          "outputs": [
            {
              "internalType": "enum IPlatformFee.PlatformFeeType",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleAdmin",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleMember",
          "outputs": [
            {
              "internalType": "address",
              "name": "member",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleMemberCount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "count",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoyaltyInfoForToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_conditionId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_claimer",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getSupplyClaimedByWallet",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "supplyClaimedByWallet",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRole",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRoleWithSwitch",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_defaultAdmin",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_symbol",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_contractURI",
              "type": "string"
            },
            {
              "internalType": "address[]",
              "name": "_trustedForwarders",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "_saleRecipient",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_royaltyRecipient",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "_royaltyBps",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "_platformFeeBps",
              "type": "uint128"
            },
            {
              "internalType": "address",
              "name": "_platformFeeRecipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "forwarder",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isTrustedForwarder",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "_baseURIForTokens",
              "type": "string"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "lazyMint",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "batchId",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "maxTotalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes[]",
              "name": "data",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "multicall",
          "outputs": [
            {
              "internalType": "bytes[]",
              "name": "results",
              "type": "bytes[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nextTokenIdToMint",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "primarySaleRecipient",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeRole"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "salePrice",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "royaltyInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "royaltyAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeBatchTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "saleRecipient",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "struct IClaimCondition.ClaimCondition[]",
              "name": "_conditions",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "startTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxClaimableSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "supplyClaimed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "merkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "metadata",
                  "type": "string"
                }
              ]
            },
            {
              "internalType": "bool",
              "name": "_resetClaimEligibility",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setClaimConditions"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_uri",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setContractURI"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_royaltyRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_royaltyBps",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDefaultRoyaltyInfo"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_platformFeeRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_flatFee",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setFlatPlatformFeeInfo"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_maxTotalSupply",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMaxTotalSupply"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_platformFeeRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_platformFeeBps",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPlatformFeeInfo"
        },
        {
          "inputs": [
            {
              "internalType": "enum IPlatformFee.PlatformFeeType",
              "name": "_feeType",
              "type": "uint8"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPlatformFeeType"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_saleRecipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPrimarySaleRecipient"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_bps",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRoyaltyInfoForToken"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_saleRecipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setSaleRecipientForToken"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_index",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "_uri",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateBatchBaseURI"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "uri",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_conditionId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_claimer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_quantity",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_currency",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "struct IDrop1155.AllowlistProof",
              "name": "_allowlistProof",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32[]",
                  "name": "proof",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "verifyClaim",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isOverride",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "balanceOf(address,uint256)": {
            "details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
          },
          "balanceOfBatch(address[],uint256[])": {
            "details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
          },
          "burnBatch(address,uint256[],uint256[])": {
            "details": "Lets a token owner burn multiple tokens they own at once (i.e. destroy for good)"
          },
          "claim(address,uint256,uint256,address,uint256,(bytes32[],uint256,uint256,address),bytes)": {
            "details": "Lets an account claim tokens."
          },
          "freezeBatchBaseURI(uint256)": {
            "params": {
              "_index": "Index of the desired batch in batchIds array."
            }
          },
          "getActiveClaimConditionId(uint256)": {
            "details": "At any given moment, returns the uid for the active claim condition."
          },
          "getBaseURICount()": {
            "details": "Each batch of tokens has an in ID and an associated `baseURI`.                  See {batchIds}."
          },
          "getBatchIdAtIndex(uint256)": {
            "details": "See {getBaseURICount}.",
            "params": {
              "_index": "Index of the desired batch in batchIds array."
            }
          },
          "getClaimConditionById(uint256,uint256)": {
            "details": "Returns the claim condition at the given uid."
          },
          "getFlatPlatformFeeInfo()": {
            "details": "Returns the platform fee bps and recipient."
          },
          "getPlatformFeeInfo()": {
            "details": "Returns the platform fee recipient and bps."
          },
          "getPlatformFeeType()": {
            "details": "Returns the platform fee bps and recipient."
          },
          "getRoleAdmin(bytes32)": {
            "details": "See {grantRole} and {revokeRole}.                  To change a role's admin, use {_setRoleAdmin}.",
            "params": {
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "getRoleMember(bytes32,uint256)": {
            "details": "Returns `member` who has `role`, at `index` of role-members list.                  See struct {RoleMembers}, and mapping {roleMembers}",
            "params": {
              "index": "Index in list of current members for the role.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            },
            "returns": {
              "member": " Address of account that has `role`"
            }
          },
          "getRoleMemberCount(bytes32)": {
            "details": "Returns `count` of accounts that have `role`.                  See struct {RoleMembers}, and mapping {roleMembers}",
            "params": {
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            },
            "returns": {
              "count": "  Total number of accounts that have `role`"
            }
          },
          "getRoyaltyInfoForToken(uint256)": {
            "details": "Returns royalty recipient and bps for `_tokenId`.",
            "params": {
              "_tokenId": "The tokenID of the NFT for which to query royalty info."
            }
          },
          "getSupplyClaimedByWallet(uint256,uint256,address)": {
            "details": "Returns the supply claimed by claimer for a given conditionId."
          },
          "grantRole(bytes32,address)": {
            "details": "Caller must have admin role for the `role`.                  Emits {RoleGranted Event}.",
            "params": {
              "account": "Address of the account to which the role is being granted.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "hasRole(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`.",
            "params": {
              "account": "Address of the account for which the role is being checked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "hasRoleWithSwitch(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`.                  Role restrictions can be swtiched on and off:                      - If address(0) has ROLE, then the ROLE restrictions                        don't apply.                      - If address(0) does not have ROLE, then the ROLE                        restrictions will apply.",
            "params": {
              "account": "Address of the account for which the role is being checked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "initialize(address,string,string,string,address[],address,address,uint128,uint128,address)": {
            "details": "Initializes the contract, like a constructor."
          },
          "isApprovedForAll(address,address)": {
            "details": "See {IERC1155-isApprovedForAll}."
          },
          "lazyMint(uint256,string,bytes)": {
            "params": {
              "_amount": "The number of NFTs to lazy mint.",
              "_baseURIForTokens": "The base URI for the 'n' number of NFTs being lazy minted, where the metadata for each                           of those NFTs is `${baseURIForTokens}/${tokenId}`.",
              "_data": "Additional bytes data to be used at the discretion of the consumer of the contract."
            },
            "returns": {
              "batchId": "         A unique integer identifier for the batch of NFTs lazy minted together."
            }
          },
          "multicall(bytes[])": {
            "details": "Receives and executes a batch of function calls on this contract."
          },
          "nextTokenIdToMint()": {
            "details": "The tokenId of the next NFT that will be minted / lazy minted."
          },
          "primarySaleRecipient()": {
            "details": "Returns primary sale recipient address."
          },
          "renounceRole(bytes32,address)": {
            "details": "Caller must have the `role`, with caller being the same as `account`.                  Emits {RoleRevoked Event}.",
            "params": {
              "account": "Address of the account from which the role is being revoked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "revokeRole(bytes32,address)": {
            "details": "Caller must have admin role for the `role`.                  Emits {RoleRevoked Event}.",
            "params": {
              "account": "Address of the account from which the role is being revoked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "royaltyInfo(uint256,uint256)": {
            "details": "Returns royalty amount and recipient for `tokenId` and `salePrice`.",
            "params": {
              "salePrice": "Sale price of the token.",
              "tokenId": "The tokenID of the NFT for which to query royalty info."
            },
            "returns": {
              "receiver": "       Address of royalty recipient account.",
              "royaltyAmount": "  Royalty amount calculated at current royaltyBps value."
            }
          },
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
            "details": "See {IERC1155-safeBatchTransferFrom}."
          },
          "safeTransferFrom(address,address,uint256,uint256,bytes)": {
            "details": "See {IERC1155-safeTransferFrom}."
          },
          "setApprovalForAll(address,bool)": {
            "details": "See {IERC1155-setApprovalForAll}."
          },
          "setClaimConditions(uint256,(uint256,uint256,uint256,uint256,bytes32,uint256,address,string)[],bool)": {
            "details": "Lets a contract admin set claim conditions."
          },
          "setContractURI(string)": {
            "details": "Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.",
            "params": {
              "_uri": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "setDefaultRoyaltyInfo(address,uint256)": {
            "details": "Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {DefaultRoyalty Event}; See {_setupDefaultRoyaltyInfo}.",
            "params": {
              "_royaltyBps": "Updated royalty bps.",
              "_royaltyRecipient": "Address to be set as default royalty recipient."
            }
          },
          "setMaxTotalSupply(uint256,uint256)": {
            "details": "Lets a module admin set a max total supply for token."
          },
          "setOwner(address)": {
            "params": {
              "_newOwner": "The address to set as the new owner of the contract."
            }
          },
          "setPlatformFeeInfo(address,uint256)": {
            "details": "Caller should be authorized to set platform fee info.                  See {_canSetPlatformFeeInfo}.                  Emits {PlatformFeeInfoUpdated Event}; See {_setupPlatformFeeInfo}.",
            "params": {
              "_platformFeeBps": "Updated platformFeeBps.",
              "_platformFeeRecipient": "Address to be set as new platformFeeRecipient."
            }
          },
          "setPrimarySaleRecipient(address)": {
            "details": "Caller should be authorized to set primary sales info.                  See {_canSetPrimarySaleRecipient}.                  Emits {PrimarySaleRecipientUpdated Event}; See {_setupPrimarySaleRecipient}.",
            "params": {
              "_saleRecipient": "Address to be set as new recipient of primary sales."
            }
          },
          "setRoyaltyInfoForToken(uint256,address,uint256)": {
            "details": "Sets royalty info for `_tokenId`. Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {RoyaltyForToken Event}; See {_setupRoyaltyInfoForToken}.",
            "params": {
              "_bps": "Updated royalty bps for the token Id.",
              "_recipient": "Address to be set as royalty recipient for given token Id."
            }
          },
          "setSaleRecipientForToken(uint256,address)": {
            "details": "Lets a contract admin set the recipient for all primary sales."
          },
          "supportsInterface(bytes4)": {
            "details": "See ERC 165"
          },
          "updateBatchBaseURI(uint256,string)": {
            "params": {
              "_index": "Index of the desired batch in batchIds array.",
              "_uri": "the new base URI for the batch."
            }
          },
          "uri(uint256)": {
            "details": "Returns the uri for a given tokenId."
          },
          "verifyClaim(uint256,address,uint256,uint256,address,uint256,(bytes32[],uint256,uint256,address))": {
            "details": "Checks a request to claim NFTs against the active claim condition's criteria."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "contractURI()": {
            "notice": "Returns the contract metadata URI."
          },
          "freezeBatchBaseURI(uint256)": {
            "notice": "Freezes the base URI for a batch of tokens."
          },
          "getBaseURICount()": {
            "notice": "Returns the count of batches of NFTs."
          },
          "getBatchIdAtIndex(uint256)": {
            "notice": "Returns the ID for the batch of tokens at the given index."
          },
          "getDefaultRoyaltyInfo()": {
            "notice": "Returns the defualt royalty recipient and BPS for this contract's NFTs."
          },
          "getRoleAdmin(bytes32)": {
            "notice": "Returns the admin role that controls the specified role."
          },
          "getRoleMember(bytes32,uint256)": {
            "notice": "Returns the role-member from a list of members for a role,                  at a given index."
          },
          "getRoleMemberCount(bytes32)": {
            "notice": "Returns total number of accounts that have a role."
          },
          "getRoyaltyInfoForToken(uint256)": {
            "notice": "View royalty info for a given token."
          },
          "grantRole(bytes32,address)": {
            "notice": "Grants a role to an account, if not previously granted."
          },
          "hasRole(bytes32,address)": {
            "notice": "Checks whether an account has a particular role."
          },
          "hasRoleWithSwitch(bytes32,address)": {
            "notice": "Checks whether an account has a particular role;                  role restrictions can be swtiched on and off."
          },
          "lazyMint(uint256,string,bytes)": {
            "notice": "Lets an authorized address lazy mint a given amount of NFTs."
          },
          "owner()": {
            "notice": "Returns the owner of the contract."
          },
          "renounceRole(bytes32,address)": {
            "notice": "Revokes role from the account."
          },
          "revokeRole(bytes32,address)": {
            "notice": "Revokes role from an account."
          },
          "royaltyInfo(uint256,uint256)": {
            "notice": "View royalty info for a given token and sale price."
          },
          "setContractURI(string)": {
            "notice": "Lets a contract admin set the URI for contract-level metadata."
          },
          "setDefaultRoyaltyInfo(address,uint256)": {
            "notice": "Updates default royalty recipient and bps."
          },
          "setFlatPlatformFeeInfo(address,uint256)": {
            "notice": "Lets a module admin set a flat fee on primary sales."
          },
          "setOwner(address)": {
            "notice": "Lets an authorized wallet set a new owner for the contract."
          },
          "setPlatformFeeInfo(address,uint256)": {
            "notice": "Updates the platform fee recipient and bps."
          },
          "setPlatformFeeType(uint8)": {
            "notice": "Lets a module admin set platform fee type."
          },
          "setPrimarySaleRecipient(address)": {
            "notice": "Updates primary sale recipient."
          },
          "setRoyaltyInfoForToken(uint256,address,uint256)": {
            "notice": "Updates default royalty recipient and bps for a particular token."
          },
          "updateBatchBaseURI(uint256,string)": {
            "notice": "Updates the base URI for a batch of tokens."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=lib/chainlink/",
        "@ds-test/=lib/ds-test/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@std/=lib/forge-std/src/",
        "@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/",
        "ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/",
        "ERC721A/=lib/ERC721A/contracts/",
        "chainlink/=lib/chainlink/",
        "contracts/=contracts/",
        "ds-test/=lib/ds-test/src/",
        "dynamic-contracts/=lib/dynamic-contracts/src/",
        "erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/",
        "erc721a-upgradeable/=lib/ERC721A-Upgradeable/",
        "erc721a/=lib/ERC721A/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/prebuilts/drop/DropERC1155.sol": "DropERC1155"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/eip/interface/IERC165.sol": {
        "keccak256": "0x35d0a916f70344a5fcc6c67cb531b6150d2fce43e72a6282385eab02020f2f49",
        "urls": [
          "bzz-raw://75ccd8b9a8b52a93b8097fcb8181b7afb6d72bbe6eaabf434f0481a7a207cc8a",
          "dweb:/ipfs/QmPUZAEE4nwkijcE2amAXAWEVGVG5XaKWGhpgnRwpAf93R"
        ],
        "license": "MIT"
      },
      "contracts/eip/interface/IERC20.sol": {
        "keccak256": "0x5bdd9dd97ba7d9d7c9a2953db287e4d9d7fa93a27a96bc2e72a8da4919b6f7ff",
        "urls": [
          "bzz-raw://45527c265ee5de6bbb3ecfc052e7b1175531a82c2ac16172020aee855f7dd592",
          "dweb:/ipfs/QmVZthqbG916qUQSwv1LE8bB58ZGQ1VfQbLbbRV5urfEYA"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC2981.sol": {
        "keccak256": "0x7886c17b1bc3df885201378fd070d2f00d05fa54f20f7daf10382ec6ff4bd0c9",
        "urls": [
          "bzz-raw://a0802623ba9555f6d186bab5fd139203b643e88ea31d78f4f05cddd4008ac6cf",
          "dweb:/ipfs/QmYbqzSKkKmF2xYeH1zGNewBDNAhukuaZEUVAvYgnKt1He"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/BatchMintMetadata.sol": {
        "keccak256": "0x1d1ee64f8456dc8b4cdd096e27ac4687babd485f49a728146126744d67f25f2f",
        "urls": [
          "bzz-raw://9e01b0d51bdccbcce9095f606c8624926b518c1385c1349c41896236a0345ee0",
          "dweb:/ipfs/QmWHTbztwRf9Fyq4617MrVSqF8o7UXMT5nFe6epQ92N6L9"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/ContractMetadata.sol": {
        "keccak256": "0xf53ab08ec3057056872c15e35a5610f7a43426bd2829786aed006d527177adfe",
        "urls": [
          "bzz-raw://ee132ae5efdd372152febfcd8fd3a7cb82c7019367d92c886f5096003a79f392",
          "dweb:/ipfs/QmRW1cGWmZAu57huZpTUwsWB8AxUFrBp6g4NqozXpbWsR6"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Drop1155.sol": {
        "keccak256": "0xe45caeb13c768eaf73d223f677862aa732d1bfef1233af4531298ccdfda4a36f",
        "urls": [
          "bzz-raw://ca83844fbfee7bbb0d2ca8e86981448200bd78de3e2d95ee7b1313b54998ecf3",
          "dweb:/ipfs/QmUvbwXwyVuJRpvLa88oEH3ZbVL3qagXrNamouhmifZrPg"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/LazyMint.sol": {
        "keccak256": "0xe88710d7f2ac2834be6ed3c2bff1314f0d9c8c65aec7d05df9a6381d48a6f170",
        "urls": [
          "bzz-raw://c4734764afb84ecb1c5a99a441296a38f524c602227d0eae9bca3b325c895827",
          "dweb:/ipfs/QmWbwqzY6SqgitawoYeZmHiFvW6dp2fHoQfnb9WuVNr6E9"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Ownable.sol": {
        "keccak256": "0x45447691686861237d5e1acb9d723d861a3fb3d561335e4f385d1547f25e27a5",
        "urls": [
          "bzz-raw://5142293e36c736f744c73aaecab5f7be8e2d5ac70acc67851e0cea5171fd6782",
          "dweb:/ipfs/QmVJT5B84o5vFc5E2VteZdBhrT1HMutc7Ax72UKD1aZatJ"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Permissions.sol": {
        "keccak256": "0xe7e18181f2d2c8bae4afc7ee69ce1d547e7aa583182e8e0853ca33c49a28c04d",
        "urls": [
          "bzz-raw://75d5f5a9356c290e398a5dd05914b59c3d09e6fedde2da80b6f1012aedf323f8",
          "dweb:/ipfs/QmNrrf8Uyq33XBsE2NqVTW6HVX3XixFTjCG8KGbGxdEE84"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/PermissionsEnumerable.sol": {
        "keccak256": "0x434a6ffc16ddc437ffb37b8fbe4c9696385252f15a617c4606b8c5e10561caf3",
        "urls": [
          "bzz-raw://1a9d4dac4bf2ae3c3c086af1956dc25e8b149b0914125e660cc0648791c247cb",
          "dweb:/ipfs/QmTMEggPdBea1JCamsShwRf3en2FgVTXNTPJ2isFtBk4Kk"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/PlatformFee.sol": {
        "keccak256": "0x8db4537648987b88dce356120fc96c48cffe53eaa5988b9a7e8aa023f4258163",
        "urls": [
          "bzz-raw://9e30009e63be23e60e92bf25582143596e3f01b2a1f7e121664559119a9f5890",
          "dweb:/ipfs/Qma3bi4NfCNZaukacNQMQ3j5kXn6Ym4mDa57Tqc26ssahE"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/PrimarySale.sol": {
        "keccak256": "0x9ef1ad82fadf988a07f4034b92ccdb3281682693e41759a79042814d36095f42",
        "urls": [
          "bzz-raw://0d962b48453e1f50b808193135c2f14265324fa8b75fe3b405ef7836e38921f7",
          "dweb:/ipfs/QmZDLNsZQj9kNcb15nBuWRpPwDdDvJS2gtFwqEs2Lwxb1N"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Royalty.sol": {
        "keccak256": "0xcc3110048db91d4ecd05afcc6721fce6ade5eee8c2da0af8955e86ece8754350",
        "urls": [
          "bzz-raw://a1e830502fda46ab7618b65e155341d42bf007717edb27711b09bf6250ce1485",
          "dweb:/ipfs/QmY5fKpg7aCubR7fENu9htRFspU8hpSo7CVUNJxQdh8kv1"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IClaimCondition.sol": {
        "keccak256": "0x391e69970031edb30dfa59f8db33c7446b349cd5ec505fd99f0f0b672b19e6d6",
        "urls": [
          "bzz-raw://fd9eafca6098421f3aa25bf0a0b24386facc764b7ecb8e6ce4a890afa3c6d459",
          "dweb:/ipfs/QmPXTSX2ie5wsZ6FyXWS4YMa7aPpYNyza9Rym1n799B5LU"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IClaimConditionMultiPhase.sol": {
        "keccak256": "0x8388214d6cc8f1fd481aed7e062a8b23d5959e870a56076017fcf474404dbbfa",
        "urls": [
          "bzz-raw://54c039ba9f0e674a6bdbb0ab015ad4054feffaea7eb3cc7c485aa95761156125",
          "dweb:/ipfs/QmTya89XYsc1iGAhfsHeZkgGaAv7ivA5Vr4jrGCifYHmKh"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IContractMetadata.sol": {
        "keccak256": "0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2",
        "urls": [
          "bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a",
          "dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IDrop1155.sol": {
        "keccak256": "0xee20b25b4c52a1b931f8258758d1b8b5e44c4b7c365b6d5ebcb3d7ef2714c703",
        "urls": [
          "bzz-raw://6234aa8e83511c56f93d2f30a61625e065c27a87df2c4fc041ca721490187a89",
          "dweb:/ipfs/QmVWJTVM7Na3ZZRTkWuG52k7PaeVpf5zoke1e3ogB4YUir"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/ILazyMint.sol": {
        "keccak256": "0x480953502a40e438d855392e322adc0369e2109f6d46fb9ec2bb3ad0afbb0aec",
        "urls": [
          "bzz-raw://2b3bb332d4f5e38f9786b00564ad417e48c689b4a92a60888c3845b986c995a3",
          "dweb:/ipfs/QmPVM4KTUeLD7uVCfP8MBQNRo7pU8xF3rXQuDcx3C6cLxA"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IOwnable.sol": {
        "keccak256": "0xd659a64da6264fdd50ee379be032fea4917eba4fadfd6d366107fb17e46907f3",
        "urls": [
          "bzz-raw://c15940c4a3d229f4fdd1226fe297a58fde10b07b86a34de1ed11a8802dd5dea9",
          "dweb:/ipfs/QmS8p8CxWiahLkYsCWNhFjCnmQzuc4ck3kjYYuCFj8LsmC"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPermissions.sol": {
        "keccak256": "0xc0cd1f87bac474a06f85e2b341b9b57662aee957fc24180d42c872481c2f2ae3",
        "urls": [
          "bzz-raw://7dec3eed451d63867531d693f0be3279fa2c9aef3130f0826c3520c06820fa5d",
          "dweb:/ipfs/QmTYANrcPdd9SCe99DWsKJ19evNRQKQGZeoS1Keew4M2cS"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPermissionsEnumerable.sol": {
        "keccak256": "0x2e742c18a4481bad41d56424cd16c52def2fb415f69e5fb5f67d8d979300ff95",
        "urls": [
          "bzz-raw://d9be33bb865e3e82aca540a3e38cbc2bf2e431f9d1bf39c50d6c757e7b7bf3ee",
          "dweb:/ipfs/Qmdad1Xqj5SQ44Bk4bwD2uA36XnGHtqnVYSomKZQvnUBVG"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPlatformFee.sol": {
        "keccak256": "0x8c23c2a223a3b94ccce125b418e5fabfb631695d927e336512bc8dca61bbc736",
        "urls": [
          "bzz-raw://86dd8c93e75cb3a44d64c873154ee3857b604d1b07a9e52c120870172c2e9a34",
          "dweb:/ipfs/QmWXxEi7ygoRjN8yWYfVGbfhuwVg8bkLoHNzr3xMNa1VRv"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPrimarySale.sol": {
        "keccak256": "0x77c89cb8d9b781b0a08b1fa81c95a0dd5c19200b2fb0dc884c1084b931624004",
        "urls": [
          "bzz-raw://a37b042af11a08ba5518dadf72c91745d1b5f42b1c20ea5282492bfd18f53869",
          "dweb:/ipfs/QmWEYYG5VqR8MRfr2rydDV98GLKmaJtCC8G1W7MzJ9qFnF"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IRoyalty.sol": {
        "keccak256": "0x13912ba3970fdedd1eb5bf8bf0bcc5e64e43f2cadb8d22c3d6fb695fd9877385",
        "urls": [
          "bzz-raw://b84d19df7aa9cb7460cca50ab050cdcfffb62f53c246daf35df276cad7088e9b",
          "dweb:/ipfs/QmNPPHJuiW1KCcq3aXELnA4X8NaSPM9S2vHbsBEEDYiwP8"
        ],
        "license": "Apache-2.0"
      },
      "contracts/external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol": {
        "keccak256": "0xdbc96b1264d2e2bd82cb7e697056929325e09d1641321145a8cec53b22b9567d",
        "urls": [
          "bzz-raw://7ca7ccf947d21d98878ec18e941b750cd2ae7c563e6d2a707da4f806038d67c8",
          "dweb:/ipfs/QmYVLYUPMD3b95vKrS5yjxcz2MDNNzkWJY9xc9bc9oTZdh"
        ],
        "license": "MIT"
      },
      "contracts/external-deps/openzeppelin/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xa6149938a7c7c8af4244743aeaafcfb1fd9ce15ad45de58fa9576f0ed5599b2c",
        "urls": [
          "bzz-raw://839aa4ea6ef6d1972881bfd7420a9ddcd2f37139e3f0bf25310f93f48410702d",
          "dweb:/ipfs/QmSH65kStfbgMbfjFdfJqV412omPy6nB1JMvMt9q7SsytW"
        ],
        "license": "MIT"
      },
      "contracts/infra/interface/IWETH.sol": {
        "keccak256": "0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b",
        "urls": [
          "bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1",
          "dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/CurrencyTransferLib.sol": {
        "keccak256": "0x4a30bc9a8cd6cc8b855621fb1a651e2c3a1639b0ad153f1139c3ba463605672d",
        "urls": [
          "bzz-raw://417cc64ec6393f3cc89981ca9c32bbcc444a5f91363d69f84dd8ace888b2b859",
          "dweb:/ipfs/QmZeaQsYGx4VNoP8e1fcwC87PwvyakheWYeuwEwhFSJnvB"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/MerkleProof.sol": {
        "keccak256": "0xfeb51ecaba6f9c1649a143825dc3b7ca0eb9edff7787c7a54957dfd542f7ece0",
        "urls": [
          "bzz-raw://8819ab0f7546a6a0dc126d5dbf019ba015563220689f661b1da4174f7ce87bbf",
          "dweb:/ipfs/QmT6Q9YQGMJbCWhE6G4ze8dsqjMyewnErTNGgLFSAHkFU7"
        ],
        "license": "Apache 2.0"
      },
      "contracts/lib/TWAddress.sol": {
        "keccak256": "0x460f032cf3bf43d586e126ab2ec8be4335767f497ccb699741546a1cfba94a7e",
        "urls": [
          "bzz-raw://28fcbf6dde6c2eeb9864f6ec6f21dcc81ec426877debf4b912f2f3bc5b0fc91e",
          "dweb:/ipfs/QmS1SHrZDfefX8EE7DdvszTY6VPCHydf4HM7NKJ2gP72e6"
        ],
        "license": "Apache 2.0"
      },
      "contracts/lib/TWStrings.sol": {
        "keccak256": "0xef7e9954d888f99baffc10db1d9bf6a2beb66c842d81dea90352ddded22cbbf8",
        "urls": [
          "bzz-raw://832415134684f5413f9d0f3f5536aa30848690cfe54769f7730a3807438f3bf9",
          "dweb:/ipfs/QmduTiUdtsnyJVMXpdomohEWDVg46aZhnS9uTURu4x1NYt"
        ],
        "license": "Apache 2.0"
      },
      "contracts/prebuilts/drop/DropERC1155.sol": {
        "keccak256": "0x0cc9f7c66e2848d953b724c46d57db0d0c7396942d4f903dc62953d83bba2ec1",
        "urls": [
          "bzz-raw://0d099f543a7ee13109bed6dd6a96b3fdf82065048977986c1afe371782e0ea39",
          "dweb:/ipfs/QmacvufgsP8xUvWRKHVpo9YmcCQkB6CS7VnevKs73xiKJ3"
        ],
        "license": "Apache-2.0"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC2981Upgradeable.sol": {
        "keccak256": "0xa8ff557539dcfed5706eddde2aa929e06bb1764e71aa8c1048a78970bf3ca37d",
        "urls": [
          "bzz-raw://6be9c619be5e1c7ecf1c3d13adc5fa81ae602ca3866b739b2f43443a77f5606c",
          "dweb:/ipfs/QmTSxboNCPMfhuvaCfZhEusxZ4BNxwzZoWFys8kzD29EcA"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e",
        "urls": [
          "bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497",
          "dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol": {
        "keccak256": "0xe9208ac0602174f0ed30fb10c6292193308424dfa375a8270027d65878d4a812",
        "urls": [
          "bzz-raw://55486f8de97b0ab0ea1310f5f671dc1fecd72b7660d07ba0f5254a6df06cdc39",
          "dweb:/ipfs/QmRAP85D5Vr8M68NDGNUuo84rLwMVmrUEE8cr9i8FZtJwx"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/IERC1155ReceiverUpgradeable.sol": {
        "keccak256": "0xffcb29612efb57efc8f0d4897deb5abaeac830022c59a3aa17446d698dbc856b",
        "urls": [
          "bzz-raw://4a4da6e241d1d8c2ef214c311e02c749f45b5e0dd8168c667bc8ee6f67dcf4ce",
          "dweb:/ipfs/QmdsKj5frsNS7ZCfJBm4XNfy6MueV9udBF2FiBxVXwxybG"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/IERC1155Upgradeable.sol": {
        "keccak256": "0x091a49ef99a2be002680781a10cc9dd74c0f348301ede5482c4ea625f79a8ffe",
        "urls": [
          "bzz-raw://e037192cadfd20ad0f1b0c54a0c770a1ba551e7d0fcb6d3708e5ba352f88ded2",
          "dweb:/ipfs/QmTXwY6odV1ToDZAYxbbLKThe9M5PUWTmWBjwT776hH4qm"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/IERC1155MetadataURIUpgradeable.sol": {
        "keccak256": "0xa350df12a8c10e821af05e0863f44e8317a0efa44df27bfd5dc1d63fdfa3c448",
        "urls": [
          "bzz-raw://1870980d15f9003916faf2a9a0eac6dcd4f0e28e2af6f5a3cee0cd685d460ee9",
          "dweb:/ipfs/QmY8K1YZQmuL2WDTPC8QwCm3ztrUD7JKmnvoZkMyGZceiM"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3",
        "urls": [
          "bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4",
          "dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/MulticallUpgradeable.sol": {
        "keccak256": "0xb8709268fac307114f6cbb5e3cee798d91cd0adfea4d337c4920f8f0b2414f15",
        "urls": [
          "bzz-raw://34975544d7bea644eee9ad6e9034b7bbbc0b165159b77f60d0c6004300ab601d",
          "dweb:/ipfs/QmUW5vLADhvVqSdBe96QFM6gzwtv9pagpaUkzXmaeQTWPQ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol": {
        "keccak256": "0xea5339a7fff0ed42b45be56a88efdd0b2ddde9fa480dc99fef9a6a4c5b776863",
        "urls": [
          "bzz-raw://841619682637df5579b4c396d281d6c55b26f1b1acce1d0ab67bead5e39cf60c",
          "dweb:/ipfs/QmNRtuKp43ZHJwswdyT3GivY4fDMvz3cxBe1FfDthG1JGj"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol": {
        "keccak256": "0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a",
        "urls": [
          "bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7",
          "dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol": {
        "keccak256": "0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09",
        "urls": [
          "bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758",
          "dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/prebuilts/drop/DropERC1155.sol",
    "id": 72857,
    "exportedSymbols": {
      "AddressUpgradeable": [
        155768
      ],
      "BatchMintMetadata": [
        17299
      ],
      "ContextUpgradeable": [
        156044
      ],
      "ContractMetadata": [
        17526
      ],
      "CurrencyTransferLib": [
        63578
      ],
      "Drop1155": [
        19028
      ],
      "DropERC1155": [
        72856
      ],
      "ERC1155Upgradeable": [
        151630
      ],
      "ERC165Upgradeable": [
        157249
      ],
      "ERC2771ContextUpgradeable": [
        45607
      ],
      "IClaimCondition": [
        32285
      ],
      "IClaimConditionMultiPhase": [
        32308
      ],
      "IContractMetadata": [
        32437
      ],
      "IDrop1155": [
        32645
      ],
      "IERC1155MetadataURIUpgradeable": [
        151968
      ],
      "IERC1155ReceiverUpgradeable": [
        151671
      ],
      "IERC1155Upgradeable": [
        151793
      ],
      "IERC165": [
        13829
      ],
      "IERC165Upgradeable": [
        157261
      ],
      "IERC20": [
        13899
      ],
      "IERC2981": [
        13973
      ],
      "IERC2981Upgradeable": [
        150048
      ],
      "ILazyMint": [
        32812
      ],
      "IOwnable": [
        33183
      ],
      "IPermissions": [
        33256
      ],
      "IPermissionsEnumerable": [
        33281
      ],
      "IPlatformFee": [
        33324
      ],
      "IPrimarySale": [
        33345
      ],
      "IRoyalty": [
        33409
      ],
      "IWETH": [
        54557
      ],
      "Initializable": [
        150199
      ],
      "LazyMint": [
        20261
      ],
      "MerkleProof": [
        63678
      ],
      "MulticallUpgradeable": [
        156227
      ],
      "Ownable": [
        21153
      ],
      "Permissions": [
        21500
      ],
      "PermissionsEnumerable": [
        21799
      ],
      "PlatformFee": [
        22005
      ],
      "PrimarySale": [
        22067
      ],
      "Royalty": [
        22395
      ],
      "SafeERC20": [
        48369
      ],
      "StringsUpgradeable": [
        156453
      ],
      "TWAddress": [
        64152
      ],
      "TWStrings": [
        64852
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:14534:325",
    "nodes": [
      {
        "id": 71977,
        "nodeType": "PragmaDirective",
        "src": "39:24:325",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".11"
        ]
      },
      {
        "id": 71978,
        "nodeType": "ImportDirective",
        "src": "775:82:325",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 72857,
        "sourceUnit": 151631,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 71979,
        "nodeType": "ImportDirective",
        "src": "859:76:325",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/utils/MulticallUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/utils/MulticallUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 72857,
        "sourceUnit": 156228,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 71980,
        "nodeType": "ImportDirective",
        "src": "936:74:325",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 72857,
        "sourceUnit": 156454,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 71981,
        "nodeType": "ImportDirective",
        "src": "1011:80:325",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC2981Upgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/interfaces/IERC2981Upgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 72857,
        "sourceUnit": 150049,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 71982,
        "nodeType": "ImportDirective",
        "src": "1141:79:325",
        "nodes": [],
        "absolutePath": "contracts/external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol",
        "file": "../../external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 72857,
        "sourceUnit": 45608,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 71983,
        "nodeType": "ImportDirective",
        "src": "1221:43:325",
        "nodes": [],
        "absolutePath": "contracts/lib/CurrencyTransferLib.sol",
        "file": "../../lib/CurrencyTransferLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 72857,
        "sourceUnit": 63579,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 71984,
        "nodeType": "ImportDirective",
        "src": "1306:46:325",
        "nodes": [],
        "absolutePath": "contracts/extension/ContractMetadata.sol",
        "file": "../../extension/ContractMetadata.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 72857,
        "sourceUnit": 17527,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 71985,
        "nodeType": "ImportDirective",
        "src": "1353:41:325",
        "nodes": [],
        "absolutePath": "contracts/extension/PlatformFee.sol",
        "file": "../../extension/PlatformFee.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 72857,
        "sourceUnit": 22006,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 71986,
        "nodeType": "ImportDirective",
        "src": "1395:37:325",
        "nodes": [],
        "absolutePath": "contracts/extension/Royalty.sol",
        "file": "../../extension/Royalty.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 72857,
        "sourceUnit": 22396,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 71987,
        "nodeType": "ImportDirective",
        "src": "1433:41:325",
        "nodes": [],
        "absolutePath": "contracts/extension/PrimarySale.sol",
        "file": "../../extension/PrimarySale.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 72857,
        "sourceUnit": 22068,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 71988,
        "nodeType": "ImportDirective",
        "src": "1475:37:325",
        "nodes": [],
        "absolutePath": "contracts/extension/Ownable.sol",
        "file": "../../extension/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 72857,
        "sourceUnit": 21154,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 71989,
        "nodeType": "ImportDirective",
        "src": "1513:38:325",
        "nodes": [],
        "absolutePath": "contracts/extension/LazyMint.sol",
        "file": "../../extension/LazyMint.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 72857,
        "sourceUnit": 20262,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 71990,
        "nodeType": "ImportDirective",
        "src": "1552:51:325",
        "nodes": [],
        "absolutePath": "contracts/extension/PermissionsEnumerable.sol",
        "file": "../../extension/PermissionsEnumerable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 72857,
        "sourceUnit": 21800,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 71991,
        "nodeType": "ImportDirective",
        "src": "1604:38:325",
        "nodes": [],
        "absolutePath": "contracts/extension/Drop1155.sol",
        "file": "../../extension/Drop1155.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 72857,
        "sourceUnit": 19029,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 72856,
        "nodeType": "ContractDefinition",
        "src": "1644:12928:325",
        "nodes": [
          {
            "id": 72018,
            "nodeType": "UsingForDirective",
            "src": "1910:37:325",
            "nodes": [],
            "libraryName": {
              "id": 72016,
              "name": "StringsUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 156453,
              "src": "1916:18:325"
            },
            "typeName": {
              "id": 72017,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1939:7:325",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 72020,
            "nodeType": "VariableDeclaration",
            "src": "2155:18:325",
            "nodes": [],
            "constant": false,
            "functionSelector": "06fdde03",
            "mutability": "mutable",
            "name": "name",
            "nameLocation": "2169:4:325",
            "scope": 72856,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 72019,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "2155:6:325",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "id": 72022,
            "nodeType": "VariableDeclaration",
            "src": "2200:20:325",
            "nodes": [],
            "constant": false,
            "functionSelector": "95d89b41",
            "mutability": "mutable",
            "name": "symbol",
            "nameLocation": "2214:6:325",
            "scope": 72856,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 72021,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "2200:6:325",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "id": 72025,
            "nodeType": "VariableDeclaration",
            "src": "2330:28:325",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 72023,
              "nodeType": "StructuredDocumentation",
              "src": "2227:98:325",
              "text": "@dev Only transfers to or from TRANSFER_ROLE holders are valid, when transfers are restricted."
            },
            "mutability": "mutable",
            "name": "transferRole",
            "nameLocation": "2346:12:325",
            "scope": 72856,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 72024,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2330:7:325",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "id": 72028,
            "nodeType": "VariableDeclaration",
            "src": "2455:26:325",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 72026,
              "nodeType": "StructuredDocumentation",
              "src": "2364:86:325",
              "text": "@dev Only MINTER_ROLE holders can sign off on `MintRequest`s and lazy mint tokens."
            },
            "mutability": "mutable",
            "name": "minterRole",
            "nameLocation": "2471:10:325",
            "scope": 72856,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 72027,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2455:7:325",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "id": 72031,
            "nodeType": "VariableDeclaration",
            "src": "2619:28:325",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 72029,
              "nodeType": "StructuredDocumentation",
              "src": "2487:127:325",
              "text": "@dev Only METADATA_ROLE holders can reveal the URI for a batch of delayed reveal NFTs, and update or freeze batch metadata."
            },
            "mutability": "mutable",
            "name": "metadataRole",
            "nameLocation": "2635:12:325",
            "scope": 72856,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 72030,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2619:7:325",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "id": 72035,
            "nodeType": "VariableDeclaration",
            "src": "2699:41:325",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 72032,
              "nodeType": "StructuredDocumentation",
              "src": "2654:40:325",
              "text": "@dev Max bps in the thirdweb system."
            },
            "mutability": "constant",
            "name": "MAX_BPS",
            "nameLocation": "2724:7:325",
            "scope": 72856,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 72033,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2699:7:325",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31305f303030",
              "id": 72034,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2734:6:325",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000_by_1",
                "typeString": "int_const 10000"
              },
              "value": "10_000"
            },
            "visibility": "private"
          },
          {
            "id": 72040,
            "nodeType": "VariableDeclaration",
            "src": "3015:46:325",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 72036,
              "nodeType": "StructuredDocumentation",
              "src": "2928:82:325",
              "text": "@dev Mapping from token ID => total circulating supply of tokens with that ID."
            },
            "functionSelector": "bd85b039",
            "mutability": "mutable",
            "name": "totalSupply",
            "nameLocation": "3050:11:325",
            "scope": 72856,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 72039,
              "keyType": {
                "id": 72037,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3023:7:325",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "3015:27:325",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 72038,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3034:7:325",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 72045,
            "nodeType": "VariableDeclaration",
            "src": "3172:49:325",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 72041,
              "nodeType": "StructuredDocumentation",
              "src": "3068:99:325",
              "text": "@dev Mapping from token ID => maximum possible total circulating supply of tokens with that ID."
            },
            "functionSelector": "24aaffaa",
            "mutability": "mutable",
            "name": "maxTotalSupply",
            "nameLocation": "3207:14:325",
            "scope": 72856,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 72044,
              "keyType": {
                "id": 72042,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3180:7:325",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "3172:27:325",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 72043,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3191:7:325",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 72050,
            "nodeType": "VariableDeclaration",
            "src": "3313:48:325",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 72046,
              "nodeType": "StructuredDocumentation",
              "src": "3228:80:325",
              "text": "@dev Mapping from token ID => the address of the recipient of primary sales."
            },
            "functionSelector": "c7337d6b",
            "mutability": "mutable",
            "name": "saleRecipient",
            "nameLocation": "3348:13:325",
            "scope": 72856,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 72049,
              "keyType": {
                "id": 72047,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3321:7:325",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "3313:27:325",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 72048,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "3332:7:325",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 72057,
            "nodeType": "EventDefinition",
            "src": "3617:69:325",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 72051,
              "nodeType": "StructuredDocumentation",
              "src": "3546:66:325",
              "text": "@dev Emitted when the global max supply of a token is updated."
            },
            "name": "MaxTotalSupplyUpdated",
            "nameLocation": "3623:21:325",
            "parameters": {
              "id": 72056,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 72053,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3653:7:325",
                  "nodeType": "VariableDeclaration",
                  "scope": 72057,
                  "src": "3645:15:325",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 72052,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3645:7:325",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 72055,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "maxTotalSupply",
                  "nameLocation": "3670:14:325",
                  "nodeType": "VariableDeclaration",
                  "scope": 72057,
                  "src": "3662:22:325",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 72054,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3662:7:325",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3644:41:325"
            }
          },
          {
            "id": 72064,
            "nodeType": "EventDefinition",
            "src": "3774:83:325",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 72058,
              "nodeType": "StructuredDocumentation",
              "src": "3692:77:325",
              "text": "@dev Emitted when the sale recipient for a particular tokenId is updated."
            },
            "name": "SaleRecipientForTokenUpdated",
            "nameLocation": "3780:28:325",
            "parameters": {
              "id": 72063,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 72060,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3825:7:325",
                  "nodeType": "VariableDeclaration",
                  "scope": 72064,
                  "src": "3809:23:325",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 72059,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3809:7:325",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 72062,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "saleRecipient",
                  "nameLocation": "3842:13:325",
                  "nodeType": "VariableDeclaration",
                  "scope": 72064,
                  "src": "3834:21:325",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 72061,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3834:7:325",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3808:48:325"
            }
          },
          {
            "id": 72070,
            "nodeType": "FunctionDefinition",
            "src": "4055:28:325",
            "nodes": [],
            "body": {
              "id": 72069,
              "nodeType": "Block",
              "src": "4081:2:325",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "id": 72067,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 72066,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 150119,
                  "src": "4069:11:325"
                },
                "nodeType": "ModifierInvocation",
                "src": "4069:11:325"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 72065,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4066:2:325"
            },
            "returnParameters": {
              "id": 72068,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4081:0:325"
            },
            "scope": 72856,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 72199,
            "nodeType": "FunctionDefinition",
            "src": "4148:1511:325",
            "nodes": [],
            "body": {
              "id": 72198,
              "nodeType": "Block",
              "src": "4535:1124:325",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    72098
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 72098,
                      "mutability": "mutable",
                      "name": "_transferRole",
                      "nameLocation": "4553:13:325",
                      "nodeType": "VariableDeclaration",
                      "scope": 72198,
                      "src": "4545:21:325",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 72097,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4545:7:325",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 72102,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "5452414e534645525f524f4c45",
                        "id": 72100,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4579:15:325",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c",
                          "typeString": "literal_string \"TRANSFER_ROLE\""
                        },
                        "value": "TRANSFER_ROLE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c",
                          "typeString": "literal_string \"TRANSFER_ROLE\""
                        }
                      ],
                      "id": 72099,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "4569:9:325",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 72101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4569:26:325",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4545:50:325"
                },
                {
                  "assignments": [
                    72104
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 72104,
                      "mutability": "mutable",
                      "name": "_minterRole",
                      "nameLocation": "4613:11:325",
                      "nodeType": "VariableDeclaration",
                      "scope": 72198,
                      "src": "4605:19:325",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 72103,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4605:7:325",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 72108,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "4d494e5445525f524f4c45",
                        "id": 72106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4637:13:325",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                          "typeString": "literal_string \"MINTER_ROLE\""
                        },
                        "value": "MINTER_ROLE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                          "typeString": "literal_string \"MINTER_ROLE\""
                        }
                      ],
                      "id": 72105,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "4627:9:325",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 72107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4627:24:325",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4605:46:325"
                },
                {
                  "assignments": [
                    72110
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 72110,
                      "mutability": "mutable",
                      "name": "_metadataRole",
                      "nameLocation": "4669:13:325",
                      "nodeType": "VariableDeclaration",
                      "scope": 72198,
                      "src": "4661:21:325",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 72109,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4661:7:325",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 72114,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "4d455441444154415f524f4c45",
                        "id": 72112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4695:15:325",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6bd6b5318a46e5fff572d5e4258a20774aab40cc35ac7680654b9081fcc82f80",
                          "typeString": "literal_string \"METADATA_ROLE\""
                        },
                        "value": "METADATA_ROLE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_6bd6b5318a46e5fff572d5e4258a20774aab40cc35ac7680654b9081fcc82f80",
                          "typeString": "literal_string \"METADATA_ROLE\""
                        }
                      ],
                      "id": 72111,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "4685:9:325",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 72113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4685:26:325",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4661:50:325"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 72116,
                        "name": "_trustedForwarders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72082,
                        "src": "4819:18:325",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      ],
                      "id": 72115,
                      "name": "__ERC2771Context_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45514,
                      "src": "4797:21:325",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address[] memory)"
                      }
                    },
                    "id": 72117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4797:41:325",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 72118,
                  "nodeType": "ExpressionStatement",
                  "src": "4797:41:325"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 72120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4873:2:325",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 72119,
                      "name": "__ERC1155_init_unchained",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 150447,
                      "src": "4848:24:325",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 72121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4848:28:325",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 72122,
                  "nodeType": "ExpressionStatement",
                  "src": "4848:28:325"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 72124,
                        "name": "_contractURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72079,
                        "src": "4950:12:325",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 72123,
                      "name": "_setupContractURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17519,
                      "src": "4932:17:325",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 72125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4932:31:325",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 72126,
                  "nodeType": "ExpressionStatement",
                  "src": "4932:31:325"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 72128,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72073,
                        "src": "4985:13:325",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 72127,
                      "name": "_setupOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21146,
                      "src": "4973:11:325",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 72129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4973:26:325",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 72130,
                  "nodeType": "ExpressionStatement",
                  "src": "4973:26:325"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 72132,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21176,
                        "src": "5021:18:325",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 72133,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72073,
                        "src": "5041:13:325",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 72131,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        21723
                      ],
                      "referencedDeclaration": 21723,
                      "src": "5010:10:325",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 72134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5010:45:325",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 72135,
                  "nodeType": "ExpressionStatement",
                  "src": "5010:45:325"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 72137,
                        "name": "_minterRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72104,
                        "src": "5076:11:325",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 72138,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72073,
                        "src": "5089:13:325",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 72136,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        21723
                      ],
                      "referencedDeclaration": 21723,
                      "src": "5065:10:325",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 72139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5065:38:325",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 72140,
                  "nodeType": "ExpressionStatement",
                  "src": "5065:38:325"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 72142,
                        "name": "_transferRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72098,
                        "src": "5124:13:325",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 72143,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72073,
                        "src": "5139:13:325",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 72141,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        21723
                      ],
                      "referencedDeclaration": 21723,
                      "src": "5113:10:325",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 72144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5113:40:325",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 72145,
                  "nodeType": "ExpressionStatement",
                  "src": "5113:40:325"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 72147,
                        "name": "_transferRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72098,
                        "src": "5174:13:325",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 72150,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5197:1:325",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 72149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5189:7:325",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 72148,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5189:7:325",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 72151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5189:10:325",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 72146,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        21723
                      ],
                      "referencedDeclaration": 21723,
                      "src": "5163:10:325",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 72152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5163:37:325",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 72153,
                  "nodeType": "ExpressionStatement",
                  "src": "5163:37:325"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 72155,
                        "name": "_metadataRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72110,
                        "src": "5221:13:325",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 72156,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72073,
                        "src": "5236:13:325",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 72154,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        21723
                      ],
                      "referencedDeclaration": 21723,
                      "src": "5210:10:325",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 72157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5210:40:325",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 72158,
                  "nodeType": "ExpressionStatement",
                  "src": "5210:40:325"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 72160,
                        "name": "_metadataRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72110,
                        "src": "5274:13:325",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 72161,
                        "name": "_metadataRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72110,
                        "src": "5289:13:325",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 72159,
                      "name": "_setRoleAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21360,
                      "src": "5260:13:325",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32,bytes32)"
                      }
                    },
                    "id": 72162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5260:43:325",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 72163,
                  "nodeType": "ExpressionStatement",
                  "src": "5260:43:325"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 72165,
                        "name": "_platformFeeRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72092,
                        "src": "5336:21:325",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 72166,
                        "name": "_platformFeeBps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72090,
                        "src": "5359:15:325",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 72164,
                      "name": "_setupPlatformFeeInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21916,
                      "src": "5314:21:325",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 72167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5314:61:325",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 72168,
                  "nodeType": "ExpressionStatement",
                  "src": "5314:61:325"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 72170,
                        "name": "_royaltyRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72086,
                        "src": "5410:17:325",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 72171,
                        "name": "_royaltyBps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72088,
                        "src": "5429:11:325",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 72169,
                      "name": "_setupDefaultRoyaltyInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22326,
                      "src": "5385:24:325",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 72172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5385:56:325",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 72173,
                  "nodeType": "ExpressionStatement",
                  "src": "5385:56:325"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 72175,
                        "name": "_saleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72084,
                        "src": "5478:14:325",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 72174,
                      "name": "_setupPrimarySaleRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22060,
                      "src": "5451:26:325",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 72176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5451:42:325",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 72177,
                  "nodeType": "ExpressionStatement",
                  "src": "5451:42:325"
                },
                {
                  "expression": {
                    "id": 72180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 72178,
                      "name": "transferRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 72025,
                      "src": "5504:12:325",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 72179,
                      "name": "_transferRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 72098,
                      "src": "5519:13:325",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "5504:28:325",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 72181,
                  "nodeType": "ExpressionStatement",
                  "src": "5504:28:325"
                },
                {
                  "expression": {
                    "id": 72184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 72182,
                      "name": "minterRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 72028,
                      "src": "5542:10:325",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 72183,
                      "name": "_minterRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 72104,
                      "src": "5555:11:325",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "5542:24:325",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 72185,
                  "nodeType": "ExpressionStatement",
                  "src": "5542:24:325"
                },
                {
                  "expression": {
                    "id": 72188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 72186,
                      "name": "metadataRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 72031,
                      "src": "5576:12:325",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 72187,
                      "name": "_metadataRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 72110,
                      "src": "5591:13:325",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "5576:28:325",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 72189,
                  "nodeType": "ExpressionStatement",
                  "src": "5576:28:325"
                },
                {
                  "expression": {
                    "id": 72192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 72190,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 72020,
                      "src": "5614:4:325",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 72191,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 72075,
                      "src": "5621:5:325",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "5614:12:325",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 72193,
                  "nodeType": "ExpressionStatement",
                  "src": "5614:12:325"
                },
                {
                  "expression": {
                    "id": 72196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 72194,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 72022,
                      "src": "5636:6:325",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 72195,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 72077,
                      "src": "5645:7:325",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "5636:16:325",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 72197,
                  "nodeType": "ExpressionStatement",
                  "src": "5636:16:325"
                }
              ]
            },
            "documentation": {
              "id": 72071,
              "nodeType": "StructuredDocumentation",
              "src": "4089:54:325",
              "text": "@dev Initializes the contract, like a constructor."
            },
            "functionSelector": "e1591634",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 72095,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 72094,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 150119,
                  "src": "4523:11:325"
                },
                "nodeType": "ModifierInvocation",
                "src": "4523:11:325"
              }
            ],
            "name": "initialize",
            "nameLocation": "4157:10:325",
            "parameters": {
              "id": 72093,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 72073,
                  "mutability": "mutable",
                  "name": "_defaultAdmin",
                  "nameLocation": "4185:13:325",
                  "nodeType": "VariableDeclaration",
                  "scope": 72199,
                  "src": "4177:21:325",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 72072,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4177:7:325",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 72075,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "4222:5:325",
                  "nodeType": "VariableDeclaration",
                  "scope": 72199,
                  "src": "4208:19:325",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 72074,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4208:6:325",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 72077,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "4251:7:325",
                  "nodeType": "VariableDeclaration",
                  "scope": 72199,
                  "src": "4237:21:325",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 72076,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4237:6:325",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 72079,
                  "mutability": "mutable",
                  "name": "_contractURI",
                  "nameLocation": "4282:12:325",
                  "nodeType": "VariableDeclaration",
                  "scope": 72199,
                  "src": "4268:26:325",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 72078,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4268:6:325",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 72082,
                  "mutability": "mutable",
                  "name": "_trustedForwarders",
                  "nameLocation": "4321:18:325",
                  "nodeType": "VariableDeclaration",
                  "scope": 72199,
                  "src": "4304:35:325",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 72080,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "4304:7:325",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 72081,
                    "nodeType": "ArrayTypeName",
                    "src": "4304:9:325",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 72084,
                  "mutability": "mutable",
                  "name": "_saleRecipient",
                  "nameLocation": "4357:14:325",
                  "nodeType": "VariableDeclaration",
                  "scope": 72199,
                  "src": "4349:22:325",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 72083,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4349:7:325",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 72086,
                  "mutability": "mutable",
                  "name": "_royaltyRecipient",
                  "nameLocation": "4389:17:325",
                  "nodeType": "VariableDeclaration",
                  "scope": 72199,
                  "src": "4381:25:325",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 72085,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4381:7:325",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 72088,
                  "mutability": "mutable",
                  "name": "_royaltyBps",
                  "nameLocation": "4424:11:325",
                  "nodeType": "VariableDeclaration",
                  "scope": 72199,
                  "src": "4416:19:325",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 72087,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "4416:7:325",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 72090,
                  "mutability": "mutable",
                  "name": "_platformFeeBps",
                  "nameLocation": "4453:15:325",
                  "nodeType": "VariableDeclaration",
                  "scope": 72199,
                  "src": "4445:23:325",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 72089,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "4445:7:325",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 72092,
                  "mutability": "mutable",
                  "name": "_platformFeeRecipient",
                  "nameLocation": "4486:21:325",
                  "nodeType": "VariableDeclaration",
                  "scope": 72199,
                  "src": "4478:29:325",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 72091,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4478:7:325",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4167:346:325"
            },
            "returnParameters": {
              "id": 72096,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4535:0:325"
            },
            "scope": 72856,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 72226,
            "nodeType": "FunctionDefinition",
            "src": "5907:211:325",
            "nodes": [],
            "body": {
              "id": 72225,
              "nodeType": "Block",
              "src": "5983:135:325",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    72209
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 72209,
                      "mutability": "mutable",
                      "name": "batchUri",
                      "nameLocation": "6007:8:325",
                      "nodeType": "VariableDeclaration",
                      "scope": 72225,
                      "src": "5993:22:325",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 72208,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "5993:6:325",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 72213,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 72211,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72202,
                        "src": "6030:8:325",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 72210,
                      "name": "_getBaseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17141,
                      "src": "6018:11:325",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (uint256) view returns (string memory)"
                      }
                    },
                    "id": 72212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6018:21:325",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5993:46:325"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 72218,
                            "name": "batchUri",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 72209,
                            "src": "6080:8:325",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 72219,
                                "name": "_tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 72202,
                                "src": "6090:8:325",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 72220,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "toString",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 156315,
                              "src": "6090:17:325",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256) pure returns (string memory)"
                              }
                            },
                            "id": 72221,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6090:19:325",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "id": 72216,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "6063:3:325",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 72217,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "6063:16:325",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 72222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6063:47:325",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 72215,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "6056:6:325",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                        "typeString": "type(string storage pointer)"
                      },
                      "typeName": {
                        "id": 72214,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "6056:6:325",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 72223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6056:55:325",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 72207,
                  "id": 72224,
                  "nodeType": "Return",
                  "src": "6049:62:325"
                }
              ]
            },
            "baseFunctions": [
              150490
            ],
            "documentation": {
              "id": 72200,
              "nodeType": "StructuredDocumentation",
              "src": "5857:45:325",
              "text": "@dev Returns the uri for a given tokenId."
            },
            "functionSelector": "0e89341c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "uri",
            "nameLocation": "5916:3:325",
            "overrides": {
              "id": 72204,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5950:8:325"
            },
            "parameters": {
              "id": 72203,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 72202,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "5928:8:325",
                  "nodeType": "VariableDeclaration",
                  "scope": 72226,
                  "src": "5920:16:325",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 72201,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5920:7:325",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5919:18:325"
            },
            "returnParameters": {
              "id": 72207,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 72206,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 72226,
                  "src": "5968:13:325",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 72205,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5968:6:325",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5967:15:325"
            },
            "scope": 72856,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 72250,
            "nodeType": "FunctionDefinition",
            "src": "6149:280:325",
            "nodes": [],
            "body": {
              "id": 72249,
              "nodeType": "Block",
              "src": "6313:116:325",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 72247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 72239,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 72229,
                          "src": "6354:11:325",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 72237,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -25,
                          "src": "6330:5:325",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_DropERC1155_$72856_$",
                            "typeString": "type(contract super DropERC1155)"
                          }
                        },
                        "id": 72238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 150478,
                        "src": "6330:23:325",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view returns (bool)"
                        }
                      },
                      "id": 72240,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6330:36:325",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 72246,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 72242,
                              "name": "IERC2981Upgradeable",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 150048,
                              "src": "6375:19:325",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC2981Upgradeable_$150048_$",
                                "typeString": "type(contract IERC2981Upgradeable)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_IERC2981Upgradeable_$150048_$",
                                "typeString": "type(contract IERC2981Upgradeable)"
                              }
                            ],
                            "id": 72241,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "6370:4:325",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 72243,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6370:25:325",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_IERC2981Upgradeable_$150048",
                            "typeString": "type(contract IERC2981Upgradeable)"
                          }
                        },
                        "id": 72244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "interfaceId",
                        "nodeType": "MemberAccess",
                        "src": "6370:37:325",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 72245,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72229,
                        "src": "6411:11:325",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "src": "6370:52:325",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "6330:92:325",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 72236,
                  "id": 72248,
                  "nodeType": "Return",
                  "src": "6323:99:325"
                }
              ]
            },
            "baseFunctions": [
              13828,
              150478
            ],
            "documentation": {
              "id": 72227,
              "nodeType": "StructuredDocumentation",
              "src": "6124:20:325",
              "text": "@dev See ERC 165"
            },
            "functionSelector": "01ffc9a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "6158:17:325",
            "overrides": {
              "id": 72233,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 72231,
                  "name": "ERC1155Upgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 151630,
                  "src": "6257:18:325"
                },
                {
                  "id": 72232,
                  "name": "IERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 13829,
                  "src": "6277:7:325"
                }
              ],
              "src": "6248:37:325"
            },
            "parameters": {
              "id": 72230,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 72229,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "6183:11:325",
                  "nodeType": "VariableDeclaration",
                  "scope": 72250,
                  "src": "6176:18:325",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 72228,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "6176:6:325",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6175:20:325"
            },
            "returnParameters": {
              "id": 72236,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 72235,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 72250,
                  "src": "6303:4:325",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 72234,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6303:4:325",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6302:6:325"
            },
            "scope": 72856,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 72261,
            "nodeType": "FunctionDefinition",
            "src": "6620:102:325",
            "nodes": [],
            "body": {
              "id": 72260,
              "nodeType": "Block",
              "src": "6676:46:325",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "44726f7045524331313535",
                        "id": 72257,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6701:13:325",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2a5229d422ec906ca19d4f5dfbabd8ec39bc13d8fe7bcd55b85fa08a6a60ec27",
                          "typeString": "literal_string \"DropERC1155\""
                        },
                        "value": "DropERC1155"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_2a5229d422ec906ca19d4f5dfbabd8ec39bc13d8fe7bcd55b85fa08a6a60ec27",
                          "typeString": "literal_string \"DropERC1155\""
                        }
                      ],
                      "id": 72256,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "6693:7:325",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes32_$",
                        "typeString": "type(bytes32)"
                      },
                      "typeName": {
                        "id": 72255,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "6693:7:325",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 72258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6693:22:325",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 72254,
                  "id": 72259,
                  "nodeType": "Return",
                  "src": "6686:29:325"
                }
              ]
            },
            "functionSelector": "cb2ef6f7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "contractType",
            "nameLocation": "6629:12:325",
            "parameters": {
              "id": 72251,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6641:2:325"
            },
            "returnParameters": {
              "id": 72254,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 72253,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 72261,
                  "src": "6667:7:325",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 72252,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6667:7:325",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6666:9:325"
            },
            "scope": 72856,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 72272,
            "nodeType": "FunctionDefinition",
            "src": "6728:89:325",
            "nodes": [],
            "body": {
              "id": 72271,
              "nodeType": "Block",
              "src": "6785:32:325",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "34",
                        "id": 72268,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6808:1:325",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_4_by_1",
                          "typeString": "int_const 4"
                        },
                        "value": "4"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_4_by_1",
                          "typeString": "int_const 4"
                        }
                      ],
                      "id": 72267,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "6802:5:325",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint8_$",
                        "typeString": "type(uint8)"
                      },
                      "typeName": {
                        "id": 72266,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "6802:5:325",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 72269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6802:8:325",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 72265,
                  "id": 72270,
                  "nodeType": "Return",
                  "src": "6795:15:325"
                }
              ]
            },
            "functionSelector": "a0a8e460",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "contractVersion",
            "nameLocation": "6737:15:325",
            "parameters": {
              "id": 72262,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6752:2:325"
            },
            "returnParameters": {
              "id": 72265,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 72264,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 72272,
                  "src": "6778:5:325",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 72263,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "6778:5:325",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6777:7:325"
            },
            "scope": 72856,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 72295,
            "nodeType": "FunctionDefinition",
            "src": "7071:230:325",
            "nodes": [],
            "body": {
              "id": 72294,
              "nodeType": "Block",
              "src": "7179:122:325",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 72287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 72283,
                        "name": "maxTotalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72045,
                        "src": "7189:14:325",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 72285,
                      "indexExpression": {
                        "id": 72284,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72275,
                        "src": "7204:8:325",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7189:24:325",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 72286,
                      "name": "_maxTotalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 72277,
                      "src": "7216:15:325",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7189:42:325",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 72288,
                  "nodeType": "ExpressionStatement",
                  "src": "7189:42:325"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 72290,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72275,
                        "src": "7268:8:325",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 72291,
                        "name": "_maxTotalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72277,
                        "src": "7278:15:325",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 72289,
                      "name": "MaxTotalSupplyUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 72057,
                      "src": "7246:21:325",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 72292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7246:48:325",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 72293,
                  "nodeType": "EmitStatement",
                  "src": "7241:53:325"
                }
              ]
            },
            "documentation": {
              "id": 72273,
              "nodeType": "StructuredDocumentation",
              "src": "7004:62:325",
              "text": "@dev Lets a module admin set a max total supply for token."
            },
            "functionSelector": "87198cf2",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 72280,
                    "name": "DEFAULT_ADMIN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 21176,
                    "src": "7159:18:325",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 72281,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 72279,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21189,
                  "src": "7150:8:325"
                },
                "nodeType": "ModifierInvocation",
                "src": "7150:28:325"
              }
            ],
            "name": "setMaxTotalSupply",
            "nameLocation": "7080:17:325",
            "parameters": {
              "id": 72278,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 72275,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "7106:8:325",
                  "nodeType": "VariableDeclaration",
                  "scope": 72295,
                  "src": "7098:16:325",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 72274,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7098:7:325",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 72277,
                  "mutability": "mutable",
                  "name": "_maxTotalSupply",
                  "nameLocation": "7124:15:325",
                  "nodeType": "VariableDeclaration",
                  "scope": 72295,
                  "src": "7116:23:325",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 72276,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7116:7:325",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7097:43:325"
            },
            "returnParameters": {
              "id": 72282,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7179:0:325"
            },
            "scope": 72856,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 72318,
            "nodeType": "FunctionDefinition",
            "src": "7383:240:325",
            "nodes": [],
            "body": {
              "id": 72317,
              "nodeType": "Block",
              "src": "7497:126:325",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 72310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 72306,
                        "name": "saleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72050,
                        "src": "7507:13:325",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 72308,
                      "indexExpression": {
                        "id": 72307,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72298,
                        "src": "7521:8:325",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7507:23:325",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 72309,
                      "name": "_saleRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 72300,
                      "src": "7533:14:325",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7507:40:325",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 72311,
                  "nodeType": "ExpressionStatement",
                  "src": "7507:40:325"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 72313,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72298,
                        "src": "7591:8:325",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 72314,
                        "name": "_saleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72300,
                        "src": "7601:14:325",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 72312,
                      "name": "SaleRecipientForTokenUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 72064,
                      "src": "7562:28:325",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 72315,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7562:54:325",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 72316,
                  "nodeType": "EmitStatement",
                  "src": "7557:59:325"
                }
              ]
            },
            "documentation": {
              "id": 72296,
              "nodeType": "StructuredDocumentation",
              "src": "7307:71:325",
              "text": "@dev Lets a contract admin set the recipient for all primary sales."
            },
            "functionSelector": "29c49b9b",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 72303,
                    "name": "DEFAULT_ADMIN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 21176,
                    "src": "7477:18:325",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 72304,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 72302,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21189,
                  "src": "7468:8:325"
                },
                "nodeType": "ModifierInvocation",
                "src": "7468:28:325"
              }
            ],
            "name": "setSaleRecipientForToken",
            "nameLocation": "7392:24:325",
            "parameters": {
              "id": 72301,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 72298,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "7425:8:325",
                  "nodeType": "VariableDeclaration",
                  "scope": 72318,
                  "src": "7417:16:325",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 72297,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7417:7:325",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 72300,
                  "mutability": "mutable",
                  "name": "_saleRecipient",
                  "nameLocation": "7443:14:325",
                  "nodeType": "VariableDeclaration",
                  "scope": 72318,
                  "src": "7435:22:325",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 72299,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7435:7:325",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7416:42:325"
            },
            "returnParameters": {
              "id": 72305,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7497:0:325"
            },
            "scope": 72856,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 72341,
            "nodeType": "FunctionDefinition",
            "src": "7831:194:325",
            "nodes": [],
            "body": {
              "id": 72340,
              "nodeType": "Block",
              "src": "7929:96:325",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    72330
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 72330,
                      "mutability": "mutable",
                      "name": "batchId",
                      "nameLocation": "7947:7:325",
                      "nodeType": "VariableDeclaration",
                      "scope": 72340,
                      "src": "7939:15:325",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 72329,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7939:7:325",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 72334,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 72332,
                        "name": "_index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72321,
                        "src": "7975:6:325",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 72331,
                      "name": "getBatchIdAtIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17029,
                      "src": "7957:17:325",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 72333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7957:25:325",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7939:43:325"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 72336,
                        "name": "batchId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72330,
                        "src": "8004:7:325",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 72337,
                        "name": "_uri",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72323,
                        "src": "8013:4:325",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "id": 72335,
                      "name": "_setBaseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17228,
                      "src": "7992:11:325",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 72338,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7992:26:325",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 72339,
                  "nodeType": "ExpressionStatement",
                  "src": "7992:26:325"
                }
              ]
            },
            "documentation": {
              "id": 72319,
              "nodeType": "StructuredDocumentation",
              "src": "7629:197:325",
              "text": " @notice Updates the base URI for a batch of tokens.\n @param _index Index of the desired batch in batchIds array.\n @param _uri   the new base URI for the batch."
            },
            "functionSelector": "de903ddd",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 72326,
                    "name": "metadataRole",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 72031,
                    "src": "7915:12:325",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 72327,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 72325,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21189,
                  "src": "7906:8:325"
                },
                "nodeType": "ModifierInvocation",
                "src": "7906:22:325"
              }
            ],
            "name": "updateBatchBaseURI",
            "nameLocation": "7840:18:325",
            "parameters": {
              "id": 72324,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 72321,
                  "mutability": "mutable",
                  "name": "_index",
                  "nameLocation": "7867:6:325",
                  "nodeType": "VariableDeclaration",
                  "scope": 72341,
                  "src": "7859:14:325",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 72320,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7859:7:325",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 72323,
                  "mutability": "mutable",
                  "name": "_uri",
                  "nameLocation": "7891:4:325",
                  "nodeType": "VariableDeclaration",
                  "scope": 72341,
                  "src": "7875:20:325",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 72322,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7875:6:325",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7858:38:325"
            },
            "returnParameters": {
              "id": 72328,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7929:0:325"
            },
            "scope": 72856,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 72361,
            "nodeType": "FunctionDefinition",
            "src": "8180:169:325",
            "nodes": [],
            "body": {
              "id": 72360,
              "nodeType": "Block",
              "src": "8256:93:325",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    72351
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 72351,
                      "mutability": "mutable",
                      "name": "batchId",
                      "nameLocation": "8274:7:325",
                      "nodeType": "VariableDeclaration",
                      "scope": 72360,
                      "src": "8266:15:325",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 72350,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8266:7:325",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 72355,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 72353,
                        "name": "_index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72344,
                        "src": "8302:6:325",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 72352,
                      "name": "getBatchIdAtIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17029,
                      "src": "8284:17:325",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 72354,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8284:25:325",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8266:43:325"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 72357,
                        "name": "batchId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72351,
                        "src": "8334:7:325",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 72356,
                      "name": "_freezeBaseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17261,
                      "src": "8319:14:325",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 72358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8319:23:325",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 72359,
                  "nodeType": "ExpressionStatement",
                  "src": "8319:23:325"
                }
              ]
            },
            "documentation": {
              "id": 72342,
              "nodeType": "StructuredDocumentation",
              "src": "8031:144:325",
              "text": " @notice Freezes the base URI for a batch of tokens.\n @param _index Index of the desired batch in batchIds array."
            },
            "functionSelector": "a07ced9e",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 72347,
                    "name": "metadataRole",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 72031,
                    "src": "8242:12:325",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 72348,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 72346,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21189,
                  "src": "8233:8:325"
                },
                "nodeType": "ModifierInvocation",
                "src": "8233:22:325"
              }
            ],
            "name": "freezeBatchBaseURI",
            "nameLocation": "8189:18:325",
            "parameters": {
              "id": 72345,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 72344,
                  "mutability": "mutable",
                  "name": "_index",
                  "nameLocation": "8216:6:325",
                  "nodeType": "VariableDeclaration",
                  "scope": 72361,
                  "src": "8208:14:325",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 72343,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8208:7:325",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8207:16:325"
            },
            "returnParameters": {
              "id": 72349,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8256:0:325"
            },
            "scope": 72856,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 72401,
            "nodeType": "FunctionDefinition",
            "src": "8592:391:325",
            "nodes": [],
            "body": {
              "id": 72400,
              "nodeType": "Block",
              "src": "8802:181:325",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 72396,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 72386,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 72382,
                              "name": "maxTotalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 72045,
                              "src": "8833:14:325",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                "typeString": "mapping(uint256 => uint256)"
                              }
                            },
                            "id": 72384,
                            "indexExpression": {
                              "id": 72383,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 72364,
                              "src": "8848:8:325",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8833:24:325",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 72385,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8861:1:325",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "8833:29:325",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 72395,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 72391,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "id": 72387,
                                "name": "totalSupply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 72040,
                                "src": "8866:11:325",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                  "typeString": "mapping(uint256 => uint256)"
                                }
                              },
                              "id": 72389,
                              "indexExpression": {
                                "id": 72388,
                                "name": "_tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 72364,
                                "src": "8878:8:325",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8866:21:325",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 72390,
                              "name": "_quantity",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 72368,
                              "src": "8890:9:325",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "8866:33:325",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "baseExpression": {
                              "id": 72392,
                              "name": "maxTotalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 72045,
                              "src": "8903:14:325",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                "typeString": "mapping(uint256 => uint256)"
                              }
                            },
                            "id": 72394,
                            "indexExpression": {
                              "id": 72393,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 72364,
                              "src": "8918:8:325",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8903:24:325",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8866:61:325",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "8833:94:325",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "657863656564206d617820746f74616c20737570706c79",
                        "id": 72397,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8941:25:325",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_40dc160d0c899650bc1d2267443cabb7167aec1c3a21c13aa54b24e73829f9df",
                          "typeString": "literal_string \"exceed max total supply\""
                        },
                        "value": "exceed max total supply"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_40dc160d0c899650bc1d2267443cabb7167aec1c3a21c13aa54b24e73829f9df",
                          "typeString": "literal_string \"exceed max total supply\""
                        }
                      ],
                      "id": 72381,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8812:7:325",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 72398,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8812:164:325",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 72399,
                  "nodeType": "ExpressionStatement",
                  "src": "8812:164:325"
                }
              ]
            },
            "baseFunctions": [
              18977
            ],
            "documentation": {
              "id": 72362,
              "nodeType": "StructuredDocumentation",
              "src": "8538:49:325",
              "text": "@dev Runs before every `claim` function call."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeClaim",
            "nameLocation": "8601:12:325",
            "overrides": {
              "id": 72379,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8793:8:325"
            },
            "parameters": {
              "id": 72378,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 72364,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "8631:8:325",
                  "nodeType": "VariableDeclaration",
                  "scope": 72401,
                  "src": "8623:16:325",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 72363,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8623:7:325",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 72366,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 72401,
                  "src": "8649:7:325",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 72365,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8649:7:325",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 72368,
                  "mutability": "mutable",
                  "name": "_quantity",
                  "nameLocation": "8674:9:325",
                  "nodeType": "VariableDeclaration",
                  "scope": 72401,
                  "src": "8666:17:325",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 72367,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8666:7:325",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 72370,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 72401,
                  "src": "8693:7:325",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 72369,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8693:7:325",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 72372,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 72401,
                  "src": "8710:7:325",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 72371,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8710:7:325",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 72375,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 72401,
                  "src": "8727:23:325",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_AllowlistProof_$32589_calldata_ptr",
                    "typeString": "struct IDrop1155.AllowlistProof"
                  },
                  "typeName": {
                    "id": 72374,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 72373,
                      "name": "AllowlistProof",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 32589,
                      "src": "8727:14:325"
                    },
                    "referencedDeclaration": 32589,
                    "src": "8727:14:325",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_AllowlistProof_$32589_storage_ptr",
                      "typeString": "struct IDrop1155.AllowlistProof"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 72377,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 72401,
                  "src": "8760:12:325",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 72376,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8760:5:325",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8613:165:325"
            },
            "returnParameters": {
              "id": 72380,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8802:0:325"
            },
            "scope": 72856,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 72530,
            "nodeType": "FunctionDefinition",
            "src": "9073:1236:325",
            "nodes": [],
            "body": {
              "id": 72529,
              "nodeType": "Block",
              "src": "9284:1025:325",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 72418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 72416,
                      "name": "_pricePerToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 72412,
                      "src": "9298:14:325",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 72417,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9316:1:325",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "9298:19:325",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 72429,
                  "nodeType": "IfStatement",
                  "src": "9294:99:325",
                  "trueBody": {
                    "id": 72428,
                    "nodeType": "Block",
                    "src": "9319:74:325",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 72423,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 72420,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "9341:3:325",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 72421,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "9341:9:325",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 72422,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9354:1:325",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "9341:14:325",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "2156",
                              "id": 72424,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9357:4:325",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4ab0e284d9415599667c0851e9b633cbc3046603c10b78f97a804ca375843fda",
                                "typeString": "literal_string \"!V\""
                              },
                              "value": "!V"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_4ab0e284d9415599667c0851e9b633cbc3046603c10b78f97a804ca375843fda",
                                "typeString": "literal_string \"!V\""
                              }
                            ],
                            "id": 72419,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "9333:7:325",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 72425,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9333:29:325",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 72426,
                        "nodeType": "ExpressionStatement",
                        "src": "9333:29:325"
                      },
                      {
                        "functionReturnParameters": 72415,
                        "id": 72427,
                        "nodeType": "Return",
                        "src": "9376:7:325"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    72431,
                    72433
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 72431,
                      "mutability": "mutable",
                      "name": "platformFeeRecipient",
                      "nameLocation": "9412:20:325",
                      "nodeType": "VariableDeclaration",
                      "scope": 72529,
                      "src": "9404:28:325",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 72430,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9404:7:325",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 72433,
                      "mutability": "mutable",
                      "name": "platformFeeBps",
                      "nameLocation": "9441:14:325",
                      "nodeType": "VariableDeclaration",
                      "scope": 72529,
                      "src": "9434:21:325",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "typeName": {
                        "id": 72432,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "9434:6:325",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 72436,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 72434,
                      "name": "getPlatformFeeInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21835,
                      "src": "9459:18:325",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$_t_uint16_$",
                        "typeString": "function () view returns (address,uint16)"
                      }
                    },
                    "id": 72435,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9459:20:325",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_uint16_$",
                      "typeString": "tuple(address,uint16)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9403:76:325"
                },
                {
                  "assignments": [
                    72438
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 72438,
                      "mutability": "mutable",
                      "name": "_saleRecipient",
                      "nameLocation": "9498:14:325",
                      "nodeType": "VariableDeclaration",
                      "scope": 72529,
                      "src": "9490:22:325",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 72437,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9490:7:325",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 72462,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 72444,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 72439,
                        "name": "_primarySaleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72406,
                        "src": "9515:21:325",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 72442,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9548:1:325",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 72441,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9540:7:325",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 72440,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9540:7:325",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 72443,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9540:10:325",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "9515:35:325",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 72460,
                      "name": "_primarySaleRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 72406,
                      "src": "9670:21:325",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 72461,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "9515:176:325",
                    "trueExpression": {
                      "components": [
                        {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 72452,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "id": 72445,
                                "name": "saleRecipient",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 72050,
                                "src": "9566:13:325",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                  "typeString": "mapping(uint256 => address)"
                                }
                              },
                              "id": 72447,
                              "indexExpression": {
                                "id": 72446,
                                "name": "_tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 72404,
                                "src": "9580:8:325",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "9566:23:325",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 72450,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9601:1:325",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 72449,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "9593:7:325",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 72448,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "9593:7:325",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 72451,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9593:10:325",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "9566:37:325",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "baseExpression": {
                              "id": 72455,
                              "name": "saleRecipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 72050,
                              "src": "9631:13:325",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                "typeString": "mapping(uint256 => address)"
                              }
                            },
                            "id": 72457,
                            "indexExpression": {
                              "id": 72456,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 72404,
                              "src": "9645:8:325",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "9631:23:325",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 72458,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "9566:88:325",
                          "trueExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 72453,
                              "name": "primarySaleRecipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22024,
                              "src": "9606:20:325",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 72454,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9606:22:325",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 72459,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "9565:90:325",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9490:201:325"
                },
                {
                  "assignments": [
                    72464
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 72464,
                      "mutability": "mutable",
                      "name": "totalPrice",
                      "nameLocation": "9710:10:325",
                      "nodeType": "VariableDeclaration",
                      "scope": 72529,
                      "src": "9702:18:325",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 72463,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9702:7:325",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 72468,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 72467,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 72465,
                      "name": "_quantityToClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 72408,
                      "src": "9723:16:325",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 72466,
                      "name": "_pricePerToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 72412,
                      "src": "9742:14:325",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9723:33:325",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9702:54:325"
                },
                {
                  "assignments": [
                    72470
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 72470,
                      "mutability": "mutable",
                      "name": "platformFees",
                      "nameLocation": "9774:12:325",
                      "nodeType": "VariableDeclaration",
                      "scope": 72529,
                      "src": "9766:20:325",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 72469,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9766:7:325",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 72477,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 72476,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 72473,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 72471,
                            "name": "totalPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 72464,
                            "src": "9790:10:325",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 72472,
                            "name": "platformFeeBps",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 72433,
                            "src": "9803:14:325",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "src": "9790:27:325",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 72474,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "9789:29:325",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 72475,
                      "name": "MAX_BPS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 72035,
                      "src": "9821:7:325",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9789:39:325",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9766:62:325"
                },
                {
                  "assignments": [
                    72479
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 72479,
                      "mutability": "mutable",
                      "name": "validMsgValue",
                      "nameLocation": "9844:13:325",
                      "nodeType": "VariableDeclaration",
                      "scope": 72529,
                      "src": "9839:18:325",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 72478,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "9839:4:325",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 72480,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9839:18:325"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 72484,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 72481,
                      "name": "_currency",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 72410,
                      "src": "9871:9:325",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 72482,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63578,
                        "src": "9884:19:325",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$63578_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 72483,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "NATIVE_TOKEN",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63346,
                      "src": "9884:32:325",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9871:45:325",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 72500,
                    "nodeType": "Block",
                    "src": "9988:55:325",
                    "statements": [
                      {
                        "expression": {
                          "id": 72498,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 72493,
                            "name": "validMsgValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 72479,
                            "src": "10002:13:325",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 72497,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 72494,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "10018:3:325",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 72495,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "10018:9:325",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 72496,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10031:1:325",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "10018:14:325",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "10002:30:325",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 72499,
                        "nodeType": "ExpressionStatement",
                        "src": "10002:30:325"
                      }
                    ]
                  },
                  "id": 72501,
                  "nodeType": "IfStatement",
                  "src": "9867:176:325",
                  "trueBody": {
                    "id": 72492,
                    "nodeType": "Block",
                    "src": "9918:64:325",
                    "statements": [
                      {
                        "expression": {
                          "id": 72490,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 72485,
                            "name": "validMsgValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 72479,
                            "src": "9932:13:325",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 72489,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 72486,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "9948:3:325",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 72487,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "9948:9:325",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 72488,
                              "name": "totalPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 72464,
                              "src": "9961:10:325",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "9948:23:325",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "9932:39:325",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 72491,
                        "nodeType": "ExpressionStatement",
                        "src": "9932:39:325"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 72503,
                        "name": "validMsgValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72479,
                        "src": "10060:13:325",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "2156",
                        "id": 72504,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10075:4:325",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4ab0e284d9415599667c0851e9b633cbc3046603c10b78f97a804ca375843fda",
                          "typeString": "literal_string \"!V\""
                        },
                        "value": "!V"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4ab0e284d9415599667c0851e9b633cbc3046603c10b78f97a804ca375843fda",
                          "typeString": "literal_string \"!V\""
                        }
                      ],
                      "id": 72502,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10052:7:325",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 72505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10052:28:325",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 72506,
                  "nodeType": "ExpressionStatement",
                  "src": "10052:28:325"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 72510,
                        "name": "_currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72410,
                        "src": "10128:9:325",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 72511,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            72842
                          ],
                          "referencedDeclaration": 72842,
                          "src": "10139:10:325",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 72512,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10139:12:325",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 72513,
                        "name": "platformFeeRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72431,
                        "src": "10153:20:325",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 72514,
                        "name": "platformFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72470,
                        "src": "10175:12:325",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 72507,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63578,
                        "src": "10091:19:325",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$63578_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 72509,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferCurrency",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63383,
                      "src": "10091:36:325",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 72515,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10091:97:325",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 72516,
                  "nodeType": "ExpressionStatement",
                  "src": "10091:97:325"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 72520,
                        "name": "_currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72410,
                        "src": "10235:9:325",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 72521,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            72842
                          ],
                          "referencedDeclaration": 72842,
                          "src": "10246:10:325",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 72522,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10246:12:325",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 72523,
                        "name": "_saleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72438,
                        "src": "10260:14:325",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 72526,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 72524,
                          "name": "totalPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 72464,
                          "src": "10276:10:325",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 72525,
                          "name": "platformFees",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 72470,
                          "src": "10289:12:325",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10276:25:325",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 72517,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63578,
                        "src": "10198:19:325",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$63578_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 72519,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferCurrency",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63383,
                      "src": "10198:36:325",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 72527,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10198:104:325",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 72528,
                  "nodeType": "ExpressionStatement",
                  "src": "10198:104:325"
                }
              ]
            },
            "baseFunctions": [
              19011
            ],
            "documentation": {
              "id": 72402,
              "nodeType": "StructuredDocumentation",
              "src": "8989:79:325",
              "text": "@dev Collects and distributes the primary sale value of NFTs being claimed."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "collectPriceOnClaim",
            "nameLocation": "9082:19:325",
            "overrides": {
              "id": 72414,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9275:8:325"
            },
            "parameters": {
              "id": 72413,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 72404,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "9119:8:325",
                  "nodeType": "VariableDeclaration",
                  "scope": 72530,
                  "src": "9111:16:325",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 72403,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9111:7:325",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 72406,
                  "mutability": "mutable",
                  "name": "_primarySaleRecipient",
                  "nameLocation": "9145:21:325",
                  "nodeType": "VariableDeclaration",
                  "scope": 72530,
                  "src": "9137:29:325",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 72405,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9137:7:325",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 72408,
                  "mutability": "mutable",
                  "name": "_quantityToClaim",
                  "nameLocation": "9184:16:325",
                  "nodeType": "VariableDeclaration",
                  "scope": 72530,
                  "src": "9176:24:325",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 72407,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9176:7:325",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 72410,
                  "mutability": "mutable",
                  "name": "_currency",
                  "nameLocation": "9218:9:325",
                  "nodeType": "VariableDeclaration",
                  "scope": 72530,
                  "src": "9210:17:325",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 72409,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9210:7:325",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 72412,
                  "mutability": "mutable",
                  "name": "_pricePerToken",
                  "nameLocation": "9245:14:325",
                  "nodeType": "VariableDeclaration",
                  "scope": 72530,
                  "src": "9237:22:325",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 72411,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9237:7:325",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9101:164:325"
            },
            "returnParameters": {
              "id": 72415,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9284:0:325"
            },
            "scope": 72856,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 72549,
            "nodeType": "FunctionDefinition",
            "src": "10362:205:325",
            "nodes": [],
            "body": {
              "id": 72548,
              "nodeType": "Block",
              "src": "10503:64:325",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 72542,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72533,
                        "src": "10519:3:325",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 72543,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72535,
                        "src": "10524:8:325",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 72544,
                        "name": "_quantityBeingClaimed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72537,
                        "src": "10534:21:325",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 72545,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10557:2:325",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 72541,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 151059,
                      "src": "10513:5:325",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 72546,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10513:47:325",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 72547,
                  "nodeType": "ExpressionStatement",
                  "src": "10513:47:325"
                }
              ]
            },
            "baseFunctions": [
              19021
            ],
            "documentation": {
              "id": 72531,
              "nodeType": "StructuredDocumentation",
              "src": "10315:42:325",
              "text": "@dev Transfers the NFTs being claimed."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferTokensOnClaim",
            "nameLocation": "10371:21:325",
            "overrides": {
              "id": 72539,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10494:8:325"
            },
            "parameters": {
              "id": 72538,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 72533,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "10410:3:325",
                  "nodeType": "VariableDeclaration",
                  "scope": 72549,
                  "src": "10402:11:325",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 72532,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10402:7:325",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 72535,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "10431:8:325",
                  "nodeType": "VariableDeclaration",
                  "scope": 72549,
                  "src": "10423:16:325",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 72534,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10423:7:325",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 72537,
                  "mutability": "mutable",
                  "name": "_quantityBeingClaimed",
                  "nameLocation": "10457:21:325",
                  "nodeType": "VariableDeclaration",
                  "scope": 72549,
                  "src": "10449:29:325",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 72536,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10449:7:325",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10392:92:325"
            },
            "returnParameters": {
              "id": 72540,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10503:0:325"
            },
            "scope": 72856,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 72563,
            "nodeType": "FunctionDefinition",
            "src": "10662:137:325",
            "nodes": [],
            "body": {
              "id": 72562,
              "nodeType": "Block",
              "src": "10734:65:325",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 72557,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21176,
                        "src": "10759:18:325",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 72558,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            72842
                          ],
                          "referencedDeclaration": 72842,
                          "src": "10779:10:325",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 72559,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10779:12:325",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 72556,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21207,
                      "src": "10751:7:325",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 72560,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10751:41:325",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 72555,
                  "id": 72561,
                  "nodeType": "Return",
                  "src": "10744:48:325"
                }
              ]
            },
            "baseFunctions": [
              22004
            ],
            "documentation": {
              "id": 72550,
              "nodeType": "StructuredDocumentation",
              "src": "10573:84:325",
              "text": "@dev Checks whether platform fee info can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetPlatformFeeInfo",
            "nameLocation": "10671:22:325",
            "overrides": {
              "id": 72552,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10710:8:325"
            },
            "parameters": {
              "id": 72551,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10693:2:325"
            },
            "returnParameters": {
              "id": 72555,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 72554,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 72563,
                  "src": "10728:4:325",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 72553,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10728:4:325",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10727:6:325"
            },
            "scope": 72856,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 72577,
            "nodeType": "FunctionDefinition",
            "src": "10899:142:325",
            "nodes": [],
            "body": {
              "id": 72576,
              "nodeType": "Block",
              "src": "10976:65:325",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 72571,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21176,
                        "src": "11001:18:325",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 72572,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            72842
                          ],
                          "referencedDeclaration": 72842,
                          "src": "11021:10:325",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 72573,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11021:12:325",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 72570,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21207,
                      "src": "10993:7:325",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 72574,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10993:41:325",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 72569,
                  "id": 72575,
                  "nodeType": "Return",
                  "src": "10986:48:325"
                }
              ]
            },
            "baseFunctions": [
              22066
            ],
            "documentation": {
              "id": 72564,
              "nodeType": "StructuredDocumentation",
              "src": "10805:89:325",
              "text": "@dev Checks whether primary sale recipient can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetPrimarySaleRecipient",
            "nameLocation": "10908:27:325",
            "overrides": {
              "id": 72566,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10952:8:325"
            },
            "parameters": {
              "id": 72565,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10935:2:325"
            },
            "returnParameters": {
              "id": 72569,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 72568,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 72577,
                  "src": "10970:4:325",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 72567,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10970:4:325",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10969:6:325"
            },
            "scope": 72856,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 72591,
            "nodeType": "FunctionDefinition",
            "src": "11124:127:325",
            "nodes": [],
            "body": {
              "id": 72590,
              "nodeType": "Block",
              "src": "11186:65:325",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 72585,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21176,
                        "src": "11211:18:325",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 72586,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            72842
                          ],
                          "referencedDeclaration": 72842,
                          "src": "11231:10:325",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 72587,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11231:12:325",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 72584,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21207,
                      "src": "11203:7:325",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 72588,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11203:41:325",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 72583,
                  "id": 72589,
                  "nodeType": "Return",
                  "src": "11196:48:325"
                }
              ]
            },
            "baseFunctions": [
              21152
            ],
            "documentation": {
              "id": 72578,
              "nodeType": "StructuredDocumentation",
              "src": "11047:72:325",
              "text": "@dev Checks whether owner can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetOwner",
            "nameLocation": "11133:12:325",
            "overrides": {
              "id": 72580,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "11162:8:325"
            },
            "parameters": {
              "id": 72579,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11145:2:325"
            },
            "returnParameters": {
              "id": 72583,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 72582,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 72591,
                  "src": "11180:4:325",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 72581,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11180:4:325",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11179:6:325"
            },
            "scope": 72856,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 72605,
            "nodeType": "FunctionDefinition",
            "src": "11341:133:325",
            "nodes": [],
            "body": {
              "id": 72604,
              "nodeType": "Block",
              "src": "11409:65:325",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 72599,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21176,
                        "src": "11434:18:325",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 72600,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            72842
                          ],
                          "referencedDeclaration": 72842,
                          "src": "11454:10:325",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 72601,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11454:12:325",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 72598,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21207,
                      "src": "11426:7:325",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 72602,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11426:41:325",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 72597,
                  "id": 72603,
                  "nodeType": "Return",
                  "src": "11419:48:325"
                }
              ]
            },
            "baseFunctions": [
              22394
            ],
            "documentation": {
              "id": 72592,
              "nodeType": "StructuredDocumentation",
              "src": "11257:79:325",
              "text": "@dev Checks whether royalty info can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetRoyaltyInfo",
            "nameLocation": "11350:18:325",
            "overrides": {
              "id": 72594,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "11385:8:325"
            },
            "parameters": {
              "id": 72593,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11368:2:325"
            },
            "returnParameters": {
              "id": 72597,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 72596,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 72605,
                  "src": "11403:4:325",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 72595,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11403:4:325",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11402:6:325"
            },
            "scope": 72856,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 72619,
            "nodeType": "FunctionDefinition",
            "src": "11569:133:325",
            "nodes": [],
            "body": {
              "id": 72618,
              "nodeType": "Block",
              "src": "11637:65:325",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 72613,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21176,
                        "src": "11662:18:325",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 72614,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            72842
                          ],
                          "referencedDeclaration": 72842,
                          "src": "11682:10:325",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 72615,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11682:12:325",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 72612,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21207,
                      "src": "11654:7:325",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 72616,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11654:41:325",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 72611,
                  "id": 72617,
                  "nodeType": "Return",
                  "src": "11647:48:325"
                }
              ]
            },
            "baseFunctions": [
              17525
            ],
            "documentation": {
              "id": 72606,
              "nodeType": "StructuredDocumentation",
              "src": "11480:84:325",
              "text": "@dev Checks whether contract metadata can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetContractURI",
            "nameLocation": "11578:18:325",
            "overrides": {
              "id": 72608,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "11613:8:325"
            },
            "parameters": {
              "id": 72607,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11596:2:325"
            },
            "returnParameters": {
              "id": 72611,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 72610,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 72619,
                  "src": "11631:4:325",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 72609,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11631:4:325",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11630:6:325"
            },
            "scope": 72856,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 72633,
            "nodeType": "FunctionDefinition",
            "src": "11797:137:325",
            "nodes": [],
            "body": {
              "id": 72632,
              "nodeType": "Block",
              "src": "11869:65:325",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 72627,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21176,
                        "src": "11894:18:325",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 72628,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            72842
                          ],
                          "referencedDeclaration": 72842,
                          "src": "11914:10:325",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 72629,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11914:12:325",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 72626,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21207,
                      "src": "11886:7:325",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 72630,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11886:41:325",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 72625,
                  "id": 72631,
                  "nodeType": "Return",
                  "src": "11879:48:325"
                }
              ]
            },
            "baseFunctions": [
              19027
            ],
            "documentation": {
              "id": 72620,
              "nodeType": "StructuredDocumentation",
              "src": "11708:84:325",
              "text": "@dev Checks whether platform fee info can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetClaimConditions",
            "nameLocation": "11806:22:325",
            "overrides": {
              "id": 72622,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "11845:8:325"
            },
            "parameters": {
              "id": 72621,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11828:2:325"
            },
            "returnParameters": {
              "id": 72625,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 72624,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 72633,
                  "src": "11863:4:325",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 72623,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11863:4:325",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11862:6:325"
            },
            "scope": 72856,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 72647,
            "nodeType": "FunctionDefinition",
            "src": "12026:127:325",
            "nodes": [],
            "body": {
              "id": 72646,
              "nodeType": "Block",
              "src": "12096:57:325",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 72641,
                        "name": "minterRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72028,
                        "src": "12121:10:325",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 72642,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            72842
                          ],
                          "referencedDeclaration": 72842,
                          "src": "12133:10:325",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 72643,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12133:12:325",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 72640,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21207,
                      "src": "12113:7:325",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 72644,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12113:33:325",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 72639,
                  "id": 72645,
                  "nodeType": "Return",
                  "src": "12106:40:325"
                }
              ]
            },
            "baseFunctions": [
              20260
            ],
            "documentation": {
              "id": 72634,
              "nodeType": "StructuredDocumentation",
              "src": "11940:81:325",
              "text": "@dev Returns whether lazy minting can be done in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canLazyMint",
            "nameLocation": "12035:12:325",
            "overrides": {
              "id": 72636,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "12072:8:325"
            },
            "parameters": {
              "id": 72635,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12047:2:325"
            },
            "returnParameters": {
              "id": 72639,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 72638,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 72647,
                  "src": "12090:4:325",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 72637,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12090:4:325",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12089:6:325"
            },
            "scope": 72856,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 72656,
            "nodeType": "FunctionDefinition",
            "src": "12413:106:325",
            "nodes": [],
            "body": {
              "id": 72655,
              "nodeType": "Block",
              "src": "12474:45:325",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 72653,
                    "name": "nextTokenIdToLazyMint",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 20195,
                    "src": "12491:21:325",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 72652,
                  "id": 72654,
                  "nodeType": "Return",
                  "src": "12484:28:325"
                }
              ]
            },
            "documentation": {
              "id": 72648,
              "nodeType": "StructuredDocumentation",
              "src": "12337:71:325",
              "text": "@dev The tokenId of the next NFT that will be minted / lazy minted."
            },
            "functionSelector": "3b1475a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "nextTokenIdToMint",
            "nameLocation": "12422:17:325",
            "parameters": {
              "id": 72649,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12439:2:325"
            },
            "returnParameters": {
              "id": 72652,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 72651,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 72656,
                  "src": "12465:7:325",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 72650,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12465:7:325",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12464:9:325"
            },
            "scope": 72856,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 72689,
            "nodeType": "FunctionDefinition",
            "src": "12619:343:325",
            "nodes": [],
            "body": {
              "id": 72688,
              "nodeType": "Block",
              "src": "12747:215:325",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 72678,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 72672,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 72669,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 72659,
                            "src": "12778:7:325",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 72670,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                72842
                              ],
                              "referencedDeclaration": 72842,
                              "src": "12789:10:325",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 72671,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12789:12:325",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "12778:23:325",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 72674,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 72659,
                              "src": "12822:7:325",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 72675,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  72842
                                ],
                                "referencedDeclaration": 72842,
                                "src": "12831:10:325",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 72676,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12831:12:325",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 72673,
                            "name": "isApprovedForAll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 150617,
                            "src": "12805:16:325",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) view returns (bool)"
                            }
                          },
                          "id": 72677,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12805:39:325",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "12778:66:325",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f7665642e",
                        "id": 72679,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12858:44:325",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_04734b189e922777d599884b7960472dc0629c731f10be0d8edb246be9142927",
                          "typeString": "literal_string \"ERC1155: caller is not owner nor approved.\""
                        },
                        "value": "ERC1155: caller is not owner nor approved."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_04734b189e922777d599884b7960472dc0629c731f10be0d8edb246be9142927",
                          "typeString": "literal_string \"ERC1155: caller is not owner nor approved.\""
                        }
                      ],
                      "id": 72668,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12757:7:325",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 72680,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12757:155:325",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 72681,
                  "nodeType": "ExpressionStatement",
                  "src": "12757:155:325"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 72683,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72659,
                        "src": "12934:7:325",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 72684,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72662,
                        "src": "12943:3:325",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 72685,
                        "name": "values",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72665,
                        "src": "12948:6:325",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "id": 72682,
                      "name": "_burnBatch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 151398,
                      "src": "12923:10:325",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256[] memory,uint256[] memory)"
                      }
                    },
                    "id": 72686,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12923:32:325",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 72687,
                  "nodeType": "ExpressionStatement",
                  "src": "12923:32:325"
                }
              ]
            },
            "documentation": {
              "id": 72657,
              "nodeType": "StructuredDocumentation",
              "src": "12525:89:325",
              "text": "@dev Lets a token owner burn multiple tokens they own at once (i.e. destroy for good)"
            },
            "functionSelector": "6b20c454",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burnBatch",
            "nameLocation": "12628:9:325",
            "parameters": {
              "id": 72666,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 72659,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "12655:7:325",
                  "nodeType": "VariableDeclaration",
                  "scope": 72689,
                  "src": "12647:15:325",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 72658,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12647:7:325",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 72662,
                  "mutability": "mutable",
                  "name": "ids",
                  "nameLocation": "12689:3:325",
                  "nodeType": "VariableDeclaration",
                  "scope": 72689,
                  "src": "12672:20:325",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 72660,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "12672:7:325",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 72661,
                    "nodeType": "ArrayTypeName",
                    "src": "12672:9:325",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 72665,
                  "mutability": "mutable",
                  "name": "values",
                  "nameLocation": "12719:6:325",
                  "nodeType": "VariableDeclaration",
                  "scope": 72689,
                  "src": "12702:23:325",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 72663,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "12702:7:325",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 72664,
                    "nodeType": "ArrayTypeName",
                    "src": "12702:9:325",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12637:94:325"
            },
            "returnParameters": {
              "id": 72667,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12747:0:325"
            },
            "scope": 72856,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 72819,
            "nodeType": "FunctionDefinition",
            "src": "13032:951:325",
            "nodes": [],
            "body": {
              "id": 72818,
              "nodeType": "Block",
              "src": "13253:730:325",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 72711,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72692,
                        "src": "13290:8:325",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 72712,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72694,
                        "src": "13300:4:325",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 72713,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72696,
                        "src": "13306:2:325",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 72714,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72699,
                        "src": "13310:3:325",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 72715,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72702,
                        "src": "13315:7:325",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 72716,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72704,
                        "src": "13324:4:325",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 72708,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "13263:5:325",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_DropERC1155_$72856_$",
                          "typeString": "type(contract super DropERC1155)"
                        }
                      },
                      "id": 72710,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_beforeTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 151449,
                      "src": "13263:26:325",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
                      }
                    },
                    "id": 72717,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13263:66:325",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 72718,
                  "nodeType": "ExpressionStatement",
                  "src": "13263:66:325"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 72740,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 72733,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 72726,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "13441:34:325",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 72720,
                              "name": "transferRole",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 72025,
                              "src": "13450:12:325",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 72723,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "13472:1:325",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 72722,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "13464:7:325",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 72721,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "13464:7:325",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 72724,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13464:10:325",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 72719,
                            "name": "hasRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21207,
                            "src": "13442:7:325",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) view returns (bool)"
                            }
                          },
                          "id": 72725,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13442:33:325",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 72732,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 72727,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 72694,
                          "src": "13479:4:325",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 72730,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13495:1:325",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 72729,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "13487:7:325",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 72728,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "13487:7:325",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 72731,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13487:10:325",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "13479:18:325",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "13441:56:325",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 72739,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 72734,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72696,
                        "src": "13501:2:325",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 72737,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13515:1:325",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 72736,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13507:7:325",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 72735,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13507:7:325",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 72738,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13507:10:325",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "13501:16:325",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "13441:76:325",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 72755,
                  "nodeType": "IfStatement",
                  "src": "13437:212:325",
                  "trueBody": {
                    "id": 72754,
                    "nodeType": "Block",
                    "src": "13519:130:325",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 72750,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "id": 72743,
                                    "name": "transferRole",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 72025,
                                    "src": "13549:12:325",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "id": 72744,
                                    "name": "from",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 72694,
                                    "src": "13563:4:325",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 72742,
                                  "name": "hasRole",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 21207,
                                  "src": "13541:7:325",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                                    "typeString": "function (bytes32,address) view returns (bool)"
                                  }
                                },
                                "id": 72745,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "13541:27:325",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "id": 72747,
                                    "name": "transferRole",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 72025,
                                    "src": "13580:12:325",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "id": 72748,
                                    "name": "to",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 72696,
                                    "src": "13594:2:325",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 72746,
                                  "name": "hasRole",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 21207,
                                  "src": "13572:7:325",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                                    "typeString": "function (bytes32,address) view returns (bool)"
                                  }
                                },
                                "id": 72749,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "13572:25:325",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "13541:56:325",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "7265737472696374656420746f205452414e534645525f524f4c4520686f6c646572732e",
                              "id": 72751,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13599:38:325",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_80653bc1019aa82133f98596117119bd52c35f971b64223fbf9db2d56405322f",
                                "typeString": "literal_string \"restricted to TRANSFER_ROLE holders.\""
                              },
                              "value": "restricted to TRANSFER_ROLE holders."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_80653bc1019aa82133f98596117119bd52c35f971b64223fbf9db2d56405322f",
                                "typeString": "literal_string \"restricted to TRANSFER_ROLE holders.\""
                              }
                            ],
                            "id": 72741,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "13533:7:325",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 72752,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13533:105:325",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 72753,
                        "nodeType": "ExpressionStatement",
                        "src": "13533:105:325"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 72761,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 72756,
                      "name": "from",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 72694,
                      "src": "13663:4:325",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 72759,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13679:1:325",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 72758,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "13671:7:325",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 72757,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "13671:7:325",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 72760,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13671:10:325",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "13663:18:325",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 72786,
                  "nodeType": "IfStatement",
                  "src": "13659:155:325",
                  "trueBody": {
                    "id": 72785,
                    "nodeType": "Block",
                    "src": "13683:131:325",
                    "statements": [
                      {
                        "body": {
                          "id": 72783,
                          "nodeType": "Block",
                          "src": "13738:66:325",
                          "statements": [
                            {
                              "expression": {
                                "id": 72781,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 72773,
                                    "name": "totalSupply",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 72040,
                                    "src": "13756:11:325",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                      "typeString": "mapping(uint256 => uint256)"
                                    }
                                  },
                                  "id": 72777,
                                  "indexExpression": {
                                    "baseExpression": {
                                      "id": 72774,
                                      "name": "ids",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 72699,
                                      "src": "13768:3:325",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                        "typeString": "uint256[] memory"
                                      }
                                    },
                                    "id": 72776,
                                    "indexExpression": {
                                      "id": 72775,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 72763,
                                      "src": "13772:1:325",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "13768:6:325",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "13756:19:325",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 72778,
                                    "name": "amounts",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 72702,
                                    "src": "13779:7:325",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 72780,
                                  "indexExpression": {
                                    "id": 72779,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 72763,
                                    "src": "13787:1:325",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "13779:10:325",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "13756:33:325",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 72782,
                              "nodeType": "ExpressionStatement",
                              "src": "13756:33:325"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 72769,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 72766,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 72763,
                            "src": "13717:1:325",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 72767,
                              "name": "ids",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 72699,
                              "src": "13721:3:325",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 72768,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "13721:10:325",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13717:14:325",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 72784,
                        "initializationExpression": {
                          "assignments": [
                            72763
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 72763,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "13710:1:325",
                              "nodeType": "VariableDeclaration",
                              "scope": 72784,
                              "src": "13702:9:325",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 72762,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "13702:7:325",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 72765,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 72764,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13714:1:325",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "13702:13:325"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 72771,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": true,
                            "src": "13733:3:325",
                            "subExpression": {
                              "id": 72770,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 72763,
                              "src": "13735:1:325",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 72772,
                          "nodeType": "ExpressionStatement",
                          "src": "13733:3:325"
                        },
                        "nodeType": "ForStatement",
                        "src": "13697:107:325"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 72792,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 72787,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 72696,
                      "src": "13828:2:325",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 72790,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13842:1:325",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 72789,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "13834:7:325",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 72788,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "13834:7:325",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 72791,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13834:10:325",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "13828:16:325",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 72817,
                  "nodeType": "IfStatement",
                  "src": "13824:153:325",
                  "trueBody": {
                    "id": 72816,
                    "nodeType": "Block",
                    "src": "13846:131:325",
                    "statements": [
                      {
                        "body": {
                          "id": 72814,
                          "nodeType": "Block",
                          "src": "13901:66:325",
                          "statements": [
                            {
                              "expression": {
                                "id": 72812,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 72804,
                                    "name": "totalSupply",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 72040,
                                    "src": "13919:11:325",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                      "typeString": "mapping(uint256 => uint256)"
                                    }
                                  },
                                  "id": 72808,
                                  "indexExpression": {
                                    "baseExpression": {
                                      "id": 72805,
                                      "name": "ids",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 72699,
                                      "src": "13931:3:325",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                        "typeString": "uint256[] memory"
                                      }
                                    },
                                    "id": 72807,
                                    "indexExpression": {
                                      "id": 72806,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 72794,
                                      "src": "13935:1:325",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "13931:6:325",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "13919:19:325",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "-=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 72809,
                                    "name": "amounts",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 72702,
                                    "src": "13942:7:325",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 72811,
                                  "indexExpression": {
                                    "id": 72810,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 72794,
                                    "src": "13950:1:325",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "13942:10:325",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "13919:33:325",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 72813,
                              "nodeType": "ExpressionStatement",
                              "src": "13919:33:325"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 72800,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 72797,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 72794,
                            "src": "13880:1:325",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 72798,
                              "name": "ids",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 72699,
                              "src": "13884:3:325",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 72799,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "13884:10:325",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13880:14:325",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 72815,
                        "initializationExpression": {
                          "assignments": [
                            72794
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 72794,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "13873:1:325",
                              "nodeType": "VariableDeclaration",
                              "scope": 72815,
                              "src": "13865:9:325",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 72793,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "13865:7:325",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 72796,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 72795,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13877:1:325",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "13865:13:325"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 72802,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": true,
                            "src": "13896:3:325",
                            "subExpression": {
                              "id": 72801,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 72794,
                              "src": "13898:1:325",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 72803,
                          "nodeType": "ExpressionStatement",
                          "src": "13896:3:325"
                        },
                        "nodeType": "ForStatement",
                        "src": "13860:107:325"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              151449
            ],
            "documentation": {
              "id": 72690,
              "nodeType": "StructuredDocumentation",
              "src": "12968:59:325",
              "text": " @dev See {ERC1155-_beforeTokenTransfer}."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "13041:20:325",
            "overrides": {
              "id": 72706,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "13244:8:325"
            },
            "parameters": {
              "id": 72705,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 72692,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "13079:8:325",
                  "nodeType": "VariableDeclaration",
                  "scope": 72819,
                  "src": "13071:16:325",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 72691,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13071:7:325",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 72694,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "13105:4:325",
                  "nodeType": "VariableDeclaration",
                  "scope": 72819,
                  "src": "13097:12:325",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 72693,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13097:7:325",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 72696,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "13127:2:325",
                  "nodeType": "VariableDeclaration",
                  "scope": 72819,
                  "src": "13119:10:325",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 72695,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13119:7:325",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 72699,
                  "mutability": "mutable",
                  "name": "ids",
                  "nameLocation": "13156:3:325",
                  "nodeType": "VariableDeclaration",
                  "scope": 72819,
                  "src": "13139:20:325",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 72697,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "13139:7:325",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 72698,
                    "nodeType": "ArrayTypeName",
                    "src": "13139:9:325",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 72702,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "13186:7:325",
                  "nodeType": "VariableDeclaration",
                  "scope": 72819,
                  "src": "13169:24:325",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 72700,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "13169:7:325",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 72701,
                    "nodeType": "ArrayTypeName",
                    "src": "13169:9:325",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 72704,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "13216:4:325",
                  "nodeType": "VariableDeclaration",
                  "scope": 72819,
                  "src": "13203:17:325",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 72703,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "13203:5:325",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13061:165:325"
            },
            "returnParameters": {
              "id": 72707,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13253:0:325"
            },
            "scope": 72856,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 72829,
            "nodeType": "FunctionDefinition",
            "src": "13989:111:325",
            "nodes": [],
            "body": {
              "id": 72828,
              "nodeType": "Block",
              "src": "14064:36:325",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 72825,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        72842
                      ],
                      "referencedDeclaration": 72842,
                      "src": "14081:10:325",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 72826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14081:12:325",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 72824,
                  "id": 72827,
                  "nodeType": "Return",
                  "src": "14074:19:325"
                }
              ]
            },
            "baseFunctions": [
              18957
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_dropMsgSender",
            "nameLocation": "13998:14:325",
            "overrides": {
              "id": 72821,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "14037:8:325"
            },
            "parameters": {
              "id": 72820,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14012:2:325"
            },
            "returnParameters": {
              "id": 72824,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 72823,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 72829,
                  "src": "14055:7:325",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 72822,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14055:7:325",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14054:9:325"
            },
            "scope": 72856,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 72842,
            "nodeType": "FunctionDefinition",
            "src": "14106:231:325",
            "nodes": [],
            "body": {
              "id": 72841,
              "nodeType": "Block",
              "src": "14275:62:325",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 72837,
                        "name": "ERC2771ContextUpgradeable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45607,
                        "src": "14292:25:325",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC2771ContextUpgradeable_$45607_$",
                          "typeString": "type(contract ERC2771ContextUpgradeable)"
                        }
                      },
                      "id": 72838,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_msgSender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45575,
                      "src": "14292:36:325",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 72839,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14292:38:325",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 72836,
                  "id": 72840,
                  "nodeType": "Return",
                  "src": "14285:45:325"
                }
              ]
            },
            "baseFunctions": [
              45575,
              156029
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgSender",
            "nameLocation": "14115:10:325",
            "overrides": {
              "id": 72833,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 72831,
                  "name": "ContextUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 156044,
                  "src": "14191:18:325"
                },
                {
                  "id": 72832,
                  "name": "ERC2771ContextUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 45607,
                  "src": "14211:25:325"
                }
              ],
              "src": "14182:55:325"
            },
            "parameters": {
              "id": 72830,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14125:2:325"
            },
            "returnParameters": {
              "id": 72836,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 72835,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "14263:6:325",
                  "nodeType": "VariableDeclaration",
                  "scope": 72842,
                  "src": "14255:14:325",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 72834,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14255:7:325",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14254:16:325"
            },
            "scope": 72856,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 72855,
            "nodeType": "FunctionDefinition",
            "src": "14343:227:325",
            "nodes": [],
            "body": {
              "id": 72854,
              "nodeType": "Block",
              "src": "14510:60:325",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 72850,
                        "name": "ERC2771ContextUpgradeable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45607,
                        "src": "14527:25:325",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC2771ContextUpgradeable_$45607_$",
                          "typeString": "type(contract ERC2771ContextUpgradeable)"
                        }
                      },
                      "id": 72851,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_msgData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45602,
                      "src": "14527:34:325",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_calldata_ptr_$",
                        "typeString": "function () view returns (bytes calldata)"
                      }
                    },
                    "id": 72852,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14527:36:325",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_calldata_ptr",
                      "typeString": "bytes calldata"
                    }
                  },
                  "functionReturnParameters": 72849,
                  "id": 72853,
                  "nodeType": "Return",
                  "src": "14520:43:325"
                }
              ]
            },
            "baseFunctions": [
              45602,
              156038
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgData",
            "nameLocation": "14352:8:325",
            "overrides": {
              "id": 72846,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 72844,
                  "name": "ContextUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 156044,
                  "src": "14426:18:325"
                },
                {
                  "id": 72845,
                  "name": "ERC2771ContextUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 45607,
                  "src": "14446:25:325"
                }
              ],
              "src": "14417:55:325"
            },
            "parameters": {
              "id": 72843,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14360:2:325"
            },
            "returnParameters": {
              "id": 72849,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 72848,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 72855,
                  "src": "14490:14:325",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 72847,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "14490:5:325",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14489:16:325"
            },
            "scope": 72856,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 71992,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 150199,
              "src": "1672:13:325"
            },
            "id": 71993,
            "nodeType": "InheritanceSpecifier",
            "src": "1672:13:325"
          },
          {
            "baseName": {
              "id": 71994,
              "name": "ContractMetadata",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 17526,
              "src": "1691:16:325"
            },
            "id": 71995,
            "nodeType": "InheritanceSpecifier",
            "src": "1691:16:325"
          },
          {
            "baseName": {
              "id": 71996,
              "name": "PlatformFee",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 22005,
              "src": "1713:11:325"
            },
            "id": 71997,
            "nodeType": "InheritanceSpecifier",
            "src": "1713:11:325"
          },
          {
            "baseName": {
              "id": 71998,
              "name": "Royalty",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 22395,
              "src": "1730:7:325"
            },
            "id": 71999,
            "nodeType": "InheritanceSpecifier",
            "src": "1730:7:325"
          },
          {
            "baseName": {
              "id": 72000,
              "name": "PrimarySale",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 22067,
              "src": "1743:11:325"
            },
            "id": 72001,
            "nodeType": "InheritanceSpecifier",
            "src": "1743:11:325"
          },
          {
            "baseName": {
              "id": 72002,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 21153,
              "src": "1760:7:325"
            },
            "id": 72003,
            "nodeType": "InheritanceSpecifier",
            "src": "1760:7:325"
          },
          {
            "baseName": {
              "id": 72004,
              "name": "LazyMint",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 20261,
              "src": "1773:8:325"
            },
            "id": 72005,
            "nodeType": "InheritanceSpecifier",
            "src": "1773:8:325"
          },
          {
            "baseName": {
              "id": 72006,
              "name": "PermissionsEnumerable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 21799,
              "src": "1787:21:325"
            },
            "id": 72007,
            "nodeType": "InheritanceSpecifier",
            "src": "1787:21:325"
          },
          {
            "baseName": {
              "id": 72008,
              "name": "Drop1155",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 19028,
              "src": "1814:8:325"
            },
            "id": 72009,
            "nodeType": "InheritanceSpecifier",
            "src": "1814:8:325"
          },
          {
            "baseName": {
              "id": 72010,
              "name": "ERC2771ContextUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 45607,
              "src": "1828:25:325"
            },
            "id": 72011,
            "nodeType": "InheritanceSpecifier",
            "src": "1828:25:325"
          },
          {
            "baseName": {
              "id": 72012,
              "name": "MulticallUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 156227,
              "src": "1859:20:325"
            },
            "id": 72013,
            "nodeType": "InheritanceSpecifier",
            "src": "1859:20:325"
          },
          {
            "baseName": {
              "id": 72014,
              "name": "ERC1155Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 151630,
              "src": "1885:18:325"
            },
            "id": 72015,
            "nodeType": "InheritanceSpecifier",
            "src": "1885:18:325"
          }
        ],
        "canonicalName": "DropERC1155",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          72856,
          151630,
          151968,
          151793,
          157249,
          157261,
          156227,
          45607,
          156044,
          19028,
          32645,
          32308,
          32285,
          21799,
          21500,
          33281,
          33256,
          20261,
          17299,
          32812,
          21153,
          33183,
          22067,
          33345,
          22395,
          33409,
          13973,
          13829,
          22005,
          33324,
          17526,
          150199,
          32437
        ],
        "name": "DropERC1155",
        "nameLocation": "1653:11:325",
        "scope": 72857,
        "usedErrors": []
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 325
}