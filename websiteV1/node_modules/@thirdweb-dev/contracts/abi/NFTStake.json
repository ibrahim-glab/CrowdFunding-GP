{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nativeTokenWrapper",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "prevURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "newURI",
          "type": "string"
        }
      ],
      "name": "ContractURIUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "RewardTokensDepositedByAdmin",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "RewardTokensWithdrawnByAdmin",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rewardAmount",
          "type": "uint256"
        }
      ],
      "name": "RewardsClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256[]",
          "name": "tokenIds",
          "type": "uint256[]"
        }
      ],
      "name": "TokensStaked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256[]",
          "name": "tokenIds",
          "type": "uint256[]"
        }
      ],
      "name": "TokensWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldRewardsPerUnitTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newRewardsPerUnitTime",
          "type": "uint256"
        }
      ],
      "name": "UpdatedRewardsPerUnitTime",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldTimeUnit",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newTimeUnit",
          "type": "uint256"
        }
      ],
      "name": "UpdatedTimeUnit",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractType",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractVersion",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "depositRewardTokens",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRewardTokenBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRewardsPerUnitTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_rewardsPerUnitTime",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRoleMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "member",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "count",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_staker",
          "type": "address"
        }
      ],
      "name": "getStakeInfo",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "_tokensStaked",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "_rewards",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTimeUnit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_timeUnit",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRoleWithSwitch",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "indexedTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_defaultAdmin",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_contractURI",
          "type": "string"
        },
        {
          "internalType": "address[]",
          "name": "_trustedForwarders",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "_rewardToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_stakingToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_timeUnit",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_rewardsPerUnitTime",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "isIndexed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "forwarder",
          "type": "address"
        }
      ],
      "name": "isTrustedForwarder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "multicall",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "results",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "setContractURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_rewardsPerUnitTime",
          "type": "uint256"
        }
      ],
      "name": "setRewardsPerUnitTime",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_timeUnit",
          "type": "uint256"
        }
      ],
      "name": "setTimeUnit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "_tokenIds",
          "type": "uint256[]"
        }
      ],
      "name": "stake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "stakerAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "stakers",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "amountStaked",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "conditionIdOflastUpdate",
          "type": "uint64"
        },
        {
          "internalType": "uint128",
          "name": "timeOfLastUpdate",
          "type": "uint128"
        },
        {
          "internalType": "uint256",
          "name": "unclaimedRewards",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "stakersArray",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakingToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "_tokenIds",
          "type": "uint256[]"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawRewardTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x60a060405260cd805460ff60a01b1916600160a01b1790553480156200002457600080fd5b5060405162003f2c38038062003f2c83398101604081905262000047916200018f565b600054610100900460ff1615808015620000685750600054600160ff909116105b8062000098575062000085306200018060201b620017681760201c565b15801562000098575060005460ff166001145b620001005760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840160405180910390fd5b6000805460ff19166001179055801562000124576000805461ff0019166101001790555b6001600160a01b038216608052801562000178576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050620001c1565b6001600160a01b03163b151590565b600060208284031215620001a257600080fd5b81516001600160a01b0381168114620001ba57600080fd5b9392505050565b608051613d33620001f9600039600081816101c30152818161092f015281816109e00152818161161f0152612fd20152613d336000f3fe6080604052600436106101b35760003560e01c8063938e3d7b116100e8578063938e3d7b1461052557806393ce534314610545578063940670451461055b578063961004d314610591578063983d95ce146105b1578063a0a8e460146105d1578063a217fddf146105ed578063a32fa5b314610602578063ac9650d814610622578063c34531531461064f578063ca15c8731461067d578063cb2ef6f71461069d578063cb43b2dd146106bb578063d547741f146106db578063d68124c7146106fb578063e8a3d48514610710578063f7c618c114610732578063fd48ba171461075357600080fd5b806301ffc9a71461023c5780630e8b229b146102715780630fbf0a9314610294578063150b7a02146102b457806316c621e0146102ed57806323ef258014610300578063248a9ca3146103205780632f2ff15d1461034d57806336568abe1461036d578063372500ab1461038d5780635357e916146103a2578063572b6c05146103cf5780636360106f146103ef5780636a5ab6e51461040f57806372f702f31461042f5780639010d07c1461044f5780639168ae721461046f57806391d148541461050557600080fd5b3661023757336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146102355760405162461bcd60e51b815260206004820181905260248201527f63616c6c6572206e6f74206e617469766520746f6b656e20777261707065722e60448201526064015b60405180910390fd5b005b600080fd5b34801561024857600080fd5b5061025c61025736600461341f565b610783565b60405190151581526020015b60405180910390f35b34801561027d57600080fd5b506102866107ba565b604051908152602001610268565b3480156102a057600080fd5b506102356102af36600461348d565b610802565b3480156102c057600080fd5b506102d46102cf3660046134e5565b61083d565b6040516001600160e01b03199091168152602001610268565b6102356102fb36600461357f565b6108a0565b34801561030c57600080fd5b5061023561031b36600461357f565b610ad6565b34801561032c57600080fd5b5061028661033b36600461357f565b60009081526003602052604090205490565b34801561035957600080fd5b50610235610368366004613598565b610bfe565b34801561037957600080fd5b50610235610388366004613598565b610c98565b34801561039957600080fd5b50610235610cf7565b3480156103ae57600080fd5b506103c26103bd36600461357f565b610d2e565b60405161026891906135c4565b3480156103db57600080fd5b5061025c6103ea3660046135d8565b610d58565b3480156103fb57600080fd5b5061023561040a36600461357f565b610d76565b34801561041b57600080fd5b5061023561042a3660046136a8565b610e9f565b34801561043b57600080fd5b5060cd546103c2906001600160a01b031681565b34801561045b57600080fd5b506103c261046a3660046137c0565b611002565b34801561047b57600080fd5b506104cc61048a3660046135d8565b60d160205260009081526040902080546001909101546001600160401b0380831692600160401b810490911691600160801b9091046001600160801b03169084565b604080516001600160401b0395861681529490931660208501526001600160801b03909116918301919091526060820152608001610268565b34801561051157600080fd5b5061025c610520366004613598565b6110f1565b34801561053157600080fd5b506102356105403660046137e2565b61111c565b34801561055157600080fd5b5061010754610286565b34801561056757600080fd5b506103c261057636600461357f565b60d2602052600090815260409020546001600160a01b031681565b34801561059d57600080fd5b506102866105ac36600461357f565b61114c565b3480156105bd57600080fd5b506102356105cc36600461348d565b61116d565b3480156105dd57600080fd5b5060405160018152602001610268565b3480156105f957600080fd5b50610286600081565b34801561060e57600080fd5b5061025c61061d366004613598565b61119f565b34801561062e57600080fd5b5061064261063d36600461348d565b6111f5565b604051610268919061386e565b34801561065b57600080fd5b5061066f61066a3660046135d8565b6112e9565b6040516102689291906138d0565b34801561068957600080fd5b5061028661069836600461357f565b61152b565b3480156106a957600080fd5b50674e46545374616b6560c01b610286565b3480156106c757600080fd5b506102356106d636600461357f565b6115b4565b3480156106e757600080fd5b506102356106f6366004613598565b611679565b34801561070757600080fd5b50610286611692565b34801561071c57600080fd5b506107256116da565b6040516102689190613918565b34801561073e57600080fd5b50610106546103c2906001600160a01b031681565b34801561075f57600080fd5b5061025c61076e36600461357f565b60d06020526000908152604090205460ff1681565b60006001600160e01b03198216630a85bd0160e11b14806107b457506301ffc9a760e01b6001600160e01b03198316145b92915050565b600060d36000600160cd60159054906101000a90046001600160401b03166107e29190613941565b6001600160401b0316815260200190815260200160002060010154905090565b6002609b5414156108255760405162461bcd60e51b815260040161022c90613969565b6002609b556108348282611777565b50506001609b55565b60cd54600090600160a01b900460ff1660021461088e5760405162461bcd60e51b815260206004820152600f60248201526e2234b932b1ba103a3930b739b332b960891b604482015260640161022c565b50630a85bd0160e11b95945050505050565b6002609b5414156108c35760405162461bcd60e51b815260040161022c90613969565b6002609b556108d56000610520611b98565b6108f15760405162461bcd60e51b815260040161022c906139a0565b610106546000906001600160a01b031673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1461092d57610106546001600160a01b031661094f565b7f00000000000000000000000000000000000000000000000000000000000000005b90506000816001600160a01b03166370a08231306040518263ffffffff1660e01b815260040161097f91906135c4565b602060405180830381865afa15801561099c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c091906139c8565b61010654909150610a04906001600160a01b03166109dc611b98565b30867f0000000000000000000000000000000000000000000000000000000000000000611ba7565b600081836001600160a01b03166370a08231306040518263ffffffff1660e01b8152600401610a3391906135c4565b602060405180830381865afa158015610a50573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a7491906139c8565b610a7e91906139e1565b9050806101076000828254610a9391906139f8565b90915550506040518181527ff9d14e57815939d300bc94720ede00c8c8e08d254ab28e2917ea46e149aa119b9060200160405180910390a150506001609b555050565b610ade611d1e565b610afa5760405162461bcd60e51b815260040161022c906139a0565b600060d36000600160cd60159054906101000a90046001600160401b0316610b229190613941565b6001600160401b03168152602080820192909252604090810160002081516080810183528154815260018201549381018490526002820154928101929092526003015460608201529150821415610baf5760405162461bcd60e51b81526020600482015260116024820152702932bbb0b932103ab731b430b733b2b21760791b604482015260640161022c565b8051610bbb9083611d2c565b602080820151604080519182529181018490527f243c4656edc72b2c7ec8575d464d955b2f42c1b205960c6c2fb7eecda5419cf691015b60405180910390a15050565b600082815260036020526040902054610c179033611e31565b60008281526002602090815260408083206001600160a01b038516845290915290205460ff1615610c8a5760405162461bcd60e51b815260206004820152601d60248201527f43616e206f6e6c79206772616e7420746f206e6f6e20686f6c64657273000000604482015260640161022c565b610c948282611eb1565b5050565b336001600160a01b03821614610ced5760405162461bcd60e51b815260206004820152601a60248201527921b0b71037b7363c903932b737bab731b2903337b91039b2b63360311b604482015260640161022c565b610c948282611ec5565b6002609b541415610d1a5760405162461bcd60e51b815260040161022c90613969565b6002609b55610d27611f1c565b6001609b55565b60cf8181548110610d3e57600080fd5b6000918252602090912001546001600160a01b0316905081565b6001600160a01b031660009081526037602052604090205460ff1690565b610d7e611d1e565b610d9a5760405162461bcd60e51b815260040161022c906139a0565b600060d36000600160cd60159054906101000a90046001600160401b0316610dc29190613941565b6001600160401b0316815260200190815260200160002060405180608001604052908160008201548152602001600182015481526020016002820154815260200160038201548152505090508060000151821415610e595760405162461bcd60e51b81526020600482015260146024820152732a34b6b296bab734ba103ab731b430b733b2b21760611b604482015260640161022c565b610e67828260200151611d2c565b805160408051918252602082018490527fd968de290ed68f978b9e4816f7d4be9ef46189fe8eeb3eeb86199e7229cf2de09101610bf2565b600054610100900460ff1615808015610ebf5750600054600160ff909116105b80610ee05750610ece30611768565b158015610ee0575060005460ff166001145b610f435760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161022c565b6000805460ff191660011790558015610f66576000805461ff0019166101001790555b610f6f866120de565b61010680546001600160a01b0319166001600160a01b038716179055610f948461216d565b610f9e8383611d2c565b610fa78761220b565b610fb2600089611eb1565b8015610ff8576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050505050565b60008281526004602052604081205481805b828110156110e85760008681526004602090815260408083208484526001019091529020546001600160a01b031615611091578482141561107f5760008681526004602090815260408083209383526001909301905220546001600160a01b031692506107b4915050565b61108a6001836139f8565b91506110d6565b61109c8660006110f1565b80156110c35750600086815260046020908152604080832083805260020190915290205481145b156110d6576110d36001836139f8565b91505b6110e16001826139f8565b9050611014565b50505092915050565b60009182526002602090815260408084206001600160a01b0393909316845291905290205460ff1690565b611124611d1e565b6111405760405162461bcd60e51b815260040161022c906139a0565b6111498161220b565b50565b60ce818154811061115c57600080fd5b600091825260209091200154905081565b6002609b5414156111905760405162461bcd60e51b815260040161022c90613969565b6002609b5561083482826122e1565b600082815260026020908152604080832083805290915281205460ff166111ec575060008281526002602090815260408083206001600160a01b038516845290915290205460ff166107b4565b50600192915050565b6060816001600160401b0381111561120f5761120f6135f3565b60405190808252806020026020018201604052801561124257816020015b606081526020019060019003908161122d5790505b50905060005b828110156112e2576112b23085858481811061126657611266613a10565b90506020028101906112789190613a26565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061276492505050565b8282815181106112c4576112c4613a10565b602002602001018190525080806112da90613a6c565b915050611248565b5092915050565b606060008060ce80548060200260200160405190810160405280929190818152602001828054801561133a57602002820191906000526020600020905b815481526020019060010190808311611326575b50505050509050600081516001600160401b0381111561135c5761135c6135f3565b604051908082528060200260200182016040528015611385578160200160208202803683370190505b5082519091506000805b8281101561144e57876001600160a01b031660d260008784815181106113b7576113b7613a10565b6020026020010151815260200190815260200160002060009054906101000a90046001600160a01b03166001600160a01b0316148482815181106113fd576113fd613a10565b60200260200101901515908115158152505083818151811061142157611421613a10565b60200260200101511561143c576114396001836139f8565b91505b8061144681613a6c565b91505061138f565b50806001600160401b03811115611467576114676135f3565b604051908082528060200260200182016040528015611490578160200160208202803683370190505b5095506000805b83811015611515578481815181106114b1576114b1613a10565b602002602001015115611503578581815181106114d0576114d0613a10565b60200260200101518883815181106114ea576114ea613a10565b60209081029190910101526115006001836139f8565b91505b8061150d81613a6c565b915050611497565b5061151f88612856565b95505050505050915091565b600081815260046020526040812054815b8181101561158f5760008481526004602090815260408083208484526001019091529020546001600160a01b03161561157d5761157a6001846139f8565b92505b6115886001826139f8565b905061153c565b5061159b8360006110f1565b156115ae576115ab6001836139f8565b91505b50919050565b6115c16000610520611b98565b6115dd5760405162461bcd60e51b815260040161022c906139a0565b6101075481116115fb5780610107546115f691906139e1565b6115fe565b60005b6101075561010654611643906001600160a01b03163061161c611b98565b847f0000000000000000000000000000000000000000000000000000000000000000611ba7565b6040518181527f37ff8766c704931c4283e470feb7c20ddcd8aa492746f74b30503709a0452acd9060200160405180910390a150565b600082815260036020526040902054610ced9033611e31565b600060d36000600160cd60159054906101000a90046001600160401b03166116ba9190613941565b6001600160401b0316815260200190815260200160002060000154905090565b600180546116e790613a87565b80601f016020809104026020016040519081016040528092919081815260200182805461171390613a87565b80156117605780601f1061173557610100808354040283529160200191611760565b820191906000526020600020905b81548152906001019060200180831161174357829003601f168201915b505050505081565b6001600160a01b03163b151590565b806001600160401b0381166117c15760405162461bcd60e51b815260206004820152601060248201526f5374616b696e67203020746f6b656e7360801b604482015260640161022c565b60cd546001600160a01b0316600060d1816117da6128cf565b6001600160a01b031681526020810191909152604001600020546001600160401b031611156118185761181361180e6128cf565b6128d9565b611902565b60cf6118226128cf565b81546001810183556000928352602083200180546001600160a01b0319166001600160a01b0392909216919091179055429060d19061185f6128cf565b6001600160a01b03168152602081019190915260400160002080546001600160801b03928316600160801b02921691909117905560cd546118b3906001906001600160401b03600160a81b90910416613941565b60d160006118bf6128cf565b6001600160a01b03168152602081019190915260400160002080546001600160401b0392909216600160401b02600160401b600160801b03199092169190911790555b60005b826001600160401b0316811015611ad75760cd805460ff60a01b1916600160a11b1790556001600160a01b0382166342842e0e6119406128cf565b3088888681811061195357611953613a10565b905060200201356040518463ffffffff1660e01b815260040161197893929190613abc565b600060405180830381600087803b15801561199257600080fd5b505af11580156119a6573d6000803e3d6000fd5b505060cd805460ff60a01b1916600160a01b179055506119c690506128cf565b60d260008787858181106119dc576119dc613a10565b90506020020135815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060d06000868684818110611a2b57611a2b613a10565b602090810292909201358352508101919091526040016000205460ff16611ac757600160d06000878785818110611a6457611a64613a10565b90506020020135815260200190815260200160002060006101000a81548160ff02191690831515021790555060ce858583818110611aa457611aa4613a10565b835460018101855560009485526020948590209190940292909201359190920155505b611ad081613a6c565b9050611905565b508160d16000611ae56128cf565b6001600160a01b03168152602081019190915260400160009081208054909190611b199084906001600160401b0316613ae0565b92506101000a8154816001600160401b0302191690836001600160401b031602179055508383604051611b4d929190613b0b565b6040518091039020611b5d6128cf565b6001600160a01b03167f540cd34f06460fd67aeca9d19e0a56cd3a7c1cde8dc2263f265b68b2ef3495d260405160405180910390a350505050565b6000611ba26129af565b905090565b81611bb157611d17565b6001600160a01b03851673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1415611d0b576001600160a01b038416301415611c5157604051632e1a7d4d60e01b8152600481018390526001600160a01b03821690632e1a7d4d90602401600060405180830381600087803b158015611c2957600080fd5b505af1158015611c3d573d6000803e3d6000fd5b50505050611c4c8383836129d1565b611d17565b6001600160a01b038316301415611d0057348214611ca75760405162461bcd60e51b81526020600482015260136024820152721b5cd9cb9d985b1d5948084f48185b5bdd5b9d606a1b604482015260640161022c565b806001600160a01b031663d0e30db0836040518263ffffffff1660e01b81526004016000604051808303818588803b158015611ce257600080fd5b505af1158015611cf6573d6000803e3d6000fd5b5050505050611d17565b611c4c8383836129d1565b611d1785858585612a9c565b5050505050565b6000611ba281610520611b98565b81611d705760405162461bcd60e51b8152602060048201526014602482015273074696d652d756e69742063616e277420626520360641b604482015260640161022c565b60cd8054600160a81b90046001600160401b0316906001906015611d948385613ae0565b82546001600160401b039182166101009390930a9283029190920219909116179055506040805160808101825284815260208082018581524283850190815260006060850181815287825260d390945294909420925183555160018301559151600282015590516003909101558015611e2c574260d36000611e176001856139e1565b81526020810191909152604001600020600301555b505050565b60008281526002602090815260408083206001600160a01b038516845290915290205460ff16610c9457611e6f816001600160a01b03166014612afa565b611e7a836020612afa565b604051602001611e8b929190613b37565b60408051601f198184030181529082905262461bcd60e51b825261022c91600401613918565b611ebb8282612c9c565b610c948282612cf7565b611ecf8282612d64565b60008281526004602090815260408083206001600160a01b03851680855260028201808552838620805487526001909301855292852080546001600160a01b031916905584529152555050565b6000611f2e611f296128cf565b612dc6565b60d16000611f3a6128cf565b6001600160a01b03166001600160a01b0316815260200190815260200160002060010154611f6891906139f8565b905080611fa45760405162461bcd60e51b815260206004820152600a6024820152694e6f207265776172647360b01b604482015260640161022c565b4260d16000611fb16128cf565b6001600160a01b031681526020810191909152604001600090812080546001600160801b03938416600160801b0293169290921790915560d181611ff36128cf565b6001600160a01b03168152602081019190915260400160002060019081019190915560cd546120329190600160a81b90046001600160401b0316613941565b60d1600061203e6128cf565b6001600160a01b03168152602081019190915260400160002080546001600160401b0392909216600160401b02600160401b600160801b031990921691909117905561209161208b6128cf565b82612f56565b6120996128cf565b6001600160a01b03167ffc30cddea38e2bf4d6ea7d3f9ed3b6ad7f176419f4963bd81318067a4aee73fe826040516120d391815260200190565b60405180910390a250565b600054610100900460ff166121055760405162461bcd60e51b815260040161022c90613ba4565b60005b8151811015610c945760016037600084848151811061212957612129613a10565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790558061216581613a6c565b915050612108565b600054610100900460ff166121945760405162461bcd60e51b815260040161022c90613ba4565b61219c612ff6565b6001600160a01b0381166121e95760405162461bcd60e51b81526020600482015260146024820152730636f6c6c656374696f6e206164647265737320360641b604482015260640161022c565b60cd80546001600160a01b0319166001600160a01b0392909216919091179055565b60006001805461221a90613a87565b80601f016020809104026020016040519081016040528092919081815260200182805461224690613a87565b80156122935780601f1061226857610100808354040283529160200191612293565b820191906000526020600020905b81548152906001019060200180831161227657829003601f168201915b505085519394506122af93600193506020870192509050613386565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a168183604051610bf2929190613bef565b600060d160006122ef6128cf565b6001600160a01b031681526020810191909152604001600020546001600160401b0390811691508290811661235d5760405162461bcd60e51b81526020600482015260146024820152735769746864726177696e67203020746f6b656e7360601b604482015260640161022c565b806001600160401b03168210156123b55760405162461bcd60e51b815260206004820152601c60248201527b15da5d1a191c985dda5b99c81b5bdc99481d1a185b881cdd185ad95960221b604482015260640161022c565b60cd546001600160a01b03166123cc61180e6128cf565b816001600160401b031683141561253557600060cf80548060200260200160405190810160405280929190818152602001828054801561243557602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311612417575b5050505050905060005b8151811015612532576124506128cf565b6001600160a01b031682828151811061246b5761246b613a10565b60200260200101516001600160a01b0316141561252257816001835161249191906139e1565b815181106124a1576124a1613a10565b602002602001015160cf82815481106124bc576124bc613a10565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060cf8054806124fb576124fb613c14565b600082815260209020810160001990810180546001600160a01b0319169055019055612532565b61252b81613a6c565b905061243f565b50505b8160d160006125426128cf565b6001600160a01b031681526020810191909152604001600090812080549091906125769084906001600160401b0316613941565b92506101000a8154816001600160401b0302191690836001600160401b0316021790555060005b826001600160401b0316811015612707576125b66128cf565b6001600160a01b031660d260008888858181106125d5576125d5613a10565b60209081029290920135835250810191909152604001600020546001600160a01b0316146126325760405162461bcd60e51b815260206004820152600a6024820152692737ba1039ba30b5b2b960b11b604482015260640161022c565b600060d2600088888581811061264a5761264a613a10565b6020908102929092013583525081019190915260400160002080546001600160a01b0319166001600160a01b0392831617905582166342842e0e3061268d6128cf565b89898681811061269f5761269f613a10565b905060200201356040518463ffffffff1660e01b81526004016126c493929190613abc565b600060405180830381600087803b1580156126de57600080fd5b505af11580156126f2573d6000803e3d6000fd5b505050508061270090613a6c565b905061259d565b508484604051612718929190613b0b565b60405180910390206127286128cf565b6001600160a01b03167f09ba0ae49142860d7eec1f3ce54722d70b60910facbe018cccb1099e4e84755c60405160405180910390a35050505050565b606061276f83611768565b6127ca5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b606482015260840161022c565b600080846001600160a01b0316846040516127e59190613c2a565b600060405180830381855af49150503d8060008114612820576040519150601f19603f3d011682016040523d82523d6000602084013e612825565b606091505b509150915061284d8282604051806060016040528060278152602001613cd760279139613027565b95945050505050565b6001600160a01b038116600090815260d160205260408120546001600160401b031661289b57506001600160a01b0316600090815260d1602052604090206001015490565b6128a482612dc6565b6001600160a01b038316600090815260d160205260409020600101546107b491906139f8565b919050565b6000611ba2611b98565b60006128e482612dc6565b6001600160a01b038316600090815260d160205260408120600101805492935083929091906129149084906139f8565b90915550506001600160a01b038216600090815260d16020526040902080546001600160801b03428116600160801b02911617905560cd54612969906001906001600160401b03600160a81b90910416613941565b6001600160a01b03909216600090815260d16020526040902080546001600160401b0393909316600160401b02600160401b600160801b03199093169290921790915550565b60006129ba33610d58565b156129cc575060131936013560601c90565b503390565b6000836001600160a01b03168360405160006040518083038185875af1925050503d8060008114612a1e576040519150601f19603f3d011682016040523d82523d6000602084013e612a23565b606091505b5050905080612a9657816001600160a01b031663d0e30db0846040518263ffffffff1660e01b81526004016000604051808303818588803b158015612a6757600080fd5b505af1158015612a7b573d6000803e3d6000fd5b50612a96935050506001600160a01b03841690508585613060565b50505050565b816001600160a01b0316836001600160a01b03161415612abb57612a96565b6001600160a01b038316301415612ae557612ae06001600160a01b0385168383613060565b612a96565b612a966001600160a01b0385168484846130c3565b60606000612b09836002613c46565b612b149060026139f8565b6001600160401b03811115612b2b57612b2b6135f3565b6040519080825280601f01601f191660200182016040528015612b55576020820181803683370190505b509050600360fc1b81600081518110612b7057612b70613a10565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110612b9f57612b9f613a10565b60200101906001600160f81b031916908160001a9053506000612bc3846002613c46565b612bce9060016139f8565b90505b6001811115612c46576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110612c0257612c02613a10565b1a60f81b828281518110612c1857612c18613a10565b60200101906001600160f81b031916908160001a90535060049490941c93612c3f81613c65565b9050612bd1565b508315612c955760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604482015260640161022c565b9392505050565b60008281526002602090815260408083206001600160a01b0385168085529252808320805460ff1916600117905551339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b600082815260046020526040812080549160019190612d1683856139f8565b9091555050600092835260046020908152604080852083865260018101835281862080546001600160a01b039096166001600160a01b03199096168617905593855260029093019052912055565b612d6e8282611e31565b60008281526002602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6001600160a01b038116600090815260d160209081526040808320815160808101835281546001600160401b038082168352600160401b82048116958301869052600160801b9091046001600160801b031693820193909352600190910154606082015260cd54909291600160a81b90910416815b81811015612f4d57600081815260d3602090815260408083208151608081018352815481526001820154938101939093526002810154918301919091526003015460608201529084831415612e9d5785604001516001600160801b0316612ea3565b81604001515b90506000826060015160001415612eba5742612ec0565b82606001515b9050600080612ef689600001516001600160401b03168585612ee291906139e1565b612eec9190613c46565b86602001516130e4565b91509150600080612f168c886000015185612f119190613c92565b61312c565b91509150838015612f245750815b612f2e578b612f30565b805b9b5050505050505050600181612f4691906139f8565b9050612e3b565b50505050919050565b61010754811115612fa45760405162461bcd60e51b81526020600482015260186024820152774e6f7420656e6f7567682072657761726420746f6b656e7360401b604482015260640161022c565b806101076000828254612fb791906139e1565b909155505061010654610c94906001600160a01b03163084847f0000000000000000000000000000000000000000000000000000000000000000611ba7565b600054610100900460ff1661301d5760405162461bcd60e51b815260040161022c90613ba4565b613025613147565b565b60608315613036575081612c95565b8251156130465782518084602001fd5b8160405162461bcd60e51b815260040161022c9190613918565b6040516001600160a01b038316602482015260448101829052611e2c90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261316e565b612a96846323b872dd60e01b85858560405160240161308c93929190613abc565b600080836130f85750600190506000613125565b8383028385828161310b5761310b613c7c565b041461311e576000809250925050613125565b6001925090505b9250929050565b6000808383018481101561311e576000809250925050613125565b600054610100900460ff16610d275760405162461bcd60e51b815260040161022c90613ba4565b60006131c3826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166132409092919063ffffffff16565b805190915015611e2c57808060200190518101906131e19190613cb4565b611e2c5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161022c565b606061324f8484600085613257565b949350505050565b6060824710156132b85760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161022c565b6132c185611768565b61330d5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161022c565b600080866001600160a01b031685876040516133299190613c2a565b60006040518083038185875af1925050503d8060008114613366576040519150601f19603f3d011682016040523d82523d6000602084013e61336b565b606091505b509150915061337b828286613027565b979650505050505050565b82805461339290613a87565b90600052602060002090601f0160209004810192826133b457600085556133fa565b82601f106133cd57805160ff19168380011785556133fa565b828001600101855582156133fa579182015b828111156133fa5782518255916020019190600101906133df565b5061340692915061340a565b5090565b5b80821115613406576000815560010161340b565b60006020828403121561343157600080fd5b81356001600160e01b031981168114612c9557600080fd5b60008083601f84011261345b57600080fd5b5081356001600160401b0381111561347257600080fd5b6020830191508360208260051b850101111561312557600080fd5b600080602083850312156134a057600080fd5b82356001600160401b038111156134b657600080fd5b6134c285828601613449565b90969095509350505050565b80356001600160a01b03811681146128ca57600080fd5b6000806000806000608086880312156134fd57600080fd5b613506866134ce565b9450613514602087016134ce565b93506040860135925060608601356001600160401b038082111561353757600080fd5b818801915088601f83011261354b57600080fd5b81358181111561355a57600080fd5b89602082850101111561356c57600080fd5b9699959850939650602001949392505050565b60006020828403121561359157600080fd5b5035919050565b600080604083850312156135ab57600080fd5b823591506135bb602084016134ce565b90509250929050565b6001600160a01b0391909116815260200190565b6000602082840312156135ea57600080fd5b612c95826134ce565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715613631576136316135f3565b604052919050565b600082601f83011261364a57600080fd5b81356001600160401b03811115613663576136636135f3565b613676601f8201601f1916602001613609565b81815284602083860101111561368b57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600080600060e0888a0312156136c357600080fd5b6136cc886134ce565b96506020808901356001600160401b03808211156136e957600080fd5b6136f58c838d01613639565b985060408b013591508082111561370b57600080fd5b818b0191508b601f83011261371f57600080fd5b813581811115613731576137316135f3565b8060051b9150613742848301613609565b818152918301840191848101908e84111561375c57600080fd5b938501935b8385101561378157613772856134ce565b82529385019390850190613761565b809a50505050505050613796606089016134ce565b93506137a4608089016134ce565b925060a0880135915060c0880135905092959891949750929550565b600080604083850312156137d357600080fd5b50508035926020909101359150565b6000602082840312156137f457600080fd5b81356001600160401b0381111561380a57600080fd5b61324f84828501613639565b60005b83811015613831578181015183820152602001613819565b83811115612a965750506000910152565b6000815180845261385a816020860160208601613816565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156138c357603f198886030184526138b1858351613842565b94509285019290850190600101613895565b5092979650505050505050565b604080825283519082018190526000906020906060840190828701845b82811015613909578151845292840192908401906001016138ed565b50505092019290925292915050565b602081526000612c956020830184613842565b634e487b7160e01b600052601160045260246000fd5b60006001600160401b03838116908316818110156139615761396161392b565b039392505050565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b6020808252600e908201526d139bdd08185d5d1a1bdc9a5e995960921b604082015260600190565b6000602082840312156139da57600080fd5b5051919050565b6000828210156139f3576139f361392b565b500390565b60008219821115613a0b57613a0b61392b565b500190565b634e487b7160e01b600052603260045260246000fd5b6000808335601e19843603018112613a3d57600080fd5b8301803591506001600160401b03821115613a5757600080fd5b60200191503681900382131561312557600080fd5b6000600019821415613a8057613a8061392b565b5060010190565b600181811c90821680613a9b57607f821691505b602082108114156115ae57634e487b7160e01b600052602260045260246000fd5b6001600160a01b039384168152919092166020820152604081019190915260600190565b60006001600160401b03808316818516808303821115613b0257613b0261392b565b01949350505050565b60006001600160fb1b03831115613b2157600080fd5b8260051b80858437600092019182525092915050565b7402832b936b4b9b9b4b7b7399d1030b1b1b7bab73a1605d1b815260008351613b67816015850160208801613816565b7001034b99036b4b9b9b4b733903937b6329607d1b6015918401918201528351613b98816026840160208801613816565b01602601949350505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b604081526000613c026040830185613842565b828103602084015261284d8185613842565b634e487b7160e01b600052603160045260246000fd5b60008251613c3c818460208701613816565b9190910192915050565b6000816000190483118215151615613c6057613c6061392b565b500290565b600081613c7457613c7461392b565b506000190190565b634e487b7160e01b600052601260045260246000fd5b600082613caf57634e487b7160e01b600052601260045260246000fd5b500490565b600060208284031215613cc657600080fd5b81518015158114612c9557600080fdfe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220474cd050fb4f816949cb2025753203700902907545d5c98e15061ad3fb363c6f64736f6c634300080c0033",
    "sourceMap": "1458:6095:370:-:0;;;782:28:91;;;-1:-1:-1;;;;782:28:91;-1:-1:-1;;;782:28:91;;;2129:110:370;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3111:19:436;3134:13;;;;;;3133:14;;3179:34;;;;-1:-1:-1;3197:12:436;;3212:1;3197:12;;;;:16;3179:34;3178:108;;;;3220:44;3258:4;3220:29;;;;;:44;;:::i;:::-;3219:45;:66;;;;-1:-1:-1;3268:12:436;;;;;:17;3219:66;3157:201;;;;-1:-1:-1;;;3157:201:436;;511:2:644;3157:201:436;;;493:21:644;550:2;530:18;;;523:30;589:34;569:18;;;562:62;-1:-1:-1;;;640:18:644;;;633:44;694:19;;3157:201:436;;;;;;;;3368:12;:16;;-1:-1:-1;;3368:16:436;3383:1;3368:16;;;3394:65;;;;3428:13;:20;;-1:-1:-1;;3428:20:436;;;;;3394:65;-1:-1:-1;;;;;2192:40:370;::::1;;::::0;3479:99:436;;;;3529:5;3513:21;;-1:-1:-1;;3513:21:436;;;3553:14;;-1:-1:-1;876:36:644;;3553:14:436;;864:2:644;849:18;3553:14:436;;;;;;;3479:99;3101:483;2129:110:370;1458:6095;;1186:320:462;-1:-1:-1;;;;;1476:19:462;;:23;;;1186:320::o;14:290:644:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:644;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:644:o;724:194::-;1458:6095:370;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106101b35760003560e01c8063938e3d7b116100e8578063938e3d7b1461052557806393ce534314610545578063940670451461055b578063961004d314610591578063983d95ce146105b1578063a0a8e460146105d1578063a217fddf146105ed578063a32fa5b314610602578063ac9650d814610622578063c34531531461064f578063ca15c8731461067d578063cb2ef6f71461069d578063cb43b2dd146106bb578063d547741f146106db578063d68124c7146106fb578063e8a3d48514610710578063f7c618c114610732578063fd48ba171461075357600080fd5b806301ffc9a71461023c5780630e8b229b146102715780630fbf0a9314610294578063150b7a02146102b457806316c621e0146102ed57806323ef258014610300578063248a9ca3146103205780632f2ff15d1461034d57806336568abe1461036d578063372500ab1461038d5780635357e916146103a2578063572b6c05146103cf5780636360106f146103ef5780636a5ab6e51461040f57806372f702f31461042f5780639010d07c1461044f5780639168ae721461046f57806391d148541461050557600080fd5b3661023757336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146102355760405162461bcd60e51b815260206004820181905260248201527f63616c6c6572206e6f74206e617469766520746f6b656e20777261707065722e60448201526064015b60405180910390fd5b005b600080fd5b34801561024857600080fd5b5061025c61025736600461341f565b610783565b60405190151581526020015b60405180910390f35b34801561027d57600080fd5b506102866107ba565b604051908152602001610268565b3480156102a057600080fd5b506102356102af36600461348d565b610802565b3480156102c057600080fd5b506102d46102cf3660046134e5565b61083d565b6040516001600160e01b03199091168152602001610268565b6102356102fb36600461357f565b6108a0565b34801561030c57600080fd5b5061023561031b36600461357f565b610ad6565b34801561032c57600080fd5b5061028661033b36600461357f565b60009081526003602052604090205490565b34801561035957600080fd5b50610235610368366004613598565b610bfe565b34801561037957600080fd5b50610235610388366004613598565b610c98565b34801561039957600080fd5b50610235610cf7565b3480156103ae57600080fd5b506103c26103bd36600461357f565b610d2e565b60405161026891906135c4565b3480156103db57600080fd5b5061025c6103ea3660046135d8565b610d58565b3480156103fb57600080fd5b5061023561040a36600461357f565b610d76565b34801561041b57600080fd5b5061023561042a3660046136a8565b610e9f565b34801561043b57600080fd5b5060cd546103c2906001600160a01b031681565b34801561045b57600080fd5b506103c261046a3660046137c0565b611002565b34801561047b57600080fd5b506104cc61048a3660046135d8565b60d160205260009081526040902080546001909101546001600160401b0380831692600160401b810490911691600160801b9091046001600160801b03169084565b604080516001600160401b0395861681529490931660208501526001600160801b03909116918301919091526060820152608001610268565b34801561051157600080fd5b5061025c610520366004613598565b6110f1565b34801561053157600080fd5b506102356105403660046137e2565b61111c565b34801561055157600080fd5b5061010754610286565b34801561056757600080fd5b506103c261057636600461357f565b60d2602052600090815260409020546001600160a01b031681565b34801561059d57600080fd5b506102866105ac36600461357f565b61114c565b3480156105bd57600080fd5b506102356105cc36600461348d565b61116d565b3480156105dd57600080fd5b5060405160018152602001610268565b3480156105f957600080fd5b50610286600081565b34801561060e57600080fd5b5061025c61061d366004613598565b61119f565b34801561062e57600080fd5b5061064261063d36600461348d565b6111f5565b604051610268919061386e565b34801561065b57600080fd5b5061066f61066a3660046135d8565b6112e9565b6040516102689291906138d0565b34801561068957600080fd5b5061028661069836600461357f565b61152b565b3480156106a957600080fd5b50674e46545374616b6560c01b610286565b3480156106c757600080fd5b506102356106d636600461357f565b6115b4565b3480156106e757600080fd5b506102356106f6366004613598565b611679565b34801561070757600080fd5b50610286611692565b34801561071c57600080fd5b506107256116da565b6040516102689190613918565b34801561073e57600080fd5b50610106546103c2906001600160a01b031681565b34801561075f57600080fd5b5061025c61076e36600461357f565b60d06020526000908152604090205460ff1681565b60006001600160e01b03198216630a85bd0160e11b14806107b457506301ffc9a760e01b6001600160e01b03198316145b92915050565b600060d36000600160cd60159054906101000a90046001600160401b03166107e29190613941565b6001600160401b0316815260200190815260200160002060010154905090565b6002609b5414156108255760405162461bcd60e51b815260040161022c90613969565b6002609b556108348282611777565b50506001609b55565b60cd54600090600160a01b900460ff1660021461088e5760405162461bcd60e51b815260206004820152600f60248201526e2234b932b1ba103a3930b739b332b960891b604482015260640161022c565b50630a85bd0160e11b95945050505050565b6002609b5414156108c35760405162461bcd60e51b815260040161022c90613969565b6002609b556108d56000610520611b98565b6108f15760405162461bcd60e51b815260040161022c906139a0565b610106546000906001600160a01b031673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1461092d57610106546001600160a01b031661094f565b7f00000000000000000000000000000000000000000000000000000000000000005b90506000816001600160a01b03166370a08231306040518263ffffffff1660e01b815260040161097f91906135c4565b602060405180830381865afa15801561099c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c091906139c8565b61010654909150610a04906001600160a01b03166109dc611b98565b30867f0000000000000000000000000000000000000000000000000000000000000000611ba7565b600081836001600160a01b03166370a08231306040518263ffffffff1660e01b8152600401610a3391906135c4565b602060405180830381865afa158015610a50573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a7491906139c8565b610a7e91906139e1565b9050806101076000828254610a9391906139f8565b90915550506040518181527ff9d14e57815939d300bc94720ede00c8c8e08d254ab28e2917ea46e149aa119b9060200160405180910390a150506001609b555050565b610ade611d1e565b610afa5760405162461bcd60e51b815260040161022c906139a0565b600060d36000600160cd60159054906101000a90046001600160401b0316610b229190613941565b6001600160401b03168152602080820192909252604090810160002081516080810183528154815260018201549381018490526002820154928101929092526003015460608201529150821415610baf5760405162461bcd60e51b81526020600482015260116024820152702932bbb0b932103ab731b430b733b2b21760791b604482015260640161022c565b8051610bbb9083611d2c565b602080820151604080519182529181018490527f243c4656edc72b2c7ec8575d464d955b2f42c1b205960c6c2fb7eecda5419cf691015b60405180910390a15050565b600082815260036020526040902054610c179033611e31565b60008281526002602090815260408083206001600160a01b038516845290915290205460ff1615610c8a5760405162461bcd60e51b815260206004820152601d60248201527f43616e206f6e6c79206772616e7420746f206e6f6e20686f6c64657273000000604482015260640161022c565b610c948282611eb1565b5050565b336001600160a01b03821614610ced5760405162461bcd60e51b815260206004820152601a60248201527921b0b71037b7363c903932b737bab731b2903337b91039b2b63360311b604482015260640161022c565b610c948282611ec5565b6002609b541415610d1a5760405162461bcd60e51b815260040161022c90613969565b6002609b55610d27611f1c565b6001609b55565b60cf8181548110610d3e57600080fd5b6000918252602090912001546001600160a01b0316905081565b6001600160a01b031660009081526037602052604090205460ff1690565b610d7e611d1e565b610d9a5760405162461bcd60e51b815260040161022c906139a0565b600060d36000600160cd60159054906101000a90046001600160401b0316610dc29190613941565b6001600160401b0316815260200190815260200160002060405180608001604052908160008201548152602001600182015481526020016002820154815260200160038201548152505090508060000151821415610e595760405162461bcd60e51b81526020600482015260146024820152732a34b6b296bab734ba103ab731b430b733b2b21760611b604482015260640161022c565b610e67828260200151611d2c565b805160408051918252602082018490527fd968de290ed68f978b9e4816f7d4be9ef46189fe8eeb3eeb86199e7229cf2de09101610bf2565b600054610100900460ff1615808015610ebf5750600054600160ff909116105b80610ee05750610ece30611768565b158015610ee0575060005460ff166001145b610f435760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161022c565b6000805460ff191660011790558015610f66576000805461ff0019166101001790555b610f6f866120de565b61010680546001600160a01b0319166001600160a01b038716179055610f948461216d565b610f9e8383611d2c565b610fa78761220b565b610fb2600089611eb1565b8015610ff8576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050505050565b60008281526004602052604081205481805b828110156110e85760008681526004602090815260408083208484526001019091529020546001600160a01b031615611091578482141561107f5760008681526004602090815260408083209383526001909301905220546001600160a01b031692506107b4915050565b61108a6001836139f8565b91506110d6565b61109c8660006110f1565b80156110c35750600086815260046020908152604080832083805260020190915290205481145b156110d6576110d36001836139f8565b91505b6110e16001826139f8565b9050611014565b50505092915050565b60009182526002602090815260408084206001600160a01b0393909316845291905290205460ff1690565b611124611d1e565b6111405760405162461bcd60e51b815260040161022c906139a0565b6111498161220b565b50565b60ce818154811061115c57600080fd5b600091825260209091200154905081565b6002609b5414156111905760405162461bcd60e51b815260040161022c90613969565b6002609b5561083482826122e1565b600082815260026020908152604080832083805290915281205460ff166111ec575060008281526002602090815260408083206001600160a01b038516845290915290205460ff166107b4565b50600192915050565b6060816001600160401b0381111561120f5761120f6135f3565b60405190808252806020026020018201604052801561124257816020015b606081526020019060019003908161122d5790505b50905060005b828110156112e2576112b23085858481811061126657611266613a10565b90506020028101906112789190613a26565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061276492505050565b8282815181106112c4576112c4613a10565b602002602001018190525080806112da90613a6c565b915050611248565b5092915050565b606060008060ce80548060200260200160405190810160405280929190818152602001828054801561133a57602002820191906000526020600020905b815481526020019060010190808311611326575b50505050509050600081516001600160401b0381111561135c5761135c6135f3565b604051908082528060200260200182016040528015611385578160200160208202803683370190505b5082519091506000805b8281101561144e57876001600160a01b031660d260008784815181106113b7576113b7613a10565b6020026020010151815260200190815260200160002060009054906101000a90046001600160a01b03166001600160a01b0316148482815181106113fd576113fd613a10565b60200260200101901515908115158152505083818151811061142157611421613a10565b60200260200101511561143c576114396001836139f8565b91505b8061144681613a6c565b91505061138f565b50806001600160401b03811115611467576114676135f3565b604051908082528060200260200182016040528015611490578160200160208202803683370190505b5095506000805b83811015611515578481815181106114b1576114b1613a10565b602002602001015115611503578581815181106114d0576114d0613a10565b60200260200101518883815181106114ea576114ea613a10565b60209081029190910101526115006001836139f8565b91505b8061150d81613a6c565b915050611497565b5061151f88612856565b95505050505050915091565b600081815260046020526040812054815b8181101561158f5760008481526004602090815260408083208484526001019091529020546001600160a01b03161561157d5761157a6001846139f8565b92505b6115886001826139f8565b905061153c565b5061159b8360006110f1565b156115ae576115ab6001836139f8565b91505b50919050565b6115c16000610520611b98565b6115dd5760405162461bcd60e51b815260040161022c906139a0565b6101075481116115fb5780610107546115f691906139e1565b6115fe565b60005b6101075561010654611643906001600160a01b03163061161c611b98565b847f0000000000000000000000000000000000000000000000000000000000000000611ba7565b6040518181527f37ff8766c704931c4283e470feb7c20ddcd8aa492746f74b30503709a0452acd9060200160405180910390a150565b600082815260036020526040902054610ced9033611e31565b600060d36000600160cd60159054906101000a90046001600160401b03166116ba9190613941565b6001600160401b0316815260200190815260200160002060000154905090565b600180546116e790613a87565b80601f016020809104026020016040519081016040528092919081815260200182805461171390613a87565b80156117605780601f1061173557610100808354040283529160200191611760565b820191906000526020600020905b81548152906001019060200180831161174357829003601f168201915b505050505081565b6001600160a01b03163b151590565b806001600160401b0381166117c15760405162461bcd60e51b815260206004820152601060248201526f5374616b696e67203020746f6b656e7360801b604482015260640161022c565b60cd546001600160a01b0316600060d1816117da6128cf565b6001600160a01b031681526020810191909152604001600020546001600160401b031611156118185761181361180e6128cf565b6128d9565b611902565b60cf6118226128cf565b81546001810183556000928352602083200180546001600160a01b0319166001600160a01b0392909216919091179055429060d19061185f6128cf565b6001600160a01b03168152602081019190915260400160002080546001600160801b03928316600160801b02921691909117905560cd546118b3906001906001600160401b03600160a81b90910416613941565b60d160006118bf6128cf565b6001600160a01b03168152602081019190915260400160002080546001600160401b0392909216600160401b02600160401b600160801b03199092169190911790555b60005b826001600160401b0316811015611ad75760cd805460ff60a01b1916600160a11b1790556001600160a01b0382166342842e0e6119406128cf565b3088888681811061195357611953613a10565b905060200201356040518463ffffffff1660e01b815260040161197893929190613abc565b600060405180830381600087803b15801561199257600080fd5b505af11580156119a6573d6000803e3d6000fd5b505060cd805460ff60a01b1916600160a01b179055506119c690506128cf565b60d260008787858181106119dc576119dc613a10565b90506020020135815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060d06000868684818110611a2b57611a2b613a10565b602090810292909201358352508101919091526040016000205460ff16611ac757600160d06000878785818110611a6457611a64613a10565b90506020020135815260200190815260200160002060006101000a81548160ff02191690831515021790555060ce858583818110611aa457611aa4613a10565b835460018101855560009485526020948590209190940292909201359190920155505b611ad081613a6c565b9050611905565b508160d16000611ae56128cf565b6001600160a01b03168152602081019190915260400160009081208054909190611b199084906001600160401b0316613ae0565b92506101000a8154816001600160401b0302191690836001600160401b031602179055508383604051611b4d929190613b0b565b6040518091039020611b5d6128cf565b6001600160a01b03167f540cd34f06460fd67aeca9d19e0a56cd3a7c1cde8dc2263f265b68b2ef3495d260405160405180910390a350505050565b6000611ba26129af565b905090565b81611bb157611d17565b6001600160a01b03851673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1415611d0b576001600160a01b038416301415611c5157604051632e1a7d4d60e01b8152600481018390526001600160a01b03821690632e1a7d4d90602401600060405180830381600087803b158015611c2957600080fd5b505af1158015611c3d573d6000803e3d6000fd5b50505050611c4c8383836129d1565b611d17565b6001600160a01b038316301415611d0057348214611ca75760405162461bcd60e51b81526020600482015260136024820152721b5cd9cb9d985b1d5948084f48185b5bdd5b9d606a1b604482015260640161022c565b806001600160a01b031663d0e30db0836040518263ffffffff1660e01b81526004016000604051808303818588803b158015611ce257600080fd5b505af1158015611cf6573d6000803e3d6000fd5b5050505050611d17565b611c4c8383836129d1565b611d1785858585612a9c565b5050505050565b6000611ba281610520611b98565b81611d705760405162461bcd60e51b8152602060048201526014602482015273074696d652d756e69742063616e277420626520360641b604482015260640161022c565b60cd8054600160a81b90046001600160401b0316906001906015611d948385613ae0565b82546001600160401b039182166101009390930a9283029190920219909116179055506040805160808101825284815260208082018581524283850190815260006060850181815287825260d390945294909420925183555160018301559151600282015590516003909101558015611e2c574260d36000611e176001856139e1565b81526020810191909152604001600020600301555b505050565b60008281526002602090815260408083206001600160a01b038516845290915290205460ff16610c9457611e6f816001600160a01b03166014612afa565b611e7a836020612afa565b604051602001611e8b929190613b37565b60408051601f198184030181529082905262461bcd60e51b825261022c91600401613918565b611ebb8282612c9c565b610c948282612cf7565b611ecf8282612d64565b60008281526004602090815260408083206001600160a01b03851680855260028201808552838620805487526001909301855292852080546001600160a01b031916905584529152555050565b6000611f2e611f296128cf565b612dc6565b60d16000611f3a6128cf565b6001600160a01b03166001600160a01b0316815260200190815260200160002060010154611f6891906139f8565b905080611fa45760405162461bcd60e51b815260206004820152600a6024820152694e6f207265776172647360b01b604482015260640161022c565b4260d16000611fb16128cf565b6001600160a01b031681526020810191909152604001600090812080546001600160801b03938416600160801b0293169290921790915560d181611ff36128cf565b6001600160a01b03168152602081019190915260400160002060019081019190915560cd546120329190600160a81b90046001600160401b0316613941565b60d1600061203e6128cf565b6001600160a01b03168152602081019190915260400160002080546001600160401b0392909216600160401b02600160401b600160801b031990921691909117905561209161208b6128cf565b82612f56565b6120996128cf565b6001600160a01b03167ffc30cddea38e2bf4d6ea7d3f9ed3b6ad7f176419f4963bd81318067a4aee73fe826040516120d391815260200190565b60405180910390a250565b600054610100900460ff166121055760405162461bcd60e51b815260040161022c90613ba4565b60005b8151811015610c945760016037600084848151811061212957612129613a10565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790558061216581613a6c565b915050612108565b600054610100900460ff166121945760405162461bcd60e51b815260040161022c90613ba4565b61219c612ff6565b6001600160a01b0381166121e95760405162461bcd60e51b81526020600482015260146024820152730636f6c6c656374696f6e206164647265737320360641b604482015260640161022c565b60cd80546001600160a01b0319166001600160a01b0392909216919091179055565b60006001805461221a90613a87565b80601f016020809104026020016040519081016040528092919081815260200182805461224690613a87565b80156122935780601f1061226857610100808354040283529160200191612293565b820191906000526020600020905b81548152906001019060200180831161227657829003601f168201915b505085519394506122af93600193506020870192509050613386565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a168183604051610bf2929190613bef565b600060d160006122ef6128cf565b6001600160a01b031681526020810191909152604001600020546001600160401b0390811691508290811661235d5760405162461bcd60e51b81526020600482015260146024820152735769746864726177696e67203020746f6b656e7360601b604482015260640161022c565b806001600160401b03168210156123b55760405162461bcd60e51b815260206004820152601c60248201527b15da5d1a191c985dda5b99c81b5bdc99481d1a185b881cdd185ad95960221b604482015260640161022c565b60cd546001600160a01b03166123cc61180e6128cf565b816001600160401b031683141561253557600060cf80548060200260200160405190810160405280929190818152602001828054801561243557602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311612417575b5050505050905060005b8151811015612532576124506128cf565b6001600160a01b031682828151811061246b5761246b613a10565b60200260200101516001600160a01b0316141561252257816001835161249191906139e1565b815181106124a1576124a1613a10565b602002602001015160cf82815481106124bc576124bc613a10565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060cf8054806124fb576124fb613c14565b600082815260209020810160001990810180546001600160a01b0319169055019055612532565b61252b81613a6c565b905061243f565b50505b8160d160006125426128cf565b6001600160a01b031681526020810191909152604001600090812080549091906125769084906001600160401b0316613941565b92506101000a8154816001600160401b0302191690836001600160401b0316021790555060005b826001600160401b0316811015612707576125b66128cf565b6001600160a01b031660d260008888858181106125d5576125d5613a10565b60209081029290920135835250810191909152604001600020546001600160a01b0316146126325760405162461bcd60e51b815260206004820152600a6024820152692737ba1039ba30b5b2b960b11b604482015260640161022c565b600060d2600088888581811061264a5761264a613a10565b6020908102929092013583525081019190915260400160002080546001600160a01b0319166001600160a01b0392831617905582166342842e0e3061268d6128cf565b89898681811061269f5761269f613a10565b905060200201356040518463ffffffff1660e01b81526004016126c493929190613abc565b600060405180830381600087803b1580156126de57600080fd5b505af11580156126f2573d6000803e3d6000fd5b505050508061270090613a6c565b905061259d565b508484604051612718929190613b0b565b60405180910390206127286128cf565b6001600160a01b03167f09ba0ae49142860d7eec1f3ce54722d70b60910facbe018cccb1099e4e84755c60405160405180910390a35050505050565b606061276f83611768565b6127ca5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b606482015260840161022c565b600080846001600160a01b0316846040516127e59190613c2a565b600060405180830381855af49150503d8060008114612820576040519150601f19603f3d011682016040523d82523d6000602084013e612825565b606091505b509150915061284d8282604051806060016040528060278152602001613cd760279139613027565b95945050505050565b6001600160a01b038116600090815260d160205260408120546001600160401b031661289b57506001600160a01b0316600090815260d1602052604090206001015490565b6128a482612dc6565b6001600160a01b038316600090815260d160205260409020600101546107b491906139f8565b919050565b6000611ba2611b98565b60006128e482612dc6565b6001600160a01b038316600090815260d160205260408120600101805492935083929091906129149084906139f8565b90915550506001600160a01b038216600090815260d16020526040902080546001600160801b03428116600160801b02911617905560cd54612969906001906001600160401b03600160a81b90910416613941565b6001600160a01b03909216600090815260d16020526040902080546001600160401b0393909316600160401b02600160401b600160801b03199093169290921790915550565b60006129ba33610d58565b156129cc575060131936013560601c90565b503390565b6000836001600160a01b03168360405160006040518083038185875af1925050503d8060008114612a1e576040519150601f19603f3d011682016040523d82523d6000602084013e612a23565b606091505b5050905080612a9657816001600160a01b031663d0e30db0846040518263ffffffff1660e01b81526004016000604051808303818588803b158015612a6757600080fd5b505af1158015612a7b573d6000803e3d6000fd5b50612a96935050506001600160a01b03841690508585613060565b50505050565b816001600160a01b0316836001600160a01b03161415612abb57612a96565b6001600160a01b038316301415612ae557612ae06001600160a01b0385168383613060565b612a96565b612a966001600160a01b0385168484846130c3565b60606000612b09836002613c46565b612b149060026139f8565b6001600160401b03811115612b2b57612b2b6135f3565b6040519080825280601f01601f191660200182016040528015612b55576020820181803683370190505b509050600360fc1b81600081518110612b7057612b70613a10565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110612b9f57612b9f613a10565b60200101906001600160f81b031916908160001a9053506000612bc3846002613c46565b612bce9060016139f8565b90505b6001811115612c46576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110612c0257612c02613a10565b1a60f81b828281518110612c1857612c18613a10565b60200101906001600160f81b031916908160001a90535060049490941c93612c3f81613c65565b9050612bd1565b508315612c955760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604482015260640161022c565b9392505050565b60008281526002602090815260408083206001600160a01b0385168085529252808320805460ff1916600117905551339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b600082815260046020526040812080549160019190612d1683856139f8565b9091555050600092835260046020908152604080852083865260018101835281862080546001600160a01b039096166001600160a01b03199096168617905593855260029093019052912055565b612d6e8282611e31565b60008281526002602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6001600160a01b038116600090815260d160209081526040808320815160808101835281546001600160401b038082168352600160401b82048116958301869052600160801b9091046001600160801b031693820193909352600190910154606082015260cd54909291600160a81b90910416815b81811015612f4d57600081815260d3602090815260408083208151608081018352815481526001820154938101939093526002810154918301919091526003015460608201529084831415612e9d5785604001516001600160801b0316612ea3565b81604001515b90506000826060015160001415612eba5742612ec0565b82606001515b9050600080612ef689600001516001600160401b03168585612ee291906139e1565b612eec9190613c46565b86602001516130e4565b91509150600080612f168c886000015185612f119190613c92565b61312c565b91509150838015612f245750815b612f2e578b612f30565b805b9b5050505050505050600181612f4691906139f8565b9050612e3b565b50505050919050565b61010754811115612fa45760405162461bcd60e51b81526020600482015260186024820152774e6f7420656e6f7567682072657761726420746f6b656e7360401b604482015260640161022c565b806101076000828254612fb791906139e1565b909155505061010654610c94906001600160a01b03163084847f0000000000000000000000000000000000000000000000000000000000000000611ba7565b600054610100900460ff1661301d5760405162461bcd60e51b815260040161022c90613ba4565b613025613147565b565b60608315613036575081612c95565b8251156130465782518084602001fd5b8160405162461bcd60e51b815260040161022c9190613918565b6040516001600160a01b038316602482015260448101829052611e2c90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261316e565b612a96846323b872dd60e01b85858560405160240161308c93929190613abc565b600080836130f85750600190506000613125565b8383028385828161310b5761310b613c7c565b041461311e576000809250925050613125565b6001925090505b9250929050565b6000808383018481101561311e576000809250925050613125565b600054610100900460ff16610d275760405162461bcd60e51b815260040161022c90613ba4565b60006131c3826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166132409092919063ffffffff16565b805190915015611e2c57808060200190518101906131e19190613cb4565b611e2c5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161022c565b606061324f8484600085613257565b949350505050565b6060824710156132b85760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161022c565b6132c185611768565b61330d5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161022c565b600080866001600160a01b031685876040516133299190613c2a565b60006040518083038185875af1925050503d8060008114613366576040519150601f19603f3d011682016040523d82523d6000602084013e61336b565b606091505b509150915061337b828286613027565b979650505050505050565b82805461339290613a87565b90600052602060002090601f0160209004810192826133b457600085556133fa565b82601f106133cd57805160ff19168380011785556133fa565b828001600101855582156133fa579182015b828111156133fa5782518255916020019190600101906133df565b5061340692915061340a565b5090565b5b80821115613406576000815560010161340b565b60006020828403121561343157600080fd5b81356001600160e01b031981168114612c9557600080fd5b60008083601f84011261345b57600080fd5b5081356001600160401b0381111561347257600080fd5b6020830191508360208260051b850101111561312557600080fd5b600080602083850312156134a057600080fd5b82356001600160401b038111156134b657600080fd5b6134c285828601613449565b90969095509350505050565b80356001600160a01b03811681146128ca57600080fd5b6000806000806000608086880312156134fd57600080fd5b613506866134ce565b9450613514602087016134ce565b93506040860135925060608601356001600160401b038082111561353757600080fd5b818801915088601f83011261354b57600080fd5b81358181111561355a57600080fd5b89602082850101111561356c57600080fd5b9699959850939650602001949392505050565b60006020828403121561359157600080fd5b5035919050565b600080604083850312156135ab57600080fd5b823591506135bb602084016134ce565b90509250929050565b6001600160a01b0391909116815260200190565b6000602082840312156135ea57600080fd5b612c95826134ce565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715613631576136316135f3565b604052919050565b600082601f83011261364a57600080fd5b81356001600160401b03811115613663576136636135f3565b613676601f8201601f1916602001613609565b81815284602083860101111561368b57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600080600060e0888a0312156136c357600080fd5b6136cc886134ce565b96506020808901356001600160401b03808211156136e957600080fd5b6136f58c838d01613639565b985060408b013591508082111561370b57600080fd5b818b0191508b601f83011261371f57600080fd5b813581811115613731576137316135f3565b8060051b9150613742848301613609565b818152918301840191848101908e84111561375c57600080fd5b938501935b8385101561378157613772856134ce565b82529385019390850190613761565b809a50505050505050613796606089016134ce565b93506137a4608089016134ce565b925060a0880135915060c0880135905092959891949750929550565b600080604083850312156137d357600080fd5b50508035926020909101359150565b6000602082840312156137f457600080fd5b81356001600160401b0381111561380a57600080fd5b61324f84828501613639565b60005b83811015613831578181015183820152602001613819565b83811115612a965750506000910152565b6000815180845261385a816020860160208601613816565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156138c357603f198886030184526138b1858351613842565b94509285019290850190600101613895565b5092979650505050505050565b604080825283519082018190526000906020906060840190828701845b82811015613909578151845292840192908401906001016138ed565b50505092019290925292915050565b602081526000612c956020830184613842565b634e487b7160e01b600052601160045260246000fd5b60006001600160401b03838116908316818110156139615761396161392b565b039392505050565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b6020808252600e908201526d139bdd08185d5d1a1bdc9a5e995960921b604082015260600190565b6000602082840312156139da57600080fd5b5051919050565b6000828210156139f3576139f361392b565b500390565b60008219821115613a0b57613a0b61392b565b500190565b634e487b7160e01b600052603260045260246000fd5b6000808335601e19843603018112613a3d57600080fd5b8301803591506001600160401b03821115613a5757600080fd5b60200191503681900382131561312557600080fd5b6000600019821415613a8057613a8061392b565b5060010190565b600181811c90821680613a9b57607f821691505b602082108114156115ae57634e487b7160e01b600052602260045260246000fd5b6001600160a01b039384168152919092166020820152604081019190915260600190565b60006001600160401b03808316818516808303821115613b0257613b0261392b565b01949350505050565b60006001600160fb1b03831115613b2157600080fd5b8260051b80858437600092019182525092915050565b7402832b936b4b9b9b4b7b7399d1030b1b1b7bab73a1605d1b815260008351613b67816015850160208801613816565b7001034b99036b4b9b9b4b733903937b6329607d1b6015918401918201528351613b98816026840160208801613816565b01602601949350505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b604081526000613c026040830185613842565b828103602084015261284d8185613842565b634e487b7160e01b600052603160045260246000fd5b60008251613c3c818460208701613816565b9190910192915050565b6000816000190483118215151615613c6057613c6061392b565b500290565b600081613c7457613c7461392b565b506000190190565b634e487b7160e01b600052601260045260246000fd5b600082613caf57634e487b7160e01b600052601260045260246000fd5b500490565b600060208284031215613cc657600080fd5b81518015158114612c9557600080fdfe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220474cd050fb4f816949cb2025753203700902907545d5c98e15061ad3fb363c6f64736f6c634300080c0033",
    "sourceMap": "1458:6095:370:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3333:10;-1:-1:-1;;;;;3347:18:370;3333:32;;3325:77;;;;-1:-1:-1;;;3325:77:370;;216:2:644;3325:77:370;;;198:21:644;;;235:18;;;228:30;294:34;274:18;;;267:62;346:18;;3325:77:370;;;;;;;;;1458:6095;;;;;5458:206;;;;;;;;;;-1:-1:-1;5458:206:370;;;;;:::i;:::-;;:::i;:::-;;;831:14:644;;824:22;806:41;;794:2;779:18;5458:206:370;;;;;;;;5919:179:91;;;;;;;;;;;;;:::i;:::-;;;1004:25:644;;;992:2;977:18;5919:179:91;858:177:644;2279:101:91;;;;;;;;;;-1:-1:-1;2279:101:91;;;;;:::i;:::-;;:::i;5199:253:370:-;;;;;;;;;;-1:-1:-1;5199:253:370;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;;3007:33:644;;;2989:52;;2977:2;2962:18;5199:253:370;2845:202:644;3458:752:370;;;;;;:::i;:::-;;:::i;4030:513:91:-;;;;;;;;;;-1:-1:-1;4030:513:91;;;;;:::i;:::-;;:::i;2740:120:69:-;;;;;;;;;;-1:-1:-1;2740:120:69;;;;;:::i;:::-;2808:7;2834:19;;;:13;:19;;;;;;;2740:120;3255:271;;;;;;;;;;-1:-1:-1;3255:271:69;;;;;:::i;:::-;;:::i;4466:217::-;;;;;;;;;;-1:-1:-1;4466:217:69;;;;;:::i;:::-;;:::i;2928:78:91:-;;;;;;;;;;;;;:::i;1074:29::-;;;;;;;;;;-1:-1:-1;1074:29:91;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;918:134:209:-;;;;;;;;;;-1:-1:-1;918:134:209;;;;;:::i;:::-;;:::i;3284:446:91:-;;;;;;;;;;-1:-1:-1;3284:446:91;;;;;:::i;:::-;;:::i;2304:590:370:-;;;;;;;;;;-1:-1:-1;2304:590:370;;;;;:::i;:::-;;:::i;685:27:91:-;;;;;;;;;;-1:-1:-1;685:27:91;;;;-1:-1:-1;;;;;685:27:91;;;1643:633:70;;;;;;;;;;-1:-1:-1;1643:633:70;;;;;:::i;:::-;;:::i;1316:41:91:-;;;;;;;;;;-1:-1:-1;1316:41:91;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1316:41:91;;;;-1:-1:-1;;;1316:41:91;;;;;;-1:-1:-1;;;1316:41:91;;;-1:-1:-1;;;;;1316:41:91;;;;;;;;-1:-1:-1;;;;;7264:15:644;;;7246:34;;7316:15;;;;7311:2;7296:18;;7289:43;-1:-1:-1;;;;;7368:32:644;;;7348:18;;;7341:60;;;;7432:2;7417:18;;7410:34;7196:3;7181:19;1316:41:91;6982:468:644;1324:131:69;;;;;;;;;;-1:-1:-1;1324:131:69;;;;;:::i;:::-;;:::i;1003:188:54:-;;;;;;;;;;-1:-1:-1;1003:188:54;;;;;:::i;:::-;;:::i;4893:116:370:-;;;;;;;;;;-1:-1:-1;4984:18:370;;4893:116;;1425:48:91;;;;;;;;;;-1:-1:-1;1425:48:91;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;1425:48:91;;;978:30;;;;;;;;;;-1:-1:-1;978:30:91;;;;;:::i;:::-;;:::i;2592:107::-;;;;;;;;;;-1:-1:-1;2592:107:91;;;;;:::i;:::-;;:::i;3109:103:370:-;;;;;;;;;;-1:-1:-1;3109:103:370;;1805:1;7924:36:644;;7912:2;7897:18;3109:103:370;7782:184:644;742:49:69;;;;;;;;;;-1:-1:-1;742:49:69;787:4;742:49;;2206:211;;;;;;;;;;-1:-1:-1;2206:211:69;;;;;:::i;:::-;;:::i;632:301:466:-;;;;;;;;;;-1:-1:-1;632:301:466;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4835:933:91:-;;;;;;;;;;-1:-1:-1;4835:933:91;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;2683:398:70:-;;;;;;;;;;-1:-1:-1;2683:398:70;;;;;:::i;:::-;;:::i;2954:99:370:-;;;;;;;;;;-1:-1:-1;;;;2954:99:370;;4270:547;;;;;;;;;;-1:-1:-1;4270:547:370;;;;;:::i;:::-;;:::i;3897:171:69:-;;;;;;;;;;-1:-1:-1;3897:171:69;;;;;:::i;:::-;;:::i;5774:139:91:-;;;;;;;;;;;;;:::i;565:34:54:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;1995:26:370:-;;;;;;;;;;-1:-1:-1;1995:26:370;;;;-1:-1:-1;;;;;1995:26:370;;;1177:41:91;;;;;;;;;;-1:-1:-1;1177:41:91;;;;;:::i;:::-;;;;;;;;;;;;;;;;5458:206:370;5535:4;-1:-1:-1;;;;;;5558:59:370;;-1:-1:-1;;;5558:59:370;;:99;;-1:-1:-1;;;;;;;;;;1168:51:471;;;5621:36:370;5551:106;5458:206;-1:-1:-1;;5458:206:370:o;5919:179:91:-;5973:27;6034:17;:38;6070:1;6052:15;;;;;;;;;-1:-1:-1;;;;;6052:15:91;:19;;;;:::i;:::-;-1:-1:-1;;;;;6034:38:91;;;;;;;;;;;;:57;;;6012:79;;5919:179;:::o;2279:101::-;1815:1:438;2569:7;;:19;;2561:63;;;;-1:-1:-1;;;2561:63:438;;;;;;;:::i;:::-;1815:1;2699:7;:18;2356:17:91::1;2363:9:::0;;2356:6:::1;:17::i;:::-;-1:-1:-1::0;;1772:1:438;2872:7;:22;2279:101:91:o;5199:253:370:-;5364:9;;5338:6;;-1:-1:-1;;;5364:9:370;;;;5377:1;5364:14;5356:42;;;;-1:-1:-1;;;5356:42:370;;11616:2:644;5356:42:370;;;11598:21:644;11655:2;11635:18;;;11628:30;-1:-1:-1;;;11674:18:644;;;11667:45;11729:18;;5356:42:370;11414:339:644;5356:42:370;-1:-1:-1;;;;5199:253:370;;;;;;;:::o;3458:752::-;1815:1:438;2569:7;;:19;;2561:63;;;;-1:-1:-1;;;2561:63:438;;;;;;;:::i;:::-;1815:1;2699:7;:18;3552:41:370::1;787:4:69;3580:12:370;:10;:12::i;3552:41::-;3544:68;;;;-1:-1:-1::0;;;3544:68:370::1;;;;;;;:::i;:::-;3646:11;::::0;3623:20:::1;::::0;-1:-1:-1;;;;;3646:11:370::1;408:42:284;3646:47:370;:82;;3717:11;::::0;-1:-1:-1;;;;;3717:11:370::1;3646:82;;;3696:18;3646:82;3623:105;;3739:21;3770:12;-1:-1:-1::0;;;;;3763:30:370::1;;3802:4;3763:45;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3879:11;::::0;3739:69;;-1:-1:-1;3818:188:370::1;::::0;-1:-1:-1;;;;;3879:11:370::1;3904:12;:10;:12::i;:::-;3938:4;3957:7;3978:18;3818:47;:188::i;:::-;4016:20;4087:13;4046:12;-1:-1:-1::0;;;;;4039:30:370::1;;4078:4;4039:45;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:61;;;;:::i;:::-;4016:84;;4133:12;4111:18;;:34;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;4161:42:370::1;::::0;1004:25:644;;;4161:42:370::1;::::0;992:2:644;977:18;4161:42:370::1;;;;;;;-1:-1:-1::0;;1772:1:438;2872:7;:22;-1:-1:-1;;3458:752:370:o;4030:513:91:-;4122:24;:22;:24::i;:::-;4117:80;;4162:24;;-1:-1:-1;;;4162:24:91;;;;;;;:::i;4117:80::-;4207:33;4243:17;:38;4279:1;4261:15;;;;;;;;;-1:-1:-1;;;;;4261:15:91;:19;;;;:::i;:::-;-1:-1:-1;;;;;4243:38:91;;;;;;;;;;;;;;;-1:-1:-1;4243:38:91;4207:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4299:51:91;;;4291:81;;;;-1:-1:-1;;;4291:81:91;;12755:2:644;4291:81:91;;;12737:21:644;12794:2;12774:18;;;12767:30;-1:-1:-1;;;12813:18:644;;;12806:47;12870:18;;4291:81:91;12553:341:644;4291:81:91;4404:18;;4383:61;;4424:19;4383:20;:61::i;:::-;4486:28;;;;;4460:76;;;13073:25:644;;;13114:18;;;13107:34;;;4460:76:91;;13046:18:644;4460:76:91;;;;;;;;4107:436;4030:513;:::o;3255:271:69:-;3350:19;;;;:13;:19;;;;;;3339:43;;3371:10;3339;:43::i;:::-;3396:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;3396:23:69;;;;;;;;;;;;3392:93;;;3435:39;;-1:-1:-1;;;3435:39:69;;13354:2:644;3435:39:69;;;13336:21:644;13393:2;13373:18;;;13366:30;13432:31;13412:18;;;13405:59;13481:18;;3435:39:69;13152:353:644;3392:93:69;3494:25;3505:4;3511:7;3494:10;:25::i;:::-;3255:271;;:::o;4466:217::-;4557:10;-1:-1:-1;;;;;4557:21:69;;;4553:88;;4594:36;;-1:-1:-1;;;4594:36:69;;13712:2:644;4594:36:69;;;13694:21:644;13751:2;13731:18;;;13724:30;-1:-1:-1;;;13770:18:644;;;13763:56;13836:18;;4594:36:69;13510:350:644;4553:88:69;4650:26;4662:4;4668:7;4650:11;:26::i;2928:78:91:-;1815:1:438;2569:7;;:19;;2561:63;;;;-1:-1:-1;;;2561:63:438;;;;;;;:::i;:::-;1815:1;2699:7;:18;2984:15:91::1;:13;:15::i;:::-;1772:1:438::0;2872:7;:22;2928:78:91:o;1074:29::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1074:29:91;;-1:-1:-1;1074:29:91;:::o;918:134:209:-;-1:-1:-1;;;;;1017:28:209;994:4;1017:28;;;:17;:28;;;;;;;;;918:134::o;3284:446:91:-;3356:24;:22;:24::i;:::-;3351:80;;3396:24;;-1:-1:-1;;;3396:24:91;;;;;;;:::i;3351:80::-;3441:33;3477:17;:38;3513:1;3495:15;;;;;;;;;-1:-1:-1;;;;;3495:15:91;:19;;;;:::i;:::-;-1:-1:-1;;;;;3477:38:91;;;;;;;;;;;;3441:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3546:9;:18;;;3533:9;:31;;3525:64;;;;-1:-1:-1;;;3525:64:91;;14067:2:644;3525:64:91;;;14049:21:644;14106:2;14086:18;;;14079:30;-1:-1:-1;;;14125:18:644;;;14118:50;14185:18;;3525:64:91;13865:344:644;3525:64:91;3600:61;3621:9;3632;:28;;;3600:20;:61::i;:::-;3693:18;;3677:46;;;13073:25:644;;;13129:2;13114:18;;13107:34;;;3677:46:91;;13046:18:644;3677:46:91;12899:248:644;2304:590:370;3111:19:436;3134:13;;;;;;3133:14;;3179:34;;;;-1:-1:-1;3197:12:436;;3212:1;3197:12;;;;:16;3179:34;3178:108;;;;3220:44;3258:4;3220:29;:44::i;:::-;3219:45;:66;;;;-1:-1:-1;3268:12:436;;;;;:17;3219:66;3157:201;;;;-1:-1:-1;;;3157:201:436;;14416:2:644;3157:201:436;;;14398:21:644;14455:2;14435:18;;;14428:30;14494:34;14474:18;;;14467:62;-1:-1:-1;;;14545:18:644;;;14538:44;14599:19;;3157:201:436;14214:410:644;3157:201:436;3368:12;:16;;-1:-1:-1;;3368:16:436;3383:1;3368:16;;;3394:65;;;;3428:13;:20;;-1:-1:-1;;3428:20:436;;;;;3394:65;2598:51:370::1;2630:18;2598:31;:51::i;:::-;2660:11;:26:::0;;-1:-1:-1;;;;;;2660:26:370::1;-1:-1:-1::0;;;;;2660:26:370;::::1;;::::0;;2696:32:::1;2714:13:::0;2696:17:::1;:32::i;:::-;2738:52;2759:9;2770:19;2738:20;:52::i;:::-;2801:31;2819:12;2801:17;:31::i;:::-;2842:45;787:4:69;2873:13:370::0;2842:10:::1;:45::i;:::-;3483:14:436::0;3479:99;;;3529:5;3513:21;;-1:-1:-1;;3513:21:436;;;3553:14;;-1:-1:-1;7924:36:644;;3553:14:436;;7912:2:644;7897:18;3553:14:436;;;;;;;3479:99;3101:483;2304:590:370;;;;;;;:::o;1643:633:70:-;1727:14;1776:17;;;:11;:17;;;;;:23;1727:14;;1833:437;1857:12;1853:1;:16;1833:437;;;1937:1;1897:17;;;:11;:17;;;;;;;;:28;;;:25;;:28;;;;;;-1:-1:-1;;;;;1897:28:70;:42;1893:367;;1972:5;1963;:14;1959:133;;;2010:17;;;;:11;:17;;;;;;;;:28;;;:25;;;;:28;;;;-1:-1:-1;;;;;2010:28:70;;-1:-1:-1;2060:13:70;;-1:-1:-1;;2060:13:70;1959:133;2109:10;2118:1;2109:10;;:::i;:::-;;;1893:367;;;2144:25;2152:4;2166:1;2144:7;:25::i;:::-;:71;;;;-1:-1:-1;2178:17:70;;;;:11;:17;;;;;;;;:37;;;:25;;:37;;;;;;2173:42;;2144:71;2140:120;;;2235:10;2244:1;2235:10;;:::i;:::-;;;2140:120;1871:6;1876:1;1871:6;;:::i;:::-;;;1833:437;;;;1743:533;;1643:633;;;;:::o;1324:131:69:-;1402:4;1425:14;;;:8;:14;;;;;;;;-1:-1:-1;;;;;1425:23:69;;;;;;;;;;;;;;;1324:131::o;1003:188:54:-;1080:20;:18;:20::i;:::-;1075:76;;1116:24;;-1:-1:-1;;;1116:24:54;;;;;;;:::i;1075:76::-;1161:23;1179:4;1161:17;:23::i;:::-;1003:188;:::o;978:30:91:-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;978:30:91;:::o;2592:107::-;1815:1:438;2569:7;;:19;;2561:63;;;;-1:-1:-1;;;2561:63:438;;;;;;;:::i;:::-;1815:1;2699:7;:18;2672:20:91::1;2682:9:::0;;2672::::1;:20::i;2206:211:69:-:0;2285:4;2306:14;;;:8;:14;;;;;;;;:26;;;;;;;;;;;2301:88;;-1:-1:-1;2355:14:69;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;2355:23:69;;;;;;;;;;;;2348:30;;2301:88;-1:-1:-1;2406:4:69;2206:211;;;;:::o;632:301:466:-;700:22;756:4;-1:-1:-1;;;;;744:24:466;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;734:34;;783:9;778:125;798:15;;;778:125;;;847:45;877:4;884;;889:1;884:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;847:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;847:21:466;;-1:-1:-1;;;847:45:466:i;:::-;834:7;842:1;834:10;;;;;;;;:::i;:::-;;;;;;:58;;;;815:3;;;;;:::i;:::-;;;;778:125;;;;632:301;;;;:::o;4835:933:91:-;4937:30;4969:16;5001:31;5035:13;5001:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5058:28;5100:14;:21;-1:-1:-1;;;;;5089:33:91;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5089:33:91;-1:-1:-1;5160:21:91;;5058:64;;-1:-1:-1;5132:25:91;;5230:194;5254:17;5250:1;:21;5230:194;;;5348:7;-1:-1:-1;;;;;5312:43:91;:13;:32;5326:14;5341:1;5326:17;;;;;;;;:::i;:::-;;;;;;;5312:32;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5312:32:91;-1:-1:-1;;;;;5312:43:91;;5292:14;5307:1;5292:17;;;;;;;;:::i;:::-;;;;;;:63;;;;;;;;;;;5373:14;5388:1;5373:17;;;;;;;;:::i;:::-;;;;;;;5369:44;;;5392:21;5412:1;5392:21;;:::i;:::-;;;5369:44;5273:3;;;;:::i;:::-;;;;5230:194;;;;5464:16;-1:-1:-1;;;;;5450:31:91;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5450:31:91;;5434:47;;5491:13;5523:9;5518:196;5542:17;5538:1;:21;5518:196;;;5584:14;5599:1;5584:17;;;;;;;;:::i;:::-;;;;;;;5580:124;;;5644:14;5659:1;5644:17;;;;;;;;:::i;:::-;;;;;;;5621:13;5635:5;5621:20;;;;;;;;:::i;:::-;;;;;;;;;;:40;5679:10;5688:1;5679:10;;:::i;:::-;;;5580:124;5561:3;;;;:::i;:::-;;;;5518:196;;;;5735:26;5753:7;5735:17;:26::i;:::-;5724:37;;4991:777;;;;;4835:933;;;:::o;2683:398:70:-;2757:13;2805:17;;;:11;:17;;;;;:23;2757:13;2839:161;2863:12;2859:1;:16;2839:161;;;2943:1;2903:17;;;:11;:17;;;;;;;;:28;;;:25;;:28;;;;;;-1:-1:-1;;;;;2903:28:70;:42;2899:91;;2965:10;2974:1;2965:10;;:::i;:::-;;;2899:91;2877:6;2882:1;2877:6;;:::i;:::-;;;2839:161;;;;3013:25;3021:4;3035:1;3013:7;:25::i;:::-;3009:66;;;3054:10;3063:1;3054:10;;:::i;:::-;;;3009:66;2772:309;2683:398;;;:::o;4270:547:370:-;4344:41;787:4:69;4372:12:370;:10;:12::i;4344:41::-;4336:68;;;;-1:-1:-1;;;4336:68:370;;;;;;;:::i;:::-;4505:18;;4495:7;:28;:63;;4551:7;4530:18;;:28;;;;:::i;:::-;4495:63;;;4526:1;4495:63;4474:18;:84;4630:11;;4569:188;;-1:-1:-1;;;;;4630:11:370;4663:4;4682:12;:10;:12::i;:::-;4708:7;4729:18;4569:47;:188::i;:::-;4773:37;;1004:25:644;;;4773:37:370;;992:2:644;977:18;4773:37:370;;;;;;;4270:547;:::o;3897:171:69:-;3993:19;;;;:13;:19;;;;;;3982:43;;4014:10;3982;:43::i;5774:139:91:-;5818:17;5859;:38;5895:1;5877:15;;;;;;;;;-1:-1:-1;;;;;5877:15:91;:19;;;;:::i;:::-;-1:-1:-1;;;;;5859:38:91;;;;;;;;;;;;:47;;;5847:59;;5774:139;:::o;565:34:54:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1186:320:462:-;-1:-1:-1;;;;;1476:19:462;;:23;;;1186:320::o;6349:1125:91:-;6442:9;-1:-1:-1;;;;;6477:8:91;;6469:37;;;;-1:-1:-1;;;6469:37:91;;16213:2:644;6469:37:91;;;16195:21:644;16252:2;16232:18;;;16225:30;-1:-1:-1;;;16271:18:644;;;16264:46;16327:18;;6469:37:91;16011:340:644;6469:37:91;6541:12;;-1:-1:-1;;;;;6541:12:91;6517:21;6568:7;6517:21;6576:17;:15;:17::i;:::-;-1:-1:-1;;;;;6568:26:91;;;;;;;;;;;;-1:-1:-1;6568:26:91;:39;-1:-1:-1;;;;;6568:39:91;:43;6564:362;;;6627:51;6660:17;:15;:17::i;:::-;6627:32;:51::i;:::-;6564:362;;;6709:12;6727:17;:15;:17::i;:::-;6709:36;;;;;;;-1:-1:-1;6709:36:91;;;;;;;;;-1:-1:-1;;;;;;6709:36:91;-1:-1:-1;;;;;6709:36:91;;;;;;;;;;6813:15;;6759:7;;6767:17;:15;:17::i;:::-;-1:-1:-1;;;;;6759:26:91;;;;;;;;;;;;-1:-1:-1;6759:26:91;:70;;-1:-1:-1;;;;;6759:70:91;;;-1:-1:-1;;;6759:70:91;;;;;;;;;6896:15;;:19;;-1:-1:-1;;;;;;;;;;6896:15:91;;;;:19;:::i;:::-;6843:7;:26;6851:17;:15;:17::i;:::-;-1:-1:-1;;;;;6843:26:91;;;;;;;;;;;;-1:-1:-1;6843:26:91;:72;;-1:-1:-1;;;;;6843:72:91;;;;-1:-1:-1;;;6843:72:91;-1:-1:-1;;;;;;;;6843:72:91;;;;;;;;;6564:362;6940:9;6935:419;6959:3;-1:-1:-1;;;;;6955:7:91;:1;:7;6935:419;;;6983:9;:13;;-1:-1:-1;;;;6983:13:91;-1:-1:-1;;;6983:13:91;;;-1:-1:-1;;;;;7010:39:91;;;7050:17;:15;:17::i;:::-;7077:4;7084:9;;7094:1;7084:12;;;;;;;:::i;:::-;;;;;;;7010:87;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7111:9:91;:13;;-1:-1:-1;;;;7111:13:91;-1:-1:-1;;;7111:13:91;;;-1:-1:-1;7169:17:91;;-1:-1:-1;7169:15:91;:17::i;:::-;7139:13;:27;7153:9;;7163:1;7153:12;;;;;;;:::i;:::-;;;;;;;7139:27;;;;;;;;;;;;:47;;;;;-1:-1:-1;;;;;7139:47:91;;;;;-1:-1:-1;;;;;7139:47:91;;;;;;7206:9;:23;7216:9;;7226:1;7216:12;;;;;;;:::i;:::-;;;;;;;;;;7206:23;;-1:-1:-1;7206:23:91;;;;;;;;-1:-1:-1;7206:23:91;;;;7201:143;;7275:4;7249:9;:23;7259:9;;7269:1;7259:12;;;;;;;:::i;:::-;;;;;;;7249:23;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;7297:13;7316:9;;7326:1;7316:12;;;;;;;:::i;:::-;7297:32;;;;;;;-1:-1:-1;7297:32:91;;;7316:12;7297:32;;;;7316:12;;;;;;;;;7297:32;;;;;-1:-1:-1;7201:143:91;6964:3;;;:::i;:::-;;;6935:419;;;;7406:3;7363:7;:26;7371:17;:15;:17::i;:::-;-1:-1:-1;;;;;7363:26:91;;;;;;;;;;;;-1:-1:-1;7363:26:91;;;:46;;:26;;-1:-1:-1;7363:46:91;;;;-1:-1:-1;;;;;7363:46:91;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;7363:46:91;;;;;-1:-1:-1;;;;;7363:46:91;;;;;;7457:9;;7425:42;;;;;;;:::i;:::-;;;;;;;;7438:17;:15;:17::i;:::-;-1:-1:-1;;;;;7425:42:91;;;;;;;;;;;6412:1062;;6349:1125;;:::o;7269:140:370:-;7331:14;7364:38;:36;:38::i;:::-;7357:45;;7269:140;:::o;979:1021:284:-;1178:12;1174:49;;1206:7;;1174:49;-1:-1:-1;;;;;1237:25:284;;408:42;1237:25;1233:761;;;-1:-1:-1;;;;;1282:22:284;;1299:4;1282:22;1278:626;;;1412:44;;-1:-1:-1;;;1412:44:284;;;;;1004:25:644;;;-1:-1:-1;;;;;1412:35:284;;;;;977:18:644;;1412:44:284;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1474:69;1509:3;1514:7;1523:19;1474:34;:69::i;:::-;1233:761;;1278:626;-1:-1:-1;;;;;1568:20:284;;1583:4;1568:20;1564:340;;;1676:9;1665:7;:20;1657:52;;;;-1:-1:-1;;;1657:52:284;;17584:2:644;1657:52:284;;;17566:21:644;17623:2;17603:18;;;17596:30;-1:-1:-1;;;17642:18:644;;;17635:49;17701:18;;1657:52:284;17382:343:644;1657:52:284;1733:19;-1:-1:-1;;;;;1727:34:284;;1770:7;1727:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1233:761;;1564:340;1820:69;1855:3;1860:7;1869:19;1820:34;:69::i;1233:761::-;1934:49;1952:9;1963:5;1970:3;1975:7;1934:17;:49::i;:::-;979:1021;;;;;:::o;6598:137:370:-;6664:4;6687:41;6664:4;6715:12;:10;:12::i;10237:589:91:-;10350:14;10342:47;;;;-1:-1:-1;;;10342:47:91;;17932:2:644;10342:47:91;;;17914:21:644;17971:2;17951:18;;;17944:30;-1:-1:-1;;;17990:18:644;;;17983:50;18050:18;;10342:47:91;17730:344:644;10342:47:91;10421:15;;;-1:-1:-1;;;10421:15:91;;-1:-1:-1;;;;;10421:15:91;;10465:1;;10421:15;10446:20;10465:1;10421:15;10446:20;:::i;:::-;;;-1:-1:-1;;;;;10446:20:91;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10510:188:91;;;;;;;;;;;;;;;;;;10643:15;10510:188;;;;;;-1:-1:-1;10510:188:91;;;;;;10477:30;;;:17;:30;;;;;;;:221;;;;;-1:-1:-1;10477:221:91;;;;;;;;;;;;;;;;10713:15;;10709:111;;10794:15;10744:17;:34;10762:15;10776:1;10762:11;:15;:::i;:::-;10744:34;;;;;;;;;;;-1:-1:-1;10744:34:91;:47;;:65;10709:111;10332:494;10237:589;;:::o;5557:495:69:-;5645:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;5645:23:69;;;;;;;;;;;;5640:406;;5827:43;5857:7;-1:-1:-1;;;;;5827:43:69;5867:2;5827:21;:43::i;:::-;5941:40;5971:4;5978:2;5941:21;:40::i;:::-;5736:267;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;5736:267:69;;;;;;;;;;-1:-1:-1;;;5684:351:69;;;;;;;:::i;3475:152:70:-;3554:31;3571:4;3577:7;3554:16;:31::i;:::-;3595:25;3606:4;3612:7;3595:10;:25::i;3205:157::-;3285:32;3303:4;3309:7;3285:17;:32::i;:::-;4084:11;4098:17;;;:11;:17;;;;;;;;-1:-1:-1;;;;;4098:34:70;;;;;:25;;;:34;;;;;;;;4150:30;;:25;;;;:30;;;;;4143:37;;-1:-1:-1;;;;;;4143:37:70;;;4197:34;;;;4190:41;3255:271:69;;:::o;8862:534:91:-;8914:15;8978:36;8996:17;:15;:17::i;:::-;8978;:36::i;:::-;8932:7;:26;8940:17;:15;:17::i;:::-;-1:-1:-1;;;;;8932:26:91;-1:-1:-1;;;;;8932:26:91;;;;;;;;;;;;:43;;;:82;;;;:::i;:::-;8914:100;-1:-1:-1;9033:12:91;9025:35;;;;-1:-1:-1;;;9025:35:91;;19070:2:644;9025:35:91;;;19052:21:644;19109:2;19089:18;;;19082:30;-1:-1:-1;;;19128:18:644;;;19121:40;19178:18;;9025:35:91;18868:334:644;9025:35:91;9125:15;9071:7;:26;9079:17;:15;:17::i;:::-;-1:-1:-1;;;;;9071:26:91;;;;;;;;;;;;-1:-1:-1;9071:26:91;;;:70;;-1:-1:-1;;;;;9071:70:91;;;-1:-1:-1;;;9071:70:91;;;;;;;;;;9151:7;-1:-1:-1;9159:17:91;:15;:17::i;:::-;-1:-1:-1;;;;;9151:26:91;;;;;;;;;;;;-1:-1:-1;9151:26:91;:43;;;;:47;;;;9261:15;;:19;;9151:43;-1:-1:-1;;;9261:15:91;;-1:-1:-1;;;;;9261:15:91;:19;:::i;:::-;9208:7;:26;9216:17;:15;:17::i;:::-;-1:-1:-1;;;;;9208:26:91;;;;;;;;;;;;-1:-1:-1;9208:26:91;:72;;-1:-1:-1;;;;;9208:72:91;;;;-1:-1:-1;;;9208:72:91;-1:-1:-1;;;;;;;;9208:72:91;;;;;;;;;9291:40;9304:17;:15;:17::i;:::-;9323:7;9291:12;:40::i;:::-;9362:17;:15;:17::i;:::-;-1:-1:-1;;;;;9347:42:91;;9381:7;9347:42;;;;1004:25:644;;992:2;977:18;;858:177;9347:42:91;;;;;;;;8904:492;8862:534::o;670:242:209:-;4910:13:436;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:436;;;;;;;:::i;:::-;787:9:209::1;782:124;806:16;:23;802:1;:27;782:124;;;891:4;850:17;:38;868:16;885:1;868:19;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;-1:-1:-1;;;;;850:38:209::1;::::0;;;::::1;::::0;;;;;;-1:-1:-1;850:38:209;:45;;-1:-1:-1;;850:45:209::1;::::0;::::1;;::::0;;;::::1;::::0;;831:3;::::1;::::0;::::1;:::i;:::-;;;;782:124;;1651:235:91::0;4910:13:436;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:436;;;;;;;:::i;:::-;1737:24:91::1;:22;:24::i;:::-;-1:-1:-1::0;;;;;1780:36:91;::::1;1772:69;;;::::0;-1:-1:-1;;;1772:69:91;;19821:2:644;1772:69:91::1;::::0;::::1;19803:21:644::0;19860:2;19840:18;;;19833:30;-1:-1:-1;;;19879:18:644;;;19872:50;19939:18;;1772:69:91::1;19619:344:644::0;1772:69:91::1;1851:12;:28:::0;;-1:-1:-1;;;;;;1851:28:91::1;-1:-1:-1::0;;;;;1851:28:91;;;::::1;::::0;;;::::1;::::0;;1651:235::o;1273:185:54:-;1339:21;1363:11;1339:35;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1384:18:54;;1339:35;;-1:-1:-1;1384:18:54;;:11;;-1:-1:-1;1384:18:54;;;;-1:-1:-1;1384:18:54;-1:-1:-1;1384:18:54;:::i;:::-;;1418:33;1437:7;1446:4;1418:33;;;;;;;:::i;7539:1246:91:-;7615:21;7639:7;:26;7647:17;:15;:17::i;:::-;-1:-1:-1;;;;;7639:26:91;;;;;;;;;;;;-1:-1:-1;7639:26:91;:39;-1:-1:-1;;;;;7639:39:91;;;;-1:-1:-1;7708:9:91;;7743:8;;7735:41;;;;-1:-1:-1;;;7735:41:91;;20556:2:644;7735:41:91;;;20538:21:644;20595:2;20575:18;;;20568:30;-1:-1:-1;;;20614:18:644;;;20607:50;20674:18;;7735:41:91;20354:344:644;7735:41:91;7811:3;-1:-1:-1;;;;;7794:20:91;:13;:20;;7786:61;;;;-1:-1:-1;;;7786:61:91;;20905:2:644;7786:61:91;;;20887:21:644;20944:2;20924:18;;;20917:30;-1:-1:-1;;;20963:18:644;;;20956:58;21031:18;;7786:61:91;20703:352:644;7786:61:91;7882:12;;-1:-1:-1;;;;;7882:12:91;7905:51;7938:17;:15;:17::i;7905:51::-;7988:3;-1:-1:-1;;;;;7971:20:91;:13;:20;7967:400;;;8007:30;8040:12;8007:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8007:45:91;;;;;;;;;;;;;;;;;;;;;;;8071:9;8066:291;8090:13;:20;8086:1;:24;8066:291;;;8159:17;:15;:17::i;:::-;-1:-1:-1;;;;;8139:37:91;:13;8153:1;8139:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;8139:37:91;;8135:208;;;8218:13;8255:1;8232:13;:20;:24;;;;:::i;:::-;8218:39;;;;;;;;:::i;:::-;;;;;;;8200:12;8213:1;8200:15;;;;;;;;:::i;:::-;;;;;;;;;:57;;;;;-1:-1:-1;;;;;8200:57:91;;;;;-1:-1:-1;;;;;8200:57:91;;;;;;8279:12;:18;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;8279:18:91;;;;;-1:-1:-1;;;;;;8279:18:91;;;;;;8319:5;;8135:208;8112:3;;;:::i;:::-;;;8066:291;;;;7993:374;7967:400;8419:3;8376:7;:26;8384:17;:15;:17::i;:::-;-1:-1:-1;;;;;8376:26:91;;;;;;;;;;;;-1:-1:-1;8376:26:91;;;:46;;:26;;-1:-1:-1;8376:46:91;;;;-1:-1:-1;;;;;8376:46:91;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;8376:46:91;;;;;-1:-1:-1;;;;;8376:46:91;;;;;;8438:9;8433:285;8457:3;-1:-1:-1;;;;;8453:7:91;:1;:7;8433:285;;;8520:17;:15;:17::i;:::-;-1:-1:-1;;;;;8489:48:91;:13;:27;8503:9;;8513:1;8503:12;;;;;;;:::i;:::-;;;;;;;;;;8489:27;;-1:-1:-1;8489:27:91;;;;;;;;-1:-1:-1;8489:27:91;;-1:-1:-1;;;;;8489:27:91;:48;8481:71;;;;-1:-1:-1;;;8481:71:91;;21394:2:644;8481:71:91;;;21376:21:644;21433:2;21413:18;;;21406:30;-1:-1:-1;;;21452:18:644;;;21445:40;21502:18;;8481:71:91;21192:334:644;8481:71:91;8604:1;8566:13;:27;8580:9;;8590:1;8580:12;;;;;;;:::i;:::-;;;;;;;;;;8566:27;;-1:-1:-1;8566:27:91;;;;;;;;-1:-1:-1;8566:27:91;:40;;-1:-1:-1;;;;;;8566:40:91;-1:-1:-1;;;;;8566:40:91;;;;;;8620:39;;;8668:4;8675:17;:15;:17::i;:::-;8694:9;;8704:1;8694:12;;;;;;;:::i;:::-;;;;;;;8620:87;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8462:3;;;;:::i;:::-;;;8433:285;;;;8768:9;;8733:45;;;;;;;:::i;:::-;;;;;;;;8749:17;:15;:17::i;:::-;-1:-1:-1;;;;;8733:45:91;;;;;;;;;;;7605:1180;;;7539:1246;;:::o;1119:455:466:-;1202:12;1234:37;1264:6;1234:29;:37::i;:::-;1226:88;;;;-1:-1:-1;;;1226:88:466;;21733:2:644;1226:88:466;;;21715:21:644;21772:2;21752:18;;;21745:30;21811:34;21791:18;;;21784:62;-1:-1:-1;;;21862:18:644;;;21855:36;21908:19;;1226:88:466;21531:402:644;1226:88:466;1385:12;1399:23;1426:6;-1:-1:-1;;;;;1426:19:466;1446:4;1426:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1384:67;;;;1468:99;1504:7;1513:10;1468:99;;;;;;;;;;;;;;;;;:35;:99::i;:::-;1461:106;1119:455;-1:-1:-1;;;;;1119:455:466:o;9450:312:91:-;-1:-1:-1;;;;;9555:14:91;;9523:16;9555:14;;;:7;:14;;;;;:27;-1:-1:-1;;;;;9555:27:91;9551:205;;-1:-1:-1;;;;;;9614:14:91;;;;;:7;:14;;;;;:31;;;;9450:312::o;9551:205::-;9721:24;9739:5;9721:17;:24::i;:::-;-1:-1:-1;;;;;9687:14:91;;;;;;:7;:14;;;;;:31;;;:58;;;;:::i;9551:205::-;9450:312;;;:::o;7151:112:370:-;7218:7;7244:12;:10;:12::i;9861:333:91:-;9947:15;9965:26;9983:7;9965:17;:26::i;:::-;-1:-1:-1;;;;;10001:16:91;;;;;;:7;:16;;;;;:33;;:44;;9947;;-1:-1:-1;9947:44:91;;10001:33;;:16;:44;;9947;;10001;:::i;:::-;;;;-1:-1:-1;;;;;;;10055:16:91;;;;;;:7;:16;;;;;:60;;-1:-1:-1;;;;;10099:15:91;10055:60;;-1:-1:-1;;;10055:60:91;;;;;;10168:15;;:19;;-1:-1:-1;;;;;;;;;;10168:15:91;;;;:19;:::i;:::-;-1:-1:-1;;;;;10125:16:91;;;;;;;:7;:16;;;;;:62;;-1:-1:-1;;;;;10125:62:91;;;;-1:-1:-1;;;10125:62:91;-1:-1:-1;;;;;;;;10125:62:91;;;;;;;;;;-1:-1:-1;9861:333:91:o;1058:401:209:-;1120:14;1150:30;1169:10;1150:18;:30::i;:::-;1146:307;;;-1:-1:-1;;;1352:14:209;1348:23;1335:37;1331:2;1327:46;1058:401;:::o;1146:307::-;-1:-1:-1;929:10:464;;7269:140:370:o;2916:469:284:-;3168:12;3186:2;-1:-1:-1;;;;;3186:7:284;3202:5;3186:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3167:46;;;3228:7;3223:156;;3257:19;-1:-1:-1;;;;;3251:34:284;;3294:5;3251:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3317:51:284;;-1:-1:-1;;;;;;;;3317:40:284;;;-1:-1:-1;3358:2:284;3362:5;3317:40;:51::i;:::-;3055:330;2916:469;;;:::o;2073:396::-;2234:3;-1:-1:-1;;;;;2225:12:284;:5;-1:-1:-1;;;;;2225:12:284;;2221:49;;;2253:7;;2221:49;-1:-1:-1;;;;;2284:22:284;;2301:4;2284:22;2280:183;;;2322:44;-1:-1:-1;;;;;2322:30:284;;2353:3;2358:7;2322:30;:44::i;:::-;2280:183;;;2397:55;-1:-1:-1;;;;;2397:34:284;;2432:5;2439:3;2444:7;2397:34;:55::i;1565:441:292:-;1640:13;1665:19;1697:10;1701:6;1697:1;:10;:::i;:::-;:14;;1710:1;1697:14;:::i;:::-;-1:-1:-1;;;;;1687:25:292;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1687:25:292;;1665:47;;-1:-1:-1;;;1722:6:292;1729:1;1722:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1722:15:292;;;;;;;;;-1:-1:-1;;;1747:6:292;1754:1;1747:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1747:15:292;;;;;;;;-1:-1:-1;1777:9:292;1789:10;1793:6;1789:1;:10;:::i;:::-;:14;;1802:1;1789:14;:::i;:::-;1777:26;;1772:132;1809:1;1805;:5;1772:132;;;-1:-1:-1;;;1856:5:292;1864:3;1856:11;1843:25;;;;;;;:::i;:::-;;;;1831:6;1838:1;1831:9;;;;;;;;:::i;:::-;;;;:37;-1:-1:-1;;;;;1831:37:292;;;;;;;;-1:-1:-1;1892:1:292;1882:11;;;;;1812:3;;;:::i;:::-;;;1772:132;;;-1:-1:-1;1921:10:292;;1913:55;;;;-1:-1:-1;;;1913:55:292;;22943:2:644;1913:55:292;;;22925:21:644;;;22962:18;;;22955:30;23021:34;23001:18;;;22994:62;23073:18;;1913:55:292;22741:356:644;1913:55:292;1992:6;1565:441;-1:-1:-1;;;1565:441:292:o;5036:168:69:-;5114:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;5114:23:69;;;;;;;;;;:30;;-1:-1:-1;;5114:30:69;5140:4;5114:30;;;5159:38;5186:10;;5123:4;;5159:38;;5114:14;5159:38;5036:168;;:::o;3690:253:70:-;3760:11;3774:17;;;:11;:17;;;;;:23;;;3834:1;;3774:17;3807:28;3834:1;3774:23;3807:28;:::i;:::-;;;;-1:-1:-1;;3846:17:70;;;;:11;:17;;;;;;;;:30;;;:25;;;:30;;;;;:40;;-1:-1:-1;;;;;3846:40:70;;;-1:-1:-1;;;;;;3846:40:70;;;;;;;3896:34;;;:25;;;;:34;;;;:40;3690:253::o;5253:204:69:-;5332:25;5343:4;5349:7;5332:10;:25::i;:::-;5374:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;5374:23:69;;;;;;;;;;5367:30;;-1:-1:-1;;5367:30:69;;;5412:38;5439:10;;5383:4;;5412:38;;5374:14;5412:38;5253:204;;:::o;10877:1047:91:-;-1:-1:-1;;;;;11003:16:91;;10952;11003;;;:7;:16;;;;;;;;10980:39;;;;;;;;;-1:-1:-1;;;;;10980:39:91;;;;;-1:-1:-1;;;10980:39:91;;;;;;;;;;-1:-1:-1;;;10980:39:91;;;-1:-1:-1;;;;;10980:39:91;;;;;;;;;;;;;;;;;11126:15;;10980:39;;;-1:-1:-1;;;11126:15:91;;;;10980:39;11152:766;11193:16;11189:1;:20;11152:766;;;11233:33;11269:20;;;:17;:20;;;;;;;;11233:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11324:23;;;;:76;;11377:6;:23;;;-1:-1:-1;;;;;11324:76:91;;;;11350:9;:24;;;11324:76;11304:96;;11414:15;11432:9;:22;;;11458:1;11432:27;;:70;;11487:15;11432:70;;;11462:9;:22;;;11432:70;11414:88;;11518:22;11542;11568:136;11625:6;:19;;;-1:-1:-1;;;;;11601:43:91;11612:9;11602:7;:19;;;;:::i;:::-;11601:43;;;;:::i;:::-;11662:9;:28;;;11568:15;:136::i;:::-;11517:187;;;;11719:18;11739;11761:62;11777:8;11804:9;:18;;;11787:14;:35;;;;:::i;:::-;11761:15;:62::i;:::-;11718:105;;;;11849:17;:34;;;;;11870:13;11849:34;:58;;11899:8;11849:58;;;11886:10;11849:58;11838:69;;11219:699;;;;;;;11216:1;11211:6;;;;;:::i;:::-;;;11152:766;;;;10970:954;;;10877:1047;;;:::o;5915:393:370:-;6020:18;;6008:8;:30;;6000:67;;;;-1:-1:-1;;;6000:67:370;;23658:2:644;6000:67:370;;;23640:21:644;23697:2;23677:18;;;23670:30;-1:-1:-1;;;23716:18:644;;;23709:54;23780:18;;6000:67:370;23456:348:644;6000:67:370;6099:8;6077:18;;:30;;;;;;;:::i;:::-;;;;-1:-1:-1;;6178:11:370;;6117:184;;-1:-1:-1;;;;;6178:11:370;6211:4;6230:7;6251:8;6273:18;6117:47;:184::i;1853:111:438:-;4910:13:436;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:436;;;;;;;:::i;:::-;1923:34:438::1;:32;:34::i;:::-;1853:111::o:0;6622:742:462:-;6768:12;6796:7;6792:566;;;-1:-1:-1;6826:10:462;6819:17;;6792:566;6937:17;;:21;6933:415;;7181:10;7175:17;7241:15;7228:10;7224:2;7220:19;7213:44;6933:415;7320:12;7313:20;;-1:-1:-1;;;7313:20:462;;;;;;;;:::i;735:205:226:-;874:58;;-1:-1:-1;;;;;24001:32:644;;874:58:226;;;23983:51:644;24050:18;;;24043:34;;;847:86:226;;867:5;;-1:-1:-1;;;897:23:226;23956:18:644;;874:58:226;;;;-1:-1:-1;;874:58:226;;;;;;;;;;;;;;-1:-1:-1;;;;;874:58:226;-1:-1:-1;;;;;;874:58:226;;;;;;;;;;847:19;:86::i;946:241::-;1084:96;1104:5;1134:27;;;1163:4;1169:2;1173:5;1111:68;;;;;;;;;;:::i;1339:493:241:-;1400:4;;1683:6;1679:28;;-1:-1:-1;1699:4:241;;-1:-1:-1;1705:1:241;1691:16;;1679:28;1733:5;;;1737:1;1733;:5;:1;1756:5;;;;:::i;:::-;;:10;1752:33;;1776:5;1783:1;1768:17;;;;;;;1752:33;1807:4;;-1:-1:-1;1813:1:241;-1:-1:-1;1339:493:241;;;;;;:::o;641:216::-;702:4;;763:5;;;786;;;782:28;;;801:5;808:1;793:17;;;;;;;1970:109:438;4910:13:436;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:436;;;;;;;:::i;3241:706:226:-;3660:23;3686:69;3714:4;3686:69;;;;;;;;;;;;;;;;;3694:5;-1:-1:-1;;;;;3686:27:226;;;:69;;;;;:::i;:::-;3769:17;;3660:95;;-1:-1:-1;3769:21:226;3765:176;;3864:10;3853:30;;;;;;;;;;;;:::i;:::-;3845:85;;;;-1:-1:-1;;;3845:85:226;;24572:2:644;3845:85:226;;;24554:21:644;24611:2;24591:18;;;24584:30;24650:34;24630:18;;;24623:62;-1:-1:-1;;;24701:18:644;;;24694:40;24751:19;;3845:85:226;24370:406:644;3827:223:288;3960:12;3991:52;4013:6;4021:4;4027:1;4030:12;3991:21;:52::i;:::-;3984:59;3827:223;-1:-1:-1;;;;3827:223:288:o;4914:501::-;5079:12;5136:5;5111:21;:30;;5103:81;;;;-1:-1:-1;;;5103:81:288;;24983:2:644;5103:81:288;;;24965:21:644;25022:2;25002:18;;;24995:30;25061:34;25041:18;;;25034:62;-1:-1:-1;;;25112:18:644;;;25105:36;25158:19;;5103:81:288;24781:402:644;5103:81:288;5202:18;5213:6;5202:10;:18::i;:::-;5194:60;;;;-1:-1:-1;;;5194:60:288;;25390:2:644;5194:60:288;;;25372:21:644;25429:2;25409:18;;;25402:30;25468:31;25448:18;;;25441:59;25517:18;;5194:60:288;25188:353:644;5194:60:288;5266:12;5280:23;5307:6;-1:-1:-1;;;;;5307:11:288;5327:5;5335:4;5307:33;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5265:75;;;;5357:51;5374:7;5383:10;5395:12;5357:16;:51::i;:::-;5350:58;4914:501;-1:-1:-1;;;;;;;4914:501:288:o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;375:286:644;433:6;486:2;474:9;465:7;461:23;457:32;454:52;;;502:1;499;492:12;454:52;528:23;;-1:-1:-1;;;;;;580:32:644;;570:43;;560:71;;627:1;624;617:12;1040:367;1103:8;1113:6;1167:3;1160:4;1152:6;1148:17;1144:27;1134:55;;1185:1;1182;1175:12;1134:55;-1:-1:-1;1208:20:644;;-1:-1:-1;;;;;1240:30:644;;1237:50;;;1283:1;1280;1273:12;1237:50;1320:4;1312:6;1308:17;1296:29;;1380:3;1373:4;1363:6;1360:1;1356:14;1348:6;1344:27;1340:38;1337:47;1334:67;;;1397:1;1394;1387:12;1412:437;1498:6;1506;1559:2;1547:9;1538:7;1534:23;1530:32;1527:52;;;1575:1;1572;1565:12;1527:52;1615:9;1602:23;-1:-1:-1;;;;;1640:6:644;1637:30;1634:50;;;1680:1;1677;1670:12;1634:50;1719:70;1781:7;1772:6;1761:9;1757:22;1719:70;:::i;:::-;1808:8;;1693:96;;-1:-1:-1;1412:437:644;-1:-1:-1;;;;1412:437:644:o;1854:173::-;1922:20;;-1:-1:-1;;;;;1971:31:644;;1961:42;;1951:70;;2017:1;2014;2007:12;2032:808;2129:6;2137;2145;2153;2161;2214:3;2202:9;2193:7;2189:23;2185:33;2182:53;;;2231:1;2228;2221:12;2182:53;2254:29;2273:9;2254:29;:::i;:::-;2244:39;;2302:38;2336:2;2325:9;2321:18;2302:38;:::i;:::-;2292:48;;2387:2;2376:9;2372:18;2359:32;2349:42;;2442:2;2431:9;2427:18;2414:32;-1:-1:-1;;;;;2506:2:644;2498:6;2495:14;2492:34;;;2522:1;2519;2512:12;2492:34;2560:6;2549:9;2545:22;2535:32;;2605:7;2598:4;2594:2;2590:13;2586:27;2576:55;;2627:1;2624;2617:12;2576:55;2667:2;2654:16;2693:2;2685:6;2682:14;2679:34;;;2709:1;2706;2699:12;2679:34;2754:7;2749:2;2740:6;2736:2;2732:15;2728:24;2725:37;2722:57;;;2775:1;2772;2765:12;2722:57;2032:808;;;;-1:-1:-1;2032:808:644;;-1:-1:-1;2806:2:644;2798:11;;2828:6;2032:808;-1:-1:-1;;;2032:808:644:o;3052:180::-;3111:6;3164:2;3152:9;3143:7;3139:23;3135:32;3132:52;;;3180:1;3177;3170:12;3132:52;-1:-1:-1;3203:23:644;;3052:180;-1:-1:-1;3052:180:644:o;3604:254::-;3672:6;3680;3733:2;3721:9;3712:7;3708:23;3704:32;3701:52;;;3749:1;3746;3739:12;3701:52;3785:9;3772:23;3762:33;;3814:38;3848:2;3837:9;3833:18;3814:38;:::i;:::-;3804:48;;3604:254;;;;;:::o;3863:203::-;-1:-1:-1;;;;;4027:32:644;;;;4009:51;;3997:2;3982:18;;3863:203::o;4071:186::-;4130:6;4183:2;4171:9;4162:7;4158:23;4154:32;4151:52;;;4199:1;4196;4189:12;4151:52;4222:29;4241:9;4222:29;:::i;4262:127::-;4323:10;4318:3;4314:20;4311:1;4304:31;4354:4;4351:1;4344:15;4378:4;4375:1;4368:15;4394:275;4465:2;4459:9;4530:2;4511:13;;-1:-1:-1;;4507:27:644;4495:40;;-1:-1:-1;;;;;4550:34:644;;4586:22;;;4547:62;4544:88;;;4612:18;;:::i;:::-;4648:2;4641:22;4394:275;;-1:-1:-1;4394:275:644:o;4674:531::-;4717:5;4770:3;4763:4;4755:6;4751:17;4747:27;4737:55;;4788:1;4785;4778:12;4737:55;4824:6;4811:20;-1:-1:-1;;;;;4846:2:644;4843:26;4840:52;;;4872:18;;:::i;:::-;4916:55;4959:2;4940:13;;-1:-1:-1;;4936:27:644;4965:4;4932:38;4916:55;:::i;:::-;4996:2;4987:7;4980:19;5042:3;5035:4;5030:2;5022:6;5018:15;5014:26;5011:35;5008:55;;;5059:1;5056;5049:12;5008:55;5124:2;5117:4;5109:6;5105:17;5098:4;5089:7;5085:18;5072:55;5172:1;5147:16;;;5165:4;5143:27;5136:38;;;;5151:7;4674:531;-1:-1:-1;;;4674:531:644:o;5210:1514::-;5358:6;5366;5374;5382;5390;5398;5406;5459:3;5447:9;5438:7;5434:23;5430:33;5427:53;;;5476:1;5473;5466:12;5427:53;5499:29;5518:9;5499:29;:::i;:::-;5489:39;;5547:2;5600;5589:9;5585:18;5572:32;-1:-1:-1;;;;;5664:2:644;5656:6;5653:14;5650:34;;;5680:1;5677;5670:12;5650:34;5703:50;5745:7;5736:6;5725:9;5721:22;5703:50;:::i;:::-;5693:60;;5806:2;5795:9;5791:18;5778:32;5762:48;;5835:2;5825:8;5822:16;5819:36;;;5851:1;5848;5841:12;5819:36;5889:8;5878:9;5874:24;5864:34;;5936:7;5929:4;5925:2;5921:13;5917:27;5907:55;;5958:1;5955;5948:12;5907:55;5994:2;5981:16;6016:2;6012;6009:10;6006:36;;;6022:18;;:::i;:::-;6068:2;6065:1;6061:10;6051:20;;6091:28;6115:2;6111;6107:11;6091:28;:::i;:::-;6153:15;;;6223:11;;;6219:20;;;6184:12;;;;6251:19;;;6248:39;;;6283:1;6280;6273:12;6248:39;6307:11;;;;6327:148;6343:6;6338:3;6335:15;6327:148;;;6409:23;6428:3;6409:23;:::i;:::-;6397:36;;6360:12;;;;6453;;;;6327:148;;;6494:5;6484:15;;;;;;;;6518:38;6552:2;6541:9;6537:18;6518:38;:::i;:::-;6508:48;;6575:39;6609:3;6598:9;6594:19;6575:39;:::i;:::-;6565:49;;6661:3;6650:9;6646:19;6633:33;6623:43;;6713:3;6702:9;6698:19;6685:33;6675:43;;5210:1514;;;;;;;;;;:::o;6729:248::-;6797:6;6805;6858:2;6846:9;6837:7;6833:23;6829:32;6826:52;;;6874:1;6871;6864:12;6826:52;-1:-1:-1;;6897:23:644;;;6967:2;6952:18;;;6939:32;;-1:-1:-1;6729:248:644:o;7455:322::-;7524:6;7577:2;7565:9;7556:7;7552:23;7548:32;7545:52;;;7593:1;7590;7583:12;7545:52;7633:9;7620:23;-1:-1:-1;;;;;7658:6:644;7655:30;7652:50;;;7698:1;7695;7688:12;7652:50;7721;7763:7;7754:6;7743:9;7739:22;7721:50;:::i;8424:258::-;8496:1;8506:113;8520:6;8517:1;8514:13;8506:113;;;8596:11;;;8590:18;8577:11;;;8570:39;8542:2;8535:10;8506:113;;;8637:6;8634:1;8631:13;8628:48;;;-1:-1:-1;;8672:1:644;8654:16;;8647:27;8424:258::o;8687:257::-;8728:3;8766:5;8760:12;8793:6;8788:3;8781:19;8809:63;8865:6;8858:4;8853:3;8849:14;8842:4;8835:5;8831:16;8809:63;:::i;:::-;8926:2;8905:15;-1:-1:-1;;8901:29:644;8892:39;;;;8933:4;8888:50;;8687:257;-1:-1:-1;;8687:257:644:o;8949:800::-;9109:4;9138:2;9178;9167:9;9163:18;9208:2;9197:9;9190:21;9231:6;9266;9260:13;9297:6;9289;9282:22;9335:2;9324:9;9320:18;9313:25;;9397:2;9387:6;9384:1;9380:14;9369:9;9365:30;9361:39;9347:53;;9435:2;9427:6;9423:15;9456:1;9466:254;9480:6;9477:1;9474:13;9466:254;;;9573:2;9569:7;9557:9;9549:6;9545:22;9541:36;9536:3;9529:49;9601:39;9633:6;9624;9618:13;9601:39;:::i;:::-;9591:49;-1:-1:-1;9698:12:644;;;;9663:15;;;;9502:1;9495:9;9466:254;;;-1:-1:-1;9737:6:644;;8949:800;-1:-1:-1;;;;;;;8949:800:644:o;9754:705::-;9972:2;9984:21;;;10054:13;;9957:18;;;10076:22;;;9924:4;;10151;;10129:2;10114:18;;;10178:15;;;9924:4;10221:169;10235:6;10232:1;10229:13;10221:169;;;10296:13;;10284:26;;10330:12;;;;10365:15;;;;10257:1;10250:9;10221:169;;;-1:-1:-1;;;10426:18:644;;10419:34;;;;10407:3;9754:705;-1:-1:-1;;9754:705:644:o;10464:219::-;10613:2;10602:9;10595:21;10576:4;10633:44;10673:2;10662:9;10658:18;10650:6;10633:44;:::i;10688:127::-;10749:10;10744:3;10740:20;10737:1;10730:31;10780:4;10777:1;10770:15;10804:4;10801:1;10794:15;10820:229;10859:4;-1:-1:-1;;;;;10956:10:644;;;;10926;;10978:12;;;10975:38;;;10993:18;;:::i;:::-;11030:13;;10820:229;-1:-1:-1;;;10820:229:644:o;11054:355::-;11256:2;11238:21;;;11295:2;11275:18;;;11268:30;11334:33;11329:2;11314:18;;11307:61;11400:2;11385:18;;11054:355::o;11758:338::-;11960:2;11942:21;;;11999:2;11979:18;;;11972:30;-1:-1:-1;;;12033:2:644;12018:18;;12011:44;12087:2;12072:18;;11758:338::o;12101:184::-;12171:6;12224:2;12212:9;12203:7;12199:23;12195:32;12192:52;;;12240:1;12237;12230:12;12192:52;-1:-1:-1;12263:16:644;;12101:184;-1:-1:-1;12101:184:644:o;12290:125::-;12330:4;12358:1;12355;12352:8;12349:34;;;12363:18;;:::i;:::-;-1:-1:-1;12400:9:644;;12290:125::o;12420:128::-;12460:3;12491:1;12487:6;12484:1;12481:13;12478:39;;;12497:18;;:::i;:::-;-1:-1:-1;12533:9:644;;12420:128::o;14828:127::-;14889:10;14884:3;14880:20;14877:1;14870:31;14920:4;14917:1;14910:15;14944:4;14941:1;14934:15;14960:521;15037:4;15043:6;15103:11;15090:25;15197:2;15193:7;15182:8;15166:14;15162:29;15158:43;15138:18;15134:68;15124:96;;15216:1;15213;15206:12;15124:96;15243:33;;15295:20;;;-1:-1:-1;;;;;;15327:30:644;;15324:50;;;15370:1;15367;15360:12;15324:50;15403:4;15391:17;;-1:-1:-1;15434:14:644;15430:27;;;15420:38;;15417:58;;;15471:1;15468;15461:12;15486:135;15525:3;-1:-1:-1;;15546:17:644;;15543:43;;;15566:18;;:::i;:::-;-1:-1:-1;15613:1:644;15602:13;;15486:135::o;15626:380::-;15705:1;15701:12;;;;15748;;;15769:61;;15823:4;15815:6;15811:17;15801:27;;15769:61;15876:2;15868:6;15865:14;15845:18;15842:38;15839:161;;;15922:10;15917:3;15913:20;15910:1;15903:31;15957:4;15954:1;15947:15;15985:4;15982:1;15975:15;16356:375;-1:-1:-1;;;;;16614:15:644;;;16596:34;;16666:15;;;;16661:2;16646:18;;16639:43;16713:2;16698:18;;16691:34;;;;16546:2;16531:18;;16356:375::o;16736:236::-;16775:3;-1:-1:-1;;;;;16848:2:644;16845:1;16841:10;16878:2;16875:1;16871:10;16909:3;16905:2;16901:12;16896:3;16893:21;16890:47;;;16917:18;;:::i;:::-;16953:13;;16736:236;-1:-1:-1;;;;16736:236:644:o;16977:400::-;17148:3;-1:-1:-1;;;;;17169:31:644;;17166:51;;;17213:1;17210;17203:12;17166:51;17247:6;17244:1;17240:14;17289:6;17281;17276:3;17263:33;17351:1;17315:16;;17340:13;;;-1:-1:-1;17315:16:644;16977:400;-1:-1:-1;;16977:400:644:o;18079:784::-;-1:-1:-1;;;18485:3:644;18478:36;18460:3;18543:6;18537:13;18559:62;18614:6;18609:2;18604:3;18600:12;18593:4;18585:6;18581:17;18559:62;:::i;:::-;-1:-1:-1;;;18680:2:644;18640:16;;;18672:11;;;18665:40;18730:13;;18752:63;18730:13;18801:2;18793:11;;18786:4;18774:17;;18752:63;:::i;:::-;18835:17;18854:2;18831:26;;18079:784;-1:-1:-1;;;;18079:784:644:o;19207:407::-;19409:2;19391:21;;;19448:2;19428:18;;;19421:30;19487:34;19482:2;19467:18;;19460:62;-1:-1:-1;;;19553:2:644;19538:18;;19531:41;19604:3;19589:19;;19207:407::o;19968:381::-;20165:2;20154:9;20147:21;20128:4;20191:44;20231:2;20220:9;20216:18;20208:6;20191:44;:::i;:::-;20283:9;20275:6;20271:22;20266:2;20255:9;20251:18;20244:50;20311:32;20336:6;20328;20311:32;:::i;21060:127::-;21121:10;21116:3;21112:20;21109:1;21102:31;21152:4;21149:1;21142:15;21176:4;21173:1;21166:15;21938:274;22067:3;22105:6;22099:13;22121:53;22167:6;22162:3;22155:4;22147:6;22143:17;22121:53;:::i;:::-;22190:16;;;;;21938:274;-1:-1:-1;;21938:274:644:o;22427:168::-;22467:7;22533:1;22529;22525:6;22521:14;22518:1;22515:21;22510:1;22503:9;22496:17;22492:45;22489:71;;;22540:18;;:::i;:::-;-1:-1:-1;22580:9:644;;22427:168::o;22600:136::-;22639:3;22667:5;22657:39;;22676:18;;:::i;:::-;-1:-1:-1;;;22712:18:644;;22600:136::o;23102:127::-;23163:10;23158:3;23154:20;23151:1;23144:31;23194:4;23191:1;23184:15;23218:4;23215:1;23208:15;23234:217;23274:1;23300;23290:132;;23344:10;23339:3;23335:20;23332:1;23325:31;23379:4;23376:1;23369:15;23407:4;23404:1;23397:15;23290:132;-1:-1:-1;23436:9:644;;23234:217::o;24088:277::-;24155:6;24208:2;24196:9;24187:7;24183:23;24179:32;24176:52;;;24224:1;24221;24214:12;24176:52;24256:9;24250:16;24309:5;24302:13;24295:21;24288:5;24285:32;24275:60;;24331:1;24328;24321:12",
    "linkReferences": {},
    "immutableReferences": {
      "90775": [
        {
          "start": 451,
          "length": 32
        },
        {
          "start": 2351,
          "length": 32
        },
        {
          "start": 2528,
          "length": 32
        },
        {
          "start": 5663,
          "length": 32
        },
        {
          "start": 12242,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "DEFAULT_ADMIN_ROLE()": "a217fddf",
    "claimRewards()": "372500ab",
    "contractType()": "cb2ef6f7",
    "contractURI()": "e8a3d485",
    "contractVersion()": "a0a8e460",
    "depositRewardTokens(uint256)": "16c621e0",
    "getRewardTokenBalance()": "93ce5343",
    "getRewardsPerUnitTime()": "0e8b229b",
    "getRoleAdmin(bytes32)": "248a9ca3",
    "getRoleMember(bytes32,uint256)": "9010d07c",
    "getRoleMemberCount(bytes32)": "ca15c873",
    "getStakeInfo(address)": "c3453153",
    "getTimeUnit()": "d68124c7",
    "grantRole(bytes32,address)": "2f2ff15d",
    "hasRole(bytes32,address)": "91d14854",
    "hasRoleWithSwitch(bytes32,address)": "a32fa5b3",
    "indexedTokens(uint256)": "961004d3",
    "initialize(address,string,address[],address,address,uint256,uint256)": "6a5ab6e5",
    "isIndexed(uint256)": "fd48ba17",
    "isTrustedForwarder(address)": "572b6c05",
    "multicall(bytes[])": "ac9650d8",
    "onERC721Received(address,address,uint256,bytes)": "150b7a02",
    "renounceRole(bytes32,address)": "36568abe",
    "revokeRole(bytes32,address)": "d547741f",
    "rewardToken()": "f7c618c1",
    "setContractURI(string)": "938e3d7b",
    "setRewardsPerUnitTime(uint256)": "23ef2580",
    "setTimeUnit(uint256)": "6360106f",
    "stake(uint256[])": "0fbf0a93",
    "stakerAddress(uint256)": "94067045",
    "stakers(address)": "9168ae72",
    "stakersArray(uint256)": "5357e916",
    "stakingToken()": "72f702f3",
    "supportsInterface(bytes4)": "01ffc9a7",
    "withdraw(uint256[])": "983d95ce",
    "withdrawRewardTokens(uint256)": "cb43b2dd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nativeTokenWrapper\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"prevURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newURI\",\"type\":\"string\"}],\"name\":\"ContractURIUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"RewardTokensDepositedByAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"RewardTokensWithdrawnByAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"}],\"name\":\"RewardsClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"}],\"name\":\"TokensStaked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"}],\"name\":\"TokensWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldRewardsPerUnitTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newRewardsPerUnitTime\",\"type\":\"uint256\"}],\"name\":\"UpdatedRewardsPerUnitTime\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldTimeUnit\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newTimeUnit\",\"type\":\"uint256\"}],\"name\":\"UpdatedTimeUnit\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractType\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractVersion\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"depositRewardTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRewardTokenBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRewardsPerUnitTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_rewardsPerUnitTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_staker\",\"type\":\"address\"}],\"name\":\"getStakeInfo\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_tokensStaked\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"_rewards\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTimeUnit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_timeUnit\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRoleWithSwitch\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"indexedTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_defaultAdmin\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_contractURI\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"_trustedForwarders\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"_rewardToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_stakingToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_timeUnit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_rewardsPerUnitTime\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"isIndexed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"setContractURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rewardsPerUnitTime\",\"type\":\"uint256\"}],\"name\":\"setRewardsPerUnitTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_timeUnit\",\"type\":\"uint256\"}],\"name\":\"setTimeUnit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_tokenIds\",\"type\":\"uint256[]\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stakerAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakers\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"amountStaked\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"conditionIdOflastUpdate\",\"type\":\"uint64\"},{\"internalType\":\"uint128\",\"name\":\"timeOfLastUpdate\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"unclaimedRewards\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stakersArray\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_tokenIds\",\"type\":\"uint256[]\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawRewardTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"claimRewards()\":{\"details\":\"See {_claimRewards}. Override that to implement custom logic.             See {_calculateRewards} for reward-calculation logic.\"},\"contractType()\":{\"details\":\"Returns the module type of the contract.\"},\"contractVersion()\":{\"details\":\"Returns the version of the contract.\"},\"depositRewardTokens(uint256)\":{\"details\":\"Admin deposits reward tokens.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"See {grantRole} and {revokeRole}.                  To change a role's admin, use {_setRoleAdmin}.\",\"params\":{\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns `member` who has `role`, at `index` of role-members list.                  See struct {RoleMembers}, and mapping {roleMembers}\",\"params\":{\"index\":\"Index in list of current members for the role.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"},\"returns\":{\"member\":\" Address of account that has `role`\"}},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns `count` of accounts that have `role`.                  See struct {RoleMembers}, and mapping {roleMembers}\",\"params\":{\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"},\"returns\":{\"count\":\"  Total number of accounts that have `role`\"}},\"getStakeInfo(address)\":{\"params\":{\"_staker\":\"Address for which to calculated rewards.\"},\"returns\":{\"_rewards\":\"       Available reward amount.\",\"_tokensStaked\":\"  List of token-ids staked by staker.\"}},\"grantRole(bytes32,address)\":{\"details\":\"Caller must have admin role for the `role`.                  Emits {RoleGranted Event}.\",\"params\":{\"account\":\"Address of the account to which the role is being granted.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\",\"params\":{\"account\":\"Address of the account for which the role is being checked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"hasRoleWithSwitch(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.                  Role restrictions can be swtiched on and off:                      - If address(0) has ROLE, then the ROLE restrictions                        don't apply.                      - If address(0) does not have ROLE, then the ROLE                        restrictions will apply.\",\"params\":{\"account\":\"Address of the account for which the role is being checked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"initialize(address,string,address[],address,address,uint256,uint256)\":{\"details\":\"Initializes the contract, like a constructor.\"},\"multicall(bytes[])\":{\"details\":\"Receives and executes a batch of function calls on this contract.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Caller must have the `role`, with caller being the same as `account`.                  Emits {RoleRevoked Event}.\",\"params\":{\"account\":\"Address of the account from which the role is being revoked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"revokeRole(bytes32,address)\":{\"details\":\"Caller must have admin role for the `role`.                  Emits {RoleRevoked Event}.\",\"params\":{\"account\":\"Address of the account from which the role is being revoked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"setContractURI(string)\":{\"details\":\"Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.\",\"params\":{\"_uri\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"setRewardsPerUnitTime(uint256)\":{\"details\":\"Only admin/authorized-account can call it.\",\"params\":{\"_rewardsPerUnitTime\":\"New rewards per unit time.\"}},\"setTimeUnit(uint256)\":{\"details\":\"Only admin/authorized-account can call it.\",\"params\":{\"_timeUnit\":\"New time unit.\"}},\"stake(uint256[])\":{\"details\":\"See {_stake}. Override that to implement custom logic.\",\"params\":{\"_tokenIds\":\"List of tokens to stake.\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"withdraw(uint256[])\":{\"details\":\"See {_withdraw}. Override that to implement custom logic.\",\"params\":{\"_tokenIds\":\"List of tokens to withdraw.\"}},\"withdrawRewardTokens(uint256)\":{\"details\":\"Admin can withdraw excess reward tokens.\"}},\"stateVariables\":{\"nativeTokenWrapper\":{\"details\":\"The address of the native token wrapper contract.\"},\"rewardToken\":{\"details\":\"ERC20 Reward Token address. See {_mintRewards} below.\"},\"rewardTokenBalance\":{\"details\":\"Total amount of reward tokens in the contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"claimRewards()\":{\"notice\":\"Claim accumulated rewards.\"},\"contractURI()\":{\"notice\":\"Returns the contract metadata URI.\"},\"getRewardTokenBalance()\":{\"notice\":\"View total rewards available in the staking contract.\"},\"getRoleAdmin(bytes32)\":{\"notice\":\"Returns the admin role that controls the specified role.\"},\"getRoleMember(bytes32,uint256)\":{\"notice\":\"Returns the role-member from a list of members for a role,                  at a given index.\"},\"getRoleMemberCount(bytes32)\":{\"notice\":\"Returns total number of accounts that have a role.\"},\"getStakeInfo(address)\":{\"notice\":\"View amount staked and total rewards for a user.\"},\"grantRole(bytes32,address)\":{\"notice\":\"Grants a role to an account, if not previously granted.\"},\"hasRole(bytes32,address)\":{\"notice\":\"Checks whether an account has a particular role.\"},\"hasRoleWithSwitch(bytes32,address)\":{\"notice\":\"Checks whether an account has a particular role;                  role restrictions can be swtiched on and off.\"},\"renounceRole(bytes32,address)\":{\"notice\":\"Revokes role from the account.\"},\"revokeRole(bytes32,address)\":{\"notice\":\"Revokes role from an account.\"},\"setContractURI(string)\":{\"notice\":\"Lets a contract admin set the URI for contract-level metadata.\"},\"setRewardsPerUnitTime(uint256)\":{\"notice\":\"Set rewards per unit of time.           Interpreted as x rewards per second/per day/etc based on time-unit.\"},\"setTimeUnit(uint256)\":{\"notice\":\"Set time unit. Set as a number of seconds.           Could be specified as -- x * 1 hours, x * 1 days, etc.\"},\"stake(uint256[])\":{\"notice\":\"Stake ERC721 Tokens.\"},\"withdraw(uint256[])\":{\"notice\":\"Withdraw staked tokens.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/prebuilts/staking/NFTStake.sol\":\"NFTStake\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@std/=lib/forge-std/src/\",\":@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/\",\":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/\",\":contracts/=contracts/\",\":ds-test/=lib/ds-test/src/\",\":dynamic-contracts/=lib/dynamic-contracts/src/\",\":erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/ERC721A-Upgradeable/\",\":erc721a/=lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/\"]},\"sources\":{\"contracts/eip/interface/IERC20.sol\":{\"keccak256\":\"0x5bdd9dd97ba7d9d7c9a2953db287e4d9d7fa93a27a96bc2e72a8da4919b6f7ff\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://45527c265ee5de6bbb3ecfc052e7b1175531a82c2ac16172020aee855f7dd592\",\"dweb:/ipfs/QmVZthqbG916qUQSwv1LE8bB58ZGQ1VfQbLbbRV5urfEYA\"]},\"contracts/eip/interface/IERC721.sol\":{\"keccak256\":\"0xbd9f2dd131e8f1e4e50b1b116eae917510ab9bf5d4356de37c5daf4cffdfa049\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ac3530b317083464271b100de1976ed9179b9e7d5a4fc3d992c61c80676a676\",\"dweb:/ipfs/QmUq1AVzymvp7Y8H1eypGEGU4icjzn5vDSvKMNpXnoaeMT\"]},\"contracts/extension/ContractMetadata.sol\":{\"keccak256\":\"0xf53ab08ec3057056872c15e35a5610f7a43426bd2829786aed006d527177adfe\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ee132ae5efdd372152febfcd8fd3a7cb82c7019367d92c886f5096003a79f392\",\"dweb:/ipfs/QmRW1cGWmZAu57huZpTUwsWB8AxUFrBp6g4NqozXpbWsR6\"]},\"contracts/extension/Permissions.sol\":{\"keccak256\":\"0xe7e18181f2d2c8bae4afc7ee69ce1d547e7aa583182e8e0853ca33c49a28c04d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://75d5f5a9356c290e398a5dd05914b59c3d09e6fedde2da80b6f1012aedf323f8\",\"dweb:/ipfs/QmNrrf8Uyq33XBsE2NqVTW6HVX3XixFTjCG8KGbGxdEE84\"]},\"contracts/extension/PermissionsEnumerable.sol\":{\"keccak256\":\"0x434a6ffc16ddc437ffb37b8fbe4c9696385252f15a617c4606b8c5e10561caf3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1a9d4dac4bf2ae3c3c086af1956dc25e8b149b0914125e660cc0648791c247cb\",\"dweb:/ipfs/QmTMEggPdBea1JCamsShwRf3en2FgVTXNTPJ2isFtBk4Kk\"]},\"contracts/extension/Staking721Upgradeable.sol\":{\"keccak256\":\"0x4197549ec41e3ada2b96b4dfb9b8324dd6d02dc38cff3a12a1923a541ad3e565\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a7ac384c17e3286761f7589d1f8776ab87d2dcbf762282c31717ab50cf487a20\",\"dweb:/ipfs/QmS7Vqgkah5jg19DipfLxx3rXtUcAuR6zoHDew4HTcEMQZ\"]},\"contracts/extension/interface/IContractMetadata.sol\":{\"keccak256\":\"0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a\",\"dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr\"]},\"contracts/extension/interface/IPermissions.sol\":{\"keccak256\":\"0xc0cd1f87bac474a06f85e2b341b9b57662aee957fc24180d42c872481c2f2ae3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7dec3eed451d63867531d693f0be3279fa2c9aef3130f0826c3520c06820fa5d\",\"dweb:/ipfs/QmTYANrcPdd9SCe99DWsKJ19evNRQKQGZeoS1Keew4M2cS\"]},\"contracts/extension/interface/IPermissionsEnumerable.sol\":{\"keccak256\":\"0x2e742c18a4481bad41d56424cd16c52def2fb415f69e5fb5f67d8d979300ff95\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d9be33bb865e3e82aca540a3e38cbc2bf2e431f9d1bf39c50d6c757e7b7bf3ee\",\"dweb:/ipfs/Qmdad1Xqj5SQ44Bk4bwD2uA36XnGHtqnVYSomKZQvnUBVG\"]},\"contracts/extension/interface/IStaking721.sol\":{\"keccak256\":\"0x8d0d1508daad0e427ccd002fdd7adc25261930bb32e21bdb90af354ed37f7076\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://00e7d2ebe66cdd849690933146070e65f36ebb59487a4028bca4b9d8d4635e89\",\"dweb:/ipfs/QmRfSUDHE2rVGkfHuYtHLbJpvtTc1gw4SUcpuyqL8pH2iS\"]},\"contracts/external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol\":{\"keccak256\":\"0xdbc96b1264d2e2bd82cb7e697056929325e09d1641321145a8cec53b22b9567d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ca7ccf947d21d98878ec18e941b750cd2ae7c563e6d2a707da4f806038d67c8\",\"dweb:/ipfs/QmYVLYUPMD3b95vKrS5yjxcz2MDNNzkWJY9xc9bc9oTZdh\"]},\"contracts/external-deps/openzeppelin/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xa6149938a7c7c8af4244743aeaafcfb1fd9ce15ad45de58fa9576f0ed5599b2c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://839aa4ea6ef6d1972881bfd7420a9ddcd2f37139e3f0bf25310f93f48410702d\",\"dweb:/ipfs/QmSH65kStfbgMbfjFdfJqV412omPy6nB1JMvMt9q7SsytW\"]},\"contracts/external-deps/openzeppelin/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"contracts/infra/interface/IWETH.sol\":{\"keccak256\":\"0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1\",\"dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU\"]},\"contracts/lib/CurrencyTransferLib.sol\":{\"keccak256\":\"0x4a30bc9a8cd6cc8b855621fb1a651e2c3a1639b0ad153f1139c3ba463605672d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://417cc64ec6393f3cc89981ca9c32bbcc444a5f91363d69f84dd8ace888b2b859\",\"dweb:/ipfs/QmZeaQsYGx4VNoP8e1fcwC87PwvyakheWYeuwEwhFSJnvB\"]},\"contracts/lib/TWAddress.sol\":{\"keccak256\":\"0x460f032cf3bf43d586e126ab2ec8be4335767f497ccb699741546a1cfba94a7e\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://28fcbf6dde6c2eeb9864f6ec6f21dcc81ec426877debf4b912f2f3bc5b0fc91e\",\"dweb:/ipfs/QmS1SHrZDfefX8EE7DdvszTY6VPCHydf4HM7NKJ2gP72e6\"]},\"contracts/lib/TWStrings.sol\":{\"keccak256\":\"0xef7e9954d888f99baffc10db1d9bf6a2beb66c842d81dea90352ddded22cbbf8\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://832415134684f5413f9d0f3f5536aa30848690cfe54769f7730a3807438f3bf9\",\"dweb:/ipfs/QmduTiUdtsnyJVMXpdomohEWDVg46aZhnS9uTURu4x1NYt\"]},\"contracts/prebuilts/interface/staking/INFTStake.sol\":{\"keccak256\":\"0xa50c121c0d322526fe8432c9b69d0ae51d8e8467a3314e1af69da2de0f398559\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1fe3a11b07b0c7e3146fc191f2d60bc3e0397c87ab8d23f7a745bd51a48efb18\",\"dweb:/ipfs/QmThdDoyvZ4CEkDnxgZ5DS2tjHwrhdbpwrkNaw79auvqL2\"]},\"contracts/prebuilts/staking/NFTStake.sol\":{\"keccak256\":\"0x26110d96809a1918b2044c014e8b52e825b68204bb8ecf2e83f342291980cee9\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ea6e0067ba735f597e7038ddc511a30f100e94a3a727d1d47a178faaa4f32c2e\",\"dweb:/ipfs/QmUgpCCyt9HUoBk3NTrjNbbpxvx6GX81M9cU8KSUxRjktm\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x8cc03c5ac17e8a7396e487cda41fc1f1dfdb91db7d528e6da84bee3b6dd7e167\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://607818f1b44548c2d8268176f73cdb290e1faed971b1061930d92698366e2a11\",\"dweb:/ipfs/QmQibMe3r5no95b6q7isGT5R75V8xSofWEDLXzp95b7LgZ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721ReceiverUpgradeable.sol\":{\"keccak256\":\"0xbb2ed8106d94aeae6858e2551a1e7174df73994b77b13ebd120ccaaef80155f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8bc3c6a456dba727d8dd9fd33420febede490abb49a07469f61d2a3ace66a95a\",\"dweb:/ipfs/QmVAWtEVj7K5AbvgJa9Dz22KiDq9eoptCjnVZqsTMtKXyd\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/MulticallUpgradeable.sol\":{\"keccak256\":\"0xb8709268fac307114f6cbb5e3cee798d91cd0adfea4d337c4920f8f0b2414f15\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34975544d7bea644eee9ad6e9034b7bbbc0b165159b77f60d0c6004300ab601d\",\"dweb:/ipfs/QmUW5vLADhvVqSdBe96QFM6gzwtv9pagpaUkzXmaeQTWPQ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7\",\"dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.12+commit.f00d7308"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_nativeTokenWrapper",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "prevURI",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "newURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ContractURIUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RewardTokensDepositedByAdmin",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RewardTokensWithdrawnByAdmin",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "rewardAmount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RewardsClaimed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleAdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleGranted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleRevoked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256[]",
              "name": "tokenIds",
              "type": "uint256[]",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "TokensStaked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256[]",
              "name": "tokenIds",
              "type": "uint256[]",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "TokensWithdrawn",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "oldRewardsPerUnitTime",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newRewardsPerUnitTime",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "UpdatedRewardsPerUnitTime",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "oldTimeUnit",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newTimeUnit",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "UpdatedTimeUnit",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DEFAULT_ADMIN_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimRewards"
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "contractType",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "contractURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "contractVersion",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "depositRewardTokens"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getRewardTokenBalance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getRewardsPerUnitTime",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "_rewardsPerUnitTime",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleAdmin",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleMember",
          "outputs": [
            {
              "internalType": "address",
              "name": "member",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleMemberCount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "count",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_staker",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getStakeInfo",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "_tokensStaked",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256",
              "name": "_rewards",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getTimeUnit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "_timeUnit",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRole",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRoleWithSwitch",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "indexedTokens",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_defaultAdmin",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "_contractURI",
              "type": "string"
            },
            {
              "internalType": "address[]",
              "name": "_trustedForwarders",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "_rewardToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_stakingToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_timeUnit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_rewardsPerUnitTime",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isIndexed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "forwarder",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isTrustedForwarder",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes[]",
              "name": "data",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "multicall",
          "outputs": [
            {
              "internalType": "bytes[]",
              "name": "results",
              "type": "bytes[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "onERC721Received",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeRole"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "rewardToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_uri",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setContractURI"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_rewardsPerUnitTime",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRewardsPerUnitTime"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_timeUnit",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setTimeUnit"
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "_tokenIds",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "stake"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "stakerAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "stakers",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "amountStaked",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "conditionIdOflastUpdate",
              "type": "uint64"
            },
            {
              "internalType": "uint128",
              "name": "timeOfLastUpdate",
              "type": "uint128"
            },
            {
              "internalType": "uint256",
              "name": "unclaimedRewards",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "stakersArray",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "stakingToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "_tokenIds",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawRewardTokens"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "claimRewards()": {
            "details": "See {_claimRewards}. Override that to implement custom logic.             See {_calculateRewards} for reward-calculation logic."
          },
          "contractType()": {
            "details": "Returns the module type of the contract."
          },
          "contractVersion()": {
            "details": "Returns the version of the contract."
          },
          "depositRewardTokens(uint256)": {
            "details": "Admin deposits reward tokens."
          },
          "getRoleAdmin(bytes32)": {
            "details": "See {grantRole} and {revokeRole}.                  To change a role's admin, use {_setRoleAdmin}.",
            "params": {
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "getRoleMember(bytes32,uint256)": {
            "details": "Returns `member` who has `role`, at `index` of role-members list.                  See struct {RoleMembers}, and mapping {roleMembers}",
            "params": {
              "index": "Index in list of current members for the role.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            },
            "returns": {
              "member": " Address of account that has `role`"
            }
          },
          "getRoleMemberCount(bytes32)": {
            "details": "Returns `count` of accounts that have `role`.                  See struct {RoleMembers}, and mapping {roleMembers}",
            "params": {
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            },
            "returns": {
              "count": "  Total number of accounts that have `role`"
            }
          },
          "getStakeInfo(address)": {
            "params": {
              "_staker": "Address for which to calculated rewards."
            },
            "returns": {
              "_rewards": "       Available reward amount.",
              "_tokensStaked": "  List of token-ids staked by staker."
            }
          },
          "grantRole(bytes32,address)": {
            "details": "Caller must have admin role for the `role`.                  Emits {RoleGranted Event}.",
            "params": {
              "account": "Address of the account to which the role is being granted.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "hasRole(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`.",
            "params": {
              "account": "Address of the account for which the role is being checked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "hasRoleWithSwitch(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`.                  Role restrictions can be swtiched on and off:                      - If address(0) has ROLE, then the ROLE restrictions                        don't apply.                      - If address(0) does not have ROLE, then the ROLE                        restrictions will apply.",
            "params": {
              "account": "Address of the account for which the role is being checked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "initialize(address,string,address[],address,address,uint256,uint256)": {
            "details": "Initializes the contract, like a constructor."
          },
          "multicall(bytes[])": {
            "details": "Receives and executes a batch of function calls on this contract."
          },
          "renounceRole(bytes32,address)": {
            "details": "Caller must have the `role`, with caller being the same as `account`.                  Emits {RoleRevoked Event}.",
            "params": {
              "account": "Address of the account from which the role is being revoked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "revokeRole(bytes32,address)": {
            "details": "Caller must have admin role for the `role`.                  Emits {RoleRevoked Event}.",
            "params": {
              "account": "Address of the account from which the role is being revoked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "setContractURI(string)": {
            "details": "Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.",
            "params": {
              "_uri": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "setRewardsPerUnitTime(uint256)": {
            "details": "Only admin/authorized-account can call it.",
            "params": {
              "_rewardsPerUnitTime": "New rewards per unit time."
            }
          },
          "setTimeUnit(uint256)": {
            "details": "Only admin/authorized-account can call it.",
            "params": {
              "_timeUnit": "New time unit."
            }
          },
          "stake(uint256[])": {
            "details": "See {_stake}. Override that to implement custom logic.",
            "params": {
              "_tokenIds": "List of tokens to stake."
            }
          },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          },
          "withdraw(uint256[])": {
            "details": "See {_withdraw}. Override that to implement custom logic.",
            "params": {
              "_tokenIds": "List of tokens to withdraw."
            }
          },
          "withdrawRewardTokens(uint256)": {
            "details": "Admin can withdraw excess reward tokens."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "claimRewards()": {
            "notice": "Claim accumulated rewards."
          },
          "contractURI()": {
            "notice": "Returns the contract metadata URI."
          },
          "getRewardTokenBalance()": {
            "notice": "View total rewards available in the staking contract."
          },
          "getRoleAdmin(bytes32)": {
            "notice": "Returns the admin role that controls the specified role."
          },
          "getRoleMember(bytes32,uint256)": {
            "notice": "Returns the role-member from a list of members for a role,                  at a given index."
          },
          "getRoleMemberCount(bytes32)": {
            "notice": "Returns total number of accounts that have a role."
          },
          "getStakeInfo(address)": {
            "notice": "View amount staked and total rewards for a user."
          },
          "grantRole(bytes32,address)": {
            "notice": "Grants a role to an account, if not previously granted."
          },
          "hasRole(bytes32,address)": {
            "notice": "Checks whether an account has a particular role."
          },
          "hasRoleWithSwitch(bytes32,address)": {
            "notice": "Checks whether an account has a particular role;                  role restrictions can be swtiched on and off."
          },
          "renounceRole(bytes32,address)": {
            "notice": "Revokes role from the account."
          },
          "revokeRole(bytes32,address)": {
            "notice": "Revokes role from an account."
          },
          "setContractURI(string)": {
            "notice": "Lets a contract admin set the URI for contract-level metadata."
          },
          "setRewardsPerUnitTime(uint256)": {
            "notice": "Set rewards per unit of time.           Interpreted as x rewards per second/per day/etc based on time-unit."
          },
          "setTimeUnit(uint256)": {
            "notice": "Set time unit. Set as a number of seconds.           Could be specified as -- x * 1 hours, x * 1 days, etc."
          },
          "stake(uint256[])": {
            "notice": "Stake ERC721 Tokens."
          },
          "withdraw(uint256[])": {
            "notice": "Withdraw staked tokens."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=lib/chainlink/",
        "@ds-test/=lib/ds-test/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@std/=lib/forge-std/src/",
        "@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/",
        "ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/",
        "ERC721A/=lib/ERC721A/contracts/",
        "chainlink/=lib/chainlink/",
        "contracts/=contracts/",
        "ds-test/=lib/ds-test/src/",
        "dynamic-contracts/=lib/dynamic-contracts/src/",
        "erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/",
        "erc721a-upgradeable/=lib/ERC721A-Upgradeable/",
        "erc721a/=lib/ERC721A/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/prebuilts/staking/NFTStake.sol": "NFTStake"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/eip/interface/IERC20.sol": {
        "keccak256": "0x5bdd9dd97ba7d9d7c9a2953db287e4d9d7fa93a27a96bc2e72a8da4919b6f7ff",
        "urls": [
          "bzz-raw://45527c265ee5de6bbb3ecfc052e7b1175531a82c2ac16172020aee855f7dd592",
          "dweb:/ipfs/QmVZthqbG916qUQSwv1LE8bB58ZGQ1VfQbLbbRV5urfEYA"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC721.sol": {
        "keccak256": "0xbd9f2dd131e8f1e4e50b1b116eae917510ab9bf5d4356de37c5daf4cffdfa049",
        "urls": [
          "bzz-raw://8ac3530b317083464271b100de1976ed9179b9e7d5a4fc3d992c61c80676a676",
          "dweb:/ipfs/QmUq1AVzymvp7Y8H1eypGEGU4icjzn5vDSvKMNpXnoaeMT"
        ],
        "license": "MIT"
      },
      "contracts/extension/ContractMetadata.sol": {
        "keccak256": "0xf53ab08ec3057056872c15e35a5610f7a43426bd2829786aed006d527177adfe",
        "urls": [
          "bzz-raw://ee132ae5efdd372152febfcd8fd3a7cb82c7019367d92c886f5096003a79f392",
          "dweb:/ipfs/QmRW1cGWmZAu57huZpTUwsWB8AxUFrBp6g4NqozXpbWsR6"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Permissions.sol": {
        "keccak256": "0xe7e18181f2d2c8bae4afc7ee69ce1d547e7aa583182e8e0853ca33c49a28c04d",
        "urls": [
          "bzz-raw://75d5f5a9356c290e398a5dd05914b59c3d09e6fedde2da80b6f1012aedf323f8",
          "dweb:/ipfs/QmNrrf8Uyq33XBsE2NqVTW6HVX3XixFTjCG8KGbGxdEE84"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/PermissionsEnumerable.sol": {
        "keccak256": "0x434a6ffc16ddc437ffb37b8fbe4c9696385252f15a617c4606b8c5e10561caf3",
        "urls": [
          "bzz-raw://1a9d4dac4bf2ae3c3c086af1956dc25e8b149b0914125e660cc0648791c247cb",
          "dweb:/ipfs/QmTMEggPdBea1JCamsShwRf3en2FgVTXNTPJ2isFtBk4Kk"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Staking721Upgradeable.sol": {
        "keccak256": "0x4197549ec41e3ada2b96b4dfb9b8324dd6d02dc38cff3a12a1923a541ad3e565",
        "urls": [
          "bzz-raw://a7ac384c17e3286761f7589d1f8776ab87d2dcbf762282c31717ab50cf487a20",
          "dweb:/ipfs/QmS7Vqgkah5jg19DipfLxx3rXtUcAuR6zoHDew4HTcEMQZ"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IContractMetadata.sol": {
        "keccak256": "0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2",
        "urls": [
          "bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a",
          "dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPermissions.sol": {
        "keccak256": "0xc0cd1f87bac474a06f85e2b341b9b57662aee957fc24180d42c872481c2f2ae3",
        "urls": [
          "bzz-raw://7dec3eed451d63867531d693f0be3279fa2c9aef3130f0826c3520c06820fa5d",
          "dweb:/ipfs/QmTYANrcPdd9SCe99DWsKJ19evNRQKQGZeoS1Keew4M2cS"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPermissionsEnumerable.sol": {
        "keccak256": "0x2e742c18a4481bad41d56424cd16c52def2fb415f69e5fb5f67d8d979300ff95",
        "urls": [
          "bzz-raw://d9be33bb865e3e82aca540a3e38cbc2bf2e431f9d1bf39c50d6c757e7b7bf3ee",
          "dweb:/ipfs/Qmdad1Xqj5SQ44Bk4bwD2uA36XnGHtqnVYSomKZQvnUBVG"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IStaking721.sol": {
        "keccak256": "0x8d0d1508daad0e427ccd002fdd7adc25261930bb32e21bdb90af354ed37f7076",
        "urls": [
          "bzz-raw://00e7d2ebe66cdd849690933146070e65f36ebb59487a4028bca4b9d8d4635e89",
          "dweb:/ipfs/QmRfSUDHE2rVGkfHuYtHLbJpvtTc1gw4SUcpuyqL8pH2iS"
        ],
        "license": "Apache-2.0"
      },
      "contracts/external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol": {
        "keccak256": "0xdbc96b1264d2e2bd82cb7e697056929325e09d1641321145a8cec53b22b9567d",
        "urls": [
          "bzz-raw://7ca7ccf947d21d98878ec18e941b750cd2ae7c563e6d2a707da4f806038d67c8",
          "dweb:/ipfs/QmYVLYUPMD3b95vKrS5yjxcz2MDNNzkWJY9xc9bc9oTZdh"
        ],
        "license": "MIT"
      },
      "contracts/external-deps/openzeppelin/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xa6149938a7c7c8af4244743aeaafcfb1fd9ce15ad45de58fa9576f0ed5599b2c",
        "urls": [
          "bzz-raw://839aa4ea6ef6d1972881bfd7420a9ddcd2f37139e3f0bf25310f93f48410702d",
          "dweb:/ipfs/QmSH65kStfbgMbfjFdfJqV412omPy6nB1JMvMt9q7SsytW"
        ],
        "license": "MIT"
      },
      "contracts/external-deps/openzeppelin/utils/math/SafeMath.sol": {
        "keccak256": "0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e",
        "urls": [
          "bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65",
          "dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN"
        ],
        "license": "MIT"
      },
      "contracts/infra/interface/IWETH.sol": {
        "keccak256": "0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b",
        "urls": [
          "bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1",
          "dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/CurrencyTransferLib.sol": {
        "keccak256": "0x4a30bc9a8cd6cc8b855621fb1a651e2c3a1639b0ad153f1139c3ba463605672d",
        "urls": [
          "bzz-raw://417cc64ec6393f3cc89981ca9c32bbcc444a5f91363d69f84dd8ace888b2b859",
          "dweb:/ipfs/QmZeaQsYGx4VNoP8e1fcwC87PwvyakheWYeuwEwhFSJnvB"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/TWAddress.sol": {
        "keccak256": "0x460f032cf3bf43d586e126ab2ec8be4335767f497ccb699741546a1cfba94a7e",
        "urls": [
          "bzz-raw://28fcbf6dde6c2eeb9864f6ec6f21dcc81ec426877debf4b912f2f3bc5b0fc91e",
          "dweb:/ipfs/QmS1SHrZDfefX8EE7DdvszTY6VPCHydf4HM7NKJ2gP72e6"
        ],
        "license": "Apache 2.0"
      },
      "contracts/lib/TWStrings.sol": {
        "keccak256": "0xef7e9954d888f99baffc10db1d9bf6a2beb66c842d81dea90352ddded22cbbf8",
        "urls": [
          "bzz-raw://832415134684f5413f9d0f3f5536aa30848690cfe54769f7730a3807438f3bf9",
          "dweb:/ipfs/QmduTiUdtsnyJVMXpdomohEWDVg46aZhnS9uTURu4x1NYt"
        ],
        "license": "Apache 2.0"
      },
      "contracts/prebuilts/interface/staking/INFTStake.sol": {
        "keccak256": "0xa50c121c0d322526fe8432c9b69d0ae51d8e8467a3314e1af69da2de0f398559",
        "urls": [
          "bzz-raw://1fe3a11b07b0c7e3146fc191f2d60bc3e0397c87ab8d23f7a745bd51a48efb18",
          "dweb:/ipfs/QmThdDoyvZ4CEkDnxgZ5DS2tjHwrhdbpwrkNaw79auvqL2"
        ],
        "license": "Apache-2.0"
      },
      "contracts/prebuilts/staking/NFTStake.sol": {
        "keccak256": "0x26110d96809a1918b2044c014e8b52e825b68204bb8ecf2e83f342291980cee9",
        "urls": [
          "bzz-raw://ea6e0067ba735f597e7038ddc511a30f100e94a3a727d1d47a178faaa4f32c2e",
          "dweb:/ipfs/QmUgpCCyt9HUoBk3NTrjNbbpxvx6GX81M9cU8KSUxRjktm"
        ],
        "license": "Apache-2.0"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e",
        "urls": [
          "bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497",
          "dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol": {
        "keccak256": "0x8cc03c5ac17e8a7396e487cda41fc1f1dfdb91db7d528e6da84bee3b6dd7e167",
        "urls": [
          "bzz-raw://607818f1b44548c2d8268176f73cdb290e1faed971b1061930d92698366e2a11",
          "dweb:/ipfs/QmQibMe3r5no95b6q7isGT5R75V8xSofWEDLXzp95b7LgZ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721ReceiverUpgradeable.sol": {
        "keccak256": "0xbb2ed8106d94aeae6858e2551a1e7174df73994b77b13ebd120ccaaef80155f5",
        "urls": [
          "bzz-raw://8bc3c6a456dba727d8dd9fd33420febede490abb49a07469f61d2a3ace66a95a",
          "dweb:/ipfs/QmVAWtEVj7K5AbvgJa9Dz22KiDq9eoptCjnVZqsTMtKXyd"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3",
        "urls": [
          "bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4",
          "dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/MulticallUpgradeable.sol": {
        "keccak256": "0xb8709268fac307114f6cbb5e3cee798d91cd0adfea4d337c4920f8f0b2414f15",
        "urls": [
          "bzz-raw://34975544d7bea644eee9ad6e9034b7bbbc0b165159b77f60d0c6004300ab601d",
          "dweb:/ipfs/QmUW5vLADhvVqSdBe96QFM6gzwtv9pagpaUkzXmaeQTWPQ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol": {
        "keccak256": "0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a",
        "urls": [
          "bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7",
          "dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol": {
        "keccak256": "0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09",
        "urls": [
          "bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758",
          "dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/prebuilts/staking/NFTStake.sol",
    "id": 91149,
    "exportedSymbols": {
      "AddressUpgradeable": [
        155768
      ],
      "ContextUpgradeable": [
        156044
      ],
      "ContractMetadata": [
        17526
      ],
      "CurrencyTransferLib": [
        63578
      ],
      "ERC165Upgradeable": [
        157249
      ],
      "ERC2771ContextUpgradeable": [
        45607
      ],
      "IContractMetadata": [
        32437
      ],
      "IERC165Upgradeable": [
        157261
      ],
      "IERC20": [
        13899
      ],
      "IERC721": [
        14105
      ],
      "IERC721ReceiverUpgradeable": [
        154946
      ],
      "INFTStake": [
        76286
      ],
      "IPermissions": [
        33256
      ],
      "IPermissionsEnumerable": [
        33281
      ],
      "IWETH": [
        54557
      ],
      "Initializable": [
        150199
      ],
      "MulticallUpgradeable": [
        156227
      ],
      "NFTStake": [
        91148
      ],
      "Permissions": [
        21500
      ],
      "PermissionsEnumerable": [
        21799
      ],
      "SafeERC20": [
        48369
      ],
      "Staking721Upgradeable": [
        31125
      ],
      "TWAddress": [
        64152
      ],
      "TWStrings": [
        64852
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:7515:370",
    "nodes": [
      {
        "id": 90734,
        "nodeType": "PragmaDirective",
        "src": "39:24:370",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".11"
        ]
      },
      {
        "id": 90735,
        "nodeType": "ImportDirective",
        "src": "736:41:370",
        "nodes": [],
        "absolutePath": "contracts/eip/interface/IERC721.sol",
        "file": "../../eip/interface/IERC721.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 91149,
        "sourceUnit": 14106,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 90736,
        "nodeType": "ImportDirective",
        "src": "778:87:370",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 91149,
        "sourceUnit": 157250,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 90737,
        "nodeType": "ImportDirective",
        "src": "866:89:370",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721ReceiverUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 91149,
        "sourceUnit": 154947,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 90738,
        "nodeType": "ImportDirective",
        "src": "978:79:370",
        "nodes": [],
        "absolutePath": "contracts/external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol",
        "file": "../../external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 91149,
        "sourceUnit": 45608,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 90739,
        "nodeType": "ImportDirective",
        "src": "1068:76:370",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/utils/MulticallUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/utils/MulticallUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 91149,
        "sourceUnit": 156228,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 90740,
        "nodeType": "ImportDirective",
        "src": "1145:43:370",
        "nodes": [],
        "absolutePath": "contracts/lib/CurrencyTransferLib.sol",
        "file": "../../lib/CurrencyTransferLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 91149,
        "sourceUnit": 63579,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 90741,
        "nodeType": "ImportDirective",
        "src": "1230:46:370",
        "nodes": [],
        "absolutePath": "contracts/extension/ContractMetadata.sol",
        "file": "../../extension/ContractMetadata.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 91149,
        "sourceUnit": 17527,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 90742,
        "nodeType": "ImportDirective",
        "src": "1277:51:370",
        "nodes": [],
        "absolutePath": "contracts/extension/PermissionsEnumerable.sol",
        "file": "../../extension/PermissionsEnumerable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 91149,
        "sourceUnit": 21800,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 90744,
        "nodeType": "ImportDirective",
        "src": "1329:82:370",
        "nodes": [],
        "absolutePath": "contracts/extension/Staking721Upgradeable.sol",
        "file": "../../extension/Staking721Upgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 91149,
        "sourceUnit": 31126,
        "symbolAliases": [
          {
            "foreign": {
              "id": 90743,
              "name": "Staking721Upgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 31125,
              "src": "1338:21:370",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_Staking721Upgradeable_$31125_$",
                "typeString": "type(contract Staking721Upgradeable)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 90745,
        "nodeType": "ImportDirective",
        "src": "1412:44:370",
        "nodes": [],
        "absolutePath": "contracts/prebuilts/interface/staking/INFTStake.sol",
        "file": "../interface/staking/INFTStake.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 91149,
        "sourceUnit": 76287,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 91148,
        "nodeType": "ContractDefinition",
        "src": "1458:6095:370",
        "nodes": [
          {
            "id": 90769,
            "nodeType": "VariableDeclaration",
            "src": "1706:58:370",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "MODULE_TYPE",
            "nameLocation": "1731:11:370",
            "scope": 91148,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 90764,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1706:7:370",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "4e46545374616b65",
                  "id": 90767,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1753:10:370",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_a583f56595d24b930a6a8b1ef7fa966f10b923d7f872874075532a853a714f78",
                    "typeString": "literal_string \"NFTStake\""
                  },
                  "value": "NFTStake"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_a583f56595d24b930a6a8b1ef7fa966f10b923d7f872874075532a853a714f78",
                    "typeString": "literal_string \"NFTStake\""
                  }
                ],
                "id": 90766,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1745:7:370",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_bytes32_$",
                  "typeString": "type(bytes32)"
                },
                "typeName": {
                  "id": 90765,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1745:7:370",
                  "typeDescriptions": {}
                }
              },
              "id": 90768,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1745:19:370",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "id": 90772,
            "nodeType": "VariableDeclaration",
            "src": "1770:36:370",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "VERSION",
            "nameLocation": "1795:7:370",
            "scope": 91148,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 90770,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1770:7:370",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 90771,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1805:1:370",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "private"
          },
          {
            "id": 90775,
            "nodeType": "VariableDeclaration",
            "src": "1876:45:370",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 90773,
              "nodeType": "StructuredDocumentation",
              "src": "1813:58:370",
              "text": "@dev The address of the native token wrapper contract."
            },
            "mutability": "immutable",
            "name": "nativeTokenWrapper",
            "nameLocation": "1903:18:370",
            "scope": 91148,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 90774,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1876:7:370",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 90778,
            "nodeType": "VariableDeclaration",
            "src": "1995:26:370",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 90776,
              "nodeType": "StructuredDocumentation",
              "src": "1928:62:370",
              "text": "@dev ERC20 Reward Token address. See {_mintRewards} below."
            },
            "functionSelector": "f7c618c1",
            "mutability": "mutable",
            "name": "rewardToken",
            "nameLocation": "2010:11:370",
            "scope": 91148,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 90777,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1995:7:370",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 90781,
            "nodeType": "VariableDeclaration",
            "src": "2088:34:370",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 90779,
              "nodeType": "StructuredDocumentation",
              "src": "2028:55:370",
              "text": "@dev Total amount of reward tokens in the contract."
            },
            "mutability": "mutable",
            "name": "rewardTokenBalance",
            "nameLocation": "2104:18:370",
            "scope": 91148,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 90780,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2088:7:370",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "id": 90793,
            "nodeType": "FunctionDefinition",
            "src": "2129:110:370",
            "nodes": [],
            "body": {
              "id": 90792,
              "nodeType": "Block",
              "src": "2182:57:370",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 90790,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 90788,
                      "name": "nativeTokenWrapper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 90775,
                      "src": "2192:18:370",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 90789,
                      "name": "_nativeTokenWrapper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 90783,
                      "src": "2213:19:370",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2192:40:370",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 90791,
                  "nodeType": "ExpressionStatement",
                  "src": "2192:40:370"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "id": 90786,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 90785,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 150119,
                  "src": "2170:11:370"
                },
                "nodeType": "ModifierInvocation",
                "src": "2170:11:370"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 90784,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 90783,
                  "mutability": "mutable",
                  "name": "_nativeTokenWrapper",
                  "nameLocation": "2149:19:370",
                  "nodeType": "VariableDeclaration",
                  "scope": 90793,
                  "src": "2141:27:370",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 90782,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2141:7:370",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2140:29:370"
            },
            "returnParameters": {
              "id": 90787,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2182:0:370"
            },
            "scope": 91148,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 90841,
            "nodeType": "FunctionDefinition",
            "src": "2304:590:370",
            "nodes": [],
            "body": {
              "id": 90840,
              "nodeType": "Block",
              "src": "2588:306:370",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 90815,
                        "name": "_trustedForwarders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90801,
                        "src": "2630:18:370",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      ],
                      "id": 90814,
                      "name": "__ERC2771Context_init_unchained",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45544,
                      "src": "2598:31:370",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address[] memory)"
                      }
                    },
                    "id": 90816,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2598:51:370",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 90817,
                  "nodeType": "ExpressionStatement",
                  "src": "2598:51:370"
                },
                {
                  "expression": {
                    "id": 90820,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 90818,
                      "name": "rewardToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 90778,
                      "src": "2660:11:370",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 90819,
                      "name": "_rewardToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 90803,
                      "src": "2674:12:370",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2660:26:370",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 90821,
                  "nodeType": "ExpressionStatement",
                  "src": "2660:26:370"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 90823,
                        "name": "_stakingToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90805,
                        "src": "2714:13:370",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 90822,
                      "name": "__Staking721_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30202,
                      "src": "2696:17:370",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 90824,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2696:32:370",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 90825,
                  "nodeType": "ExpressionStatement",
                  "src": "2696:32:370"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 90827,
                        "name": "_timeUnit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90807,
                        "src": "2759:9:370",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 90828,
                        "name": "_rewardsPerUnitTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90809,
                        "src": "2770:19:370",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 90826,
                      "name": "_setStakingCondition",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30987,
                      "src": "2738:20:370",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 90829,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2738:52:370",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 90830,
                  "nodeType": "ExpressionStatement",
                  "src": "2738:52:370"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 90832,
                        "name": "_contractURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90798,
                        "src": "2819:12:370",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 90831,
                      "name": "_setupContractURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17519,
                      "src": "2801:17:370",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 90833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2801:31:370",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 90834,
                  "nodeType": "ExpressionStatement",
                  "src": "2801:31:370"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 90836,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21176,
                        "src": "2853:18:370",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 90837,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90796,
                        "src": "2873:13:370",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 90835,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        21723
                      ],
                      "referencedDeclaration": 21723,
                      "src": "2842:10:370",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 90838,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2842:45:370",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 90839,
                  "nodeType": "ExpressionStatement",
                  "src": "2842:45:370"
                }
              ]
            },
            "documentation": {
              "id": 90794,
              "nodeType": "StructuredDocumentation",
              "src": "2245:54:370",
              "text": "@dev Initializes the contract, like a constructor."
            },
            "functionSelector": "6a5ab6e5",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 90812,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 90811,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 150119,
                  "src": "2576:11:370"
                },
                "nodeType": "ModifierInvocation",
                "src": "2576:11:370"
              }
            ],
            "name": "initialize",
            "nameLocation": "2313:10:370",
            "parameters": {
              "id": 90810,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 90796,
                  "mutability": "mutable",
                  "name": "_defaultAdmin",
                  "nameLocation": "2341:13:370",
                  "nodeType": "VariableDeclaration",
                  "scope": 90841,
                  "src": "2333:21:370",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 90795,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2333:7:370",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 90798,
                  "mutability": "mutable",
                  "name": "_contractURI",
                  "nameLocation": "2378:12:370",
                  "nodeType": "VariableDeclaration",
                  "scope": 90841,
                  "src": "2364:26:370",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 90797,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2364:6:370",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 90801,
                  "mutability": "mutable",
                  "name": "_trustedForwarders",
                  "nameLocation": "2417:18:370",
                  "nodeType": "VariableDeclaration",
                  "scope": 90841,
                  "src": "2400:35:370",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 90799,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2400:7:370",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 90800,
                    "nodeType": "ArrayTypeName",
                    "src": "2400:9:370",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 90803,
                  "mutability": "mutable",
                  "name": "_rewardToken",
                  "nameLocation": "2453:12:370",
                  "nodeType": "VariableDeclaration",
                  "scope": 90841,
                  "src": "2445:20:370",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 90802,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2445:7:370",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 90805,
                  "mutability": "mutable",
                  "name": "_stakingToken",
                  "nameLocation": "2483:13:370",
                  "nodeType": "VariableDeclaration",
                  "scope": 90841,
                  "src": "2475:21:370",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 90804,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2475:7:370",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 90807,
                  "mutability": "mutable",
                  "name": "_timeUnit",
                  "nameLocation": "2514:9:370",
                  "nodeType": "VariableDeclaration",
                  "scope": 90841,
                  "src": "2506:17:370",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 90806,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2506:7:370",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 90809,
                  "mutability": "mutable",
                  "name": "_rewardsPerUnitTime",
                  "nameLocation": "2541:19:370",
                  "nodeType": "VariableDeclaration",
                  "scope": 90841,
                  "src": "2533:27:370",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 90808,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2533:7:370",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2323:243:370"
            },
            "returnParameters": {
              "id": 90813,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2588:0:370"
            },
            "scope": 91148,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 90850,
            "nodeType": "FunctionDefinition",
            "src": "2954:99:370",
            "nodes": [],
            "body": {
              "id": 90849,
              "nodeType": "Block",
              "src": "3018:35:370",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 90847,
                    "name": "MODULE_TYPE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 90769,
                    "src": "3035:11:370",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 90846,
                  "id": 90848,
                  "nodeType": "Return",
                  "src": "3028:18:370"
                }
              ]
            },
            "documentation": {
              "id": 90842,
              "nodeType": "StructuredDocumentation",
              "src": "2900:49:370",
              "text": "@dev Returns the module type of the contract."
            },
            "functionSelector": "cb2ef6f7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "contractType",
            "nameLocation": "2963:12:370",
            "parameters": {
              "id": 90843,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2975:2:370"
            },
            "returnParameters": {
              "id": 90846,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 90845,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 90850,
                  "src": "3009:7:370",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 90844,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3009:7:370",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3008:9:370"
            },
            "scope": 91148,
            "stateMutability": "pure",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 90862,
            "nodeType": "FunctionDefinition",
            "src": "3109:103:370",
            "nodes": [],
            "body": {
              "id": 90861,
              "nodeType": "Block",
              "src": "3174:38:370",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 90858,
                        "name": "VERSION",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90772,
                        "src": "3197:7:370",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 90857,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3191:5:370",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint8_$",
                        "typeString": "type(uint8)"
                      },
                      "typeName": {
                        "id": 90856,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "3191:5:370",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 90859,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3191:14:370",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 90855,
                  "id": 90860,
                  "nodeType": "Return",
                  "src": "3184:21:370"
                }
              ]
            },
            "documentation": {
              "id": 90851,
              "nodeType": "StructuredDocumentation",
              "src": "3059:45:370",
              "text": "@dev Returns the version of the contract."
            },
            "functionSelector": "a0a8e460",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "contractVersion",
            "nameLocation": "3118:15:370",
            "parameters": {
              "id": 90852,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3133:2:370"
            },
            "returnParameters": {
              "id": 90855,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 90854,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 90862,
                  "src": "3167:5:370",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 90853,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3167:5:370",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3166:7:370"
            },
            "scope": 91148,
            "stateMutability": "pure",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 90875,
            "nodeType": "FunctionDefinition",
            "src": "3288:121:370",
            "nodes": [],
            "body": {
              "id": 90874,
              "nodeType": "Block",
              "src": "3315:94:370",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 90870,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 90867,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3333:3:370",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 90868,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3333:10:370",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 90869,
                          "name": "nativeTokenWrapper",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 90775,
                          "src": "3347:18:370",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3333:32:370",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63616c6c6572206e6f74206e617469766520746f6b656e20777261707065722e",
                        "id": 90871,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3367:34:370",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fff6f4088a14dc9fb6c418ac7dfb6aa2cb5091cf5954b1f93aeb20616b356a54",
                          "typeString": "literal_string \"caller not native token wrapper.\""
                        },
                        "value": "caller not native token wrapper."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fff6f4088a14dc9fb6c418ac7dfb6aa2cb5091cf5954b1f93aeb20616b356a54",
                          "typeString": "literal_string \"caller not native token wrapper.\""
                        }
                      ],
                      "id": 90866,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3325:7:370",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 90872,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3325:77:370",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 90873,
                  "nodeType": "ExpressionStatement",
                  "src": "3325:77:370"
                }
              ]
            },
            "documentation": {
              "id": 90863,
              "nodeType": "StructuredDocumentation",
              "src": "3218:65:370",
              "text": "@dev Lets the contract receive ether to unwrap native tokens."
            },
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 90864,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3295:2:370"
            },
            "returnParameters": {
              "id": 90865,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3315:0:370"
            },
            "scope": 91148,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 90951,
            "nodeType": "FunctionDefinition",
            "src": "3458:752:370",
            "nodes": [],
            "body": {
              "id": 90950,
              "nodeType": "Block",
              "src": "3534:676:370",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 90885,
                            "name": "DEFAULT_ADMIN_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21176,
                            "src": "3560:18:370",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 90886,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                91136
                              ],
                              "referencedDeclaration": 91136,
                              "src": "3580:10:370",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 90887,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3580:12:370",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 90884,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21207,
                          "src": "3552:7:370",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 90888,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3552:41:370",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420617574686f72697a6564",
                        "id": 90889,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3595:16:370",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
                          "typeString": "literal_string \"Not authorized\""
                        },
                        "value": "Not authorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
                          "typeString": "literal_string \"Not authorized\""
                        }
                      ],
                      "id": 90883,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3544:7:370",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 90890,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3544:68:370",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 90891,
                  "nodeType": "ExpressionStatement",
                  "src": "3544:68:370"
                },
                {
                  "assignments": [
                    90893
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 90893,
                      "mutability": "mutable",
                      "name": "_rewardToken",
                      "nameLocation": "3631:12:370",
                      "nodeType": "VariableDeclaration",
                      "scope": 90950,
                      "src": "3623:20:370",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 90892,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3623:7:370",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 90901,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 90897,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 90894,
                        "name": "rewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90778,
                        "src": "3646:11:370",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 90895,
                          "name": "CurrencyTransferLib",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63578,
                          "src": "3661:19:370",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$63578_$",
                            "typeString": "type(library CurrencyTransferLib)"
                          }
                        },
                        "id": 90896,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "NATIVE_TOKEN",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 63346,
                        "src": "3661:32:370",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "3646:47:370",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 90899,
                      "name": "rewardToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 90778,
                      "src": "3717:11:370",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 90900,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "3646:82:370",
                    "trueExpression": {
                      "id": 90898,
                      "name": "nativeTokenWrapper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 90775,
                      "src": "3696:18:370",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3623:105:370"
                },
                {
                  "assignments": [
                    90903
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 90903,
                      "mutability": "mutable",
                      "name": "balanceBefore",
                      "nameLocation": "3747:13:370",
                      "nodeType": "VariableDeclaration",
                      "scope": 90950,
                      "src": "3739:21:370",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 90902,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3739:7:370",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 90913,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 90910,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3802:4:370",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NFTStake_$91148",
                              "typeString": "contract NFTStake"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_NFTStake_$91148",
                              "typeString": "contract NFTStake"
                            }
                          ],
                          "id": 90909,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3794:7:370",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 90908,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3794:7:370",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 90911,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3794:13:370",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 90905,
                            "name": "_rewardToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 90893,
                            "src": "3770:12:370",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 90904,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13899,
                          "src": "3763:6:370",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$13899_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 90906,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3763:20:370",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$13899",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 90907,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13844,
                      "src": "3763:30:370",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 90912,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3763:45:370",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3739:69:370"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 90917,
                        "name": "rewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90778,
                        "src": "3879:11:370",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 90918,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            91136
                          ],
                          "referencedDeclaration": 91136,
                          "src": "3904:10:370",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 90919,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3904:12:370",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 90922,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3938:4:370",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NFTStake_$91148",
                              "typeString": "contract NFTStake"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_NFTStake_$91148",
                              "typeString": "contract NFTStake"
                            }
                          ],
                          "id": 90921,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3930:7:370",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 90920,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3930:7:370",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 90923,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3930:13:370",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 90924,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90878,
                        "src": "3957:7:370",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 90925,
                        "name": "nativeTokenWrapper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90775,
                        "src": "3978:18:370",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 90914,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63578,
                        "src": "3818:19:370",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$63578_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 90916,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferCurrencyWithWrapper",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63469,
                      "src": "3818:47:370",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address,uint256,address)"
                      }
                    },
                    "id": 90926,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3818:188:370",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 90927,
                  "nodeType": "ExpressionStatement",
                  "src": "3818:188:370"
                },
                {
                  "assignments": [
                    90929
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 90929,
                      "mutability": "mutable",
                      "name": "actualAmount",
                      "nameLocation": "4024:12:370",
                      "nodeType": "VariableDeclaration",
                      "scope": 90950,
                      "src": "4016:20:370",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 90928,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4016:7:370",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 90941,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 90940,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 90936,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "4078:4:370",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_NFTStake_$91148",
                                "typeString": "contract NFTStake"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_NFTStake_$91148",
                                "typeString": "contract NFTStake"
                              }
                            ],
                            "id": 90935,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4070:7:370",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 90934,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4070:7:370",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 90937,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4070:13:370",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 90931,
                              "name": "_rewardToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 90893,
                              "src": "4046:12:370",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 90930,
                            "name": "IERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13899,
                            "src": "4039:6:370",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC20_$13899_$",
                              "typeString": "type(contract IERC20)"
                            }
                          },
                          "id": 90932,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4039:20:370",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$13899",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 90933,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 13844,
                        "src": "4039:30:370",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 90938,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4039:45:370",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 90939,
                      "name": "balanceBefore",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 90903,
                      "src": "4087:13:370",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4039:61:370",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4016:84:370"
                },
                {
                  "expression": {
                    "id": 90944,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 90942,
                      "name": "rewardTokenBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 90781,
                      "src": "4111:18:370",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 90943,
                      "name": "actualAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 90929,
                      "src": "4133:12:370",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4111:34:370",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 90945,
                  "nodeType": "ExpressionStatement",
                  "src": "4111:34:370"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 90947,
                        "name": "actualAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90929,
                        "src": "4190:12:370",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 90946,
                      "name": "RewardTokensDepositedByAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76273,
                      "src": "4161:28:370",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 90948,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4161:42:370",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 90949,
                  "nodeType": "EmitStatement",
                  "src": "4156:47:370"
                }
              ]
            },
            "baseFunctions": [
              76279
            ],
            "documentation": {
              "id": 90876,
              "nodeType": "StructuredDocumentation",
              "src": "3415:38:370",
              "text": "@dev Admin deposits reward tokens."
            },
            "functionSelector": "16c621e0",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 90881,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 90880,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 150379,
                  "src": "3521:12:370"
                },
                "nodeType": "ModifierInvocation",
                "src": "3521:12:370"
              }
            ],
            "name": "depositRewardTokens",
            "nameLocation": "3467:19:370",
            "parameters": {
              "id": 90879,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 90878,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "3495:7:370",
                  "nodeType": "VariableDeclaration",
                  "scope": 90951,
                  "src": "3487:15:370",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 90877,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3487:7:370",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3486:17:370"
            },
            "returnParameters": {
              "id": 90882,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3534:0:370"
            },
            "scope": 91148,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 90996,
            "nodeType": "FunctionDefinition",
            "src": "4270:547:370",
            "nodes": [],
            "body": {
              "id": 90995,
              "nodeType": "Block",
              "src": "4326:491:370",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 90959,
                            "name": "DEFAULT_ADMIN_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21176,
                            "src": "4352:18:370",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 90960,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                91136
                              ],
                              "referencedDeclaration": 91136,
                              "src": "4372:10:370",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 90961,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4372:12:370",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 90958,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21207,
                          "src": "4344:7:370",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 90962,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4344:41:370",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420617574686f72697a6564",
                        "id": 90963,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4387:16:370",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
                          "typeString": "literal_string \"Not authorized\""
                        },
                        "value": "Not authorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
                          "typeString": "literal_string \"Not authorized\""
                        }
                      ],
                      "id": 90957,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4336:7:370",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 90964,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4336:68:370",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 90965,
                  "nodeType": "ExpressionStatement",
                  "src": "4336:68:370"
                },
                {
                  "expression": {
                    "id": 90975,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 90966,
                      "name": "rewardTokenBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 90781,
                      "src": "4474:18:370",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 90969,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 90967,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 90954,
                          "src": "4495:7:370",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "id": 90968,
                          "name": "rewardTokenBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 90781,
                          "src": "4505:18:370",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4495:28:370",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 90973,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 90971,
                          "name": "rewardTokenBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 90781,
                          "src": "4530:18:370",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 90972,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 90954,
                          "src": "4551:7:370",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4530:28:370",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 90974,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "Conditional",
                      "src": "4495:63:370",
                      "trueExpression": {
                        "hexValue": "30",
                        "id": 90970,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4526:1:370",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4474:84:370",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 90976,
                  "nodeType": "ExpressionStatement",
                  "src": "4474:84:370"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 90980,
                        "name": "rewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90778,
                        "src": "4630:11:370",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 90983,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4663:4:370",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NFTStake_$91148",
                              "typeString": "contract NFTStake"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_NFTStake_$91148",
                              "typeString": "contract NFTStake"
                            }
                          ],
                          "id": 90982,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4655:7:370",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 90981,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4655:7:370",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 90984,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4655:13:370",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 90985,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            91136
                          ],
                          "referencedDeclaration": 91136,
                          "src": "4682:10:370",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 90986,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4682:12:370",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 90987,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90954,
                        "src": "4708:7:370",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 90988,
                        "name": "nativeTokenWrapper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90775,
                        "src": "4729:18:370",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 90977,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63578,
                        "src": "4569:19:370",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$63578_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 90979,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferCurrencyWithWrapper",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63469,
                      "src": "4569:47:370",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address,uint256,address)"
                      }
                    },
                    "id": 90989,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4569:188:370",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 90990,
                  "nodeType": "ExpressionStatement",
                  "src": "4569:188:370"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 90992,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90954,
                        "src": "4802:7:370",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 90991,
                      "name": "RewardTokensWithdrawnByAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76268,
                      "src": "4773:28:370",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 90993,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4773:37:370",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 90994,
                  "nodeType": "EmitStatement",
                  "src": "4768:42:370"
                }
              ]
            },
            "baseFunctions": [
              76285
            ],
            "documentation": {
              "id": 90952,
              "nodeType": "StructuredDocumentation",
              "src": "4216:49:370",
              "text": "@dev Admin can withdraw excess reward tokens."
            },
            "functionSelector": "cb43b2dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawRewardTokens",
            "nameLocation": "4279:20:370",
            "parameters": {
              "id": 90955,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 90954,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "4308:7:370",
                  "nodeType": "VariableDeclaration",
                  "scope": 90996,
                  "src": "4300:15:370",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 90953,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4300:7:370",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4299:17:370"
            },
            "returnParameters": {
              "id": 90956,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4326:0:370"
            },
            "scope": 91148,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 91006,
            "nodeType": "FunctionDefinition",
            "src": "4893:116:370",
            "nodes": [],
            "body": {
              "id": 91005,
              "nodeType": "Block",
              "src": "4967:42:370",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 91003,
                    "name": "rewardTokenBalance",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 90781,
                    "src": "4984:18:370",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 91002,
                  "id": 91004,
                  "nodeType": "Return",
                  "src": "4977:25:370"
                }
              ]
            },
            "baseFunctions": [
              31110
            ],
            "documentation": {
              "id": 90997,
              "nodeType": "StructuredDocumentation",
              "src": "4823:65:370",
              "text": "@notice View total rewards available in the staking contract."
            },
            "functionSelector": "93ce5343",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRewardTokenBalance",
            "nameLocation": "4902:21:370",
            "overrides": {
              "id": 90999,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4940:8:370"
            },
            "parameters": {
              "id": 90998,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4923:2:370"
            },
            "returnParameters": {
              "id": 91002,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 91001,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 91006,
                  "src": "4958:7:370",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 91000,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4958:7:370",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4957:9:370"
            },
            "scope": 91148,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 91032,
            "nodeType": "FunctionDefinition",
            "src": "5199:253:370",
            "nodes": [],
            "body": {
              "id": 91031,
              "nodeType": "Block",
              "src": "5346:106:370",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 91023,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 91021,
                          "name": "isStaking",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30141,
                          "src": "5364:9:370",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 91022,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5377:1:370",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "5364:14:370",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "446972656374207472616e73666572",
                        "id": 91024,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5380:17:370",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1535664c0eb3bd430bcee25184abb0c36f1be46b8c14441f80835d2db87cf6ba",
                          "typeString": "literal_string \"Direct transfer\""
                        },
                        "value": "Direct transfer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1535664c0eb3bd430bcee25184abb0c36f1be46b8c14441f80835d2db87cf6ba",
                          "typeString": "literal_string \"Direct transfer\""
                        }
                      ],
                      "id": 91020,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5356:7:370",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 91025,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5356:42:370",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91026,
                  "nodeType": "ExpressionStatement",
                  "src": "5356:42:370"
                },
                {
                  "expression": {
                    "expression": {
                      "expression": {
                        "id": 91027,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
                        "src": "5415:4:370",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NFTStake_$91148",
                          "typeString": "contract NFTStake"
                        }
                      },
                      "id": 91028,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "onERC721Received",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 91032,
                      "src": "5415:21:370",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                        "typeString": "function (address,address,uint256,bytes memory) view external returns (bytes4)"
                      }
                    },
                    "id": 91029,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "selector",
                    "nodeType": "MemberAccess",
                    "src": "5415:30:370",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "functionReturnParameters": 91019,
                  "id": 91030,
                  "nodeType": "Return",
                  "src": "5408:37:370"
                }
              ]
            },
            "baseFunctions": [
              154945
            ],
            "functionSelector": "150b7a02",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "onERC721Received",
            "nameLocation": "5208:16:370",
            "overrides": {
              "id": 91016,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5320:8:370"
            },
            "parameters": {
              "id": 91015,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 91008,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 91032,
                  "src": "5234:7:370",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 91007,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5234:7:370",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 91010,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 91032,
                  "src": "5251:7:370",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 91009,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5251:7:370",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 91012,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 91032,
                  "src": "5268:7:370",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 91011,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5268:7:370",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 91014,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 91032,
                  "src": "5285:14:370",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 91013,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5285:5:370",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5224:81:370"
            },
            "returnParameters": {
              "id": 91019,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 91018,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 91032,
                  "src": "5338:6:370",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 91017,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "5338:6:370",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5337:8:370"
            },
            "scope": 91148,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 91053,
            "nodeType": "FunctionDefinition",
            "src": "5458:206:370",
            "nodes": [],
            "body": {
              "id": 91052,
              "nodeType": "Block",
              "src": "5541:123:370",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 91050,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 91045,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 91040,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91034,
                        "src": "5558:11:370",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 91042,
                              "name": "IERC721ReceiverUpgradeable",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 154946,
                              "src": "5578:26:370",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC721ReceiverUpgradeable_$154946_$",
                                "typeString": "type(contract IERC721ReceiverUpgradeable)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_IERC721ReceiverUpgradeable_$154946_$",
                                "typeString": "type(contract IERC721ReceiverUpgradeable)"
                              }
                            ],
                            "id": 91041,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "5573:4:370",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 91043,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5573:32:370",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_IERC721ReceiverUpgradeable_$154946",
                            "typeString": "type(contract IERC721ReceiverUpgradeable)"
                          }
                        },
                        "id": 91044,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "interfaceId",
                        "nodeType": "MemberAccess",
                        "src": "5573:44:370",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "src": "5558:59:370",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 91048,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 91034,
                          "src": "5645:11:370",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 91046,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -25,
                          "src": "5621:5:370",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_NFTStake_$91148_$",
                            "typeString": "type(contract super NFTStake)"
                          }
                        },
                        "id": 91047,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 157243,
                        "src": "5621:23:370",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view returns (bool)"
                        }
                      },
                      "id": 91049,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5621:36:370",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5558:99:370",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 91039,
                  "id": 91051,
                  "nodeType": "Return",
                  "src": "5551:106:370"
                }
              ]
            },
            "baseFunctions": [
              157243
            ],
            "functionSelector": "01ffc9a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "5467:17:370",
            "overrides": {
              "id": 91036,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5517:8:370"
            },
            "parameters": {
              "id": 91035,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 91034,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "5492:11:370",
                  "nodeType": "VariableDeclaration",
                  "scope": 91053,
                  "src": "5485:18:370",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 91033,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "5485:6:370",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5484:20:370"
            },
            "returnParameters": {
              "id": 91039,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 91038,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 91053,
                  "src": "5535:4:370",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 91037,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5535:4:370",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5534:6:370"
            },
            "scope": 91148,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 91087,
            "nodeType": "FunctionDefinition",
            "src": "5915:393:370",
            "nodes": [],
            "body": {
              "id": 91086,
              "nodeType": "Block",
              "src": "5990:318:370",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 91065,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 91063,
                          "name": "_rewards",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 91058,
                          "src": "6008:8:370",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 91064,
                          "name": "rewardTokenBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 90781,
                          "src": "6020:18:370",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6008:30:370",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f7567682072657761726420746f6b656e73",
                        "id": 91066,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6040:26:370",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f9f034c0209f69095b9daea6fa2bfb48319f16f6cf36946d2a2348944ff59120",
                          "typeString": "literal_string \"Not enough reward tokens\""
                        },
                        "value": "Not enough reward tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f9f034c0209f69095b9daea6fa2bfb48319f16f6cf36946d2a2348944ff59120",
                          "typeString": "literal_string \"Not enough reward tokens\""
                        }
                      ],
                      "id": 91062,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6000:7:370",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 91067,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6000:67:370",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91068,
                  "nodeType": "ExpressionStatement",
                  "src": "6000:67:370"
                },
                {
                  "expression": {
                    "id": 91071,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 91069,
                      "name": "rewardTokenBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 90781,
                      "src": "6077:18:370",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 91070,
                      "name": "_rewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 91058,
                      "src": "6099:8:370",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6077:30:370",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 91072,
                  "nodeType": "ExpressionStatement",
                  "src": "6077:30:370"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 91076,
                        "name": "rewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90778,
                        "src": "6178:11:370",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 91079,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "6211:4:370",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NFTStake_$91148",
                              "typeString": "contract NFTStake"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_NFTStake_$91148",
                              "typeString": "contract NFTStake"
                            }
                          ],
                          "id": 91078,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6203:7:370",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 91077,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6203:7:370",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 91080,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6203:13:370",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 91081,
                        "name": "_staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91056,
                        "src": "6230:7:370",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 91082,
                        "name": "_rewards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91058,
                        "src": "6251:8:370",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 91083,
                        "name": "nativeTokenWrapper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90775,
                        "src": "6273:18:370",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 91073,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63578,
                        "src": "6117:19:370",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$63578_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 91075,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferCurrencyWithWrapper",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63469,
                      "src": "6117:47:370",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address,uint256,address)"
                      }
                    },
                    "id": 91084,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6117:184:370",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91085,
                  "nodeType": "ExpressionStatement",
                  "src": "6117:184:370"
                }
              ]
            },
            "baseFunctions": [
              31118
            ],
            "documentation": {
              "id": 91054,
              "nodeType": "StructuredDocumentation",
              "src": "5859:51:370",
              "text": "@dev Mint/Transfer ERC20 rewards to the staker."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mintRewards",
            "nameLocation": "5924:12:370",
            "overrides": {
              "id": 91060,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5981:8:370"
            },
            "parameters": {
              "id": 91059,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 91056,
                  "mutability": "mutable",
                  "name": "_staker",
                  "nameLocation": "5945:7:370",
                  "nodeType": "VariableDeclaration",
                  "scope": 91087,
                  "src": "5937:15:370",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 91055,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5937:7:370",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 91058,
                  "mutability": "mutable",
                  "name": "_rewards",
                  "nameLocation": "5962:8:370",
                  "nodeType": "VariableDeclaration",
                  "scope": 91087,
                  "src": "5954:16:370",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 91057,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5954:7:370",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5936:35:370"
            },
            "returnParameters": {
              "id": 91061,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5990:0:370"
            },
            "scope": 91148,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 91101,
            "nodeType": "FunctionDefinition",
            "src": "6598:137:370",
            "nodes": [],
            "body": {
              "id": 91100,
              "nodeType": "Block",
              "src": "6670:65:370",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 91095,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21176,
                        "src": "6695:18:370",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 91096,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            91136
                          ],
                          "referencedDeclaration": 91136,
                          "src": "6715:10:370",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 91097,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6715:12:370",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 91094,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21207,
                      "src": "6687:7:370",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 91098,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6687:41:370",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 91093,
                  "id": 91099,
                  "nodeType": "Return",
                  "src": "6680:48:370"
                }
              ]
            },
            "baseFunctions": [
              31124
            ],
            "documentation": {
              "id": 91088,
              "nodeType": "StructuredDocumentation",
              "src": "6497:96:370",
              "text": "@dev Returns whether staking related restrictions can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetStakeConditions",
            "nameLocation": "6607:22:370",
            "overrides": {
              "id": 91090,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6646:8:370"
            },
            "parameters": {
              "id": 91089,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6629:2:370"
            },
            "returnParameters": {
              "id": 91093,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 91092,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 91101,
                  "src": "6664:4:370",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 91091,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6664:4:370",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6663:6:370"
            },
            "scope": 91148,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 91115,
            "nodeType": "FunctionDefinition",
            "src": "6830:133:370",
            "nodes": [],
            "body": {
              "id": 91114,
              "nodeType": "Block",
              "src": "6898:65:370",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 91109,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21176,
                        "src": "6923:18:370",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 91110,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            91136
                          ],
                          "referencedDeclaration": 91136,
                          "src": "6943:10:370",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 91111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6943:12:370",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 91108,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21207,
                      "src": "6915:7:370",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 91112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6915:41:370",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 91107,
                  "id": 91113,
                  "nodeType": "Return",
                  "src": "6908:48:370"
                }
              ]
            },
            "baseFunctions": [
              17525
            ],
            "documentation": {
              "id": 91102,
              "nodeType": "StructuredDocumentation",
              "src": "6741:84:370",
              "text": "@dev Checks whether contract metadata can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetContractURI",
            "nameLocation": "6839:18:370",
            "overrides": {
              "id": 91104,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6874:8:370"
            },
            "parameters": {
              "id": 91103,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6857:2:370"
            },
            "returnParameters": {
              "id": 91107,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 91106,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 91115,
                  "src": "6892:4:370",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 91105,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6892:4:370",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6891:6:370"
            },
            "scope": 91148,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 91125,
            "nodeType": "FunctionDefinition",
            "src": "7151:112:370",
            "nodes": [],
            "body": {
              "id": 91124,
              "nodeType": "Block",
              "src": "7227:36:370",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 91121,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        91136
                      ],
                      "referencedDeclaration": 91136,
                      "src": "7244:10:370",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 91122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7244:12:370",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 91120,
                  "id": 91123,
                  "nodeType": "Return",
                  "src": "7237:19:370"
                }
              ]
            },
            "baseFunctions": [
              31104
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_stakeMsgSender",
            "nameLocation": "7160:15:370",
            "overrides": {
              "id": 91117,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7200:8:370"
            },
            "parameters": {
              "id": 91116,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7175:2:370"
            },
            "returnParameters": {
              "id": 91120,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 91119,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 91125,
                  "src": "7218:7:370",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 91118,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7218:7:370",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7217:9:370"
            },
            "scope": 91148,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 91136,
            "nodeType": "FunctionDefinition",
            "src": "7269:140:370",
            "nodes": [],
            "body": {
              "id": 91135,
              "nodeType": "Block",
              "src": "7347:62:370",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 91131,
                        "name": "ERC2771ContextUpgradeable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45607,
                        "src": "7364:25:370",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC2771ContextUpgradeable_$45607_$",
                          "typeString": "type(contract ERC2771ContextUpgradeable)"
                        }
                      },
                      "id": 91132,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_msgSender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45575,
                      "src": "7364:36:370",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 91133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7364:38:370",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 91130,
                  "id": 91134,
                  "nodeType": "Return",
                  "src": "7357:45:370"
                }
              ]
            },
            "baseFunctions": [
              45575
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgSender",
            "nameLocation": "7278:10:370",
            "overrides": {
              "id": 91127,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7313:8:370"
            },
            "parameters": {
              "id": 91126,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7288:2:370"
            },
            "returnParameters": {
              "id": 91130,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 91129,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "7339:6:370",
                  "nodeType": "VariableDeclaration",
                  "scope": 91136,
                  "src": "7331:14:370",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 91128,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7331:7:370",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7330:16:370"
            },
            "scope": 91148,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 91147,
            "nodeType": "FunctionDefinition",
            "src": "7415:136:370",
            "nodes": [],
            "body": {
              "id": 91146,
              "nodeType": "Block",
              "src": "7491:60:370",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 91142,
                        "name": "ERC2771ContextUpgradeable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45607,
                        "src": "7508:25:370",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC2771ContextUpgradeable_$45607_$",
                          "typeString": "type(contract ERC2771ContextUpgradeable)"
                        }
                      },
                      "id": 91143,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_msgData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45602,
                      "src": "7508:34:370",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_calldata_ptr_$",
                        "typeString": "function () view returns (bytes calldata)"
                      }
                    },
                    "id": 91144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7508:36:370",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_calldata_ptr",
                      "typeString": "bytes calldata"
                    }
                  },
                  "functionReturnParameters": 91141,
                  "id": 91145,
                  "nodeType": "Return",
                  "src": "7501:43:370"
                }
              ]
            },
            "baseFunctions": [
              45602
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgData",
            "nameLocation": "7424:8:370",
            "overrides": {
              "id": 91138,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7457:8:370"
            },
            "parameters": {
              "id": 91137,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7432:2:370"
            },
            "returnParameters": {
              "id": 91141,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 91140,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 91147,
                  "src": "7475:14:370",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 91139,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7475:5:370",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7474:16:370"
            },
            "scope": 91148,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 90746,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 150199,
              "src": "1483:13:370"
            },
            "id": 90747,
            "nodeType": "InheritanceSpecifier",
            "src": "1483:13:370"
          },
          {
            "baseName": {
              "id": 90748,
              "name": "ContractMetadata",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 17526,
              "src": "1502:16:370"
            },
            "id": 90749,
            "nodeType": "InheritanceSpecifier",
            "src": "1502:16:370"
          },
          {
            "baseName": {
              "id": 90750,
              "name": "PermissionsEnumerable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 21799,
              "src": "1524:21:370"
            },
            "id": 90751,
            "nodeType": "InheritanceSpecifier",
            "src": "1524:21:370"
          },
          {
            "baseName": {
              "id": 90752,
              "name": "ERC2771ContextUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 45607,
              "src": "1551:25:370"
            },
            "id": 90753,
            "nodeType": "InheritanceSpecifier",
            "src": "1551:25:370"
          },
          {
            "baseName": {
              "id": 90754,
              "name": "MulticallUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 156227,
              "src": "1582:20:370"
            },
            "id": 90755,
            "nodeType": "InheritanceSpecifier",
            "src": "1582:20:370"
          },
          {
            "baseName": {
              "id": 90756,
              "name": "Staking721Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 31125,
              "src": "1608:21:370"
            },
            "id": 90757,
            "nodeType": "InheritanceSpecifier",
            "src": "1608:21:370"
          },
          {
            "baseName": {
              "id": 90758,
              "name": "ERC165Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 157249,
              "src": "1635:17:370"
            },
            "id": 90759,
            "nodeType": "InheritanceSpecifier",
            "src": "1635:17:370"
          },
          {
            "baseName": {
              "id": 90760,
              "name": "IERC721ReceiverUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 154946,
              "src": "1658:26:370"
            },
            "id": 90761,
            "nodeType": "InheritanceSpecifier",
            "src": "1658:26:370"
          },
          {
            "baseName": {
              "id": 90762,
              "name": "INFTStake",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 76286,
              "src": "1690:9:370"
            },
            "id": 90763,
            "nodeType": "InheritanceSpecifier",
            "src": "1690:9:370"
          }
        ],
        "canonicalName": "NFTStake",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          91148,
          76286,
          154946,
          157249,
          157261,
          31125,
          34214,
          150385,
          156227,
          45607,
          156044,
          21799,
          21500,
          33281,
          33256,
          17526,
          150199,
          32437
        ],
        "name": "NFTStake",
        "nameLocation": "1467:8:370",
        "scope": 91149,
        "usedErrors": []
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 370
}