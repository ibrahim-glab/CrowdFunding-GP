{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_defaultAdmin",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_royaltyRecipient",
          "type": "address"
        },
        {
          "internalType": "uint128",
          "name": "_royaltyBps",
          "type": "uint128"
        },
        {
          "internalType": "address",
          "name": "_primarySaleRecipient",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_fromTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_toTokenId",
          "type": "uint256"
        }
      ],
      "name": "BatchMetadataUpdate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "prevURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "newURI",
          "type": "string"
        }
      ],
      "name": "ContractURIUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newRoyaltyRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newRoyaltyBps",
          "type": "uint256"
        }
      ],
      "name": "DefaultRoyalty",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "MetadataFrozen",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "prevOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnerUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "PrimarySaleRecipientUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "royaltyRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "royaltyBps",
          "type": "uint256"
        }
      ],
      "name": "RoyaltyForToken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "signer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "mintedTo",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenIdMinted",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "royaltyRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "royaltyBps",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "primarySaleRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "uri",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "quantity",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "validityStartTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "validityEndTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "bytes32",
              "name": "uid",
              "type": "bytes32"
            }
          ],
          "indexed": false,
          "internalType": "struct ISignatureMintERC1155.MintRequest",
          "name": "mintRequest",
          "type": "tuple"
        }
      ],
      "name": "TokensMintedWithSignature",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "_ids",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "_values",
          "type": "uint256[]"
        }
      ],
      "name": "TransferBatch",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "TransferSingle",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "_value",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "URI",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "accounts",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        }
      ],
      "name": "balanceOfBatch",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "batchFrozen",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "_tokenIds",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "string",
          "name": "_baseURI",
          "type": "string"
        }
      ],
      "name": "batchMintTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "_tokenIds",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_amounts",
          "type": "uint256[]"
        }
      ],
      "name": "burnBatch",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBaseURICount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getBatchIdAtIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDefaultRoyaltyInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getRoyaltyInfoForToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_tokenURI",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "mintTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "royaltyRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "royaltyBps",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "primarySaleRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "uri",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "quantity",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "validityStartTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "validityEndTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "bytes32",
              "name": "uid",
              "type": "bytes32"
            }
          ],
          "internalType": "struct ISignatureMintERC1155.MintRequest",
          "name": "_req",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "mintWithSignature",
      "outputs": [
        {
          "internalType": "address",
          "name": "signer",
          "type": "address"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "multicall",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "results",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextTokenIdToMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "primarySaleRecipient",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "salePrice",
          "type": "uint256"
        }
      ],
      "name": "royaltyInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "royaltyAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeBatchTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "setContractURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_royaltyRecipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_royaltyBps",
          "type": "uint256"
        }
      ],
      "name": "setDefaultRoyaltyInfo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "setOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_saleRecipient",
          "type": "address"
        }
      ],
      "name": "setPrimarySaleRecipient",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_bps",
          "type": "uint256"
        }
      ],
      "name": "setRoyaltyInfoForToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "uri",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "royaltyRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "royaltyBps",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "primarySaleRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "uri",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "quantity",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "validityStartTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "validityEndTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "bytes32",
              "name": "uid",
              "type": "bytes32"
            }
          ],
          "internalType": "struct ISignatureMintERC1155.MintRequest",
          "name": "_req",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "verify",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "signer",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x6101406040523480156200001257600080fd5b506040516200492538038062004925833981016040819052620000359162000465565b6040518060400160405280601481526020017f5369676e61747572654d696e7445524331313535000000000000000000000000815250604051806040016040528060018152602001603160f81b815250878787878783838160009080519060200190620000a4929190620002d5565b508051620000ba906001906020840190620002d5565b505050620000ce856200018e60201b60201c565b620000e3826001600160801b038316620001e0565b5050845160209586012084519486019490942060e08590526101008190524660a0818152604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818b01819052818301999099526060810194909452608080850193909352308483018190528151808603909301835260c0948501909152815191909801209052949094525050610120525062000182816200028b565b50505050505062000564565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b612710811115620002295760405162461bcd60e51b815260206004820152600f60248201526e45786365656473206d61782062707360881b604482015260640160405180910390fd5b600780546001600160a01b0384166001600160b01b03199091168117600160a01b61ffff851602179091556040518281527f90d7ec04bcb8978719414f82e52e4cb651db41d0e6f8cea6118c2191e6183adb9060200160405180910390a25050565b600e80546001600160a01b0319166001600160a01b0383169081179091556040517f299d17e95023f496e0ffc4909cff1a61f74bb5eb18de6f900f4155bfa1b3b33390600090a250565b828054620002e39062000527565b90600052602060002090601f01602090048101928262000307576000855562000352565b82601f106200032257805160ff191683800117855562000352565b8280016001018555821562000352579182015b828111156200035257825182559160200191906001019062000335565b506200036092915062000364565b5090565b5b8082111562000360576000815560010162000365565b80516001600160a01b03811681146200039357600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620003c057600080fd5b81516001600160401b0380821115620003dd57620003dd62000398565b604051601f8301601f19908116603f0116810190828211818310171562000408576200040862000398565b816040528381526020925086838588010111156200042557600080fd5b600091505b838210156200044957858201830151818301840152908201906200042a565b838211156200045b5760008385830101525b9695505050505050565b60008060008060008060c087890312156200047f57600080fd5b6200048a876200037b565b60208801519096506001600160401b0380821115620004a857600080fd5b620004b68a838b01620003ae565b96506040890151915080821115620004cd57600080fd5b50620004dc89828a01620003ae565b945050620004ed606088016200037b565b60808801519093506001600160801b03811681146200050b57600080fd5b91506200051b60a088016200037b565b90509295509295509295565b600181811c908216806200053c57607f821691505b602082108114156200055e57634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05160c05160e0516101005161012051614371620005b46000396000612cea01526000612d3901526000612d1401526000612c6d01526000612c9701526000612cc101526143716000f3fe60806040526004361061018d5760003560e01c806383040532116100dd57806383040532146104055780638da5cb5b14610435578063938e3d7b1461044a578063949c09f71461046a57806395d89b411461048a57806398a6e9931461049f5780639bcf7a15146104b2578063a22cb465146104d2578063ac9650d8146104f2578063b03f45281461051f578063b17cd86f1461053f578063b24f2d391461057e578063bd85b039146105a9578063e8a3d485146105d6578063e985e9c5146105eb578063f242432a14610626578063f5298aca1461064657600080fd5b8062fdd58e1461019257806301ffc9a7146101dd57806306fdde031461020d578063079fe40e1461022f5780630e89341c1461025c57806313af40351461027c5780632419f51b1461029e5780632a55205a146102be5780632eb2c2d6146102ec5780633b1475a71461030c5780634cc157df146103215780634e1273f414610363578063600dd5ea1461039057806363b45e2d146103b05780636b20c454146103c55780636f4f2837146103e5575b600080fd5b34801561019e57600080fd5b506101ca6101ad3660046132c1565b600260209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b3480156101e957600080fd5b506101fd6101f8366004613301565b610666565b60405190151581526020016101d4565b34801561021957600080fd5b506102226106d3565b6040516101d49190613376565b34801561023b57600080fd5b50610244610761565b6040516001600160a01b0390911681526020016101d4565b34801561026857600080fd5b50610222610277366004613396565b610770565b34801561028857600080fd5b5061029c6102973660046133af565b61085e565b005b3480156102aa57600080fd5b506101ca6102b9366004613396565b610897565b3480156102ca57600080fd5b506102de6102d93660046133ca565b610905565b6040516101d49291906133ec565b3480156102f857600080fd5b5061029c61030736600461354e565b610942565b34801561031857600080fd5b50600c546101ca565b34801561032d57600080fd5b5061034161033c366004613396565b6109ac565b604080516001600160a01b03909316835261ffff9091166020830152016101d4565b34801561036f57600080fd5b5061038361037e3660046135f7565b610a17565b6040516101d491906136fc565b34801561039c57600080fd5b5061029c6103ab3660046132c1565b610b2b565b3480156103bc57600080fd5b506009546101ca565b3480156103d157600080fd5b5061029c6103e036600461370f565b610b5d565b3480156103f157600080fd5b5061029c6104003660046133af565b610cb1565b34801561041157600080fd5b506101fd610420366004613396565b600b6020526000908152604090205460ff1681565b34801561044157600080fd5b50610244610cde565b34801561045657600080fd5b5061029c610465366004613782565b610ced565b34801561047657600080fd5b5061029c6104853660046137b6565b610d1a565b34801561049657600080fd5b50610222610ea8565b6102446104ad36600461384e565b610eb5565b3480156104be57600080fd5b5061029c6104cd3660046138ed565b6110a0565b3480156104de57600080fd5b5061029c6104ed366004613930565b6110d4565b3480156104fe57600080fd5b5061051261050d366004613967565b61118d565b6040516101d491906139db565b34801561052b57600080fd5b5061029c61053a366004613a3d565b611281565b34801561054b57600080fd5b5061055f61055a36600461384e565b61132e565b6040805192151583526001600160a01b039091166020830152016101d4565b34801561058a57600080fd5b506007546001600160a01b03811690600160a01b900461ffff16610341565b3480156105b557600080fd5b506101ca6105c4366004613396565b600d6020526000908152604090205481565b3480156105e257600080fd5b50610222611372565b3480156105f757600080fd5b506101fd610606366004613a9b565b600360209081526000928352604080842090915290825290205460ff1681565b34801561063257600080fd5b5061029c610641366004613ace565b61137f565b34801561065257600080fd5b5061029c610661366004613b32565b6113e2565b60006301ffc9a760e01b6001600160e01b0319831614806106975750636cdb3d1360e11b6001600160e01b03198316145b806106b257506303a24d0760e21b6001600160e01b03198316145b806106cd57506001600160e01b0319821663152a902d60e11b145b92915050565b600080546106e090613b65565b80601f016020809104026020016040519081016040528092919081815260200182805461070c90613b65565b80156107595780601f1061072e57610100808354040283529160200191610759565b820191906000526020600020905b81548152906001019060200180831161073c57829003601f168201915b505050505081565b600e546001600160a01b031690565b60008181526004602052604081208054606092919061078e90613b65565b80601f01602080910402602001604051908101604052809291908181526020018280546107ba90613b65565b80156108075780601f106107dc57610100808354040283529160200191610807565b820191906000526020600020905b8154815290600101906020018083116107ea57829003601f168201915b5050505050905060008151111561081e5792915050565b600061082984611489565b90508061083585611625565b604051602001610846929190613ba0565b60405160208183030381529060405292505050919050565b61086661172a565b61088b5760405162461bcd60e51b815260040161088290613bcf565b60405180910390fd5b6108948161174d565b50565b60006108a260095490565b82106108e05760405162461bcd60e51b815260206004820152600d60248201526c092dcecc2d8d2c840d2dcc8caf609b1b6044820152606401610882565b600982815481106108f3576108f3613bf7565b90600052602060002001549050919050565b600080600080610914866109ac565b90945084925061ffff16905061271061092d8287613c23565b6109379190613c58565b925050509250929050565b6001600160a01b03851633148061097c57506001600160a01b038516600090815260036020908152604080832033845290915290205460ff165b6109985760405162461bcd60e51b815260040161088290613c6c565b6109a5858585858561179f565b5050505050565b6000818152600860209081526040808320815180830190925280546001600160a01b0316808352600190910154928201929092528291156109f35780516020820151610a0d565b6007546001600160a01b03811690600160a01b900461ffff165b9250925050915091565b60608151835114610a3a5760405162461bcd60e51b815260040161088290613c98565b600083516001600160401b03811115610a5557610a55613405565b604051908082528060200260200182016040528015610a7e578160200160208202803683370190505b50905060005b8451811015610b235760026000868381518110610aa357610aa3613bf7565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000206000858381518110610adf57610adf613bf7565b6020026020010151815260200190815260200160002054828281518110610b0857610b08613bf7565b6020908102919091010152610b1c81613cc1565b9050610a84565b509392505050565b610b3361172a565b610b4f5760405162461bcd60e51b815260040161088290613bcf565b610b598282611940565b5050565b336001600160a01b038416811480610b9a57506001600160a01b0380851660009081526003602090815260408083209385168352929052205460ff165b610bb65760405162461bcd60e51b815260040161088290613cdc565b8151835114610bf95760405162461bcd60e51b815260206004820152600f60248201526e098cadccee8d040dad2e6dac2e8c6d608b1b6044820152606401610882565b60005b8351811015610c9f57828181518110610c1757610c17613bf7565b602002602001015160026000876001600160a01b03166001600160a01b031681526020019081526020016000206000868481518110610c5857610c58613bf7565b60200260200101518152602001908152602001600020541015610c8d5760405162461bcd60e51b815260040161088290613d07565b610c98600182613d38565b9050610bfc565b50610cab8484846119c4565b50505050565b610cb961172a565b610cd55760405162461bcd60e51b815260040161088290613bcf565b61089481611b46565b6006546001600160a01b031690565b610cf561172a565b610d115760405162461bcd60e51b815260040161088290613bcf565b61089481611b90565b610d2261172a565b610d3e5760405162461bcd60e51b815260040161088290613d50565b6000825111610d5f5760405162461bcd60e51b815260040161088290613d81565b8151835114610da35760405162461bcd60e51b815260206004820152601060248201526f2632b733ba341036b4b9b6b0ba31b41760811b6044820152606401610882565b6000610dae600c5490565b9050806000805b8651811015610e6857600019878281518110610dd357610dd3613bf7565b60200260200101511415610e1e5783878281518110610df457610df4613bf7565b6020908102919091010152610e0a600185613d38565b9350610e17600183613d38565b9150610e56565b83878281518110610e3157610e31613bf7565b602002602001015110610e565760405162461bcd60e51b815260040161088290613daf565b610e61600182613d38565b9050610db5565b508015610e7d57610e7a828286611c72565b50505b82600c81905550610e9f87878760405180602001604052806000815250611cdf565b50505050505050565b600180546106e090613b65565b6000808460c0013511610eda5760405162461bcd60e51b815260040161088290613d81565b600080610ee6600c5490565b905060001986608001351415610f17578091506001600c6000828254610f0c9190613d38565b90915550610f429050565b80866080013510610f3a5760405162461bcd60e51b815260040161088290613daf565b856080013591505b610f4d868686611e28565b92506000610f5e60208801886133af565b9050610f94610f736080890160608a016133af565b60c0890135610f8a6101208b016101008c016133af565b8a60e00135611fbb565b6000610fa66040890160208a016133af565b6001600160a01b031614610fd257610fd283610fc860408a0160208b016133af565b89604001356120ac565b6000198760800135141561102b5761102b83610ff160a08a018a613dd3565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061214b92505050565b61104a81848960c001356040518060200160405280600081525061216a565b82816001600160a01b0316856001600160a01b03167f0b35afaf155daeef41cc46df86f058df2855c57d30ab134647a6b587e7cc8c398a60405161108e9190613e9e565b60405180910390a45050509392505050565b6110a861172a565b6110c45760405162461bcd60e51b815260040161088290613bcf565b6110cf8383836120ac565b505050565b336001600160a01b03831681141561111f5760405162461bcd60e51b815260206004820152600e60248201526d20a8282927ab24a723afa9a2a62360911b6044820152606401610882565b6001600160a01b03818116600081815260036020908152604080832094881680845294825291829020805460ff191687151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3191015b60405180910390a3505050565b6060816001600160401b038111156111a7576111a7613405565b6040519080825280602002602001820160405280156111da57816020015b60608152602001906001900390816111c55790505b50905060005b8281101561127a5761124a308585848181106111fe576111fe613bf7565b90506020028101906112109190613dd3565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061223192505050565b82828151811061125c5761125c613bf7565b6020026020010181905250808061127290613cc1565b9150506111e0565b5092915050565b61128961172a565b6112a55760405162461bcd60e51b815260040161088290613d50565b6000806112b1600c5490565b90506000198514156112e8578091506001600c60008282546112d39190613d38565b909155506112e39050818561214b565b61130b565b8085106113075760405162461bcd60e51b815260040161088290613daf565b8491505b6113268683856040518060200160405280600081525061216a565b505050505050565b60008061133c85858561225d565b6101608601356000908152600f602052604090205490915060ff161580156113685750611368816122b9565b9150935093915050565b600580546106e090613b65565b6001600160a01b0385163314806113b957506001600160a01b038516600090815260036020908152604080832033845290915290205460ff165b6113d55760405162461bcd60e51b815260040161088290613c6c565b6109a585858585856122de565b336001600160a01b03841681148061141f57506001600160a01b0380851660009081526003602090815260408083209385168352929052205460ff165b61143b5760405162461bcd60e51b815260040161088290613cdc565b6001600160a01b038416600090815260026020908152604080832086845290915290205482111561147e5760405162461bcd60e51b815260040161088290613d07565b610cab8484846123f2565b6060600061149660095490565b9050600060098054806020026020016040519081016040528092919081815260200182805480156114e657602002820191906000526020600020905b8154815260200190600101908083116114d2575b5050505050905060005b828110156115ea5781818151811061150a5761150a613bf7565b60200260200101518510156115d857600a600083838151811061152f5761152f613bf7565b60200260200101518152602001908152602001600020805461155090613b65565b80601f016020809104026020016040519081016040528092919081815260200182805461157c90613b65565b80156115c95780601f1061159e576101008083540402835291602001916115c9565b820191906000526020600020905b8154815290600101906020018083116115ac57829003601f168201915b50505050509350505050919050565b6115e3600182613d38565b90506114f0565b5060405162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a59081d1bdad95b9259608a1b6044820152606401610882565b6060816116495750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611673578061165d81613cc1565b915061166c9050600a83613c58565b915061164d565b6000816001600160401b0381111561168d5761168d613405565b6040519080825280601f01601f1916602001820160405280156116b7576020820181803683370190505b5090505b8415611722576116cc600183613fb9565b91506116d9600a86613fd0565b6116e4906030613d38565b60f81b8183815181106116f9576116f9613bf7565b60200101906001600160f81b031916908160001a90535061171b600a86613c58565b94506116bb565b949350505050565b6000611734610cde565b6001600160a01b0316336001600160a01b031614905090565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b81518351146117c05760405162461bcd60e51b815260040161088290613c98565b6001600160a01b0384166117e65760405162461bcd60e51b815260040161088290613fe4565b336117f58187878787876124e4565b60005b84518110156118ec57600085828151811061181557611815613bf7565b60200260200101519050600085838151811061183357611833613bf7565b6020908102919091018101516001600160a01b038b1660009081526002835260408082208683529093529190912054909150818110156118855760405162461bcd60e51b81526004016108829061400a565b6001600160a01b03808b16600090815260026020818152604080842088855282528084208787039055938d168352908152828220868352905290812080548492906118d1908490613d38565b92505081905550505050806118e590613cc1565b90506117f8565b50846001600160a01b0316866001600160a01b0316826001600160a01b03166000805160206142d5833981519152878760405161192a929190614034565b60405180910390a46113268187878787876125f0565b6127108111156119625760405162461bcd60e51b815260040161088290614062565b600780546001600160a01b0384166001600160b01b03199091168117600160a01b61ffff851602179091556040518281527f90d7ec04bcb8978719414f82e52e4cb651db41d0e6f8cea6118c2191e6183adb9060200160405180910390a25050565b6001600160a01b0383166119ea5760405162461bcd60e51b81526004016108829061408b565b8051825114611a0b5760405162461bcd60e51b815260040161088290613c98565b6000339050611a2e818560008686604051806020016040528060008152506124e4565b60005b8351811015611af9576000848281518110611a4e57611a4e613bf7565b602002602001015190506000848381518110611a6c57611a6c613bf7565b6020908102919091018101516001600160a01b0389166000908152600283526040808220868352909352919091205490915081811015611abe5760405162461bcd60e51b81526004016108829061400a565b6001600160a01b0388166000908152600260209081526040808320958352949052929092209103905580611af181613cc1565b915050611a31565b5060006001600160a01b0316846001600160a01b0316826001600160a01b03166000805160206142d58339815191528686604051611b38929190614034565b60405180910390a450505050565b600e80546001600160a01b0319166001600160a01b0383169081179091556040517f299d17e95023f496e0ffc4909cff1a61f74bb5eb18de6f900f4155bfa1b3b33390600090a250565b600060058054611b9f90613b65565b80601f0160208091040260200160405190810160405280929190818152602001828054611bcb90613b65565b8015611c185780601f10611bed57610100808354040283529160200191611c18565b820191906000526020600020905b815481529060010190602001808311611bfb57829003601f168201915b50508551939450611c349360059350602087019250905061320c565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a168183604051611c669291906140b3565b60405180910390a15050565b600080611c7f8486613d38565b60098054600181019091557f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af018190556000818152600a602090815260409091208551929450849350611cd692909186019061320c565b50935093915050565b6001600160a01b038416611d055760405162461bcd60e51b815260040161088290613fe4565b8151835114611d265760405162461bcd60e51b815260040161088290613c98565b33611d36816000878787876124e4565b60005b8451811015611dd257838181518110611d5457611d54613bf7565b602002602001015160026000886001600160a01b03166001600160a01b031681526020019081526020016000206000878481518110611d9557611d95613bf7565b602002602001015181526020019081526020016000206000828254611dba9190613d38565b90915550819050611dca81613cc1565b915050611d39565b50846001600160a01b031660006001600160a01b0316826001600160a01b03166000805160206142d58339815191528787604051611e11929190614034565b60405180910390a46109a5816000878787876125f0565b600080611e3685858561132e565b9250905080611e795760405162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a59081c995c5d595cdd608a1b6044820152606401610882565b42611e8c610140870161012088016140d8565b6001600160801b031611158015611ebd5750611eb0610160860161014087016140d8565b6001600160801b03164211155b611efb5760405162461bcd60e51b815260206004820152600f60248201526e14995c5d595cdd08195e1c1a5c9959608a1b6044820152606401610882565b6000611f0a60208701876133af565b6001600160a01b03161415611f575760405162461bcd60e51b81526020600482015260136024820152721c9958da5c1a595b9d081d5b9919599a5b9959606a1b6044820152606401610882565b60008560c0013511611f935760405162461bcd60e51b8152602060048201526005602482015264302071747960d81b6044820152606401610882565b50610160909301356000908152600f60205260409020805460ff191660011790555090919050565b80611ffc573415611ff75760405162461bcd60e51b81526020600482015260066024820152652156616c756560d01b6044820152606401610882565b610cab565b60006120088285613c23565b905060006001600160a01b03841673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee141561203a575034811461203e565b5034155b8061207f5760405162461bcd60e51b8152602060048201526011602482015270496e76616c6964206d73672076616c756560781b6044820152606401610882565b60006001600160a01b03871615612096578661209e565b61209e610761565b9050610e9f85338386612722565b6127108111156120ce5760405162461bcd60e51b815260040161088290614062565b6040805180820182526001600160a01b038481168083526020808401868152600089815260088352869020945185546001600160a01b031916941693909317845591516001909301929092559151838152909185917f7365cf4122f072a3365c20d54eff9b38d73c096c28e1892ec8f5b0e403a0f12d9101611180565b600082815260046020908152604090912082516110cf9284019061320c565b6001600160a01b0384166121905760405162461bcd60e51b815260040161088290613fe4565b336121b0816000876121a188612767565b6121aa88612767565b876124e4565b6001600160a01b0385166000908152600260209081526040808320878452909152812080548592906121e3908490613d38565b909155505060408051858152602081018590526001600160a01b0380881692600092918516916000805160206142f5833981519152910160405180910390a46109a5816000878787876127b2565b606061225683836040518060600160405280602781526020016143156027913961286d565b9392505050565b600061172283838080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506122b392506122a79150889050612948565b80519060200120612ad4565b90612b01565b60006122c3610cde565b6001600160a01b0316826001600160a01b0316149050919050565b6001600160a01b0384166123045760405162461bcd60e51b815260040161088290613fe4565b336123148187876121a188612767565b6001600160a01b0386166000908152600260209081526040808320878452909152902054838110156123585760405162461bcd60e51b81526004016108829061400a565b6001600160a01b0380881660009081526002602081815260408084208a855282528084208987039055938a168352908152828220888352905290812080548692906123a4908490613d38565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616916000805160206142f5833981519152910160405180910390a4610e9f8288888888886127b2565b6001600160a01b0383166124185760405162461bcd60e51b81526004016108829061408b565b336124478185600061242987612767565b61243287612767565b604051806020016040528060008152506124e4565b6001600160a01b03841660009081526002602090815260408083208684529091529020548281101561248b5760405162461bcd60e51b81526004016108829061400a565b6001600160a01b03858116600081815260026020908152604080832089845282528083208887039055805189815291820188905291938616916000805160206142f5833981519152910160405180910390a45050505050565b6001600160a01b03851661256b5760005b83518110156125695782818151811061251057612510613bf7565b6020026020010151600d600086848151811061252e5761252e613bf7565b6020026020010151815260200190815260200160002060008282546125539190613d38565b90915550612562905081613cc1565b90506124f5565b505b6001600160a01b0384166113265760005b8351811015610e9f5782818151811061259757612597613bf7565b6020026020010151600d60008684815181106125b5576125b5613bf7565b6020026020010151815260200190815260200160002060008282546125da9190613fb9565b909155506125e9905081613cc1565b905061257c565b6001600160a01b0384163b156113265760405163bc197c8160e01b81526001600160a01b0385169063bc197c819061263490899089908890889088906004016140f3565b6020604051808303816000875af192505050801561266f575060408051601f3d908101601f1916820190925261266c91810190614151565b60015b6126f25761267b61416e565b806308c379a014156126b55750612690614189565b8061269b57506126b7565b8060405162461bcd60e51b81526004016108829190613376565b505b60405162461bcd60e51b815260206004820152601060248201526f10a2a92198989a9aa922a1a2a4ab22a960811b6044820152606401610882565b6001600160e01b0319811663bc197c8160e01b14610e9f5760405162461bcd60e51b815260040161088290614212565b8061272c57610cab565b6001600160a01b03841673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee141561275b57611ff78282612b1d565b610cab84848484612bbf565b604080516001808252818301909252606091600091906020808301908036833701905050905082816000815181106127a1576127a1613bf7565b602090810291909101015292915050565b6001600160a01b0384163b156113265760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e61906127f6908990899088908890889060040161423b565b6020604051808303816000875af1925050508015612831575060408051601f3d908101601f1916820190925261282e91810190614151565b60015b61283d5761267b61416e565b6001600160e01b0319811663f23a6e6160e01b14610e9f5760405162461bcd60e51b815260040161088290614212565b606061287884612c18565b6128d35760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610882565b600080856001600160a01b0316856040516128ee9190614275565b600060405180830381855af49150503d8060008114612929576040519150601f19603f3d011682016040523d82523d6000602084013e61292e565b606091505b509150915061293e828286612c27565b9695505050505050565b60607fc7a95ef88f83fa833ccfce325157b7111633b181b6a27181b86415d8d501134d61297860208401846133af565b61298860408501602086016133af565b604085013561299d60808701606088016133af565b60808701356129af60a0890189613dd3565b6040516129bd929190614291565b6040805191829003822060208301989098526001600160a01b03968716908201529385166060850152608084019290925290921660a082015260c081019190915260e08101919091526101000160408051601f1981840301815291905260c083013560e0840135612a36610120860161010087016133af565b612a48610140870161012088016140d8565b612a5a610160880161014089016140d8565b6040805160208101969096528501939093526001600160a01b0390911660608401526001600160801b0390811660808401521660a082015261016084013560c082015260e00160408051601f1981840301815290829052612abe9291602001613ba0565b6040516020818303038152906040529050919050565b60006106cd612ae1612c60565b8360405161190160f01b8152600281019290925260228201526042902090565b6000806000612b108585612d8a565b91509150610b2381612dd0565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114612b6a576040519150601f19603f3d011682016040523d82523d6000602084013e612b6f565b606091505b50509050806110cf5760405162461bcd60e51b815260206004820152601c60248201527b1b985d1a5d99481d1bdad95b881d1c985b9cd9995c8819985a5b195960221b6044820152606401610882565b816001600160a01b0316836001600160a01b03161415612bde57610cab565b6001600160a01b038316301415612c0357611ff76001600160a01b0385168383612f19565b610cab6001600160a01b038516848484612f6f565b6001600160a01b03163b151590565b60608315612c36575081612256565b825115612c465782518084602001fd5b8160405162461bcd60e51b81526004016108829190613376565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148015612cb957507f000000000000000000000000000000000000000000000000000000000000000046145b15612ce357507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b90565b600080825160411415612dc15760208301516040840151606085015160001a612db587828585612fa7565b94509450505050612dc9565b506000905060025b9250929050565b6000816004811115612de457612de46142a1565b1415612ded5750565b6001816004811115612e0157612e016142a1565b1415612e4a5760405162461bcd60e51b815260206004820152601860248201527745434453413a20696e76616c6964207369676e617475726560401b6044820152606401610882565b6002816004811115612e5e57612e5e6142a1565b1415612eac5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610882565b6003816004811115612ec057612ec06142a1565b14156108945760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610882565b6110cf8363a9059cbb60e01b8484604051602401612f389291906133ec565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152613061565b6040516001600160a01b0380851660248301528316604482015260648101829052610cab9085906323b872dd60e01b90608401612f38565b6000806fa2a8918ca85bafe22016d0b997e4df60600160ff1b03831115612fd45750600090506003613058565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015613028573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661305157600060019250925050613058565b9150600090505b94509492505050565b60006130b6826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166131339092919063ffffffff16565b8051909150156110cf57808060200190518101906130d491906142b7565b6110cf5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610882565b606061172284846000858561314785612c18565b6131935760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610882565b600080866001600160a01b031685876040516131af9190614275565b60006040518083038185875af1925050503d80600081146131ec576040519150601f19603f3d011682016040523d82523d6000602084013e6131f1565b606091505b5091509150613201828286612c27565b979650505050505050565b82805461321890613b65565b90600052602060002090601f01602090048101928261323a5760008555613280565b82601f1061325357805160ff1916838001178555613280565b82800160010185558215613280579182015b82811115613280578251825591602001919060010190613265565b5061328c929150613290565b5090565b5b8082111561328c5760008155600101613291565b80356001600160a01b03811681146132bc57600080fd5b919050565b600080604083850312156132d457600080fd5b6132dd836132a5565b946020939093013593505050565b6001600160e01b03198116811461089457600080fd5b60006020828403121561331357600080fd5b8135612256816132eb565b60005b83811015613339578181015183820152602001613321565b83811115610cab5750506000910152565b6000815180845261336281602086016020860161331e565b601f01601f19169290920160200192915050565b602081526000612256602083018461334a565b6001600160a01b03169052565b6000602082840312156133a857600080fd5b5035919050565b6000602082840312156133c157600080fd5b612256826132a5565b600080604083850312156133dd57600080fd5b50508035926020909101359150565b6001600160a01b03929092168252602082015260400190565b634e487b7160e01b600052604160045260246000fd5b601f8201601f191681016001600160401b038111828210171561344057613440613405565b6040525050565b60006001600160401b0382111561346057613460613405565b5060051b60200190565b600082601f83011261347b57600080fd5b8135602061348882613447565b604051613495828261341b565b83815260059390931b85018201928281019150868411156134b557600080fd5b8286015b848110156134d057803583529183019183016134b9565b509695505050505050565b600082601f8301126134ec57600080fd5b81356001600160401b0381111561350557613505613405565b60405161351c601f8301601f19166020018261341b565b81815284602083860101111561353157600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a0868803121561356657600080fd5b61356f866132a5565b945061357d602087016132a5565b935060408601356001600160401b038082111561359957600080fd5b6135a589838a0161346a565b945060608801359150808211156135bb57600080fd5b6135c789838a0161346a565b935060808801359150808211156135dd57600080fd5b506135ea888289016134db565b9150509295509295909350565b6000806040838503121561360a57600080fd5b82356001600160401b038082111561362157600080fd5b818501915085601f83011261363557600080fd5b8135602061364282613447565b60405161364f828261341b565b83815260059390931b850182019282810191508984111561366f57600080fd5b948201945b8386101561369457613685866132a5565b82529482019490820190613674565b965050860135925050808211156136aa57600080fd5b506136b78582860161346a565b9150509250929050565b600081518084526020808501945080840160005b838110156136f1578151875295820195908201906001016136d5565b509495945050505050565b60208152600061225660208301846136c1565b60008060006060848603121561372457600080fd5b61372d846132a5565b925060208401356001600160401b038082111561374957600080fd5b6137558783880161346a565b9350604086013591508082111561376b57600080fd5b506137788682870161346a565b9150509250925092565b60006020828403121561379457600080fd5b81356001600160401b038111156137aa57600080fd5b611722848285016134db565b600080600080608085870312156137cc57600080fd5b6137d5856132a5565b935060208501356001600160401b03808211156137f157600080fd5b6137fd8883890161346a565b9450604087013591508082111561381357600080fd5b61381f8883890161346a565b9350606087013591508082111561383557600080fd5b50613842878288016134db565b91505092959194509250565b60008060006040848603121561386357600080fd5b83356001600160401b038082111561387a57600080fd5b90850190610180828803121561388f57600080fd5b909350602085013590808211156138a557600080fd5b818601915086601f8301126138b957600080fd5b8135818111156138c857600080fd5b8760208285010111156138da57600080fd5b6020830194508093505050509250925092565b60008060006060848603121561390257600080fd5b83359250613912602085016132a5565b9150604084013590509250925092565b801515811461089457600080fd5b6000806040838503121561394357600080fd5b61394c836132a5565b9150602083013561395c81613922565b809150509250929050565b6000806020838503121561397a57600080fd5b82356001600160401b038082111561399157600080fd5b818501915085601f8301126139a557600080fd5b8135818111156139b457600080fd5b8660208260051b85010111156139c957600080fd5b60209290920196919550909350505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015613a3057603f19888603018452613a1e85835161334a565b94509285019290850190600101613a02565b5092979650505050505050565b60008060008060808587031215613a5357600080fd5b613a5c856132a5565b93506020850135925060408501356001600160401b03811115613a7e57600080fd5b613a8a878288016134db565b949793965093946060013593505050565b60008060408385031215613aae57600080fd5b613ab7836132a5565b9150613ac5602084016132a5565b90509250929050565b600080600080600060a08688031215613ae657600080fd5b613aef866132a5565b9450613afd602087016132a5565b9350604086013592506060860135915060808601356001600160401b03811115613b2657600080fd5b6135ea888289016134db565b600080600060608486031215613b4757600080fd5b613b50846132a5565b95602085013595506040909401359392505050565b600181811c90821680613b7957607f821691505b60208210811415613b9a57634e487b7160e01b600052602260045260246000fd5b50919050565b60008351613bb281846020880161331e565b835190830190613bc681836020880161331e565b01949350505050565b6020808252600e908201526d139bdd08185d5d1a1bdc9a5e995960921b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615613c3d57613c3d613c0d565b500290565b634e487b7160e01b600052601260045260246000fd5b600082613c6757613c67613c42565b500490565b6020808252601290820152710853d5d3915497d3d497d054141493d5915160721b604082015260600190565b6020808252600f908201526e0988a9c8ea890be9a92a69a82a8869608b1b604082015260600190565b6000600019821415613cd557613cd5613c0d565b5060010190565b6020808252601190820152702ab730b8383937bb32b21031b0b63632b960791b604082015260600190565b602080825260179082015276139bdd08195b9bdd59da081d1bdad95b9cc81bdddb9959604a1b604082015260600190565b60008219821115613d4b57613d4b613c0d565b500190565b6020808252601790820152762737ba1030baba3437b934bd32b2103a379036b4b73a1760491b604082015260600190565b60208082526014908201527326b4b73a34b733903d32b937903a37b5b2b7399760611b604082015260600190565b6020808252600a90820152691a5b9d985b1a59081a5960b21b604082015260600190565b6000808335601e19843603018112613dea57600080fd5b8301803591506001600160401b03821115613e0457600080fd5b602001915036819003821315612dc957600080fd5b6000808335601e19843603018112613e3057600080fd5b83016020810192503590506001600160401b03811115613e4f57600080fd5b803603831315612dc957600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b80356001600160801b03811681146132bc57600080fd5b60208152613eb760208201613eb2846132a5565b613389565b6000613ec5602084016132a5565b613ed26040840182613389565b5060408301356060830152613ee9606084016132a5565b613ef66080840182613389565b50608083013560a0830152613f0e60a0840184613e19565b6101808060c0860152613f266101a086018385613e5e565b925060c086013560e0860152610100915060e086013582860152613f4b8287016132a5565b9150610120613f5c81870184613389565b613f67818801613e87565b925050610140613f81818701846001600160801b03169052565b613f8c818801613e87565b925050610160613fa6818701846001600160801b03169052565b9590950135939094019290925250919050565b600082821015613fcb57613fcb613c0d565b500390565b600082613fdf57613fdf613c42565b500690565b6020808252600c908201526b2a27afad22a927afa0a2222960a11b604082015260600190565b60208082526010908201526f125394d551919250d251539517d0905360821b604082015260600190565b60408152600061404760408301856136c1565b828103602084015261405981856136c1565b95945050505050565b6020808252600f908201526e45786365656473206d61782062707360881b604082015260600190565b6020808252600e908201526d232927a6afad22a927afa0a2222960911b604082015260600190565b6040815260006140c6604083018561334a565b8281036020840152614059818561334a565b6000602082840312156140ea57600080fd5b61225682613e87565b6001600160a01b0386811682528516602082015260a06040820181905260009061411f908301866136c1565b828103606084015261413181866136c1565b90508281036080840152614145818561334a565b98975050505050505050565b60006020828403121561416357600080fd5b8151612256816132eb565b600060033d1115612d875760046000803e5060005160e01c90565b600060443d10156141975790565b6040516003193d81016004833e81513d6001600160401b0381602484011181841117156141c657505050505090565b82850191508151818111156141de5750505050505090565b843d87010160208285010111156141f85750505050505090565b6142076020828601018761341b565b509095945050505050565b6020808252600f908201526e1513d2d15394d7d491529150d51151608a1b604082015260600190565b6001600160a01b03868116825285166020820152604081018490526060810183905260a0608082018190526000906132019083018461334a565b6000825161428781846020870161331e565b9190910192915050565b8183823760009101908152919050565b634e487b7160e01b600052602160045260246000fd5b6000602082840312156142c957600080fd5b81516122568161392256fe4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fbc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220f0970dcf324aa704ccb3952901eac84bd6782fe6154a07e7757f59d0bbed7f0d64736f6c634300080c0033",
    "sourceMap": "838:3988:4:-:0;;;1103:353;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2455:602:238;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2455:602:238;;;1327:13:4;1342:5;1349:7;1358:17;1377:11;2199:5:0;2206:7;1090:5:20;1083:4;:12;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1105:16:20;;;;:6;;:16;;;;;:::i;:::-;;1017:111;;2225:26:0::1;2237:13;2225:11;;;:26;;:::i;:::-;2261:56;2286:17:::0;-1:-1:-1;;;;;2261:56:0;::::1;:24;:56::i;:::-;-1:-1:-1::0;;2541:22:238;;;;;;;2597:25;;;;;;;;;2778;;;;2813:31;;;;2873:13;2854:32;;;;-1:-1:-1;3633:73:238;;2651:117;3633:73;;;2995:25:644;;;3036:18;;;3029:34;;;;-1:-1:-1;3079:18:644;;3072:34;;;;3122:18;;;;3115:34;;;;3700:4:238;3165:19:644;;;3158:61;;;3633:73:238;;;;;;;;;;2967:19:644;;;;3633:73:238;;;3623:84;;;;;;;2896:85;;2991:28;;;;-1:-1:-1;;3029:21:238;;-1:-1:-1;1400:49:4::1;1427:21:::0;1400:26:::1;:49::i;:::-;1103:353:::0;;;;;;838:3988;;1421:172:68;1501:6;;;-1:-1:-1;;;;;1517:18:68;;;-1:-1:-1;;;;;;1517:18:68;;;;;;;1551:35;;1501:6;;;1517:18;1501:6;;1551:35;;1480:18;;1551:35;1470:123;1421:172;:::o;3430:334:75:-;3549:6;3535:11;:20;3531:76;;;3571:25;;-1:-1:-1;;;3571:25:75;;2412:2:644;3571:25:75;;;2394:21:644;2451:2;2431:18;;;2424:30;-1:-1:-1;;;2470:18:644;;;2463:45;2525:18;;3571:25:75;;;;;;;3531:76;3617:16;:36;;-1:-1:-1;;;;;3617:36:75;;-1:-1:-1;;;;;;3663:32:75;;;;;-1:-1:-1;;;3663:32:75;;;;;;;;3711:46;;2700:25:644;;;3711:46:75;;2688:2:644;2673:18;3711:46:75;;;;;;;3430:334;;:::o;1499:170:72:-;1578:9;:26;;-1:-1:-1;;;;;;1578:26:72;-1:-1:-1;;;;;1578:26:72;;;;;;;;1619:43;;;;-1:-1:-1;;1619:43:72;1499:170;:::o;838:3988:4:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;838:3988:4;;;-1:-1:-1;838:3988:4;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:177:644;93:13;;-1:-1:-1;;;;;135:31:644;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:127::-;257:10;252:3;248:20;245:1;238:31;288:4;285:1;278:15;312:4;309:1;302:15;328:885;382:5;435:3;428:4;420:6;416:17;412:27;402:55;;453:1;450;443:12;402:55;476:13;;-1:-1:-1;;;;;538:10:644;;;535:36;;;551:18;;:::i;:::-;626:2;620:9;594:2;680:13;;-1:-1:-1;;676:22:644;;;700:2;672:31;668:40;656:53;;;724:18;;;744:22;;;721:46;718:72;;;770:18;;:::i;:::-;810:10;806:2;799:22;845:2;837:6;830:18;867:4;857:14;;912:3;907:2;902;894:6;890:15;886:24;883:33;880:53;;;929:1;926;919:12;880:53;951:1;942:10;;961:133;975:2;972:1;969:9;961:133;;;1063:14;;;1059:23;;1053:30;1032:14;;;1028:23;;1021:63;986:10;;;;961:133;;;1112:2;1109:1;1106:9;1103:80;;;1171:1;1166:2;1161;1153:6;1149:15;1145:24;1138:35;1103:80;1201:6;328:885;-1:-1:-1;;;;;;328:885:644:o;1218:987::-;1353:6;1361;1369;1377;1385;1393;1446:3;1434:9;1425:7;1421:23;1417:33;1414:53;;;1463:1;1460;1453:12;1414:53;1486:40;1516:9;1486:40;:::i;:::-;1570:2;1555:18;;1549:25;1476:50;;-1:-1:-1;;;;;;1623:14:644;;;1620:34;;;1650:1;1647;1640:12;1620:34;1673:61;1726:7;1717:6;1706:9;1702:22;1673:61;:::i;:::-;1663:71;;1780:2;1769:9;1765:18;1759:25;1743:41;;1809:2;1799:8;1796:16;1793:36;;;1825:1;1822;1815:12;1793:36;;1848:63;1903:7;1892:8;1881:9;1877:24;1848:63;:::i;:::-;1838:73;;;1930:49;1975:2;1964:9;1960:18;1930:49;:::i;:::-;2022:3;2007:19;;2001:26;1920:59;;-1:-1:-1;;;;;;2056:31:644;;2046:42;;2036:70;;2102:1;2099;2092:12;2036:70;2125:5;-1:-1:-1;2149:50:644;2194:3;2179:19;;2149:50;:::i;:::-;2139:60;;1218:987;;;;;;;;:::o;3230:380::-;3309:1;3305:12;;;;3352;;;3373:61;;3427:4;3419:6;3415:17;3405:27;;3373:61;3480:2;3472:6;3469:14;3449:18;3446:38;3443:161;;;3526:10;3521:3;3517:20;3514:1;3507:31;3561:4;3558:1;3551:15;3589:4;3586:1;3579:15;3443:161;;3230:380;;;:::o;:::-;838:3988:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "838:3988:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;645:64:20;;;;;;;;;;-1:-1:-1;645:64:20;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;597:25:644;;;585:2;570:18;645:64:20;;;;;;;;8393:449:0;;;;;;;;;;-1:-1:-1;8393:449:0;;;;;:::i;:::-;;:::i;:::-;;;1184:14:644;;1177:22;1159:41;;1147:2;1132:18;8393:449:0;1019:187:644;418:18:20;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;676:104:72:-;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;2235:32:644;;;2217:51;;2205:2;2190:18;676:104:72;2071:203:644;2719:359:0;;;;;;;;;;-1:-1:-1;2719:359:0;;;;;:::i;:::-;;:::i;1133:173:68:-;;;;;;;;;;-1:-1:-1;1133:173:68;;;;;:::i;:::-;;:::i;:::-;;1973:203:52;;;;;;;;;;-1:-1:-1;1973:203:52;;;;;:::i;:::-;;:::i;1421:347:75:-;;;;;;;;;;-1:-1:-1;1421:347:75;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;3088:360:20:-;;;;;;;;;;-1:-1:-1;3088:360:20;;;;;:::i;:::-;;:::i;9101:109:0:-;;;;;;;;;;-1:-1:-1;9185:18:0;;9101:109;;2008:381:75;;;;;;;;;;-1:-1:-1;2008:381:75;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;6188:32:644;;;6170:51;;6269:6;6257:19;;;6252:2;6237:18;;6230:47;6143:18;2008:381:75;5998:285:644;1788:482:20;;;;;;;;;;-1:-1:-1;1788:482:20;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3087:256:75:-;;;;;;;;;;-1:-1:-1;3087:256:75;;;;;:::i;:::-;;:::i;1655:96:52:-;;;;;;;;;;-1:-1:-1;1729:8:52;:15;1655:96;;7537:564:0;;;;;;;;;;-1:-1:-1;7537:564:0;;;;;:::i;:::-;;:::i;1189:228:72:-;;;;;;;;;;-1:-1:-1;1189:228:72;;;;;:::i;:::-;;:::i;898:43:52:-;;;;;;;;;;-1:-1:-1;898:43:52;;;;;:::i;:::-;;;;;;;;;;;;;;;;871:86:68;;;;;;;;;;;;;:::i;1003:188:54:-;;;;;;;;;;-1:-1:-1;1003:188:54;;;;;:::i;:::-;;:::i;5528:1054:0:-;;;;;;;;;;-1:-1:-1;5528:1054:0;;;;;:::i;:::-;;:::i;442:20:20:-;;;;;;;;;;;;;:::i;1894:1350:4:-;;;;;;:::i;:::-;;:::i;4281:288:75:-;;;;;;;;;;-1:-1:-1;4281:288:75;;;;;:::i;:::-;;:::i;2457:291:20:-;;;;;;;;;;-1:-1:-1;2457:291:20;;;;;:::i;:::-;;:::i;698:319:63:-;;;;;;;;;;-1:-1:-1;698:319:63;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4009:639:0:-;;;;;;;;;;-1:-1:-1;4009:639:0;;;;;:::i;:::-;;:::i;962:293:79:-;;;;;;;;;;-1:-1:-1;962:293:79;;;;;:::i;:::-;;:::i;:::-;;;;13884:14:644;;13877:22;13859:41;;-1:-1:-1;;;;;13936:32:644;;;13931:2;13916:18;;13909:60;13832:18;962:293:79;13691:284:644;2499:144:75;;;;;;;;;;-1:-1:-1;2599:16:75;;-1:-1:-1;;;;;2599:16:75;;;-1:-1:-1;;;2624:10:75;;;;2499:144;;1786:46:0;;;;;;;;;;-1:-1:-1;1786:46:0;;;;;:::i;:::-;;;;;;;;;;;;;;565:34:54;;;;;;;;;;;;;:::i;716:68:20:-;;;;;;;;;;-1:-1:-1;716:68:20;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;2754:328;;;;;;;;;;-1:-1:-1;2754:328:20;;;;;:::i;:::-;;:::i;6867:376:0:-;;;;;;;;;;-1:-1:-1;6867:376:0;;;;;:::i;:::-;;:::i;8393:449::-;8496:4;-1:-1:-1;;;;;;;;;8531:25:0;;;;:100;;-1:-1:-1;;;;;;;;;;8606:25:0;;;8531:100;:176;;;-1:-1:-1;;;;;;;;;;8682:25:0;;;8531:176;:279;;;-1:-1:-1;;;;;;;8769:41:0;;-1:-1:-1;;;8769:41:0;8531:279;8512:298;8393:449;-1:-1:-1;;8393:449:0:o;418:18:20:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;676:104:72:-;764:9;;-1:-1:-1;;;;;764:9:72;;676:104::o;2719:359:0:-;2813:25;2841:14;;;:4;:14;;;;;2813:42;;2788:13;;2813:25;2841:14;2813:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2897:1;2875:11;2869:25;:29;2865:78;;;2921:11;2719:359;-1:-1:-1;;2719:359:0:o;2865:78::-;2953:22;2978:21;2990:8;2978:11;:21::i;:::-;2953:46;;3040:8;3050:19;:8;:17;:19::i;:::-;3023:47;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3009:62;;;;2719:359;;;:::o;1133:173:68:-;1203:14;:12;:14::i;:::-;1198:70;;1233:24;;-1:-1:-1;;;1233:24:68;;;;;;;:::i;:::-;;;;;;;;1198:70;1277:22;1289:9;1277:11;:22::i;:::-;1133:173;:::o;1973:203:52:-;2037:7;2070:17;1729:8;:15;;1655:96;2070:17;2060:6;:27;2056:81;;2103:23;;-1:-1:-1;;;2103:23:52;;16588:2:644;2103:23:52;;;16570:21:644;16627:2;16607:18;;;16600:30;-1:-1:-1;;;16646:18:644;;;16639:43;16699:18;;2103:23:52;16386:337:644;2056:81:52;2153:8;2162:6;2153:16;;;;;;;;:::i;:::-;;;;;;;;;2146:23;;1973:203;;;:::o;1421:347:75:-;1558:16;1576:21;1614:17;1633:11;1648:31;1671:7;1648:22;:31::i;:::-;1613:66;;-1:-1:-1;1613:66:75;;-1:-1:-1;1613:66:75;;;-1:-1:-1;1755:6:75;1736:15;1613:66;1736:9;:15;:::i;:::-;1735:26;;;;:::i;:::-;1719:42;;1603:165;;1421:347;;;;;:::o;3088:360:20:-;-1:-1:-1;;;;;3300:18:20;;3308:10;3300:18;;:56;;-1:-1:-1;;;;;;3322:22:20;;;;;;:16;:22;;;;;;;;3345:10;3322:34;;;;;;;;;;3300:56;3292:87;;;;-1:-1:-1;;;3292:87:20;;;;;;;:::i;:::-;3389:52;3412:4;3418:2;3422:3;3427:7;3436:4;3389:22;:52::i;:::-;3088:360;;;;;:::o;2008:381:75:-;2088:7;2152:29;;;:19;:29;;;;;;;;2115:66;;;;;;;;;;-1:-1:-1;;;;;2115:66:75;;;;;;;;;;;;;;;;2088:7;;2211:39;:171;;2327:25;;2361:19;;;;2211:171;;;2270:16;;-1:-1:-1;;;;;2270:16:75;;;-1:-1:-1;;;2295:10:75;;;;2211:171;2192:190;;;;;2008:381;;;:::o;1788:482:20:-;1939:16;1998:3;:10;1979:8;:15;:29;1971:57;;;;-1:-1:-1;;;1971:57:20;;;;;;;:::i;:::-;2039:30;2086:8;:15;-1:-1:-1;;;;;2072:30:20;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2072:30:20;;2039:63;;2118:9;2113:120;2137:8;:15;2133:1;:19;2113:120;;;2192:9;:22;2202:8;2211:1;2202:11;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;2192:22:20;-1:-1:-1;;;;;2192:22:20;;;;;;;;;;;;:30;2215:3;2219:1;2215:6;;;;;;;;:::i;:::-;;;;;;;2192:30;;;;;;;;;;;;2173:13;2187:1;2173:16;;;;;;;;:::i;:::-;;;;;;;;;;:49;2154:3;;;:::i;:::-;;;2113:120;;;-1:-1:-1;2250:13:20;1788:482;-1:-1:-1;;;1788:482:20:o;3087:256:75:-;3199:20;:18;:20::i;:::-;3194:76;;3235:24;;-1:-1:-1;;;3235:24:75;;;;;;;:::i;3194:76::-;3280:56;3305:17;3324:11;3280:24;:56::i;:::-;3087:256;;:::o;7537:564:0:-;7701:10;-1:-1:-1;;;;;7730:16:0;;;;;:52;;-1:-1:-1;;;;;;7750:24:0;;;;;;;:16;:24;;;;;;;;:32;;;;;;;;;;;;7730:52;7722:82;;;;-1:-1:-1;;;7722:82:0;;;;;;;:::i;:::-;7842:8;:15;7822:9;:16;:35;7814:63;;;;-1:-1:-1;;;7814:63:0;;18801:2:644;7814:63:0;;;18783:21:644;18840:2;18820:18;;;18813:30;-1:-1:-1;;;18859:18:644;;;18852:45;18914:18;;7814:63:0;18599:339:644;7814:63:0;7893:9;7888:157;7912:9;:16;7908:1;:20;7888:157;;;7995:8;8004:1;7995:11;;;;;;;;:::i;:::-;;;;;;;7960:9;:17;7970:6;-1:-1:-1;;;;;7960:17:0;-1:-1:-1;;;;;7960:17:0;;;;;;;;;;;;:31;7978:9;7988:1;7978:12;;;;;;;;:::i;:::-;;;;;;;7960:31;;;;;;;;;;;;:46;;7952:82;;;;-1:-1:-1;;;7952:82:0;;;;;;;:::i;:::-;7930:6;7935:1;7930:6;;:::i;:::-;;;7888:157;;;;8055:39;8066:6;8074:9;8085:8;8055:10;:39::i;:::-;7674:427;7537:564;;;:::o;1189:228:72:-;1279:29;:27;:29::i;:::-;1274:85;;1324:24;;-1:-1:-1;;;1324:24:72;;;;;;;:::i;1274:85::-;1368:42;1395:14;1368:26;:42::i;871:86:68:-;944:6;;-1:-1:-1;;;;;944:6:68;;871:86::o;1003:188:54:-;1080:20;:18;:20::i;:::-;1075:76;;1116:24;;-1:-1:-1;;;1116:24:54;;;;;;;:::i;1075:76::-;1161:23;1179:4;1161:17;:23::i;5528:1054:0:-;5712:10;:8;:10::i;:::-;5704:46;;;;-1:-1:-1;;;5704:46:0;;;;;;;:::i;:::-;5786:1;5768:8;:15;:19;5760:52;;;;-1:-1:-1;;;5760:52:0;;;;;;;:::i;:::-;5850:8;:15;5830:9;:16;:35;5822:64;;;;-1:-1:-1;;;5822:64:0;;20331:2:644;5822:64:0;;;20313:21:644;20370:2;20350:18;;;20343:30;-1:-1:-1;;;20389:18:644;;;20382:46;20445:18;;5822:64:0;20129:340:644;5822:64:0;5897:20;5920:19;9185:18;;;9101:109;5920:19;5897:42;-1:-1:-1;5897:42:0;5949:25;;6031:333;6055:9;:16;6051:1;:20;6031:333;;;-1:-1:-1;;6099:9:0;6109:1;6099:12;;;;;;;;:::i;:::-;;;;;;;:33;6095:259;;;6167:12;6152:9;6162:1;6152:12;;;;;;;;:::i;:::-;;;;;;;;;;:27;6198:17;6214:1;6198:17;;:::i;:::-;;-1:-1:-1;6233:17:0;6249:1;6233:17;;:::i;:::-;;;6095:259;;;6312:12;6297:9;6307:1;6297:12;;;;;;;;:::i;:::-;;;;;;;:27;6289:50;;;;-1:-1:-1;;;6289:50:0;;;;;;;:::i;:::-;6073:6;6078:1;6073:6;;:::i;:::-;;;6031:333;;;-1:-1:-1;6378:16:0;;6374:108;;6410:61;6429:17;6448:12;6462:8;6410:18;:61::i;:::-;;;6374:108;6513:12;6492:18;:33;;;;6535:40;6546:3;6551:9;6562:8;6535:40;;;;;;;;;;;;:10;:40::i;:::-;5694:888;;;5528:1054;;;;:::o;442:20:20:-;;;;;;;:::i;1894:1350:4:-;2058:14;2112:1;2096:4;:13;;;:17;2088:50;;;;-1:-1:-1;;;2088:50:4;;;;;;;:::i;:::-;2149:21;2180:20;2203:19;9185:18:0;;;9101:109;2203:19:4;2180:42;;-1:-1:-1;;2237:4:4;:12;;;:33;2233:252;;;2302:12;2286:28;;2350:1;2328:18;;:23;;;;;;;:::i;:::-;;;;-1:-1:-1;2233:252:4;;-1:-1:-1;2233:252:4;;2405:12;2390:4;:12;;;:27;2382:50;;;;-1:-1:-1;;;2382:50:4;;;;;;;:::i;:::-;2462:4;:12;;;2446:28;;2233:252;2543:33;2559:4;2565:10;;2543:15;:33::i;:::-;2534:42;-1:-1:-1;2587:16:4;2606:7;;;;:4;:7;:::i;:::-;2587:26;-1:-1:-1;2649:97:4;2670:25;;;;;;;;:::i;:::-;2697:13;;;;2712;;;;;;;;:::i;:::-;2727:4;:18;;;2649:20;:97::i;:::-;2835:1;2802:21;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2802:35:4;;2798:146;;2853:80;2879:13;2894:21;;;;;;;;:::i;:::-;2917:4;:15;;;2853:25;:80::i;:::-;-1:-1:-1;;2977:4:4;:12;;;:33;2973:101;;;3026:37;3039:13;3054:8;;;;:4;:8;:::i;:::-;3026:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3026:12:4;;-1:-1:-1;;;3026:37:4:i;:::-;3108:49;3114:8;3124:13;3139:4;:13;;;3108:49;;;;;;;;;;;;:5;:49::i;:::-;3217:13;3207:8;-1:-1:-1;;;;;3173:64:4;3199:6;-1:-1:-1;;;;;3173:64:4;;3232:4;3173:64;;;;;;:::i;:::-;;;;;;;;2078:1166;;;1894:1350;;;;;:::o;4281:288:75:-;4428:20;:18;:20::i;:::-;4423:76;;4464:24;;-1:-1:-1;;;4464:24:75;;;;;;;:::i;4423:76::-;4509:53;4535:8;4545:10;4557:4;4509:25;:53::i;:::-;4281:288;;;:::o;2457:291:20:-;2567:10;-1:-1:-1;;;;;2595:17:20;;;;;2587:44;;;;-1:-1:-1;;;2587:44:20;;24245:2:644;2587:44:20;;;24227:21:644;24284:2;24264:18;;;24257:30;-1:-1:-1;;;24303:18:644;;;24296:44;24357:18;;2587:44:20;24043:338:644;2587:44:20;-1:-1:-1;;;;;2641:23:20;;;;;;;:16;:23;;;;;;;;:33;;;;;;;;;;;;;:44;;-1:-1:-1;;2641:44:20;;;;;;;;;;2700:41;;1159::644;;;2700::20;;1132:18:644;2700:41:20;;;;;;;;2541:207;2457:291;;:::o;698:319:63:-;775:22;831:4;-1:-1:-1;;;;;819:24:63;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;809:34;;858:9;853:134;873:15;;;853:134;;;922:54;961:4;968;;973:1;968:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;922:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;922:30:63;;-1:-1:-1;;;922:54:63:i;:::-;909:7;917:1;909:10;;;;;;;;:::i;:::-;;;;;;:67;;;;890:3;;;;;:::i;:::-;;;;853:134;;;;698:319;;;;:::o;4009:639:0:-;4169:10;:8;:10::i;:::-;4161:46;;;;-1:-1:-1;;;4161:46:0;;;;;;;:::i;:::-;4218:21;4249:20;4272:19;9185:18;;;9101:109;4272:19;4249:42;;-1:-1:-1;;4306:8:0;:29;4302:291;;;4367:12;4351:28;;4415:1;4393:18;;:23;;;;;;;:::i;:::-;;;;-1:-1:-1;4430:37:0;;-1:-1:-1;4443:12:0;4457:9;4430:12;:37::i;:::-;4302:291;;;4517:12;4506:8;:23;4498:46;;;;-1:-1:-1;;;4498:46:0;;;;;;;:::i;:::-;4574:8;4558:24;;4302:291;4603:38;4609:3;4614:13;4629:7;4603:38;;;;;;;;;;;;:5;:38::i;:::-;4151:497;;4009:639;;;;:::o;962:293:79:-;1094:12;1108:14;1147:33;1163:4;1169:10;;1147:15;:33::i;:::-;1208:8;;;;1201:16;;;;:6;:16;;;;;;1138:42;;-1:-1:-1;1201:16:79;;1200:17;:48;;;;;1221:27;1241:6;1221:19;:27::i;:::-;1190:58;;962:293;;;;;;:::o;565:34:54:-;;;;;;;:::i;2754:328:20:-;-1:-1:-1;;;;;2941:18:20;;2949:10;2941:18;;:56;;-1:-1:-1;;;;;;2963:22:20;;;;;;:16;:22;;;;;;;;2986:10;2963:34;;;;;;;;;;2941:56;2933:87;;;;-1:-1:-1;;;2933:87:20;;;;;;;:::i;:::-;3030:45;3048:4;3054:2;3058;3062:6;3070:4;3030:17;:45::i;6867:376:0:-;7006:10;-1:-1:-1;;;;;7035:16:0;;;;;:52;;-1:-1:-1;;;;;;7055:24:0;;;;;;;:16;:24;;;;;;;;:32;;;;;;;;;;;;7035:52;7027:82;;;;-1:-1:-1;;;7027:82:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;7127:17:0;;;;;;:9;:17;;;;;;;;:27;;;;;;;;;:38;-1:-1:-1;7127:38:0;7119:74;;;;-1:-1:-1;;;7119:74:0;;;;;;;:::i;:::-;7204:32;7210:6;7218:8;7228:7;7204:5;:32::i;2849:390:52:-;2911:13;2936:25;2964:17;1729:8;:15;;1655:96;2964:17;2936:45;;2991:24;3018:8;2991:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3042:9;3037:161;3061:17;3057:1;:21;3037:161;;;3117:7;3125:1;3117:10;;;;;;;;:::i;:::-;;;;;;;3106:8;:21;3102:86;;;3154:7;:19;3162:7;3170:1;3162:10;;;;;;;;:::i;:::-;;;;;;;3154:19;;;;;;;;;;;3147:26;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2849:390;;;:::o;3102:86::-;3080:6;3085:1;3080:6;;:::i;:::-;;;3037:161;;;-1:-1:-1;3207:25:52;;-1:-1:-1;;;3207:25:52;;25114:2:644;3207:25:52;;;25096:21:644;25153:2;25133:18;;;25126:30;-1:-1:-1;;;25172:18:644;;;25165:45;25227:18;;3207:25:52;24912:339:644;305:703:292;361:13;578:10;574:51;;-1:-1:-1;;604:10:292;;;;;;;;;;;;-1:-1:-1;;;604:10:292;;;;;305:703::o;574:51::-;649:5;634:12;688:75;695:9;;688:75;;720:8;;;;:::i;:::-;;-1:-1:-1;742:10:292;;-1:-1:-1;750:2:292;742:10;;:::i;:::-;;;688:75;;;772:19;804:6;-1:-1:-1;;;;;794:17:292;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;794:17:292;;772:39;;821:150;828:10;;821:150;;854:11;864:1;854:11;;:::i;:::-;;-1:-1:-1;922:10:292;930:2;922:5;:10;:::i;:::-;909:24;;:2;:24;:::i;:::-;896:39;;879:6;886;879:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;879:56:292;;;;;;;;-1:-1:-1;949:11:292;958:2;949:11;;:::i;:::-;;;821:150;;;994:6;305:703;-1:-1:-1;;;;305:703:292:o;10131:115:0:-;10195:4;10232:7;:5;:7::i;:::-;-1:-1:-1;;;;;10218:21:0;:10;-1:-1:-1;;;;;10218:21:0;;10211:28;;10131:115;:::o;1421:172:68:-;1501:6;;;-1:-1:-1;;;;;1517:18:68;;;-1:-1:-1;;;;;;1517:18:68;;;;;;;1551:35;;1501:6;;;1517:18;1501:6;;1551:35;;1480:18;;1551:35;1470:123;1421:172;:::o;4386:967:20:-;4606:7;:14;4592:3;:10;:28;4584:56;;;;-1:-1:-1;;;4584:56:20;;;;;;;:::i;:::-;-1:-1:-1;;;;;4658:16:20;;4650:41;;;;-1:-1:-1;;;4650:41:20;;;;;;;:::i;:::-;4721:10;4742:60;4721:10;4773:4;4779:2;4783:3;4788:7;4797:4;4742:20;:60::i;:::-;4818:9;4813:385;4837:3;:10;4833:1;:14;4813:385;;;4868:10;4881:3;4885:1;4881:6;;;;;;;;:::i;:::-;;;;;;;4868:19;;4901:14;4918:7;4926:1;4918:10;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;4965:15:20;;4943:19;4965:15;;;:9;:15;;;;;;:19;;;;;;;;;;;4918:10;;-1:-1:-1;5006:21:20;;;;4998:50;;;;-1:-1:-1;;;4998:50:20;;;;;;;:::i;:::-;-1:-1:-1;;;;;5090:15:20;;;;;;;:9;:15;;;;;;;;:19;;;;;;;;5112:20;;;5090:42;;5160:13;;;;;;;;;;;:17;;;;;;;;:27;;5126:6;;5090:15;5160:27;;5126:6;;5160:27;:::i;:::-;;;;;;;;4854:344;;;4849:3;;;;:::i;:::-;;;4813:385;;;;5243:2;-1:-1:-1;;;;;5213:47:20;5237:4;-1:-1:-1;;;;;5213:47:20;5227:8;-1:-1:-1;;;;;5213:47:20;-1:-1:-1;;;;;;;;;;;5247:3:20;5252:7;5213:47;;;;;;;:::i;:::-;;;;;;;;5271:75;5307:8;5317:4;5323:2;5327:3;5332:7;5341:4;5271:35;:75::i;3430:334:75:-;3549:6;3535:11;:20;3531:76;;;3571:25;;-1:-1:-1;;;3571:25:75;;;;;;;:::i;3531:76::-;3617:16;:36;;-1:-1:-1;;;;;3617:36:75;;-1:-1:-1;;;;;;3663:32:75;;;;;-1:-1:-1;;;3663:32:75;;;;;;;;3711:46;;597:25:644;;;3711:46:75;;585:2:644;570:18;3711:46:75;;;;;;;3430:334;;:::o;7284:799:20:-;-1:-1:-1;;;;;7431:18:20;;7423:45;;;;-1:-1:-1;;;7423:45:20;;;;;;;:::i;:::-;7500:7;:14;7486:3;:10;:28;7478:56;;;;-1:-1:-1;;;7478:56:20;;;;;;;:::i;:::-;7545:16;7564:10;7545:29;;7585:66;7606:8;7616:4;7630:1;7634:3;7639:7;7585:66;;;;;;;;;;;;:20;:66::i;:::-;7667:9;7662:344;7686:3;:10;7682:1;:14;7662:344;;;7717:10;7730:3;7734:1;7730:6;;;;;;;;:::i;:::-;;;;;;;7717:19;;7750:14;7767:7;7775:1;7767:10;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;7814:15:20;;7792:19;7814:15;;;:9;:15;;;;;;:19;;;;;;;;;;;7767:10;;-1:-1:-1;7855:21:20;;;;7847:50;;;;-1:-1:-1;;;7847:50:20;;;;;;;:::i;:::-;-1:-1:-1;;;;;7939:15:20;;;;;;:9;:15;;;;;;;;:19;;;;;;;;;;7961:20;;7939:42;;7698:3;;;;:::i;:::-;;;;7662:344;;;;8059:1;-1:-1:-1;;;;;8021:55:20;8045:4;-1:-1:-1;;;;;8021:55:20;8035:8;-1:-1:-1;;;;;8021:55:20;-1:-1:-1;;;;;;;;;;;8063:3:20;8068:7;8021:55;;;;;;;:::i;:::-;;;;;;;;7413:670;7284:799;;;:::o;1499:170:72:-;1578:9;:26;;-1:-1:-1;;;;;;1578:26:72;-1:-1:-1;;;;;1578:26:72;;;;;;;;1619:43;;;;-1:-1:-1;;1619:43:72;1499:170;:::o;1273:185:54:-;1339:21;1363:11;1339:35;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1384:18:54;;1339:35;;-1:-1:-1;1384:18:54;;:11;;-1:-1:-1;1384:18:54;;;;-1:-1:-1;1384:18:54;-1:-1:-1;1384:18:54;:::i;:::-;;1418:33;1437:7;1446:4;1418:33;;;;;;;:::i;:::-;;;;;;;;1329:129;1273:185;:::o;4535:362:52:-;4685:25;;4749:24;4760:13;4749:8;:24;:::i;:::-;4821:8;:22;;;;;;;;;;;;;-1:-1:-1;4854:16:52;;;:7;4821:22;4854:16;;;;;;;:36;;4739:34;;-1:-1:-1;4739:34:52;;-1:-1:-1;4854:36:52;;:16;;:36;;;;:::i;:::-;;4535:362;;;;;;:::o;6018:667:20:-;-1:-1:-1;;;;;6190:16:20;;6182:41;;;;-1:-1:-1;;;6182:41:20;;;;;;;:::i;:::-;6255:7;:14;6241:3;:10;:28;6233:56;;;;-1:-1:-1;;;6233:56:20;;;;;;;:::i;:::-;6319:10;6340:66;6319:10;6300:16;6383:2;6387:3;6392:7;6401:4;6340:20;:66::i;:::-;6422:9;6417:101;6441:3;:10;6437:1;:14;6417:101;;;6497:7;6505:1;6497:10;;;;;;;;:::i;:::-;;;;;;;6472:9;:13;6482:2;-1:-1:-1;;;;;6472:13:20;-1:-1:-1;;;;;6472:13:20;;;;;;;;;;;;:21;6486:3;6490:1;6486:6;;;;;;;;:::i;:::-;;;;;;;6472:21;;;;;;;;;;;;:35;;;;;;;:::i;:::-;;;;-1:-1:-1;6453:3:20;;-1:-1:-1;6453:3:20;;;:::i;:::-;;;;6417:101;;;;6569:2;-1:-1:-1;;;;;6533:53:20;6565:1;-1:-1:-1;;;;;6533:53:20;6547:8;-1:-1:-1;;;;;6533:53:20;-1:-1:-1;;;;;;;;;;;6573:3:20;6578:7;6533:53;;;;;;;:::i;:::-;;;;;;;;6597:81;6633:8;6651:1;6655:2;6659:3;6664:7;6673:4;6597:35;:81::i;1502:550:79:-;1599:14;1625:12;1667:24;1674:4;1680:10;;1667:6;:24::i;:::-;1647:44;-1:-1:-1;1647:44:79;-1:-1:-1;1647:44:79;1702:35;;;;-1:-1:-1;;;1702:35:79;;27936:2:644;1702:35:79;;;27918:21:644;27975:2;27955:18;;;27948:30;-1:-1:-1;;;27994:18:644;;;27987:45;28049:18;;1702:35:79;27734:339:644;1702:35:79;1799:15;1768:27;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1768:46:79;;;:94;;;;-1:-1:-1;1837:25:79;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1818:44:79;:15;:44;;1768:94;1747:156;;;;-1:-1:-1;;;1747:156:79;;28471:2:644;1747:156:79;;;28453:21:644;28510:2;28490:18;;;28483:30;-1:-1:-1;;;28529:18:644;;;28522:45;28584:18;;1747:156:79;28269:339:644;1747:156:79;1940:1;1921:7;;;;:4;:7;:::i;:::-;-1:-1:-1;;;;;1921:21:79;;;1913:53;;;;-1:-1:-1;;;1913:53:79;;28815:2:644;1913:53:79;;;28797:21:644;28854:2;28834:18;;;28827:30;-1:-1:-1;;;28873:18:644;;;28866:49;28932:18;;1913:53:79;28613:343:644;1913:53:79;2000:1;1984:4;:13;;;:17;1976:35;;;;-1:-1:-1;;;1976:35:79;;29163:2:644;1976:35:79;;;29145:21:644;29202:1;29182:18;;;29175:29;-1:-1:-1;;;29220:18:644;;;29213:35;29265:18;;1976:35:79;28961:328:644;1976:35:79;-1:-1:-1;2029:8:79;;;;;2022:16;;;;:6;:16;;;;;:23;;-1:-1:-1;;2022:23:79;2041:4;2022:23;;;-1:-1:-1;1502:550:79;;;-1:-1:-1;1502:550:79:o;3973:851:4:-;4172:19;4168:103;;4215:9;:14;4207:33;;;;-1:-1:-1;;;4207:33:4;;29496:2:644;4207:33:4;;;29478:21:644;29535:1;29515:18;;;29508:29;-1:-1:-1;;;29553:18:644;;;29546:36;29599:18;;4207:33:4;29294:329:644;4207:33:4;4254:7;;4168:103;4281:18;4302:33;4321:14;4302:16;:33;:::i;:::-;4281:54;-1:-1:-1;4346:18:4;-1:-1:-1;;;;;4378:45:4;;408:42:284;4378:45:4;4374:176;;;-1:-1:-1;4455:9:4;:23;;4374:176;;;-1:-1:-1;4525:9:4;:14;4374:176;4567:13;4559:43;;;;-1:-1:-1;;;4559:43:4;;29830:2:644;4559:43:4;;;29812:21:644;29869:2;29849:18;;;29842:30;-1:-1:-1;;;29888:18:644;;;29881:47;29945:18;;4559:43:4;29628:341:644;4559:43:4;4613:21;-1:-1:-1;;;;;4637:35:4;;;:84;;4700:21;4637:84;;;4675:22;:20;:22::i;:::-;4613:108;;4731:86;4768:9;4779:10;4791:13;4806:10;4731:36;:86::i;4671:362:75:-;4818:6;4811:4;:13;4807:69;;;4840:25;;-1:-1:-1;;;4840:25:75;;;;;;;:::i;4807:69::-;4918:49;;;;;;;;-1:-1:-1;;;;;4918:49:75;;;;;;;;;;;;;-1:-1:-1;4886:29:75;;;:19;:29;;;;;:81;;;;-1:-1:-1;;;;;;4886:81:75;;;;;;;;;;;-1:-1:-1;4886:81:75;;;;;;;4983:43;;597:25:644;;;4918:49:75;;4886:29;;4983:43;;570:18:644;4983:43:75;451:177:644;5359:117:20;5447:13;;;;:4;:13;;;;;;;;:22;;;;;;;;:::i;5482:530::-;-1:-1:-1;;;;;5629:16:20;;5621:41;;;;-1:-1:-1;;;5621:41:20;;;;;;;:::i;:::-;5692:10;5713:102;5692:10;5673:16;5756:2;5760:21;5778:2;5760:17;:21::i;:::-;5783:25;5801:6;5783:17;:25::i;:::-;5810:4;5713:20;:102::i;:::-;-1:-1:-1;;;;;5826:13:20;;;;;;:9;:13;;;;;;;;:17;;;;;;;;:27;;5847:6;;5826:13;:27;;5847:6;;5826:27;:::i;:::-;;;;-1:-1:-1;;5868:52:20;;;30148:25:644;;;30204:2;30189:18;;30182:34;;;-1:-1:-1;;;;;5868:52:20;;;;5901:1;;5868:52;;;;-1:-1:-1;;;;;;;;;;;5868:52:20;30121:18:644;5868:52:20;;;;;;;5931:74;5962:8;5980:1;5984:2;5988;5992:6;6000:4;5931:30;:74::i;6538:198:288:-;6621:12;6652:77;6673:6;6681:4;6652:77;;;;;;;;;;;;;;;;;:20;:77::i;:::-;6645:84;6538:198;-1:-1:-1;;;6538:198:288:o;2126:204:79:-;2228:7;2254:69;2312:10;;2254:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2254:49:79;;-1:-1:-1;2281:20:79;;-1:-1:-1;2296:4:79;;-1:-1:-1;2281:14:79;:20::i;:::-;2271:31;;;;;;2254:16;:49::i;:::-;:57;;:69::i;3518:134:4:-;3604:4;3638:7;:5;:7::i;:::-;-1:-1:-1;;;;;3627:18:4;:7;-1:-1:-1;;;;;3627:18:4;;3620:25;;3518:134;;;:::o;3636:744:20:-;-1:-1:-1;;;;;3817:16:20;;3809:41;;;;-1:-1:-1;;;3809:41:20;;;;;;;:::i;:::-;3880:10;3901:96;3880:10;3932:4;3938:2;3942:21;3960:2;3942:17;:21::i;3901:96::-;-1:-1:-1;;;;;4030:15:20;;4008:19;4030:15;;;:9;:15;;;;;;;;:19;;;;;;;;;4067:21;;;;4059:50;;;;-1:-1:-1;;;4059:50:20;;;;;;;:::i;:::-;-1:-1:-1;;;;;4143:15:20;;;;;;;:9;:15;;;;;;;;:19;;;;;;;;4165:20;;;4143:42;;4205:13;;;;;;;;;;;:17;;;;;;;;:27;;4179:6;;4143:15;4205:27;;4179:6;;4205:27;:::i;:::-;;;;-1:-1:-1;;4248:46:20;;;30148:25:644;;;30204:2;30189:18;;30182:34;;;-1:-1:-1;;;;;4248:46:20;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;4248:46:20;30121:18:644;4248:46:20;;;;;;;4305:68;4336:8;4346:4;4352:2;4356;4360:6;4368:4;4305:30;:68::i;6691:587::-;-1:-1:-1;;;;;6813:18:20;;6805:45;;;;-1:-1:-1;;;6805:45:20;;;;;;;:::i;:::-;6880:10;6901:102;6880:10;6932:4;6861:16;6950:21;6968:2;6950:17;:21::i;:::-;6973:25;6991:6;6973:17;:25::i;:::-;6901:102;;;;;;;;;;;;:20;:102::i;:::-;-1:-1:-1;;;;;7036:15:20;;7014:19;7036:15;;;:9;:15;;;;;;;;:19;;;;;;;;;7073:21;;;;7065:50;;;;-1:-1:-1;;;7065:50:20;;;;;;;:::i;:::-;-1:-1:-1;;;;;7149:15:20;;;;;;;:9;:15;;;;;;;;:19;;;;;;;;7171:20;;;7149:42;;7217:54;;30148:25:644;;;30189:18;;;30182:34;;;7149:15:20;;7217:54;;;-1:-1:-1;;;;;;;;;;;7217:54:20;30121:18:644;7217:54:20;;;;;;;6795:483;;6691:587;;;:::o;10946:632:0:-;-1:-1:-1;;;;;11258:18:0;;11254:155;;11297:9;11292:107;11316:3;:10;11312:1;:14;11292:107;;;11374:7;11382:1;11374:10;;;;;;;;:::i;:::-;;;;;;;11351:11;:19;11363:3;11367:1;11363:6;;;;;;;;:::i;:::-;;;;;;;11351:19;;;;;;;;;;;;:33;;;;;;;:::i;:::-;;;;-1:-1:-1;11328:3:0;;-1:-1:-1;11328:3:0;;:::i;:::-;;;11292:107;;;;11254:155;-1:-1:-1;;;;;11423:16:0;;11419:153;;11460:9;11455:107;11479:3;:10;11475:1;:14;11455:107;;;11537:7;11545:1;11537:10;;;;;;;;:::i;:::-;;;;;;;11514:11;:19;11526:3;11530:1;11526:6;;;;;;;;:::i;:::-;;;;;;;11514:19;;;;;;;;;;;;:33;;;;;;;:::i;:::-;;;;-1:-1:-1;11491:3:0;;-1:-1:-1;11491:3:0;;:::i;:::-;;;11455:107;;8982:734:20;-1:-1:-1;;;;;9214:14:20;;;:18;9210:500;;9252:79;;-1:-1:-1;;;9252:79:20;;-1:-1:-1;;;;;9252:43:20;;;;;:79;;9296:8;;9306:4;;9312:3;;9317:7;;9326:4;;9252:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9252:79:20;;;;;;;;-1:-1:-1;;9252:79:20;;;;;;;;;;;;:::i;:::-;;;9248:452;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;9612:6;9605:14;;-1:-1:-1;;;9605:14:20;;;;;;;;:::i;9248:452::-;;;9659:26;;-1:-1:-1;;;9659:26:20;;32375:2:644;9659:26:20;;;32357:21:644;32414:2;32394:18;;;32387:30;-1:-1:-1;;;32433:18:644;;;32426:46;32489:18;;9659:26:20;32173:340:644;9248:452:20;-1:-1:-1;;;;;;9410:60:20;;-1:-1:-1;;;9410:60:20;9406:132;;9494:25;;-1:-1:-1;;;9494:25:20;;;;;;;:::i;508:385:284:-;659:12;655:49;;687:7;;655:49;-1:-1:-1;;;;;718:25:284;;408:42;718:25;714:173;;;759:37;783:3;788:7;759:23;:37::i;714:173::-;827:49;845:9;856:5;863:3;868:7;827:17;:49::i;9722:193:20:-;9841:16;;;9855:1;9841:16;;;;;;;;;9788;;9816:22;;9841:16;;;;;;;;;;;;-1:-1:-1;9841:16:20;9816:41;;9878:7;9867:5;9873:1;9867:8;;;;;;;;:::i;:::-;;;;;;;;;;:18;9903:5;9722:193;-1:-1:-1;;9722:193:20:o;8309:667::-;-1:-1:-1;;;;;8516:14:20;;;:18;8512:458;;8554:72;;-1:-1:-1;;;8554:72:20;;-1:-1:-1;;;;;8554:38:20;;;;;:72;;8593:8;;8603:4;;8609:2;;8613:6;;8621:4;;8554:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8554:72:20;;;;;;;;-1:-1:-1;;8554:72:20;;;;;;;;;;;;:::i;:::-;;;8550:410;;;;:::i;:::-;-1:-1:-1;;;;;;8675:55:20;;-1:-1:-1;;;8675:55:20;8671:127;;8754:25;;-1:-1:-1;;;8754:25:20;;;;;;;:::i;6922:387:288:-;7063:12;7095:18;7106:6;7095:10;:18::i;:::-;7087:69;;;;-1:-1:-1;;;7087:69:288;;33630:2:644;7087:69:288;;;33612:21:644;33669:2;33649:18;;;33642:30;33708:34;33688:18;;;33681:62;-1:-1:-1;;;33759:18:644;;;33752:36;33805:19;;7087:69:288;33428:402:644;7087:69:288;7168:12;7182:23;7209:6;-1:-1:-1;;;;;7209:19:288;7229:4;7209:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7167:67;;;;7251:51;7268:7;7277:10;7289:12;7251:16;:51::i;:::-;7244:58;6922:387;-1:-1:-1;;;;;;6922:387:288:o;2402:746:79:-;2476:12;358:286;2611:7;;;;:4;:7;:::i;:::-;2640:21;;;;;;;;:::i;:::-;2683:15;;;;2720:25;;;;;;;;:::i;:::-;2767:12;;;;2817:8;;;;2767:4;2817:8;:::i;:::-;2801:26;;;;;;;:::i;:::-;;;;;;;;;;2549:296;;;34705:25:644;;;;-1:-1:-1;;;;;34804:15:644;;;34784:18;;;34777:43;34856:15;;;34836:18;;;34829:43;34888:18;;;34881:34;;;;34952:15;;;34931:19;;;34924:44;34984:19;;;34977:35;;;;35028:19;;;35021:35;;;;34677:19;;2549:296:79;;;-1:-1:-1;;2549:296:79;;;;;;;;;2895:13;;;;2930:18;;;;2970:13;;;;;;;;:::i;:::-;3005:27;;;;;;;;:::i;:::-;3054:25;;;;;;;;:::i;:::-;2863:264;;;;;;35354:25:644;;;;35395:18;;35388:34;;;;-1:-1:-1;;;;;35458:32:644;;;35438:18;;;35431:60;-1:-1:-1;;;;;35565:15:644;;;35545:18;;;35538:43;35618:15;35597:19;;;35590:44;3101:8:79;;;;35650:19:644;;;35643:35;35326:19;;2863:264:79;;;-1:-1:-1;;2863:264:79;;;;;;;;;;2519:622;;;2863:264;2519:622;;:::i;:::-;;;;;;;;;;;;;2500:641;;2402:746;;;:::o;4339:165:238:-;4416:7;4442:55;4464:20;:18;:20::i;:::-;4486:10;8689:4:237;8683:11;-1:-1:-1;;;8707:23:237;;8759:4;8750:14;;8743:39;;;;8811:4;8802:14;;8795:34;8865:4;8850:20;;;8489:397;3676:227;3754:7;3774:17;3793:18;3815:27;3826:4;3832:9;3815:10;:27::i;:::-;3773:69;;;;3852:18;3864:5;3852:11;:18::i;2532:292:284:-;2714:12;2732:2;-1:-1:-1;;;;;2732:7:284;2748:5;2732:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2713:46;;;2777:7;2769:48;;;;-1:-1:-1;;;2769:48:284;;36572:2:644;2769:48:284;;;36554:21:644;36611:2;36591:18;;;36584:30;-1:-1:-1;;;36630:18:644;;;36623:58;36698:18;;2769:48:284;36370:352:644;2073:396:284;2234:3;-1:-1:-1;;;;;2225:12:284;:5;-1:-1:-1;;;;;2225:12:284;;2221:49;;;2253:7;;2221:49;-1:-1:-1;;;;;2284:22:284;;2301:4;2284:22;2280:183;;;2322:44;-1:-1:-1;;;;;2322:30:284;;2353:3;2358:7;2322:30;:44::i;2280:183::-;2397:55;-1:-1:-1;;;;;2397:34:284;;2432:5;2439:3;2444:7;2397:34;:55::i;1137:320:288:-;-1:-1:-1;;;;;1427:19:288;;:23;;;1137:320::o;7529:692::-;7675:12;7703:7;7699:516;;;-1:-1:-1;7733:10:288;7726:17;;7699:516;7844:17;;:21;7840:365;;8038:10;8032:17;8098:15;8085:10;8081:2;8077:19;8070:44;7840:365;8177:12;8170:20;;-1:-1:-1;;;8170:20:288;;;;;;;;:::i;3143:308:238:-;3196:7;3227:4;-1:-1:-1;;;;;3236:12:238;3219:29;;:66;;;;;3269:16;3252:13;:33;3219:66;3215:230;;;-1:-1:-1;3308:24:238;;3143:308::o;3215:230::-;-1:-1:-1;3633:73:238;;;3392:10;3633:73;;;;38614:25:644;;;;3404:12:238;38655:18:644;;;38648:34;3418:15:238;38698:18:644;;;38691:34;3677:13:238;38741:18:644;;;38734:34;3700:4:238;38784:19:644;;;;38777:61;;;;3633:73:238;;;;;;;;;;38586:19:644;;;;3633:73:238;;;3623:84;;;;;;3143:308::o;3215:230::-;3143:308;:::o;2160:730:237:-;2241:7;2250:12;2278:9;:16;2298:2;2278:22;2274:610;;;2614:4;2599:20;;2593:27;2663:4;2648:20;;2642:27;2720:4;2705:20;;2699:27;2316:9;2691:36;2761:25;2772:4;2691:36;2593:27;2642;2761:10;:25::i;:::-;2754:32;;;;;;;;;2274:610;-1:-1:-1;2833:1:237;;-1:-1:-1;2837:35:237;2274:610;2160:730;;;;;:::o;585:511::-;662:20;653:5;:29;;;;;;;;:::i;:::-;;649:441;;;585:511;:::o;649:441::-;758:29;749:5;:38;;;;;;;;:::i;:::-;;745:345;;;803:34;;-1:-1:-1;;;803:34:237;;37061:2:644;803:34:237;;;37043:21:644;37100:2;37080:18;;;37073:30;-1:-1:-1;;;37119:18:644;;;37112:54;37183:18;;803:34:237;36859:348:644;745:345:237;867:35;858:5;:44;;;;;;;;:::i;:::-;;854:236;;;918:41;;-1:-1:-1;;;918:41:237;;37414:2:644;918:41:237;;;37396:21:644;37453:2;37433:18;;;37426:30;37492:33;37472:18;;;37465:61;37543:18;;918:41:237;37212:355:644;854:236:237;989:30;980:5;:39;;;;;;;;:::i;:::-;;976:114;;;1035:44;;-1:-1:-1;;;1035:44:237;;37774:2:644;1035:44:237;;;37756:21:644;37813:2;37793:18;;;37786:30;37852:34;37832:18;;;37825:62;-1:-1:-1;;;37903:18:644;;;37896:32;37945:19;;1035:44:237;37572:398:644;735:205:226;847:86;867:5;897:23;;;922:2;926:5;874:58;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;874:58:226;;;;;;;;;;;;;;-1:-1:-1;;;;;874:58:226;-1:-1:-1;;;;;;874:58:226;;;;;;;;;;847:19;:86::i;946:241::-;1111:68;;-1:-1:-1;;;;;38233:15:644;;;1111:68:226;;;38215:34:644;38285:15;;38265:18;;;38258:43;38317:18;;;38310:34;;;1084:96:226;;1104:5;;-1:-1:-1;;;1134:27:226;38150:18:644;;1111:68:226;37975:375:644;5084:1494:237;5210:7;;-1:-1:-1;;;;;6121:79:237;;6117:161;;;-1:-1:-1;6232:1:237;;-1:-1:-1;6236:30:237;6216:51;;6117:161;6389:24;;;6372:14;6389:24;;;;;;;;;39076:25:644;;;39149:4;39137:17;;39117:18;;;39110:45;;;;39171:18;;;39164:34;;;39214:18;;;39207:34;;;6389:24:237;;39048:19:644;;6389:24:237;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6389:24:237;;-1:-1:-1;;6389:24:237;;;-1:-1:-1;;;;;;;6427:20:237;;6423:101;;6479:1;6483:29;6463:50;;;;;;;6423:101;6542:6;-1:-1:-1;6550:20:237;;-1:-1:-1;5084:1494:237;;;;;;;;:::o;3241:706:226:-;3660:23;3686:69;3714:4;3686:69;;;;;;;;;;;;;;;;;3694:5;-1:-1:-1;;;;;3686:27:226;;;:69;;;;;:::i;:::-;3769:17;;3660:95;;-1:-1:-1;3769:21:226;3765:176;;3864:10;3853:30;;;;;;;;;;;;:::i;:::-;3845:85;;;;-1:-1:-1;;;3845:85:226;;39704:2:644;3845:85:226;;;39686:21:644;39743:2;39723:18;;;39716:30;39782:34;39762:18;;;39755:62;-1:-1:-1;;;39833:18:644;;;39826:40;39883:19;;3845:85:226;39502:406:644;3827:223:288;3960:12;3991:52;4013:6;4021:4;4027:1;4030:12;3960;5202:18;5213:6;5202:10;:18::i;:::-;5194:60;;;;-1:-1:-1;;;5194:60:288;;40522:2:644;5194:60:288;;;40504:21:644;40561:2;40541:18;;;40534:30;40600:31;40580:18;;;40573:59;40649:18;;5194:60:288;40320:353:644;5194:60:288;5266:12;5280:23;5307:6;-1:-1:-1;;;;;5307:11:288;5327:5;5335:4;5307:33;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5265:75;;;;5357:51;5374:7;5383:10;5395:12;5357:16;:51::i;:::-;5350:58;4914:501;-1:-1:-1;;;;;;;4914:501:288:o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:173:644;82:20;;-1:-1:-1;;;;;131:31:644;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:254::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;436:2;421:18;;;;408:32;;-1:-1:-1;;;192:254:644:o;633:131::-;-1:-1:-1;;;;;;707:32:644;;697:43;;687:71;;754:1;751;744:12;769:245;827:6;880:2;868:9;859:7;855:23;851:32;848:52;;;896:1;893;886:12;848:52;935:9;922:23;954:30;978:5;954:30;:::i;1211:258::-;1283:1;1293:113;1307:6;1304:1;1301:13;1293:113;;;1383:11;;;1377:18;1364:11;;;1357:39;1329:2;1322:10;1293:113;;;1424:6;1421:1;1418:13;1415:48;;;-1:-1:-1;;1459:1:644;1441:16;;1434:27;1211:258::o;1474:::-;1516:3;1554:5;1548:12;1581:6;1576:3;1569:19;1597:63;1653:6;1646:4;1641:3;1637:14;1630:4;1623:5;1619:16;1597:63;:::i;:::-;1714:2;1693:15;-1:-1:-1;;1689:29:644;1680:39;;;;1721:4;1676:50;;1474:258;-1:-1:-1;;1474:258:644:o;1737:220::-;1886:2;1875:9;1868:21;1849:4;1906:45;1947:2;1936:9;1932:18;1924:6;1906:45;:::i;1962:104::-;-1:-1:-1;;;;;2028:31:644;2016:44;;1962:104::o;2279:180::-;2338:6;2391:2;2379:9;2370:7;2366:23;2362:32;2359:52;;;2407:1;2404;2397:12;2359:52;-1:-1:-1;2430:23:644;;2279:180;-1:-1:-1;2279:180:644:o;2464:186::-;2523:6;2576:2;2564:9;2555:7;2551:23;2547:32;2544:52;;;2592:1;2589;2582:12;2544:52;2615:29;2634:9;2615:29;:::i;2655:248::-;2723:6;2731;2784:2;2772:9;2763:7;2759:23;2755:32;2752:52;;;2800:1;2797;2790:12;2752:52;-1:-1:-1;;2823:23:644;;;2893:2;2878:18;;;2865:32;;-1:-1:-1;2655:248:644:o;2908:274::-;-1:-1:-1;;;;;3100:32:644;;;;3082:51;;3164:2;3149:18;;3142:34;3070:2;3055:18;;2908:274::o;3187:127::-;3248:10;3243:3;3239:20;3236:1;3229:31;3279:4;3276:1;3269:15;3303:4;3300:1;3293:15;3319:249;3429:2;3410:13;;-1:-1:-1;;3406:27:644;3394:40;;-1:-1:-1;;;;;3449:34:644;;3485:22;;;3446:62;3443:88;;;3511:18;;:::i;:::-;3547:2;3540:22;-1:-1:-1;;3319:249:644:o;3573:183::-;3633:4;-1:-1:-1;;;;;3658:6:644;3655:30;3652:56;;;3688:18;;:::i;:::-;-1:-1:-1;3733:1:644;3729:14;3745:4;3725:25;;3573:183::o;3761:724::-;3815:5;3868:3;3861:4;3853:6;3849:17;3845:27;3835:55;;3886:1;3883;3876:12;3835:55;3922:6;3909:20;3948:4;3971:43;4011:2;3971:43;:::i;:::-;4043:2;4037:9;4055:31;4083:2;4075:6;4055:31;:::i;:::-;4121:18;;;4213:1;4209:10;;;;4197:23;;4193:32;;;4155:15;;;;-1:-1:-1;4237:15:644;;;4234:35;;;4265:1;4262;4255:12;4234:35;4301:2;4293:6;4289:15;4313:142;4329:6;4324:3;4321:15;4313:142;;;4395:17;;4383:30;;4433:12;;;;4346;;4313:142;;;-1:-1:-1;4473:6:644;3761:724;-1:-1:-1;;;;;;3761:724:644:o;4490:555::-;4532:5;4585:3;4578:4;4570:6;4566:17;4562:27;4552:55;;4603:1;4600;4593:12;4552:55;4639:6;4626:20;-1:-1:-1;;;;;4661:2:644;4658:26;4655:52;;;4687:18;;:::i;:::-;4736:2;4730:9;4748:67;4803:2;4784:13;;-1:-1:-1;;4780:27:644;4809:4;4776:38;4730:9;4748:67;:::i;:::-;4839:2;4831:6;4824:18;4885:3;4878:4;4873:2;4865:6;4861:15;4857:26;4854:35;4851:55;;;4902:1;4899;4892:12;4851:55;4966:2;4959:4;4951:6;4947:17;4940:4;4932:6;4928:17;4915:54;5013:1;4989:15;;;5006:4;4985:26;4978:37;;;;4993:6;4490:555;-1:-1:-1;;;4490:555:644:o;5050:943::-;5204:6;5212;5220;5228;5236;5289:3;5277:9;5268:7;5264:23;5260:33;5257:53;;;5306:1;5303;5296:12;5257:53;5329:29;5348:9;5329:29;:::i;:::-;5319:39;;5377:38;5411:2;5400:9;5396:18;5377:38;:::i;:::-;5367:48;;5466:2;5455:9;5451:18;5438:32;-1:-1:-1;;;;;5530:2:644;5522:6;5519:14;5516:34;;;5546:1;5543;5536:12;5516:34;5569:61;5622:7;5613:6;5602:9;5598:22;5569:61;:::i;:::-;5559:71;;5683:2;5672:9;5668:18;5655:32;5639:48;;5712:2;5702:8;5699:16;5696:36;;;5728:1;5725;5718:12;5696:36;5751:63;5806:7;5795:8;5784:9;5780:24;5751:63;:::i;:::-;5741:73;;5867:3;5856:9;5852:19;5839:33;5823:49;;5897:2;5887:8;5884:16;5881:36;;;5913:1;5910;5903:12;5881:36;;5936:51;5979:7;5968:8;5957:9;5953:24;5936:51;:::i;:::-;5926:61;;;5050:943;;;;;;;;:::o;6288:1208::-;6406:6;6414;6467:2;6455:9;6446:7;6442:23;6438:32;6435:52;;;6483:1;6480;6473:12;6435:52;6523:9;6510:23;-1:-1:-1;;;;;6593:2:644;6585:6;6582:14;6579:34;;;6609:1;6606;6599:12;6579:34;6647:6;6636:9;6632:22;6622:32;;6692:7;6685:4;6681:2;6677:13;6673:27;6663:55;;6714:1;6711;6704:12;6663:55;6750:2;6737:16;6772:4;6795:43;6835:2;6795:43;:::i;:::-;6867:2;6861:9;6879:31;6907:2;6899:6;6879:31;:::i;:::-;6945:18;;;7033:1;7029:10;;;;7021:19;;7017:28;;;6979:15;;;;-1:-1:-1;7057:19:644;;;7054:39;;;7089:1;7086;7079:12;7054:39;7113:11;;;;7133:148;7149:6;7144:3;7141:15;7133:148;;;7215:23;7234:3;7215:23;:::i;:::-;7203:36;;7166:12;;;;7259;;;;7133:148;;;7300:6;-1:-1:-1;;7344:18:644;;7331:32;;-1:-1:-1;;7375:16:644;;;7372:36;;;7404:1;7401;7394:12;7372:36;;7427:63;7482:7;7471:8;7460:9;7456:24;7427:63;:::i;:::-;7417:73;;;6288:1208;;;;;:::o;7501:435::-;7554:3;7592:5;7586:12;7619:6;7614:3;7607:19;7645:4;7674:2;7669:3;7665:12;7658:19;;7711:2;7704:5;7700:14;7732:1;7742:169;7756:6;7753:1;7750:13;7742:169;;;7817:13;;7805:26;;7851:12;;;;7886:15;;;;7778:1;7771:9;7742:169;;;-1:-1:-1;7927:3:644;;7501:435;-1:-1:-1;;;;;7501:435:644:o;7941:261::-;8120:2;8109:9;8102:21;8083:4;8140:56;8192:2;8181:9;8177:18;8169:6;8140:56;:::i;8207:669::-;8334:6;8342;8350;8403:2;8391:9;8382:7;8378:23;8374:32;8371:52;;;8419:1;8416;8409:12;8371:52;8442:29;8461:9;8442:29;:::i;:::-;8432:39;;8522:2;8511:9;8507:18;8494:32;-1:-1:-1;;;;;8586:2:644;8578:6;8575:14;8572:34;;;8602:1;8599;8592:12;8572:34;8625:61;8678:7;8669:6;8658:9;8654:22;8625:61;:::i;:::-;8615:71;;8739:2;8728:9;8724:18;8711:32;8695:48;;8768:2;8758:8;8755:16;8752:36;;;8784:1;8781;8774:12;8752:36;;8807:63;8862:7;8851:8;8840:9;8836:24;8807:63;:::i;:::-;8797:73;;;8207:669;;;;;:::o;8881:321::-;8950:6;9003:2;8991:9;8982:7;8978:23;8974:32;8971:52;;;9019:1;9016;9009:12;8971:52;9059:9;9046:23;-1:-1:-1;;;;;9084:6:644;9081:30;9078:50;;;9124:1;9121;9114:12;9078:50;9147:49;9188:7;9179:6;9168:9;9164:22;9147:49;:::i;9207:869::-;9353:6;9361;9369;9377;9430:3;9418:9;9409:7;9405:23;9401:33;9398:53;;;9447:1;9444;9437:12;9398:53;9470:29;9489:9;9470:29;:::i;:::-;9460:39;;9550:2;9539:9;9535:18;9522:32;-1:-1:-1;;;;;9614:2:644;9606:6;9603:14;9600:34;;;9630:1;9627;9620:12;9600:34;9653:61;9706:7;9697:6;9686:9;9682:22;9653:61;:::i;:::-;9643:71;;9767:2;9756:9;9752:18;9739:32;9723:48;;9796:2;9786:8;9783:16;9780:36;;;9812:1;9809;9802:12;9780:36;9835:63;9890:7;9879:8;9868:9;9864:24;9835:63;:::i;:::-;9825:73;;9951:2;9940:9;9936:18;9923:32;9907:48;;9980:2;9970:8;9967:16;9964:36;;;9996:1;9993;9986:12;9964:36;;10019:51;10062:7;10051:8;10040:9;10036:24;10019:51;:::i;:::-;10009:61;;;9207:869;;;;;;;:::o;10081:861::-;10192:6;10200;10208;10261:2;10249:9;10240:7;10236:23;10232:32;10229:52;;;10277:1;10274;10267:12;10229:52;10317:9;10304:23;-1:-1:-1;;;;;10387:2:644;10379:6;10376:14;10373:34;;;10403:1;10400;10393:12;10373:34;10426:22;;;;10482:3;10464:16;;;10460:26;10457:46;;;10499:1;10496;10489:12;10457:46;10522:2;;-1:-1:-1;10577:2:644;10562:18;;10549:32;;10593:16;;;10590:36;;;10622:1;10619;10612:12;10590:36;10660:8;10649:9;10645:24;10635:34;;10707:7;10700:4;10696:2;10692:13;10688:27;10678:55;;10729:1;10726;10719:12;10678:55;10769:2;10756:16;10795:2;10787:6;10784:14;10781:34;;;10811:1;10808;10801:12;10781:34;10856:7;10851:2;10842:6;10838:2;10834:15;10830:24;10827:37;10824:57;;;10877:1;10874;10867:12;10824:57;10908:2;10904;10900:11;10890:21;;10930:6;10920:16;;;;;10081:861;;;;;:::o;10947:322::-;11024:6;11032;11040;11093:2;11081:9;11072:7;11068:23;11064:32;11061:52;;;11109:1;11106;11099:12;11061:52;11145:9;11132:23;11122:33;;11174:38;11208:2;11197:9;11193:18;11174:38;:::i;:::-;11164:48;;11259:2;11248:9;11244:18;11231:32;11221:42;;10947:322;;;;;:::o;11274:118::-;11360:5;11353:13;11346:21;11339:5;11336:32;11326:60;;11382:1;11379;11372:12;11397:315;11462:6;11470;11523:2;11511:9;11502:7;11498:23;11494:32;11491:52;;;11539:1;11536;11529:12;11491:52;11562:29;11581:9;11562:29;:::i;:::-;11552:39;;11641:2;11630:9;11626:18;11613:32;11654:28;11676:5;11654:28;:::i;:::-;11701:5;11691:15;;;11397:315;;;;;:::o;11717:626::-;11814:6;11822;11875:2;11863:9;11854:7;11850:23;11846:32;11843:52;;;11891:1;11888;11881:12;11843:52;11931:9;11918:23;-1:-1:-1;;;;;12001:2:644;11993:6;11990:14;11987:34;;;12017:1;12014;12007:12;11987:34;12055:6;12044:9;12040:22;12030:32;;12100:7;12093:4;12089:2;12085:13;12081:27;12071:55;;12122:1;12119;12112:12;12071:55;12162:2;12149:16;12188:2;12180:6;12177:14;12174:34;;;12204:1;12201;12194:12;12174:34;12257:7;12252:2;12242:6;12239:1;12235:14;12231:2;12227:23;12223:32;12220:45;12217:65;;;12278:1;12275;12268:12;12217:65;12309:2;12301:11;;;;;12331:6;;-1:-1:-1;11717:626:644;;-1:-1:-1;;;;11717:626:644:o;12348:801::-;12508:4;12537:2;12577;12566:9;12562:18;12607:2;12596:9;12589:21;12630:6;12665;12659:13;12696:6;12688;12681:22;12734:2;12723:9;12719:18;12712:25;;12796:2;12786:6;12783:1;12779:14;12768:9;12764:30;12760:39;12746:53;;12834:2;12826:6;12822:15;12855:1;12865:255;12879:6;12876:1;12873:13;12865:255;;;12972:2;12968:7;12956:9;12948:6;12944:22;12940:36;12935:3;12928:49;13000:40;13033:6;13024;13018:13;13000:40;:::i;:::-;12990:50;-1:-1:-1;13098:12:644;;;;13063:15;;;;12901:1;12894:9;12865:255;;;-1:-1:-1;13137:6:644;;12348:801;-1:-1:-1;;;;;;;12348:801:644:o;13154:532::-;13250:6;13258;13266;13274;13327:3;13315:9;13306:7;13302:23;13298:33;13295:53;;;13344:1;13341;13334:12;13295:53;13367:29;13386:9;13367:29;:::i;:::-;13357:39;;13443:2;13432:9;13428:18;13415:32;13405:42;;13498:2;13487:9;13483:18;13470:32;-1:-1:-1;;;;;13517:6:644;13514:30;13511:50;;;13557:1;13554;13547:12;13511:50;13580:49;13621:7;13612:6;13601:9;13597:22;13580:49;:::i;:::-;13154:532;;;;-1:-1:-1;13570:59:644;;13676:2;13661:18;13648:32;;-1:-1:-1;;;13154:532:644:o;13980:260::-;14048:6;14056;14109:2;14097:9;14088:7;14084:23;14080:32;14077:52;;;14125:1;14122;14115:12;14077:52;14148:29;14167:9;14148:29;:::i;:::-;14138:39;;14196:38;14230:2;14219:9;14215:18;14196:38;:::i;:::-;14186:48;;13980:260;;;;;:::o;14245:606::-;14349:6;14357;14365;14373;14381;14434:3;14422:9;14413:7;14409:23;14405:33;14402:53;;;14451:1;14448;14441:12;14402:53;14474:29;14493:9;14474:29;:::i;:::-;14464:39;;14522:38;14556:2;14545:9;14541:18;14522:38;:::i;:::-;14512:48;;14607:2;14596:9;14592:18;14579:32;14569:42;;14658:2;14647:9;14643:18;14630:32;14620:42;;14713:3;14702:9;14698:19;14685:33;-1:-1:-1;;;;;14733:6:644;14730:30;14727:50;;;14773:1;14770;14763:12;14727:50;14796:49;14837:7;14828:6;14817:9;14813:22;14796:49;:::i;14856:322::-;14933:6;14941;14949;15002:2;14990:9;14981:7;14977:23;14973:32;14970:52;;;15018:1;15015;15008:12;14970:52;15041:29;15060:9;15041:29;:::i;:::-;15031:39;15117:2;15102:18;;15089:32;;-1:-1:-1;15168:2:644;15153:18;;;15140:32;;14856:322;-1:-1:-1;;;14856:322:644:o;15183:380::-;15262:1;15258:12;;;;15305;;;15326:61;;15380:4;15372:6;15368:17;15358:27;;15326:61;15433:2;15425:6;15422:14;15402:18;15399:38;15396:161;;;15479:10;15474:3;15470:20;15467:1;15460:31;15514:4;15511:1;15504:15;15542:4;15539:1;15532:15;15396:161;;15183:380;;;:::o;15568:470::-;15747:3;15785:6;15779:13;15801:53;15847:6;15842:3;15835:4;15827:6;15823:17;15801:53;:::i;:::-;15917:13;;15876:16;;;;15939:57;15917:13;15876:16;15973:4;15961:17;;15939:57;:::i;:::-;16012:20;;15568:470;-1:-1:-1;;;;15568:470:644:o;16043:338::-;16245:2;16227:21;;;16284:2;16264:18;;;16257:30;-1:-1:-1;;;16318:2:644;16303:18;;16296:44;16372:2;16357:18;;16043:338::o;16728:127::-;16789:10;16784:3;16780:20;16777:1;16770:31;16820:4;16817:1;16810:15;16844:4;16841:1;16834:15;16860:127;16921:10;16916:3;16912:20;16909:1;16902:31;16952:4;16949:1;16942:15;16976:4;16973:1;16966:15;16992:168;17032:7;17098:1;17094;17090:6;17086:14;17083:1;17080:21;17075:1;17068:9;17061:17;17057:45;17054:71;;;17105:18;;:::i;:::-;-1:-1:-1;17145:9:644;;16992:168::o;17165:127::-;17226:10;17221:3;17217:20;17214:1;17207:31;17257:4;17254:1;17247:15;17281:4;17278:1;17271:15;17297:120;17337:1;17363;17353:35;;17368:18;;:::i;:::-;-1:-1:-1;17402:9:644;;17297:120::o;17422:342::-;17624:2;17606:21;;;17663:2;17643:18;;;17636:30;-1:-1:-1;;;17697:2:644;17682:18;;17675:48;17755:2;17740:18;;17422:342::o;17769:339::-;17971:2;17953:21;;;18010:2;17990:18;;;17983:30;-1:-1:-1;;;18044:2:644;18029:18;;18022:45;18099:2;18084:18;;17769:339::o;18113:135::-;18152:3;-1:-1:-1;;18173:17:644;;18170:43;;;18193:18;;:::i;:::-;-1:-1:-1;18240:1:644;18229:13;;18113:135::o;18253:341::-;18455:2;18437:21;;;18494:2;18474:18;;;18467:30;-1:-1:-1;;;18528:2:644;18513:18;;18506:47;18585:2;18570:18;;18253:341::o;18943:347::-;19145:2;19127:21;;;19184:2;19164:18;;;19157:30;-1:-1:-1;;;19218:2:644;19203:18;;19196:53;19281:2;19266:18;;18943:347::o;19295:128::-;19335:3;19366:1;19362:6;19359:1;19356:13;19353:39;;;19372:18;;:::i;:::-;-1:-1:-1;19408:9:644;;19295:128::o;19428:347::-;19630:2;19612:21;;;19669:2;19649:18;;;19642:30;-1:-1:-1;;;19703:2:644;19688:18;;19681:53;19766:2;19751:18;;19428:347::o;19780:344::-;19982:2;19964:21;;;20021:2;20001:18;;;19994:30;-1:-1:-1;;;20055:2:644;20040:18;;20033:50;20115:2;20100:18;;19780:344::o;20474:334::-;20676:2;20658:21;;;20715:2;20695:18;;;20688:30;-1:-1:-1;;;20749:2:644;20734:18;;20727:40;20799:2;20784:18;;20474:334::o;20813:522::-;20891:4;20897:6;20957:11;20944:25;21051:2;21047:7;21036:8;21020:14;21016:29;21012:43;20992:18;20988:68;20978:96;;21070:1;21067;21060:12;20978:96;21097:33;;21149:20;;;-1:-1:-1;;;;;;21181:30:644;;21178:50;;;21224:1;21221;21214:12;21178:50;21257:4;21245:17;;-1:-1:-1;21288:14:644;21284:27;;;21274:38;;21271:58;;;21325:1;21322;21315:12;21340:504;21399:5;21406:6;21466:3;21453:17;21552:2;21548:7;21537:8;21521:14;21517:29;21513:43;21493:18;21489:68;21479:96;;21571:1;21568;21561:12;21479:96;21599:33;;21703:4;21690:18;;;-1:-1:-1;21651:21:644;;-1:-1:-1;;;;;;21720:30:644;;21717:50;;;21763:1;21760;21753:12;21717:50;21813:6;21797:14;21793:27;21783:8;21779:42;21776:62;;;21834:1;21831;21824:12;21849:267;21938:6;21933:3;21926:19;21990:6;21983:5;21976:4;21971:3;21967:14;21954:43;-1:-1:-1;22042:1:644;22017:16;;;22035:4;22013:27;;;22006:38;;;;22098:2;22077:15;;;-1:-1:-1;;22073:29:644;22064:39;;;22060:50;;21849:267::o;22121:173::-;22189:20;;-1:-1:-1;;;;;22238:31:644;;22228:42;;22218:70;;22284:1;22281;22274:12;22408:1630;22599:2;22588:9;22581:21;22611:66;22673:2;22662:9;22658:18;22630:26;22649:6;22630:26;:::i;:::-;22611:66;:::i;:::-;22562:4;22706:35;22737:2;22729:6;22725:15;22706:35;:::i;:::-;22750:52;22798:2;22787:9;22783:18;22769:12;22750:52;:::i;:::-;;22863:2;22855:6;22851:15;22838:29;22833:2;22822:9;22818:18;22811:57;22899:35;22930:2;22922:6;22918:15;22899:35;:::i;:::-;22943:55;22993:3;22982:9;22978:19;22962:14;22943:55;:::i;:::-;;23060:3;23052:6;23048:16;23035:30;23029:3;23018:9;23014:19;23007:59;23111:57;23163:3;23155:6;23151:16;23143:6;23111:57;:::i;:::-;23187:6;23230:2;23224:3;23213:9;23209:19;23202:31;23256:77;23328:3;23317:9;23313:19;23299:12;23283:14;23256:77;:::i;:::-;23242:91;;23395:3;23387:6;23383:16;23370:30;23364:3;23353:9;23349:19;23342:59;23420:3;23410:13;;23484:3;23476:6;23472:16;23459:30;23454:2;23443:9;23439:18;23432:58;23521:35;23552:2;23544:6;23540:15;23521:35;:::i;:::-;23499:57;;23575:3;23587:54;23637:2;23626:9;23622:18;23606:14;23587:54;:::i;:::-;23672:35;23703:2;23695:6;23691:15;23672:35;:::i;:::-;23650:57;;;23726:3;23738:54;23788:2;23777:9;23773:18;23757:14;-1:-1:-1;;;;;22365:31:644;22353:44;;22299:104;23738:54;23823:35;23854:2;23846:6;23842:15;23823:35;:::i;:::-;23801:57;;;23877:3;23889:54;23939:2;23928:9;23924:18;23908:14;-1:-1:-1;;;;;22365:31:644;22353:44;;22299:104;23889:54;23992:15;;;;23979:29;23959:18;;;;23952:57;;;;-1:-1:-1;24026:6:644;22408:1630;-1:-1:-1;22408:1630:644:o;25256:125::-;25296:4;25324:1;25321;25318:8;25315:34;;;25329:18;;:::i;:::-;-1:-1:-1;25366:9:644;;25256:125::o;25386:112::-;25418:1;25444;25434:35;;25449:18;;:::i;:::-;-1:-1:-1;25483:9:644;;25386:112::o;25503:336::-;25705:2;25687:21;;;25744:2;25724:18;;;25717:30;-1:-1:-1;;;25778:2:644;25763:18;;25756:42;25830:2;25815:18;;25503:336::o;25844:340::-;26046:2;26028:21;;;26085:2;26065:18;;;26058:30;-1:-1:-1;;;26119:2:644;26104:18;;26097:46;26175:2;26160:18;;25844:340::o;26189:465::-;26446:2;26435:9;26428:21;26409:4;26472:56;26524:2;26513:9;26509:18;26501:6;26472:56;:::i;:::-;26576:9;26568:6;26564:22;26559:2;26548:9;26544:18;26537:50;26604:44;26641:6;26633;26604:44;:::i;:::-;26596:52;26189:465;-1:-1:-1;;;;;26189:465:644:o;26659:339::-;26861:2;26843:21;;;26900:2;26880:18;;;26873:30;-1:-1:-1;;;26934:2:644;26919:18;;26912:45;26989:2;26974:18;;26659:339::o;27003:338::-;27205:2;27187:21;;;27244:2;27224:18;;;27217:30;-1:-1:-1;;;27278:2:644;27263:18;;27256:44;27332:2;27317:18;;27003:338::o;27346:383::-;27543:2;27532:9;27525:21;27506:4;27569:45;27610:2;27599:9;27595:18;27587:6;27569:45;:::i;:::-;27662:9;27654:6;27650:22;27645:2;27634:9;27630:18;27623:50;27690:33;27716:6;27708;27690:33;:::i;28078:186::-;28137:6;28190:2;28178:9;28169:7;28165:23;28161:32;28158:52;;;28206:1;28203;28196:12;28158:52;28229:29;28248:9;28229:29;:::i;30227:827::-;-1:-1:-1;;;;;30624:15:644;;;30606:34;;30676:15;;30671:2;30656:18;;30649:43;30586:3;30723:2;30708:18;;30701:31;;;30549:4;;30755:57;;30792:19;;30784:6;30755:57;:::i;:::-;30860:9;30852:6;30848:22;30843:2;30832:9;30828:18;30821:50;30894:44;30931:6;30923;30894:44;:::i;:::-;30880:58;;30987:9;30979:6;30975:22;30969:3;30958:9;30954:19;30947:51;31015:33;31041:6;31033;31015:33;:::i;:::-;31007:41;30227:827;-1:-1:-1;;;;;;;;30227:827:644:o;31059:249::-;31128:6;31181:2;31169:9;31160:7;31156:23;31152:32;31149:52;;;31197:1;31194;31187:12;31149:52;31229:9;31223:16;31248:30;31272:5;31248:30;:::i;31313:179::-;31348:3;31390:1;31372:16;31369:23;31366:120;;;31436:1;31433;31430;31415:23;-1:-1:-1;31473:1:644;31467:8;31462:3;31458:18;31313:179;:::o;31497:671::-;31536:3;31578:4;31560:16;31557:26;31554:39;;;31497:671;:::o;31554:39::-;31620:2;31614:9;-1:-1:-1;;31685:16:644;31681:25;;31678:1;31614:9;31657:50;31736:4;31730:11;31760:16;-1:-1:-1;;;;;31866:2:644;31859:4;31851:6;31847:17;31844:25;31839:2;31831:6;31828:14;31825:45;31822:58;;;31873:5;;;;;31497:671;:::o;31822:58::-;31910:6;31904:4;31900:17;31889:28;;31946:3;31940:10;31973:2;31965:6;31962:14;31959:27;;;31979:5;;;;;;31497:671;:::o;31959:27::-;32063:2;32044:16;32038:4;32034:27;32030:36;32023:4;32014:6;32009:3;32005:16;32001:27;31998:69;31995:82;;;32070:5;;;;;;31497:671;:::o;31995:82::-;32086:57;32137:4;32128:6;32120;32116:19;32112:30;32106:4;32086:57;:::i;:::-;-1:-1:-1;32159:3:644;;31497:671;-1:-1:-1;;;;;31497:671:644:o;32518:339::-;32720:2;32702:21;;;32759:2;32739:18;;;32732:30;-1:-1:-1;;;32793:2:644;32778:18;;32771:45;32848:2;32833:18;;32518:339::o;32862:561::-;-1:-1:-1;;;;;33159:15:644;;;33141:34;;33211:15;;33206:2;33191:18;;33184:43;33258:2;33243:18;;33236:34;;;33301:2;33286:18;;33279:34;;;33121:3;33344;33329:19;;33322:32;;;33084:4;;33371:46;;33397:19;;33389:6;33371:46;:::i;33835:274::-;33964:3;34002:6;33996:13;34018:53;34064:6;34059:3;34052:4;34044:6;34040:17;34018:53;:::i;:::-;34087:16;;;;;33835:274;-1:-1:-1;;33835:274:644:o;34114:271::-;34297:6;34289;34284:3;34271:33;34253:3;34323:16;;34348:13;;;34323:16;34114:271;-1:-1:-1;34114:271:644:o;36727:127::-;36788:10;36783:3;36779:20;36776:1;36769:31;36819:4;36816:1;36809:15;36843:4;36840:1;36833:15;39252:245;39319:6;39372:2;39360:9;39351:7;39347:23;39343:32;39340:52;;;39388:1;39385;39378:12;39340:52;39420:9;39414:16;39439:28;39461:5;39439:28;:::i",
    "linkReferences": {},
    "immutableReferences": {
      "49751": [
        {
          "start": 11457,
          "length": 32
        }
      ],
      "49753": [
        {
          "start": 11415,
          "length": 32
        }
      ],
      "49755": [
        {
          "start": 11373,
          "length": 32
        }
      ],
      "49757": [
        {
          "start": 11540,
          "length": 32
        }
      ],
      "49759": [
        {
          "start": 11577,
          "length": 32
        }
      ],
      "49761": [
        {
          "start": 11498,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "balanceOf(address,uint256)": "00fdd58e",
    "balanceOfBatch(address[],uint256[])": "4e1273f4",
    "batchFrozen(uint256)": "83040532",
    "batchMintTo(address,uint256[],uint256[],string)": "949c09f7",
    "burn(address,uint256,uint256)": "f5298aca",
    "burnBatch(address,uint256[],uint256[])": "6b20c454",
    "contractURI()": "e8a3d485",
    "getBaseURICount()": "63b45e2d",
    "getBatchIdAtIndex(uint256)": "2419f51b",
    "getDefaultRoyaltyInfo()": "b24f2d39",
    "getRoyaltyInfoForToken(uint256)": "4cc157df",
    "isApprovedForAll(address,address)": "e985e9c5",
    "mintTo(address,uint256,string,uint256)": "b03f4528",
    "mintWithSignature((address,address,uint256,address,uint256,string,uint256,uint256,address,uint128,uint128,bytes32),bytes)": "98a6e993",
    "multicall(bytes[])": "ac9650d8",
    "name()": "06fdde03",
    "nextTokenIdToMint()": "3b1475a7",
    "owner()": "8da5cb5b",
    "primarySaleRecipient()": "079fe40e",
    "royaltyInfo(uint256,uint256)": "2a55205a",
    "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
    "safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
    "setApprovalForAll(address,bool)": "a22cb465",
    "setContractURI(string)": "938e3d7b",
    "setDefaultRoyaltyInfo(address,uint256)": "600dd5ea",
    "setOwner(address)": "13af4035",
    "setPrimarySaleRecipient(address)": "6f4f2837",
    "setRoyaltyInfoForToken(uint256,address,uint256)": "9bcf7a15",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "totalSupply(uint256)": "bd85b039",
    "uri(uint256)": "0e89341c",
    "verify((address,address,uint256,address,uint256,string,uint256,uint256,address,uint128,uint128,bytes32),bytes)": "b17cd86f"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_defaultAdmin\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_royaltyRecipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"_royaltyBps\",\"type\":\"uint128\"},{\"internalType\":\"address\",\"name\":\"_primarySaleRecipient\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"prevURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newURI\",\"type\":\"string\"}],\"name\":\"ContractURIUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newRoyaltyRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newRoyaltyBps\",\"type\":\"uint256\"}],\"name\":\"DefaultRoyalty\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"MetadataFrozen\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"prevOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"PrimarySaleRecipientUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"royaltyRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"royaltyBps\",\"type\":\"uint256\"}],\"name\":\"RoyaltyForToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"mintedTo\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenIdMinted\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"royaltyRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyBps\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"primarySaleRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"validityStartTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"validityEndTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"indexed\":false,\"internalType\":\"struct ISignatureMintERC1155.MintRequest\",\"name\":\"mintRequest\",\"type\":\"tuple\"}],\"name\":\"TokensMintedWithSignature\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"_values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"batchFrozen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_tokenIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"string\",\"name\":\"_baseURI\",\"type\":\"string\"}],\"name\":\"batchMintTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_tokenIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"}],\"name\":\"burnBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaseURICount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getBatchIdAtIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDefaultRoyaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getRoyaltyInfoForToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_tokenURI\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mintTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"royaltyRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyBps\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"primarySaleRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"validityStartTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"validityEndTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"internalType\":\"struct ISignatureMintERC1155.MintRequest\",\"name\":\"_req\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"mintWithSignature\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextTokenIdToMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"primarySaleRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"setContractURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_royaltyRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_royaltyBps\",\"type\":\"uint256\"}],\"name\":\"setDefaultRoyaltyInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_saleRecipient\",\"type\":\"address\"}],\"name\":\"setPrimarySaleRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_bps\",\"type\":\"uint256\"}],\"name\":\"setRoyaltyInfoForToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"royaltyRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyBps\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"primarySaleRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"validityStartTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"validityEndTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"internalType\":\"struct ISignatureMintERC1155.MintRequest\",\"name\":\"_req\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"verify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"batchMintTo(address,uint256[],uint256[],string)\":{\"details\":\"The logic in the `_canMint` function determines whether the caller is authorized to mint NFTs.                   If `_tokenIds[i] == type(uint256).max` a new NFT at tokenId `nextTokenIdToMint` is minted. If the given                   `tokenIds[i] < nextTokenIdToMint`, then additional supply of an existing NFT is minted.                   The metadata for each new NFT is stored at `baseURI/{tokenID of NFT}`\",\"params\":{\"_amounts\":\"The amounts of each NFT to mint.\",\"_baseURI\":\"The baseURI for the `n` number of NFTs minted. The metadata for each NFT is `baseURI/tokenId`\",\"_to\":\"The recipient of the NFT to mint.\",\"_tokenIds\":\"The tokenIds of the NFTs to mint.\"}},\"burn(address,uint256,uint256)\":{\"params\":{\"_amount\":\"The amount of the NFT to burn.\",\"_owner\":\"The owner of the NFT to burn.\",\"_tokenId\":\"The tokenId of the NFT to burn.\"}},\"burnBatch(address,uint256[],uint256[])\":{\"params\":{\"_amounts\":\"The amounts of the NFTs to burn.\",\"_owner\":\"The owner of the NFTs to burn.\",\"_tokenIds\":\"The tokenIds of the NFTs to burn.\"}},\"getBaseURICount()\":{\"details\":\"Each batch of tokens has an in ID and an associated `baseURI`.                  See {batchIds}.\"},\"getBatchIdAtIndex(uint256)\":{\"details\":\"See {getBaseURICount}.\",\"params\":{\"_index\":\"Index of the desired batch in batchIds array.\"}},\"getRoyaltyInfoForToken(uint256)\":{\"details\":\"Returns royalty recipient and bps for `_tokenId`.\",\"params\":{\"_tokenId\":\"The tokenID of the NFT for which to query royalty info.\"}},\"mintTo(address,uint256,string,uint256)\":{\"details\":\"- The logic in the `_canMint` function determines whether the caller is authorized to mint NFTs.                   - If `_tokenId == type(uint256).max` a new NFT at tokenId `nextTokenIdToMint` is minted. If the given                     `tokenId < nextTokenIdToMint`, then additional supply of an existing NFT is being minted.\",\"params\":{\"_amount\":\"The amount of the same NFT to mint.\",\"_to\":\"The recipient of the NFTs to mint.\",\"_tokenId\":\"The tokenId of the NFT to mint.\",\"_tokenURI\":\"The full metadata URI for the NFTs minted (if a new NFT is being minted).\"}},\"mintWithSignature((address,address,uint256,address,uint256,string,uint256,uint256,address,uint128,uint128,bytes32),bytes)\":{\"params\":{\"_req\":\"The payload / mint request.\",\"_signature\":\"The signature produced by an account signing the mint request.\"}},\"multicall(bytes[])\":{\"details\":\"Receives and executes a batch of function calls on this contract.\",\"params\":{\"data\":\"The bytes data that makes up the batch of function calls to execute.\"},\"returns\":{\"results\":\"The bytes data that makes up the result of the batch of function calls executed.\"}},\"primarySaleRecipient()\":{\"details\":\"Returns primary sale recipient address.\"},\"royaltyInfo(uint256,uint256)\":{\"details\":\"Returns royalty amount and recipient for `tokenId` and `salePrice`.\",\"params\":{\"salePrice\":\"Sale price of the token.\",\"tokenId\":\"The tokenID of the NFT for which to query royalty info.\"},\"returns\":{\"receiver\":\"       Address of royalty recipient account.\",\"royaltyAmount\":\"  Royalty amount calculated at current royaltyBps value.\"}},\"setContractURI(string)\":{\"details\":\"Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.\",\"params\":{\"_uri\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"setDefaultRoyaltyInfo(address,uint256)\":{\"details\":\"Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {DefaultRoyalty Event}; See {_setupDefaultRoyaltyInfo}.\",\"params\":{\"_royaltyBps\":\"Updated royalty bps.\",\"_royaltyRecipient\":\"Address to be set as default royalty recipient.\"}},\"setOwner(address)\":{\"params\":{\"_newOwner\":\"The address to set as the new owner of the contract.\"}},\"setPrimarySaleRecipient(address)\":{\"details\":\"Caller should be authorized to set primary sales info.                  See {_canSetPrimarySaleRecipient}.                  Emits {PrimarySaleRecipientUpdated Event}; See {_setupPrimarySaleRecipient}.\",\"params\":{\"_saleRecipient\":\"Address to be set as new recipient of primary sales.\"}},\"setRoyaltyInfoForToken(uint256,address,uint256)\":{\"details\":\"Sets royalty info for `_tokenId`. Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {RoyaltyForToken Event}; See {_setupRoyaltyInfoForToken}.\",\"params\":{\"_bps\":\"Updated royalty bps for the token Id.\",\"_recipient\":\"Address to be set as royalty recipient for given token Id.\"}},\"supportsInterface(bytes4)\":{\"details\":\"See ERC165: https://eips.ethereum.org/EIPS/eip-165\"},\"uri(uint256)\":{\"params\":{\"_tokenId\":\"The tokenId of the token for which a URI should be returned.\"},\"returns\":{\"_0\":\"The metadata URI for the given tokenId.\"}},\"verify((address,address,uint256,address,uint256,string,uint256,uint256,address,uint128,uint128,bytes32),bytes)\":{\"details\":\"Verifies that a mint request is signed by an account holding MINTER_ROLE (at the time of the function call).\"}},\"version\":1},\"userdoc\":{\"events\":{\"BatchMetadataUpdate(uint256,uint256)\":{\"notice\":\"So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"}},\"kind\":\"user\",\"methods\":{\"balanceOf(address,uint256)\":{\"notice\":\"Get the balance of an account's Tokens.\"},\"batchMintTo(address,uint256[],uint256[],string)\":{\"notice\":\"Lets an authorized address mint multiple NEW NFTs at once to a recipient.\"},\"burn(address,uint256,uint256)\":{\"notice\":\"Lets an owner or approved operator burn NFTs of the given tokenId.\"},\"burnBatch(address,uint256[],uint256[])\":{\"notice\":\"Lets an owner or approved operator burn NFTs of the given tokenIds.\"},\"contractURI()\":{\"notice\":\"Returns the contract metadata URI.\"},\"getBaseURICount()\":{\"notice\":\"Returns the count of batches of NFTs.\"},\"getBatchIdAtIndex(uint256)\":{\"notice\":\"Returns the ID for the batch of tokens at the given index.\"},\"getDefaultRoyaltyInfo()\":{\"notice\":\"Returns the defualt royalty recipient and BPS for this contract's NFTs.\"},\"getRoyaltyInfoForToken(uint256)\":{\"notice\":\"View royalty info for a given token.\"},\"isApprovedForAll(address,address)\":{\"notice\":\"Queries the approval status of an operator for a given owner.\"},\"mintTo(address,uint256,string,uint256)\":{\"notice\":\"Lets an authorized address mint NFTs to a recipient.\"},\"mintWithSignature((address,address,uint256,address,uint256,string,uint256,uint256,address,uint128,uint128,bytes32),bytes)\":{\"notice\":\"Mints tokens according to the provided mint request.\"},\"multicall(bytes[])\":{\"notice\":\"Receives and executes a batch of function calls on this contract.\"},\"nextTokenIdToMint()\":{\"notice\":\"The tokenId assigned to the next new NFT to be minted.\"},\"owner()\":{\"notice\":\"Returns the owner of the contract.\"},\"royaltyInfo(uint256,uint256)\":{\"notice\":\"View royalty info for a given token and sale price.\"},\"setContractURI(string)\":{\"notice\":\"Lets a contract admin set the URI for contract-level metadata.\"},\"setDefaultRoyaltyInfo(address,uint256)\":{\"notice\":\"Updates default royalty recipient and bps.\"},\"setOwner(address)\":{\"notice\":\"Lets an authorized wallet set a new owner for the contract.\"},\"setPrimarySaleRecipient(address)\":{\"notice\":\"Updates primary sale recipient.\"},\"setRoyaltyInfoForToken(uint256,address,uint256)\":{\"notice\":\"Updates default royalty recipient and bps for a particular token.\"},\"totalSupply(uint256)\":{\"notice\":\"Returns the total supply of NFTs of a given tokenId\"},\"uri(uint256)\":{\"notice\":\"Returns the metadata URI for the given tokenId.\"}},\"notice\":\"BASE:      ERC1155Base      EXTENSION: SignatureMintERC1155  The `ERC1155SignatureMint` contract uses the `ERC1155Base` contract, along with the `SignatureMintERC1155` extension.  The 'signature minting' mechanism in the `SignatureMintERC1155` extension uses EIP 712, and is a way for a contract  admin to authorize an external party's request to mint tokens on the admin's contract. At a high level, this means  you can authorize some external party to mint tokens on your contract, and specify what exactly will be minted by  that external party.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/base/ERC1155SignatureMint.sol\":\"ERC1155SignatureMint\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@std/=lib/forge-std/src/\",\":@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/\",\":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/\",\":contracts/=contracts/\",\":ds-test/=lib/ds-test/src/\",\":dynamic-contracts/=lib/dynamic-contracts/src/\",\":erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/ERC721A-Upgradeable/\",\":erc721a/=lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/\"]},\"sources\":{\"contracts/base/ERC1155Base.sol\":{\"keccak256\":\"0x77eab178fc5807b8f1819a87bbdeb7dbde403db91ec8d13323087060f069376d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://249d67fd0fb2c3b3e4115bffa702a3ee1d344ae95f8ebe3c6481797a46bde291\",\"dweb:/ipfs/QmTS67Q6Lz86imxnLwxCJEdKQtnBhG2YNx94LMJXz8XbrC\"]},\"contracts/base/ERC1155SignatureMint.sol\":{\"keccak256\":\"0x1c6fdf9e728bc83d3c180e998afbf06f9135baa817dd2bbd8eb78304b74ef7ad\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9b25dc5e271c91972f4ed3783f30a9affacdca0cc9d95665ca335fc716ed0323\",\"dweb:/ipfs/QmbQrZJU2CxZGpz8URVM4Mzh8zdK8F8ot12VsajWWdv44g\"]},\"contracts/eip/ERC1155.sol\":{\"keccak256\":\"0x378fcbe3a191a44060f66b2b2932391cbf31f945039087b9024bb2eee91ba5b6\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://f36697fa07898c79d77d0b294849de4eab4b6d24679c33f0b448b8d82e172f4b\",\"dweb:/ipfs/QmZ8jqskjHnjHuoDqa9dQdP6KrRDyHcvBKVDZZNXX9e7bS\"]},\"contracts/eip/interface/IERC1155.sol\":{\"keccak256\":\"0x17c265f3f47161c9d2f6c7f7f4040440df9ad4cd7eb74eb411bf25a94b542f9e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c4f468eb184f2a08909834b51e33e854741647f9798aa1e6746f3f1b69525552\",\"dweb:/ipfs/QmbCMy9vJLga2dCxGG6nXW7VKGqsMrzU8phPhcd58xkapq\"]},\"contracts/eip/interface/IERC1155Metadata.sol\":{\"keccak256\":\"0xe9d530111d75c5d6db4ca4f30dd76d6a29d9363ab7390e922942a0fc9e3ce32e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8272be1ca643bd3038fd67b00acad09a8dca44536284bcca6b862d09f8b53e43\",\"dweb:/ipfs/Qme9wiWPDfh36xm7TNaxpAYxv5jAptMNLtYksRwc5zNFbU\"]},\"contracts/eip/interface/IERC1155Receiver.sol\":{\"keccak256\":\"0xfef511c703e7ebdb193d35a67e0d9b70728789b2ac45cc5cf5ee56c4ad034f00\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f838e560ba0caddc54ad4ba082e0ff3bf27a721c15bc0cf19791fef7940837a5\",\"dweb:/ipfs/QmTwfwYYK4Ky9PPhdDoVVmZJaJ7y2hZDH8YnBQRfiA8Baz\"]},\"contracts/eip/interface/IERC165.sol\":{\"keccak256\":\"0x35d0a916f70344a5fcc6c67cb531b6150d2fce43e72a6282385eab02020f2f49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75ccd8b9a8b52a93b8097fcb8181b7afb6d72bbe6eaabf434f0481a7a207cc8a\",\"dweb:/ipfs/QmPUZAEE4nwkijcE2amAXAWEVGVG5XaKWGhpgnRwpAf93R\"]},\"contracts/eip/interface/IERC20.sol\":{\"keccak256\":\"0x5bdd9dd97ba7d9d7c9a2953db287e4d9d7fa93a27a96bc2e72a8da4919b6f7ff\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://45527c265ee5de6bbb3ecfc052e7b1175531a82c2ac16172020aee855f7dd592\",\"dweb:/ipfs/QmVZthqbG916qUQSwv1LE8bB58ZGQ1VfQbLbbRV5urfEYA\"]},\"contracts/eip/interface/IERC2981.sol\":{\"keccak256\":\"0x7886c17b1bc3df885201378fd070d2f00d05fa54f20f7daf10382ec6ff4bd0c9\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://a0802623ba9555f6d186bab5fd139203b643e88ea31d78f4f05cddd4008ac6cf\",\"dweb:/ipfs/QmYbqzSKkKmF2xYeH1zGNewBDNAhukuaZEUVAvYgnKt1He\"]},\"contracts/extension/BatchMintMetadata.sol\":{\"keccak256\":\"0x1d1ee64f8456dc8b4cdd096e27ac4687babd485f49a728146126744d67f25f2f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9e01b0d51bdccbcce9095f606c8624926b518c1385c1349c41896236a0345ee0\",\"dweb:/ipfs/QmWHTbztwRf9Fyq4617MrVSqF8o7UXMT5nFe6epQ92N6L9\"]},\"contracts/extension/ContractMetadata.sol\":{\"keccak256\":\"0xf53ab08ec3057056872c15e35a5610f7a43426bd2829786aed006d527177adfe\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ee132ae5efdd372152febfcd8fd3a7cb82c7019367d92c886f5096003a79f392\",\"dweb:/ipfs/QmRW1cGWmZAu57huZpTUwsWB8AxUFrBp6g4NqozXpbWsR6\"]},\"contracts/extension/Multicall.sol\":{\"keccak256\":\"0x737a71c74307fa360863550d64bbaef599bbcb47829b19c3743ed1ff22b9af55\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://7e82a79ee183dffa3ec01faac0907e04d72a185e55b7c24bff8e8e952b05f4c2\",\"dweb:/ipfs/QmQ9neZqpcgJtGgm84FBzMqFntZ1Sk1KFTWhjCMq8vnKDg\"]},\"contracts/extension/Ownable.sol\":{\"keccak256\":\"0x45447691686861237d5e1acb9d723d861a3fb3d561335e4f385d1547f25e27a5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5142293e36c736f744c73aaecab5f7be8e2d5ac70acc67851e0cea5171fd6782\",\"dweb:/ipfs/QmVJT5B84o5vFc5E2VteZdBhrT1HMutc7Ax72UKD1aZatJ\"]},\"contracts/extension/PrimarySale.sol\":{\"keccak256\":\"0x9ef1ad82fadf988a07f4034b92ccdb3281682693e41759a79042814d36095f42\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0d962b48453e1f50b808193135c2f14265324fa8b75fe3b405ef7836e38921f7\",\"dweb:/ipfs/QmZDLNsZQj9kNcb15nBuWRpPwDdDvJS2gtFwqEs2Lwxb1N\"]},\"contracts/extension/Royalty.sol\":{\"keccak256\":\"0xcc3110048db91d4ecd05afcc6721fce6ade5eee8c2da0af8955e86ece8754350\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a1e830502fda46ab7618b65e155341d42bf007717edb27711b09bf6250ce1485\",\"dweb:/ipfs/QmY5fKpg7aCubR7fENu9htRFspU8hpSo7CVUNJxQdh8kv1\"]},\"contracts/extension/SignatureMintERC1155.sol\":{\"keccak256\":\"0x80e892d8ced4d82e1daa26b0f4ff06521c69bf20142954fc80a30c2888cb6272\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ba22bb0bd922b9d3ab5262585e545adcb53487222a6c3a5db55574ebf83208cd\",\"dweb:/ipfs/QmeNggMXJNba55aupBAGkszYiX4NmYX13cTSs5bM86CMzC\"]},\"contracts/extension/interface/IContractMetadata.sol\":{\"keccak256\":\"0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a\",\"dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr\"]},\"contracts/extension/interface/IMulticall.sol\":{\"keccak256\":\"0xe2bbd37b8fdb9cc8b933e598512a068ebb214b3f5abc2bc634916def55be4ef3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://012352099c262348ac755a53b082af520babc6c66dc5f1251fc23609728340ca\",\"dweb:/ipfs/QmcXEgzQ53jdJX5ZNy8zivvUjDq7J8WTnR1yAiwTpkQ2ar\"]},\"contracts/extension/interface/IOwnable.sol\":{\"keccak256\":\"0xd659a64da6264fdd50ee379be032fea4917eba4fadfd6d366107fb17e46907f3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c15940c4a3d229f4fdd1226fe297a58fde10b07b86a34de1ed11a8802dd5dea9\",\"dweb:/ipfs/QmS8p8CxWiahLkYsCWNhFjCnmQzuc4ck3kjYYuCFj8LsmC\"]},\"contracts/extension/interface/IPrimarySale.sol\":{\"keccak256\":\"0x77c89cb8d9b781b0a08b1fa81c95a0dd5c19200b2fb0dc884c1084b931624004\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a37b042af11a08ba5518dadf72c91745d1b5f42b1c20ea5282492bfd18f53869\",\"dweb:/ipfs/QmWEYYG5VqR8MRfr2rydDV98GLKmaJtCC8G1W7MzJ9qFnF\"]},\"contracts/extension/interface/IRoyalty.sol\":{\"keccak256\":\"0x13912ba3970fdedd1eb5bf8bf0bcc5e64e43f2cadb8d22c3d6fb695fd9877385\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b84d19df7aa9cb7460cca50ab050cdcfffb62f53c246daf35df276cad7088e9b\",\"dweb:/ipfs/QmNPPHJuiW1KCcq3aXELnA4X8NaSPM9S2vHbsBEEDYiwP8\"]},\"contracts/extension/interface/ISignatureMintERC1155.sol\":{\"keccak256\":\"0x5bb7951862f196799db88a77cda1642a25ee5b161295ce15a4b075b29502cf95\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f8cf5b9b7b826df549246df2fe9bf9d1e177b41f7200c5d0365d01dcaf27891f\",\"dweb:/ipfs/QmTD3jRWLuxhBJtQPeq4VhkhNpDUUAf1NipnGFQYAXhWZL\"]},\"contracts/external-deps/openzeppelin/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xa6149938a7c7c8af4244743aeaafcfb1fd9ce15ad45de58fa9576f0ed5599b2c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://839aa4ea6ef6d1972881bfd7420a9ddcd2f37139e3f0bf25310f93f48410702d\",\"dweb:/ipfs/QmSH65kStfbgMbfjFdfJqV412omPy6nB1JMvMt9q7SsytW\"]},\"contracts/external-deps/openzeppelin/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x2e5b68f695b674731ee7f041a4924d7bb917b87d1efc8cf8ec00904ee7ab8b49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f0ead0687405faad7c08e19bfa4d26d3517ca30fa5bdf5b7b77f09d074f6918\",\"dweb:/ipfs/QmaovoMzoEnW8t8EbuA5XXrUxXvgEmNk7F9aqzR56BQA6v\"]},\"contracts/external-deps/openzeppelin/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x6688fad58b9ec0286d40fa957152e575d5d8bd4c3aa80985efdb11b44f776ae7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8bc00ab7f133cdaafd212a5cc6a16c8d37319721105d130c8e5af0c4e8f170ba\",\"dweb:/ipfs/QmVmf6LVMfFiEkvKYLzSv3bGHzymEW93AcUuFrNUdY3NtT\"]},\"contracts/infra/interface/IWETH.sol\":{\"keccak256\":\"0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1\",\"dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU\"]},\"contracts/lib/CurrencyTransferLib.sol\":{\"keccak256\":\"0x4a30bc9a8cd6cc8b855621fb1a651e2c3a1639b0ad153f1139c3ba463605672d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://417cc64ec6393f3cc89981ca9c32bbcc444a5f91363d69f84dd8ace888b2b859\",\"dweb:/ipfs/QmZeaQsYGx4VNoP8e1fcwC87PwvyakheWYeuwEwhFSJnvB\"]},\"contracts/lib/TWAddress.sol\":{\"keccak256\":\"0x460f032cf3bf43d586e126ab2ec8be4335767f497ccb699741546a1cfba94a7e\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://28fcbf6dde6c2eeb9864f6ec6f21dcc81ec426877debf4b912f2f3bc5b0fc91e\",\"dweb:/ipfs/QmS1SHrZDfefX8EE7DdvszTY6VPCHydf4HM7NKJ2gP72e6\"]},\"contracts/lib/TWStrings.sol\":{\"keccak256\":\"0xef7e9954d888f99baffc10db1d9bf6a2beb66c842d81dea90352ddded22cbbf8\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://832415134684f5413f9d0f3f5536aa30848690cfe54769f7730a3807438f3bf9\",\"dweb:/ipfs/QmduTiUdtsnyJVMXpdomohEWDVg46aZhnS9uTURu4x1NYt\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.12+commit.f00d7308"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_defaultAdmin",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_symbol",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "_royaltyRecipient",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "_royaltyBps",
              "type": "uint128"
            },
            {
              "internalType": "address",
              "name": "_primarySaleRecipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "_operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "_approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_fromTokenId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_toTokenId",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "BatchMetadataUpdate",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "prevURI",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "newURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ContractURIUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newRoyaltyRecipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newRoyaltyBps",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DefaultRoyalty",
          "anonymous": false
        },
        {
          "inputs": [],
          "type": "event",
          "name": "MetadataFrozen",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "prevOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnerUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "PrimarySaleRecipientUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "royaltyRecipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "royaltyBps",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RoyaltyForToken",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "signer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "mintedTo",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenIdMinted",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "struct ISignatureMintERC1155.MintRequest",
              "name": "mintRequest",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "royaltyRecipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "royaltyBps",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "primarySaleRecipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "uri",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "quantity",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "uint128",
                  "name": "validityStartTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "validityEndTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensMintedWithSignature",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "_from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "_to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256[]",
              "name": "_ids",
              "type": "uint256[]",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "_values",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TransferBatch",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "_from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "_to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "_id",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TransferSingle",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_value",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_id",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "URI",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "accounts",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOfBatch",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "batchFrozen",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "_tokenIds",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "_amounts",
              "type": "uint256[]"
            },
            {
              "internalType": "string",
              "name": "_baseURI",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "batchMintTo"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "_tokenIds",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "_amounts",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burnBatch"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "contractURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getBaseURICount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getBatchIdAtIndex",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getDefaultRoyaltyInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoyaltyInfoForToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "_tokenURI",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mintTo"
        },
        {
          "inputs": [
            {
              "internalType": "struct ISignatureMintERC1155.MintRequest",
              "name": "_req",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "royaltyRecipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "royaltyBps",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "primarySaleRecipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "uri",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "quantity",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "uint128",
                  "name": "validityStartTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "validityEndTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "_signature",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "mintWithSignature",
          "outputs": [
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes[]",
              "name": "data",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "multicall",
          "outputs": [
            {
              "internalType": "bytes[]",
              "name": "results",
              "type": "bytes[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nextTokenIdToMint",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "primarySaleRecipient",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "salePrice",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "royaltyInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "royaltyAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeBatchTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_uri",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setContractURI"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_royaltyRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_royaltyBps",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDefaultRoyaltyInfo"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_saleRecipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPrimarySaleRecipient"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_bps",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRoyaltyInfoForToken"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "uri",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct ISignatureMintERC1155.MintRequest",
              "name": "_req",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "royaltyRecipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "royaltyBps",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "primarySaleRecipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "uri",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "quantity",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "uint128",
                  "name": "validityStartTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "validityEndTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "_signature",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "verify",
          "outputs": [
            {
              "internalType": "bool",
              "name": "success",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "batchMintTo(address,uint256[],uint256[],string)": {
            "details": "The logic in the `_canMint` function determines whether the caller is authorized to mint NFTs.                   If `_tokenIds[i] == type(uint256).max` a new NFT at tokenId `nextTokenIdToMint` is minted. If the given                   `tokenIds[i] < nextTokenIdToMint`, then additional supply of an existing NFT is minted.                   The metadata for each new NFT is stored at `baseURI/{tokenID of NFT}`",
            "params": {
              "_amounts": "The amounts of each NFT to mint.",
              "_baseURI": "The baseURI for the `n` number of NFTs minted. The metadata for each NFT is `baseURI/tokenId`",
              "_to": "The recipient of the NFT to mint.",
              "_tokenIds": "The tokenIds of the NFTs to mint."
            }
          },
          "burn(address,uint256,uint256)": {
            "params": {
              "_amount": "The amount of the NFT to burn.",
              "_owner": "The owner of the NFT to burn.",
              "_tokenId": "The tokenId of the NFT to burn."
            }
          },
          "burnBatch(address,uint256[],uint256[])": {
            "params": {
              "_amounts": "The amounts of the NFTs to burn.",
              "_owner": "The owner of the NFTs to burn.",
              "_tokenIds": "The tokenIds of the NFTs to burn."
            }
          },
          "getBaseURICount()": {
            "details": "Each batch of tokens has an in ID and an associated `baseURI`.                  See {batchIds}."
          },
          "getBatchIdAtIndex(uint256)": {
            "details": "See {getBaseURICount}.",
            "params": {
              "_index": "Index of the desired batch in batchIds array."
            }
          },
          "getRoyaltyInfoForToken(uint256)": {
            "details": "Returns royalty recipient and bps for `_tokenId`.",
            "params": {
              "_tokenId": "The tokenID of the NFT for which to query royalty info."
            }
          },
          "mintTo(address,uint256,string,uint256)": {
            "details": "- The logic in the `_canMint` function determines whether the caller is authorized to mint NFTs.                   - If `_tokenId == type(uint256).max` a new NFT at tokenId `nextTokenIdToMint` is minted. If the given                     `tokenId < nextTokenIdToMint`, then additional supply of an existing NFT is being minted.",
            "params": {
              "_amount": "The amount of the same NFT to mint.",
              "_to": "The recipient of the NFTs to mint.",
              "_tokenId": "The tokenId of the NFT to mint.",
              "_tokenURI": "The full metadata URI for the NFTs minted (if a new NFT is being minted)."
            }
          },
          "mintWithSignature((address,address,uint256,address,uint256,string,uint256,uint256,address,uint128,uint128,bytes32),bytes)": {
            "params": {
              "_req": "The payload / mint request.",
              "_signature": "The signature produced by an account signing the mint request."
            }
          },
          "multicall(bytes[])": {
            "details": "Receives and executes a batch of function calls on this contract.",
            "params": {
              "data": "The bytes data that makes up the batch of function calls to execute."
            },
            "returns": {
              "results": "The bytes data that makes up the result of the batch of function calls executed."
            }
          },
          "primarySaleRecipient()": {
            "details": "Returns primary sale recipient address."
          },
          "royaltyInfo(uint256,uint256)": {
            "details": "Returns royalty amount and recipient for `tokenId` and `salePrice`.",
            "params": {
              "salePrice": "Sale price of the token.",
              "tokenId": "The tokenID of the NFT for which to query royalty info."
            },
            "returns": {
              "receiver": "       Address of royalty recipient account.",
              "royaltyAmount": "  Royalty amount calculated at current royaltyBps value."
            }
          },
          "setContractURI(string)": {
            "details": "Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.",
            "params": {
              "_uri": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "setDefaultRoyaltyInfo(address,uint256)": {
            "details": "Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {DefaultRoyalty Event}; See {_setupDefaultRoyaltyInfo}.",
            "params": {
              "_royaltyBps": "Updated royalty bps.",
              "_royaltyRecipient": "Address to be set as default royalty recipient."
            }
          },
          "setOwner(address)": {
            "params": {
              "_newOwner": "The address to set as the new owner of the contract."
            }
          },
          "setPrimarySaleRecipient(address)": {
            "details": "Caller should be authorized to set primary sales info.                  See {_canSetPrimarySaleRecipient}.                  Emits {PrimarySaleRecipientUpdated Event}; See {_setupPrimarySaleRecipient}.",
            "params": {
              "_saleRecipient": "Address to be set as new recipient of primary sales."
            }
          },
          "setRoyaltyInfoForToken(uint256,address,uint256)": {
            "details": "Sets royalty info for `_tokenId`. Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {RoyaltyForToken Event}; See {_setupRoyaltyInfoForToken}.",
            "params": {
              "_bps": "Updated royalty bps for the token Id.",
              "_recipient": "Address to be set as royalty recipient for given token Id."
            }
          },
          "supportsInterface(bytes4)": {
            "details": "See ERC165: https://eips.ethereum.org/EIPS/eip-165"
          },
          "uri(uint256)": {
            "params": {
              "_tokenId": "The tokenId of the token for which a URI should be returned."
            },
            "returns": {
              "_0": "The metadata URI for the given tokenId."
            }
          },
          "verify((address,address,uint256,address,uint256,string,uint256,uint256,address,uint128,uint128,bytes32),bytes)": {
            "details": "Verifies that a mint request is signed by an account holding MINTER_ROLE (at the time of the function call)."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "balanceOf(address,uint256)": {
            "notice": "Get the balance of an account's Tokens."
          },
          "batchMintTo(address,uint256[],uint256[],string)": {
            "notice": "Lets an authorized address mint multiple NEW NFTs at once to a recipient."
          },
          "burn(address,uint256,uint256)": {
            "notice": "Lets an owner or approved operator burn NFTs of the given tokenId."
          },
          "burnBatch(address,uint256[],uint256[])": {
            "notice": "Lets an owner or approved operator burn NFTs of the given tokenIds."
          },
          "contractURI()": {
            "notice": "Returns the contract metadata URI."
          },
          "getBaseURICount()": {
            "notice": "Returns the count of batches of NFTs."
          },
          "getBatchIdAtIndex(uint256)": {
            "notice": "Returns the ID for the batch of tokens at the given index."
          },
          "getDefaultRoyaltyInfo()": {
            "notice": "Returns the defualt royalty recipient and BPS for this contract's NFTs."
          },
          "getRoyaltyInfoForToken(uint256)": {
            "notice": "View royalty info for a given token."
          },
          "isApprovedForAll(address,address)": {
            "notice": "Queries the approval status of an operator for a given owner."
          },
          "mintTo(address,uint256,string,uint256)": {
            "notice": "Lets an authorized address mint NFTs to a recipient."
          },
          "mintWithSignature((address,address,uint256,address,uint256,string,uint256,uint256,address,uint128,uint128,bytes32),bytes)": {
            "notice": "Mints tokens according to the provided mint request."
          },
          "multicall(bytes[])": {
            "notice": "Receives and executes a batch of function calls on this contract."
          },
          "nextTokenIdToMint()": {
            "notice": "The tokenId assigned to the next new NFT to be minted."
          },
          "owner()": {
            "notice": "Returns the owner of the contract."
          },
          "royaltyInfo(uint256,uint256)": {
            "notice": "View royalty info for a given token and sale price."
          },
          "setContractURI(string)": {
            "notice": "Lets a contract admin set the URI for contract-level metadata."
          },
          "setDefaultRoyaltyInfo(address,uint256)": {
            "notice": "Updates default royalty recipient and bps."
          },
          "setOwner(address)": {
            "notice": "Lets an authorized wallet set a new owner for the contract."
          },
          "setPrimarySaleRecipient(address)": {
            "notice": "Updates primary sale recipient."
          },
          "setRoyaltyInfoForToken(uint256,address,uint256)": {
            "notice": "Updates default royalty recipient and bps for a particular token."
          },
          "totalSupply(uint256)": {
            "notice": "Returns the total supply of NFTs of a given tokenId"
          },
          "uri(uint256)": {
            "notice": "Returns the metadata URI for the given tokenId."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=lib/chainlink/",
        "@ds-test/=lib/ds-test/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@std/=lib/forge-std/src/",
        "@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/",
        "ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/",
        "ERC721A/=lib/ERC721A/contracts/",
        "chainlink/=lib/chainlink/",
        "contracts/=contracts/",
        "ds-test/=lib/ds-test/src/",
        "dynamic-contracts/=lib/dynamic-contracts/src/",
        "erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/",
        "erc721a-upgradeable/=lib/ERC721A-Upgradeable/",
        "erc721a/=lib/ERC721A/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/base/ERC1155SignatureMint.sol": "ERC1155SignatureMint"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/base/ERC1155Base.sol": {
        "keccak256": "0x77eab178fc5807b8f1819a87bbdeb7dbde403db91ec8d13323087060f069376d",
        "urls": [
          "bzz-raw://249d67fd0fb2c3b3e4115bffa702a3ee1d344ae95f8ebe3c6481797a46bde291",
          "dweb:/ipfs/QmTS67Q6Lz86imxnLwxCJEdKQtnBhG2YNx94LMJXz8XbrC"
        ],
        "license": "Apache-2.0"
      },
      "contracts/base/ERC1155SignatureMint.sol": {
        "keccak256": "0x1c6fdf9e728bc83d3c180e998afbf06f9135baa817dd2bbd8eb78304b74ef7ad",
        "urls": [
          "bzz-raw://9b25dc5e271c91972f4ed3783f30a9affacdca0cc9d95665ca335fc716ed0323",
          "dweb:/ipfs/QmbQrZJU2CxZGpz8URVM4Mzh8zdK8F8ot12VsajWWdv44g"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/ERC1155.sol": {
        "keccak256": "0x378fcbe3a191a44060f66b2b2932391cbf31f945039087b9024bb2eee91ba5b6",
        "urls": [
          "bzz-raw://f36697fa07898c79d77d0b294849de4eab4b6d24679c33f0b448b8d82e172f4b",
          "dweb:/ipfs/QmZ8jqskjHnjHuoDqa9dQdP6KrRDyHcvBKVDZZNXX9e7bS"
        ],
        "license": "Apache 2.0"
      },
      "contracts/eip/interface/IERC1155.sol": {
        "keccak256": "0x17c265f3f47161c9d2f6c7f7f4040440df9ad4cd7eb74eb411bf25a94b542f9e",
        "urls": [
          "bzz-raw://c4f468eb184f2a08909834b51e33e854741647f9798aa1e6746f3f1b69525552",
          "dweb:/ipfs/QmbCMy9vJLga2dCxGG6nXW7VKGqsMrzU8phPhcd58xkapq"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC1155Metadata.sol": {
        "keccak256": "0xe9d530111d75c5d6db4ca4f30dd76d6a29d9363ab7390e922942a0fc9e3ce32e",
        "urls": [
          "bzz-raw://8272be1ca643bd3038fd67b00acad09a8dca44536284bcca6b862d09f8b53e43",
          "dweb:/ipfs/Qme9wiWPDfh36xm7TNaxpAYxv5jAptMNLtYksRwc5zNFbU"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC1155Receiver.sol": {
        "keccak256": "0xfef511c703e7ebdb193d35a67e0d9b70728789b2ac45cc5cf5ee56c4ad034f00",
        "urls": [
          "bzz-raw://f838e560ba0caddc54ad4ba082e0ff3bf27a721c15bc0cf19791fef7940837a5",
          "dweb:/ipfs/QmTwfwYYK4Ky9PPhdDoVVmZJaJ7y2hZDH8YnBQRfiA8Baz"
        ],
        "license": "MIT"
      },
      "contracts/eip/interface/IERC165.sol": {
        "keccak256": "0x35d0a916f70344a5fcc6c67cb531b6150d2fce43e72a6282385eab02020f2f49",
        "urls": [
          "bzz-raw://75ccd8b9a8b52a93b8097fcb8181b7afb6d72bbe6eaabf434f0481a7a207cc8a",
          "dweb:/ipfs/QmPUZAEE4nwkijcE2amAXAWEVGVG5XaKWGhpgnRwpAf93R"
        ],
        "license": "MIT"
      },
      "contracts/eip/interface/IERC20.sol": {
        "keccak256": "0x5bdd9dd97ba7d9d7c9a2953db287e4d9d7fa93a27a96bc2e72a8da4919b6f7ff",
        "urls": [
          "bzz-raw://45527c265ee5de6bbb3ecfc052e7b1175531a82c2ac16172020aee855f7dd592",
          "dweb:/ipfs/QmVZthqbG916qUQSwv1LE8bB58ZGQ1VfQbLbbRV5urfEYA"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC2981.sol": {
        "keccak256": "0x7886c17b1bc3df885201378fd070d2f00d05fa54f20f7daf10382ec6ff4bd0c9",
        "urls": [
          "bzz-raw://a0802623ba9555f6d186bab5fd139203b643e88ea31d78f4f05cddd4008ac6cf",
          "dweb:/ipfs/QmYbqzSKkKmF2xYeH1zGNewBDNAhukuaZEUVAvYgnKt1He"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/BatchMintMetadata.sol": {
        "keccak256": "0x1d1ee64f8456dc8b4cdd096e27ac4687babd485f49a728146126744d67f25f2f",
        "urls": [
          "bzz-raw://9e01b0d51bdccbcce9095f606c8624926b518c1385c1349c41896236a0345ee0",
          "dweb:/ipfs/QmWHTbztwRf9Fyq4617MrVSqF8o7UXMT5nFe6epQ92N6L9"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/ContractMetadata.sol": {
        "keccak256": "0xf53ab08ec3057056872c15e35a5610f7a43426bd2829786aed006d527177adfe",
        "urls": [
          "bzz-raw://ee132ae5efdd372152febfcd8fd3a7cb82c7019367d92c886f5096003a79f392",
          "dweb:/ipfs/QmRW1cGWmZAu57huZpTUwsWB8AxUFrBp6g4NqozXpbWsR6"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Multicall.sol": {
        "keccak256": "0x737a71c74307fa360863550d64bbaef599bbcb47829b19c3743ed1ff22b9af55",
        "urls": [
          "bzz-raw://7e82a79ee183dffa3ec01faac0907e04d72a185e55b7c24bff8e8e952b05f4c2",
          "dweb:/ipfs/QmQ9neZqpcgJtGgm84FBzMqFntZ1Sk1KFTWhjCMq8vnKDg"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/Ownable.sol": {
        "keccak256": "0x45447691686861237d5e1acb9d723d861a3fb3d561335e4f385d1547f25e27a5",
        "urls": [
          "bzz-raw://5142293e36c736f744c73aaecab5f7be8e2d5ac70acc67851e0cea5171fd6782",
          "dweb:/ipfs/QmVJT5B84o5vFc5E2VteZdBhrT1HMutc7Ax72UKD1aZatJ"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/PrimarySale.sol": {
        "keccak256": "0x9ef1ad82fadf988a07f4034b92ccdb3281682693e41759a79042814d36095f42",
        "urls": [
          "bzz-raw://0d962b48453e1f50b808193135c2f14265324fa8b75fe3b405ef7836e38921f7",
          "dweb:/ipfs/QmZDLNsZQj9kNcb15nBuWRpPwDdDvJS2gtFwqEs2Lwxb1N"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Royalty.sol": {
        "keccak256": "0xcc3110048db91d4ecd05afcc6721fce6ade5eee8c2da0af8955e86ece8754350",
        "urls": [
          "bzz-raw://a1e830502fda46ab7618b65e155341d42bf007717edb27711b09bf6250ce1485",
          "dweb:/ipfs/QmY5fKpg7aCubR7fENu9htRFspU8hpSo7CVUNJxQdh8kv1"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/SignatureMintERC1155.sol": {
        "keccak256": "0x80e892d8ced4d82e1daa26b0f4ff06521c69bf20142954fc80a30c2888cb6272",
        "urls": [
          "bzz-raw://ba22bb0bd922b9d3ab5262585e545adcb53487222a6c3a5db55574ebf83208cd",
          "dweb:/ipfs/QmeNggMXJNba55aupBAGkszYiX4NmYX13cTSs5bM86CMzC"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IContractMetadata.sol": {
        "keccak256": "0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2",
        "urls": [
          "bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a",
          "dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IMulticall.sol": {
        "keccak256": "0xe2bbd37b8fdb9cc8b933e598512a068ebb214b3f5abc2bc634916def55be4ef3",
        "urls": [
          "bzz-raw://012352099c262348ac755a53b082af520babc6c66dc5f1251fc23609728340ca",
          "dweb:/ipfs/QmcXEgzQ53jdJX5ZNy8zivvUjDq7J8WTnR1yAiwTpkQ2ar"
        ],
        "license": "MIT"
      },
      "contracts/extension/interface/IOwnable.sol": {
        "keccak256": "0xd659a64da6264fdd50ee379be032fea4917eba4fadfd6d366107fb17e46907f3",
        "urls": [
          "bzz-raw://c15940c4a3d229f4fdd1226fe297a58fde10b07b86a34de1ed11a8802dd5dea9",
          "dweb:/ipfs/QmS8p8CxWiahLkYsCWNhFjCnmQzuc4ck3kjYYuCFj8LsmC"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPrimarySale.sol": {
        "keccak256": "0x77c89cb8d9b781b0a08b1fa81c95a0dd5c19200b2fb0dc884c1084b931624004",
        "urls": [
          "bzz-raw://a37b042af11a08ba5518dadf72c91745d1b5f42b1c20ea5282492bfd18f53869",
          "dweb:/ipfs/QmWEYYG5VqR8MRfr2rydDV98GLKmaJtCC8G1W7MzJ9qFnF"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IRoyalty.sol": {
        "keccak256": "0x13912ba3970fdedd1eb5bf8bf0bcc5e64e43f2cadb8d22c3d6fb695fd9877385",
        "urls": [
          "bzz-raw://b84d19df7aa9cb7460cca50ab050cdcfffb62f53c246daf35df276cad7088e9b",
          "dweb:/ipfs/QmNPPHJuiW1KCcq3aXELnA4X8NaSPM9S2vHbsBEEDYiwP8"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/ISignatureMintERC1155.sol": {
        "keccak256": "0x5bb7951862f196799db88a77cda1642a25ee5b161295ce15a4b075b29502cf95",
        "urls": [
          "bzz-raw://f8cf5b9b7b826df549246df2fe9bf9d1e177b41f7200c5d0365d01dcaf27891f",
          "dweb:/ipfs/QmTD3jRWLuxhBJtQPeq4VhkhNpDUUAf1NipnGFQYAXhWZL"
        ],
        "license": "Apache-2.0"
      },
      "contracts/external-deps/openzeppelin/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xa6149938a7c7c8af4244743aeaafcfb1fd9ce15ad45de58fa9576f0ed5599b2c",
        "urls": [
          "bzz-raw://839aa4ea6ef6d1972881bfd7420a9ddcd2f37139e3f0bf25310f93f48410702d",
          "dweb:/ipfs/QmSH65kStfbgMbfjFdfJqV412omPy6nB1JMvMt9q7SsytW"
        ],
        "license": "MIT"
      },
      "contracts/external-deps/openzeppelin/utils/cryptography/ECDSA.sol": {
        "keccak256": "0x2e5b68f695b674731ee7f041a4924d7bb917b87d1efc8cf8ec00904ee7ab8b49",
        "urls": [
          "bzz-raw://9f0ead0687405faad7c08e19bfa4d26d3517ca30fa5bdf5b7b77f09d074f6918",
          "dweb:/ipfs/QmaovoMzoEnW8t8EbuA5XXrUxXvgEmNk7F9aqzR56BQA6v"
        ],
        "license": "MIT"
      },
      "contracts/external-deps/openzeppelin/utils/cryptography/EIP712.sol": {
        "keccak256": "0x6688fad58b9ec0286d40fa957152e575d5d8bd4c3aa80985efdb11b44f776ae7",
        "urls": [
          "bzz-raw://8bc00ab7f133cdaafd212a5cc6a16c8d37319721105d130c8e5af0c4e8f170ba",
          "dweb:/ipfs/QmVmf6LVMfFiEkvKYLzSv3bGHzymEW93AcUuFrNUdY3NtT"
        ],
        "license": "MIT"
      },
      "contracts/infra/interface/IWETH.sol": {
        "keccak256": "0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b",
        "urls": [
          "bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1",
          "dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/CurrencyTransferLib.sol": {
        "keccak256": "0x4a30bc9a8cd6cc8b855621fb1a651e2c3a1639b0ad153f1139c3ba463605672d",
        "urls": [
          "bzz-raw://417cc64ec6393f3cc89981ca9c32bbcc444a5f91363d69f84dd8ace888b2b859",
          "dweb:/ipfs/QmZeaQsYGx4VNoP8e1fcwC87PwvyakheWYeuwEwhFSJnvB"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/TWAddress.sol": {
        "keccak256": "0x460f032cf3bf43d586e126ab2ec8be4335767f497ccb699741546a1cfba94a7e",
        "urls": [
          "bzz-raw://28fcbf6dde6c2eeb9864f6ec6f21dcc81ec426877debf4b912f2f3bc5b0fc91e",
          "dweb:/ipfs/QmS1SHrZDfefX8EE7DdvszTY6VPCHydf4HM7NKJ2gP72e6"
        ],
        "license": "Apache 2.0"
      },
      "contracts/lib/TWStrings.sol": {
        "keccak256": "0xef7e9954d888f99baffc10db1d9bf6a2beb66c842d81dea90352ddded22cbbf8",
        "urls": [
          "bzz-raw://832415134684f5413f9d0f3f5536aa30848690cfe54769f7730a3807438f3bf9",
          "dweb:/ipfs/QmduTiUdtsnyJVMXpdomohEWDVg46aZhnS9uTURu4x1NYt"
        ],
        "license": "Apache 2.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/base/ERC1155SignatureMint.sol",
    "id": 2284,
    "exportedSymbols": {
      "BatchMintMetadata": [
        17299
      ],
      "ContractMetadata": [
        17526
      ],
      "CurrencyTransferLib": [
        63578
      ],
      "ECDSA": [
        49745
      ],
      "EIP712": [
        49899
      ],
      "ERC1155": [
        7783
      ],
      "ERC1155Base": [
        603
      ],
      "ERC1155SignatureMint": [
        2283
      ],
      "IContractMetadata": [
        32437
      ],
      "IERC165": [
        13829
      ],
      "IERC20": [
        13899
      ],
      "IERC2981": [
        13973
      ],
      "IMulticall": [
        32926
      ],
      "IOwnable": [
        33183
      ],
      "IPrimarySale": [
        33345
      ],
      "IRoyalty": [
        33409
      ],
      "ISignatureMintERC1155": [
        33785
      ],
      "IWETH": [
        54557
      ],
      "Multicall": [
        20595
      ],
      "Ownable": [
        21153
      ],
      "PrimarySale": [
        22067
      ],
      "Royalty": [
        22395
      ],
      "SafeERC20": [
        48369
      ],
      "SignatureMintERC1155": [
        23081
      ],
      "TWAddress": [
        64152
      ],
      "TWStrings": [
        64852
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:4788:4",
    "nodes": [
      {
        "id": 1998,
        "nodeType": "PragmaDirective",
        "src": "39:23:4",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 1999,
        "nodeType": "ImportDirective",
        "src": "86:27:4",
        "nodes": [],
        "absolutePath": "contracts/base/ERC1155Base.sol",
        "file": "./ERC1155Base.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2284,
        "sourceUnit": 604,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 2000,
        "nodeType": "ImportDirective",
        "src": "115:38:4",
        "nodes": [],
        "absolutePath": "contracts/extension/PrimarySale.sol",
        "file": "../extension/PrimarySale.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2284,
        "sourceUnit": 22068,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 2001,
        "nodeType": "ImportDirective",
        "src": "154:47:4",
        "nodes": [],
        "absolutePath": "contracts/extension/SignatureMintERC1155.sol",
        "file": "../extension/SignatureMintERC1155.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2284,
        "sourceUnit": 23082,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 2002,
        "nodeType": "ImportDirective",
        "src": "203:40:4",
        "nodes": [],
        "absolutePath": "contracts/lib/CurrencyTransferLib.sol",
        "file": "../lib/CurrencyTransferLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2284,
        "sourceUnit": 63579,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 2283,
        "nodeType": "ContractDefinition",
        "src": "838:3988:4",
        "nodes": [
          {
            "id": 2036,
            "nodeType": "FunctionDefinition",
            "src": "1103:353:4",
            "nodes": [],
            "body": {
              "id": 2035,
              "nodeType": "Block",
              "src": "1390:66:4",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2032,
                        "name": "_primarySaleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2021,
                        "src": "1427:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2031,
                      "name": "_setupPrimarySaleRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22060,
                      "src": "1400:26:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2033,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1400:49:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2034,
                  "nodeType": "ExpressionStatement",
                  "src": "1400:49:4"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 2024,
                    "name": "_defaultAdmin",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2011,
                    "src": "1327:13:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 2025,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2013,
                    "src": "1342:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 2026,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2015,
                    "src": "1349:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 2027,
                    "name": "_royaltyRecipient",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2017,
                    "src": "1358:17:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 2028,
                    "name": "_royaltyBps",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2019,
                    "src": "1377:11:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  }
                ],
                "id": 2029,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 2023,
                  "name": "ERC1155Base",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 603,
                  "src": "1315:11:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "1315:74:4"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 2022,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2011,
                  "mutability": "mutable",
                  "name": "_defaultAdmin",
                  "nameLocation": "1132:13:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 2036,
                  "src": "1124:21:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2010,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1124:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2013,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "1169:5:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 2036,
                  "src": "1155:19:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2012,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1155:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2015,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "1198:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 2036,
                  "src": "1184:21:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2014,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1184:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2017,
                  "mutability": "mutable",
                  "name": "_royaltyRecipient",
                  "nameLocation": "1223:17:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 2036,
                  "src": "1215:25:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2016,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1215:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2019,
                  "mutability": "mutable",
                  "name": "_royaltyBps",
                  "nameLocation": "1258:11:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 2036,
                  "src": "1250:19:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 2018,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "1250:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2021,
                  "mutability": "mutable",
                  "name": "_primarySaleRecipient",
                  "nameLocation": "1287:21:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 2036,
                  "src": "1279:29:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2020,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1279:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1114:200:4"
            },
            "returnParameters": {
              "id": 2030,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1390:0:4"
            },
            "scope": 2283,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 2168,
            "nodeType": "FunctionDefinition",
            "src": "1894:1350:4",
            "nodes": [],
            "body": {
              "id": 2167,
              "nodeType": "Block",
              "src": "2078:1166:4",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2052,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2049,
                            "name": "_req",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2040,
                            "src": "2096:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_MintRequest_$33748_calldata_ptr",
                              "typeString": "struct ISignatureMintERC1155.MintRequest calldata"
                            }
                          },
                          "id": 2050,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "quantity",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 33737,
                          "src": "2096:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2051,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2112:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2096:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d696e74696e67207a65726f20746f6b656e732e",
                        "id": 2053,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2115:22:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7acedc89dd3658da26d0488f7e55737f51bdbd8424532db0708cd962cbb1712b",
                          "typeString": "literal_string \"Minting zero tokens.\""
                        },
                        "value": "Minting zero tokens."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7acedc89dd3658da26d0488f7e55737f51bdbd8424532db0708cd962cbb1712b",
                          "typeString": "literal_string \"Minting zero tokens.\""
                        }
                      ],
                      "id": 2048,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2088:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2088:50:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2055,
                  "nodeType": "ExpressionStatement",
                  "src": "2088:50:4"
                },
                {
                  "assignments": [
                    2057
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2057,
                      "mutability": "mutable",
                      "name": "tokenIdToMint",
                      "nameLocation": "2157:13:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 2167,
                      "src": "2149:21:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2056,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2149:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2058,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2149:21:4"
                },
                {
                  "assignments": [
                    2060
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2060,
                      "mutability": "mutable",
                      "name": "nextIdToMint",
                      "nameLocation": "2188:12:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 2167,
                      "src": "2180:20:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2059,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2180:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2063,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2061,
                      "name": "nextTokenIdToMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 454,
                      "src": "2203:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 2062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2203:19:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2180:42:4"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2071,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 2064,
                        "name": "_req",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2040,
                        "src": "2237:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MintRequest_$33748_calldata_ptr",
                          "typeString": "struct ISignatureMintERC1155.MintRequest calldata"
                        }
                      },
                      "id": 2065,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "tokenId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 33733,
                      "src": "2237:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 2068,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2258:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 2067,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2258:7:4",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            }
                          ],
                          "id": 2066,
                          "name": "type",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -27,
                          "src": "2253:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 2069,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2253:13:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_meta_type_t_uint256",
                          "typeString": "type(uint256)"
                        }
                      },
                      "id": 2070,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "max",
                      "nodeType": "MemberAccess",
                      "src": "2253:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2237:33:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 2094,
                    "nodeType": "Block",
                    "src": "2368:117:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2085,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 2082,
                                  "name": "_req",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2040,
                                  "src": "2390:4:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_MintRequest_$33748_calldata_ptr",
                                    "typeString": "struct ISignatureMintERC1155.MintRequest calldata"
                                  }
                                },
                                "id": 2083,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "tokenId",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 33733,
                                "src": "2390:12:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "id": 2084,
                                "name": "nextIdToMint",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2060,
                                "src": "2405:12:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2390:27:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "696e76616c6964206964",
                              "id": 2086,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2419:12:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_2c270178c73806a8dbbf8aad0f9eb77e61abe0b7a93239d42f99fae572eed526",
                                "typeString": "literal_string \"invalid id\""
                              },
                              "value": "invalid id"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_2c270178c73806a8dbbf8aad0f9eb77e61abe0b7a93239d42f99fae572eed526",
                                "typeString": "literal_string \"invalid id\""
                              }
                            ],
                            "id": 2081,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2382:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2087,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2382:50:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2088,
                        "nodeType": "ExpressionStatement",
                        "src": "2382:50:4"
                      },
                      {
                        "expression": {
                          "id": 2092,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2089,
                            "name": "tokenIdToMint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2057,
                            "src": "2446:13:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 2090,
                              "name": "_req",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2040,
                              "src": "2462:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_MintRequest_$33748_calldata_ptr",
                                "typeString": "struct ISignatureMintERC1155.MintRequest calldata"
                              }
                            },
                            "id": 2091,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tokenId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 33733,
                            "src": "2462:12:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2446:28:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2093,
                        "nodeType": "ExpressionStatement",
                        "src": "2446:28:4"
                      }
                    ]
                  },
                  "id": 2095,
                  "nodeType": "IfStatement",
                  "src": "2233:252:4",
                  "trueBody": {
                    "id": 2080,
                    "nodeType": "Block",
                    "src": "2272:90:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 2074,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2072,
                            "name": "tokenIdToMint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2057,
                            "src": "2286:13:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2073,
                            "name": "nextIdToMint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2060,
                            "src": "2302:12:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2286:28:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2075,
                        "nodeType": "ExpressionStatement",
                        "src": "2286:28:4"
                      },
                      {
                        "expression": {
                          "id": 2078,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2076,
                            "name": "nextTokenIdToMint_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28,
                            "src": "2328:18:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 2077,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2350:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "2328:23:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2079,
                        "nodeType": "ExpressionStatement",
                        "src": "2328:23:4"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 2101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2096,
                      "name": "signer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2046,
                      "src": "2534:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2098,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2040,
                          "src": "2559:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$33748_calldata_ptr",
                            "typeString": "struct ISignatureMintERC1155.MintRequest calldata"
                          }
                        },
                        {
                          "id": 2099,
                          "name": "_signature",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2042,
                          "src": "2565:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_MintRequest_$33748_calldata_ptr",
                            "typeString": "struct ISignatureMintERC1155.MintRequest calldata"
                          },
                          {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        ],
                        "id": 2097,
                        "name": "_processRequest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23006,
                        "src": "2543:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_MintRequest_$33748_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_address_$",
                          "typeString": "function (struct ISignatureMintERC1155.MintRequest calldata,bytes calldata) returns (address)"
                        }
                      },
                      "id": 2100,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2543:33:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2534:42:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2102,
                  "nodeType": "ExpressionStatement",
                  "src": "2534:42:4"
                },
                {
                  "assignments": [
                    2104
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2104,
                      "mutability": "mutable",
                      "name": "receiver",
                      "nameLocation": "2595:8:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 2167,
                      "src": "2587:16:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2103,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2587:7:4",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2107,
                  "initialValue": {
                    "expression": {
                      "id": 2105,
                      "name": "_req",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2040,
                      "src": "2606:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MintRequest_$33748_calldata_ptr",
                        "typeString": "struct ISignatureMintERC1155.MintRequest calldata"
                      }
                    },
                    "id": 2106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "to",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 33725,
                    "src": "2606:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2587:26:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2109,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2040,
                          "src": "2670:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$33748_calldata_ptr",
                            "typeString": "struct ISignatureMintERC1155.MintRequest calldata"
                          }
                        },
                        "id": 2110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "primarySaleRecipient",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 33731,
                        "src": "2670:25:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 2111,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2040,
                          "src": "2697:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$33748_calldata_ptr",
                            "typeString": "struct ISignatureMintERC1155.MintRequest calldata"
                          }
                        },
                        "id": 2112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "quantity",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 33737,
                        "src": "2697:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 2113,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2040,
                          "src": "2712:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$33748_calldata_ptr",
                            "typeString": "struct ISignatureMintERC1155.MintRequest calldata"
                          }
                        },
                        "id": 2114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "currency",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 33741,
                        "src": "2712:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 2115,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2040,
                          "src": "2727:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$33748_calldata_ptr",
                            "typeString": "struct ISignatureMintERC1155.MintRequest calldata"
                          }
                        },
                        "id": 2116,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "pricePerToken",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 33739,
                        "src": "2727:18:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2108,
                      "name": "_collectPriceOnClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2282,
                      "src": "2649:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,address,uint256)"
                      }
                    },
                    "id": 2117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2649:97:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2118,
                  "nodeType": "ExpressionStatement",
                  "src": "2649:97:4"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 2125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 2119,
                        "name": "_req",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2040,
                        "src": "2802:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MintRequest_$33748_calldata_ptr",
                          "typeString": "struct ISignatureMintERC1155.MintRequest calldata"
                        }
                      },
                      "id": 2120,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "royaltyRecipient",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 33727,
                      "src": "2802:21:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 2123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2835:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 2122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2827:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 2121,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2827:7:4",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 2124,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2827:10:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2802:35:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2135,
                  "nodeType": "IfStatement",
                  "src": "2798:146:4",
                  "trueBody": {
                    "id": 2134,
                    "nodeType": "Block",
                    "src": "2839:105:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2127,
                              "name": "tokenIdToMint",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2057,
                              "src": "2879:13:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 2128,
                                "name": "_req",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2040,
                                "src": "2894:4:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_MintRequest_$33748_calldata_ptr",
                                  "typeString": "struct ISignatureMintERC1155.MintRequest calldata"
                                }
                              },
                              "id": 2129,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "royaltyRecipient",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 33727,
                              "src": "2894:21:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 2130,
                                "name": "_req",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2040,
                                "src": "2917:4:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_MintRequest_$33748_calldata_ptr",
                                  "typeString": "struct ISignatureMintERC1155.MintRequest calldata"
                                }
                              },
                              "id": 2131,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "royaltyBps",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 33729,
                              "src": "2917:15:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2126,
                            "name": "_setupRoyaltyInfoForToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22388,
                            "src": "2853:25:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,address,uint256)"
                            }
                          },
                          "id": 2132,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2853:80:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2133,
                        "nodeType": "ExpressionStatement",
                        "src": "2853:80:4"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 2136,
                        "name": "_req",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2040,
                        "src": "2977:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MintRequest_$33748_calldata_ptr",
                          "typeString": "struct ISignatureMintERC1155.MintRequest calldata"
                        }
                      },
                      "id": 2137,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "tokenId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 33733,
                      "src": "2977:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 2140,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2998:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 2139,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2998:7:4",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            }
                          ],
                          "id": 2138,
                          "name": "type",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -27,
                          "src": "2993:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 2141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2993:13:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_meta_type_t_uint256",
                          "typeString": "type(uint256)"
                        }
                      },
                      "id": 2142,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "max",
                      "nodeType": "MemberAccess",
                      "src": "2993:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2977:33:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2151,
                  "nodeType": "IfStatement",
                  "src": "2973:101:4",
                  "trueBody": {
                    "id": 2150,
                    "nodeType": "Block",
                    "src": "3012:62:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2145,
                              "name": "tokenIdToMint",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2057,
                              "src": "3039:13:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 2146,
                                "name": "_req",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2040,
                                "src": "3054:4:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_MintRequest_$33748_calldata_ptr",
                                  "typeString": "struct ISignatureMintERC1155.MintRequest calldata"
                                }
                              },
                              "id": 2147,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "uri",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 33735,
                              "src": "3054:8:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              }
                            ],
                            "id": 2144,
                            "name": "_setTokenURI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7244,
                            "src": "3026:12:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,string memory)"
                            }
                          },
                          "id": 2148,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3026:37:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2149,
                        "nodeType": "ExpressionStatement",
                        "src": "3026:37:4"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2153,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2104,
                        "src": "3114:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2154,
                        "name": "tokenIdToMint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2057,
                        "src": "3124:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 2155,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2040,
                          "src": "3139:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$33748_calldata_ptr",
                            "typeString": "struct ISignatureMintERC1155.MintRequest calldata"
                          }
                        },
                        "id": 2156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "quantity",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 33737,
                        "src": "3139:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 2157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3154:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 2152,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7318,
                      "src": "3108:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 2158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3108:49:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2159,
                  "nodeType": "ExpressionStatement",
                  "src": "3108:49:4"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2161,
                        "name": "signer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2046,
                        "src": "3199:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2162,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2104,
                        "src": "3207:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2163,
                        "name": "tokenIdToMint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2057,
                        "src": "3217:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2164,
                        "name": "_req",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2040,
                        "src": "3232:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MintRequest_$33748_calldata_ptr",
                          "typeString": "struct ISignatureMintERC1155.MintRequest calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_MintRequest_$33748_calldata_ptr",
                          "typeString": "struct ISignatureMintERC1155.MintRequest calldata"
                        }
                      ],
                      "id": 2160,
                      "name": "TokensMintedWithSignature",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33760,
                      "src": "3173:25:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_struct$_MintRequest_$33748_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,struct ISignatureMintERC1155.MintRequest memory)"
                      }
                    },
                    "id": 2165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3173:64:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2166,
                  "nodeType": "EmitStatement",
                  "src": "3168:69:4"
                }
              ]
            },
            "baseFunctions": [
              33784
            ],
            "documentation": {
              "id": 2037,
              "nodeType": "StructuredDocumentation",
              "src": "1649:240:4",
              "text": "  @notice           Mints tokens according to the provided mint request.\n  @param _req       The payload / mint request.\n  @param _signature The signature produced by an account signing the mint request."
            },
            "functionSelector": "98a6e993",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintWithSignature",
            "nameLocation": "1903:17:4",
            "overrides": {
              "id": 2044,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2032:8:4"
            },
            "parameters": {
              "id": 2043,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2040,
                  "mutability": "mutable",
                  "name": "_req",
                  "nameLocation": "1942:4:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 2168,
                  "src": "1921:25:4",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_MintRequest_$33748_calldata_ptr",
                    "typeString": "struct ISignatureMintERC1155.MintRequest"
                  },
                  "typeName": {
                    "id": 2039,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2038,
                      "name": "MintRequest",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 33748,
                      "src": "1921:11:4"
                    },
                    "referencedDeclaration": 33748,
                    "src": "1921:11:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MintRequest_$33748_storage_ptr",
                      "typeString": "struct ISignatureMintERC1155.MintRequest"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2042,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "1963:10:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 2168,
                  "src": "1948:25:4",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2041,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1948:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1920:54:4"
            },
            "returnParameters": {
              "id": 2047,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2046,
                  "mutability": "mutable",
                  "name": "signer",
                  "nameLocation": "2066:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 2168,
                  "src": "2058:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2045,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2058:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2057:16:4"
            },
            "scope": 2283,
            "stateMutability": "payable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 2183,
            "nodeType": "FunctionDefinition",
            "src": "3518:134:4",
            "nodes": [],
            "body": {
              "id": 2182,
              "nodeType": "Block",
              "src": "3610:42:4",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 2180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2177,
                      "name": "_signer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2171,
                      "src": "3627:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 2178,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21105,
                        "src": "3638:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 2179,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3638:7:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3627:18:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2176,
                  "id": 2181,
                  "nodeType": "Return",
                  "src": "3620:25:4"
                }
              ]
            },
            "baseFunctions": [
              22936
            ],
            "documentation": {
              "id": 2169,
              "nodeType": "StructuredDocumentation",
              "src": "3436:77:4",
              "text": "@dev Returns whether a given address is authorized to sign mint requests."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSignMintRequest",
            "nameLocation": "3527:19:4",
            "overrides": {
              "id": 2173,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3586:8:4"
            },
            "parameters": {
              "id": 2172,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2171,
                  "mutability": "mutable",
                  "name": "_signer",
                  "nameLocation": "3555:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 2183,
                  "src": "3547:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2170,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3547:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3546:17:4"
            },
            "returnParameters": {
              "id": 2176,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2175,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2183,
                  "src": "3604:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2174,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3604:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3603:6:4"
            },
            "scope": 2283,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 2197,
            "nodeType": "FunctionDefinition",
            "src": "3753:130:4",
            "nodes": [],
            "body": {
              "id": 2196,
              "nodeType": "Block",
              "src": "3838:45:4",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 2194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 2190,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "3855:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 2191,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "3855:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 2192,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21105,
                        "src": "3869:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 2193,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3869:7:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3855:21:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2189,
                  "id": 2195,
                  "nodeType": "Return",
                  "src": "3848:28:4"
                }
              ]
            },
            "baseFunctions": [
              22066
            ],
            "documentation": {
              "id": 2184,
              "nodeType": "StructuredDocumentation",
              "src": "3658:90:4",
              "text": "@dev Returns whether primary sale recipient can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetPrimarySaleRecipient",
            "nameLocation": "3762:27:4",
            "overrides": {
              "id": 2186,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3814:8:4"
            },
            "parameters": {
              "id": 2185,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3789:2:4"
            },
            "returnParameters": {
              "id": 2189,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2188,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2197,
                  "src": "3832:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2187,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3832:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3831:6:4"
            },
            "scope": 2283,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 2282,
            "nodeType": "FunctionDefinition",
            "src": "3973:851:4",
            "nodes": [],
            "body": {
              "id": 2281,
              "nodeType": "Block",
              "src": "4158:666:4",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2209,
                      "name": "_pricePerToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2206,
                      "src": "4172:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 2210,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4190:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4172:19:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2222,
                  "nodeType": "IfStatement",
                  "src": "4168:103:4",
                  "trueBody": {
                    "id": 2221,
                    "nodeType": "Block",
                    "src": "4193:78:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2216,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 2213,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "4215:3:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 2214,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "4215:9:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 2215,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4228:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "4215:14:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "2156616c7565",
                              "id": 2217,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4231:8:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_208006903b0d1b8c530b3b2de29e1f765aa4311b3f136f1a342e9de039eda1b1",
                                "typeString": "literal_string \"!Value\""
                              },
                              "value": "!Value"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_208006903b0d1b8c530b3b2de29e1f765aa4311b3f136f1a342e9de039eda1b1",
                                "typeString": "literal_string \"!Value\""
                              }
                            ],
                            "id": 2212,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4207:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2218,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4207:33:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2219,
                        "nodeType": "ExpressionStatement",
                        "src": "4207:33:4"
                      },
                      {
                        "functionReturnParameters": 2208,
                        "id": 2220,
                        "nodeType": "Return",
                        "src": "4254:7:4"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    2224
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2224,
                      "mutability": "mutable",
                      "name": "totalPrice",
                      "nameLocation": "4289:10:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 2281,
                      "src": "4281:18:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2223,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4281:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2228,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2225,
                      "name": "_quantityToClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2202,
                      "src": "4302:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 2226,
                      "name": "_pricePerToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2206,
                      "src": "4321:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4302:33:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4281:54:4"
                },
                {
                  "assignments": [
                    2230
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2230,
                      "mutability": "mutable",
                      "name": "validMsgValue",
                      "nameLocation": "4351:13:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 2281,
                      "src": "4346:18:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2229,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "4346:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2231,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4346:18:4"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 2235,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2232,
                      "name": "_currency",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2204,
                      "src": "4378:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 2233,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63578,
                        "src": "4391:19:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$63578_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 2234,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "NATIVE_TOKEN",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63346,
                      "src": "4391:32:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4378:45:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 2251,
                    "nodeType": "Block",
                    "src": "4495:55:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 2249,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2244,
                            "name": "validMsgValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2230,
                            "src": "4509:13:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2248,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 2245,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4525:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2246,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "4525:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 2247,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4538:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "4525:14:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "4509:30:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2250,
                        "nodeType": "ExpressionStatement",
                        "src": "4509:30:4"
                      }
                    ]
                  },
                  "id": 2252,
                  "nodeType": "IfStatement",
                  "src": "4374:176:4",
                  "trueBody": {
                    "id": 2243,
                    "nodeType": "Block",
                    "src": "4425:64:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 2241,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2236,
                            "name": "validMsgValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2230,
                            "src": "4439:13:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2240,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 2237,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4455:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2238,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "4455:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 2239,
                              "name": "totalPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2224,
                              "src": "4468:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "4455:23:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "4439:39:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2242,
                        "nodeType": "ExpressionStatement",
                        "src": "4439:39:4"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2254,
                        "name": "validMsgValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2230,
                        "src": "4567:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964206d73672076616c7565",
                        "id": 2255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4582:19:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_de0d8376eff7771bcc57765656c140a92c651b9eeb4df686f809560770e7fe49",
                          "typeString": "literal_string \"Invalid msg value\""
                        },
                        "value": "Invalid msg value"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_de0d8376eff7771bcc57765656c140a92c651b9eeb4df686f809560770e7fe49",
                          "typeString": "literal_string \"Invalid msg value\""
                        }
                      ],
                      "id": 2253,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4559:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4559:43:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2257,
                  "nodeType": "ExpressionStatement",
                  "src": "4559:43:4"
                },
                {
                  "assignments": [
                    2259
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2259,
                      "mutability": "mutable",
                      "name": "saleRecipient",
                      "nameLocation": "4621:13:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 2281,
                      "src": "4613:21:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2258,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4613:7:4",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2270,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 2265,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2260,
                        "name": "_primarySaleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2200,
                        "src": "4637:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 2263,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4670:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2262,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4662:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2261,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4662:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4662:10:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "4637:35:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 2268,
                      "name": "_primarySaleRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2200,
                      "src": "4700:21:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "4637:84:4",
                    "trueExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 2266,
                        "name": "primarySaleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22024,
                        "src": "4675:20:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 2267,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4675:22:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4613:108:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2274,
                        "name": "_currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2204,
                        "src": "4768:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 2275,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4779:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2276,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4779:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2277,
                        "name": "saleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2259,
                        "src": "4791:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2278,
                        "name": "totalPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2224,
                        "src": "4806:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2271,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63578,
                        "src": "4731:19:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$63578_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 2273,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferCurrency",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63383,
                      "src": "4731:36:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 2279,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4731:86:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2280,
                  "nodeType": "ExpressionStatement",
                  "src": "4731:86:4"
                }
              ]
            },
            "documentation": {
              "id": 2198,
              "nodeType": "StructuredDocumentation",
              "src": "3889:79:4",
              "text": "@dev Collects and distributes the primary sale value of NFTs being claimed."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_collectPriceOnClaim",
            "nameLocation": "3982:20:4",
            "parameters": {
              "id": 2207,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2200,
                  "mutability": "mutable",
                  "name": "_primarySaleRecipient",
                  "nameLocation": "4020:21:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 2282,
                  "src": "4012:29:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2199,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4012:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2202,
                  "mutability": "mutable",
                  "name": "_quantityToClaim",
                  "nameLocation": "4059:16:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 2282,
                  "src": "4051:24:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2201,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4051:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2204,
                  "mutability": "mutable",
                  "name": "_currency",
                  "nameLocation": "4093:9:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 2282,
                  "src": "4085:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2203,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4085:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2206,
                  "mutability": "mutable",
                  "name": "_pricePerToken",
                  "nameLocation": "4120:14:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 2282,
                  "src": "4112:22:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2205,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4112:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4002:138:4"
            },
            "returnParameters": {
              "id": 2208,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4158:0:4"
            },
            "scope": 2283,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2004,
              "name": "ERC1155Base",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 603,
              "src": "871:11:4"
            },
            "id": 2005,
            "nodeType": "InheritanceSpecifier",
            "src": "871:11:4"
          },
          {
            "baseName": {
              "id": 2006,
              "name": "PrimarySale",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 22067,
              "src": "884:11:4"
            },
            "id": 2007,
            "nodeType": "InheritanceSpecifier",
            "src": "884:11:4"
          },
          {
            "baseName": {
              "id": 2008,
              "name": "SignatureMintERC1155",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 23081,
              "src": "897:20:4"
            },
            "id": 2009,
            "nodeType": "InheritanceSpecifier",
            "src": "897:20:4"
          }
        ],
        "canonicalName": "ERC1155SignatureMint",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 2003,
          "nodeType": "StructuredDocumentation",
          "src": "245:591:4",
          "text": "      BASE:      ERC1155Base\n      EXTENSION: SignatureMintERC1155\n  The `ERC1155SignatureMint` contract uses the `ERC1155Base` contract, along with the `SignatureMintERC1155` extension.\n  The 'signature minting' mechanism in the `SignatureMintERC1155` extension uses EIP 712, and is a way for a contract\n  admin to authorize an external party's request to mint tokens on the admin's contract. At a high level, this means\n  you can authorize some external party to mint tokens on your contract, and specify what exactly will be minted by\n  that external party."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          2283,
          23081,
          33785,
          49899,
          22067,
          33345,
          603,
          17299,
          20595,
          32926,
          22395,
          33409,
          13973,
          13829,
          21153,
          33183,
          17526,
          32437,
          7783,
          13764,
          13742
        ],
        "name": "ERC1155SignatureMint",
        "nameLocation": "847:20:4",
        "scope": 2284,
        "usedErrors": []
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 4
}