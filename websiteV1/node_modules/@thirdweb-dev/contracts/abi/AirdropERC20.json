{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "AirdropFailed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "prevURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "newURI",
          "type": "string"
        }
      ],
      "name": "ContractURIUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_tokenOwner",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "internalType": "struct IAirdropERC20.AirdropContent[]",
          "name": "_contents",
          "type": "tuple[]"
        }
      ],
      "name": "airdropERC20",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractType",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractVersion",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRoleMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "member",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "count",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRoleWithSwitch",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_defaultAdmin",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_contractURI",
          "type": "string"
        },
        {
          "internalType": "address[]",
          "name": "_trustedForwarders",
          "type": "address[]"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "forwarder",
          "type": "address"
        }
      ],
      "name": "isTrustedForwarder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "multicall",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "results",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "setContractURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b50600054610100900460ff1615808015620000335750600054600160ff909116105b8062000063575062000050306200013d60201b62000c471760201c565b15801562000063575060005460ff166001145b620000cb5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840160405180910390fd5b6000805460ff191660011790558015620000ef576000805461ff0019166101001790555b801562000136576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b506200014c565b6001600160a01b03163b151590565b611e2c806200015c6000396000f3fe6080604052600436106100ce5760003560e01c80630670b2b3146100d3578063248a9ca3146100e85780632f2ff15d1461012857806336568abe146101485780633a105cfb14610168578063572b6c05146101885780639010d07c146101b857806391d14854146101e5578063938e3d7b14610205578063a0a8e46014610225578063a217fddf14610241578063a32fa5b314610256578063ac9650d814610276578063ca15c873146102a3578063cb2ef6f7146102c3578063d547741f146102e5578063e8a3d48514610305575b600080fd5b6100e66100e1366004611751565b610327565b005b3480156100f457600080fd5b506101156101033660046117e1565b60009081526003602052604090205490565b6040519081526020015b60405180910390f35b34801561013457600080fd5b506100e66101433660046117fa565b610612565b34801561015457600080fd5b506100e66101633660046117fa565b6106ac565b34801561017457600080fd5b506100e66101833660046118db565b61070b565b34801561019457600080fd5b506101a86101a33660046119be565b610843565b604051901515815260200161011f565b3480156101c457600080fd5b506101d86101d33660046119d9565b610861565b60405161011f91906119fb565b3480156101f157600080fd5b506101a86102003660046117fa565b610951565b34801561021157600080fd5b506100e6610220366004611a0f565b61097c565b34801561023157600080fd5b506040516002815260200161011f565b34801561024d57600080fd5b50610115600081565b34801561026257600080fd5b506101a86102713660046117fa565b6109cd565b34801561028257600080fd5b50610296610291366004611a43565b610a23565b60405161011f9190611b0f565b3480156102af57600080fd5b506101156102be3660046117e1565b610b17565b3480156102cf57600080fd5b506b041697264726f7045524332360a41b610115565b3480156102f157600080fd5b506100e66103003660046117fa565b610ba0565b34801561031157600080fd5b5061031a610bb9565b60405161011f9190611b71565b6002600554141561037f5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b60026005556103916000610200610c56565b6103cf5760405162461bcd60e51b815260206004820152600f60248201526e2737ba1030baba3437b934bd32b21760891b6044820152606401610376565b80600080805b838110156105a457600061042d89898989868181106103f6576103f6611b84565b61040c92602060409092020190810191506119be565b8a8a8781811061041e5761041e611b84565b90506040020160200135610c65565b9050806104ce5786868381811061044657610446611b84565b61045c92602060409092020190810191506119be565b6001600160a01b0316886001600160a01b03168a6001600160a01b03167f35be58330abb60221820bfd214bb857a6ea979dbf24009982022925a7fc137ff8a8a878181106104ac576104ac611b84565b905060400201602001356040516104c591815260200190565b60405180910390a45b6001600160a01b03891673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee141561059b5786868381811061050557610505611b84565b905060400201602001358461051a9190611bb0565b93503484111561056c5760405162461bcd60e51b815260206004820181905260248201527f496e73756666696369656e74206e617469766520746f6b656e20616d6f756e746044820152606401610376565b8061059b5786868381811061058357610583611b84565b90506040020160200135836105989190611bb0565b92505b506001016103d5565b503482146105f45760405162461bcd60e51b815260206004820152601d60248201527f496e636f7272656374206e617469766520746f6b656e20616d6f756e740000006044820152606401610376565b8015610604576106043382610f13565b505060016005555050505050565b60008281526003602052604090205461062b9033610fba565b60008281526002602090815260408083206001600160a01b038516845290915290205460ff161561069e5760405162461bcd60e51b815260206004820152601d60248201527f43616e206f6e6c79206772616e7420746f206e6f6e20686f6c646572730000006044820152606401610376565b6106a8828261103a565b5050565b336001600160a01b038216146107015760405162461bcd60e51b815260206004820152601a60248201527921b0b71037b7363c903932b737bab731b2903337b91039b2b63360311b6044820152606401610376565b6106a8828261104e565b600054610100900460ff161580801561072b5750600054600160ff909116105b8061074c575061073a30610c47565b15801561074c575060005460ff166001145b6107af5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610376565b6000805460ff1916600117905580156107d2576000805461ff0019166101001790555b6107db826110a5565b6107e483611134565b6107ef60008561103a565b6107f7611216565b801561083d576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b6001600160a01b031660009081526069602052604090205460ff1690565b60008281526004602052604081205481805b828110156109475760008681526004602090815260408083208484526001019091529020546001600160a01b0316156108f057848214156108de5760008681526004602090815260408083209383526001909301905220546001600160a01b0316925061094b915050565b6108e9600183611bb0565b9150610935565b6108fb866000610951565b80156109225750600086815260046020908152604080832083805260020190915290205481145b1561093557610932600183611bb0565b91505b610940600182611bb0565b9050610873565b5050505b92915050565b60009182526002602090815260408084206001600160a01b0393909316845291905290205460ff1690565b610984611247565b6109c15760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b6044820152606401610376565b6109ca81611134565b50565b600082815260026020908152604080832083805290915281205460ff16610a1a575060008281526002602090815260408083206001600160a01b038516845290915290205460ff1661094b565b50600192915050565b6060816001600160401b03811115610a3d57610a3d611826565b604051908082528060200260200182016040528015610a7057816020015b6060815260200190600190039081610a5b5790505b50905060005b82811015610b1057610ae030858584818110610a9457610a94611b84565b9050602002810190610aa69190611bc8565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061125592505050565b828281518110610af257610af2611b84565b60200260200101819052508080610b0890611c15565b915050610a76565b5092915050565b600081815260046020526040812054815b81811015610b7b5760008481526004602090815260408083208484526001019091529020546001600160a01b031615610b6957610b66600184611bb0565b92505b610b74600182611bb0565b9050610b28565b50610b87836000610951565b15610b9a57610b97600183611bb0565b91505b50919050565b6000828152600360205260409020546107019033610fba565b60018054610bc690611c30565b80601f0160208091040260200160405190810160405280929190818152602001828054610bf290611c30565b8015610c3f5780601f10610c1457610100808354040283529160200191610c3f565b820191906000526020600020905b815481529060010190602001808311610c2257829003601f168201915b505050505081565b6001600160a01b03163b151590565b6000610c60611347565b905090565b600081610c7457506001610f0b565b6001600160a01b03851673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1415610cf2576040516001600160a01b038416908390600081818185875af1925050503d8060008114610ce2576040519150601f19603f3d011682016040523d82523d6000602084013e610ce7565b606091505b505080915050610f0b565b604080516001600160a01b0386811660248301528581166044830152606480830186905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b1790529151600092839290891691610d569190611c65565b6000604051808303816000865af19150503d8060008114610d93576040519150601f19603f3d011682016040523d82523d6000602084013e610d98565b606091505b5091509150819250821580610dca575060008151118015610dca575080806020019051810190610dc89190611c81565b155b15610f08576040516370a0823160e01b81526000935084906001600160a01b038916906370a0823190610e01908a906004016119fb565b602060405180830381865afa158015610e1e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e429190611ca3565b10158015610ec15750604051636eb1769f60e11b81526001600160a01b03878116600483015230602483015285919089169063dd62ed3e90604401602060405180830381865afa158015610e9a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ebe9190611ca3565b10155b610f085760405162461bcd60e51b81526020600482015260186024820152774e6f742062616c616e6365206f7220616c6c6f77616e636560401b6044820152606401610376565b50505b949350505050565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610f60576040519150601f19603f3d011682016040523d82523d6000602084013e610f65565b606091505b5050905080610fb55760405162461bcd60e51b815260206004820152601c60248201527b1b985d1a5d99481d1bdad95b881d1c985b9cd9995c8819985a5b195960221b6044820152606401610376565b505050565b60008281526002602090815260408083206001600160a01b038516845290915290205460ff166106a857610ff8816001600160a01b03166014611369565b611003836020611369565b604051602001611014929190611cbc565b60408051601f198184030181529082905262461bcd60e51b825261037691600401611b71565b611044828261150b565b6106a88282611566565b61105882826115d3565b60008281526004602090815260408083206001600160a01b03851680855260028201808552838620805487526001909301855292852080546001600160a01b031916905584529152555050565b600054610100900460ff166110cc5760405162461bcd60e51b815260040161037690611d29565b60005b81518110156106a8576001606960008484815181106110f0576110f0611b84565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790558061112c81611c15565b9150506110cf565b60006001805461114390611c30565b80601f016020809104026020016040519081016040528092919081815260200182805461116f90611c30565b80156111bc5780601f10611191576101008083540402835291602001916111bc565b820191906000526020600020905b81548152906001019060200180831161119f57829003601f168201915b505085519394506111d89360019350602087019250905061169c565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a16818360405161120a929190611d74565b60405180910390a15050565b600054610100900460ff1661123d5760405162461bcd60e51b815260040161037690611d29565b611245611635565b565b6000610c6081610200610c56565b606061126083610c47565b6112bb5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610376565b600080846001600160a01b0316846040516112d69190611c65565b600060405180830381855af49150503d8060008114611311576040519150601f19603f3d011682016040523d82523d6000602084013e611316565b606091505b509150915061133e8282604051806060016040528060278152602001611dd060279139611663565b95945050505050565b600061135233610843565b15611364575060131936013560601c90565b503390565b60606000611378836002611d99565b611383906002611bb0565b6001600160401b0381111561139a5761139a611826565b6040519080825280601f01601f1916602001820160405280156113c4576020820181803683370190505b509050600360fc1b816000815181106113df576113df611b84565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061140e5761140e611b84565b60200101906001600160f81b031916908160001a9053506000611432846002611d99565b61143d906001611bb0565b90505b60018111156114b5576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061147157611471611b84565b1a60f81b82828151811061148757611487611b84565b60200101906001600160f81b031916908160001a90535060049490941c936114ae81611db8565b9050611440565b5083156115045760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610376565b9392505050565b60008281526002602090815260408083206001600160a01b0385168085529252808320805460ff1916600117905551339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b6000828152600460205260408120805491600191906115858385611bb0565b9091555050600092835260046020908152604080852083865260018101835281862080546001600160a01b039096166001600160a01b03199096168617905593855260029093019052912055565b6115dd8282610fba565b60008281526002602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b600054610100900460ff1661165c5760405162461bcd60e51b815260040161037690611d29565b6001600555565b60608315611672575081611504565b8251156116825782518084602001fd5b8160405162461bcd60e51b81526004016103769190611b71565b8280546116a890611c30565b90600052602060002090601f0160209004810192826116ca5760008555611710565b82601f106116e357805160ff1916838001178555611710565b82800160010185558215611710579182015b828111156117105782518255916020019190600101906116f5565b5061171c929150611720565b5090565b5b8082111561171c5760008155600101611721565b80356001600160a01b038116811461174c57600080fd5b919050565b6000806000806060858703121561176757600080fd5b61177085611735565b935061177e60208601611735565b925060408501356001600160401b038082111561179a57600080fd5b818701915087601f8301126117ae57600080fd5b8135818111156117bd57600080fd5b8860208260061b85010111156117d257600080fd5b95989497505060200194505050565b6000602082840312156117f357600080fd5b5035919050565b6000806040838503121561180d57600080fd5b8235915061181d60208401611735565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171561186457611864611826565b604052919050565b600082601f83011261187d57600080fd5b81356001600160401b0381111561189657611896611826565b6118a9601f8201601f191660200161183c565b8181528460208386010111156118be57600080fd5b816020850160208301376000918101602001919091529392505050565b6000806000606084860312156118f057600080fd5b6118f984611735565b92506020808501356001600160401b038082111561191657600080fd5b6119228883890161186c565b9450604087013591508082111561193857600080fd5b818701915087601f83011261194c57600080fd5b81358181111561195e5761195e611826565b8060051b915061196f84830161183c565b818152918301840191848101908a84111561198957600080fd5b938501935b838510156119ae5761199f85611735565b8252938501939085019061198e565b8096505050505050509250925092565b6000602082840312156119d057600080fd5b61150482611735565b600080604083850312156119ec57600080fd5b50508035926020909101359150565b6001600160a01b0391909116815260200190565b600060208284031215611a2157600080fd5b81356001600160401b03811115611a3757600080fd5b610f0b8482850161186c565b60008060208385031215611a5657600080fd5b82356001600160401b0380821115611a6d57600080fd5b818501915085601f830112611a8157600080fd5b813581811115611a9057600080fd5b8660208260051b8501011115611aa557600080fd5b60209290920196919550909350505050565b60005b83811015611ad2578181015183820152602001611aba565b8381111561083d5750506000910152565b60008151808452611afb816020860160208601611ab7565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015611b6457603f19888603018452611b52858351611ae3565b94509285019290850190600101611b36565b5092979650505050505050565b6020815260006115046020830184611ae3565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60008219821115611bc357611bc3611b9a565b500190565b6000808335601e19843603018112611bdf57600080fd5b8301803591506001600160401b03821115611bf957600080fd5b602001915036819003821315611c0e57600080fd5b9250929050565b6000600019821415611c2957611c29611b9a565b5060010190565b600181811c90821680611c4457607f821691505b60208210811415610b9a57634e487b7160e01b600052602260045260246000fd5b60008251611c77818460208701611ab7565b9190910192915050565b600060208284031215611c9357600080fd5b8151801515811461150457600080fd5b600060208284031215611cb557600080fd5b5051919050565b7402832b936b4b9b9b4b7b7399d1030b1b1b7bab73a1605d1b815260008351611cec816015850160208801611ab7565b7001034b99036b4b9b9b4b733903937b6329607d1b6015918401918201528351611d1d816026840160208801611ab7565b01602601949350505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b604081526000611d876040830185611ae3565b828103602084015261133e8185611ae3565b6000816000190483118215151615611db357611db3611b9a565b500290565b600081611dc757611dc7611b9a565b50600019019056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220a57e0f59c82c3edc9166554e474cf4c7d0b39cd7edade0720917e5de299ece0964736f6c634300080c0033",
    "sourceMap": "1388:5733:378:-:0;;;2081:28;;;;;;;;;-1:-1:-1;3111:19:436;3134:13;;;;;;3133:14;;3179:34;;;;-1:-1:-1;3197:12:436;;3212:1;3197:12;;;;:16;3179:34;3178:108;;;;3220:44;3258:4;3220:29;;;;;:44;;:::i;:::-;3219:45;:66;;;;-1:-1:-1;3268:12:436;;;;;:17;3219:66;3157:201;;;;-1:-1:-1;;;3157:201:436;;216:2:644;3157:201:436;;;198:21:644;255:2;235:18;;;228:30;294:34;274:18;;;267:62;-1:-1:-1;;;345:18:644;;;338:44;399:19;;3157:201:436;;;;;;;;3368:12;:16;;-1:-1:-1;;3368:16:436;3383:1;3368:16;;;3394:65;;;;3428:13;:20;;-1:-1:-1;;3428:20:436;;;;;3394:65;3483:14;3479:99;;;3529:5;3513:21;;-1:-1:-1;;3513:21:436;;;3553:14;;-1:-1:-1;581:36:644;;3553:14:436;;569:2:644;554:18;3553:14:436;;;;;;;3479:99;3101:483;1388:5733:378;;1186:320:462;-1:-1:-1;;;;;1476:19:462;;:23;;;1186:320::o;429:194:644:-;1388:5733:378;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106100ce5760003560e01c80630670b2b3146100d3578063248a9ca3146100e85780632f2ff15d1461012857806336568abe146101485780633a105cfb14610168578063572b6c05146101885780639010d07c146101b857806391d14854146101e5578063938e3d7b14610205578063a0a8e46014610225578063a217fddf14610241578063a32fa5b314610256578063ac9650d814610276578063ca15c873146102a3578063cb2ef6f7146102c3578063d547741f146102e5578063e8a3d48514610305575b600080fd5b6100e66100e1366004611751565b610327565b005b3480156100f457600080fd5b506101156101033660046117e1565b60009081526003602052604090205490565b6040519081526020015b60405180910390f35b34801561013457600080fd5b506100e66101433660046117fa565b610612565b34801561015457600080fd5b506100e66101633660046117fa565b6106ac565b34801561017457600080fd5b506100e66101833660046118db565b61070b565b34801561019457600080fd5b506101a86101a33660046119be565b610843565b604051901515815260200161011f565b3480156101c457600080fd5b506101d86101d33660046119d9565b610861565b60405161011f91906119fb565b3480156101f157600080fd5b506101a86102003660046117fa565b610951565b34801561021157600080fd5b506100e6610220366004611a0f565b61097c565b34801561023157600080fd5b506040516002815260200161011f565b34801561024d57600080fd5b50610115600081565b34801561026257600080fd5b506101a86102713660046117fa565b6109cd565b34801561028257600080fd5b50610296610291366004611a43565b610a23565b60405161011f9190611b0f565b3480156102af57600080fd5b506101156102be3660046117e1565b610b17565b3480156102cf57600080fd5b506b041697264726f7045524332360a41b610115565b3480156102f157600080fd5b506100e66103003660046117fa565b610ba0565b34801561031157600080fd5b5061031a610bb9565b60405161011f9190611b71565b6002600554141561037f5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b60026005556103916000610200610c56565b6103cf5760405162461bcd60e51b815260206004820152600f60248201526e2737ba1030baba3437b934bd32b21760891b6044820152606401610376565b80600080805b838110156105a457600061042d89898989868181106103f6576103f6611b84565b61040c92602060409092020190810191506119be565b8a8a8781811061041e5761041e611b84565b90506040020160200135610c65565b9050806104ce5786868381811061044657610446611b84565b61045c92602060409092020190810191506119be565b6001600160a01b0316886001600160a01b03168a6001600160a01b03167f35be58330abb60221820bfd214bb857a6ea979dbf24009982022925a7fc137ff8a8a878181106104ac576104ac611b84565b905060400201602001356040516104c591815260200190565b60405180910390a45b6001600160a01b03891673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee141561059b5786868381811061050557610505611b84565b905060400201602001358461051a9190611bb0565b93503484111561056c5760405162461bcd60e51b815260206004820181905260248201527f496e73756666696369656e74206e617469766520746f6b656e20616d6f756e746044820152606401610376565b8061059b5786868381811061058357610583611b84565b90506040020160200135836105989190611bb0565b92505b506001016103d5565b503482146105f45760405162461bcd60e51b815260206004820152601d60248201527f496e636f7272656374206e617469766520746f6b656e20616d6f756e740000006044820152606401610376565b8015610604576106043382610f13565b505060016005555050505050565b60008281526003602052604090205461062b9033610fba565b60008281526002602090815260408083206001600160a01b038516845290915290205460ff161561069e5760405162461bcd60e51b815260206004820152601d60248201527f43616e206f6e6c79206772616e7420746f206e6f6e20686f6c646572730000006044820152606401610376565b6106a8828261103a565b5050565b336001600160a01b038216146107015760405162461bcd60e51b815260206004820152601a60248201527921b0b71037b7363c903932b737bab731b2903337b91039b2b63360311b6044820152606401610376565b6106a8828261104e565b600054610100900460ff161580801561072b5750600054600160ff909116105b8061074c575061073a30610c47565b15801561074c575060005460ff166001145b6107af5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610376565b6000805460ff1916600117905580156107d2576000805461ff0019166101001790555b6107db826110a5565b6107e483611134565b6107ef60008561103a565b6107f7611216565b801561083d576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b6001600160a01b031660009081526069602052604090205460ff1690565b60008281526004602052604081205481805b828110156109475760008681526004602090815260408083208484526001019091529020546001600160a01b0316156108f057848214156108de5760008681526004602090815260408083209383526001909301905220546001600160a01b0316925061094b915050565b6108e9600183611bb0565b9150610935565b6108fb866000610951565b80156109225750600086815260046020908152604080832083805260020190915290205481145b1561093557610932600183611bb0565b91505b610940600182611bb0565b9050610873565b5050505b92915050565b60009182526002602090815260408084206001600160a01b0393909316845291905290205460ff1690565b610984611247565b6109c15760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b6044820152606401610376565b6109ca81611134565b50565b600082815260026020908152604080832083805290915281205460ff16610a1a575060008281526002602090815260408083206001600160a01b038516845290915290205460ff1661094b565b50600192915050565b6060816001600160401b03811115610a3d57610a3d611826565b604051908082528060200260200182016040528015610a7057816020015b6060815260200190600190039081610a5b5790505b50905060005b82811015610b1057610ae030858584818110610a9457610a94611b84565b9050602002810190610aa69190611bc8565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061125592505050565b828281518110610af257610af2611b84565b60200260200101819052508080610b0890611c15565b915050610a76565b5092915050565b600081815260046020526040812054815b81811015610b7b5760008481526004602090815260408083208484526001019091529020546001600160a01b031615610b6957610b66600184611bb0565b92505b610b74600182611bb0565b9050610b28565b50610b87836000610951565b15610b9a57610b97600183611bb0565b91505b50919050565b6000828152600360205260409020546107019033610fba565b60018054610bc690611c30565b80601f0160208091040260200160405190810160405280929190818152602001828054610bf290611c30565b8015610c3f5780601f10610c1457610100808354040283529160200191610c3f565b820191906000526020600020905b815481529060010190602001808311610c2257829003601f168201915b505050505081565b6001600160a01b03163b151590565b6000610c60611347565b905090565b600081610c7457506001610f0b565b6001600160a01b03851673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1415610cf2576040516001600160a01b038416908390600081818185875af1925050503d8060008114610ce2576040519150601f19603f3d011682016040523d82523d6000602084013e610ce7565b606091505b505080915050610f0b565b604080516001600160a01b0386811660248301528581166044830152606480830186905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b1790529151600092839290891691610d569190611c65565b6000604051808303816000865af19150503d8060008114610d93576040519150601f19603f3d011682016040523d82523d6000602084013e610d98565b606091505b5091509150819250821580610dca575060008151118015610dca575080806020019051810190610dc89190611c81565b155b15610f08576040516370a0823160e01b81526000935084906001600160a01b038916906370a0823190610e01908a906004016119fb565b602060405180830381865afa158015610e1e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e429190611ca3565b10158015610ec15750604051636eb1769f60e11b81526001600160a01b03878116600483015230602483015285919089169063dd62ed3e90604401602060405180830381865afa158015610e9a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ebe9190611ca3565b10155b610f085760405162461bcd60e51b81526020600482015260186024820152774e6f742062616c616e6365206f7220616c6c6f77616e636560401b6044820152606401610376565b50505b949350505050565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610f60576040519150601f19603f3d011682016040523d82523d6000602084013e610f65565b606091505b5050905080610fb55760405162461bcd60e51b815260206004820152601c60248201527b1b985d1a5d99481d1bdad95b881d1c985b9cd9995c8819985a5b195960221b6044820152606401610376565b505050565b60008281526002602090815260408083206001600160a01b038516845290915290205460ff166106a857610ff8816001600160a01b03166014611369565b611003836020611369565b604051602001611014929190611cbc565b60408051601f198184030181529082905262461bcd60e51b825261037691600401611b71565b611044828261150b565b6106a88282611566565b61105882826115d3565b60008281526004602090815260408083206001600160a01b03851680855260028201808552838620805487526001909301855292852080546001600160a01b031916905584529152555050565b600054610100900460ff166110cc5760405162461bcd60e51b815260040161037690611d29565b60005b81518110156106a8576001606960008484815181106110f0576110f0611b84565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790558061112c81611c15565b9150506110cf565b60006001805461114390611c30565b80601f016020809104026020016040519081016040528092919081815260200182805461116f90611c30565b80156111bc5780601f10611191576101008083540402835291602001916111bc565b820191906000526020600020905b81548152906001019060200180831161119f57829003601f168201915b505085519394506111d89360019350602087019250905061169c565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a16818360405161120a929190611d74565b60405180910390a15050565b600054610100900460ff1661123d5760405162461bcd60e51b815260040161037690611d29565b611245611635565b565b6000610c6081610200610c56565b606061126083610c47565b6112bb5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610376565b600080846001600160a01b0316846040516112d69190611c65565b600060405180830381855af49150503d8060008114611311576040519150601f19603f3d011682016040523d82523d6000602084013e611316565b606091505b509150915061133e8282604051806060016040528060278152602001611dd060279139611663565b95945050505050565b600061135233610843565b15611364575060131936013560601c90565b503390565b60606000611378836002611d99565b611383906002611bb0565b6001600160401b0381111561139a5761139a611826565b6040519080825280601f01601f1916602001820160405280156113c4576020820181803683370190505b509050600360fc1b816000815181106113df576113df611b84565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061140e5761140e611b84565b60200101906001600160f81b031916908160001a9053506000611432846002611d99565b61143d906001611bb0565b90505b60018111156114b5576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061147157611471611b84565b1a60f81b82828151811061148757611487611b84565b60200101906001600160f81b031916908160001a90535060049490941c936114ae81611db8565b9050611440565b5083156115045760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610376565b9392505050565b60008281526002602090815260408083206001600160a01b0385168085529252808320805460ff1916600117905551339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b6000828152600460205260408120805491600191906115858385611bb0565b9091555050600092835260046020908152604080852083865260018101835281862080546001600160a01b039096166001600160a01b03199096168617905593855260029093019052912055565b6115dd8282610fba565b60008281526002602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b600054610100900460ff1661165c5760405162461bcd60e51b815260040161037690611d29565b6001600555565b60608315611672575081611504565b8251156116825782518084602001fd5b8160405162461bcd60e51b81526004016103769190611b71565b8280546116a890611c30565b90600052602060002090601f0160209004810192826116ca5760008555611710565b82601f106116e357805160ff1916838001178555611710565b82800160010185558215611710579182015b828111156117105782518255916020019190600101906116f5565b5061171c929150611720565b5090565b5b8082111561171c5760008155600101611721565b80356001600160a01b038116811461174c57600080fd5b919050565b6000806000806060858703121561176757600080fd5b61177085611735565b935061177e60208601611735565b925060408501356001600160401b038082111561179a57600080fd5b818701915087601f8301126117ae57600080fd5b8135818111156117bd57600080fd5b8860208260061b85010111156117d257600080fd5b95989497505060200194505050565b6000602082840312156117f357600080fd5b5035919050565b6000806040838503121561180d57600080fd5b8235915061181d60208401611735565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171561186457611864611826565b604052919050565b600082601f83011261187d57600080fd5b81356001600160401b0381111561189657611896611826565b6118a9601f8201601f191660200161183c565b8181528460208386010111156118be57600080fd5b816020850160208301376000918101602001919091529392505050565b6000806000606084860312156118f057600080fd5b6118f984611735565b92506020808501356001600160401b038082111561191657600080fd5b6119228883890161186c565b9450604087013591508082111561193857600080fd5b818701915087601f83011261194c57600080fd5b81358181111561195e5761195e611826565b8060051b915061196f84830161183c565b818152918301840191848101908a84111561198957600080fd5b938501935b838510156119ae5761199f85611735565b8252938501939085019061198e565b8096505050505050509250925092565b6000602082840312156119d057600080fd5b61150482611735565b600080604083850312156119ec57600080fd5b50508035926020909101359150565b6001600160a01b0391909116815260200190565b600060208284031215611a2157600080fd5b81356001600160401b03811115611a3757600080fd5b610f0b8482850161186c565b60008060208385031215611a5657600080fd5b82356001600160401b0380821115611a6d57600080fd5b818501915085601f830112611a8157600080fd5b813581811115611a9057600080fd5b8660208260051b8501011115611aa557600080fd5b60209290920196919550909350505050565b60005b83811015611ad2578181015183820152602001611aba565b8381111561083d5750506000910152565b60008151808452611afb816020860160208601611ab7565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015611b6457603f19888603018452611b52858351611ae3565b94509285019290850190600101611b36565b5092979650505050505050565b6020815260006115046020830184611ae3565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60008219821115611bc357611bc3611b9a565b500190565b6000808335601e19843603018112611bdf57600080fd5b8301803591506001600160401b03821115611bf957600080fd5b602001915036819003821315611c0e57600080fd5b9250929050565b6000600019821415611c2957611c29611b9a565b5060010190565b600181811c90821680611c4457607f821691505b60208210811415610b9a57634e487b7160e01b600052602260045260246000fd5b60008251611c77818460208701611ab7565b9190910192915050565b600060208284031215611c9357600080fd5b8151801515811461150457600080fd5b600060208284031215611cb557600080fd5b5051919050565b7402832b936b4b9b9b4b7b7399d1030b1b1b7bab73a1605d1b815260008351611cec816015850160208801611ab7565b7001034b99036b4b9b9b4b733903937b6329607d1b6015918401918201528351611d1d816026840160208801611ab7565b01602601949350505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b604081526000611d876040830185611ae3565b828103602084015261133e8185611ae3565b6000816000190483118215151615611db357611db3611b9a565b500290565b600081611dc757611dc7611b9a565b50600019019056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220a57e0f59c82c3edc9166554e474cf4c7d0b39cd7edade0720917e5de299ece0964736f6c634300080c0033",
    "sourceMap": "1388:5733:378:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3711:1457;;;;;;:::i;:::-;;:::i;:::-;;2740:120:69;;;;;;;;;;-1:-1:-1;2740:120:69;;;;;:::i;:::-;2808:7;2834:19;;;:13;:19;;;;;;;2740:120;;;;1326:25:644;;;1314:2;1299:18;2740:120:69;;;;;;;;3255:271;;;;;;;;;;-1:-1:-1;3255:271:69;;;;;:::i;:::-;;:::i;4466:217::-;;;;;;;;;;-1:-1:-1;4466:217:69;;;;;:::i;:::-;;:::i;2174:358:378:-;;;;;;;;;;-1:-1:-1;2174:358:378;;;;;:::i;:::-;;:::i;918:134:209:-;;;;;;;;;;-1:-1:-1;918:134:209;;;;;:::i;:::-;;:::i;:::-;;;4156:14:644;;4149:22;4131:41;;4119:2;4104:18;918:134:209;3991:187:644;1643:633:70;;;;;;;;;;-1:-1:-1;1643:633:70;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1324:131:69:-;;;;;;;;;;-1:-1:-1;1324:131:69;;;;;:::i;:::-;;:::i;1003:188:54:-;;;;;;;;;;-1:-1:-1;1003:188:54;;;;;:::i;:::-;;:::i;2919:95:378:-;;;;;;;;;;-1:-1:-1;2919:95:378;;1881:1;5113:36:644;;5101:2;5086:18;2919:95:378;4971:184:644;742:49:69;;;;;;;;;;-1:-1:-1;742:49:69;787:4;742:49;;2206:211;;;;;;;;;;-1:-1:-1;2206:211:69;;;;;:::i;:::-;;:::i;632:301:466:-;;;;;;;;;;-1:-1:-1;632:301:466;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2683:398:70:-;;;;;;;;;;-1:-1:-1;2683:398:70;;;;;:::i;:::-;;:::i;2772:91:378:-;;;;;;;;;;-1:-1:-1;;;;2772:91:378;;3897:171:69;;;;;;;;;;-1:-1:-1;3897:171:69;;;;;:::i;:::-;;:::i;565:34:54:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;3711:1457:378:-;1815:1:438;2569:7;;:19;;2561:63;;;;-1:-1:-1;;;2561:63:438;;7729:2:644;2561:63:438;;;7711:21:644;7768:2;7748:18;;;7741:30;7807:33;7787:18;;;7780:61;7858:18;;2561:63:438;;;;;;;;;1815:1;2699:7;:18;3892:41:378::1;787:4:69;3920:12:378;:10;:12::i;3892:41::-;3884:69;;;::::0;-1:-1:-1;;;3884:69:378;;8089:2:644;3884:69:378::1;::::0;::::1;8071:21:644::0;8128:2;8108:18;;;8101:30;-1:-1:-1;;;8147:18:644;;;8140:45;8202:18;;3884:69:378::1;7887:339:644::0;3884:69:378::1;3978:9:::0;3964:11:::1;::::0;;4070:811:::1;4094:3;4090:1;:7;4070:811;;;4115:12;4130:181;4178:13;4209:11;4238:9;;4248:1;4238:12;;;;;;;:::i;:::-;:22;::::0;::::1;:12;::::0;;::::1;;:22:::0;;::::1;::::0;-1:-1:-1;4238:22:378::1;:::i;:::-;4278:9;;4288:1;4278:12;;;;;;;:::i;:::-;;;;;;:19;;;4130:30;:181::i;:::-;4115:196;;4331:7;4326:138;;4405:9;;4415:1;4405:12;;;;;;;:::i;:::-;:22;::::0;::::1;:12;::::0;;::::1;;:22:::0;;::::1;::::0;-1:-1:-1;4405:22:378::1;:::i;:::-;-1:-1:-1::0;;;;;4363:86:378::1;4392:11;-1:-1:-1::0;;;;;4363:86:378::1;4377:13;-1:-1:-1::0;;;;;4363:86:378::1;;4429:9;;4439:1;4429:12;;;;;;;:::i;:::-;;;;;;:19;;;4363:86;;;;1326:25:644::0;;1314:2;1299:18;;1180:177;4363:86:378::1;;;;;;;;4326:138;-1:-1:-1::0;;;;;4482:49:378;::::1;408:42:284;4482:49:378;4478:330;;;4572:9;;4582:1;4572:12;;;;;;;:::i;:::-;;;;;;:19;;;4551:40;;;;;:::i;:::-;;;4639:9;4618:17;:30;;4610:75;;;::::0;-1:-1:-1;;;4610:75:378;;8830:2:644;4610:75:378::1;::::0;::::1;8812:21:644::0;;;8849:18;;;8842:30;8908:34;8888:18;;;8881:62;8960:18;;4610:75:378::1;8628:356:644::0;4610:75:378::1;4709:7;4704:90;;4756:9;;4766:1;4756:12;;;;;;;:::i;:::-;;;;;;:19;;;4740:35;;;;;:::i;:::-;;;4704:90;-1:-1:-1::0;4855:1:378::1;4850:6;4070:811;;;;4920:9;4899:17;:30;4891:72;;;::::0;-1:-1:-1;;;4891:72:378;;9191:2:644;4891:72:378::1;::::0;::::1;9173:21:644::0;9230:2;9210:18;;;9203:30;9269:31;9249:18;;;9242:59;9318:18;;4891:72:378::1;8989:353:644::0;4891:72:378::1;4978:16:::0;;4974:188:::1;;5082:69;5126:10;5138:12;5082:43;:69::i;:::-;-1:-1:-1::0;;1772:1:438;2872:7;:22;-1:-1:-1;;;;;3711:1457:378:o;3255:271:69:-;3350:19;;;;:13;:19;;;;;;3339:43;;3371:10;3339;:43::i;:::-;3396:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;3396:23:69;;;;;;;;;;;;3392:93;;;3435:39;;-1:-1:-1;;;3435:39:69;;9549:2:644;3435:39:69;;;9531:21:644;9588:2;9568:18;;;9561:30;9627:31;9607:18;;;9600:59;9676:18;;3435:39:69;9347:353:644;3392:93:69;3494:25;3505:4;3511:7;3494:10;:25::i;:::-;3255:271;;:::o;4466:217::-;4557:10;-1:-1:-1;;;;;4557:21:69;;;4553:88;;4594:36;;-1:-1:-1;;;4594:36:69;;9907:2:644;4594:36:69;;;9889:21:644;9946:2;9926:18;;;9919:30;-1:-1:-1;;;9965:18:644;;;9958:56;10031:18;;4594:36:69;9705:350:644;4553:88:69;4650:26;4662:4;4668:7;4650:11;:26::i;2174:358:378:-;3111:19:436;3134:13;;;;;;3133:14;;3179:34;;;;-1:-1:-1;3197:12:436;;3212:1;3197:12;;;;:16;3179:34;3178:108;;;;3220:44;3258:4;3220:29;:44::i;:::-;3219:45;:66;;;;-1:-1:-1;3268:12:436;;;;;:17;3219:66;3157:201;;;;-1:-1:-1;;;3157:201:436;;10262:2:644;3157:201:436;;;10244:21:644;10301:2;10281:18;;;10274:30;10340:34;10320:18;;;10313:62;-1:-1:-1;;;10391:18:644;;;10384:44;10445:19;;3157:201:436;10060:410:644;3157:201:436;3368:12;:16;;-1:-1:-1;;3368:16:436;3383:1;3368:16;;;3394:65;;;;3428:13;:20;;-1:-1:-1;;3428:20:436;;;;;3394:65;2343:51:378::1;2375:18;2343:31;:51::i;:::-;2405:31;2423:12;2405:17;:31::i;:::-;2446:45;787:4:69;2477:13:378::0;2446:10:::1;:45::i;:::-;2501:24;:22;:24::i;:::-;3483:14:436::0;3479:99;;;3529:5;3513:21;;-1:-1:-1;;3513:21:436;;;3553:14;;-1:-1:-1;5113:36:644;;3553:14:436;;5101:2:644;5086:18;3553:14:436;;;;;;;3479:99;3101:483;2174:358:378;;;:::o;918:134:209:-;-1:-1:-1;;;;;1017:28:209;994:4;1017:28;;;:17;:28;;;;;;;;;918:134::o;1643:633:70:-;1727:14;1776:17;;;:11;:17;;;;;:23;1727:14;;1833:437;1857:12;1853:1;:16;1833:437;;;1937:1;1897:17;;;:11;:17;;;;;;;;:28;;;:25;;:28;;;;;;-1:-1:-1;;;;;1897:28:70;:42;1893:367;;1972:5;1963;:14;1959:133;;;2010:17;;;;:11;:17;;;;;;;;:28;;;:25;;;;:28;;;;-1:-1:-1;;;;;2010:28:70;;-1:-1:-1;2060:13:70;;-1:-1:-1;;2060:13:70;1959:133;2109:10;2118:1;2109:10;;:::i;:::-;;;1893:367;;;2144:25;2152:4;2166:1;2144:7;:25::i;:::-;:71;;;;-1:-1:-1;2178:17:70;;;;:11;:17;;;;;;;;:37;;;:25;;:37;;;;;;2173:42;;2144:71;2140:120;;;2235:10;2244:1;2235:10;;:::i;:::-;;;2140:120;1871:6;1876:1;1871:6;;:::i;:::-;;;1833:437;;;;1743:533;;1643:633;;;;;:::o;1324:131:69:-;1402:4;1425:14;;;:8;:14;;;;;;;;-1:-1:-1;;;;;1425:23:69;;;;;;;;;;;;;;;1324:131::o;1003:188:54:-;1080:20;:18;:20::i;:::-;1075:76;;1116:24;;-1:-1:-1;;;1116:24:54;;10876:2:644;1116:24:54;;;10858:21:644;10915:2;10895:18;;;10888:30;-1:-1:-1;;;10934:18:644;;;10927:44;10988:18;;1116:24:54;10674:338:644;1075:76:54;1161:23;1179:4;1161:17;:23::i;:::-;1003:188;:::o;2206:211:69:-;2285:4;2306:14;;;:8;:14;;;;;;;;:26;;;;;;;;;;;2301:88;;-1:-1:-1;2355:14:69;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;2355:23:69;;;;;;;;;;;;2348:30;;2301:88;-1:-1:-1;2406:4:69;2206:211;;;;:::o;632:301:466:-;700:22;756:4;-1:-1:-1;;;;;744:24:466;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;734:34;;783:9;778:125;798:15;;;778:125;;;847:45;877:4;884;;889:1;884:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;847:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;847:21:466;;-1:-1:-1;;;847:45:466:i;:::-;834:7;842:1;834:10;;;;;;;;:::i;:::-;;;;;;:58;;;;815:3;;;;;:::i;:::-;;;;778:125;;;;632:301;;;;:::o;2683:398:70:-;2757:13;2805:17;;;:11;:17;;;;;:23;2757:13;2839:161;2863:12;2859:1;:16;2839:161;;;2943:1;2903:17;;;:11;:17;;;;;;;;:28;;;:25;;:28;;;;;;-1:-1:-1;;;;;2903:28:70;:42;2899:91;;2965:10;2974:1;2965:10;;:::i;:::-;;;2899:91;2877:6;2882:1;2877:6;;:::i;:::-;;;2839:161;;;;3013:25;3021:4;3035:1;3013:7;:25::i;:::-;3009:66;;;3054:10;3063:1;3054:10;;:::i;:::-;;;3009:66;2772:309;2683:398;;;:::o;3897:171:69:-;3993:19;;;;:13;:19;;;;;;3982:43;;4014:10;3982;:43::i;565:34:54:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1186:320:462:-;-1:-1:-1;;;;;1476:19:462;;:23;;;1186:320::o;6812:140:378:-;6874:14;6907:38;:36;:38::i;:::-;6900:45;;6812:140;:::o;5443:1110::-;5603:12;5631;5627:85;;-1:-1:-1;5669:4:378;5687:14;;5627:85;-1:-1:-1;;;;;5726:45:378;;408:42:284;5726:45:378;5722:825;;;5911:30;;-1:-1:-1;;;;;5911:8:378;;;5928:7;;5911:30;;;;5928:7;5911:8;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5897:44;;;;;5722:825;;;6042:73;;;-1:-1:-1;;;;;12536:15:644;;;6042:73:378;;;12518:34:644;12588:15;;;12568:18;;;12561:43;12620:18;;;;12613:34;;;6042:73:378;;;;;;;;;;12453:18:644;;;;6042:73:378;;;;;;;-1:-1:-1;;;;;6042:73:378;-1:-1:-1;;;6042:73:378;;;6010:119;;-1:-1:-1;;;;6010:14:378;;;;:119;;6042:73;6010:119;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5972:157;;;;6154:8;6144:18;;6181:7;6180:8;:60;;;;6208:1;6193:5;:12;:16;:46;;;;;6225:5;6214:25;;;;;;;;;;;;:::i;:::-;6213:26;6193:46;6176:361;;;6323:34;;-1:-1:-1;;;6323:34:378;;6270:5;;-1:-1:-1;6361:7:378;;-1:-1:-1;;;;;6323:27:378;;;;;:34;;6351:5;;6323:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:45;;:133;;;;-1:-1:-1;6396:49:378;;-1:-1:-1;;;6396:49:378;;-1:-1:-1;;;;;13638:15:644;;;6396:49:378;;;13620:34:644;6439:4:378;13670:18:644;;;13663:43;6449:7:378;;6396:27;;;;;;13555:18:644;;6396:49:378;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:60;;6323:133;6294:228;;;;-1:-1:-1;;;6294:228:378;;13919:2:644;6294:228:378;;;13901:21:644;13958:2;13938:18;;;13931:30;-1:-1:-1;;;13977:18:644;;;13970:54;14041:18;;6294:228:378;13717:348:644;6294:228:378;5958:589;;5722:825;5443:1110;;;;;;:::o;2532:292:284:-;2714:12;2732:2;-1:-1:-1;;;;;2732:7:284;2748:5;2732:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2713:46;;;2777:7;2769:48;;;;-1:-1:-1;;;2769:48:284;;14272:2:644;2769:48:284;;;14254:21:644;14311:2;14291:18;;;14284:30;-1:-1:-1;;;14330:18:644;;;14323:58;14398:18;;2769:48:284;14070:352:644;2769:48:284;2601:223;2532:292;;:::o;5557:495:69:-;5645:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;5645:23:69;;;;;;;;;;;;5640:406;;5827:43;5857:7;-1:-1:-1;;;;;5827:43:69;5867:2;5827:21;:43::i;:::-;5941:40;5971:4;5978:2;5941:21;:40::i;:::-;5736:267;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;5736:267:69;;;;;;;;;;-1:-1:-1;;;5684:351:69;;;;;;;:::i;3475:152:70:-;3554:31;3571:4;3577:7;3554:16;:31::i;:::-;3595:25;3606:4;3612:7;3595:10;:25::i;3205:157::-;3285:32;3303:4;3309:7;3285:17;:32::i;:::-;4084:11;4098:17;;;:11;:17;;;;;;;;-1:-1:-1;;;;;4098:34:70;;;;;:25;;;:34;;;;;;;;4150:30;;:25;;;;:30;;;;;4143:37;;-1:-1:-1;;;;;;4143:37:70;;;4197:34;;;;4190:41;3255:271:69;;:::o;670:242:209:-;4910:13:436;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:436;;;;;;;:::i;:::-;787:9:209::1;782:124;806:16;:23;802:1;:27;782:124;;;891:4;850:17;:38;868:16;885:1;868:19;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;-1:-1:-1;;;;;850:38:209::1;::::0;;;::::1;::::0;;;;;;-1:-1:-1;850:38:209;:45;;-1:-1:-1;;850:45:209::1;::::0;::::1;;::::0;;;::::1;::::0;;831:3;::::1;::::0;::::1;:::i;:::-;;;;782:124;;1273:185:54::0;1339:21;1363:11;1339:35;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1384:18:54;;1339:35;;-1:-1:-1;1384:18:54;;:11;;-1:-1:-1;1384:18:54;;;;-1:-1:-1;1384:18:54;-1:-1:-1;1384:18:54;:::i;:::-;;1418:33;1437:7;1446:4;1418:33;;;;;;;:::i;:::-;;;;;;;;1329:129;1273:185;:::o;1853:111:438:-;4910:13:436;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:436;;;;;;;:::i;:::-;1923:34:438::1;:32;:34::i;:::-;1853:111::o:0;6648:133:378:-;6710:4;6733:41;6710:4;6761:12;:10;:12::i;1119:455:466:-;1202:12;1234:37;1264:6;1234:29;:37::i;:::-;1226:88;;;;-1:-1:-1;;;1226:88:466;;16216:2:644;1226:88:466;;;16198:21:644;16255:2;16235:18;;;16228:30;16294:34;16274:18;;;16267:62;-1:-1:-1;;;16345:18:644;;;16338:36;16391:19;;1226:88:466;16014:402:644;1226:88:466;1385:12;1399:23;1426:6;-1:-1:-1;;;;;1426:19:466;1446:4;1426:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1384:67;;;;1468:99;1504:7;1513:10;1468:99;;;;;;;;;;;;;;;;;:35;:99::i;:::-;1461:106;1119:455;-1:-1:-1;;;;;1119:455:466:o;1058:401:209:-;1120:14;1150:30;1169:10;1150:18;:30::i;:::-;1146:307;;;-1:-1:-1;;;1352:14:209;1348:23;1335:37;1331:2;1327:46;1058:401;:::o;1146:307::-;-1:-1:-1;929:10:464;;6812:140:378:o;1565:441:292:-;1640:13;1665:19;1697:10;1701:6;1697:1;:10;:::i;:::-;:14;;1710:1;1697:14;:::i;:::-;-1:-1:-1;;;;;1687:25:292;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1687:25:292;;1665:47;;-1:-1:-1;;;1722:6:292;1729:1;1722:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1722:15:292;;;;;;;;;-1:-1:-1;;;1747:6:292;1754:1;1747:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1747:15:292;;;;;;;;-1:-1:-1;1777:9:292;1789:10;1793:6;1789:1;:10;:::i;:::-;:14;;1802:1;1789:14;:::i;:::-;1777:26;;1772:132;1809:1;1805;:5;1772:132;;;-1:-1:-1;;;1856:5:292;1864:3;1856:11;1843:25;;;;;;;:::i;:::-;;;;1831:6;1838:1;1831:9;;;;;;;;:::i;:::-;;;;:37;-1:-1:-1;;;;;1831:37:292;;;;;;;;-1:-1:-1;1892:1:292;1882:11;;;;;1812:3;;;:::i;:::-;;;1772:132;;;-1:-1:-1;1921:10:292;;1913:55;;;;-1:-1:-1;;;1913:55:292;;16937:2:644;1913:55:292;;;16919:21:644;;;16956:18;;;16949:30;17015:34;16995:18;;;16988:62;17067:18;;1913:55:292;16735:356:644;1913:55:292;1992:6;1565:441;-1:-1:-1;;;1565:441:292:o;5036:168:69:-;5114:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;5114:23:69;;;;;;;;;;:30;;-1:-1:-1;;5114:30:69;5140:4;5114:30;;;5159:38;5186:10;;5123:4;;5159:38;;5114:14;5159:38;5036:168;;:::o;3690:253:70:-;3760:11;3774:17;;;:11;:17;;;;;:23;;;3834:1;;3774:17;3807:28;3834:1;3774:23;3807:28;:::i;:::-;;;;-1:-1:-1;;3846:17:70;;;;:11;:17;;;;;;;;:30;;;:25;;;:30;;;;;:40;;-1:-1:-1;;;;;3846:40:70;;;-1:-1:-1;;;;;;3846:40:70;;;;;;;3896:34;;;:25;;;;:34;;;;:40;3690:253::o;5253:204:69:-;5332:25;5343:4;5349:7;5332:10;:25::i;:::-;5374:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;5374:23:69;;;;;;;;;;5367:30;;-1:-1:-1;;5367:30:69;;;5412:38;5439:10;;5383:4;;5412:38;;5374:14;5412:38;5253:204;;:::o;1970:109:438:-;4910:13:436;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:436;;;;;;;:::i;:::-;1772:1:438::1;2050:7;:22:::0;1970:109::o;6622:742:462:-;6768:12;6796:7;6792:566;;;-1:-1:-1;6826:10:462;6819:17;;6792:566;6937:17;;:21;6933:415;;7181:10;7175:17;7241:15;7228:10;7224:2;7220:19;7213:44;6933:415;7320:12;7313:20;;-1:-1:-1;;;7313:20:462;;;;;;;;:::i;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:173:644;82:20;;-1:-1:-1;;;;;131:31:644;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:798::-;331:6;339;347;355;408:2;396:9;387:7;383:23;379:32;376:52;;;424:1;421;414:12;376:52;447:29;466:9;447:29;:::i;:::-;437:39;;495:38;529:2;518:9;514:18;495:38;:::i;:::-;485:48;;584:2;573:9;569:18;556:32;-1:-1:-1;;;;;648:2:644;640:6;637:14;634:34;;;664:1;661;654:12;634:34;702:6;691:9;687:22;677:32;;747:7;740:4;736:2;732:13;728:27;718:55;;769:1;766;759:12;718:55;809:2;796:16;835:2;827:6;824:14;821:34;;;851:1;848;841:12;821:34;904:7;899:2;889:6;886:1;882:14;878:2;874:23;870:32;867:45;864:65;;;925:1;922;915:12;864:65;192:798;;;;-1:-1:-1;;956:2:644;948:11;;-1:-1:-1;;;192:798:644:o;995:180::-;1054:6;1107:2;1095:9;1086:7;1082:23;1078:32;1075:52;;;1123:1;1120;1113:12;1075:52;-1:-1:-1;1146:23:644;;995:180;-1:-1:-1;995:180:644:o;1362:254::-;1430:6;1438;1491:2;1479:9;1470:7;1466:23;1462:32;1459:52;;;1507:1;1504;1497:12;1459:52;1543:9;1530:23;1520:33;;1572:38;1606:2;1595:9;1591:18;1572:38;:::i;:::-;1562:48;;1362:254;;;;;:::o;1621:127::-;1682:10;1677:3;1673:20;1670:1;1663:31;1713:4;1710:1;1703:15;1737:4;1734:1;1727:15;1753:275;1824:2;1818:9;1889:2;1870:13;;-1:-1:-1;;1866:27:644;1854:40;;-1:-1:-1;;;;;1909:34:644;;1945:22;;;1906:62;1903:88;;;1971:18;;:::i;:::-;2007:2;2000:22;1753:275;;-1:-1:-1;1753:275:644:o;2033:531::-;2076:5;2129:3;2122:4;2114:6;2110:17;2106:27;2096:55;;2147:1;2144;2137:12;2096:55;2183:6;2170:20;-1:-1:-1;;;;;2205:2:644;2202:26;2199:52;;;2231:18;;:::i;:::-;2275:55;2318:2;2299:13;;-1:-1:-1;;2295:27:644;2324:4;2291:38;2275:55;:::i;:::-;2355:2;2346:7;2339:19;2401:3;2394:4;2389:2;2381:6;2377:15;2373:26;2370:35;2367:55;;;2418:1;2415;2408:12;2367:55;2483:2;2476:4;2468:6;2464:17;2457:4;2448:7;2444:18;2431:55;2531:1;2506:16;;;2524:4;2502:27;2495:38;;;;2510:7;2033:531;-1:-1:-1;;;2033:531:644:o;2569:1226::-;2681:6;2689;2697;2750:2;2738:9;2729:7;2725:23;2721:32;2718:52;;;2766:1;2763;2756:12;2718:52;2789:29;2808:9;2789:29;:::i;:::-;2779:39;;2837:2;2890;2879:9;2875:18;2862:32;-1:-1:-1;;;;;2954:2:644;2946:6;2943:14;2940:34;;;2970:1;2967;2960:12;2940:34;2993:50;3035:7;3026:6;3015:9;3011:22;2993:50;:::i;:::-;2983:60;;3096:2;3085:9;3081:18;3068:32;3052:48;;3125:2;3115:8;3112:16;3109:36;;;3141:1;3138;3131:12;3109:36;3179:8;3168:9;3164:24;3154:34;;3226:7;3219:4;3215:2;3211:13;3207:27;3197:55;;3248:1;3245;3238:12;3197:55;3284:2;3271:16;3306:2;3302;3299:10;3296:36;;;3312:18;;:::i;:::-;3358:2;3355:1;3351:10;3341:20;;3381:28;3405:2;3401;3397:11;3381:28;:::i;:::-;3443:15;;;3513:11;;;3509:20;;;3474:12;;;;3541:19;;;3538:39;;;3573:1;3570;3563:12;3538:39;3597:11;;;;3617:148;3633:6;3628:3;3625:15;3617:148;;;3699:23;3718:3;3699:23;:::i;:::-;3687:36;;3650:12;;;;3743;;;;3617:148;;;3784:5;3774:15;;;;;;;;2569:1226;;;;;:::o;3800:186::-;3859:6;3912:2;3900:9;3891:7;3887:23;3883:32;3880:52;;;3928:1;3925;3918:12;3880:52;3951:29;3970:9;3951:29;:::i;4183:248::-;4251:6;4259;4312:2;4300:9;4291:7;4287:23;4283:32;4280:52;;;4328:1;4325;4318:12;4280:52;-1:-1:-1;;4351:23:644;;;4421:2;4406:18;;;4393:32;;-1:-1:-1;4183:248:644:o;4436:203::-;-1:-1:-1;;;;;4600:32:644;;;;4582:51;;4570:2;4555:18;;4436:203::o;4644:322::-;4713:6;4766:2;4754:9;4745:7;4741:23;4737:32;4734:52;;;4782:1;4779;4772:12;4734:52;4822:9;4809:23;-1:-1:-1;;;;;4847:6:644;4844:30;4841:50;;;4887:1;4884;4877:12;4841:50;4910;4952:7;4943:6;4932:9;4928:22;4910:50;:::i;5160:626::-;5257:6;5265;5318:2;5306:9;5297:7;5293:23;5289:32;5286:52;;;5334:1;5331;5324:12;5286:52;5374:9;5361:23;-1:-1:-1;;;;;5444:2:644;5436:6;5433:14;5430:34;;;5460:1;5457;5450:12;5430:34;5498:6;5487:9;5483:22;5473:32;;5543:7;5536:4;5532:2;5528:13;5524:27;5514:55;;5565:1;5562;5555:12;5514:55;5605:2;5592:16;5631:2;5623:6;5620:14;5617:34;;;5647:1;5644;5637:12;5617:34;5700:7;5695:2;5685:6;5682:1;5678:14;5674:2;5670:23;5666:32;5663:45;5660:65;;;5721:1;5718;5711:12;5660:65;5752:2;5744:11;;;;;5774:6;;-1:-1:-1;5160:626:644;;-1:-1:-1;;;;5160:626:644:o;5791:258::-;5863:1;5873:113;5887:6;5884:1;5881:13;5873:113;;;5963:11;;;5957:18;5944:11;;;5937:39;5909:2;5902:10;5873:113;;;6004:6;6001:1;5998:13;5995:48;;;-1:-1:-1;;6039:1:644;6021:16;;6014:27;5791:258::o;6054:257::-;6095:3;6133:5;6127:12;6160:6;6155:3;6148:19;6176:63;6232:6;6225:4;6220:3;6216:14;6209:4;6202:5;6198:16;6176:63;:::i;:::-;6293:2;6272:15;-1:-1:-1;;6268:29:644;6259:39;;;;6300:4;6255:50;;6054:257;-1:-1:-1;;6054:257:644:o;6316:800::-;6476:4;6505:2;6545;6534:9;6530:18;6575:2;6564:9;6557:21;6598:6;6633;6627:13;6664:6;6656;6649:22;6702:2;6691:9;6687:18;6680:25;;6764:2;6754:6;6751:1;6747:14;6736:9;6732:30;6728:39;6714:53;;6802:2;6794:6;6790:15;6823:1;6833:254;6847:6;6844:1;6841:13;6833:254;;;6940:2;6936:7;6924:9;6916:6;6912:22;6908:36;6903:3;6896:49;6968:39;7000:6;6991;6985:13;6968:39;:::i;:::-;6958:49;-1:-1:-1;7065:12:644;;;;7030:15;;;;6869:1;6862:9;6833:254;;;-1:-1:-1;7104:6:644;;6316:800;-1:-1:-1;;;;;;;6316:800:644:o;7303:219::-;7452:2;7441:9;7434:21;7415:4;7472:44;7512:2;7501:9;7497:18;7489:6;7472:44;:::i;8231:127::-;8292:10;8287:3;8283:20;8280:1;8273:31;8323:4;8320:1;8313:15;8347:4;8344:1;8337:15;8363:127;8424:10;8419:3;8415:20;8412:1;8405:31;8455:4;8452:1;8445:15;8479:4;8476:1;8469:15;8495:128;8535:3;8566:1;8562:6;8559:1;8556:13;8553:39;;;8572:18;;:::i;:::-;-1:-1:-1;8608:9:644;;8495:128::o;11017:521::-;11094:4;11100:6;11160:11;11147:25;11254:2;11250:7;11239:8;11223:14;11219:29;11215:43;11195:18;11191:68;11181:96;;11273:1;11270;11263:12;11181:96;11300:33;;11352:20;;;-1:-1:-1;;;;;;11384:30:644;;11381:50;;;11427:1;11424;11417:12;11381:50;11460:4;11448:17;;-1:-1:-1;11491:14:644;11487:27;;;11477:38;;11474:58;;;11528:1;11525;11518:12;11474:58;11017:521;;;;;:::o;11543:135::-;11582:3;-1:-1:-1;;11603:17:644;;11600:43;;;11623:18;;:::i;:::-;-1:-1:-1;11670:1:644;11659:13;;11543:135::o;11683:380::-;11762:1;11758:12;;;;11805;;;11826:61;;11880:4;11872:6;11868:17;11858:27;;11826:61;11933:2;11925:6;11922:14;11902:18;11899:38;11896:161;;;11979:10;11974:3;11970:20;11967:1;11960:31;12014:4;12011:1;12004:15;12042:4;12039:1;12032:15;12658:274;12787:3;12825:6;12819:13;12841:53;12887:6;12882:3;12875:4;12867:6;12863:17;12841:53;:::i;:::-;12910:16;;;;;12658:274;-1:-1:-1;;12658:274:644:o;12937:277::-;13004:6;13057:2;13045:9;13036:7;13032:23;13028:32;13025:52;;;13073:1;13070;13063:12;13025:52;13105:9;13099:16;13158:5;13151:13;13144:21;13137:5;13134:32;13124:60;;13180:1;13177;13170:12;13219:184;13289:6;13342:2;13330:9;13321:7;13317:23;13313:32;13310:52;;;13358:1;13355;13348:12;13310:52;-1:-1:-1;13381:16:644;;13219:184;-1:-1:-1;13219:184:644:o;14427:784::-;-1:-1:-1;;;14833:3:644;14826:36;14808:3;14891:6;14885:13;14907:62;14962:6;14957:2;14952:3;14948:12;14941:4;14933:6;14929:17;14907:62;:::i;:::-;-1:-1:-1;;;15028:2:644;14988:16;;;15020:11;;;15013:40;15078:13;;15100:63;15078:13;15149:2;15141:11;;15134:4;15122:17;;15100:63;:::i;:::-;15183:17;15202:2;15179:26;;14427:784;-1:-1:-1;;;;14427:784:644:o;15216:407::-;15418:2;15400:21;;;15457:2;15437:18;;;15430:30;15496:34;15491:2;15476:18;;15469:62;-1:-1:-1;;;15562:2:644;15547:18;;15540:41;15613:3;15598:19;;15216:407::o;15628:381::-;15825:2;15814:9;15807:21;15788:4;15851:44;15891:2;15880:9;15876:18;15868:6;15851:44;:::i;:::-;15943:9;15935:6;15931:22;15926:2;15915:9;15911:18;15904:50;15971:32;15996:6;15988;15971:32;:::i;16421:168::-;16461:7;16527:1;16523;16519:6;16515:14;16512:1;16509:21;16504:1;16497:9;16490:17;16486:45;16483:71;;;16534:18;;:::i;:::-;-1:-1:-1;16574:9:644;;16421:168::o;16594:136::-;16633:3;16661:5;16651:39;;16670:18;;:::i;:::-;-1:-1:-1;;;16706:18:644;;16594:136::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "DEFAULT_ADMIN_ROLE()": "a217fddf",
    "airdropERC20(address,address,(address,uint256)[])": "0670b2b3",
    "contractType()": "cb2ef6f7",
    "contractURI()": "e8a3d485",
    "contractVersion()": "a0a8e460",
    "getRoleAdmin(bytes32)": "248a9ca3",
    "getRoleMember(bytes32,uint256)": "9010d07c",
    "getRoleMemberCount(bytes32)": "ca15c873",
    "grantRole(bytes32,address)": "2f2ff15d",
    "hasRole(bytes32,address)": "91d14854",
    "hasRoleWithSwitch(bytes32,address)": "a32fa5b3",
    "initialize(address,string,address[])": "3a105cfb",
    "isTrustedForwarder(address)": "572b6c05",
    "multicall(bytes[])": "ac9650d8",
    "renounceRole(bytes32,address)": "36568abe",
    "revokeRole(bytes32,address)": "d547741f",
    "setContractURI(string)": "938e3d7b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"AirdropFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"prevURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newURI\",\"type\":\"string\"}],\"name\":\"ContractURIUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenOwner\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct IAirdropERC20.AirdropContent[]\",\"name\":\"_contents\",\"type\":\"tuple[]\"}],\"name\":\"airdropERC20\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractType\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractVersion\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRoleWithSwitch\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_defaultAdmin\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_contractURI\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"_trustedForwarders\",\"type\":\"address[]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"setContractURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"airdropERC20(address,address,(address,uint256)[])\":{\"details\":\"The token-owner should approve target tokens to Airdrop contract,                   which acts as operator for the tokens.\",\"params\":{\"_contents\":\"List containing recipient, tokenId and amounts to airdrop.\",\"_tokenAddress\":\"The contract address of the tokens to transfer.\",\"_tokenOwner\":\"The owner of the the tokens to transfer.\"}},\"contractType()\":{\"details\":\"Returns the type of the contract.\"},\"contractVersion()\":{\"details\":\"Returns the version of the contract.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"See {grantRole} and {revokeRole}.                  To change a role's admin, use {_setRoleAdmin}.\",\"params\":{\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns `member` who has `role`, at `index` of role-members list.                  See struct {RoleMembers}, and mapping {roleMembers}\",\"params\":{\"index\":\"Index in list of current members for the role.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"},\"returns\":{\"member\":\" Address of account that has `role`\"}},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns `count` of accounts that have `role`.                  See struct {RoleMembers}, and mapping {roleMembers}\",\"params\":{\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"},\"returns\":{\"count\":\"  Total number of accounts that have `role`\"}},\"grantRole(bytes32,address)\":{\"details\":\"Caller must have admin role for the `role`.                  Emits {RoleGranted Event}.\",\"params\":{\"account\":\"Address of the account to which the role is being granted.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\",\"params\":{\"account\":\"Address of the account for which the role is being checked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"hasRoleWithSwitch(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.                  Role restrictions can be swtiched on and off:                      - If address(0) has ROLE, then the ROLE restrictions                        don't apply.                      - If address(0) does not have ROLE, then the ROLE                        restrictions will apply.\",\"params\":{\"account\":\"Address of the account for which the role is being checked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"initialize(address,string,address[])\":{\"details\":\"Initializes the contract, like a constructor.\"},\"multicall(bytes[])\":{\"details\":\"Receives and executes a batch of function calls on this contract.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Caller must have the `role`, with caller being the same as `account`.                  Emits {RoleRevoked Event}.\",\"params\":{\"account\":\"Address of the account from which the role is being revoked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"revokeRole(bytes32,address)\":{\"details\":\"Caller must have admin role for the `role`.                  Emits {RoleRevoked Event}.\",\"params\":{\"account\":\"Address of the account from which the role is being revoked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"setContractURI(string)\":{\"details\":\"Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.\",\"params\":{\"_uri\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}}},\"version\":1},\"userdoc\":{\"events\":{\"AirdropFailed(address,address,address,uint256)\":{\"notice\":\"Emitted when an airdrop fails for a recipient address.\"}},\"kind\":\"user\",\"methods\":{\"airdropERC20(address,address,(address,uint256)[])\":{\"notice\":\"Lets contract-owner send ERC20 tokens to a list of addresses.\"},\"contractURI()\":{\"notice\":\"Returns the contract metadata URI.\"},\"getRoleAdmin(bytes32)\":{\"notice\":\"Returns the admin role that controls the specified role.\"},\"getRoleMember(bytes32,uint256)\":{\"notice\":\"Returns the role-member from a list of members for a role,                  at a given index.\"},\"getRoleMemberCount(bytes32)\":{\"notice\":\"Returns total number of accounts that have a role.\"},\"grantRole(bytes32,address)\":{\"notice\":\"Grants a role to an account, if not previously granted.\"},\"hasRole(bytes32,address)\":{\"notice\":\"Checks whether an account has a particular role.\"},\"hasRoleWithSwitch(bytes32,address)\":{\"notice\":\"Checks whether an account has a particular role;                  role restrictions can be swtiched on and off.\"},\"renounceRole(bytes32,address)\":{\"notice\":\"Revokes role from the account.\"},\"revokeRole(bytes32,address)\":{\"notice\":\"Revokes role from an account.\"},\"setContractURI(string)\":{\"notice\":\"Lets a contract admin set the URI for contract-level metadata.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/prebuilts/unaudited/airdrop/AirdropERC20.sol\":\"AirdropERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@std/=lib/forge-std/src/\",\":@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/\",\":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/\",\":contracts/=contracts/\",\":ds-test/=lib/ds-test/src/\",\":dynamic-contracts/=lib/dynamic-contracts/src/\",\":erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/ERC721A-Upgradeable/\",\":erc721a/=lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/\"]},\"sources\":{\"contracts/eip/interface/IERC20.sol\":{\"keccak256\":\"0x5bdd9dd97ba7d9d7c9a2953db287e4d9d7fa93a27a96bc2e72a8da4919b6f7ff\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://45527c265ee5de6bbb3ecfc052e7b1175531a82c2ac16172020aee855f7dd592\",\"dweb:/ipfs/QmVZthqbG916qUQSwv1LE8bB58ZGQ1VfQbLbbRV5urfEYA\"]},\"contracts/extension/ContractMetadata.sol\":{\"keccak256\":\"0xf53ab08ec3057056872c15e35a5610f7a43426bd2829786aed006d527177adfe\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ee132ae5efdd372152febfcd8fd3a7cb82c7019367d92c886f5096003a79f392\",\"dweb:/ipfs/QmRW1cGWmZAu57huZpTUwsWB8AxUFrBp6g4NqozXpbWsR6\"]},\"contracts/extension/Permissions.sol\":{\"keccak256\":\"0xe7e18181f2d2c8bae4afc7ee69ce1d547e7aa583182e8e0853ca33c49a28c04d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://75d5f5a9356c290e398a5dd05914b59c3d09e6fedde2da80b6f1012aedf323f8\",\"dweb:/ipfs/QmNrrf8Uyq33XBsE2NqVTW6HVX3XixFTjCG8KGbGxdEE84\"]},\"contracts/extension/PermissionsEnumerable.sol\":{\"keccak256\":\"0x434a6ffc16ddc437ffb37b8fbe4c9696385252f15a617c4606b8c5e10561caf3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1a9d4dac4bf2ae3c3c086af1956dc25e8b149b0914125e660cc0648791c247cb\",\"dweb:/ipfs/QmTMEggPdBea1JCamsShwRf3en2FgVTXNTPJ2isFtBk4Kk\"]},\"contracts/extension/interface/IContractMetadata.sol\":{\"keccak256\":\"0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a\",\"dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr\"]},\"contracts/extension/interface/IPermissions.sol\":{\"keccak256\":\"0xc0cd1f87bac474a06f85e2b341b9b57662aee957fc24180d42c872481c2f2ae3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7dec3eed451d63867531d693f0be3279fa2c9aef3130f0826c3520c06820fa5d\",\"dweb:/ipfs/QmTYANrcPdd9SCe99DWsKJ19evNRQKQGZeoS1Keew4M2cS\"]},\"contracts/extension/interface/IPermissionsEnumerable.sol\":{\"keccak256\":\"0x2e742c18a4481bad41d56424cd16c52def2fb415f69e5fb5f67d8d979300ff95\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d9be33bb865e3e82aca540a3e38cbc2bf2e431f9d1bf39c50d6c757e7b7bf3ee\",\"dweb:/ipfs/Qmdad1Xqj5SQ44Bk4bwD2uA36XnGHtqnVYSomKZQvnUBVG\"]},\"contracts/external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol\":{\"keccak256\":\"0xdbc96b1264d2e2bd82cb7e697056929325e09d1641321145a8cec53b22b9567d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ca7ccf947d21d98878ec18e941b750cd2ae7c563e6d2a707da4f806038d67c8\",\"dweb:/ipfs/QmYVLYUPMD3b95vKrS5yjxcz2MDNNzkWJY9xc9bc9oTZdh\"]},\"contracts/external-deps/openzeppelin/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xa6149938a7c7c8af4244743aeaafcfb1fd9ce15ad45de58fa9576f0ed5599b2c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://839aa4ea6ef6d1972881bfd7420a9ddcd2f37139e3f0bf25310f93f48410702d\",\"dweb:/ipfs/QmSH65kStfbgMbfjFdfJqV412omPy6nB1JMvMt9q7SsytW\"]},\"contracts/infra/interface/IWETH.sol\":{\"keccak256\":\"0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1\",\"dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU\"]},\"contracts/lib/CurrencyTransferLib.sol\":{\"keccak256\":\"0x4a30bc9a8cd6cc8b855621fb1a651e2c3a1639b0ad153f1139c3ba463605672d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://417cc64ec6393f3cc89981ca9c32bbcc444a5f91363d69f84dd8ace888b2b859\",\"dweb:/ipfs/QmZeaQsYGx4VNoP8e1fcwC87PwvyakheWYeuwEwhFSJnvB\"]},\"contracts/lib/TWAddress.sol\":{\"keccak256\":\"0x460f032cf3bf43d586e126ab2ec8be4335767f497ccb699741546a1cfba94a7e\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://28fcbf6dde6c2eeb9864f6ec6f21dcc81ec426877debf4b912f2f3bc5b0fc91e\",\"dweb:/ipfs/QmS1SHrZDfefX8EE7DdvszTY6VPCHydf4HM7NKJ2gP72e6\"]},\"contracts/lib/TWStrings.sol\":{\"keccak256\":\"0xef7e9954d888f99baffc10db1d9bf6a2beb66c842d81dea90352ddded22cbbf8\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://832415134684f5413f9d0f3f5536aa30848690cfe54769f7730a3807438f3bf9\",\"dweb:/ipfs/QmduTiUdtsnyJVMXpdomohEWDVg46aZhnS9uTURu4x1NYt\"]},\"contracts/prebuilts/interface/airdrop/IAirdropERC20.sol\":{\"keccak256\":\"0x901a85c1bec580f9fcaf4973ee36da1d2c02c78864ccf0db17d031cfb1e993ab\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://94d9b599b5da80f0811e0d8934292b3885ed99f69ed7d17be636b81455c6d991\",\"dweb:/ipfs/QmWjgGDHgofVW3zzAvxFG3wZXbFjBoATNCfEradFB8zstc\"]},\"contracts/prebuilts/unaudited/airdrop/AirdropERC20.sol\":{\"keccak256\":\"0xa837a41cd42ddebe6fe23281d1761f5cef9d635d7a275a756e7ee44d56b10a94\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d0a4b9cbbc7bbc9b5e21d97d1a99c84816a71a1f89402bdd5b2dcd47f652d2c0\",\"dweb:/ipfs/QmdjVQR4V1W1yAQH6gQzJqg2V3qZeNRbdTkW7tfVErVVby\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x8cc03c5ac17e8a7396e487cda41fc1f1dfdb91db7d528e6da84bee3b6dd7e167\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://607818f1b44548c2d8268176f73cdb290e1faed971b1061930d92698366e2a11\",\"dweb:/ipfs/QmQibMe3r5no95b6q7isGT5R75V8xSofWEDLXzp95b7LgZ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/MulticallUpgradeable.sol\":{\"keccak256\":\"0xb8709268fac307114f6cbb5e3cee798d91cd0adfea4d337c4920f8f0b2414f15\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34975544d7bea644eee9ad6e9034b7bbbc0b165159b77f60d0c6004300ab601d\",\"dweb:/ipfs/QmUW5vLADhvVqSdBe96QFM6gzwtv9pagpaUkzXmaeQTWPQ\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.12+commit.f00d7308"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "tokenOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AirdropFailed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "prevURI",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "newURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ContractURIUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleAdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleGranted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleRevoked",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DEFAULT_ADMIN_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_tokenAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_tokenOwner",
              "type": "address"
            },
            {
              "internalType": "struct IAirdropERC20.AirdropContent[]",
              "name": "_contents",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "airdropERC20"
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "contractType",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "contractURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "contractVersion",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleAdmin",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleMember",
          "outputs": [
            {
              "internalType": "address",
              "name": "member",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleMemberCount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "count",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRole",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRoleWithSwitch",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_defaultAdmin",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "_contractURI",
              "type": "string"
            },
            {
              "internalType": "address[]",
              "name": "_trustedForwarders",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "forwarder",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isTrustedForwarder",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes[]",
              "name": "data",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "multicall",
          "outputs": [
            {
              "internalType": "bytes[]",
              "name": "results",
              "type": "bytes[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeRole"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_uri",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setContractURI"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "airdropERC20(address,address,(address,uint256)[])": {
            "details": "The token-owner should approve target tokens to Airdrop contract,                   which acts as operator for the tokens.",
            "params": {
              "_contents": "List containing recipient, tokenId and amounts to airdrop.",
              "_tokenAddress": "The contract address of the tokens to transfer.",
              "_tokenOwner": "The owner of the the tokens to transfer."
            }
          },
          "contractType()": {
            "details": "Returns the type of the contract."
          },
          "contractVersion()": {
            "details": "Returns the version of the contract."
          },
          "getRoleAdmin(bytes32)": {
            "details": "See {grantRole} and {revokeRole}.                  To change a role's admin, use {_setRoleAdmin}.",
            "params": {
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "getRoleMember(bytes32,uint256)": {
            "details": "Returns `member` who has `role`, at `index` of role-members list.                  See struct {RoleMembers}, and mapping {roleMembers}",
            "params": {
              "index": "Index in list of current members for the role.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            },
            "returns": {
              "member": " Address of account that has `role`"
            }
          },
          "getRoleMemberCount(bytes32)": {
            "details": "Returns `count` of accounts that have `role`.                  See struct {RoleMembers}, and mapping {roleMembers}",
            "params": {
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            },
            "returns": {
              "count": "  Total number of accounts that have `role`"
            }
          },
          "grantRole(bytes32,address)": {
            "details": "Caller must have admin role for the `role`.                  Emits {RoleGranted Event}.",
            "params": {
              "account": "Address of the account to which the role is being granted.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "hasRole(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`.",
            "params": {
              "account": "Address of the account for which the role is being checked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "hasRoleWithSwitch(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`.                  Role restrictions can be swtiched on and off:                      - If address(0) has ROLE, then the ROLE restrictions                        don't apply.                      - If address(0) does not have ROLE, then the ROLE                        restrictions will apply.",
            "params": {
              "account": "Address of the account for which the role is being checked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "initialize(address,string,address[])": {
            "details": "Initializes the contract, like a constructor."
          },
          "multicall(bytes[])": {
            "details": "Receives and executes a batch of function calls on this contract."
          },
          "renounceRole(bytes32,address)": {
            "details": "Caller must have the `role`, with caller being the same as `account`.                  Emits {RoleRevoked Event}.",
            "params": {
              "account": "Address of the account from which the role is being revoked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "revokeRole(bytes32,address)": {
            "details": "Caller must have admin role for the `role`.                  Emits {RoleRevoked Event}.",
            "params": {
              "account": "Address of the account from which the role is being revoked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "setContractURI(string)": {
            "details": "Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.",
            "params": {
              "_uri": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "airdropERC20(address,address,(address,uint256)[])": {
            "notice": "Lets contract-owner send ERC20 tokens to a list of addresses."
          },
          "contractURI()": {
            "notice": "Returns the contract metadata URI."
          },
          "getRoleAdmin(bytes32)": {
            "notice": "Returns the admin role that controls the specified role."
          },
          "getRoleMember(bytes32,uint256)": {
            "notice": "Returns the role-member from a list of members for a role,                  at a given index."
          },
          "getRoleMemberCount(bytes32)": {
            "notice": "Returns total number of accounts that have a role."
          },
          "grantRole(bytes32,address)": {
            "notice": "Grants a role to an account, if not previously granted."
          },
          "hasRole(bytes32,address)": {
            "notice": "Checks whether an account has a particular role."
          },
          "hasRoleWithSwitch(bytes32,address)": {
            "notice": "Checks whether an account has a particular role;                  role restrictions can be swtiched on and off."
          },
          "renounceRole(bytes32,address)": {
            "notice": "Revokes role from the account."
          },
          "revokeRole(bytes32,address)": {
            "notice": "Revokes role from an account."
          },
          "setContractURI(string)": {
            "notice": "Lets a contract admin set the URI for contract-level metadata."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=lib/chainlink/",
        "@ds-test/=lib/ds-test/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@std/=lib/forge-std/src/",
        "@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/",
        "ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/",
        "ERC721A/=lib/ERC721A/contracts/",
        "chainlink/=lib/chainlink/",
        "contracts/=contracts/",
        "ds-test/=lib/ds-test/src/",
        "dynamic-contracts/=lib/dynamic-contracts/src/",
        "erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/",
        "erc721a-upgradeable/=lib/ERC721A-Upgradeable/",
        "erc721a/=lib/ERC721A/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/prebuilts/unaudited/airdrop/AirdropERC20.sol": "AirdropERC20"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/eip/interface/IERC20.sol": {
        "keccak256": "0x5bdd9dd97ba7d9d7c9a2953db287e4d9d7fa93a27a96bc2e72a8da4919b6f7ff",
        "urls": [
          "bzz-raw://45527c265ee5de6bbb3ecfc052e7b1175531a82c2ac16172020aee855f7dd592",
          "dweb:/ipfs/QmVZthqbG916qUQSwv1LE8bB58ZGQ1VfQbLbbRV5urfEYA"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/ContractMetadata.sol": {
        "keccak256": "0xf53ab08ec3057056872c15e35a5610f7a43426bd2829786aed006d527177adfe",
        "urls": [
          "bzz-raw://ee132ae5efdd372152febfcd8fd3a7cb82c7019367d92c886f5096003a79f392",
          "dweb:/ipfs/QmRW1cGWmZAu57huZpTUwsWB8AxUFrBp6g4NqozXpbWsR6"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Permissions.sol": {
        "keccak256": "0xe7e18181f2d2c8bae4afc7ee69ce1d547e7aa583182e8e0853ca33c49a28c04d",
        "urls": [
          "bzz-raw://75d5f5a9356c290e398a5dd05914b59c3d09e6fedde2da80b6f1012aedf323f8",
          "dweb:/ipfs/QmNrrf8Uyq33XBsE2NqVTW6HVX3XixFTjCG8KGbGxdEE84"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/PermissionsEnumerable.sol": {
        "keccak256": "0x434a6ffc16ddc437ffb37b8fbe4c9696385252f15a617c4606b8c5e10561caf3",
        "urls": [
          "bzz-raw://1a9d4dac4bf2ae3c3c086af1956dc25e8b149b0914125e660cc0648791c247cb",
          "dweb:/ipfs/QmTMEggPdBea1JCamsShwRf3en2FgVTXNTPJ2isFtBk4Kk"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IContractMetadata.sol": {
        "keccak256": "0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2",
        "urls": [
          "bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a",
          "dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPermissions.sol": {
        "keccak256": "0xc0cd1f87bac474a06f85e2b341b9b57662aee957fc24180d42c872481c2f2ae3",
        "urls": [
          "bzz-raw://7dec3eed451d63867531d693f0be3279fa2c9aef3130f0826c3520c06820fa5d",
          "dweb:/ipfs/QmTYANrcPdd9SCe99DWsKJ19evNRQKQGZeoS1Keew4M2cS"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPermissionsEnumerable.sol": {
        "keccak256": "0x2e742c18a4481bad41d56424cd16c52def2fb415f69e5fb5f67d8d979300ff95",
        "urls": [
          "bzz-raw://d9be33bb865e3e82aca540a3e38cbc2bf2e431f9d1bf39c50d6c757e7b7bf3ee",
          "dweb:/ipfs/Qmdad1Xqj5SQ44Bk4bwD2uA36XnGHtqnVYSomKZQvnUBVG"
        ],
        "license": "Apache-2.0"
      },
      "contracts/external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol": {
        "keccak256": "0xdbc96b1264d2e2bd82cb7e697056929325e09d1641321145a8cec53b22b9567d",
        "urls": [
          "bzz-raw://7ca7ccf947d21d98878ec18e941b750cd2ae7c563e6d2a707da4f806038d67c8",
          "dweb:/ipfs/QmYVLYUPMD3b95vKrS5yjxcz2MDNNzkWJY9xc9bc9oTZdh"
        ],
        "license": "MIT"
      },
      "contracts/external-deps/openzeppelin/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xa6149938a7c7c8af4244743aeaafcfb1fd9ce15ad45de58fa9576f0ed5599b2c",
        "urls": [
          "bzz-raw://839aa4ea6ef6d1972881bfd7420a9ddcd2f37139e3f0bf25310f93f48410702d",
          "dweb:/ipfs/QmSH65kStfbgMbfjFdfJqV412omPy6nB1JMvMt9q7SsytW"
        ],
        "license": "MIT"
      },
      "contracts/infra/interface/IWETH.sol": {
        "keccak256": "0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b",
        "urls": [
          "bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1",
          "dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/CurrencyTransferLib.sol": {
        "keccak256": "0x4a30bc9a8cd6cc8b855621fb1a651e2c3a1639b0ad153f1139c3ba463605672d",
        "urls": [
          "bzz-raw://417cc64ec6393f3cc89981ca9c32bbcc444a5f91363d69f84dd8ace888b2b859",
          "dweb:/ipfs/QmZeaQsYGx4VNoP8e1fcwC87PwvyakheWYeuwEwhFSJnvB"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/TWAddress.sol": {
        "keccak256": "0x460f032cf3bf43d586e126ab2ec8be4335767f497ccb699741546a1cfba94a7e",
        "urls": [
          "bzz-raw://28fcbf6dde6c2eeb9864f6ec6f21dcc81ec426877debf4b912f2f3bc5b0fc91e",
          "dweb:/ipfs/QmS1SHrZDfefX8EE7DdvszTY6VPCHydf4HM7NKJ2gP72e6"
        ],
        "license": "Apache 2.0"
      },
      "contracts/lib/TWStrings.sol": {
        "keccak256": "0xef7e9954d888f99baffc10db1d9bf6a2beb66c842d81dea90352ddded22cbbf8",
        "urls": [
          "bzz-raw://832415134684f5413f9d0f3f5536aa30848690cfe54769f7730a3807438f3bf9",
          "dweb:/ipfs/QmduTiUdtsnyJVMXpdomohEWDVg46aZhnS9uTURu4x1NYt"
        ],
        "license": "Apache 2.0"
      },
      "contracts/prebuilts/interface/airdrop/IAirdropERC20.sol": {
        "keccak256": "0x901a85c1bec580f9fcaf4973ee36da1d2c02c78864ccf0db17d031cfb1e993ab",
        "urls": [
          "bzz-raw://94d9b599b5da80f0811e0d8934292b3885ed99f69ed7d17be636b81455c6d991",
          "dweb:/ipfs/QmWjgGDHgofVW3zzAvxFG3wZXbFjBoATNCfEradFB8zstc"
        ],
        "license": "Apache-2.0"
      },
      "contracts/prebuilts/unaudited/airdrop/AirdropERC20.sol": {
        "keccak256": "0xa837a41cd42ddebe6fe23281d1761f5cef9d635d7a275a756e7ee44d56b10a94",
        "urls": [
          "bzz-raw://d0a4b9cbbc7bbc9b5e21d97d1a99c84816a71a1f89402bdd5b2dcd47f652d2c0",
          "dweb:/ipfs/QmdjVQR4V1W1yAQH6gQzJqg2V3qZeNRbdTkW7tfVErVVby"
        ],
        "license": "Apache-2.0"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e",
        "urls": [
          "bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497",
          "dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol": {
        "keccak256": "0x8cc03c5ac17e8a7396e487cda41fc1f1dfdb91db7d528e6da84bee3b6dd7e167",
        "urls": [
          "bzz-raw://607818f1b44548c2d8268176f73cdb290e1faed971b1061930d92698366e2a11",
          "dweb:/ipfs/QmQibMe3r5no95b6q7isGT5R75V8xSofWEDLXzp95b7LgZ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3",
        "urls": [
          "bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4",
          "dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/MulticallUpgradeable.sol": {
        "keccak256": "0xb8709268fac307114f6cbb5e3cee798d91cd0adfea4d337c4920f8f0b2414f15",
        "urls": [
          "bzz-raw://34975544d7bea644eee9ad6e9034b7bbbc0b165159b77f60d0c6004300ab601d",
          "dweb:/ipfs/QmUW5vLADhvVqSdBe96QFM6gzwtv9pagpaUkzXmaeQTWPQ"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/prebuilts/unaudited/airdrop/AirdropERC20.sol",
    "id": 97522,
    "exportedSymbols": {
      "AddressUpgradeable": [
        155768
      ],
      "AirdropERC20": [
        97521
      ],
      "ContextUpgradeable": [
        156044
      ],
      "ContractMetadata": [
        17526
      ],
      "CurrencyTransferLib": [
        63578
      ],
      "ERC2771ContextUpgradeable": [
        45607
      ],
      "IAirdropERC20": [
        75601
      ],
      "IContractMetadata": [
        32437
      ],
      "IERC20": [
        13899
      ],
      "IPermissions": [
        33256
      ],
      "IPermissionsEnumerable": [
        33281
      ],
      "Initializable": [
        150199
      ],
      "MulticallUpgradeable": [
        156227
      ],
      "Permissions": [
        21500
      ],
      "PermissionsEnumerable": [
        21799
      ],
      "ReentrancyGuardUpgradeable": [
        150385
      ],
      "TWStrings": [
        64852
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:7083:378",
    "nodes": [
      {
        "id": 97147,
        "nodeType": "PragmaDirective",
        "src": "39:24:378",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".11"
        ]
      },
      {
        "id": 97148,
        "nodeType": "ImportDirective",
        "src": "775:85:378",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 97522,
        "sourceUnit": 150386,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 97149,
        "nodeType": "ImportDirective",
        "src": "861:76:378",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/utils/MulticallUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/utils/MulticallUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 97522,
        "sourceUnit": 156228,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 97150,
        "nodeType": "ImportDirective",
        "src": "987:51:378",
        "nodes": [],
        "absolutePath": "contracts/prebuilts/interface/airdrop/IAirdropERC20.sol",
        "file": "../../interface/airdrop/IAirdropERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 97522,
        "sourceUnit": 75602,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 97152,
        "nodeType": "ImportDirective",
        "src": "1039:75:378",
        "nodes": [],
        "absolutePath": "contracts/lib/CurrencyTransferLib.sol",
        "file": "../../../lib/CurrencyTransferLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 97522,
        "sourceUnit": 63579,
        "symbolAliases": [
          {
            "foreign": {
              "id": 97151,
              "name": "CurrencyTransferLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 63578,
              "src": "1048:19:378",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$63578_$",
                "typeString": "type(library CurrencyTransferLib)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 97153,
        "nodeType": "ImportDirective",
        "src": "1115:43:378",
        "nodes": [],
        "absolutePath": "contracts/eip/interface/IERC20.sol",
        "file": "../../../eip/interface/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 97522,
        "sourceUnit": 13900,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 97154,
        "nodeType": "ImportDirective",
        "src": "1159:82:378",
        "nodes": [],
        "absolutePath": "contracts/external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol",
        "file": "../../../external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 97522,
        "sourceUnit": 45608,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 97155,
        "nodeType": "ImportDirective",
        "src": "1282:54:378",
        "nodes": [],
        "absolutePath": "contracts/extension/PermissionsEnumerable.sol",
        "file": "../../../extension/PermissionsEnumerable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 97522,
        "sourceUnit": 21800,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 97156,
        "nodeType": "ImportDirective",
        "src": "1337:49:378",
        "nodes": [],
        "absolutePath": "contracts/extension/ContractMetadata.sol",
        "file": "../../../extension/ContractMetadata.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 97522,
        "sourceUnit": 17527,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 97521,
        "nodeType": "ContractDefinition",
        "src": "1388:5733:378",
        "nodes": [
          {
            "id": 97176,
            "nodeType": "VariableDeclaration",
            "src": "1778:62:378",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "MODULE_TYPE",
            "nameLocation": "1803:11:378",
            "scope": 97521,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 97171,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1778:7:378",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "41697264726f704552433230",
                  "id": 97174,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1825:14:378",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_d8a06fdfd641ef6e9bfa8682572ce0daaf81505bbd975ec0d64b7db90968bd10",
                    "typeString": "literal_string \"AirdropERC20\""
                  },
                  "value": "AirdropERC20"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_d8a06fdfd641ef6e9bfa8682572ce0daaf81505bbd975ec0d64b7db90968bd10",
                    "typeString": "literal_string \"AirdropERC20\""
                  }
                ],
                "id": 97173,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1817:7:378",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_bytes32_$",
                  "typeString": "type(bytes32)"
                },
                "typeName": {
                  "id": 97172,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1817:7:378",
                  "typeDescriptions": {}
                }
              },
              "id": 97175,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1817:23:378",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "id": 97179,
            "nodeType": "VariableDeclaration",
            "src": "1846:36:378",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "VERSION",
            "nameLocation": "1871:7:378",
            "scope": 97521,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 97177,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1846:7:378",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "32",
              "id": 97178,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1881:1:378",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2_by_1",
                "typeString": "int_const 2"
              },
              "value": "2"
            },
            "visibility": "private"
          },
          {
            "id": 97185,
            "nodeType": "FunctionDefinition",
            "src": "2081:28:378",
            "nodes": [],
            "body": {
              "id": 97184,
              "nodeType": "Block",
              "src": "2107:2:378",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "id": 97182,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 97181,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 150119,
                  "src": "2095:11:378"
                },
                "nodeType": "ModifierInvocation",
                "src": "2095:11:378"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 97180,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2092:2:378"
            },
            "returnParameters": {
              "id": 97183,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2107:0:378"
            },
            "scope": 97521,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 97215,
            "nodeType": "FunctionDefinition",
            "src": "2174:358:378",
            "nodes": [],
            "body": {
              "id": 97214,
              "nodeType": "Block",
              "src": "2333:199:378",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 97199,
                        "name": "_trustedForwarders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97193,
                        "src": "2375:18:378",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      ],
                      "id": 97198,
                      "name": "__ERC2771Context_init_unchained",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45544,
                      "src": "2343:31:378",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address[] memory)"
                      }
                    },
                    "id": 97200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2343:51:378",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 97201,
                  "nodeType": "ExpressionStatement",
                  "src": "2343:51:378"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 97203,
                        "name": "_contractURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97190,
                        "src": "2423:12:378",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 97202,
                      "name": "_setupContractURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17519,
                      "src": "2405:17:378",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 97204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2405:31:378",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 97205,
                  "nodeType": "ExpressionStatement",
                  "src": "2405:31:378"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 97207,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21176,
                        "src": "2457:18:378",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 97208,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97188,
                        "src": "2477:13:378",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 97206,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        21723
                      ],
                      "referencedDeclaration": 21723,
                      "src": "2446:10:378",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 97209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2446:45:378",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 97210,
                  "nodeType": "ExpressionStatement",
                  "src": "2446:45:378"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 97211,
                      "name": "__ReentrancyGuard_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 150349,
                      "src": "2501:22:378",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 97212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2501:24:378",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 97213,
                  "nodeType": "ExpressionStatement",
                  "src": "2501:24:378"
                }
              ]
            },
            "documentation": {
              "id": 97186,
              "nodeType": "StructuredDocumentation",
              "src": "2115:54:378",
              "text": "@dev Initializes the contract, like a constructor."
            },
            "functionSelector": "3a105cfb",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 97196,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 97195,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 150119,
                  "src": "2321:11:378"
                },
                "nodeType": "ModifierInvocation",
                "src": "2321:11:378"
              }
            ],
            "name": "initialize",
            "nameLocation": "2183:10:378",
            "parameters": {
              "id": 97194,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 97188,
                  "mutability": "mutable",
                  "name": "_defaultAdmin",
                  "nameLocation": "2211:13:378",
                  "nodeType": "VariableDeclaration",
                  "scope": 97215,
                  "src": "2203:21:378",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 97187,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2203:7:378",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 97190,
                  "mutability": "mutable",
                  "name": "_contractURI",
                  "nameLocation": "2248:12:378",
                  "nodeType": "VariableDeclaration",
                  "scope": 97215,
                  "src": "2234:26:378",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 97189,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2234:6:378",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 97193,
                  "mutability": "mutable",
                  "name": "_trustedForwarders",
                  "nameLocation": "2287:18:378",
                  "nodeType": "VariableDeclaration",
                  "scope": 97215,
                  "src": "2270:35:378",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 97191,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2270:7:378",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 97192,
                    "nodeType": "ArrayTypeName",
                    "src": "2270:9:378",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2193:118:378"
            },
            "returnParameters": {
              "id": 97197,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2333:0:378"
            },
            "scope": 97521,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 97224,
            "nodeType": "FunctionDefinition",
            "src": "2772:91:378",
            "nodes": [],
            "body": {
              "id": 97223,
              "nodeType": "Block",
              "src": "2828:35:378",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 97221,
                    "name": "MODULE_TYPE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 97176,
                    "src": "2845:11:378",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 97220,
                  "id": 97222,
                  "nodeType": "Return",
                  "src": "2838:18:378"
                }
              ]
            },
            "documentation": {
              "id": 97216,
              "nodeType": "StructuredDocumentation",
              "src": "2725:42:378",
              "text": "@dev Returns the type of the contract."
            },
            "functionSelector": "cb2ef6f7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "contractType",
            "nameLocation": "2781:12:378",
            "parameters": {
              "id": 97217,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2793:2:378"
            },
            "returnParameters": {
              "id": 97220,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 97219,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 97224,
                  "src": "2819:7:378",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 97218,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2819:7:378",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2818:9:378"
            },
            "scope": 97521,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 97236,
            "nodeType": "FunctionDefinition",
            "src": "2919:95:378",
            "nodes": [],
            "body": {
              "id": 97235,
              "nodeType": "Block",
              "src": "2976:38:378",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 97232,
                        "name": "VERSION",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97179,
                        "src": "2999:7:378",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 97231,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2993:5:378",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint8_$",
                        "typeString": "type(uint8)"
                      },
                      "typeName": {
                        "id": 97230,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "2993:5:378",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 97233,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2993:14:378",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 97229,
                  "id": 97234,
                  "nodeType": "Return",
                  "src": "2986:21:378"
                }
              ]
            },
            "documentation": {
              "id": 97225,
              "nodeType": "StructuredDocumentation",
              "src": "2869:45:378",
              "text": "@dev Returns the version of the contract."
            },
            "functionSelector": "a0a8e460",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "contractVersion",
            "nameLocation": "2928:15:378",
            "parameters": {
              "id": 97226,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2943:2:378"
            },
            "returnParameters": {
              "id": 97229,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 97228,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 97236,
                  "src": "2969:5:378",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 97227,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2969:5:378",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2968:7:378"
            },
            "scope": 97521,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 97370,
            "nodeType": "FunctionDefinition",
            "src": "3711:1457:378",
            "nodes": [],
            "body": {
              "id": 97369,
              "nodeType": "Block",
              "src": "3874:1294:378",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 97252,
                            "name": "DEFAULT_ADMIN_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21176,
                            "src": "3900:18:378",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 97253,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                97508
                              ],
                              "referencedDeclaration": 97508,
                              "src": "3920:10:378",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 97254,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3920:12:378",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 97251,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21207,
                          "src": "3892:7:378",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 97255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3892:41:378",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420617574686f72697a65642e",
                        "id": 97256,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3935:17:378",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7266bddff5abb545cc5c3e00df14df53c6215d4f5ec266a2b22dc0da56941b7e",
                          "typeString": "literal_string \"Not authorized.\""
                        },
                        "value": "Not authorized."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7266bddff5abb545cc5c3e00df14df53c6215d4f5ec266a2b22dc0da56941b7e",
                          "typeString": "literal_string \"Not authorized.\""
                        }
                      ],
                      "id": 97250,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3884:7:378",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 97257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3884:69:378",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 97258,
                  "nodeType": "ExpressionStatement",
                  "src": "3884:69:378"
                },
                {
                  "assignments": [
                    97260
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 97260,
                      "mutability": "mutable",
                      "name": "len",
                      "nameLocation": "3972:3:378",
                      "nodeType": "VariableDeclaration",
                      "scope": 97369,
                      "src": "3964:11:378",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 97259,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3964:7:378",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 97263,
                  "initialValue": {
                    "expression": {
                      "id": 97261,
                      "name": "_contents",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 97245,
                      "src": "3978:9:378",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_AirdropContent_$75588_calldata_ptr_$dyn_calldata_ptr",
                        "typeString": "struct IAirdropERC20.AirdropContent calldata[] calldata"
                      }
                    },
                    "id": 97262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "3978:16:378",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3964:30:378"
                },
                {
                  "assignments": [
                    97265
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 97265,
                      "mutability": "mutable",
                      "name": "nativeTokenAmount",
                      "nameLocation": "4012:17:378",
                      "nodeType": "VariableDeclaration",
                      "scope": 97369,
                      "src": "4004:25:378",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 97264,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4004:7:378",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 97266,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4004:25:378"
                },
                {
                  "assignments": [
                    97268
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 97268,
                      "mutability": "mutable",
                      "name": "refundAmount",
                      "nameLocation": "4047:12:378",
                      "nodeType": "VariableDeclaration",
                      "scope": 97369,
                      "src": "4039:20:378",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 97267,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4039:7:378",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 97269,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4039:20:378"
                },
                {
                  "body": {
                    "id": 97346,
                    "nodeType": "Block",
                    "src": "4101:780:378",
                    "statements": [
                      {
                        "assignments": [
                          97278
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 97278,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "4120:7:378",
                            "nodeType": "VariableDeclaration",
                            "scope": 97346,
                            "src": "4115:12:378",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 97277,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "4115:4:378",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 97291,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 97280,
                              "name": "_tokenAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 97239,
                              "src": "4178:13:378",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 97281,
                              "name": "_tokenOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 97241,
                              "src": "4209:11:378",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 97282,
                                  "name": "_contents",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 97245,
                                  "src": "4238:9:378",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_AirdropContent_$75588_calldata_ptr_$dyn_calldata_ptr",
                                    "typeString": "struct IAirdropERC20.AirdropContent calldata[] calldata"
                                  }
                                },
                                "id": 97284,
                                "indexExpression": {
                                  "id": 97283,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 97271,
                                  "src": "4248:1:378",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4238:12:378",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_AirdropContent_$75588_calldata_ptr",
                                  "typeString": "struct IAirdropERC20.AirdropContent calldata"
                                }
                              },
                              "id": 97285,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "recipient",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 75585,
                              "src": "4238:22:378",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 97286,
                                  "name": "_contents",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 97245,
                                  "src": "4278:9:378",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_AirdropContent_$75588_calldata_ptr_$dyn_calldata_ptr",
                                    "typeString": "struct IAirdropERC20.AirdropContent calldata[] calldata"
                                  }
                                },
                                "id": 97288,
                                "indexExpression": {
                                  "id": 97287,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 97271,
                                  "src": "4288:1:378",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4278:12:378",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_AirdropContent_$75588_calldata_ptr",
                                  "typeString": "struct IAirdropERC20.AirdropContent calldata"
                                }
                              },
                              "id": 97289,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "amount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 75587,
                              "src": "4278:19:378",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 97279,
                            "name": "_transferCurrencyWithReturnVal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 97482,
                            "src": "4130:30:378",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,address,address,uint256) returns (bool)"
                            }
                          },
                          "id": 97290,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4130:181:378",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4115:196:378"
                      },
                      {
                        "condition": {
                          "id": 97293,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "4330:8:378",
                          "subExpression": {
                            "id": 97292,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 97278,
                            "src": "4331:7:378",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 97308,
                        "nodeType": "IfStatement",
                        "src": "4326:138:378",
                        "trueBody": {
                          "id": 97307,
                          "nodeType": "Block",
                          "src": "4340:124:378",
                          "statements": [
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 97295,
                                    "name": "_tokenAddress",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 97239,
                                    "src": "4377:13:378",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 97296,
                                    "name": "_tokenOwner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 97241,
                                    "src": "4392:11:378",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 97297,
                                        "name": "_contents",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 97245,
                                        "src": "4405:9:378",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_AirdropContent_$75588_calldata_ptr_$dyn_calldata_ptr",
                                          "typeString": "struct IAirdropERC20.AirdropContent calldata[] calldata"
                                        }
                                      },
                                      "id": 97299,
                                      "indexExpression": {
                                        "id": 97298,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 97271,
                                        "src": "4415:1:378",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "4405:12:378",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_AirdropContent_$75588_calldata_ptr",
                                        "typeString": "struct IAirdropERC20.AirdropContent calldata"
                                      }
                                    },
                                    "id": 97300,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "recipient",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 75585,
                                    "src": "4405:22:378",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 97301,
                                        "name": "_contents",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 97245,
                                        "src": "4429:9:378",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_AirdropContent_$75588_calldata_ptr_$dyn_calldata_ptr",
                                          "typeString": "struct IAirdropERC20.AirdropContent calldata[] calldata"
                                        }
                                      },
                                      "id": 97303,
                                      "indexExpression": {
                                        "id": 97302,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 97271,
                                        "src": "4439:1:378",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "4429:12:378",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_AirdropContent_$75588_calldata_ptr",
                                        "typeString": "struct IAirdropERC20.AirdropContent calldata"
                                      }
                                    },
                                    "id": 97304,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "amount",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 75587,
                                    "src": "4429:19:378",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 97294,
                                  "name": "AirdropFailed",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 75583,
                                  "src": "4363:13:378",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,address,address,uint256)"
                                  }
                                },
                                "id": 97305,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4363:86:378",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 97306,
                              "nodeType": "EmitStatement",
                              "src": "4358:91:378"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 97312,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 97309,
                            "name": "_tokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 97239,
                            "src": "4482:13:378",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 97310,
                              "name": "CurrencyTransferLib",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 63578,
                              "src": "4499:19:378",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$63578_$",
                                "typeString": "type(library CurrencyTransferLib)"
                              }
                            },
                            "id": 97311,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "NATIVE_TOKEN",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 63346,
                            "src": "4499:32:378",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4482:49:378",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 97340,
                        "nodeType": "IfStatement",
                        "src": "4478:330:378",
                        "trueBody": {
                          "id": 97339,
                          "nodeType": "Block",
                          "src": "4533:275:378",
                          "statements": [
                            {
                              "expression": {
                                "id": 97318,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 97313,
                                  "name": "nativeTokenAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 97265,
                                  "src": "4551:17:378",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 97314,
                                      "name": "_contents",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 97245,
                                      "src": "4572:9:378",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_AirdropContent_$75588_calldata_ptr_$dyn_calldata_ptr",
                                        "typeString": "struct IAirdropERC20.AirdropContent calldata[] calldata"
                                      }
                                    },
                                    "id": 97316,
                                    "indexExpression": {
                                      "id": 97315,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 97271,
                                      "src": "4582:1:378",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4572:12:378",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_AirdropContent_$75588_calldata_ptr",
                                      "typeString": "struct IAirdropERC20.AirdropContent calldata"
                                    }
                                  },
                                  "id": 97317,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "amount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 75587,
                                  "src": "4572:19:378",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4551:40:378",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 97319,
                              "nodeType": "ExpressionStatement",
                              "src": "4551:40:378"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 97324,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 97321,
                                      "name": "nativeTokenAmount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 97265,
                                      "src": "4618:17:378",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "<=",
                                    "rightExpression": {
                                      "expression": {
                                        "id": 97322,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -15,
                                        "src": "4639:3:378",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 97323,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "value",
                                      "nodeType": "MemberAccess",
                                      "src": "4639:9:378",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "4618:30:378",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "496e73756666696369656e74206e617469766520746f6b656e20616d6f756e74",
                                    "id": 97325,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4650:34:378",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_b5f7847becfd85def84c08d77b158a27213a97332b8d819a8c96e6af6cf46854",
                                      "typeString": "literal_string \"Insufficient native token amount\""
                                    },
                                    "value": "Insufficient native token amount"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_b5f7847becfd85def84c08d77b158a27213a97332b8d819a8c96e6af6cf46854",
                                      "typeString": "literal_string \"Insufficient native token amount\""
                                    }
                                  ],
                                  "id": 97320,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "4610:7:378",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 97326,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4610:75:378",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 97327,
                              "nodeType": "ExpressionStatement",
                              "src": "4610:75:378"
                            },
                            {
                              "condition": {
                                "id": 97329,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "!",
                                "prefix": true,
                                "src": "4708:8:378",
                                "subExpression": {
                                  "id": 97328,
                                  "name": "success",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 97278,
                                  "src": "4709:7:378",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 97338,
                              "nodeType": "IfStatement",
                              "src": "4704:90:378",
                              "trueBody": {
                                "id": 97337,
                                "nodeType": "Block",
                                "src": "4718:76:378",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 97335,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 97330,
                                        "name": "refundAmount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 97268,
                                        "src": "4740:12:378",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "+=",
                                      "rightHandSide": {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 97331,
                                            "name": "_contents",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 97245,
                                            "src": "4756:9:378",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_struct$_AirdropContent_$75588_calldata_ptr_$dyn_calldata_ptr",
                                              "typeString": "struct IAirdropERC20.AirdropContent calldata[] calldata"
                                            }
                                          },
                                          "id": 97333,
                                          "indexExpression": {
                                            "id": 97332,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 97271,
                                            "src": "4766:1:378",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "4756:12:378",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_AirdropContent_$75588_calldata_ptr",
                                            "typeString": "struct IAirdropERC20.AirdropContent calldata"
                                          }
                                        },
                                        "id": 97334,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "amount",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 75587,
                                        "src": "4756:19:378",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "4740:35:378",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 97336,
                                    "nodeType": "ExpressionStatement",
                                    "src": "4740:35:378"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      {
                        "id": 97345,
                        "nodeType": "UncheckedBlock",
                        "src": "4822:49:378",
                        "statements": [
                          {
                            "expression": {
                              "id": 97343,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 97341,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 97271,
                                "src": "4850:1:378",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "+=",
                              "rightHandSide": {
                                "hexValue": "31",
                                "id": 97342,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4855:1:378",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "4850:6:378",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 97344,
                            "nodeType": "ExpressionStatement",
                            "src": "4850:6:378"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 97276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 97274,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 97271,
                      "src": "4090:1:378",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 97275,
                      "name": "len",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 97260,
                      "src": "4094:3:378",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4090:7:378",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 97347,
                  "initializationExpression": {
                    "assignments": [
                      97271
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 97271,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4083:1:378",
                        "nodeType": "VariableDeclaration",
                        "scope": 97347,
                        "src": "4075:9:378",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 97270,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4075:7:378",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 97273,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 97272,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4087:1:378",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4075:13:378"
                  },
                  "nodeType": "ForStatement",
                  "src": "4070:811:378"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 97352,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 97349,
                          "name": "nativeTokenAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 97265,
                          "src": "4899:17:378",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 97350,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4920:3:378",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 97351,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "4920:9:378",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4899:30:378",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e636f7272656374206e617469766520746f6b656e20616d6f756e74",
                        "id": 97353,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4931:31:378",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dce5f59a11237ec549173ecd41c5fdf614dfe256f40250ad64b203f7b403da89",
                          "typeString": "literal_string \"Incorrect native token amount\""
                        },
                        "value": "Incorrect native token amount"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dce5f59a11237ec549173ecd41c5fdf614dfe256f40250ad64b203f7b403da89",
                          "typeString": "literal_string \"Incorrect native token amount\""
                        }
                      ],
                      "id": 97348,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4891:7:378",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 97354,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4891:72:378",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 97355,
                  "nodeType": "ExpressionStatement",
                  "src": "4891:72:378"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 97358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 97356,
                      "name": "refundAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 97268,
                      "src": "4978:12:378",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 97357,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4993:1:378",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4978:16:378",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 97368,
                  "nodeType": "IfStatement",
                  "src": "4974:188:378",
                  "trueBody": {
                    "id": 97367,
                    "nodeType": "Block",
                    "src": "4996:166:378",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 97362,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5126:3:378",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 97363,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5126:10:378",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 97364,
                              "name": "refundAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 97268,
                              "src": "5138:12:378",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 97359,
                              "name": "CurrencyTransferLib",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 63578,
                              "src": "5082:19:378",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$63578_$",
                                "typeString": "type(library CurrencyTransferLib)"
                              }
                            },
                            "id": 97361,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransferNativeToken",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 63537,
                            "src": "5082:43:378",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 97365,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5082:69:378",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 97366,
                        "nodeType": "ExpressionStatement",
                        "src": "5082:69:378"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              75600
            ],
            "documentation": {
              "id": 97237,
              "nodeType": "StructuredDocumentation",
              "src": "3202:504:378",
              "text": "  @notice          Lets contract-owner send ERC20 tokens to a list of addresses.\n  @dev             The token-owner should approve target tokens to Airdrop contract,\n                   which acts as operator for the tokens.\n  @param _tokenAddress    The contract address of the tokens to transfer.\n  @param _tokenOwner      The owner of the the tokens to transfer.\n  @param _contents        List containing recipient, tokenId and amounts to airdrop."
            },
            "functionSelector": "0670b2b3",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 97248,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 97247,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 150379,
                  "src": "3861:12:378"
                },
                "nodeType": "ModifierInvocation",
                "src": "3861:12:378"
              }
            ],
            "name": "airdropERC20",
            "nameLocation": "3720:12:378",
            "parameters": {
              "id": 97246,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 97239,
                  "mutability": "mutable",
                  "name": "_tokenAddress",
                  "nameLocation": "3750:13:378",
                  "nodeType": "VariableDeclaration",
                  "scope": 97370,
                  "src": "3742:21:378",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 97238,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3742:7:378",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 97241,
                  "mutability": "mutable",
                  "name": "_tokenOwner",
                  "nameLocation": "3781:11:378",
                  "nodeType": "VariableDeclaration",
                  "scope": 97370,
                  "src": "3773:19:378",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 97240,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3773:7:378",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 97245,
                  "mutability": "mutable",
                  "name": "_contents",
                  "nameLocation": "3828:9:378",
                  "nodeType": "VariableDeclaration",
                  "scope": 97370,
                  "src": "3802:35:378",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_AirdropContent_$75588_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct IAirdropERC20.AirdropContent[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 97243,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 97242,
                        "name": "AirdropContent",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 75588,
                        "src": "3802:14:378"
                      },
                      "referencedDeclaration": 75588,
                      "src": "3802:14:378",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AirdropContent_$75588_storage_ptr",
                        "typeString": "struct IAirdropERC20.AirdropContent"
                      }
                    },
                    "id": 97244,
                    "nodeType": "ArrayTypeName",
                    "src": "3802:16:378",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_AirdropContent_$75588_storage_$dyn_storage_ptr",
                      "typeString": "struct IAirdropERC20.AirdropContent[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3732:111:378"
            },
            "returnParameters": {
              "id": 97249,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3874:0:378"
            },
            "scope": 97521,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 97482,
            "nodeType": "FunctionDefinition",
            "src": "5443:1110:378",
            "nodes": [],
            "body": {
              "id": 97481,
              "nodeType": "Block",
              "src": "5617:936:378",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 97386,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 97384,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 97379,
                      "src": "5631:7:378",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 97385,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5642:1:378",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5631:12:378",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 97394,
                  "nodeType": "IfStatement",
                  "src": "5627:85:378",
                  "trueBody": {
                    "id": 97393,
                    "nodeType": "Block",
                    "src": "5645:67:378",
                    "statements": [
                      {
                        "expression": {
                          "id": 97389,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 97387,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 97382,
                            "src": "5659:7:378",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 97388,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5669:4:378",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "5659:14:378",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 97390,
                        "nodeType": "ExpressionStatement",
                        "src": "5659:14:378"
                      },
                      {
                        "expression": {
                          "id": 97391,
                          "name": "success",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 97382,
                          "src": "5694:7:378",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 97383,
                        "id": 97392,
                        "nodeType": "Return",
                        "src": "5687:14:378"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 97398,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 97395,
                      "name": "_currency",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 97373,
                      "src": "5726:9:378",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 97396,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63578,
                        "src": "5739:19:378",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$63578_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 97397,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "NATIVE_TOKEN",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63346,
                      "src": "5739:32:378",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5726:45:378",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 97479,
                    "nodeType": "Block",
                    "src": "5958:589:378",
                    "statements": [
                      {
                        "assignments": [
                          97411,
                          97413
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 97411,
                            "mutability": "mutable",
                            "name": "success_",
                            "nameLocation": "5978:8:378",
                            "nodeType": "VariableDeclaration",
                            "scope": 97479,
                            "src": "5973:13:378",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 97410,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "5973:4:378",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 97413,
                            "mutability": "mutable",
                            "name": "data_",
                            "nameLocation": "6001:5:378",
                            "nodeType": "VariableDeclaration",
                            "scope": 97479,
                            "src": "5988:18:378",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 97412,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "5988:5:378",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 97426,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "expression": {
                                      "id": 97418,
                                      "name": "IERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 13899,
                                      "src": "6065:6:378",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$13899_$",
                                        "typeString": "type(contract IERC20)"
                                      }
                                    },
                                    "id": 97419,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "transferFrom",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 13882,
                                    "src": "6065:19:378",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                      "typeString": "function IERC20.transferFrom(address,address,uint256) returns (bool)"
                                    }
                                  },
                                  "id": 97420,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "selector",
                                  "nodeType": "MemberAccess",
                                  "src": "6065:28:378",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                {
                                  "id": 97421,
                                  "name": "_from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 97375,
                                  "src": "6095:5:378",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 97422,
                                  "name": "_to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 97377,
                                  "src": "6102:3:378",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 97423,
                                  "name": "_amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 97379,
                                  "src": "6107:7:378",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 97416,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "6042:3:378",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 97417,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodeWithSelector",
                                "nodeType": "MemberAccess",
                                "src": "6042:22:378",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes4) pure returns (bytes memory)"
                                }
                              },
                              "id": 97424,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6042:73:378",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "id": 97414,
                              "name": "_currency",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 97373,
                              "src": "6010:9:378",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 97415,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "call",
                            "nodeType": "MemberAccess",
                            "src": "6010:14:378",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 97425,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6010:119:378",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5972:157:378"
                      },
                      {
                        "expression": {
                          "id": 97429,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 97427,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 97382,
                            "src": "6144:7:378",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 97428,
                            "name": "success_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 97411,
                            "src": "6154:8:378",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "6144:18:378",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 97430,
                        "nodeType": "ExpressionStatement",
                        "src": "6144:18:378"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 97447,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 97432,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "6180:8:378",
                            "subExpression": {
                              "id": 97431,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 97382,
                              "src": "6181:7:378",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 97445,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 97436,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 97433,
                                      "name": "data_",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 97413,
                                      "src": "6193:5:378",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    },
                                    "id": 97434,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "length",
                                    "nodeType": "MemberAccess",
                                    "src": "6193:12:378",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">",
                                  "rightExpression": {
                                    "hexValue": "30",
                                    "id": 97435,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6208:1:378",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "6193:16:378",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "&&",
                                "rightExpression": {
                                  "id": 97444,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "UnaryOperation",
                                  "operator": "!",
                                  "prefix": true,
                                  "src": "6213:26:378",
                                  "subExpression": {
                                    "arguments": [
                                      {
                                        "id": 97439,
                                        "name": "data_",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 97413,
                                        "src": "6225:5:378",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      },
                                      {
                                        "components": [
                                          {
                                            "id": 97441,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "6233:4:378",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_bool_$",
                                              "typeString": "type(bool)"
                                            },
                                            "typeName": {
                                              "id": 97440,
                                              "name": "bool",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "6233:4:378",
                                              "typeDescriptions": {}
                                            }
                                          }
                                        ],
                                        "id": 97442,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "6232:6:378",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_bool_$",
                                          "typeString": "type(bool)"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        },
                                        {
                                          "typeIdentifier": "t_type$_t_bool_$",
                                          "typeString": "type(bool)"
                                        }
                                      ],
                                      "expression": {
                                        "id": 97437,
                                        "name": "abi",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -1,
                                        "src": "6214:3:378",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_abi",
                                          "typeString": "abi"
                                        }
                                      },
                                      "id": 97438,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "decode",
                                      "nodeType": "MemberAccess",
                                      "src": "6214:10:378",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                                        "typeString": "function () pure"
                                      }
                                    },
                                    "id": 97443,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6214:25:378",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "6193:46:378",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "id": 97446,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "6192:48:378",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "6180:60:378",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 97478,
                        "nodeType": "IfStatement",
                        "src": "6176:361:378",
                        "trueBody": {
                          "id": 97477,
                          "nodeType": "Block",
                          "src": "6242:295:378",
                          "statements": [
                            {
                              "expression": {
                                "id": 97450,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 97448,
                                  "name": "success",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 97382,
                                  "src": "6260:7:378",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "66616c7365",
                                  "id": 97449,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6270:5:378",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "false"
                                },
                                "src": "6260:15:378",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 97451,
                              "nodeType": "ExpressionStatement",
                              "src": "6260:15:378"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "id": 97473,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 97460,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "arguments": [
                                          {
                                            "id": 97457,
                                            "name": "_from",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 97375,
                                            "src": "6351:5:378",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "expression": {
                                            "arguments": [
                                              {
                                                "id": 97454,
                                                "name": "_currency",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 97373,
                                                "src": "6330:9:378",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              ],
                                              "id": 97453,
                                              "name": "IERC20",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 13899,
                                              "src": "6323:6:378",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_contract$_IERC20_$13899_$",
                                                "typeString": "type(contract IERC20)"
                                              }
                                            },
                                            "id": 97455,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "6323:17:378",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_IERC20_$13899",
                                              "typeString": "contract IERC20"
                                            }
                                          },
                                          "id": 97456,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "balanceOf",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 13844,
                                          "src": "6323:27:378",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                            "typeString": "function (address) view external returns (uint256)"
                                          }
                                        },
                                        "id": 97458,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "6323:34:378",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": ">=",
                                      "rightExpression": {
                                        "id": 97459,
                                        "name": "_amount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 97379,
                                        "src": "6361:7:378",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "6323:45:378",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "&&",
                                    "rightExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 97472,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "arguments": [
                                          {
                                            "id": 97465,
                                            "name": "_from",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 97375,
                                            "src": "6424:5:378",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "id": 97468,
                                                "name": "this",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -28,
                                                "src": "6439:4:378",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_contract$_AirdropERC20_$97521",
                                                  "typeString": "contract AirdropERC20"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_contract$_AirdropERC20_$97521",
                                                  "typeString": "contract AirdropERC20"
                                                }
                                              ],
                                              "id": 97467,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "nodeType": "ElementaryTypeNameExpression",
                                              "src": "6431:7:378",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_address_$",
                                                "typeString": "type(address)"
                                              },
                                              "typeName": {
                                                "id": 97466,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "6431:7:378",
                                                "typeDescriptions": {}
                                              }
                                            },
                                            "id": 97469,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "6431:13:378",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            },
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "expression": {
                                            "arguments": [
                                              {
                                                "id": 97462,
                                                "name": "_currency",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 97373,
                                                "src": "6403:9:378",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              ],
                                              "id": 97461,
                                              "name": "IERC20",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 13899,
                                              "src": "6396:6:378",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_contract$_IERC20_$13899_$",
                                                "typeString": "type(contract IERC20)"
                                              }
                                            },
                                            "id": 97463,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "6396:17:378",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_IERC20_$13899",
                                              "typeString": "contract IERC20"
                                            }
                                          },
                                          "id": 97464,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "allowance",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 13853,
                                          "src": "6396:27:378",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                                            "typeString": "function (address,address) view external returns (uint256)"
                                          }
                                        },
                                        "id": 97470,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "6396:49:378",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": ">=",
                                      "rightExpression": {
                                        "id": 97471,
                                        "name": "_amount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 97379,
                                        "src": "6449:7:378",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "6396:60:378",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "src": "6323:133:378",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "4e6f742062616c616e6365206f7220616c6c6f77616e6365",
                                    "id": 97474,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6478:26:378",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_938cb21e45b1cdea9582a25de019a56300a849007f54682c1db1a8fbf02c5005",
                                      "typeString": "literal_string \"Not balance or allowance\""
                                    },
                                    "value": "Not balance or allowance"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_938cb21e45b1cdea9582a25de019a56300a849007f54682c1db1a8fbf02c5005",
                                      "typeString": "literal_string \"Not balance or allowance\""
                                    }
                                  ],
                                  "id": 97452,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "6294:7:378",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 97475,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6294:228:378",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 97476,
                              "nodeType": "ExpressionStatement",
                              "src": "6294:228:378"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 97480,
                  "nodeType": "IfStatement",
                  "src": "5722:825:378",
                  "trueBody": {
                    "id": 97409,
                    "nodeType": "Block",
                    "src": "5773:179:378",
                    "statements": [
                      {
                        "expression": {
                          "id": 97407,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 97399,
                                "name": "success",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 97382,
                                "src": "5898:7:378",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              null
                            ],
                            "id": 97400,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "5897:11:378",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$__$",
                              "typeString": "tuple(bool,)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "hexValue": "",
                                "id": 97405,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5938:2:378",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                },
                                "value": ""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                    "typeString": "literal_string \"\""
                                  }
                                ],
                                "expression": {
                                  "id": 97401,
                                  "name": "_to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 97377,
                                  "src": "5911:3:378",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 97402,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "call",
                                "nodeType": "MemberAccess",
                                "src": "5911:8:378",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                }
                              },
                              "id": 97404,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "id": 97403,
                                  "name": "_amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 97379,
                                  "src": "5928:7:378",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "src": "5911:26:378",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 97406,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5911:30:378",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "tuple(bool,bytes memory)"
                            }
                          },
                          "src": "5897:44:378",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 97408,
                        "nodeType": "ExpressionStatement",
                        "src": "5897:44:378"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 97371,
              "nodeType": "StructuredDocumentation",
              "src": "5352:86:378",
              "text": "@dev Transfers ERC20 tokens and returns a boolean i.e. the status of the transfer."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transferCurrencyWithReturnVal",
            "nameLocation": "5452:30:378",
            "parameters": {
              "id": 97380,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 97373,
                  "mutability": "mutable",
                  "name": "_currency",
                  "nameLocation": "5500:9:378",
                  "nodeType": "VariableDeclaration",
                  "scope": 97482,
                  "src": "5492:17:378",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 97372,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5492:7:378",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 97375,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "5527:5:378",
                  "nodeType": "VariableDeclaration",
                  "scope": 97482,
                  "src": "5519:13:378",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 97374,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5519:7:378",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 97377,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "5550:3:378",
                  "nodeType": "VariableDeclaration",
                  "scope": 97482,
                  "src": "5542:11:378",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 97376,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5542:7:378",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 97379,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "5571:7:378",
                  "nodeType": "VariableDeclaration",
                  "scope": 97482,
                  "src": "5563:15:378",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 97378,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5563:7:378",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5482:102:378"
            },
            "returnParameters": {
              "id": 97383,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 97382,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "5608:7:378",
                  "nodeType": "VariableDeclaration",
                  "scope": 97482,
                  "src": "5603:12:378",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 97381,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5603:4:378",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5602:14:378"
            },
            "scope": 97521,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 97496,
            "nodeType": "FunctionDefinition",
            "src": "6648:133:378",
            "nodes": [],
            "body": {
              "id": 97495,
              "nodeType": "Block",
              "src": "6716:65:378",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 97490,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21176,
                        "src": "6741:18:378",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 97491,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            97508
                          ],
                          "referencedDeclaration": 97508,
                          "src": "6761:10:378",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 97492,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6761:12:378",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 97489,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21207,
                      "src": "6733:7:378",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 97493,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6733:41:378",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 97488,
                  "id": 97494,
                  "nodeType": "Return",
                  "src": "6726:48:378"
                }
              ]
            },
            "baseFunctions": [
              17525
            ],
            "documentation": {
              "id": 97483,
              "nodeType": "StructuredDocumentation",
              "src": "6559:84:378",
              "text": "@dev Checks whether contract metadata can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetContractURI",
            "nameLocation": "6657:18:378",
            "overrides": {
              "id": 97485,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6692:8:378"
            },
            "parameters": {
              "id": 97484,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6675:2:378"
            },
            "returnParameters": {
              "id": 97488,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 97487,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 97496,
                  "src": "6710:4:378",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 97486,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6710:4:378",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6709:6:378"
            },
            "scope": 97521,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 97508,
            "nodeType": "FunctionDefinition",
            "src": "6812:140:378",
            "nodes": [],
            "body": {
              "id": 97507,
              "nodeType": "Block",
              "src": "6890:62:378",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 97503,
                        "name": "ERC2771ContextUpgradeable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45607,
                        "src": "6907:25:378",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC2771ContextUpgradeable_$45607_$",
                          "typeString": "type(contract ERC2771ContextUpgradeable)"
                        }
                      },
                      "id": 97504,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_msgSender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45575,
                      "src": "6907:36:378",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 97505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6907:38:378",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 97502,
                  "id": 97506,
                  "nodeType": "Return",
                  "src": "6900:45:378"
                }
              ]
            },
            "baseFunctions": [
              45575
            ],
            "documentation": {
              "id": 97497,
              "nodeType": "StructuredDocumentation",
              "src": "6787:20:378",
              "text": "@dev See ERC2771"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgSender",
            "nameLocation": "6821:10:378",
            "overrides": {
              "id": 97499,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6856:8:378"
            },
            "parameters": {
              "id": 97498,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6831:2:378"
            },
            "returnParameters": {
              "id": 97502,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 97501,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "6882:6:378",
                  "nodeType": "VariableDeclaration",
                  "scope": 97508,
                  "src": "6874:14:378",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 97500,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6874:7:378",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6873:16:378"
            },
            "scope": 97521,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 97520,
            "nodeType": "FunctionDefinition",
            "src": "6983:136:378",
            "nodes": [],
            "body": {
              "id": 97519,
              "nodeType": "Block",
              "src": "7059:60:378",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 97515,
                        "name": "ERC2771ContextUpgradeable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45607,
                        "src": "7076:25:378",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC2771ContextUpgradeable_$45607_$",
                          "typeString": "type(contract ERC2771ContextUpgradeable)"
                        }
                      },
                      "id": 97516,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_msgData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45602,
                      "src": "7076:34:378",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_calldata_ptr_$",
                        "typeString": "function () view returns (bytes calldata)"
                      }
                    },
                    "id": 97517,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7076:36:378",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_calldata_ptr",
                      "typeString": "bytes calldata"
                    }
                  },
                  "functionReturnParameters": 97514,
                  "id": 97518,
                  "nodeType": "Return",
                  "src": "7069:43:378"
                }
              ]
            },
            "baseFunctions": [
              45602
            ],
            "documentation": {
              "id": 97509,
              "nodeType": "StructuredDocumentation",
              "src": "6958:20:378",
              "text": "@dev See ERC2771"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgData",
            "nameLocation": "6992:8:378",
            "overrides": {
              "id": 97511,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7025:8:378"
            },
            "parameters": {
              "id": 97510,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7000:2:378"
            },
            "returnParameters": {
              "id": 97514,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 97513,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 97520,
                  "src": "7043:14:378",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 97512,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7043:5:378",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7042:16:378"
            },
            "scope": 97521,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 97157,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 150199,
              "src": "1417:13:378"
            },
            "id": 97158,
            "nodeType": "InheritanceSpecifier",
            "src": "1417:13:378"
          },
          {
            "baseName": {
              "id": 97159,
              "name": "ContractMetadata",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 17526,
              "src": "1436:16:378"
            },
            "id": 97160,
            "nodeType": "InheritanceSpecifier",
            "src": "1436:16:378"
          },
          {
            "baseName": {
              "id": 97161,
              "name": "PermissionsEnumerable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 21799,
              "src": "1458:21:378"
            },
            "id": 97162,
            "nodeType": "InheritanceSpecifier",
            "src": "1458:21:378"
          },
          {
            "baseName": {
              "id": 97163,
              "name": "ReentrancyGuardUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 150385,
              "src": "1485:26:378"
            },
            "id": 97164,
            "nodeType": "InheritanceSpecifier",
            "src": "1485:26:378"
          },
          {
            "baseName": {
              "id": 97165,
              "name": "ERC2771ContextUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 45607,
              "src": "1517:25:378"
            },
            "id": 97166,
            "nodeType": "InheritanceSpecifier",
            "src": "1517:25:378"
          },
          {
            "baseName": {
              "id": 97167,
              "name": "MulticallUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 156227,
              "src": "1548:20:378"
            },
            "id": 97168,
            "nodeType": "InheritanceSpecifier",
            "src": "1548:20:378"
          },
          {
            "baseName": {
              "id": 97169,
              "name": "IAirdropERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 75601,
              "src": "1574:13:378"
            },
            "id": 97170,
            "nodeType": "InheritanceSpecifier",
            "src": "1574:13:378"
          }
        ],
        "canonicalName": "AirdropERC20",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          97521,
          75601,
          156227,
          45607,
          156044,
          150385,
          21799,
          21500,
          33281,
          33256,
          17526,
          150199,
          32437
        ],
        "name": "AirdropERC20",
        "nameLocation": "1397:12:378",
        "scope": 97522,
        "usedErrors": []
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 378
}