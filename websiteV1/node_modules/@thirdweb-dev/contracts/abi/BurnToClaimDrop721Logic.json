{
  "abi": [
    {
      "inputs": [],
      "name": "ApprovalCallerNotOwnerNorApproved",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ApprovalQueryForNonexistentToken",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ApprovalToCurrentOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ApproveToCaller",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BalanceQueryForZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MintToZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MintZeroQuantity",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OwnerQueryForNonexistentToken",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferCallerNotOwnerNorApproved",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferFromIncorrectOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferToNonERC721ReceiverImplementer",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferToZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "URIQueryForNonexistentToken",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_fromTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_toTokenId",
          "type": "uint256"
        }
      ],
      "name": "BatchMetadataUpdate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "startTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxClaimableSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "supplyClaimed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "merkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "metadata",
              "type": "string"
            }
          ],
          "indexed": false,
          "internalType": "struct IClaimCondition.ClaimCondition[]",
          "name": "claimConditions",
          "type": "tuple[]"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "resetEligibility",
          "type": "bool"
        }
      ],
      "name": "ClaimConditionsUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "prevURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "newURI",
          "type": "string"
        }
      ],
      "name": "ContractURIUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newRoyaltyRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newRoyaltyBps",
          "type": "uint256"
        }
      ],
      "name": "DefaultRoyalty",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "platformFeeRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "flatFee",
          "type": "uint256"
        }
      ],
      "name": "FlatPlatformFeeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "maxTotalMinted",
          "type": "uint256"
        }
      ],
      "name": "MaxTotalMintedUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "MetadataFrozen",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "prevOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnerUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "platformFeeRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "platformFeeBps",
          "type": "uint256"
        }
      ],
      "name": "PlatformFeeInfoUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "enum IPlatformFee.PlatformFeeType",
          "name": "feeType",
          "type": "uint8"
        }
      ],
      "name": "PlatformFeeTypeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "PrimarySaleRecipientUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "royaltyRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "royaltyBps",
          "type": "uint256"
        }
      ],
      "name": "RoyaltyForToken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "revealedURI",
          "type": "string"
        }
      ],
      "name": "TokenURIRevealed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "originContract",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "burnTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "quantity",
          "type": "uint256"
        }
      ],
      "name": "TokensBurnedAndClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "claimConditionIndex",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "claimer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "startTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "quantityClaimed",
          "type": "uint256"
        }
      ],
      "name": "TokensClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "startTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "endTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "baseURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "encryptedBaseURI",
          "type": "bytes"
        }
      ],
      "name": "TokensLazyMinted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_burnTokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_quantity",
          "type": "uint256"
        }
      ],
      "name": "burnAndClaim",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_quantity",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_currency",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_pricePerToken",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            }
          ],
          "internalType": "struct IDrop.AllowlistProof",
          "name": "_allowlistProof",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "claim",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimCondition",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "key",
          "type": "bytes"
        }
      ],
      "name": "encryptDecrypt",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "result",
          "type": "bytes"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "encryptedData",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getActiveClaimConditionId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBaseURICount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getBatchIdAtIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBurnToClaimInfo",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "originContractAddress",
              "type": "address"
            },
            {
              "internalType": "enum IBurnToClaim.TokenType",
              "name": "tokenType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "mintPriceForNewToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            }
          ],
          "internalType": "struct IBurnToClaim.BurnToClaimInfo",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_conditionId",
          "type": "uint256"
        }
      ],
      "name": "getClaimConditionById",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "startTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxClaimableSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "supplyClaimed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "merkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "metadata",
              "type": "string"
            }
          ],
          "internalType": "struct IClaimCondition.ClaimCondition",
          "name": "condition",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDefaultRoyaltyInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPlatformFeeInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_batchId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_key",
          "type": "bytes"
        }
      ],
      "name": "getRevealURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "revealedURI",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getRoyaltyInfoForToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_conditionId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_claimer",
          "type": "address"
        }
      ],
      "name": "getSupplyClaimedByWallet",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "supplyClaimedByWallet",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_batchId",
          "type": "uint256"
        }
      ],
      "name": "isEncryptedBatch",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "forwarder",
          "type": "address"
        }
      ],
      "name": "isTrustedForwarder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_baseURIForTokens",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "lazyMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxTotalMinted",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextTokenIdToClaim",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextTokenIdToMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "primarySaleRecipient",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_key",
          "type": "bytes"
        }
      ],
      "name": "reveal",
      "outputs": [
        {
          "internalType": "string",
          "name": "revealedURI",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "salePrice",
          "type": "uint256"
        }
      ],
      "name": "royaltyInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "royaltyAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "originContractAddress",
              "type": "address"
            },
            {
              "internalType": "enum IBurnToClaim.TokenType",
              "name": "tokenType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "mintPriceForNewToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            }
          ],
          "internalType": "struct IBurnToClaim.BurnToClaimInfo",
          "name": "_burnToClaimInfo",
          "type": "tuple"
        }
      ],
      "name": "setBurnToClaimInfo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "startTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxClaimableSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "supplyClaimed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "merkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "metadata",
              "type": "string"
            }
          ],
          "internalType": "struct IClaimCondition.ClaimCondition[]",
          "name": "_conditions",
          "type": "tuple[]"
        },
        {
          "internalType": "bool",
          "name": "_resetClaimEligibility",
          "type": "bool"
        }
      ],
      "name": "setClaimConditions",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "setContractURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_royaltyRecipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_royaltyBps",
          "type": "uint256"
        }
      ],
      "name": "setDefaultRoyaltyInfo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_maxTotalMinted",
          "type": "uint256"
        }
      ],
      "name": "setMaxTotalMinted",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "setOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_platformFeeRecipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_platformFeeBps",
          "type": "uint256"
        }
      ],
      "name": "setPlatformFeeInfo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_saleRecipient",
          "type": "address"
        }
      ],
      "name": "setPrimarySaleRecipient",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_bps",
          "type": "uint256"
        }
      ],
      "name": "setRoyaltyInfoForToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalMinted",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenOwner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_quantity",
          "type": "uint256"
        }
      ],
      "name": "verifyBurnToClaim",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_conditionId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_claimer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_quantity",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_currency",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_pricePerToken",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            }
          ],
          "internalType": "struct IDrop.AllowlistProof",
          "name": "_allowlistProof",
          "type": "tuple"
        }
      ],
      "name": "verifyClaim",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isOverride",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "2088:12898:383:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040526004361061026a5760003560e01c806374bc7db71161014b57806374bc7db7146105f2578063778a4c0e1461061257806384bb1e42146106345780638da5cb5b14610647578063938e3d7b1461065c57806395d89b411461067c5780639bcf7a15146106915780639fc4d68f146106b1578063a05112fc146106d1578063a22cb465146106f1578063a2309ff814610711578063acd083f814610711578063ad1eefc514610726578063b24f2d3914610746578063b88d4fde1461075b578063bb4088511461077b578063c68907de1461079b578063c87b56dd146107b0578063cbfaa46b146107d0578063ce805642146107e5578063d37c353b14610805578063d45573f614610825578063d637ed591461083a578063e715032214610864578063e8a3d48514610884578063e985e9c514610899578063fd3078d8146108b957600080fd5b806301ffc9a71461026f5780630689b284146102a457806306fdde03146102c6578063079fe40e146102e8578063081812fc14610315578063095ea7b31461033557806313af4035146103555780631567313b1461037557806318160ddd146103885780631e7ac488146103ab57806323a2902b146103cb57806323b872dd146103eb5780632419f51b1461040b5780632a55205a1461042b5780633b1475a71461045957806342842e0e1461046e57806342966c681461048e578063492e224b146104ae5780634cc157df146104ce578063572b6c0514610510578063600dd5ea146105305780636352211e1461055057806363b45e2d146105705780636f4f2837146105855780636f8934f4146105a557806370a08231146105d2575b600080fd5b34801561027b57600080fd5b5061028f61028a366004614641565b6108d9565b60405190151581526020015b60405180910390f35b3480156102b057600080fd5b506102c46102bf36600461465e565b610905565b005b3480156102d257600080fd5b506102db610a26565b60405161029b91906146ce565b3480156102f457600080fd5b506102fd610ac7565b6040516001600160a01b03909116815260200161029b565b34801561032157600080fd5b506102fd6103303660046146e1565b610ae0565b34801561034157600080fd5b506102c461035036600461470f565b610b30565b34801561036157600080fd5b506102c461037036600461473b565b610bc4565b6102c4610383366004614758565b610bf4565b34801561039457600080fd5b5061039d610cad565b60405190815260200161029b565b3480156103b757600080fd5b506102c46103c636600461470f565b610cc6565b3480156103d757600080fd5b5061028f6103e636600461478c565b610cf8565b3480156103f757600080fd5b506102c4610406366004614809565b6110f7565b34801561041757600080fd5b5061039d6104263660046146e1565b611102565b34801561043757600080fd5b5061044b610446366004614758565b611176565b60405161029b92919061484a565b34801561046557600080fd5b5061039d6111b3565b34801561047a57600080fd5b506102c4610489366004614809565b6111c2565b34801561049a57600080fd5b506102c46104a93660046146e1565b6111dd565b3480156104ba57600080fd5b5061028f6104c93660046146e1565b6111e8565b3480156104da57600080fd5b506104ee6104e93660046146e1565b611217565b604080516001600160a01b03909316835261ffff90911660208301520161029b565b34801561051c57600080fd5b5061028f61052b36600461473b565b61129a565b34801561053c57600080fd5b506102c461054b36600461470f565b6112d7565b34801561055c57600080fd5b506102fd61056b3660046146e1565b611305565b34801561057c57600080fd5b5061039d611317565b34801561059157600080fd5b506102c46105a036600461473b565b611327565b3480156105b157600080fd5b506105c56105c03660046146e1565b611354565b60405161029b9190614863565b3480156105de57600080fd5b5061039d6105ed36600461473b565b6114bb565b3480156105fe57600080fd5b506102c461060d3660046148de565b611519565b34801561061e57600080fd5b506106276118af565b60405161029b9190614979565b6102c4610642366004614aaa565b61195f565b34801561065357600080fd5b506102fd611a9e565b34801561066857600080fd5b506102c4610677366004614b37565b611aa8565b34801561068857600080fd5b506102db611ad5565b34801561069d57600080fd5b506102c46106ac366004614b7f565b611af2565b3480156106bd57600080fd5b506102db6106cc366004614bee565b611b21565b3480156106dd57600080fd5b506102db6106ec3660046146e1565b611caa565b3480156106fd57600080fd5b506102c461070c366004614c39565b611d53565b34801561071d57600080fd5b5061039d611e35565b34801561073257600080fd5b5061039d610741366004614c72565b611e47565b34801561075257600080fd5b506104ee611e7a565b34801561076757600080fd5b506102c4610776366004614c97565b611eac565b34801561078757600080fd5b506102c4610796366004614d02565b611efd565b3480156107a757600080fd5b5061039d61212f565b3480156107bc57600080fd5b506102db6107cb3660046146e1565b6121ee565b3480156107dc57600080fd5b5061039d61225d565b3480156107f157600080fd5b506102db610800366004614bee565b612268565b34801561081157600080fd5b5061039d610820366004614d37565b612352565b34801561083157600080fd5b506104ee6123f2565b34801561084657600080fd5b5061084f61240f565b6040805192835260208301919091520161029b565b34801561087057600080fd5b506102db61087f366004614db0565b612430565b34801561089057600080fd5b506102db6124a5565b3480156108a557600080fd5b5061028f6108b4366004614e0b565b61253d565b3480156108c557600080fd5b506102c46108d43660046146e1565b61257c565b60006108e48261260a565b806108ff575063152a902d60e11b6001600160e01b03198316145b92915050565b61090d61265a565b6109505760405162461bcd60e51b815260206004820152600f60248201526e2737ba1030baba3437b934bd32b21760891b60448201526064015b60405180910390fd5b600061095f602083018361473b565b6001600160a01b031614156109b15760405162461bcd60e51b815260206004820152601860248201527727b934b3b4b71031b7b73a3930b1ba103737ba1039b2ba1760411b6044820152606401610947565b60006109c360a083016080840161473b565b6001600160a01b03161415610a0e5760405162461bcd60e51b815260206004820152601160248201527021bab93932b731bc903737ba1039b2ba1760791b6044820152606401610947565b80610a17612668565b610a218282614e59565b505050565b60606000610a3261268c565b9050806002018054610a4390614ec8565b80601f0160208091040260200160405190810160405280929190818152602001828054610a6f90614ec8565b8015610abc5780601f10610a9157610100808354040283529160200191610abc565b820191906000526020600020905b815481529060010190602001808311610a9f57829003601f168201915b505050505091505090565b6000610ad16126b0565b546001600160a01b0316919050565b600080610aeb61268c565b9050610af6836126ba565b610b13576040516333d1c03960e21b815260040160405180910390fd5b60009283526006016020525060409020546001600160a01b031690565b6000610b3b82611305565b9050806001600160a01b0316836001600160a01b03161415610b705760405163250fdee360e21b815260040160405180910390fd5b806001600160a01b0316610b826126f6565b6001600160a01b031614610bb957610b9c816108b46126f6565b610bb9576040516367d9dca160e11b815260040160405180910390fd5b610a21838383612700565b610bcc61265a565b610be85760405162461bcd60e51b815260040161094790614efd565b610bf18161276f565b50565b610bfd816127dc565b6000610c0761289d565b9050610c14818484611efd565b610c1f8184846128a7565b610c4b600083610c2d612668565b600301546001600160a01b0316610c42612668565b600201546129b9565b610c558183612b03565b82816001600160a01b0316610c68612668565b546040518581526001600160a01b03909116907f4fb7afbbfcb1660363d7abbda0ccf1b007126830d7fd0ad2126e3770afd6f4e09060200160405180910390a4505050565b600080610cb861268c565b600181015490540392915050565b610cce61265a565b610cea5760405162461bcd60e51b815260040161094790614efd565b610cf48282612b1d565b5050565b600080610d03612bec565b6000898152600291820160209081526040918290208251610100810184528154815260018201549281019290925292830154918101919091526003820154606082015260048201546080820152600582015460a082015260068201546001600160a01b031660c082015260078201805491929160e084019190610d8590614ec8565b80601f0160208091040260200160405190810160405280929190818152602001828054610db190614ec8565b8015610dfe5780601f10610dd357610100808354040283529160200191610dfe565b820191906000526020600020905b815481529060010190602001808311610de157829003601f168201915b50505091909252505050606081015160a082015160c08301516080840151939450919290919015610ede57610eda610e368780614f25565b80806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250505060808088015191508d9060208b01359060408c013590610e8b908d0160608e0161473b565b6040516001600160601b0319606095861b811660208301526034820194909452605481019290925290921b16607482015260880160405160208183030381529060405280519060200120612bf6565b5094505b8415610f63576020860135610ef35782610ef9565b85602001355b925060001986604001351415610f0f5781610f15565b85604001355b9150600019866040013514158015610f4657506000610f3a608088016060890161473b565b6001600160a01b031614155b610f505780610f60565b610f60608087016060880161473b565b90505b6000610f6d612bec565b60000160030160008d815260200190815260200160002060008c6001600160a01b03166001600160a01b03168152602001908152602001600020549050816001600160a01b0316896001600160a01b0316141580610fcb5750828814155b1561100b5760405162461bcd60e51b815260206004820152601060248201526f2150726963654f7243757272656e637960801b6044820152606401610947565b89158061102057508361101e828c614f84565b115b156110565760405162461bcd60e51b8152600401610947906020808252600490820152632151747960e01b604082015260600190565b84602001518a866040015161106b9190614f84565b11156110a65760405162461bcd60e51b815260206004820152600a602482015269214d6178537570706c7960b01b6044820152606401610947565b84514210156110e85760405162461bcd60e51b815260206004820152600e60248201526d18d85b9d0818db185a5b481e595d60921b6044820152606401610947565b50505050509695505050505050565b610a21838383612cc4565b600061110c611317565b821061114a5760405162461bcd60e51b815260206004820152600d60248201526c092dcecc2d8d2c840d2dcc8caf609b1b6044820152606401610947565b611152612ede565b80548390811061116457611164614f9c565b90600052602060002001549050919050565b60008060008061118586611217565b90945084925061ffff16905061271061119e8287614fb2565b6111a89190614fe7565b925050509250929050565b60006111bd612f02565b905090565b610a2183838360405180602001604052806000815250611eac565b610bf1816001612f0c565b6000806111f36130fe565b600084815260209190915260409020805461120d90614ec8565b9050119050919050565b6000806000611224613122565b600085815260019182016020908152604091829020825180840190935280546001600160a01b0316808452930154908201529150156112695780516020820151611290565b611271613122565b546001600160a01b0316611283613122565b54600160a01b900461ffff165b9250925050915091565b6001600160a01b031660009081527f82aadcdf5bea62fd30615b6c0754b644e71b6c1e8c55b71bb927ad005b504f00602052604090205460ff1690565b6112df61265a565b6112fb5760405162461bcd60e51b815260040161094790614efd565b610cf48282613146565b6000611310826131f2565b5192915050565b6000611321612ede565b54919050565b61132f61265a565b61134b5760405162461bcd60e51b815260040161094790614efd565b610bf18161331b565b6113a860405180610100016040528060008152602001600081526020016000815260200160008152602001600080191681526020016000815260200160006001600160a01b03168152602001606081525090565b6113b0612bec565b6000838152600291820160209081526040918290208251610100810184528154815260018201549281019290925292830154918101919091526003820154606082015260048201546080820152600582015460a082015260068201546001600160a01b031660c082015260078201805491929160e08401919061143290614ec8565b80601f016020809104026020016040519081016040528092919081815260200182805461145e90614ec8565b80156114ab5780601f10611480576101008083540402835291602001916114ab565b820191906000526020600020905b81548152906001019060200180831161148e57829003601f168201915b5050505050815250509050919050565b6000806114c661268c565b90506001600160a01b0383166114ef576040516323d3ad8160e21b815260040160405180910390fd5b6001600160a01b03909216600090815260059092016020525060409020546001600160401b031690565b61152161265a565b61153d5760405162461bcd60e51b815260040161094790614efd565b6000611547612bec565b5490506000611554612bec565b60010154905081831561156e5761156b8284614f84565b90505b84611577612bec565b6001015580611584612bec565b556000805b8681101561174a578015806115c157508787828181106115ab576115ab614f9c565b90506020028101906115bd9190614ffb565b3582105b6115f25760405162461bcd60e51b815260206004820152600260248201526114d560f21b6044820152606401610947565b60006115fc612bec565b600201600061160b8487614f84565b815260200190815260200160002060020154905088888381811061163157611631614f9c565b90506020028101906116439190614ffb565b6020013581111561168b5760405162461bcd60e51b81526020600482015260126024820152711b585e081cdd5c1c1b1e4818db185a5b595960721b6044820152606401610947565b88888381811061169d5761169d614f9c565b90506020028101906116af9190614ffb565b6116b7612bec565b60020160006116c68588614f84565b815260200190815260200160002081816116e09190615120565b905050806116ec612bec565b60020160006116fb8588614f84565b815260208101919091526040016000206002015588888381811061172157611721614f9c565b90506020028101906117339190614ffb565b359250819050611742816151c4565b915050611589565b5084156117d357835b828110156117cd57611763612bec565b6000828152600291820160205260408120818155600181018290559182018190556003820181905560048201819055600582018190556006820180546001600160a01b03191690556117b86007830182614558565b505080806117c5906151c4565b915050611753565b5061186b565b8583111561186b57855b83811015611869576117ed612bec565b60020160006117fc8386614f84565b81526020810191909152604001600090812081815560018101829055600281018290556003810182905560048101829055600581018290556006810180546001600160a01b0319169055906118546007830182614558565b50508080611861906151c4565b9150506117dd565b505b7fbf4016fceeaaa4ac5cf4be865b559ff85825ab4ca7aa7b661d16e2f544c0309887878760405161189e9392919061524d565b60405180910390a150505050505050565b6040805160a0810182526000808252602082018190529181018290526060810182905260808101919091526118e2612668565b6040805160a0810190915281546001600160a01b03811682529091906020830190600160a01b900460ff16600181111561191e5761191e614963565b600181111561192f5761192f614963565b815260018201546020820152600282015460408201526003909101546001600160a01b0316606090910152919050565b61196d868686868686613394565b600061197761212f565b905061198e8161198561289d565b88888888610cf8565b5085611998612bec565b600083815260029182016020526040812090910180549091906119bc908490614f84565b909155508690506119cb612bec565b6000838152600390910160205260408120906119e561289d565b6001600160a01b03166001600160a01b031681526020019081526020016000206000828254611a149190614f84565b90915550611a27905060008787876129b9565b6000611a33888861339d565b9050876001600160a01b0316611a4761289d565b6001600160a01b0316837ffa76a4010d9533e3e964f2930a65fb6042a12fa6ff5b08281837a10b0be7321e848b604051611a8b929190918252602082015260400190565b60405180910390a45b5050505050505050565b6000610ad16133bf565b611ab061265a565b611acc5760405162461bcd60e51b815260040161094790614efd565b610bf1816133c9565b60606000611ae161268c565b9050806003018054610a4390614ec8565b611afa61265a565b611b165760405162461bcd60e51b815260040161094790614efd565b610a218383836134a8565b60606000611b2d6130fe565b6000868152602091909152604090208054611b4790614ec8565b80601f0160208091040260200160405190810160405280929190818152602001828054611b7390614ec8565b8015611bc05780601f10611b9557610100808354040283529160200191611bc0565b820191906000526020600020905b815481529060010190602001808311611ba357829003601f168201915b50505050509050805160001415611c0d5760405162461bcd60e51b8152602060048201526011602482015270139bdd1a1a5b99c81d1bc81c995d99585b607a1b6044820152606401610947565b60008082806020019051810190611c249190615335565b91509150611c33828787612430565b93508084878746604051602001611c4d94939291906153b5565b6040516020818303038152906040528051906020012014611ca05760405162461bcd60e51b815260206004820152600d60248201526c496e636f7272656374206b657960981b6044820152606401610947565b5050509392505050565b6060611cb46130fe565b6000838152602091909152604090208054611cce90614ec8565b80601f0160208091040260200160405190810160405280929190818152602001828054611cfa90614ec8565b8015611d475780601f10611d1c57610100808354040283529160200191611d47565b820191906000526020600020905b815481529060010190602001808311611d2a57829003601f168201915b50505050509050919050565b6000611d5d61268c565b9050611d676126f6565b6001600160a01b0316836001600160a01b03161415611d995760405163b06307db60e01b815260040160405180910390fd5b81816007016000611da86126f6565b6001600160a01b03908116825260208083019390935260409182016000908120918816808252919093529120805460ff191692151592909217909155611dec6126f6565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3184604051611e28911515815260200190565b60405180910390a3505050565b600080611e4061268c565b5492915050565b6000611e51612bec565b6000938452600301602090815260408085206001600160a01b0390941685529290525090205490565b600080611e85613122565b546001600160a01b0316611e97613122565b549093600160a01b90910461ffff1692509050565b611eb7848484612cc4565b611ec9836001600160a01b031661355d565b15611ef757611eda8484848461356c565b611ef7576040516368d2bf6b60e11b815260040160405180910390fd5b50505050565b6000611f076118af565b9050600081602001516001811115611f2157611f21614963565b141561201a5781600114611f685760405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a5908185b5bdd5b9d60921b6044820152606401610947565b80516040516331a9108f60e11b8152600481018590526001600160a01b03868116921690636352211e90602401602060405180830381865afa158015611fb2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fd691906153de565b6001600160a01b0316146120155760405162461bcd60e51b815260206004820152600660248201526510a7bbb732b960d11b6044820152606401610947565b611ef7565b60018160200151600181111561203257612032614963565b1415611ef757604081015183811461207f5760405162461bcd60e51b815260206004820152601060248201526f125b9d985b1a59081d1bdad95b88125960821b6044820152606401610947565b8151604051627eeac760e11b815284916001600160a01b03169062fdd58e906120ae908990899060040161484a565b602060405180830381865afa1580156120cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120ef91906153fb565b10156121285760405162461bcd60e51b81526020600482015260086024820152672142616c616e636560c01b6044820152606401610947565b5050505050565b60008061213a612bec565b60010154612146612bec565b546121519190614f84565b90505b61215c612bec565b548111156121b75761216c612bec565b600201600061217c600184615414565b81526020019081526020016000206000015442106121a55761219f600182615414565b91505090565b806121af8161542b565b915050612154565b5060405162461bcd60e51b815260206004820152600b60248201526a10a1a7a72224aa24a7a71760a91b6044820152606401610947565b606060006121fb8361365b565b509050600061220984613762565b9050612214826111e8565b15612242578060405160200161222a9190615442565b60405160208183030381529060405292505050919050565b8061224c856138ce565b60405160200161222a929190615467565b600080611e406139cb565b606061229b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a66122966126f6565b6139ef565b6122d55760405162461bcd60e51b815260206004820152600b60248201526a3737ba1036b4b73a32b91760a91b6044820152606401610947565b60006122e085611102565b90506122ed818585611b21565b91506123088160405180602001604052806000815250613a39565b6123128183613a62565b847f6df1d8db2a036436ffe0b2d1833f2c5f1e624818dfce2578c0faa4b83ef9998d8360405161234291906146ce565b60405180910390a2509392505050565b60008061235d612f02565b905082156123da5760008061237485870187615496565b91509150815160001415801561238957508015155b156123d7576123d761239b8a85614f84565b87878080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250613a3992505050565b50505b6123e78787878787613b2b565b979650505050505050565b6000806123fd613c44565b546001600160a01b0316611e97613c44565b60008061241a612bec565b54612423612bec565b6001015490939092509050565b8251604080518083016020019091528181529060005b8181101561249c576000858583604051602001612465939291906154da565b60408051601f19818403018152919052805160209182012088840182015118858401820152612495915082614f84565b9050612446565b50509392505050565b60606124af613c68565b80546124ba90614ec8565b80601f01602080910402602001604051908101604052809291908181526020018280546124e690614ec8565b80156125335780601f1061250857610100808354040283529160200191612533565b820191906000526020600020905b81548152906001019060200180831161251657829003601f168201915b5050505050905090565b60008061254861268c565b6001600160a01b03948516600090815260079190910160209081526040808320959096168252939093525050205460ff1690565b61258960006122966126f6565b6125c25760405162461bcd60e51b815260206004820152600a6024820152693737ba1030b236b4b71760b11b6044820152606401610947565b60006125cc6139cb565b8281556040518381529091507f06d90e4f43d115872c5798fb47545dad788bdee957bfb9fc441499cc6d2adbe5906020015b60405180910390a15050565b60006001600160e01b031982166380ac58cd60e01b148061263b57506001600160e01b03198216635b5e139f60e01b145b806108ff57506301ffc9a760e01b6001600160e01b03198316146108ff565b60006111bd816122966126f6565b7f6f0d20bed2d5528732497d5a17ac45087a6175b2a140eebe2a39ab447d7ad40090565b7fe2efff925b8936e8a3471e86ad87942375e24de600ddfb2b841647ce1379ed0090565b60006111bd613c8c565b6000806126c561268c565b90508054831080156126ef57506000838152600482016020526040902054600160e01b900460ff16155b9392505050565b60006111bd613cee565b600061270a61268c565b600084815260068201602052604080822080546001600160a01b0319166001600160a01b03898116918217909255915193945086939192908616917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259190a450505050565b60006127796133bf565b546001600160a01b031690508161278e6133bf565b80546001600160a01b0319166001600160a01b03928316179055604051838216918316907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b60006127e661225d565b905060006127f2611e35565b90506127fc612f02565b6128068483614f84565b111561283e5760405162461bcd60e51b815260206004820152600760248201526621546f6b656e7360c81b6044820152606401610947565b8115806128545750816128518483614f84565b11155b610a215760405162461bcd60e51b815260206004820152601a60248201527932bc31b2b2b21036b0bc103a37ba30b61036b4b73a1031b0b81760311b6044820152606401610947565b60006111bd6126f6565b60006128b16118af565b90506000816020015160018111156128cb576128cb614963565b1415612933578051604051630852cd8d60e31b8152600481018590526001600160a01b03909116906342966c6890602401600060405180830381600087803b15801561291657600080fd5b505af115801561292a573d6000803e3d6000fd5b50505050611ef7565b60018160200151600181111561294b5761294b614963565b1415611ef7578051604051637a94c56560e11b81526001600160a01b03868116600483015260248201869052604482018590529091169063f5298aca90606401600060405180830381600087803b1580156129a557600080fd5b505af1158015611a94573d6000803e3d6000fd5b806129f55734156120155760405162461bcd60e51b81526020600482015260066024820152652156616c756560d01b6044820152606401610947565b600080612a006123f2565b909250905060006001600160a01b03871615612a1c5786612a24565b612a24610ac7565b90506000612a328588614fb2565b90506000612710612a4761ffff861684614fb2565b612a519190614fe7565b905060006001600160a01b03881673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1415612a835750348214612a87565b5034155b80612ac85760405162461bcd60e51b8152602060048201526011602482015270496e76616c6964206d73672076616c756560781b6044820152606401610947565b612adb88612ad46126f6565b8885613d10565b612af788612ae76126f6565b86612af28688615414565b613d10565b50505050505050505050565b610cf4828260405180602001604052806000815250613d55565b612710811115612b3f5760405162461bcd60e51b8152600401610947906154ec565b6001600160a01b038216612b655760405162461bcd60e51b815260040161094790615515565b80612b6e613c44565b805461ffff92909216600160a01b0261ffff60a01b1990921691909117905581612b96613c44565b80546001600160a01b0319166001600160a01b03928316179055604051828152908316907fe2497bd806ec41a6e0dd992c29a72efc0ef8fec9092d1978fd4a1e00b2f18304906020015b60405180910390a25050565b60006111bd613f02565b6000808281805b8751811015612cb857612c11600283614fb2565b91506000888281518110612c2757612c27614f9c565b60200260200101519050808411612c69576040805160208101869052908101829052606001604051602081830303815290604052805190602001209350612ca5565b6040805160208101839052908101859052606001604051602081830303815290604052805190602001209350600183612ca29190614f84565b92505b5080612cb0816151c4565b915050612bfd565b50941495939450505050565b6000612cce61268c565b90506000612cdb836131f2565b9050846001600160a01b031681600001516001600160a01b031614612d125760405162a1148160e81b815260040160405180910390fd5b6000856001600160a01b0316612d266126f6565b6001600160a01b03161480612d425750612d42866108b46126f6565b80612d6d5750612d506126f6565b6001600160a01b0316612d6285610ae0565b6001600160a01b0316145b905080612d8d57604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b038516612db457604051633a954ecd60e21b815260040160405180910390fd5b612dc18686866001613f33565b612dcd60008588612700565b6001600160a01b038681166000908152600585016020908152604080832080546001600160401b03198082166001600160401b03928316600019018316179092558a86168086528386208054938416938316600190810184169490941790558a865260048a0190945282852080546001600160e01b031916909417600160a01b42909216919091021783558801808452922080549193909116612ea35785548214612ea357805460208601516001600160401b0316600160a01b026001600160e01b03199091166001600160a01b038b16171781555b50505083856001600160a01b0316876001600160a01b031660008051602061566583398151915260405160405180910390a45b505050505050565b7ff5b99f0648d517803cfbd359284c3fd81ac54e1c89b4874d917ae042d05e850090565b6000611321613ff2565b6000612f1661268c565b90506000612f23846131f2565b80519091508315612fab576000816001600160a01b0316612f426126f6565b6001600160a01b03161480612f5e5750612f5e826108b46126f6565b80612f895750612f6c6126f6565b6001600160a01b0316612f7e87610ae0565b6001600160a01b0316145b905080612fa957604051632ce44b5f60e11b815260040160405180910390fd5b505b612fb9816000876001613f33565b612fc560008683612700565b6001600160a01b03808216600081815260058601602090815260408083208054600160801b6000196001600160401b038084169190910181166001600160401b03198416811783900482166001908101831690930267ffffffffffffffff67ffffffffffffffff60801b0119909416179290921783558c865260048b01909452828520805460ff60e01b1942909316600160a01b026001600160e01b03199091169097179690961716600160e01b178555918a018084529220805491949091166130c257865482146130c257805460208701516001600160401b0316600160a01b026001600160e01b03199091166001600160a01b038716171781555b5050604051879250600091506001600160a01b03841690600080516020615665833981519152908390a450506001908101805490910190555050565b7f29cbb6a3768b42f407b01945994a37861bf5a2179c5dea5be7e378415e75510090565b7f8116a128b135962baae86382f90f26a5e28c4bb803b8888f92fd98e3bbbc6d0090565b6127108111156131685760405162461bcd60e51b8152600401610947906154ec565b81613171613122565b80546001600160a01b0319166001600160a01b039290921691909117905580613198613122565b805461ffff92909216600160a01b0261ffff60a01b199092169190911790556040518181526001600160a01b038316907f90d7ec04bcb8978719414f82e52e4cb651db41d0e6f8cea6118c2191e6183adb90602001612be0565b604080516060810182526000808252602082018190529181018290529061321761268c565b9050828154811015613302576000818152600483016020908152604091829020825160608101845290546001600160a01b0381168252600160a01b81046001600160401b031692820192909252600160e01b90910460ff161515918101829052906133005780516001600160a01b03161561329457949350505050565b50600019016000818152600483016020908152604091829020825160608101845290546001600160a01b038116808352600160a01b82046001600160401b031693830193909352600160e01b900460ff16151592810192909252156132fb57949350505050565b613294565b505b604051636f96cda160e11b815260040160405180910390fd5b6001600160a01b0381166133415760405162461bcd60e51b815260040161094790615515565b8061334a6126b0565b80546001600160a01b0319166001600160a01b03928316179055604051908216907f299d17e95023f496e0ffc4909cff1a61f74bb5eb18de6f900f4155bfa1b3b33390600090a250565b612ed6856127dc565b6000806133a861268c565b8054925090506133b88484612b03565b5092915050565b60006111bd614016565b60006133d3613c68565b80546133de90614ec8565b80601f016020809104026020016040519081016040528092919081815260200182805461340a90614ec8565b80156134575780601f1061342c57610100808354040283529160200191613457565b820191906000526020600020905b81548152906001019060200180831161343a57829003601f168201915b5050505050905081613467613c68565b81516134769260200190614592565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a1681836040516125fe929190615540565b6127108111156134ca5760405162461bcd60e51b8152600401610947906154ec565b6040518060400160405280836001600160a01b03168152602001828152506134f0613122565b600085815260019182016020908152604091829020845181546001600160a01b0319166001600160a01b0391821617825594820151930192909255518381529184169185917f7365cf4122f072a3365c20d54eff9b38d73c096c28e1892ec8f5b0e403a0f12d9101611e28565b6001600160a01b03163b151590565b6000836001600160a01b031663150b7a026135856126f6565b8786866040518563ffffffff1660e01b81526004016135a7949392919061556e565b6020604051808303816000875af19250505080156135e2575060408051601f3d908101601f191682019092526135df918101906155ab565b60015b61363d573d808015613610576040519150601f19603f3d011682016040523d82523d6000602084013e613615565b606091505b508051613635576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490505b949350505050565b6000806000613668611317565b90506000613674612ede565b8054604080516020808402820181019092528281529291908301828280156136bb57602002820191906000526020600020905b8154815260200190600101908083116136a7575b5050505050905060005b82811015613727578181815181106136df576136df614f9c565b60200260200101518610156137155780935081818151811061370357613703614f9c565b60200260200101519450505050915091565b613720600182614f84565b90506136c5565b5060405162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a59081d1bdad95b9259608a1b6044820152606401610947565b6060600061376e611317565b9050600061377a612ede565b8054604080516020808402820181019092528281529291908301828280156137c157602002820191906000526020600020905b8154815260200190600101908083116137ad575b5050505050905060005b82811015613727578181815181106137e5576137e5614f9c565b60200260200101518510156138bc576137fc612ede565b600101600083838151811061381357613813614f9c565b60200260200101518152602001908152602001600020805461383490614ec8565b80601f016020809104026020016040519081016040528092919081815260200182805461386090614ec8565b80156138ad5780601f10613882576101008083540402835291602001916138ad565b820191906000526020600020905b81548152906001019060200180831161389057829003601f168201915b50505050509350505050919050565b6138c7600182614f84565b90506137cb565b6060816138f25750506040805180820190915260018152600360fc1b602082015290565b8160005b811561391c5780613906816151c4565b91506139159050600a83614fe7565b91506138f6565b6000816001600160401b03811115613936576139366149df565b6040519080825280601f01601f191660200182016040528015613960576020820181803683370190505b5090505b841561365357613975600183615414565b9150613982600a866155c8565b61398d906030614f84565b60f81b8183815181106139a2576139a2614f9c565b60200101906001600160f81b031916908160001a9053506139c4600a86614fe7565b9450613964565b7f3107fcf7768de14f3c3441e6960e7a1659b448f798b4e6665bf2dc61db3ea30090565b60009182527f0a7b0f5c59907924802379ebe98cdc23e2ee7820f63d30126e10b3752010e500602090815260408084206001600160a01b0393909316845291905290205460ff1690565b80613a426130fe565b60008481526020918252604090208251610a219391929190910190614592565b613a6a612ede565b6000838152600291909101602052604090205460ff1615613abc5760405162461bcd60e51b815260206004820152600c60248201526b2130ba31b410333937bd32b760a11b6044820152606401610947565b80613ac5612ede565b60010160008481526020019081526020016000209080519060200190613aec929190614592565b507f6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c613b1783614047565b6040805191825260208201859052016125fe565b6000613b35614164565b613b515760405162461bcd60e51b815260040161094790614efd565b85613b865760405162461bcd60e51b81526020600482015260056024820152640c08185b5d60da1b6044820152606401610947565b6000613b90613ff2565b600001549050613bd7818888888080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061419292505050565b613bdf613ff2565b919091559150807f2a0365091ef1a40953c670dce28177e37520648a6fdc91506bffac0ab045570d6001613c138a84614f84565b613c1d9190615414565b88888888604051613c329594939291906155dc565b60405180910390a25095945050505050565b7fc0c34308b4a2f4c5ee9af8ba82541cfb3c33b076d1fd05c65f9ce7060c64c40090565b7f4bc804ba64359c0e35e5ed5d90ee596ecaa49a3a930ddcb1470ea0dd625da90090565b60008060ff19613cbd60017f52513acdf273074fe51c68a52514ea5eabc2d36eb91435d5799fc3f9adc30530615414565b604051602001613ccf91815260200190565b60408051601f1981840301815291905280516020909101201692915050565b6000613cf93361129a565b15613d0b575060131936013560601c90565b503390565b80613d1a57611ef7565b6001600160a01b03841673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1415613d495761201582826141fb565b611ef78484848461429d565b6000613d5f61268c565b80549091506001600160a01b038516613d8a57604051622e076360e81b815260040160405180910390fd5b83613da85760405163b562e8dd60e01b815260040160405180910390fd5b613db56000868387613f33565b6001600160a01b0385166000818152600584016020908152604080832080546001600160801b031981166001600160401b038083168c018116918217600160401b6001600160401b031990941690921783900481168c018116909202179091558584526004870190925290912080546001600160e01b0319168317600160a01b4290931692909202919091179055819081860190613e529061355d565b15613ec7575b60405182906001600160a01b03891690600090600080516020615665833981519152908290a4613e91600088848060010195508861356c565b613eae576040516368d2bf6b60e11b815260040160405180910390fd5b808210613e585783548314613ec257600080fd5b613efa565b5b6040516001830192906001600160a01b03891690600090600080516020615665833981519152908290a4808210613ec8575b508255612128565b60008060ff19613cbd60017fbc63558797adc09ce5b77f3ca89acfccabdd075e03de61144467402677b956b2615414565b613f4c60008051602061564583398151915260006139ef565b158015613f6157506001600160a01b03841615155b8015613f7557506001600160a01b03831615155b15611ef757613f92600080516020615645833981519152856139ef565b158015613fb45750613fb2600080516020615645833981519152846139ef565b155b15611ef75760405162461bcd60e51b815260206004820152600e60248201526d215472616e736665722d526f6c6560901b6044820152606401610947565b7fb9d1563179e0b515350da446a9b78048cef890c6aaa6e34cdf88122d970b5c0090565b60008060ff19613cbd60017ffa02b2ade2dba28b48a24f204a68d8c0005ca2ccfd58c765cdddd023319a9b3f615414565b600080614052611317565b9050600061405e612ede565b8054604080516020808402820181019092528281529291908301828280156140a557602002820191906000526020600020905b815481526020019060010190808311614091575b5050505050905060005b82811015614129578181815181106140c9576140c9614f9c565b602002602001015185141561411757801561410c57816140ea600183615414565b815181106140fa576140fa614f9c565b60200260200101519350505050919050565b506000949350505050565b80614121816151c4565b9150506140af565b5060405162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a590818985d18da1259608a1b6044820152606401610947565b60006111bd7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a66122966126f6565b60008061419f8486614f84565b90508091506141ac612ede565b80546001810182556000918252602090912001819055826141cb612ede565b600101600083815260200190815260200160002090805190602001906141f2929190614592565b50935093915050565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114614248576040519150601f19603f3d011682016040523d82523d6000602084013e61424d565b606091505b5050905080610a215760405162461bcd60e51b815260206004820152601c60248201527b1b985d1a5d99481d1bdad95b881d1c985b9cd9995c8819985a5b195960221b6044820152606401610947565b816001600160a01b0316836001600160a01b031614156142bc57611ef7565b6001600160a01b0383163014156142e1576120156001600160a01b03851683836142f6565b611ef76001600160a01b03851684848461434c565b610a218363a9059cbb60e01b848460405160240161431592919061484a565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152614384565b6040516001600160a01b0380851660248301528316604482015260648101829052611ef79085906323b872dd60e01b90608401614315565b60006143d9826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166144569092919063ffffffff16565b805190915015610a2157808060200190518101906143f79190615615565b610a215760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610947565b606061365384846000858561446a8561355d565b6144b65760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610947565b600080866001600160a01b031685876040516144d29190615632565b60006040518083038185875af1925050503d806000811461450f576040519150601f19603f3d011682016040523d82523d6000602084013e614514565b606091505b50915091506123e78282866060831561452e5750816126ef565b82511561453e5782518084602001fd5b8160405162461bcd60e51b815260040161094791906146ce565b50805461456490614ec8565b6000825580601f10614574575050565b601f016020900490600052602060002090810190610bf19190614616565b82805461459e90614ec8565b90600052602060002090601f0160209004810192826145c05760008555614606565b82601f106145d957805160ff1916838001178555614606565b82800160010185558215614606579182015b828111156146065782518255916020019190600101906145eb565b50614612929150614616565b5090565b5b808211156146125760008155600101614617565b6001600160e01b031981168114610bf157600080fd5b60006020828403121561465357600080fd5b81356126ef8161462b565b600060a0828403121561467057600080fd5b50919050565b60005b83811015614691578181015183820152602001614679565b83811115611ef75750506000910152565b600081518084526146ba816020860160208601614676565b601f01601f19169290920160200192915050565b6020815260006126ef60208301846146a2565b6000602082840312156146f357600080fd5b5035919050565b6001600160a01b0381168114610bf157600080fd5b6000806040838503121561472257600080fd5b823561472d816146fa565b946020939093013593505050565b60006020828403121561474d57600080fd5b81356126ef816146fa565b6000806040838503121561476b57600080fd5b50508035926020909101359150565b60006080828403121561467057600080fd5b60008060008060008060c087890312156147a557600080fd5b8635955060208701356147b7816146fa565b94506040870135935060608701356147ce816146fa565b92506080870135915060a08701356001600160401b038111156147f057600080fd5b6147fc89828a0161477a565b9150509295509295509295565b60008060006060848603121561481e57600080fd5b8335614829816146fa565b92506020840135614839816146fa565b929592945050506040919091013590565b6001600160a01b03929092168252602082015260400190565b6020815281516020820152602082015160408201526040820151606082015260608201516080820152608082015160a082015260a082015160c082015260018060a01b0360c08301511660e0820152600060e08301516101008081850152506136536101208401826146a2565b8015158114610bf157600080fd5b6000806000604084860312156148f357600080fd5b83356001600160401b038082111561490a57600080fd5b818601915086601f83011261491e57600080fd5b81358181111561492d57600080fd5b8760208260051b850101111561494257600080fd5b60209283019550935050840135614958816148d0565b809150509250925092565b634e487b7160e01b600052602160045260246000fd5b81516001600160a01b039081168252602083015160a083019190600281106149b157634e487b7160e01b600052602160045260246000fd5b8060208501525060408401516040840152606084015160608401528060808501511660808401525092915050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715614a1d57614a1d6149df565b604052919050565b60006001600160401b03821115614a3e57614a3e6149df565b50601f01601f191660200190565b6000614a5f614a5a84614a25565b6149f5565b9050828152838383011115614a7357600080fd5b828260208301376000602084830101529392505050565b600082601f830112614a9b57600080fd5b6126ef83833560208501614a4c565b60008060008060008060c08789031215614ac357600080fd5b8635614ace816146fa565b9550602087013594506040870135614ae5816146fa565b93506060870135925060808701356001600160401b0380821115614b0857600080fd5b614b148a838b0161477a565b935060a0890135915080821115614b2a57600080fd5b506147fc89828a01614a8a565b600060208284031215614b4957600080fd5b81356001600160401b03811115614b5f57600080fd5b8201601f81018413614b7057600080fd5b61365384823560208401614a4c565b600080600060608486031215614b9457600080fd5b833592506020840135614839816146fa565b60008083601f840112614bb857600080fd5b5081356001600160401b03811115614bcf57600080fd5b602083019150836020828501011115614be757600080fd5b9250929050565b600080600060408486031215614c0357600080fd5b8335925060208401356001600160401b03811115614c2057600080fd5b614c2c86828701614ba6565b9497909650939450505050565b60008060408385031215614c4c57600080fd5b8235614c57816146fa565b91506020830135614c67816148d0565b809150509250929050565b60008060408385031215614c8557600080fd5b823591506020830135614c67816146fa565b60008060008060808587031215614cad57600080fd5b8435614cb8816146fa565b93506020850135614cc8816146fa565b92506040850135915060608501356001600160401b03811115614cea57600080fd5b614cf687828801614a8a565b91505092959194509250565b600080600060608486031215614d1757600080fd5b8335614d22816146fa565b95602085013595506040909401359392505050565b600080600080600060608688031215614d4f57600080fd5b8535945060208601356001600160401b0380821115614d6d57600080fd5b614d7989838a01614ba6565b90965094506040880135915080821115614d9257600080fd5b50614d9f88828901614ba6565b969995985093965092949392505050565b600080600060408486031215614dc557600080fd5b83356001600160401b0380821115614ddc57600080fd5b614de887838801614a8a565b94506020860135915080821115614dfe57600080fd5b50614c2c86828701614ba6565b60008060408385031215614e1e57600080fd5b8235614e29816146fa565b91506020830135614c67816146fa565b80546001600160a01b0319166001600160a01b0392909216919091179055565b8135614e64816146fa565b614e6e8183614e39565b50602082013560028110614e8157600080fd5b815460ff60a01b191660a09190911b60ff60a01b1617815560408201356001820155606082013560028201556080820135614ebb816146fa565b610a218160038401614e39565b600181811c90821680614edc57607f821691505b6020821081141561467057634e487b7160e01b600052602260045260246000fd5b6020808252600e908201526d139bdd08185d5d1a1bdc9a5e995960921b604082015260600190565b6000808335601e19843603018112614f3c57600080fd5b8301803591506001600160401b03821115614f5657600080fd5b6020019150600581901b3603821315614be757600080fd5b634e487b7160e01b600052601160045260246000fd5b60008219821115614f9757614f97614f6e565b500190565b634e487b7160e01b600052603260045260246000fd5b6000816000190483118215151615614fcc57614fcc614f6e565b500290565b634e487b7160e01b600052601260045260246000fd5b600082614ff657614ff6614fd1565b500490565b6000823560fe1983360301811261501157600080fd5b9190910192915050565b601f821115610a2157600081815260208120601f850160051c810160208610156150425750805b601f850160051c820191505b81811015612ed65782815560010161504e565b6001600160401b03831115615078576150786149df565b61508c836150868354614ec8565b8361501b565b6000601f8411600181146150c057600085156150a85750838201355b600019600387901b1c1916600186901b178355612128565b600083815260209020601f19861690835b828110156150f157868501358255602094850194600190920191016150d1565b508682101561510e5760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b813581556020820135600182015560408201356002820155606082013560038201556080820135600482015560a0820135600582015560c0820135615164816146fa565b6151718160068401614e39565b5060e0820135601e1983360301811261518957600080fd5b820180356001600160401b038111156151a157600080fd5b6020820191508036038213156151b657600080fd5b611ef7818360078601615061565b60006000198214156151d8576151d8614f6e565b5060010190565b6000808335601e198436030181126151f657600080fd5b83016020810192503590506001600160401b0381111561521557600080fd5b803603831315614be757600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60408082528181018490526000906060808401600587901b850182018885805b8a81101561531f57888403605f190185528235368d900360fe19018112615292578283fd5b8c018035855260208082013581870152888201358987015287820135888701526080808301359087015260a080830135908701526101009060c0808401356152d9816146fa565b6001600160a01b03169088015260e06152f4848201856151df565b945083828a0152615308848a018683615224565b99830199985050509490940193505060010161526d565b5050508615156020870152935061365392505050565b6000806040838503121561534857600080fd5b82516001600160401b0381111561535e57600080fd5b8301601f8101851361536f57600080fd5b805161537d614a5a82614a25565b81815286602083850101111561539257600080fd5b6153a3826020830160208601614676565b60209590950151949694955050505050565b600085516153c7818460208a01614676565b820184868237909301918252506020019392505050565b6000602082840312156153f057600080fd5b81516126ef816146fa565b60006020828403121561540d57600080fd5b5051919050565b60008282101561542657615426614f6e565b500390565b60008161543a5761543a614f6e565b506000190190565b60008251615454818460208701614676565b600360fc1b920191825250600101919050565b60008351615479818460208801614676565b83519083019061548d818360208801614676565b01949350505050565b600080604083850312156154a957600080fd5b82356001600160401b038111156154bf57600080fd5b6154cb85828601614a8a565b95602094909401359450505050565b82848237909101908152602001919050565b6020808252600f908201526e45786365656473206d61782062707360881b604082015260600190565b602080825260119082015270125b9d985b1a59081c9958da5c1a595b9d607a1b604082015260600190565b60408152600061555360408301856146a2565b828103602084015261556581856146a2565b95945050505050565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906155a1908301846146a2565b9695505050505050565b6000602082840312156155bd57600080fd5b81516126ef8161462b565b6000826155d7576155d7614fd1565b500690565b8581526060602082015260006155f6606083018688615224565b8281036040840152615609818587615224565b98975050505050505050565b60006020828403121561562757600080fd5b81516126ef816148d0565b6000825161501181846020870161467656fe8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6cddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220099064585435725170e0a03895ab1a12230e629a40bf615a5c096a6aa3793b2864736f6c634300080c0033",
    "sourceMap": "2088:12898:383:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4277:269;;;;;;;;;;-1:-1:-1;4277:269:383;;;;;:::i;:::-;;:::i;:::-;;;661:14:644;;654:22;636:41;;624:2;609:18;4277:269:383;;;;;;;;1389:398:167;;;;;;;;;;-1:-1:-1;1389:398:167;;;;;:::i;:::-;;:::i;:::-;;7747:179:24;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;1091:126:182:-;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;1811:32:644;;;1793:51;;1781:2;1766:18;1091:126:182;1647:203:644;9406:290:24;;;;;;;;;;-1:-1:-1;9406:290:24;;;;;:::i;:::-;;:::i;8942:403::-;;;;;;;;;;-1:-1:-1;8942:403:24;;;;;:::i;:::-;;:::i;1633:173:178:-;;;;;;;;;;-1:-1:-1;1633:173:178;;;;;:::i;:::-;;:::i;6311:889:383:-;;;;;;:::i;:::-;;:::i;3235:393:24:-;;;;;;;;;;;;;:::i;:::-;;;3147:25:644;;;3135:2;3120:18;3235:393:24;3001:177:644;2113:269:181;;;;;;;;;;-1:-1:-1;2113:269:181;;;;;:::i;:::-;;:::i;5427:2252:170:-;;;;;;;;;;-1:-1:-1;5427:2252:170;;;;;:::i;:::-;;:::i;10498:164:24:-;;;;;;;;;;-1:-1:-1;10498:164:24;;;;;:::i;:::-;;:::i;2548:231:166:-;;;;;;;;;;-1:-1:-1;2548:231:166;;;;;:::i;:::-;;:::i;1962:347:184:-;;;;;;;;;;-1:-1:-1;1962:347:184;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;12802:108:383:-;;;;;;;;;;;;;:::i;10728:179:24:-;;;;;;;;;;-1:-1:-1;10728:179:24;;;;;:::i;:::-;;:::i;13493:184:383:-;;;;;;;;;;-1:-1:-1;13493:184:383;;;;;:::i;:::-;;:::i;4812:153:169:-;;;;;;;;;;-1:-1:-1;4812:153:169;;;;;:::i;:::-;;:::i;2549:435:184:-;;;;;;;;;;-1:-1:-1;2549:435:184;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;5140:32:644;;;5122:51;;5221:6;5209:19;;;5204:2;5189:18;;5182:47;5095:18;2549:435:184;4950:285:644;1374:158:173;;;;;;;;;;-1:-1:-1;1374:158:173;;;;;:::i;:::-;;:::i;3718:256:184:-;;;;;;;;;;-1:-1:-1;3718:256:184;;;;;:::i;:::-;;:::i;7562:123:24:-;;;;;;;;;;-1:-1:-1;7562:123:24;;;;;:::i;:::-;;:::i;2223:124:166:-;;;;;;;;;;;;;:::i;1626:228:182:-;;;;;;;;;;-1:-1:-1;1626:228:182;;;;;:::i;:::-;;:::i;8305:192:170:-;;;;;;;;;;-1:-1:-1;8305:192:170;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4491:284:24:-;;;;;;;;;;-1:-1:-1;4491:284:24;;;;;:::i;:::-;;:::i;2435:2895:170:-;;;;;;;;;;-1:-1:-1;2435:2895:170;;;;;:::i;:::-;;:::i;1168:136:167:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;1155:1217:170:-;;;;;;:::i;:::-;;:::i;1353:104:178:-;;;;;;;;;;;;;:::i;1607:188:168:-;;;;;;;;;;-1:-1:-1;1607:188:168;;;;;:::i;:::-;;:::i;7990:183:24:-;;;;;;;;;;;;;:::i;4948:288:184:-;;;;;;;;;;-1:-1:-1;4948:288:184;;;;;:::i;:::-;;:::i;2210:582:169:-;;;;;;;;;;-1:-1:-1;2210:582:169;;;;;:::i;:::-;;:::i;1271:147::-;;;;;;;;;;-1:-1:-1;1271:147:169;;;;;:::i;:::-;;:::i;9763:364:24:-;;;;;;;;;;-1:-1:-1;9763:364:24;;;;;:::i;:::-;;:::i;12494:223:383:-;;;;;;;;;;;;;:::i;8579:270:170:-;;;;;;;;;;-1:-1:-1;8579:270:170;;;;;:::i;:::-;;:::i;3094:180:184:-;;;;;;;;;;;;;:::i;10973:381:24:-;;;;;;;;;;-1:-1:-1;10973:381:24;;;;;:::i;:::-;;:::i;1865:871:167:-;;;;;;;;;;-1:-1:-1;1865:871:167;;;;;:::i;:::-;;:::i;7767:473:170:-;;;;;;;;;;;;;:::i;3841:402:383:-;;;;;;;;;;-1:-1:-1;3841:402:383;;;;;:::i;:::-;;:::i;13226:208::-;;;;;;;;;;;;;:::i;5603:415::-;;;;;;;;;;-1:-1:-1;5603:415:383;;;;;:::i;:::-;;:::i;4926:567::-;;;;;;;;;;-1:-1:-1;4926:567:383;;;;;:::i;:::-;;:::i;1453:191:181:-;;;;;;;;;;;;;:::i;755:172:170:-;;;;;;;;;;;;;:::i;:::-;;;;14691:25:644;;;14747:2;14732:18;;14725:34;;;;14664:18;755:172:170;14517:248:644;3284:1283:169;;;;;;;;;;-1:-1:-1;3284:1283:169;;;;;:::i;:::-;;:::i;2173:138:168:-;;;;;;;;;;;;;:::i;10193:243:24:-;;;;;;;;;;-1:-1:-1;10193:243:24;;;;;:::i;:::-;;:::i;7473:353:383:-;;;;;;;;;;-1:-1:-1;7473:353:383;;;;;:::i;:::-;;:::i;4277:269::-;4431:4;4458:36;4482:11;4458:23;:36::i;:::-;:81;;;-1:-1:-1;;;;;;;;;;4498:41:383;;;4458:81;4451:88;4277:269;-1:-1:-1;;4277:269:383:o;1389:398:167:-;1495:20;:18;:20::i;:::-;1487:48;;;;-1:-1:-1;;;1487:48:167;;15998:2:644;1487:48:167;;;15980:21:644;16037:2;16017:18;;;16010:30;-1:-1:-1;;;16056:18:644;;;16049:45;16111:18;;1487:48:167;;;;;;;;;1603:1;1553:38;;;;:16;:38;:::i;:::-;-1:-1:-1;;;;;1553:52:167;;;1545:89;;;;-1:-1:-1;;;1545:89:167;;16342:2:644;1545:89:167;;;16324:21:644;16381:2;16361:18;;;16354:30;-1:-1:-1;;;16400:18:644;;;16393:54;16464:18;;1545:89:167;16140:348:644;1545:89:167;1689:1;1652:25;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1652:39:167;;;1644:69;;;;-1:-1:-1;;;1644:69:167;;16695:2:644;1644:69:167;;;16677:21:644;16734:2;16714:18;;;16707:30;-1:-1:-1;;;16753:18:644;;;16746:47;16810:18;;1644:69:167;16493:341:644;1644:69:167;1764:16;1724:21;:19;:21::i;:::-;:56;;:37;:56;:::i;:::-;-1:-1:-1;;;1389:398:167:o;7747:179:24:-;7801:13;7826:32;7861:31;:29;:31::i;:::-;7826:66;;7909:4;:10;;7902:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7747:179;:::o;1091:126:182:-;1153:7;1179:21;:19;:21::i;:::-;:31;-1:-1:-1;;;;;1179:31:182;;1091:126;-1:-1:-1;1091:126:182:o;9406:290:24:-;9482:7;9501:32;9536:31;:29;:31::i;:::-;9501:66;;9583:16;9591:7;9583;:16::i;:::-;9578:64;;9608:34;;-1:-1:-1;;;9608:34:24;;;;;;;;;;;9578:64;9660:29;;;;:20;;:29;;-1:-1:-1;9660:29:24;;;;-1:-1:-1;;;;;9660:29:24;;9406:290::o;8942:403::-;9022:13;9038:35;9065:7;9038:26;:35::i;:::-;9022:51;;9093:5;-1:-1:-1;;;;;9087:11:24;:2;-1:-1:-1;;;;;9087:11:24;;9083:48;;;9107:24;;-1:-1:-1;;;9107:24:24;;;;;;;;;;;9083:48;9162:5;-1:-1:-1;;;;;9146:21:24;:12;:10;:12::i;:::-;-1:-1:-1;;;;;9146:21:24;;9142:158;;9186:37;9203:5;9210:12;:10;:12::i;9186:37::-;9181:119;;9250:35;;-1:-1:-1;;;9250:35:24;;;;;;;;;;;9181:119;9310:28;9319:2;9323:7;9332:5;9310:8;:28::i;1633:173:178:-;1703:14;:12;:14::i;:::-;1698:70;;1733:24;;-1:-1:-1;;;1733:24:178;;;;;;;:::i;1698:70::-;1777:22;1789:9;1777:11;:22::i;:::-;1633:173;:::o;6311:889:383:-;6401:28;6419:9;6401:17;:28::i;:::-;6493:19;6515:16;:14;:16::i;:::-;6493:38;;6541:55;6559:11;6572:12;6586:9;6541:17;:55::i;:::-;6606:57;6626:11;6639:12;6653:9;6606:19;:57::i;:::-;6699:209;6741:1;6757:9;6780:21;:19;:21::i;:::-;:46;;;-1:-1:-1;;;;;6780:46:383;6840:21;:19;:21::i;:::-;:58;;;6699:20;:209::i;:::-;6943:33;6953:11;6966:9;6943;:33::i;:::-;7148:12;7123:11;-1:-1:-1;;;;;7014:179:383;7050:21;:19;:21::i;:::-;:59;7014:179;;3147:25:644;;;-1:-1:-1;;;;;7050:59:383;;;;7014:179;;3135:2:644;3120:18;7014:179:383;;;;;;;6391:809;6311:889;;:::o;3235:393:24:-;3288:7;3307:32;3342:31;:29;:31::i;:::-;3576:17;;;;3555:18;;:38;;3235:393;-1:-1:-1;;3235:393:24:o;2113:269:181:-;2230:24;:22;:24::i;:::-;2225:80;;2270:24;;-1:-1:-1;;;2270:24:181;;;;;;;:::i;2225:80::-;2314:61;2336:21;2359:15;2314:21;:61::i;:::-;2113:269;;:::o;5427:2252:170:-;5666:15;5693:39;5735:14;:12;:14::i;:::-;:29;:54;;;:40;;;;:54;;;;;;;;;5693:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5693:96:170;;;;;;;;;;;;5735:54;5693:96;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5693:96:170;;;;-1:-1:-1;;;5820:40:170;;;;5891:31;;;;5956:26;;;;5997:28;;;;5693:96;;-1:-1:-1;5820:40:170;;5891:31;;5956:26;5997:42;5993:515;;6072:425;6108:21;:15;;:21;:::i;:::-;6072:425;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6147:28:170;;;;;;-1:-1:-1;6266:8:170;;6300:38;;;;;6364:29;;;;;6419:24;;;;;;;;:::i;:::-;6224:241;;-1:-1:-1;;;;;;19371:2:644;19407:15;;;19403:24;;6224:241:170;;;19391:37:644;19444:12;;;19437:28;;;;19481:12;;;19474:28;;;;19536:15;;;19532:24;19518:12;;;19511:46;19573:13;;6224:241:170;;;;;;;;;;;;6193:290;;;;;;6072:18;:425::i;:::-;-1:-1:-1;6055:442:170;-1:-1:-1;5993:515:170;6522:10;6518:534;;;6561:38;;;;:129;;6680:10;6561:129;;;6623:15;:38;;;6561:129;6548:142;;-1:-1:-1;;6717:15:170;:29;;;:50;;:127;;6834:10;6717:127;;;6786:15;:29;;;6717:127;6704:140;;-1:-1:-1;;6874:15:170;:29;;;:50;;:92;;;;-1:-1:-1;6964:1:170;6928:24;;;;;;;;:::i;:::-;-1:-1:-1;;;;;6928:38:170;;;6874:92;:167;;7028:13;6874:167;;;6985:24;;;;;;;;:::i;:::-;6858:183;;6518:534;7062:29;7094:14;:12;:14::i;:::-;:29;;:51;;:65;7146:12;7094:65;;;;;;;;;;;:75;7160:8;-1:-1:-1;;;;;7094:75:170;-1:-1:-1;;;;;7094:75:170;;;;;;;;;;;;;7062:107;;7197:13;-1:-1:-1;;;;;7184:26:170;:9;-1:-1:-1;;;;;7184:26:170;;;:58;;;;7232:10;7214:14;:28;;7184:58;7180:115;;;7258:26;;-1:-1:-1;;;7258:26:170;;19799:2:644;7258:26:170;;;19781:21:644;19838:2;19818:18;;;19811:30;-1:-1:-1;;;19857:18:644;;;19850:46;19913:18;;7258:26:170;19597:340:644;7180:115:170;7309:14;;;:66;;-1:-1:-1;7364:10:170;7328:33;7340:21;7328:9;:33;:::i;:::-;:46;7309:66;7305:111;;;7391:14;;-1:-1:-1;;;7391:14:170;;;;;;20409:2:644;20391:21;;;20448:1;20428:18;;;20421:29;-1:-1:-1;;;20481:2:644;20466:18;;20459:34;20525:2;20510:18;;20207:327;7305:111:170;7475:17;:36;;;7463:9;7429:17;:31;;;:43;;;;:::i;:::-;:82;7425:133;;;7527:20;;-1:-1:-1;;;7527:20:170;;20741:2:644;7527:20:170;;;20723:21:644;20780:2;20760:18;;;20753:30;-1:-1:-1;;;20799:18:644;;;20792:40;20849:18;;7527:20:170;20539:334:644;7425:133:170;7572:32;;7607:15;-1:-1:-1;7568:105:170;;;7638:24;;-1:-1:-1;;;7638:24:170;;21080:2:644;7638:24:170;;;21062:21:644;21119:2;21099:18;;;21092:30;-1:-1:-1;;;21138:18:644;;;21131:44;21192:18;;7638:24:170;20878:338:644;7568:105:170;5683:1996;;;;;5427:2252;;;;;;;;:::o;10498:164:24:-;10627:28;10637:4;10643:2;10647:7;10627:9;:28::i;2548:231:166:-;2612:7;2645:17;:15;:17::i;:::-;2635:6;:27;2631:81;;2678:23;;-1:-1:-1;;;2678:23:166;;21423:2:644;2678:23:166;;;21405:21:644;21462:2;21442:18;;;21435:30;-1:-1:-1;;;21481:18:644;;;21474:43;21534:18;;2678:23:166;21221:337:644;2631:81:166;2728:27;:25;:27::i;:::-;:44;;2765:6;;2728:44;;;;;;:::i;:::-;;;;;;;;;2721:51;;2548:231;;;:::o;1962:347:184:-;2099:16;2117:21;2155:17;2174:11;2189:31;2212:7;2189:22;:31::i;:::-;2154:66;;-1:-1:-1;2154:66:184;;-1:-1:-1;2154:66:184;;;-1:-1:-1;2296:6:184;2277:15;2154:66;2277:9;:15;:::i;:::-;2276:26;;;;:::i;:::-;2260:42;;2144:165;;1962:347;;;;;:::o;12802:108:383:-;12854:7;12880:23;:21;:23::i;:::-;12873:30;;12802:108;:::o;10728:179:24:-;10861:39;10878:4;10884:2;10888:7;10861:39;;;;;;;;;;;;:16;:39::i;13493:184:383:-;13650:20;13656:7;13665:4;13650:5;:20::i;4812:153:169:-;4877:4;4957:1;4900:23;:21;:23::i;:::-;:37;:47;;;;;;;;;;;:54;;;;;:::i;:::-;;;:58;4893:65;;4812:153;;;:::o;2549:435:184:-;2629:7;2638:6;2656:34;2693:17;:15;:17::i;:::-;:47;;;;:37;;;;:47;;;;;;;;;2656:84;;;;;;;;;;-1:-1:-1;;;;;2656:84:184;;;;;;;;;;;;-1:-1:-1;2770:39:184;:207;;2922:25;;2956:19;;;;2770:207;;;2829:17;:15;:17::i;:::-;:34;-1:-1:-1;;;;;2829:34:184;2872:17;:15;:17::i;:::-;:28;-1:-1:-1;;;2872:28:184;;;;2770:207;2751:226;;;;;2549:435;;;:::o;1374:158:173:-;-1:-1:-1;;;;;1473:52:173;1450:4;1473:52;;;473:66;1473:52;;;;;;;;;1374:158::o;3718:256:184:-;3830:20;:18;:20::i;:::-;3825:76;;3866:24;;-1:-1:-1;;;3866:24:184;;;;;;;:::i;3825:76::-;3911:56;3936:17;3955:11;3911:24;:56::i;7562:123:24:-;7626:7;7652:21;7665:7;7652:12;:21::i;:::-;:26;;7562:123;-1:-1:-1;;7562:123:24:o;2223:124:166:-;2271:7;2297:27;:25;:27::i;:::-;:43;;2223:124;-1:-1:-1;2223:124:166:o;1626:228:182:-;1716:29;:27;:29::i;:::-;1711:85;;1761:24;;-1:-1:-1;;;1761:24:182;;;;;;;:::i;1711:85::-;1805:42;1832:14;1805:26;:42::i;8305:192:170:-;8381:31;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8381:31:170;8436:14;:12;:14::i;:::-;:29;:54;;;:40;;;;:54;;;;;;;;;8424:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8424:66:170;;;;;;;;;;;;8436:54;8424:66;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8305:192;;;:::o;4491:284:24:-;4555:7;4574:32;4609:31;:29;:31::i;:::-;4574:66;-1:-1:-1;;;;;;4654:19:24;;4650:60;;4682:28;;-1:-1:-1;;;4682:28:24;;;;;;;;;;;4650:60;-1:-1:-1;;;;;4735:24:24;;;;;;;:17;;;;:24;;-1:-1:-1;4735:24:24;;;:32;-1:-1:-1;;;;;4735:32:24;;4491:284::o;2435:2895:170:-;2600:24;:22;:24::i;:::-;2595:80;;2640:24;;-1:-1:-1;;;2640:24:170;;;;;;;:::i;2595:80::-;2685:26;2714:14;:12;:14::i;:::-;:44;;-1:-1:-1;2714:29:170;2797:14;:12;:14::i;:::-;:35;;;;-1:-1:-1;3221:18:170;3249:108;;;;3307:39;3328:18;3307;:39;:::i;:::-;3291:55;;3249:108;3405:11;3367:14;:12;:14::i;:::-;:35;;:56;3480:13;3433:14;:12;:14::i;:::-;:60;:29;;3549:688;3569:22;;;3549:688;;;3620:6;;;:69;;;3660:11;;3672:1;3660:14;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:29;3630:59;;3620:69;3612:84;;;;-1:-1:-1;;;3612:84:170;;22665:2:644;3612:84:170;;;22647:21:644;22704:1;22684:18;;;22677:29;-1:-1:-1;;;22722:18:644;;;22715:32;22764:18;;3612:84:170;22463:325:644;3612:84:170;3711:28;3742:14;:12;:14::i;:::-;:40;;:29;3783:17;3799:1;3783:13;:17;:::i;:::-;3742:59;;;;;;;;;;;:73;;;3711:104;;3856:11;;3868:1;3856:14;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:33;;;3833:20;:56;3829:123;;;3909:28;;-1:-1:-1;;;3909:28:170;;22995:2:644;3909:28:170;;;22977:21:644;23034:2;23014:18;;;23007:30;-1:-1:-1;;;23053:18:644;;;23046:48;23111:18;;3909:28:170;22793:342:644;3829:123:170;4028:11;;4040:1;4028:14;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;3966;:12;:14::i;:::-;:40;;:29;4007:17;4023:1;4007:13;:17;:::i;:::-;3966:59;;;;;;;;;;;:76;;;;;;:::i;:::-;;;;4132:20;4056:14;:12;:14::i;:::-;:40;;:29;4097:17;4113:1;4097:13;:17;:::i;:::-;4056:59;;;;;;;;;;;-1:-1:-1;4056:59:170;:73;;:96;4197:11;;4209:1;4197:14;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:29;;-1:-1:-1;3593:3:170;;-1:-1:-1;3593:3:170;;;:::i;:::-;;;;3549:688;;;;4777:22;4773:476;;;4832:18;4815:144;4856:13;4852:1;:17;4815:144;;;4901:14;:12;:14::i;:::-;:29;:43;;;:40;;;;:43;;;;;4894:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4894:50:170;;;;;;;4901:29;4894:50;:::i;:::-;;;4871:3;;;;;:::i;:::-;;;;4815:144;;;;4773:476;;;4993:39;;;4989:250;;;5069:11;5052:173;5093:18;5089:1;:22;5052:173;;;5147:14;:12;:14::i;:::-;:40;;:29;5188:17;5204:1;5188:13;:17;:::i;:::-;5147:59;;;;;;;;;;;-1:-1:-1;5147:59:170;;;5140:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5140:66:170;;;5147:59;5140:66;;;;-1:-1:-1;5140:66:170;:::i;:::-;;;5113:3;;;;;:::i;:::-;;;;5052:173;;;;4989:250;5264:59;5287:11;;5300:22;5264:59;;;;;;;;:::i;:::-;;;;;;;;2585:2745;;;;2435:2895;;;:::o;1168:136:167:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1260:21:167;:19;:21::i;:::-;1253:44;;;;;;;;;;;-1:-1:-1;;;;;1253:44:167;;;;;;;;;;;-1:-1:-1;;;1253:44:167;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1253:44:167;;;;;;;1168:136;-1:-1:-1;1168:136:167:o;1155:1217:170:-;1408:85;1421:9;1432;1443;1454:14;1470:15;1487:5;1408:12;:85::i;:::-;1504:25;1532:27;:25;:27::i;:::-;1504:55;;1570:103;1582:17;1601:16;:14;:16::i;:::-;1619:9;1630;1641:14;1657:15;1570:11;:103::i;:::-;;1795:9;1718:14;:12;:14::i;:::-;:29;:59;;;:40;;;;:59;;;;;:73;;;:86;;:73;;:29;:86;;;;;:::i;:::-;;;;-1:-1:-1;1906:9:170;;-1:-1:-1;1814:14:170;:12;:14::i;:::-;:29;:70;;;:51;;;;:70;;;;;;1885:16;:14;:16::i;:::-;-1:-1:-1;;;;;1814:88:170;-1:-1:-1;;;;;1814:88:170;;;;;;;;;;;;;:101;;;;;;;:::i;:::-;;;;-1:-1:-1;1972:70:170;;-1:-1:-1;2001:1:170;2005:9;2016;2027:14;1972:20;:70::i;:::-;2101:20;2124:44;2147:9;2158;2124:22;:44::i;:::-;2101:67;;2235:9;-1:-1:-1;;;;;2184:86:170;2217:16;:14;:16::i;:::-;-1:-1:-1;;;;;2184:86:170;2198:17;2184:86;2246:12;2260:9;2184:86;;;;;;14691:25:644;;;14747:2;14732:18;;14725:34;14679:2;14664:18;;14517:248;2184:86:170;;;;;;;;2281:84;1398:974;;1155:1217;;;;;;:::o;1353:104:178:-;1400:7;1426:17;:15;:17::i;1607:188:168:-;1684:20;:18;:20::i;:::-;1679:76;;1720:24;;-1:-1:-1;;;1720:24:168;;;;;;;:::i;1679:76::-;1765:23;1783:4;1765:17;:23::i;7990:183:24:-;8046:13;8071:32;8106:31;:29;:31::i;:::-;8071:66;;8154:4;:12;;8147:19;;;;;:::i;4948:288:184:-;5095:20;:18;:20::i;:::-;5090:76;;5131:24;;-1:-1:-1;;;5131:24:184;;;;;;;:::i;5090:76::-;5176:53;5202:8;5212:10;5224:4;5176:25;:53::i;2210:582:169:-;2292:25;2329;2357:23;:21;:23::i;:::-;:37;:47;;;;;;;;;;;2329:75;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2418:12;:19;2441:1;2418:24;2414:82;;;2458:27;;-1:-1:-1;;;2458:27:169;;29547:2:644;2458:27:169;;;29529:21:644;29586:2;29566:18;;;29559:30;-1:-1:-1;;;29605:18:644;;;29598:47;29662:18;;2458:27:169;29345:341:644;2414:82:169;2507:25;2534:22;2571:12;2560:42;;;;;;;;;;;;:::i;:::-;2506:96;;;;2634:34;2649:12;2663:4;;2634:14;:34::i;:::-;2613:56;;2753:14;2715:11;2728:4;;2734:13;2698:50;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2688:61;;;;;;:79;2680:105;;;;-1:-1:-1;;;2680:105:169;;31131:2:644;2680:105:169;;;31113:21:644;31170:2;31150:18;;;31143:30;-1:-1:-1;;;31189:18:644;;;31182:43;31242:18;;2680:105:169;30929:337:644;2680:105:169;2319:473;;;2210:582;;;;;:::o;1271:147::-;1333:12;1364:23;:21;:23::i;:::-;:37;:47;;;;;;;;;;;1357:54;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1271:147;;;:::o;9763:364:24:-;9857:32;9892:31;:29;:31::i;:::-;9857:66;;9950:12;:10;:12::i;:::-;-1:-1:-1;;;;;9938:24:24;:8;-1:-1:-1;;;;;9938:24:24;;9934:54;;;9971:17;;-1:-1:-1;;;9971:17:24;;;;;;;;;;;9934:54;10049:8;9999:4;:23;;:37;10023:12;:10;:12::i;:::-;-1:-1:-1;;;;;9999:37:24;;;;;;;;;;;;;;;;;-1:-1:-1;9999:37:24;;;:47;;;;;;;;;;;;:58;;-1:-1:-1;;9999:58:24;;;;;;;;;;;10087:12;:10;:12::i;:::-;-1:-1:-1;;;;;10072:48:24;;10111:8;10072:48;;;;661:14:644;654:22;636:41;;624:2;609:18;;496:187;10072:48:24;;;;;;;;9847:280;9763:364;;:::o;12494:223:383:-;12538:7;12557:32;12592:31;:29;:31::i;:::-;12664:18;;:36;-1:-1:-1;;12494:223:383:o;8579:270:170:-;8698:29;8767:14;:12;:14::i;:::-;:29;:65;;;:51;;:65;;;;;;;;-1:-1:-1;;;;;8767:75:170;;;;;;;;-1:-1:-1;8767:75:170;;;;8579:270::o;3094:180:184:-;3159:7;3168:6;3194:17;:15;:17::i;:::-;:34;-1:-1:-1;;;;;3194:34:184;3237:17;:15;:17::i;:::-;:28;3186:81;;-1:-1:-1;;;3237:28:184;;;;;;-1:-1:-1;3186:81:184;-1:-1:-1;3094:180:184:o;10973:381:24:-;11134:28;11144:4;11150:2;11154:7;11134:9;:28::i;:::-;11176:15;:2;-1:-1:-1;;;;;11176:13:24;;:15::i;:::-;11172:176;;;11210:56;11241:4;11247:2;11251:7;11260:5;11210:30;:56::i;:::-;11205:143;;11293:40;;-1:-1:-1;;;11293:40:24;;;;;;;;;;;11205:143;10973:381;;;;:::o;1865:871:167:-;2010:39;2052:20;:18;:20::i;:::-;2010:62;-1:-1:-1;2117:29:167;2087:16;:26;;;:59;;;;;;;;:::i;:::-;;2083:647;;;2170:9;2183:1;2170:14;2162:41;;;;-1:-1:-1;;;2162:41:167;;31473:2:644;2162:41:167;;;31455:21:644;31512:2;31492:18;;;31485:30;-1:-1:-1;;;31531:18:644;;;31524:44;31585:18;;2162:41:167;31271:338:644;2162:41:167;2233:38;;2225:65;;-1:-1:-1;;;2225:65:167;;;;;3147:25:644;;;-1:-1:-1;;;;;2225:80:167;;;;:55;;;;3120:18:644;;2225:65:167;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2225:80:167;;2217:99;;;;-1:-1:-1;;;2217:99:167;;32072:2:644;2217:99:167;;;32054:21:644;32111:1;32091:18;;;32084:29;-1:-1:-1;;;32129:18:644;;;32122:36;32175:18;;2217:99:167;31870:329:644;2217:99:167;2083:647;;;2367:30;2337:16;:26;;;:60;;;;;;;;:::i;:::-;;2333:397;;;2444:24;;;;2491:32;;;2483:61;;;;-1:-1:-1;;;2483:61:167;;32406:2:644;2483:61:167;;;32388:21:644;32445:2;32425:18;;;32418:30;-1:-1:-1;;;32464:18:644;;;32457:46;32520:18;;2483:61:167;32204:340:644;2483:61:167;2592:38;;2583:81;;-1:-1:-1;;;2583:81:167;;2668:9;;-1:-1:-1;;;;;2583:58:167;;;;:81;;2642:11;;2655:8;;2583:81;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:94;;2558:161;;;;-1:-1:-1;;;2558:161:167;;32940:2:644;2558:161:167;;;32922:21:644;32979:1;32959:18;;;32952:29;-1:-1:-1;;;32997:18:644;;;32990:38;33045:18;;2558:161:167;32738:331:644;2558:161:167;2399:331;2000:736;1865:871;;;:::o;7767:473:170:-;7825:7;7862:9;7921:14;:12;:14::i;:::-;:35;;;7874:14;:12;:14::i;:::-;:44;:82;;;;:::i;:::-;7862:94;;7844:358;7974:14;:12;:14::i;:::-;:44;7970:48;;7844:358;;;8083:14;:12;:14::i;:::-;:40;;:29;8124:5;8128:1;8124;:5;:::i;:::-;8083:47;;;;;;;;;;;:62;;;8064:15;:81;8060:132;;8172:5;8176:1;8172;:5;:::i;:::-;8165:12;;;7767:473;:::o;8060:132::-;8032:3;;;;:::i;:::-;;;;7844:358;;;-1:-1:-1;8212:21:170;;-1:-1:-1;;;8212:21:170;;33547:2:644;8212:21:170;;;33529::644;33586:2;33566:18;;;33559:30;-1:-1:-1;;;33605:18:644;;;33598:41;33656:18;;8212:21:170;33345:335:644;3841:402:383;3907:13;3933:15;3954:21;3966:8;3954:11;:21::i;:::-;3932:43;;;3985:22;4010:21;4022:8;4010:11;:21::i;:::-;3985:46;;4046:25;4063:7;4046:16;:25::i;:::-;4042:195;;;4118:8;4101:31;;;;;;;;:::i;:::-;;;;;;;;;;;;;4087:46;;;;3841:402;;;:::o;4042:195::-;4195:8;4205:19;:8;:17;:19::i;:::-;4178:47;;;;;;;;;:::i;13226:208::-;13273:7;13292:43;13338:53;:51;:53::i;5603:415::-;5674:25;5719:35;3006:24;5741:12;:10;:12::i;:::-;5719:8;:35::i;:::-;5711:59;;;;-1:-1:-1;;;5711:59:383;;34806:2:644;5711:59:383;;;34788:21:644;34845:2;34825:18;;;34818:30;-1:-1:-1;;;34864:18:644;;;34857:41;34915:18;;5711:59:383;34604:335:644;5711:59:383;5780:15;5798:25;5816:6;5798:17;:25::i;:::-;5780:43;;5847:27;5860:7;5869:4;;5847:12;:27::i;:::-;5833:41;;5885:30;5903:7;5885:30;;;;;;;;;;;;:17;:30::i;:::-;5925:33;5937:7;5946:11;5925;:33::i;:::-;5991:6;5974:37;5999:11;5974:37;;;;;;:::i;:::-;;;;;;;;5701:317;5603:415;;;;;:::o;4926:567::-;5073:7;5092:14;5109:23;:21;:23::i;:::-;5092:40;-1:-1:-1;5146:16:383;;5142:278;;5179:25;;5232:35;;;;5243:5;5232:35;:::i;:::-;5178:89;;;;5285:12;:19;5308:1;5285:24;;:48;;;;-1:-1:-1;5313:20:383;;;5285:48;5281:129;;;5353:42;5371:16;5380:7;5371:6;:16;:::i;:::-;5389:5;;5353:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5353:17:383;;-1:-1:-1;;;5353:42:383:i;:::-;5164:256;;5142:278;5437:49;5452:7;5461:17;;5480:5;;5437:14;:49::i;:::-;5430:56;4926:567;-1:-1:-1;;;;;;;4926:567:383:o;1453:191:181:-;1513:7;1522:6;1548:21;:19;:21::i;:::-;:42;-1:-1:-1;;;;;1548:42:181;1599:21;:19;:21::i;755:172:170:-;802:7;811;838:14;:12;:14::i;:::-;:44;884:14;:12;:14::i;:::-;:35;;;830:90;;884:35;;-1:-1:-1;755:172:170;-1:-1:-1;755:172:170:o;3284:1283:169:-;3477:11;;3643:4;3637:11;;3737:19;;;3758:2;3733:28;3720:42;;;3808:22;;;3637:11;3460:14;3904:657;3928:6;3924:1;:10;3904:657;;;4010:12;4052:3;;4057:1;4035:24;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;4035:24:169;;;;;;;;;4025:35;;4035:24;4025:35;;;;4248:21;;;;;4242:28;4336:13;4506:23;;;;;4499:38;3936:7;;-1:-1:-1;4262:1:169;3936:7;:::i;:::-;;;3904:657;;;;3398:1169;3284:1283;;;;;:::o;2173:138:168:-;2234:13;2266:26;:24;:26::i;:::-;2259:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2173:138;:::o;10193:243:24:-;10290:4;10306:32;10341:31;:29;:31::i;:::-;-1:-1:-1;;;;;10389:30:24;;;;;;;:23;;;;;:30;;;;;;;;:40;;;;;;;;;;-1:-1:-1;;10389:40:24;;;;;10193:243::o;7473:353:383:-;7552:42;2690:4;7581:12;:10;:12::i;7552:42::-;7544:65;;;;-1:-1:-1;;;7544:65:383;;35879:2:644;7544:65:383;;;35861:21:644;35918:2;35898:18;;;35891:30;-1:-1:-1;;;35937:18:644;;;35930:40;35987:18;;7544:65:383;35677:334:644;7544:65:383;7620:43;7666:53;:51;:53::i;:::-;7729:37;;;7781:38;;3147:25:644;;;7729:37:383;;-1:-1:-1;7781:38:383;;3135:2:644;3120:18;7781:38:383;;;;;;;;7534:292;7473:353;:::o;4141:291:24:-;4234:4;-1:-1:-1;;;;;;4269:40:24;;-1:-1:-1;;;4269:40:24;;:104;;-1:-1:-1;;;;;;;4325:48:24;;-1:-1:-1;;;4325:48:24;4269:104;:156;;;-1:-1:-1;;;;;;;;;;947:40:22;;;4389:36:24;839:155:22;12078:142:383;12148:4;12171:42;12148:4;12200:12;:10;:12::i;3421:141:167:-;690:66;;12802:108:383:o;1628:205:24:-;694:66;;1628:205::o;2275:141:182:-;2329:36;2384:25;:23;:25::i;11600:258:24:-;11657:4;11673:32;11708:31;:29;:31::i;:::-;11673:66;-1:-1:-1;11796:18:24;;11786:28;;11756:95;;;;-1:-1:-1;11819:25:24;;;;:16;;;:25;;;;;:32;-1:-1:-1;;;11819:32:24;;;;11818:33;11756:95;11749:102;11600:258;-1:-1:-1;;;11600:258:24:o;14637:169:383:-;14735:7;14761:38;:36;:38::i;21090:270:24:-;21200:32;21235:31;:29;:31::i;:::-;21276:29;;;;:20;;;:29;;;;;;:34;;-1:-1:-1;;;;;;21276:34:24;-1:-1:-1;;;;;21276:34:24;;;;;;;;;21325:28;;21276:20;;-1:-1:-1;21276:29:24;;:34;;21325:28;;;;;;21276:29;21325:28;21190:170;21090:270;;;:::o;1921:208:178:-;1980:18;2001:17;:15;:17::i;:::-;:24;-1:-1:-1;;;;;2001:24:178;;-1:-1:-1;2062:9:178;2035:17;:15;:17::i;:::-;:36;;-1:-1:-1;;;;;;2035:36:178;-1:-1:-1;;;;;2035:36:178;;;;;;2087:35;;;;;;;;;;;-1:-1:-1;;2087:35:178;1970:159;1921:208;:::o;8078:415:383:-;8148:23;8174:16;:14;:16::i;:::-;8148:42;;8200:26;8229:13;:11;:13::i;:::-;8200:42;;8295:23;:21;:23::i;:::-;8261:30;8282:9;8261:18;:30;:::i;:::-;:57;;8253:77;;;;-1:-1:-1;;;8253:77:383;;36218:2:644;8253:77:383;;;36200:21:644;36257:1;36237:18;;;36230:29;-1:-1:-1;;;36275:18:644;;;36268:37;36322:18;;8253:77:383;36016:330:644;8253:77:383;8361:20;;;:73;;-1:-1:-1;8419:15:383;8385:30;8406:9;8385:18;:30;:::i;:::-;:49;;8361:73;8340:146;;;;-1:-1:-1;;;8340:146:383;;36553:2:644;8340:146:383;;;36535:21:644;36592:2;36572:18;;;36565:30;-1:-1:-1;;;36611:18:644;;;36604:56;36677:18;;8340:146:383;36351:350:644;14520:111:383;14586:7;14612:12;:10;:12::i;2789:573:167:-;2933:39;2975:20;:18;:20::i;:::-;2933:62;-1:-1:-1;3040:29:167;3010:16;:26;;;:59;;;;;;;;:::i;:::-;;3006:350;;;3100:38;;3085:69;;-1:-1:-1;;;3085:69:167;;;;;3147:25:644;;;-1:-1:-1;;;;;3085:59:167;;;;;;3120:18:644;;3085:69:167;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3006:350;;;3205:30;3175:16;:26;;;:60;;;;;;;;:::i;:::-;;3171:185;;;3267:38;;3251:94;;-1:-1:-1;;;3251:94:167;;-1:-1:-1;;;;;36926:32:644;;;3251:94:167;;;36908:51:644;36975:18;;;36968:34;;;37018:18;;;37011:34;;;3251:60:167;;;;;;36881:18:644;;3251:94:167;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8872:1136:383;9072:19;9068:103;;9115:9;:14;9107:33;;;;-1:-1:-1;;;9107:33:383;;37258:2:644;9107:33:383;;;37240:21:644;37297:1;37277:18;;;37270:29;-1:-1:-1;;;37315:18:644;;;37308:36;37361:18;;9107:33:383;37056:329:644;9068:103:383;9182:28;9212:21;9237:20;:18;:20::i;:::-;9181:76;;-1:-1:-1;9181:76:383;-1:-1:-1;9268:21:383;-1:-1:-1;;;;;9292:35:383;;;:84;;9355:21;9292:84;;;9330:22;:20;:22::i;:::-;9268:108;-1:-1:-1;9387:18:383;9408:33;9427:14;9408:16;:33;:::i;:::-;9387:54;-1:-1:-1;9451:20:383;3117:6;9475:27;;;;9387:54;9475:27;:::i;:::-;9474:39;;;;:::i;:::-;9451:62;-1:-1:-1;9524:18:383;-1:-1:-1;;;;;9556:45:383;;408:42:284;9556:45:383;9552:176;;;-1:-1:-1;9633:9:383;:23;;9552:176;;;-1:-1:-1;9703:9:383;:14;9552:176;9745:13;9737:43;;;;-1:-1:-1;;;9737:43:383;;37592:2:644;9737:43:383;;;37574:21:644;37631:2;37611:18;;;37604:30;-1:-1:-1;;;37650:18:644;;;37643:47;37707:18;;9737:43:383;37390:341:644;9737:43:383;9791:97;9828:9;9839:12;:10;:12::i;:::-;9853:20;9875:12;9791:36;:97::i;:::-;9898:103;9935:9;9946:12;:10;:12::i;:::-;9960:13;9975:25;9988:12;9975:10;:25;:::i;:::-;9898:36;:103::i;:::-;9058:950;;;;;;8872:1136;;;;:::o;11937:102:24:-;12005:27;12015:2;12019:8;12005:27;;;;;;;;;;;;:9;:27::i;2465:521:181:-;2593:6;2575:15;:24;2571:80;;;2615:25;;-1:-1:-1;;;2615:25:181;;;;;;;:::i;2571:80::-;-1:-1:-1;;;;;2664:35:181;;2660:93;;2715:27;;-1:-1:-1;;;2715:27:181;;;;;;;:::i;2660:93::-;2809:15;2763:21;:19;:21::i;:::-;:62;;;;;;;-1:-1:-1;;;2763:62:181;-1:-1:-1;;;;2763:62:181;;;;;;;;;2880:21;2835;:19;:21::i;:::-;:66;;-1:-1:-1;;;;;;2835:66:181;-1:-1:-1;;;;;2835:66:181;;;;;;2917:62;;3147:25:644;;;2917:62:181;;;;;;3135:2:644;3120:18;2917:62:181;;;;;;;;2465:521;;:::o;9876:120:170:-;9923:29;9971:18;:16;:18::i;898:906:286:-;1019:4;;1067;1019;;1109:567;1133:5;:12;1129:1;:16;1109:567;;;1166:10;1175:1;1166:10;;:::i;:::-;;;1190:20;1213:5;1219:1;1213:8;;;;;;;;:::i;:::-;;;;;;;1190:31;;1256:12;1240;:28;1236:430;;1391:44;;;;;;38583:19:644;;;38618:12;;;38611:28;;;38655:12;;1391:44:286;;;;;;;;;;;;1381:55;;;;;;1366:70;;1236:430;;;1578:44;;;;;;38583:19:644;;;38618:12;;;38611:28;;;38655:12;;1578:44:286;;;;;;;;;;;;1568:55;;;;;;1553:70;;1650:1;1641:10;;;;;:::i;:::-;;;1236:430;-1:-1:-1;1147:3:286;;;;:::i;:::-;;;;1109:567;;;-1:-1:-1;1769:20:286;;;;;-1:-1:-1;;;;898:906:286:o;15961:2184:24:-;16071:32;16106:31;:29;:31::i;:::-;16071:66;;16148:35;16186:21;16199:7;16186:12;:21::i;:::-;16148:59;;16244:4;-1:-1:-1;;;;;16222:26:24;:13;:18;;;-1:-1:-1;;;;;16222:26:24;;16218:67;;16257:28;;-1:-1:-1;;;16257:28:24;;;;;;;;;;;16218:67;16296:22;16338:4;-1:-1:-1;;;;;16322:20:24;:12;:10;:12::i;:::-;-1:-1:-1;;;;;16322:20:24;;:72;;;;16358:36;16375:4;16381:12;:10;:12::i;16358:36::-;16322:124;;;;16434:12;:10;:12::i;:::-;-1:-1:-1;;;;;16410:36:24;:20;16422:7;16410:11;:20::i;:::-;-1:-1:-1;;;;;16410:36:24;;16322:124;16296:151;;16463:17;16458:66;;16489:35;;-1:-1:-1;;;16489:35:24;;;;;;;;;;;16458:66;-1:-1:-1;;;;;16538:16:24;;16534:52;;16563:23;;-1:-1:-1;;;16563:23:24;;;;;;;;;;;16534:52;16597:43;16619:4;16625:2;16629:7;16638:1;16597:21;:43::i;:::-;16702:35;16719:1;16723:7;16732:4;16702:8;:35::i;:::-;-1:-1:-1;;;;;17027:23:24;;;;;;;:17;;;:23;;;;;;;;:36;;-1:-1:-1;;;;;;17027:36:24;;;-1:-1:-1;;;;;17027:36:24;;;-1:-1:-1;;17027:36:24;;;;;;;17077:21;;;;;;;;;:34;;;;;;;;-1:-1:-1;17077:34:24;;;;;;;;;;;17160:25;;;:16;;;:25;;;;;;17199:18;;-1:-1:-1;;;;;;17231:49:24;;;;-1:-1:-1;;;17264:15:24;17231:49;;;;;;;;;;17550:11;;17609:29;;;;;17656:13;;17160:25;;17609:29;;17656:13;17652:382;;17863:18;;17848:33;;17844:176;;17905:20;;17973:28;;;;-1:-1:-1;;;;;17947:54:24;-1:-1:-1;;;17947:54:24;-1:-1:-1;;;;;;17947:54:24;;;-1:-1:-1;;;;;17905:20:24;;17947:54;;;;17844:176;17003:1041;;;18078:7;18074:2;-1:-1:-1;;;;;18059:27:24;18068:4;-1:-1:-1;;;;;18059:27:24;-1:-1:-1;;;;;;;;;;;18059:27:24;;;;;;;;;18096:42;16061:2084;;;15961:2184;;;:::o;5837:159:166:-;359:66;;12802:108:383:o;1187:129:175:-;1243:7;1269:18;:16;:18::i;18522:2457:24:-;18601:32;18636:31;:29;:31::i;:::-;18601:66;;18678:35;18716:21;18729:7;18716:12;:21::i;:::-;18763:18;;18678:59;;-1:-1:-1;18792:284:24;;;;18825:22;18867:4;-1:-1:-1;;;;;18851:20:24;:12;:10;:12::i;:::-;-1:-1:-1;;;;;18851:20:24;;:76;;;;18891:36;18908:4;18914:12;:10;:12::i;18891:36::-;18851:132;;;;18971:12;:10;:12::i;:::-;-1:-1:-1;;;;;18947:36:24;:20;18959:7;18947:11;:20::i;:::-;-1:-1:-1;;;;;18947:36:24;;18851:132;18825:159;;19004:17;18999:66;;19030:35;;-1:-1:-1;;;19030:35:24;;;;;;;;;;;18999:66;18811:265;18792:284;19086:51;19108:4;19122:1;19126:7;19135:1;19086:21;:51::i;:::-;19199:35;19216:1;19220:7;19229:4;19199:8;:35::i;:::-;-1:-1:-1;;;;;19558:23:24;;;19524:31;19558:23;;;:17;;;:23;;;;;;;;19595:24;;-1:-1:-1;;;;;;;;;;19595:24:24;;;;;;;;;-1:-1:-1;;;;;;19595:24:24;;;;19633:29;;;;;19618:1;19633:29;;;;;;;;-1:-1:-1;;;;;;19633:29:24;;;;;;;;;;19792:25;;;:16;;;:25;;;;;;19831:20;;-1:-1:-1;;;;19898:15:24;19865:49;;;-1:-1:-1;;;19865:49:24;-1:-1:-1;;;;;;19865:49:24;;;;;;;;;;19928:22;-1:-1:-1;;;19928:22:24;;;20216:11;;;20275:29;;;;;20322:13;;19558:23;;20275:29;;20322:13;20318:382;;20529:18;;20514:33;;20510:176;;20571:20;;20639:28;;;;-1:-1:-1;;;;;20613:54:24;-1:-1:-1;;;20613:54:24;-1:-1:-1;;;;;;20613:54:24;;;-1:-1:-1;;;;;20571:20:24;;20613:54;;;;20510:176;-1:-1:-1;;20725:35:24;;20752:7;;-1:-1:-1;20748:1:24;;-1:-1:-1;;;;;;20725:35:24;;;-1:-1:-1;;;;;;;;;;;20725:35:24;20748:1;;20725:35;-1:-1:-1;;20943:17:24;;;;:19;;;;;;;-1:-1:-1;;18522:2457:24:o;5019:147:169:-;404:66;;12802:108:383:o;5766:129:184:-;372:66;;12802:108:383:o;4061:370:184:-;4180:6;4166:11;:20;4162:76;;;4202:25;;-1:-1:-1;;;4202:25:184;;;;;;;:::i;4162:76::-;4285:17;4248;:15;:17::i;:::-;:54;;-1:-1:-1;;;;;;4248:54:184;-1:-1:-1;;;;;4248:54:184;;;;;;;;;;4350:11;4312:17;:15;:17::i;:::-;:50;;;;;;;-1:-1:-1;;;4312:50:184;-1:-1:-1;;;;4312:50:184;;;;;;;;;4378:46;;3147:25:644;;;-1:-1:-1;;;;;4378:46:184;;;;;3135:2:644;3120:18;4378:46:184;3001:177:644;6239:1266:24;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;6369:31:24;:29;:31::i;:::-;6334:66;-1:-1:-1;6426:7:24;6524:18;;6517:25;;6513:928;;;6566:31;6600:22;;;:16;;;:22;;;;;;;;;6566:56;;;;;;;;;-1:-1:-1;;;;;6566:56:24;;;;-1:-1:-1;;;6566:56:24;;-1:-1:-1;;;;;6566:56:24;;;;;;;;-1:-1:-1;;;6566:56:24;;;;;;;;;;;;;;6644:779;;6697:14;;-1:-1:-1;;;;;6697:28:24;;6693:107;;6764:9;6239:1266;-1:-1:-1;;;;6239:1266:24:o;6693:107::-;-1:-1:-1;;;7160:6:24;7208:22;;;;:16;;;:22;;;;;;;;;7196:34;;;;;;;;;-1:-1:-1;;;;;7196:34:24;;;;;-1:-1:-1;;;7196:34:24;;-1:-1:-1;;;;;7196:34:24;;;;;;;;-1:-1:-1;;;7196:34:24;;;;;;;;;;;;;7264:28;7260:115;;7335:9;6239:1266;-1:-1:-1;;;;6239:1266:24:o;7260:115::-;7117:284;;;6544:897;6513:928;7467:31;;-1:-1:-1;;;7467:31:24;;;;;;;;;;;1936:287:182;-1:-1:-1;;;;;2019:28:182;;2015:86;;2063:27;;-1:-1:-1;;;2063:27:182;;;;;;;:::i;2015:86::-;2144:14;2110:21;:19;:21::i;:::-;:48;;-1:-1:-1;;;;;;2110:48:182;-1:-1:-1;;;;;2110:48:182;;;;;;2173:43;;;;;;;;-1:-1:-1;;2173:43:182;1936:287;:::o;8553:229:383:-;8747:28;8765:9;8747:17;:28::i;10061:326::-;10188:20;10224:32;10259:31;:29;:31::i;:::-;10315:18;;;-1:-1:-1;10224:66:383;-1:-1:-1;10343:37:383;10353:3;10358:21;10343:9;:37::i;:::-;10214:173;10061:326;;;;:::o;2177:129:178:-;2227:32;2278:21;:19;:21::i;1877:239:168:-;1943:21;1967:26;:24;:26::i;:::-;1943:62;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2056:4;2015:26;:24;:26::i;:::-;:45;;;;;;;;:::i;:::-;;2076:33;2095:7;2104:4;2076:33;;;;;;;:::i;5338:380:184:-;5485:6;5478:4;:13;5474:69;;;5507:25;;-1:-1:-1;;;5507:25:184;;;;;;;:::i;5474:69::-;5603:49;;;;;;;;5628:10;-1:-1:-1;;;;;5603:49:184;;;;;5645:4;5603:49;;;5553:17;:15;:17::i;:::-;:47;;;;:37;;;;:47;;;;;;;;;:99;;;;-1:-1:-1;;;;;;5553:99:184;-1:-1:-1;;;;;5553:99:184;;;;;;;;;;;;;;;;5668:43;3147:25:644;;;5668:43:184;;;;5553:47;;5668:43;;3120:18:644;5668:43:184;3001:177:644;1137:320:288;-1:-1:-1;;;;;1427:19:288;;:23;;;1137:320::o;21841:650:24:-;21999:4;22035:2;-1:-1:-1;;;;;22019:36:24;;22056:12;:10;:12::i;:::-;22070:4;22076:7;22085:5;22019:72;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;22019:72:24;;;;;;;;-1:-1:-1;;22019:72:24;;;;;;;;;;;;:::i;:::-;;;22015:470;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;22250:13:24;;22246:229;;22295:40;;-1:-1:-1;;;22295:40:24;;;;;;;;;;;22246:229;22435:6;22429:13;22420:6;22416:2;22412:15;22405:38;22015:470;-1:-1:-1;;;;;;22137:55:24;-1:-1:-1;;;22137:55:24;;-1:-1:-1;22015:470:24;21841:650;;;;;;:::o;2867:499:166:-;2929:15;2946:13;2971:25;2999:17;:15;:17::i;:::-;2971:45;;3026:24;3053:27;:25;:27::i;:::-;3026:63;;;;;;;;;;;;;;;;;;;;3053:36;3026:63;;;3053:36;3026:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3105:9;3100:224;3124:17;3120:1;:21;3100:224;;;3180:7;3188:1;3180:10;;;;;;;;:::i;:::-;;;;;;;3169:8;:21;3165:149;;;3218:1;3210:9;;3247:7;3255:1;3247:10;;;;;;;;:::i;:::-;;;;;;;3237:20;;3276:23;;;2867:499;;;:::o;3165:149::-;3143:6;3148:1;3143:6;;:::i;:::-;;;3100:224;;;-1:-1:-1;3334:25:166;;-1:-1:-1;;;3334:25:166;;40016:2:644;3334:25:166;;;39998:21:644;40055:2;40035:18;;;40028:30;-1:-1:-1;;;40074:18:644;;;40067:45;40129:18;;3334:25:166;39814:339:644;3480:446:166;3542:13;3567:25;3595:17;:15;:17::i;:::-;3567:45;;3622:24;3649:27;:25;:27::i;:::-;3622:63;;;;;;;;;;;;;;;;;;;;3649:36;3622:63;;;3649:36;3622:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3701:9;3696:189;3720:17;3716:1;:21;3696:189;;;3776:7;3784:1;3776:10;;;;;;;;:::i;:::-;;;;;;;3765:8;:21;3761:114;;;3813:27;:25;:27::i;:::-;:35;;:47;3849:7;3857:1;3849:10;;;;;;;;:::i;:::-;;;;;;;3813:47;;;;;;;;;;;3806:54;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3480:446;;;:::o;3761:114::-;3739:6;3744:1;3739:6;;:::i;:::-;;;3696:189;;305:703:292;361:13;578:10;574:51;;-1:-1:-1;;604:10:292;;;;;;;;;;;;-1:-1:-1;;;604:10:292;;;;;305:703::o;574:51::-;649:5;634:12;688:75;695:9;;688:75;;720:8;;;;:::i;:::-;;-1:-1:-1;742:10:292;;-1:-1:-1;750:2:292;742:10;;:::i;:::-;;;688:75;;;772:19;804:6;-1:-1:-1;;;;;794:17:292;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;794:17:292;;772:39;;821:150;828:10;;821:150;;854:11;864:1;854:11;;:::i;:::-;;-1:-1:-1;922:10:292;930:2;922:5;:10;:::i;:::-;909:24;;:2;:24;:::i;:::-;896:39;;879:6;886;879:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;879:56:292;;;;;;;;-1:-1:-1;949:11:292;958:2;949:11;;:::i;:::-;;;821:150;;558:253:384;369:66;;558:253::o;14316:198:383:-;14385:4;14482:19;;;559:66:179;14482:19:383;;;;;;;;-1:-1:-1;;;;;14482:25:383;;;;;;;;;;;;;;;14316:198::o;1481:164:169:-;1624:14;1574:23;:21;:23::i;:::-;:37;:47;;;;;;;;;;:64;;;;:47;;:64;;;;;;:::i;4566:302:166:-;4657:27;:25;:27::i;:::-;:49;;;;:39;;;;;:49;;;;;;;;4656:50;4648:75;;;;-1:-1:-1;;;4648:75:166;;40477:2:644;4648:75:166;;;40459:21:644;40516:2;40496:18;;;40489:30;-1:-1:-1;;;40535:18:644;;;40528:42;40587:18;;4648:75:166;40275:336:644;4648:75:166;4781:8;4733:27;:25;:27::i;:::-;:35;;:45;4769:8;4733:45;;;;;;;;;;;:56;;;;;;;;;;;;:::i;:::-;;4804:57;4824:26;4841:8;4824:16;:26::i;:::-;4804:57;;;14691:25:644;;;14747:2;14732:18;;14725:34;;;14664:18;4804:57:166;14517:248:644;1931:630:175;2086:15;2118:14;:12;:14::i;:::-;2113:70;;2148:24;;-1:-1:-1;;;2148:24:175;;;;;;;:::i;2113:70::-;2197:12;2193:58;;2225:15;;-1:-1:-1;;;2225:15:175;;40818:2:644;2225:15:175;;;40800:21:644;40857:1;40837:18;;;40830:29;-1:-1:-1;;;40875:18:644;;;40868:35;40920:18;;2225:15:175;40616:328:644;2193:58:175;2261:15;2279:18;:16;:18::i;:::-;:40;;;2261:58;;2384:55;2403:7;2412;2421:17;;2384:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2384:18:175;;-1:-1:-1;;;2384:55:175:i;:::-;2331:18;:16;:18::i;:::-;2330:109;;;;;-1:-1:-1;2472:7:175;2455:74;2501:1;2481:17;2491:7;2472;2481:17;:::i;:::-;:21;;;;:::i;:::-;2504:17;;2523:5;;2455:74;;;;;;;;;;:::i;:::-;;;;;;;;2540:14;1931:630;;;;;;;:::o;3038:141:181:-;429:66;;12802:108:383:o;2370:156:168:-;770:66;;12802:108:383:o;445:188:182:-;484:18;;-1:-1:-1;;312:46:182;357:1;320:33;312:46;:::i;:::-;301:58;;;;;;3147:25:644;;3135:2;3120:18;;3001:177;301:58:182;;;;-1:-1:-1;;301:58:182;;;;;;;;;291:69;;301:58;291:69;;;;:95;;445:188;-1:-1:-1;;445:188:182:o;1538:384:173:-;1591:14;1621:30;1640:10;1621:18;:30::i;:::-;1617:299;;;-1:-1:-1;;;1823:14:173;1819:23;1806:37;1802:2;1798:46;1538:384;:::o;1617:299::-;-1:-1:-1;1895:10:173;;1538:384::o;508:385:284:-;659:12;655:49;;687:7;;655:49;-1:-1:-1;;;;;718:25:284;;408:42;718:25;714:173;;;759:37;783:3;788:7;759:23;:37::i;714:173::-;827:49;845:9;856:5;863:3;868:7;827:17;:49::i;12399:1820:24:-;12517:32;12552:31;:29;:31::i;:::-;12617:18;;12517:66;;-1:-1:-1;;;;;;12649:16:24;;12645:48;;12674:19;;-1:-1:-1;;;12674:19:24;;;;;;;;;;;12645:48;12707:13;12703:44;;12729:18;;-1:-1:-1;;;12729:18:24;;;;;;;;;;;12703:44;12758:61;12788:1;12792:2;12796:12;12810:8;12758:21;:61::i;:::-;-1:-1:-1;;;;;13090:21:24;;;;;;:17;;;:21;;;;;;;;:49;;-1:-1:-1;;;;;;13153:54:24;;-1:-1:-1;;;;;13090:49:24;;;;;;;13153:54;;;-1:-1:-1;;;;;;;;;13090:49:24;;;;;;13153:54;;;;;;;;;;;;;;;;13222:30;;;:16;;;:30;;;;;;:40;;-1:-1:-1;;;;;;13276:71:24;;;-1:-1:-1;;;13331:15:24;13276:71;;;;;;;;;;;;;13222:30;;13425:23;;;;13467:15;;:13;:15::i;:::-;13463:623;;;13502:308;13532:38;;13557:12;;-1:-1:-1;;;;;13532:38:24;;;13549:1;;-1:-1:-1;;;;;;;;;;;13532:38:24;13549:1;;13532:38;13597:69;13636:1;13640:2;13644:14;;;;;;13660:5;13597:30;:69::i;:::-;13592:172;;13701:40;;-1:-1:-1;;;13701:40:24;;;;;;;;;;;13592:172;13805:3;13790:12;:18;13502:308;;13872:18;;:34;;13868:48;;13908:8;;;13868:48;13463:623;;;13955:117;13985:40;;14010:14;;;;;-1:-1:-1;;;;;13985:40:24;;;14002:1;;-1:-1:-1;;;;;;;;;;;13985:40:24;14002:1;;13985:40;14067:3;14052:12;:18;13955:117;;13463:623;-1:-1:-1;14099:33:24;;14152:60;10973:381;533:180:170;572:18;;-1:-1:-1;;326:38:170;363:1;334:25;326:38;:::i;13731:579:383:-;14076:35;-1:-1:-1;;;;;;;;;;;14108:1:383;14076:8;:35::i;:::-;14075:36;:58;;;;-1:-1:-1;;;;;;14115:18:383;;;;14075:58;:78;;;;-1:-1:-1;;;;;;14137:16:383;;;;14075:78;14071:233;;;14174:29;-1:-1:-1;;;;;;;;;;;14198:4:383;14174:8;:29::i;:::-;14173:30;:62;;;;;14208:27;-1:-1:-1;;;;;;;;;;;14232:2:383;14208:8;:27::i;:::-;14207:28;14173:62;14169:125;;;14255:24;;-1:-1:-1;;;14255:24:383;;41662:2:644;14255:24:383;;;41644:21:644;41701:2;41681:18;;;41674:30;-1:-1:-1;;;41720:18:644;;;41713:44;41774:18;;14255:24:383;41460:338:644;2617:132:175;414:66;;12802:108:383:o;859:183:178:-;898:18;;-1:-1:-1;;662:41:178;702:1;670:28;662:41;:::i;3994:487:166:-;4061:7;4080:25;4108:17;:15;:17::i;:::-;4080:45;;4135:24;4162:27;:25;:27::i;:::-;4135:63;;;;;;;;;;;;;;;;;;;;4162:36;4135:63;;;4162:36;4135:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4214:9;4209:231;4233:17;4229:1;:21;4209:231;;;4287:7;4295:1;4287:10;;;;;;;;:::i;:::-;;;;;;;4275:8;:22;4271:159;;;4321:5;;4317:73;;4357:7;4365:5;4369:1;4365;:5;:::i;:::-;4357:14;;;;;;;;:::i;:::-;;;;;;;4350:21;;;;;3994:487;;;:::o;4317:73::-;-1:-1:-1;4414:1:166;;3994:487;-1:-1:-1;;;;3994:487:166:o;4271:159::-;4252:3;;;;:::i;:::-;;;;4209:231;;;-1:-1:-1;4449:25:166;;-1:-1:-1;;;4449:25:166;;42005:2:644;4449:25:166;;;41987:21:644;42044:2;42024:18;;;42017:30;-1:-1:-1;;;42063:18:644;;;42056:45;42118:18;;4449:25:166;41803:339:644;11852:129:383;11916:4;11939:35;3006:24;11961:12;:10;:12::i;5362:417:166:-;5512:25;;5576:24;5587:13;5576:8;:24;:::i;:::-;5566:34;;5630:7;5610:27;;5648;:25;:27::i;:::-;:50;;;;;;;:36;:50;;;;;;;;;;;5755:17;5708:27;:25;:27::i;:::-;:35;;:44;5744:7;5708:44;;;;;;;;;;;:64;;;;;;;;;;;;:::i;:::-;;5362:417;;;;;;:::o;2532:292:284:-;2714:12;2732:2;-1:-1:-1;;;;;2732:7:284;2748:5;2732:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2713:46;;;2777:7;2769:48;;;;-1:-1:-1;;;2769:48:284;;42559:2:644;2769:48:284;;;42541:21:644;42598:2;42578:18;;;42571:30;-1:-1:-1;;;42617:18:644;;;42610:58;42685:18;;2769:48:284;42357:352:644;2073:396:284;2234:3;-1:-1:-1;;;;;2225:12:284;:5;-1:-1:-1;;;;;2225:12:284;;2221:49;;;2253:7;;2221:49;-1:-1:-1;;;;;2284:22:284;;2301:4;2284:22;2280:183;;;2322:44;-1:-1:-1;;;;;2322:30:284;;2353:3;2358:7;2322:30;:44::i;2280:183::-;2397:55;-1:-1:-1;;;;;2397:34:284;;2432:5;2439:3;2444:7;2397:34;:55::i;735:205:226:-;847:86;867:5;897:23;;;922:2;926:5;874:58;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;874:58:226;;;;;;;;;;;;;;-1:-1:-1;;;;;874:58:226;-1:-1:-1;;;;;;874:58:226;;;;;;;;;;847:19;:86::i;946:241::-;1111:68;;-1:-1:-1;;;;;42972:15:644;;;1111:68:226;;;42954:34:644;43024:15;;43004:18;;;42997:43;43056:18;;;43049:34;;;1084:96:226;;1104:5;;-1:-1:-1;;;1134:27:226;42889:18:644;;1111:68:226;42714:375:644;3241:706:226;3660:23;3686:69;3714:4;3686:69;;;;;;;;;;;;;;;;;3694:5;-1:-1:-1;;;;;3686:27:226;;;:69;;;;;:::i;:::-;3769:17;;3660:95;;-1:-1:-1;3769:21:226;3765:176;;3864:10;3853:30;;;;;;;;;;;;:::i;:::-;3845:85;;;;-1:-1:-1;;;3845:85:226;;43546:2:644;3845:85:226;;;43528:21:644;43585:2;43565:18;;;43558:30;43624:34;43604:18;;;43597:62;-1:-1:-1;;;43675:18:644;;;43668:40;43725:19;;3845:85:226;43344:406:644;3827:223:288;3960:12;3991:52;4013:6;4021:4;4027:1;4030:12;3960;5202:18;5213:6;5202:10;:18::i;:::-;5194:60;;;;-1:-1:-1;;;5194:60:288;;44364:2:644;5194:60:288;;;44346:21:644;44403:2;44383:18;;;44376:30;44442:31;44422:18;;;44415:59;44491:18;;5194:60:288;44162:353:644;5194:60:288;5266:12;5280:23;5307:6;-1:-1:-1;;;;;5307:11:288;5327:5;5335:4;5307:33;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5265:75;;;;5357:51;5374:7;5383:10;5395:12;7675;7703:7;7699:516;;;-1:-1:-1;7733:10:288;7726:17;;7699:516;7844:17;;:21;7840:365;;8038:10;8032:17;8098:15;8085:10;8081:2;8077:19;8070:44;7840:365;8177:12;8170:20;;-1:-1:-1;;;8170:20:288;;;;;;;;:::i;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:131:644;-1:-1:-1;;;;;;88:32:644;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;688:203::-;783:6;836:3;824:9;815:7;811:23;807:33;804:53;;;853:1;850;843:12;804:53;-1:-1:-1;876:9:644;688:203;-1:-1:-1;688:203:644:o;896:258::-;968:1;978:113;992:6;989:1;986:13;978:113;;;1068:11;;;1062:18;1049:11;;;1042:39;1014:2;1007:10;978:113;;;1109:6;1106:1;1103:13;1100:48;;;-1:-1:-1;;1144:1:644;1126:16;;1119:27;896:258::o;1159:::-;1201:3;1239:5;1233:12;1266:6;1261:3;1254:19;1282:63;1338:6;1331:4;1326:3;1322:14;1315:4;1308:5;1304:16;1282:63;:::i;:::-;1399:2;1378:15;-1:-1:-1;;1374:29:644;1365:39;;;;1406:4;1361:50;;1159:258;-1:-1:-1;;1159:258:644:o;1422:220::-;1571:2;1560:9;1553:21;1534:4;1591:45;1632:2;1621:9;1617:18;1609:6;1591:45;:::i;1855:180::-;1914:6;1967:2;1955:9;1946:7;1942:23;1938:32;1935:52;;;1983:1;1980;1973:12;1935:52;-1:-1:-1;2006:23:644;;1855:180;-1:-1:-1;1855:180:644:o;2040:131::-;-1:-1:-1;;;;;2115:31:644;;2105:42;;2095:70;;2161:1;2158;2151:12;2176:315;2244:6;2252;2305:2;2293:9;2284:7;2280:23;2276:32;2273:52;;;2321:1;2318;2311:12;2273:52;2360:9;2347:23;2379:31;2404:5;2379:31;:::i;:::-;2429:5;2481:2;2466:18;;;;2453:32;;-1:-1:-1;;;2176:315:644:o;2496:247::-;2555:6;2608:2;2596:9;2587:7;2583:23;2579:32;2576:52;;;2624:1;2621;2614:12;2576:52;2663:9;2650:23;2682:31;2707:5;2682:31;:::i;2748:248::-;2816:6;2824;2877:2;2865:9;2856:7;2852:23;2848:32;2845:52;;;2893:1;2890;2883:12;2845:52;-1:-1:-1;;2916:23:644;;;2986:2;2971:18;;;2958:32;;-1:-1:-1;2748:248:644:o;3183:163::-;3250:5;3295:3;3286:6;3281:3;3277:16;3273:26;3270:46;;;3312:1;3309;3302:12;3351:854;3490:6;3498;3506;3514;3522;3530;3583:3;3571:9;3562:7;3558:23;3554:33;3551:53;;;3600:1;3597;3590:12;3551:53;3636:9;3623:23;3613:33;;3696:2;3685:9;3681:18;3668:32;3709:31;3734:5;3709:31;:::i;:::-;3759:5;-1:-1:-1;3811:2:644;3796:18;;3783:32;;-1:-1:-1;3867:2:644;3852:18;;3839:32;3880:33;3839:32;3880:33;:::i;:::-;3932:7;-1:-1:-1;3986:3:644;3971:19;;3958:33;;-1:-1:-1;4042:3:644;4027:19;;4014:33;-1:-1:-1;;;;;4059:30:644;;4056:50;;;4102:1;4099;4092:12;4056:50;4125:74;4191:7;4182:6;4171:9;4167:22;4125:74;:::i;:::-;4115:84;;;3351:854;;;;;;;;:::o;4210:456::-;4287:6;4295;4303;4356:2;4344:9;4335:7;4331:23;4327:32;4324:52;;;4372:1;4369;4362:12;4324:52;4411:9;4398:23;4430:31;4455:5;4430:31;:::i;:::-;4480:5;-1:-1:-1;4537:2:644;4522:18;;4509:32;4550:33;4509:32;4550:33;:::i;:::-;4210:456;;4602:7;;-1:-1:-1;;;4656:2:644;4641:18;;;;4628:32;;4210:456::o;4671:274::-;-1:-1:-1;;;;;4863:32:644;;;;4845:51;;4927:2;4912:18;;4905:34;4833:2;4818:18;;4671:274::o;5240:826::-;5435:2;5424:9;5417:21;5480:6;5474:13;5469:2;5458:9;5454:18;5447:41;5542:2;5534:6;5530:15;5524:22;5519:2;5508:9;5504:18;5497:50;5601:2;5593:6;5589:15;5583:22;5578:2;5567:9;5563:18;5556:50;5661:2;5653:6;5649:15;5643:22;5637:3;5626:9;5622:19;5615:51;5721:3;5713:6;5709:16;5703:23;5697:3;5686:9;5682:19;5675:52;5782:3;5774:6;5770:16;5764:23;5758:3;5747:9;5743:19;5736:52;5871:1;5867;5862:3;5858:11;5854:19;5847:3;5839:6;5835:16;5829:23;5825:49;5819:3;5808:9;5804:19;5797:78;5398:4;5922:3;5914:6;5910:16;5904:23;5946:6;5988:2;5983;5972:9;5968:18;5961:30;;6008:52;6055:3;6044:9;6040:19;6026:12;6008:52;:::i;6071:118::-;6157:5;6150:13;6143:21;6136:5;6133:32;6123:60;;6179:1;6176;6169:12;6194:785;6321:6;6329;6337;6390:2;6378:9;6369:7;6365:23;6361:32;6358:52;;;6406:1;6403;6396:12;6358:52;6446:9;6433:23;-1:-1:-1;;;;;6516:2:644;6508:6;6505:14;6502:34;;;6532:1;6529;6522:12;6502:34;6570:6;6559:9;6555:22;6545:32;;6615:7;6608:4;6604:2;6600:13;6596:27;6586:55;;6637:1;6634;6627:12;6586:55;6677:2;6664:16;6703:2;6695:6;6692:14;6689:34;;;6719:1;6716;6709:12;6689:34;6774:7;6767:4;6757:6;6754:1;6750:14;6746:2;6742:23;6738:34;6735:47;6732:67;;;6795:1;6792;6785:12;6732:67;6826:4;6818:13;;;;-1:-1:-1;6850:6:644;-1:-1:-1;;6891:20:644;;6878:34;6921:28;6878:34;6921:28;:::i;:::-;6968:5;6958:15;;;6194:785;;;;;:::o;6984:127::-;7045:10;7040:3;7036:20;7033:1;7026:31;7076:4;7073:1;7066:15;7100:4;7097:1;7090:15;7116:761;7391:13;;-1:-1:-1;;;;;7387:22:644;;;7369:41;;7457:4;7445:17;;7439:24;7318:3;7303:19;;;7341;7499:1;7482:19;;7472:150;;7544:10;7539:3;7535:20;7532:1;7525:31;7579:4;7576:1;7569:15;7607:4;7604:1;7597:15;7472:150;7660:12;7653:4;7642:9;7638:20;7631:42;;7729:4;7721:6;7717:17;7711:24;7704:4;7693:9;7689:20;7682:54;7792:4;7784:6;7780:17;7774:24;7767:4;7756:9;7752:20;7745:54;7867:2;7859:4;7851:6;7847:17;7841:24;7837:33;7830:4;7819:9;7815:20;7808:63;;7116:761;;;;:::o;7882:127::-;7943:10;7938:3;7934:20;7931:1;7924:31;7974:4;7971:1;7964:15;7998:4;7995:1;7988:15;8014:275;8085:2;8079:9;8150:2;8131:13;;-1:-1:-1;;8127:27:644;8115:40;;-1:-1:-1;;;;;8170:34:644;;8206:22;;;8167:62;8164:88;;;8232:18;;:::i;:::-;8268:2;8261:22;8014:275;;-1:-1:-1;8014:275:644:o;8294:186::-;8342:4;-1:-1:-1;;;;;8367:6:644;8364:30;8361:56;;;8397:18;;:::i;:::-;-1:-1:-1;8463:2:644;8442:15;-1:-1:-1;;8438:29:644;8469:4;8434:40;;8294:186::o;8485:336::-;8549:5;8578:52;8594:35;8622:6;8594:35;:::i;:::-;8578:52;:::i;:::-;8569:61;;8653:6;8646:5;8639:21;8693:3;8684:6;8679:3;8675:16;8672:25;8669:45;;;8710:1;8707;8700:12;8669:45;8759:6;8754:3;8747:4;8740:5;8736:16;8723:43;8813:1;8806:4;8797:6;8790:5;8786:18;8782:29;8775:40;8485:336;;;;;:::o;8826:220::-;8868:5;8921:3;8914:4;8906:6;8902:17;8898:27;8888:55;;8939:1;8936;8929:12;8888:55;8961:79;9036:3;9027:6;9014:20;9007:4;8999:6;8995:17;8961:79;:::i;9051:1005::-;9199:6;9207;9215;9223;9231;9239;9292:3;9280:9;9271:7;9267:23;9263:33;9260:53;;;9309:1;9306;9299:12;9260:53;9348:9;9335:23;9367:31;9392:5;9367:31;:::i;:::-;9417:5;-1:-1:-1;9469:2:644;9454:18;;9441:32;;-1:-1:-1;9525:2:644;9510:18;;9497:32;9538:33;9497:32;9538:33;:::i;:::-;9590:7;-1:-1:-1;9644:2:644;9629:18;;9616:32;;-1:-1:-1;9699:3:644;9684:19;;9671:33;-1:-1:-1;;;;;9753:14:644;;;9750:34;;;9780:1;9777;9770:12;9750:34;9803:74;9869:7;9860:6;9849:9;9845:22;9803:74;:::i;:::-;9793:84;;9930:3;9919:9;9915:19;9902:33;9886:49;;9960:2;9950:8;9947:16;9944:36;;;9976:1;9973;9966:12;9944:36;;9999:51;10042:7;10031:8;10020:9;10016:24;9999:51;:::i;10061:450::-;10130:6;10183:2;10171:9;10162:7;10158:23;10154:32;10151:52;;;10199:1;10196;10189:12;10151:52;10239:9;10226:23;-1:-1:-1;;;;;10264:6:644;10261:30;10258:50;;;10304:1;10301;10294:12;10258:50;10327:22;;10380:4;10372:13;;10368:27;-1:-1:-1;10358:55:644;;10409:1;10406;10399:12;10358:55;10432:73;10497:7;10492:2;10479:16;10474:2;10470;10466:11;10432:73;:::i;10516:383::-;10593:6;10601;10609;10662:2;10650:9;10641:7;10637:23;10633:32;10630:52;;;10678:1;10675;10668:12;10630:52;10714:9;10701:23;10691:33;;10774:2;10763:9;10759:18;10746:32;10787:31;10812:5;10787:31;:::i;10904:347::-;10955:8;10965:6;11019:3;11012:4;11004:6;11000:17;10996:27;10986:55;;11037:1;11034;11027:12;10986:55;-1:-1:-1;11060:20:644;;-1:-1:-1;;;;;11092:30:644;;11089:50;;;11135:1;11132;11125:12;11089:50;11172:4;11164:6;11160:17;11148:29;;11224:3;11217:4;11208:6;11200;11196:19;11192:30;11189:39;11186:59;;;11241:1;11238;11231:12;11186:59;10904:347;;;;;:::o;11256:477::-;11335:6;11343;11351;11404:2;11392:9;11383:7;11379:23;11375:32;11372:52;;;11420:1;11417;11410:12;11372:52;11456:9;11443:23;11433:33;;11517:2;11506:9;11502:18;11489:32;-1:-1:-1;;;;;11536:6:644;11533:30;11530:50;;;11576:1;11573;11566:12;11530:50;11615:58;11665:7;11656:6;11645:9;11641:22;11615:58;:::i;:::-;11256:477;;11692:8;;-1:-1:-1;11589:84:644;;-1:-1:-1;;;;11256:477:644:o;11961:382::-;12026:6;12034;12087:2;12075:9;12066:7;12062:23;12058:32;12055:52;;;12103:1;12100;12093:12;12055:52;12142:9;12129:23;12161:31;12186:5;12161:31;:::i;:::-;12211:5;-1:-1:-1;12268:2:644;12253:18;;12240:32;12281:30;12240:32;12281:30;:::i;:::-;12330:7;12320:17;;;11961:382;;;;;:::o;12348:315::-;12416:6;12424;12477:2;12465:9;12456:7;12452:23;12448:32;12445:52;;;12493:1;12490;12483:12;12445:52;12529:9;12516:23;12506:33;;12589:2;12578:9;12574:18;12561:32;12602:31;12627:5;12602:31;:::i;12668:665::-;12763:6;12771;12779;12787;12840:3;12828:9;12819:7;12815:23;12811:33;12808:53;;;12857:1;12854;12847:12;12808:53;12896:9;12883:23;12915:31;12940:5;12915:31;:::i;:::-;12965:5;-1:-1:-1;13022:2:644;13007:18;;12994:32;13035:33;12994:32;13035:33;:::i;:::-;13087:7;-1:-1:-1;13141:2:644;13126:18;;13113:32;;-1:-1:-1;13196:2:644;13181:18;;13168:32;-1:-1:-1;;;;;13212:30:644;;13209:50;;;13255:1;13252;13245:12;13209:50;13278:49;13319:7;13310:6;13299:9;13295:22;13278:49;:::i;:::-;13268:59;;;12668:665;;;;;;;:::o;13338:383::-;13415:6;13423;13431;13484:2;13472:9;13463:7;13459:23;13455:32;13452:52;;;13500:1;13497;13490:12;13452:52;13539:9;13526:23;13558:31;13583:5;13558:31;:::i;:::-;13608:5;13660:2;13645:18;;13632:32;;-1:-1:-1;13711:2:644;13696:18;;;13683:32;;13338:383;-1:-1:-1;;;13338:383:644:o;13726:786::-;13826:6;13834;13842;13850;13858;13911:2;13899:9;13890:7;13886:23;13882:32;13879:52;;;13927:1;13924;13917:12;13879:52;13963:9;13950:23;13940:33;;14024:2;14013:9;14009:18;13996:32;-1:-1:-1;;;;;14088:2:644;14080:6;14077:14;14074:34;;;14104:1;14101;14094:12;14074:34;14143:58;14193:7;14184:6;14173:9;14169:22;14143:58;:::i;:::-;14220:8;;-1:-1:-1;14117:84:644;-1:-1:-1;14308:2:644;14293:18;;14280:32;;-1:-1:-1;14324:16:644;;;14321:36;;;14353:1;14350;14343:12;14321:36;;14392:60;14444:7;14433:8;14422:9;14418:24;14392:60;:::i;:::-;13726:786;;;;-1:-1:-1;13726:786:644;;-1:-1:-1;14471:8:644;;14366:86;13726:786;-1:-1:-1;;;13726:786:644:o;14770:628::-;14858:6;14866;14874;14927:2;14915:9;14906:7;14902:23;14898:32;14895:52;;;14943:1;14940;14933:12;14895:52;14983:9;14970:23;-1:-1:-1;;;;;15053:2:644;15045:6;15042:14;15039:34;;;15069:1;15066;15059:12;15039:34;15092:49;15133:7;15124:6;15113:9;15109:22;15092:49;:::i;:::-;15082:59;;15194:2;15183:9;15179:18;15166:32;15150:48;;15223:2;15213:8;15210:16;15207:36;;;15239:1;15236;15229:12;15207:36;;15278:60;15330:7;15319:8;15308:9;15304:24;15278:60;:::i;15403:388::-;15471:6;15479;15532:2;15520:9;15511:7;15507:23;15503:32;15500:52;;;15548:1;15545;15538:12;15500:52;15587:9;15574:23;15606:31;15631:5;15606:31;:::i;:::-;15656:5;-1:-1:-1;15713:2:644;15698:18;;15685:32;15726:33;15685:32;15726:33;:::i;16839:183::-;16943:11;;-1:-1:-1;;;;;;16939:42:644;-1:-1:-1;;;;;16983:31:644;;;;16936:79;;;;16923:93;;16839:183::o;17027:826::-;17210:5;17197:19;17225:33;17250:7;17225:33;:::i;:::-;17267:62;17321:7;17315:4;17267:62;:::i;:::-;;17377:2;17370:5;17366:14;17353:28;17412:1;17403:7;17400:14;17390:42;;17428:1;17425;17418:12;17390:42;17451:11;;-1:-1:-1;;;;17487:27:644;17543:3;17520:17;;;;-1:-1:-1;;;17516:37:644;17484:70;17471:84;;17609:2;17598:14;;17585:28;-1:-1:-1;17571:12:644;;17564:50;17668:2;17657:14;;17644:28;17640:1;17630:12;;17623:50;17721:3;17710:15;;17697:29;17735:33;17697:29;17735:33;:::i;:::-;17777:70;17839:7;17835:1;17829:4;17825:12;17777:70;:::i;17858:380::-;17937:1;17933:12;;;;17980;;;18001:61;;18055:4;18047:6;18043:17;18033:27;;18001:61;18108:2;18100:6;18097:14;18077:18;18074:38;18071:161;;;18154:10;18149:3;18145:20;18142:1;18135:31;18189:4;18186:1;18179:15;18217:4;18214:1;18207:15;18243:338;18445:2;18427:21;;;18484:2;18464:18;;;18457:30;-1:-1:-1;;;18518:2:644;18503:18;;18496:44;18572:2;18557:18;;18243:338::o;18586:545::-;18679:4;18685:6;18745:11;18732:25;18839:2;18835:7;18824:8;18808:14;18804:29;18800:43;18780:18;18776:68;18766:96;;18858:1;18855;18848:12;18766:96;18885:33;;18937:20;;;-1:-1:-1;;;;;;18969:30:644;;18966:50;;;19012:1;19009;19002:12;18966:50;19045:4;19033:17;;-1:-1:-1;19096:1:644;19092:14;;;19076;19072:35;19062:46;;19059:66;;;19121:1;19118;19111:12;19942:127;20003:10;19998:3;19994:20;19991:1;19984:31;20034:4;20031:1;20024:15;20058:4;20055:1;20048:15;20074:128;20114:3;20145:1;20141:6;20138:1;20135:13;20132:39;;;20151:18;;:::i;:::-;-1:-1:-1;20187:9:644;;20074:128::o;21563:127::-;21624:10;21619:3;21615:20;21612:1;21605:31;21655:4;21652:1;21645:15;21679:4;21676:1;21669:15;21695:168;21735:7;21801:1;21797;21793:6;21789:14;21786:1;21783:21;21778:1;21771:9;21764:17;21760:45;21757:71;;;21808:18;;:::i;:::-;-1:-1:-1;21848:9:644;;21695:168::o;21868:127::-;21929:10;21924:3;21920:20;21917:1;21910:31;21960:4;21957:1;21950:15;21984:4;21981:1;21974:15;22000:120;22040:1;22066;22056:35;;22071:18;;:::i;:::-;-1:-1:-1;22105:9:644;;22000:120::o;22125:333::-;22226:4;22284:11;22271:25;22378:3;22374:8;22363;22347:14;22343:29;22339:44;22319:18;22315:69;22305:97;;22398:1;22395;22388:12;22305:97;22419:33;;;;;22125:333;-1:-1:-1;;22125:333:644:o;23266:545::-;23368:2;23363:3;23360:11;23357:448;;;23404:1;23429:5;23425:2;23418:17;23474:4;23470:2;23460:19;23544:2;23532:10;23528:19;23525:1;23521:27;23515:4;23511:38;23580:4;23568:10;23565:20;23562:47;;;-1:-1:-1;23603:4:644;23562:47;23658:2;23653:3;23649:12;23646:1;23642:20;23636:4;23632:31;23622:41;;23713:82;23731:2;23724:5;23721:13;23713:82;;;23776:17;;;23757:1;23746:13;23713:82;;23987:1190;-1:-1:-1;;;;;24090:3:644;24087:27;24084:53;;;24117:18;;:::i;:::-;24146:94;24236:3;24196:38;24228:4;24222:11;24196:38;:::i;:::-;24190:4;24146:94;:::i;:::-;24266:1;24291:2;24286:3;24283:11;24308:1;24303:616;;;;24963:1;24980:3;24977:93;;;-1:-1:-1;25036:19:644;;;25023:33;24977:93;-1:-1:-1;;23944:1:644;23940:11;;;23936:24;23932:29;23922:40;23968:1;23964:11;;;23919:57;25083:78;;24276:895;;24303:616;23213:1;23206:14;;;23250:4;23237:18;;-1:-1:-1;;24339:17:644;;;24440:9;24462:229;24476:7;24473:1;24470:14;24462:229;;;24565:19;;;24552:33;24537:49;;24672:4;24657:20;;;;24625:1;24613:14;;;;24492:12;24462:229;;;24466:3;24719;24710:7;24707:16;24704:159;;;24843:1;24839:6;24833:3;24827;24824:1;24820:11;24816:21;24812:34;24808:39;24795:9;24790:3;24786:19;24773:33;24769:79;24761:6;24754:95;24704:159;;;24906:1;24900:3;24897:1;24893:11;24889:19;24883:4;24876:33;24276:895;;23987:1190;;;:::o;25182:1181::-;25361:5;25348:19;25342:4;25335:33;25422:2;25415:5;25411:14;25398:28;25394:1;25388:4;25384:12;25377:50;25481:2;25474:5;25470:14;25457:28;25453:1;25447:4;25443:12;25436:50;25540:2;25533:5;25529:14;25516:28;25512:1;25506:4;25502:12;25495:50;25599:3;25592:5;25588:15;25575:29;25571:1;25565:4;25561:12;25554:51;25659:3;25652:5;25648:15;25635:29;25631:1;25625:4;25621:12;25614:51;25713:3;25706:5;25702:15;25689:29;25727:33;25752:7;25727:33;:::i;:::-;25769:70;25831:7;25827:1;25821:4;25817:12;25769:70;:::i;:::-;;25898:3;25891:5;25887:15;25874:29;25982:2;25978:7;25970:5;25954:14;25950:26;25946:40;25926:18;25922:65;25912:93;;26001:1;25998;25991:12;25912:93;26026:30;;26079:18;;-1:-1:-1;;;;;26109:30:644;;26106:50;;;26152:1;26149;26142:12;26106:50;26189:2;26183:4;26179:13;26165:27;;26236:6;26220:14;26216:27;26208:6;26204:40;26201:60;;;26257:1;26254;26247:12;26201:60;26270:87;26350:6;26342;26338:1;26332:4;26328:12;26270:87;:::i;26368:135::-;26407:3;-1:-1:-1;;26428:17:644;;26425:43;;;26448:18;;:::i;:::-;-1:-1:-1;26495:1:644;26484:13;;26368:135::o;26508:504::-;26567:5;26574:6;26634:3;26621:17;26720:2;26716:7;26705:8;26689:14;26685:29;26681:43;26661:18;26657:68;26647:96;;26739:1;26736;26729:12;26647:96;26767:33;;26871:4;26858:18;;;-1:-1:-1;26819:21:644;;-1:-1:-1;;;;;;26888:30:644;;26885:50;;;26931:1;26928;26921:12;26885:50;26981:6;26965:14;26961:27;26951:8;26947:42;26944:62;;;27002:1;26999;26992:12;27017:267;27106:6;27101:3;27094:19;27158:6;27151:5;27144:4;27139:3;27135:14;27122:43;-1:-1:-1;27210:1:644;27185:16;;;27203:4;27181:27;;;27174:38;;;;27266:2;27245:15;;;-1:-1:-1;;27241:29:644;27232:39;;;27228:50;;27017:267::o;27289:2051::-;27560:2;27612:21;;;27585:18;;;27668:22;;;27531:4;;27709:2;27727:18;;;27791:1;27787:14;;;27772:30;;27768:39;;27830:6;27531:4;;27885:1372;27901:6;27896:3;27893:15;27885:1372;;;27970:22;;;-1:-1:-1;;27966:36:644;27954:49;;28042:20;;28117:14;28113:27;;;-1:-1:-1;;28109:42:644;28085:67;;28075:95;;28166:1;28163;28156:12;28075:95;28196:31;;28284:19;;28269:35;;28327:4;28381:14;;;28368:28;28351:15;;;28344:53;28447:14;;;28434:28;28417:15;;;28410:53;28513:14;;;28500:28;28483:15;;;28476:53;28552:4;28606:14;;;28593:28;28576:15;;;28569:53;28645:4;28699:14;;;28686:28;28669:15;;;28662:53;28250:6;;28738:4;28783:14;;;28770:28;28811:33;28770:28;28811:33;:::i;:::-;-1:-1:-1;;;;;28881:33:644;28864:15;;;28857:58;28938:4;28989:54;29028:14;;;29032:5;28989:54;:::i;:::-;28955:88;;29080:2;29075;29067:6;29063:15;29056:27;29106:71;29173:2;29165:6;29161:15;29147:12;29133;29106:71;:::i;:::-;29235:12;;;;29096:81;-1:-1:-1;;;29200:15:644;;;;;-1:-1:-1;;27927:1:644;27918:11;27885:1372;;;-1:-1:-1;;;470:13:644;;463:21;29328:4;29313:20;;451:34;29274:6;-1:-1:-1;29289:45:644;;-1:-1:-1;;;400:91:644;29691:703;29779:6;29787;29840:2;29828:9;29819:7;29815:23;29811:32;29808:52;;;29856:1;29853;29846:12;29808:52;29889:9;29883:16;-1:-1:-1;;;;;29914:6:644;29911:30;29908:50;;;29954:1;29951;29944:12;29908:50;29977:22;;30030:4;30022:13;;30018:27;-1:-1:-1;30008:55:644;;30059:1;30056;30049:12;30008:55;30088:2;30082:9;30113:48;30129:31;30157:2;30129:31;:::i;30113:48::-;30184:2;30177:5;30170:17;30226:7;30219:4;30214:2;30210;30206:11;30202:22;30199:35;30196:55;;;30247:1;30244;30237:12;30196:55;30260:58;30315:2;30308:4;30301:5;30297:16;30290:4;30286:2;30282:13;30260:58;:::i;:::-;30382:4;30367:20;;;;30361:27;30337:5;;30361:27;;-1:-1:-1;;;;;29691:703:644:o;30399:525::-;30614:3;30652:6;30646:13;30668:53;30714:6;30709:3;30702:4;30694:6;30690:17;30668:53;:::i;:::-;30743:16;;30796:6;30788;30743:16;30768:35;30822:18;;;30871;;;-1:-1:-1;30913:4:644;30905:13;;30399:525;-1:-1:-1;;;30399:525:644:o;31614:251::-;31684:6;31737:2;31725:9;31716:7;31712:23;31708:32;31705:52;;;31753:1;31750;31743:12;31705:52;31785:9;31779:16;31804:31;31829:5;31804:31;:::i;32549:184::-;32619:6;32672:2;32660:9;32651:7;32647:23;32643:32;32640:52;;;32688:1;32685;32678:12;32640:52;-1:-1:-1;32711:16:644;;32549:184;-1:-1:-1;32549:184:644:o;33074:125::-;33114:4;33142:1;33139;33136:8;33133:34;;;33147:18;;:::i;:::-;-1:-1:-1;33184:9:644;;33074:125::o;33204:136::-;33243:3;33271:5;33261:39;;33280:18;;:::i;:::-;-1:-1:-1;;;33316:18:644;;33204:136::o;33685:439::-;33917:3;33955:6;33949:13;33971:53;34017:6;34012:3;34005:4;33997:6;33993:17;33971:53;:::i;:::-;-1:-1:-1;;;34046:16:644;;34071:18;;;-1:-1:-1;34116:1:644;34105:13;;33685:439;-1:-1:-1;33685:439:644:o;34129:470::-;34308:3;34346:6;34340:13;34362:53;34408:6;34403:3;34396:4;34388:6;34384:17;34362:53;:::i;:::-;34478:13;;34437:16;;;;34500:57;34478:13;34437:16;34534:4;34522:17;;34500:57;:::i;:::-;34573:20;;34129:470;-1:-1:-1;;;;34129:470:644:o;34944:388::-;35021:6;35029;35082:2;35070:9;35061:7;35057:23;35053:32;35050:52;;;35098:1;35095;35088:12;35050:52;35138:9;35125:23;-1:-1:-1;;;;;35163:6:644;35160:30;35157:50;;;35203:1;35200;35193:12;35157:50;35226:49;35267:7;35258:6;35247:9;35243:22;35226:49;:::i;:::-;35216:59;35322:2;35307:18;;;;35294:32;;-1:-1:-1;;;;34944:388:644:o;35337:335::-;35548:6;35540;35535:3;35522:33;35574:16;;;35621:18;;;35663:2;35655:11;;35337:335;-1:-1:-1;35337:335:644:o;37736:339::-;37938:2;37920:21;;;37977:2;37957:18;;;37950:30;-1:-1:-1;;;38011:2:644;37996:18;;37989:45;38066:2;38051:18;;37736:339::o;38080:341::-;38282:2;38264:21;;;38321:2;38301:18;;;38294:30;-1:-1:-1;;;38355:2:644;38340:18;;38333:47;38412:2;38397:18;;38080:341::o;38678:383::-;38875:2;38864:9;38857:21;38838:4;38901:45;38942:2;38931:9;38927:18;38919:6;38901:45;:::i;:::-;38994:9;38986:6;38982:22;38977:2;38966:9;38962:18;38955:50;39022:33;39048:6;39040;39022:33;:::i;:::-;39014:41;38678:383;-1:-1:-1;;;;;38678:383:644:o;39066:489::-;-1:-1:-1;;;;;39335:15:644;;;39317:34;;39387:15;;39382:2;39367:18;;39360:43;39434:2;39419:18;;39412:34;;;39482:3;39477:2;39462:18;;39455:31;;;39260:4;;39503:46;;39529:19;;39521:6;39503:46;:::i;:::-;39495:54;39066:489;-1:-1:-1;;;;;;39066:489:644:o;39560:249::-;39629:6;39682:2;39670:9;39661:7;39657:23;39653:32;39650:52;;;39698:1;39695;39688:12;39650:52;39730:9;39724:16;39749:30;39773:5;39749:30;:::i;40158:112::-;40190:1;40216;40206:35;;40221:18;;:::i;:::-;-1:-1:-1;40255:9:644;;40158:112::o;40949:506::-;41192:6;41181:9;41174:25;41235:2;41230;41219:9;41215:18;41208:30;41155:4;41261:62;41319:2;41308:9;41304:18;41296:6;41288;41261:62;:::i;:::-;41371:9;41363:6;41359:22;41354:2;41343:9;41339:18;41332:50;41399;41442:6;41434;41426;41399:50;:::i;:::-;41391:58;40949:506;-1:-1:-1;;;;;;;;40949:506:644:o;43094:245::-;43161:6;43214:2;43202:9;43193:7;43189:23;43185:32;43182:52;;;43230:1;43227;43220:12;43182:52;43262:9;43256:16;43281:28;43303:5;43281:28;:::i;44520:274::-;44649:3;44687:6;44681:13;44703:53;44749:6;44744:3;44737:4;44729:6;44725:17;44703:53;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "burn(uint256)": "42966c68",
    "burnAndClaim(uint256,uint256)": "1567313b",
    "claim(address,uint256,address,uint256,(bytes32[],uint256,uint256,address),bytes)": "84bb1e42",
    "claimCondition()": "d637ed59",
    "contractURI()": "e8a3d485",
    "encryptDecrypt(bytes,bytes)": "e7150322",
    "encryptedData(uint256)": "a05112fc",
    "getActiveClaimConditionId()": "c68907de",
    "getApproved(uint256)": "081812fc",
    "getBaseURICount()": "63b45e2d",
    "getBatchIdAtIndex(uint256)": "2419f51b",
    "getBurnToClaimInfo()": "778a4c0e",
    "getClaimConditionById(uint256)": "6f8934f4",
    "getDefaultRoyaltyInfo()": "b24f2d39",
    "getPlatformFeeInfo()": "d45573f6",
    "getRevealURI(uint256,bytes)": "9fc4d68f",
    "getRoyaltyInfoForToken(uint256)": "4cc157df",
    "getSupplyClaimedByWallet(uint256,address)": "ad1eefc5",
    "isApprovedForAll(address,address)": "e985e9c5",
    "isEncryptedBatch(uint256)": "492e224b",
    "isTrustedForwarder(address)": "572b6c05",
    "lazyMint(uint256,string,bytes)": "d37c353b",
    "maxTotalMinted()": "cbfaa46b",
    "name()": "06fdde03",
    "nextTokenIdToClaim()": "acd083f8",
    "nextTokenIdToMint()": "3b1475a7",
    "owner()": "8da5cb5b",
    "ownerOf(uint256)": "6352211e",
    "primarySaleRecipient()": "079fe40e",
    "reveal(uint256,bytes)": "ce805642",
    "royaltyInfo(uint256,uint256)": "2a55205a",
    "safeTransferFrom(address,address,uint256)": "42842e0e",
    "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
    "setApprovalForAll(address,bool)": "a22cb465",
    "setBurnToClaimInfo((address,uint8,uint256,uint256,address))": "0689b284",
    "setClaimConditions((uint256,uint256,uint256,uint256,bytes32,uint256,address,string)[],bool)": "74bc7db7",
    "setContractURI(string)": "938e3d7b",
    "setDefaultRoyaltyInfo(address,uint256)": "600dd5ea",
    "setMaxTotalMinted(uint256)": "fd3078d8",
    "setOwner(address)": "13af4035",
    "setPlatformFeeInfo(address,uint256)": "1e7ac488",
    "setPrimarySaleRecipient(address)": "6f4f2837",
    "setRoyaltyInfoForToken(uint256,address,uint256)": "9bcf7a15",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "tokenURI(uint256)": "c87b56dd",
    "totalMinted()": "a2309ff8",
    "totalSupply()": "18160ddd",
    "transferFrom(address,address,uint256)": "23b872dd",
    "verifyBurnToClaim(address,uint256,uint256)": "bb408851",
    "verifyClaim(uint256,address,uint256,address,uint256,(bytes32[],uint256,uint256,address))": "23a2902b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalToCurrentOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApproveToCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxClaimableSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"}],\"indexed\":false,\"internalType\":\"struct IClaimCondition.ClaimCondition[]\",\"name\":\"claimConditions\",\"type\":\"tuple[]\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"resetEligibility\",\"type\":\"bool\"}],\"name\":\"ClaimConditionsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"prevURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newURI\",\"type\":\"string\"}],\"name\":\"ContractURIUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newRoyaltyRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newRoyaltyBps\",\"type\":\"uint256\"}],\"name\":\"DefaultRoyalty\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"platformFeeRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"flatFee\",\"type\":\"uint256\"}],\"name\":\"FlatPlatformFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxTotalMinted\",\"type\":\"uint256\"}],\"name\":\"MaxTotalMintedUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"MetadataFrozen\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"prevOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"platformFeeRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"platformFeeBps\",\"type\":\"uint256\"}],\"name\":\"PlatformFeeInfoUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"enum IPlatformFee.PlatformFeeType\",\"name\":\"feeType\",\"type\":\"uint8\"}],\"name\":\"PlatformFeeTypeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"PrimarySaleRecipientUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"royaltyRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"royaltyBps\",\"type\":\"uint256\"}],\"name\":\"RoyaltyForToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"revealedURI\",\"type\":\"string\"}],\"name\":\"TokenURIRevealed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"originContract\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"burnTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"}],\"name\":\"TokensBurnedAndClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"claimConditionIndex\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantityClaimed\",\"type\":\"uint256\"}],\"name\":\"TokensClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"startTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"encryptedBaseURI\",\"type\":\"bytes\"}],\"name\":\"TokensLazyMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_burnTokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"}],\"name\":\"burnAndClaim\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_pricePerToken\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"internalType\":\"struct IDrop.AllowlistProof\",\"name\":\"_allowlistProof\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimCondition\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"key\",\"type\":\"bytes\"}],\"name\":\"encryptDecrypt\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"result\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"encryptedData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getActiveClaimConditionId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaseURICount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getBatchIdAtIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBurnToClaimInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"originContractAddress\",\"type\":\"address\"},{\"internalType\":\"enum IBurnToClaim.TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"mintPriceForNewToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"internalType\":\"struct IBurnToClaim.BurnToClaimInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_conditionId\",\"type\":\"uint256\"}],\"name\":\"getClaimConditionById\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxClaimableSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"}],\"internalType\":\"struct IClaimCondition.ClaimCondition\",\"name\":\"condition\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDefaultRoyaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPlatformFeeInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_batchId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_key\",\"type\":\"bytes\"}],\"name\":\"getRevealURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"revealedURI\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getRoyaltyInfoForToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_conditionId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_claimer\",\"type\":\"address\"}],\"name\":\"getSupplyClaimedByWallet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"supplyClaimedByWallet\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_batchId\",\"type\":\"uint256\"}],\"name\":\"isEncryptedBatch\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_baseURIForTokens\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"lazyMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTotalMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextTokenIdToClaim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextTokenIdToMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"primarySaleRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_key\",\"type\":\"bytes\"}],\"name\":\"reveal\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"revealedURI\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"originContractAddress\",\"type\":\"address\"},{\"internalType\":\"enum IBurnToClaim.TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"mintPriceForNewToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"internalType\":\"struct IBurnToClaim.BurnToClaimInfo\",\"name\":\"_burnToClaimInfo\",\"type\":\"tuple\"}],\"name\":\"setBurnToClaimInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxClaimableSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"}],\"internalType\":\"struct IClaimCondition.ClaimCondition[]\",\"name\":\"_conditions\",\"type\":\"tuple[]\"},{\"internalType\":\"bool\",\"name\":\"_resetClaimEligibility\",\"type\":\"bool\"}],\"name\":\"setClaimConditions\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"setContractURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_royaltyRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_royaltyBps\",\"type\":\"uint256\"}],\"name\":\"setDefaultRoyaltyInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxTotalMinted\",\"type\":\"uint256\"}],\"name\":\"setMaxTotalMinted\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_platformFeeRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_platformFeeBps\",\"type\":\"uint256\"}],\"name\":\"setPlatformFeeInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_saleRecipient\",\"type\":\"address\"}],\"name\":\"setPrimarySaleRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_bps\",\"type\":\"uint256\"}],\"name\":\"setRoyaltyInfoForToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"}],\"name\":\"verifyBurnToClaim\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_conditionId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_claimer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_pricePerToken\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"internalType\":\"struct IDrop.AllowlistProof\",\"name\":\"_allowlistProof\",\"type\":\"tuple\"}],\"name\":\"verifyClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isOverride\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"MaxTotalMintedUpdated(uint256)\":{\"details\":\"Emitted when the global max NFTs that can be minted is updated.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"claim(address,uint256,address,uint256,(bytes32[],uint256,uint256,address),bytes)\":{\"details\":\"Lets an account claim tokens.\"},\"encryptDecrypt(bytes,bytes)\":{\"details\":\"Encrypt/decrypt given `data` with `key`. Uses inline assembly.                  See: https://ethereum.stackexchange.com/questions/69825/decrypt-message-on-chain\",\"params\":{\"data\":\"Bytes of data to encrypt/decrypt.\",\"key\":\"Secure key used by caller for encryption/decryption.\"},\"returns\":{\"result\":\" Output after encryption/decryption of given data.\"}},\"encryptedData(uint256)\":{\"details\":\"Mapping from tokenId of a batch of tokens => to delayed reveal data.\"},\"getActiveClaimConditionId()\":{\"details\":\"At any given moment, returns the uid for the active claim condition.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"getBaseURICount()\":{\"details\":\"Each batch of tokens has an in ID and an associated `baseURI`.                  See {batchIds}.\"},\"getBatchIdAtIndex(uint256)\":{\"details\":\"See {getBaseURICount}.\",\"params\":{\"_index\":\"ID of a token.\"}},\"getClaimConditionById(uint256)\":{\"details\":\"Returns the claim condition at the given uid.\"},\"getPlatformFeeInfo()\":{\"details\":\"Returns the platform fee recipient and bps.\"},\"getRevealURI(uint256,bytes)\":{\"details\":\"Reveal encrypted base URI for `_batchId` with caller/admin's `_key` used for encryption.                      Reverts if there's no encrypted URI for `_batchId`.                      See {encryptDecrypt}.\",\"params\":{\"_batchId\":\"ID of the batch for which URI is being revealed.\",\"_key\":\"Secure key used by caller/admin for encryption of baseURI.\"},\"returns\":{\"revealedURI\":\"Decrypted base URI.\"}},\"getRoyaltyInfoForToken(uint256)\":{\"details\":\"Returns royalty recipient and bps for `_tokenId`.\",\"params\":{\"_tokenId\":\"The tokenID of the NFT for which to query royalty info.\"}},\"getSupplyClaimedByWallet(uint256,address)\":{\"details\":\"Returns the supply claimed by claimer for a given conditionId.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"isEncryptedBatch(uint256)\":{\"details\":\"Returns `true` if `_batchId`'s base URI is encrypted.\",\"params\":{\"_batchId\":\"ID of a batch of NFTs.\"}},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"primarySaleRecipient()\":{\"details\":\"Returns primary sale recipient address.\"},\"royaltyInfo(uint256,uint256)\":{\"details\":\"Returns royalty amount and recipient for `tokenId` and `salePrice`.\",\"params\":{\"salePrice\":\"Sale price of the token.\",\"tokenId\":\"The tokenID of the NFT for which to query royalty info.\"},\"returns\":{\"receiver\":\"       Address of royalty recipient account.\",\"royaltyAmount\":\"  Royalty amount calculated at current royaltyBps value.\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"setClaimConditions((uint256,uint256,uint256,uint256,bytes32,uint256,address,string)[],bool)\":{\"details\":\"Lets a contract admin set claim conditions.\"},\"setContractURI(string)\":{\"details\":\"Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.\",\"params\":{\"_uri\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"setDefaultRoyaltyInfo(address,uint256)\":{\"details\":\"Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {DefaultRoyalty Event}; See {_setupDefaultRoyaltyInfo}.\",\"params\":{\"_royaltyBps\":\"Updated royalty bps.\",\"_royaltyRecipient\":\"Address to be set as default royalty recipient.\"}},\"setOwner(address)\":{\"params\":{\"_newOwner\":\"The address to set as the new owner of the contract.\"}},\"setPlatformFeeInfo(address,uint256)\":{\"details\":\"Caller should be authorized to set platform fee info.                  See {_canSetPlatformFeeInfo}.                  Emits {PlatformFeeInfoUpdated Event}; See {_setupPlatformFeeInfo}.\",\"params\":{\"_platformFeeBps\":\"Updated platformFeeBps.\",\"_platformFeeRecipient\":\"Address to be set as new platformFeeRecipient.\"}},\"setPrimarySaleRecipient(address)\":{\"details\":\"Caller should be authorized to set primary sales info.                  See {_canSetPrimarySaleRecipient}.                  Emits {PrimarySaleRecipientUpdated Event}; See {_setupPrimarySaleRecipient}.\",\"params\":{\"_saleRecipient\":\"Address to be set as new recipient of primary sales.\"}},\"setRoyaltyInfoForToken(uint256,address,uint256)\":{\"details\":\"Sets royalty info for `_tokenId`. Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {RoyaltyForToken Event}; See {_setupRoyaltyInfoForToken}.\",\"params\":{\"_bps\":\"Updated royalty bps for the token Id.\",\"_recipient\":\"Address to be set as royalty recipient for given token Id.\"}},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"The URI, for a given tokenId, is returned once it is lazy minted, even if it might not be actually minted. (See `LazyMint`)\"},\"totalSupply()\":{\"details\":\"Burned tokens are calculated here, use _totalMinted() if you want to count just minted tokens.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"verifyClaim(uint256,address,uint256,address,uint256,(bytes32[],uint256,uint256,address))\":{\"details\":\"Checks a request to claim NFTs against the active claim condition's criteria.\"}},\"stateVariables\":{\"DEFAULT_ADMIN_ROLE\":{\"details\":\"Default admin role for all roles. Only accounts with this role can grant/revoke other roles.\"},\"MAX_BPS\":{\"details\":\"Max bps in the thirdweb system.\"},\"MINTER_ROLE\":{\"details\":\"Only MINTER_ROLE holders can sign off on `MintRequest`s and lazy mint tokens.\"},\"TRANSFER_ROLE\":{\"details\":\"Only transfers to or from TRANSFER_ROLE holders are valid, when transfers are restricted.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"ApprovalToCurrentOwner()\":[{\"notice\":\"The caller cannot approve to the current owner.\"}],\"ApproveToCaller()\":[{\"notice\":\"The caller cannot approve to their own address.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"events\":{\"BatchMetadataUpdate(uint256,uint256)\":{\"notice\":\"So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"ClaimConditionsUpdated((uint256,uint256,uint256,uint256,bytes32,uint256,address,string)[],bool)\":{\"notice\":\"Emitted when the contract's claim conditions are updated.\"},\"TokensBurnedAndClaimed(address,address,uint256,uint256)\":{\"notice\":\"Emitted when tokens are burned to claim new tokens\"},\"TokensClaimed(uint256,address,address,uint256,uint256)\":{\"notice\":\"Emitted when tokens are claimed via `claim`.\"}},\"kind\":\"user\",\"methods\":{\"burn(uint256)\":{\"notice\":\"Burns `tokenId`. See {ERC721-_burn}.\"},\"burnAndClaim(uint256,uint256)\":{\"notice\":\"Claim lazy minted tokens after burning required tokens from origin contract.\"},\"contractURI()\":{\"notice\":\"Returns the contract metadata URI.\"},\"encryptDecrypt(bytes,bytes)\":{\"notice\":\"Encrypt/decrypt data on chain.\"},\"getBaseURICount()\":{\"notice\":\"Returns the count of batches of NFTs.\"},\"getBatchIdAtIndex(uint256)\":{\"notice\":\"Returns the ID for the batch of tokens the given tokenId belongs to.\"},\"getBurnToClaimInfo()\":{\"notice\":\"Returns the confugration for burning tokens to claim new tokens.\"},\"getDefaultRoyaltyInfo()\":{\"notice\":\"Returns the defualt royalty recipient and BPS for this contract's NFTs.\"},\"getRevealURI(uint256,bytes)\":{\"notice\":\"Returns revealed URI for a batch of NFTs.\"},\"getRoyaltyInfoForToken(uint256)\":{\"notice\":\"View royalty info for a given token.\"},\"isEncryptedBatch(uint256)\":{\"notice\":\"Returns whether the relvant batch of NFTs is subject to a delayed reveal.\"},\"lazyMint(uint256,string,bytes)\":{\"notice\":\"Lets an account with `MINTER_ROLE` lazy mint 'n' NFTs.          The URIs for each token is the provided `_baseURIForTokens` + `{tokenId}`.\"},\"maxTotalMinted()\":{\"notice\":\"Global max total NFTs that can be minted.\"},\"nextTokenIdToClaim()\":{\"notice\":\"The next token ID of the NFT that can be claimed.\"},\"nextTokenIdToMint()\":{\"notice\":\"The tokenId of the next NFT that will be minted / lazy minted.\"},\"owner()\":{\"notice\":\"Returns the owner of the contract.\"},\"reveal(uint256,bytes)\":{\"notice\":\"Lets an account with `MINTER_ROLE` reveal the URI for a batch of 'delayed-reveal' NFTs.\"},\"royaltyInfo(uint256,uint256)\":{\"notice\":\"View royalty info for a given token and sale price.\"},\"setBurnToClaimInfo((address,uint8,uint256,uint256,address))\":{\"notice\":\"Sets the configuration for burning tokens to claim new tokens.\"},\"setContractURI(string)\":{\"notice\":\"Lets a contract admin set the URI for contract-level metadata.\"},\"setDefaultRoyaltyInfo(address,uint256)\":{\"notice\":\"Updates default royalty recipient and bps.\"},\"setMaxTotalMinted(uint256)\":{\"notice\":\"Lets a contract admin set the global maximum NFTs that can be minted.\"},\"setOwner(address)\":{\"notice\":\"Lets an authorized wallet set a new owner for the contract.\"},\"setPlatformFeeInfo(address,uint256)\":{\"notice\":\"Updates the platform fee recipient and bps.\"},\"setPrimarySaleRecipient(address)\":{\"notice\":\"Updates primary sale recipient.\"},\"setRoyaltyInfoForToken(uint256,address,uint256)\":{\"notice\":\"Updates default royalty recipient and bps for a particular token.\"},\"supportsInterface(bytes4)\":{\"notice\":\"See ERC 165\"},\"tokenURI(uint256)\":{\"notice\":\"Returns the URI for a given tokenId.\"},\"totalMinted()\":{\"notice\":\"Returns the total amount of tokens minted in the contract.\"},\"verifyBurnToClaim(address,uint256,uint256)\":{\"notice\":\"Verifies an attempt to burn tokens to claim new tokens.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/prebuilts/unaudited/burn-to-claim-drop/extension/BurnToClaimDrop721Logic.sol\":\"BurnToClaimDrop721Logic\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@std/=lib/forge-std/src/\",\":@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/\",\":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/\",\":contracts/=contracts/\",\":ds-test/=lib/ds-test/src/\",\":dynamic-contracts/=lib/dynamic-contracts/src/\",\":erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/ERC721A-Upgradeable/\",\":erc721a/=lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/\"]},\"sources\":{\"contracts/eip/ERC165.sol\":{\"keccak256\":\"0x0ea604ea6ebe99809a2f620009c8dead82d7fb17ab12b734e1e29c8ceb85938b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d9d109154c913e34d107db2cec5608dd8a55075dee35ae77aa78ebb9ff7d856c\",\"dweb:/ipfs/QmW8QKw4kag1Bv68FjSZiGvPP8WDocjdhLSd3ssUXZ5Kgr\"]},\"contracts/eip/ERC721AUpgradeable.sol\":{\"keccak256\":\"0x6eb911bd484664ced4736cf480ee3ff3e3938a8072d58f16f009281f026041a7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6088bb2d0bd13cc3a05aeb9e7e809e727cae21554e2be7fc2df5e26bb222b6e0\",\"dweb:/ipfs/QmaEfgccafiu8mcKzWRUVzM5LjMhqWFSCPq5tPjokcAvce\"]},\"contracts/eip/interface/IERC1155.sol\":{\"keccak256\":\"0x17c265f3f47161c9d2f6c7f7f4040440df9ad4cd7eb74eb411bf25a94b542f9e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c4f468eb184f2a08909834b51e33e854741647f9798aa1e6746f3f1b69525552\",\"dweb:/ipfs/QmbCMy9vJLga2dCxGG6nXW7VKGqsMrzU8phPhcd58xkapq\"]},\"contracts/eip/interface/IERC165.sol\":{\"keccak256\":\"0x35d0a916f70344a5fcc6c67cb531b6150d2fce43e72a6282385eab02020f2f49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75ccd8b9a8b52a93b8097fcb8181b7afb6d72bbe6eaabf434f0481a7a207cc8a\",\"dweb:/ipfs/QmPUZAEE4nwkijcE2amAXAWEVGVG5XaKWGhpgnRwpAf93R\"]},\"contracts/eip/interface/IERC20.sol\":{\"keccak256\":\"0x5bdd9dd97ba7d9d7c9a2953db287e4d9d7fa93a27a96bc2e72a8da4919b6f7ff\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://45527c265ee5de6bbb3ecfc052e7b1175531a82c2ac16172020aee855f7dd592\",\"dweb:/ipfs/QmVZthqbG916qUQSwv1LE8bB58ZGQ1VfQbLbbRV5urfEYA\"]},\"contracts/eip/interface/IERC2981.sol\":{\"keccak256\":\"0x7886c17b1bc3df885201378fd070d2f00d05fa54f20f7daf10382ec6ff4bd0c9\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://a0802623ba9555f6d186bab5fd139203b643e88ea31d78f4f05cddd4008ac6cf\",\"dweb:/ipfs/QmYbqzSKkKmF2xYeH1zGNewBDNAhukuaZEUVAvYgnKt1He\"]},\"contracts/eip/interface/IERC721.sol\":{\"keccak256\":\"0xbd9f2dd131e8f1e4e50b1b116eae917510ab9bf5d4356de37c5daf4cffdfa049\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ac3530b317083464271b100de1976ed9179b9e7d5a4fc3d992c61c80676a676\",\"dweb:/ipfs/QmUq1AVzymvp7Y8H1eypGEGU4icjzn5vDSvKMNpXnoaeMT\"]},\"contracts/eip/interface/IERC721A.sol\":{\"keccak256\":\"0xba8dd210c2a35a4e82cfc1e6586a3033fe337e40c23798793d7c8cd31694e0cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://368eedd471b0aa41e83c2233aba9939ce25daae28de6b5ab427399ac91140eb8\",\"dweb:/ipfs/QmeMQTGpAGN4YZV8GPjrZr4zUtQ9Macsaset3FFY5CBVP5\"]},\"contracts/eip/interface/IERC721Metadata.sol\":{\"keccak256\":\"0x7f80ade420dd9bf39c4dbca10484b625e2096ee332c22a00e658148f170ee5fb\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7bcac290ef069b09e887e6c80af6a77c23e935bc271622585f61339779ac485e\",\"dweb:/ipfs/QmbqzDQ2pCtKrJcD7LJcBDUX6nfmx2YtcTDAhi3noX5rc4\"]},\"contracts/eip/interface/IERC721Receiver.sol\":{\"keccak256\":\"0xd5fa74b4fb323776fa4a8158800fec9d5ac0fec0d6dd046dd93798632ada265f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33017a30a99cc5411a9e376622c31fc4a55cfc6a335e2f57f00cbf24a817ff3f\",\"dweb:/ipfs/QmWNQtWTPhA7Lo8nbxbc8KFMvZwbFYB8fSeEQ3vuapSV4a\"]},\"contracts/extension/interface/IBurnToClaim.sol\":{\"keccak256\":\"0x3bde8dde8fddeda9f0ce33367cbc6c3eea00277bd46308693dc828aa0baa9b92\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b9d53a5ee9258bc9f972f963fcde4b4069515a154563a08e5e4d2e49ef7f1202\",\"dweb:/ipfs/QmVQm57F8Qi98Pa5UsVhm1B2kE4s8fgCkx7a6qG1g5Cngz\"]},\"contracts/extension/interface/IClaimCondition.sol\":{\"keccak256\":\"0x391e69970031edb30dfa59f8db33c7446b349cd5ec505fd99f0f0b672b19e6d6\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fd9eafca6098421f3aa25bf0a0b24386facc764b7ecb8e6ce4a890afa3c6d459\",\"dweb:/ipfs/QmPXTSX2ie5wsZ6FyXWS4YMa7aPpYNyza9Rym1n799B5LU\"]},\"contracts/extension/interface/IClaimConditionMultiPhase.sol\":{\"keccak256\":\"0x8388214d6cc8f1fd481aed7e062a8b23d5959e870a56076017fcf474404dbbfa\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://54c039ba9f0e674a6bdbb0ab015ad4054feffaea7eb3cc7c485aa95761156125\",\"dweb:/ipfs/QmTya89XYsc1iGAhfsHeZkgGaAv7ivA5Vr4jrGCifYHmKh\"]},\"contracts/extension/interface/IContractMetadata.sol\":{\"keccak256\":\"0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a\",\"dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr\"]},\"contracts/extension/interface/IDelayedReveal.sol\":{\"keccak256\":\"0xbbe98263ebce49f81cb42f8bf1e7e631afd81cda73be79b907e81a2f54fd2123\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://76913c2086e309c97ac0d5be72bbe23e66fe35e231c75318993c14e6aa4c0138\",\"dweb:/ipfs/QmXwr49U275Cam8x9mYcNdcCmZHUYuBge3CtFPkBkEMzL4\"]},\"contracts/extension/interface/IDrop.sol\":{\"keccak256\":\"0xa8fa4a9fde50a512383c1608295dab741357852822bf089b64dfc8e89041bbad\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://67e26a8f07f05daeebae7a4a652bfe90d4b62d057b737e00a9d3c1782f5bb093\",\"dweb:/ipfs/QmR9b1N5BAuRibaK1iJkyUD7kXE7F3GocjM985oT9wPdZo\"]},\"contracts/extension/interface/IERC2771Context.sol\":{\"keccak256\":\"0x47c68c2b49d42008eb5fe42cf7cde539c380c37fc58927ca65711f846da28ca1\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e8a91fd4dd913f5d26dd9594c8159324efe2a3530e92d8d27753e61db5b1dc41\",\"dweb:/ipfs/QmZUgkaF894U6EK1wnNiLnGmEa7fJoVkhagAiAkxwRdAnp\"]},\"contracts/extension/interface/ILazyMint.sol\":{\"keccak256\":\"0x480953502a40e438d855392e322adc0369e2109f6d46fb9ec2bb3ad0afbb0aec\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2b3bb332d4f5e38f9786b00564ad417e48c689b4a92a60888c3845b986c995a3\",\"dweb:/ipfs/QmPVM4KTUeLD7uVCfP8MBQNRo7pU8xF3rXQuDcx3C6cLxA\"]},\"contracts/extension/interface/IOwnable.sol\":{\"keccak256\":\"0xd659a64da6264fdd50ee379be032fea4917eba4fadfd6d366107fb17e46907f3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c15940c4a3d229f4fdd1226fe297a58fde10b07b86a34de1ed11a8802dd5dea9\",\"dweb:/ipfs/QmS8p8CxWiahLkYsCWNhFjCnmQzuc4ck3kjYYuCFj8LsmC\"]},\"contracts/extension/interface/IPermissions.sol\":{\"keccak256\":\"0xc0cd1f87bac474a06f85e2b341b9b57662aee957fc24180d42c872481c2f2ae3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7dec3eed451d63867531d693f0be3279fa2c9aef3130f0826c3520c06820fa5d\",\"dweb:/ipfs/QmTYANrcPdd9SCe99DWsKJ19evNRQKQGZeoS1Keew4M2cS\"]},\"contracts/extension/interface/IPlatformFee.sol\":{\"keccak256\":\"0x8c23c2a223a3b94ccce125b418e5fabfb631695d927e336512bc8dca61bbc736\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://86dd8c93e75cb3a44d64c873154ee3857b604d1b07a9e52c120870172c2e9a34\",\"dweb:/ipfs/QmWXxEi7ygoRjN8yWYfVGbfhuwVg8bkLoHNzr3xMNa1VRv\"]},\"contracts/extension/interface/IPrimarySale.sol\":{\"keccak256\":\"0x77c89cb8d9b781b0a08b1fa81c95a0dd5c19200b2fb0dc884c1084b931624004\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a37b042af11a08ba5518dadf72c91745d1b5f42b1c20ea5282492bfd18f53869\",\"dweb:/ipfs/QmWEYYG5VqR8MRfr2rydDV98GLKmaJtCC8G1W7MzJ9qFnF\"]},\"contracts/extension/interface/IRoyalty.sol\":{\"keccak256\":\"0x13912ba3970fdedd1eb5bf8bf0bcc5e64e43f2cadb8d22c3d6fb695fd9877385\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b84d19df7aa9cb7460cca50ab050cdcfffb62f53c246daf35df276cad7088e9b\",\"dweb:/ipfs/QmNPPHJuiW1KCcq3aXELnA4X8NaSPM9S2vHbsBEEDYiwP8\"]},\"contracts/extension/upgradeable/BatchMintMetadata.sol\":{\"keccak256\":\"0x2d8a435ef16e097d7120d8d9e44314bc668524ecf4f8ff533925191ee5241021\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e201928a50a7491ccb753729dd95dcb219515c390c19d391ff7643db72c589af\",\"dweb:/ipfs/QmRJ8siTG9iA5HyQGxG1hQTEAVGWFt6LmUXnfaPd5mXKUF\"]},\"contracts/extension/upgradeable/BurnToClaim.sol\":{\"keccak256\":\"0xa8a5f81797157595be663b4392945699aa5b693c23ec50604621bf96ad458bf3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f646b32536020a3e084f2fc0df1b2202a693e6382da5e27c73654ff6b5402fb8\",\"dweb:/ipfs/QmSJYiApWD2QPNJ3uKkUdQrN8Qhiezsv53gc1wgYbp8QU5\"]},\"contracts/extension/upgradeable/ContractMetadata.sol\":{\"keccak256\":\"0xe42f63bdf826446047de0825bc930d8a157cf613cf35b74cd10ade9246ed5907\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a907ddcadb07f70600753b37b129d7be234f44cd557aaa0a5833b0a796a2a826\",\"dweb:/ipfs/QmdhJ3Y4N6nnQDgLCPVmyRU26sgJfkLxUnqgSt911Eqmms\"]},\"contracts/extension/upgradeable/DelayedReveal.sol\":{\"keccak256\":\"0xfc58a7f52d1e7bd2f177d60eeba4db1bb8a6a6f216ac24d3ab27b3e02b776588\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5db70d2a22b6d81e39ac48212fd362ccd319480a4bcf055f5efbae36f8844eea\",\"dweb:/ipfs/QmWwUuh6g9DDHLmVjywDGv4wHWJCyZuL23FfRCrwXmnLwT\"]},\"contracts/extension/upgradeable/Drop.sol\":{\"keccak256\":\"0xf94245ca1933f06f2696341366dba8a133e4f5de2245a40a5290d70bbb50995c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1039ca1199b61be6dc259da301cb43b72c6c79a5f3b71962f8b54aecbc821468\",\"dweb:/ipfs/QmQPb8e2aksAT2CWpGWsF1jxGRbZTKU1m873Fe6wb1Hr2B\"]},\"contracts/extension/upgradeable/ERC2771ContextUpgradeable.sol\":{\"keccak256\":\"0x9000e8ba1978a32b8ffac366f2128806ee89247ed250992c13c1467be9aad2cf\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://e27c3bb411bfd82501a3df7e35aada7dce0583df796ae086aaba38e6b2a5e455\",\"dweb:/ipfs/QmPcv2ccTn1DiQPRdYb6V6SwDiRxVZRYZkrvswYeq8L9sq\"]},\"contracts/extension/upgradeable/Initializable.sol\":{\"keccak256\":\"0x86a70269e008e05d0ad9deb6f8b3ae64c6502d66d35aabc4a71968c27f2e5541\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://e5d4ee97df8a7d0675e1d07ab394f27a20d45e7bae5d60a440697671f1ab1994\",\"dweb:/ipfs/Qmbpj95U5M3mJVVUno7ne6CgggDv1dRYte8WXe33fztZ7b\"]},\"contracts/extension/upgradeable/LazyMint.sol\":{\"keccak256\":\"0xca278cbb41bd1a0f51ecb1a1dbc9d79c23af01e35fdac2f1fe235edd3837260f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://87a28f0f4f1dd9b4e2cb9917aa0e8819a81633eee97cd2ed2ab31fe41f98446f\",\"dweb:/ipfs/QmY7wC2eMS9otXQDZRRk2yokGPzVTAG7Lwv61c4MngibBm\"]},\"contracts/extension/upgradeable/Ownable.sol\":{\"keccak256\":\"0x33dee90adc13a41f7288082941cfde1980c193e86ca63f0703c6568b3e746595\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b5f0d7ebbe9c8f9d3a56ab55548ccc72dc9c7f7c365c46142121da4681979a71\",\"dweb:/ipfs/QmURLfv5Eqezf85i2r6idTwezZnJAB6jeM3Vk8H3Fm6PYS\"]},\"contracts/extension/upgradeable/Permissions.sol\":{\"keccak256\":\"0x1ced1057ad0c07677db95c9ea291a8748c5cf14f1cce39423d28fab4413fb7fd\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://aeae206f911e13618737544b287d077f870d60c8d40f599aad20c5ffa5730c6e\",\"dweb:/ipfs/QmQ3yy9o7iWAfLrpEDMMB6uA6cw9HJxKCPGjxaEVG4AQrs\"]},\"contracts/extension/upgradeable/PlatformFee.sol\":{\"keccak256\":\"0x737a1f5b8225ccdc3a14b76121c3fc35779f44a1c19bcadeb2019f338847ba36\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ab4b5596b075af3d590efeed4686a940a0817844701c82bfa29ddd9c278abb61\",\"dweb:/ipfs/QmWeqM8Y1MB3gRZMKSCXtzkj5HqzVnezZ7zcMaG5scKpA5\"]},\"contracts/extension/upgradeable/PrimarySale.sol\":{\"keccak256\":\"0xf35b8122490c76cd6734e992c45782723bb450b8c3b058e3333e1438fb855625\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://70a8494f03a34f4198eb99b6c88a0f821d5fee53331eb718617f8979658ad31d\",\"dweb:/ipfs/Qmdr3aexVCgxcVk3deASvsbZqPFcrRMp6okkApAYDgU4Mg\"]},\"contracts/extension/upgradeable/Royalty.sol\":{\"keccak256\":\"0x2f5da520d841b2718660ffa35a28a4a2467a223b5e0cd69476fcfba1375f77b4\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ea1a001058a5e443639213432d7e9be5b2be4cff1fb5141d59d524b51d205491\",\"dweb:/ipfs/QmchGWE3veeQgNBb3y4gLaiD1x1MeK2zc5SR6GDstHMBVs\"]},\"contracts/external-deps/openzeppelin/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xa6149938a7c7c8af4244743aeaafcfb1fd9ce15ad45de58fa9576f0ed5599b2c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://839aa4ea6ef6d1972881bfd7420a9ddcd2f37139e3f0bf25310f93f48410702d\",\"dweb:/ipfs/QmSH65kStfbgMbfjFdfJqV412omPy6nB1JMvMt9q7SsytW\"]},\"contracts/external-deps/openzeppelin/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/infra/interface/IWETH.sol\":{\"keccak256\":\"0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1\",\"dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU\"]},\"contracts/lib/CurrencyTransferLib.sol\":{\"keccak256\":\"0x4a30bc9a8cd6cc8b855621fb1a651e2c3a1639b0ad153f1139c3ba463605672d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://417cc64ec6393f3cc89981ca9c32bbcc444a5f91363d69f84dd8ace888b2b859\",\"dweb:/ipfs/QmZeaQsYGx4VNoP8e1fcwC87PwvyakheWYeuwEwhFSJnvB\"]},\"contracts/lib/MerkleProof.sol\":{\"keccak256\":\"0xfeb51ecaba6f9c1649a143825dc3b7ca0eb9edff7787c7a54957dfd542f7ece0\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://8819ab0f7546a6a0dc126d5dbf019ba015563220689f661b1da4174f7ce87bbf\",\"dweb:/ipfs/QmT6Q9YQGMJbCWhE6G4ze8dsqjMyewnErTNGgLFSAHkFU7\"]},\"contracts/lib/TWAddress.sol\":{\"keccak256\":\"0x460f032cf3bf43d586e126ab2ec8be4335767f497ccb699741546a1cfba94a7e\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://28fcbf6dde6c2eeb9864f6ec6f21dcc81ec426877debf4b912f2f3bc5b0fc91e\",\"dweb:/ipfs/QmS1SHrZDfefX8EE7DdvszTY6VPCHydf4HM7NKJ2gP72e6\"]},\"contracts/lib/TWStrings.sol\":{\"keccak256\":\"0xef7e9954d888f99baffc10db1d9bf6a2beb66c842d81dea90352ddded22cbbf8\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://832415134684f5413f9d0f3f5536aa30848690cfe54769f7730a3807438f3bf9\",\"dweb:/ipfs/QmduTiUdtsnyJVMXpdomohEWDVg46aZhnS9uTURu4x1NYt\"]},\"contracts/prebuilts/unaudited/burn-to-claim-drop/extension/BurnToClaimDrop721Logic.sol\":{\"keccak256\":\"0xc3e85ffe185395d7811f5ad121d16bd431a5fa70915f706b8ca9d841a41c41cc\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a4c7241337c2befb25a6990caa8e95779776c6be1ee6ffefa46120059b6b550b\",\"dweb:/ipfs/QmPUehGxzVRpJw2jpugpwszoH755ft572Awruq3MesGEHR\"]},\"contracts/prebuilts/unaudited/burn-to-claim-drop/extension/BurnToClaimDrop721Storage.sol\":{\"keccak256\":\"0x06e218a302f75c0e31b6c28518f9578c3e2ce79340265d1f78babfe3ae297f07\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://66caed12c4f528a2f06b8f8ea1002b1eb993bf27153c7b754506f49e1e2eaa96\",\"dweb:/ipfs/QmdufpZy2zwqx1G7c7ktbFb5v3dArGLk3Mu42m4115aXog\"]},\"lib/openzeppelin-contracts/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x447a21c87433c0f11252912313a96f3454629ef88cca7a4eefbb283b3ec409f9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://67d35750fb5ced798b82b8ab085eb5f71529b0d4f72152d182b5bebdc770b20d\",\"dweb:/ipfs/QmUqmyzRZxaLvSXig87HFZgiUxv9ivc2VqfAbxEw7rx32d\"]},\"lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6392f2cfe3a5ee802227fe7a2dfd47096d881aec89bddd214b35c5b46d3cd941\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd9c47a375639888e726a99da718890ba16d17d7ad9eacb0ccc892d46d1b3ee0\",\"dweb:/ipfs/Qmb41W5RUjy2sWg49A2rMnxekSeEk6SvGyJL5tyCCSr7un\"]},\"lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":{\"keccak256\":\"0xb11d1ade7146ac3da122e1f387ea82b0bd385d50823946c3f967dbffef3e9f4f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0a5fc67f024fd2d261543c52a33a2a90b96d2ea1867829e8e12fe6b89b53aee1\",\"dweb:/ipfs/QmPc3ryH7Yv4FoY14CGbaXuQVQ7iu2yrxVAtmbGrN7bscf\"]},\"lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797\",\"dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x0b606994df12f0ce35f6d2f6dcdde7e55e6899cdef7e00f180980caa81e3844e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c827c981a552d1c76c96060e92f56b52bc20c6f9b4dbf911fe99ddbfb41f2ea\",\"dweb:/ipfs/QmW8xvJdzHrr8Ry34C7viBsgG2b8T1mL4BQWJ5CdfD9JLB\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f\",\"dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Burnable.sol\":{\"keccak256\":\"0xfa6873a010382f62e9ffe4592b305ef6e60f55502c95ed0ffa51eb10b5200d45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f86000c6885fb5a0a8bd5cd2595d302f0b4038411d66b85b07fa10590f844c2e\",\"dweb:/ipfs/QmeZuXaxdr7NH2wUAprx3BcLTke9RtcptAZgRKfQVHops5\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.12+commit.f00d7308"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "ApprovalCallerNotOwnerNorApproved"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ApprovalQueryForNonexistentToken"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ApprovalToCurrentOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ApproveToCaller"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BalanceQueryForZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MintToZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MintZeroQuantity"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OwnerQueryForNonexistentToken"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferCallerNotOwnerNorApproved"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferFromIncorrectOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferToNonERC721ReceiverImplementer"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferToZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "URIQueryForNonexistentToken"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "approved",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_fromTokenId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_toTokenId",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "BatchMetadataUpdate",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "struct IClaimCondition.ClaimCondition[]",
              "name": "claimConditions",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "startTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxClaimableSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "supplyClaimed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "merkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "metadata",
                  "type": "string"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "resetEligibility",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ClaimConditionsUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "prevURI",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "newURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ContractURIUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newRoyaltyRecipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newRoyaltyBps",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DefaultRoyalty",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "platformFeeRecipient",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "flatFee",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "FlatPlatformFeeUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "maxTotalMinted",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MaxTotalMintedUpdated",
          "anonymous": false
        },
        {
          "inputs": [],
          "type": "event",
          "name": "MetadataFrozen",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "prevOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnerUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "platformFeeRecipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "platformFeeBps",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PlatformFeeInfoUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "enum IPlatformFee.PlatformFeeType",
              "name": "feeType",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PlatformFeeTypeUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "PrimarySaleRecipientUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "royaltyRecipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "royaltyBps",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RoyaltyForToken",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "string",
              "name": "revealedURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokenURIRevealed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "originContract",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "tokenOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "burnTokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "quantity",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensBurnedAndClaimed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "claimConditionIndex",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "claimer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "startTokenId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "quantityClaimed",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensClaimed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "startTokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "endTokenId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "baseURI",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "encryptedBaseURI",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensLazyMinted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_burnTokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_quantity",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "burnAndClaim"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_quantity",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_currency",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "struct IDrop.AllowlistProof",
              "name": "_allowlistProof",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32[]",
                  "name": "proof",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "claim"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "claimCondition",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "contractURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "key",
              "type": "bytes"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "encryptDecrypt",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "result",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "encryptedData",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getActiveClaimConditionId",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getApproved",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getBaseURICount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getBatchIdAtIndex",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getBurnToClaimInfo",
          "outputs": [
            {
              "internalType": "struct IBurnToClaim.BurnToClaimInfo",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "originContractAddress",
                  "type": "address"
                },
                {
                  "internalType": "enum IBurnToClaim.TokenType",
                  "name": "tokenType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "mintPriceForNewToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_conditionId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getClaimConditionById",
          "outputs": [
            {
              "internalType": "struct IClaimCondition.ClaimCondition",
              "name": "condition",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "startTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxClaimableSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "supplyClaimed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "merkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "metadata",
                  "type": "string"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getDefaultRoyaltyInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getPlatformFeeInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_batchId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "_key",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRevealURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "revealedURI",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoyaltyInfoForToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_conditionId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_claimer",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getSupplyClaimedByWallet",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "supplyClaimedByWallet",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_batchId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isEncryptedBatch",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "forwarder",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isTrustedForwarder",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "_baseURIForTokens",
              "type": "string"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "lazyMint",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "maxTotalMinted",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nextTokenIdToClaim",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nextTokenIdToMint",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "primarySaleRecipient",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_index",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "_key",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "reveal",
          "outputs": [
            {
              "internalType": "string",
              "name": "revealedURI",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "salePrice",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "royaltyInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "royaltyAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "struct IBurnToClaim.BurnToClaimInfo",
              "name": "_burnToClaimInfo",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "originContractAddress",
                  "type": "address"
                },
                {
                  "internalType": "enum IBurnToClaim.TokenType",
                  "name": "tokenType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "mintPriceForNewToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setBurnToClaimInfo"
        },
        {
          "inputs": [
            {
              "internalType": "struct IClaimCondition.ClaimCondition[]",
              "name": "_conditions",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "startTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxClaimableSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "supplyClaimed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "merkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "metadata",
                  "type": "string"
                }
              ]
            },
            {
              "internalType": "bool",
              "name": "_resetClaimEligibility",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setClaimConditions"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_uri",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setContractURI"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_royaltyRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_royaltyBps",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDefaultRoyaltyInfo"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_maxTotalMinted",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMaxTotalMinted"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_platformFeeRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_platformFeeBps",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPlatformFeeInfo"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_saleRecipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPrimarySaleRecipient"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_bps",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRoyaltyInfoForToken"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalMinted",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_tokenOwner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_quantity",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "verifyBurnToClaim"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_conditionId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_claimer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_quantity",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_currency",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "struct IDrop.AllowlistProof",
              "name": "_allowlistProof",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32[]",
                  "name": "proof",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "verifyClaim",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isOverride",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "approve(address,uint256)": {
            "details": "See {IERC721-approve}."
          },
          "balanceOf(address)": {
            "details": "See {IERC721-balanceOf}."
          },
          "claim(address,uint256,address,uint256,(bytes32[],uint256,uint256,address),bytes)": {
            "details": "Lets an account claim tokens."
          },
          "encryptDecrypt(bytes,bytes)": {
            "details": "Encrypt/decrypt given `data` with `key`. Uses inline assembly.                  See: https://ethereum.stackexchange.com/questions/69825/decrypt-message-on-chain",
            "params": {
              "data": "Bytes of data to encrypt/decrypt.",
              "key": "Secure key used by caller for encryption/decryption."
            },
            "returns": {
              "result": " Output after encryption/decryption of given data."
            }
          },
          "encryptedData(uint256)": {
            "details": "Mapping from tokenId of a batch of tokens => to delayed reveal data."
          },
          "getActiveClaimConditionId()": {
            "details": "At any given moment, returns the uid for the active claim condition."
          },
          "getApproved(uint256)": {
            "details": "See {IERC721-getApproved}."
          },
          "getBaseURICount()": {
            "details": "Each batch of tokens has an in ID and an associated `baseURI`.                  See {batchIds}."
          },
          "getBatchIdAtIndex(uint256)": {
            "details": "See {getBaseURICount}.",
            "params": {
              "_index": "ID of a token."
            }
          },
          "getClaimConditionById(uint256)": {
            "details": "Returns the claim condition at the given uid."
          },
          "getPlatformFeeInfo()": {
            "details": "Returns the platform fee recipient and bps."
          },
          "getRevealURI(uint256,bytes)": {
            "details": "Reveal encrypted base URI for `_batchId` with caller/admin's `_key` used for encryption.                      Reverts if there's no encrypted URI for `_batchId`.                      See {encryptDecrypt}.",
            "params": {
              "_batchId": "ID of the batch for which URI is being revealed.",
              "_key": "Secure key used by caller/admin for encryption of baseURI."
            },
            "returns": {
              "revealedURI": "Decrypted base URI."
            }
          },
          "getRoyaltyInfoForToken(uint256)": {
            "details": "Returns royalty recipient and bps for `_tokenId`.",
            "params": {
              "_tokenId": "The tokenID of the NFT for which to query royalty info."
            }
          },
          "getSupplyClaimedByWallet(uint256,address)": {
            "details": "Returns the supply claimed by claimer for a given conditionId."
          },
          "isApprovedForAll(address,address)": {
            "details": "See {IERC721-isApprovedForAll}."
          },
          "isEncryptedBatch(uint256)": {
            "details": "Returns `true` if `_batchId`'s base URI is encrypted.",
            "params": {
              "_batchId": "ID of a batch of NFTs."
            }
          },
          "name()": {
            "details": "See {IERC721Metadata-name}."
          },
          "ownerOf(uint256)": {
            "details": "See {IERC721-ownerOf}."
          },
          "primarySaleRecipient()": {
            "details": "Returns primary sale recipient address."
          },
          "royaltyInfo(uint256,uint256)": {
            "details": "Returns royalty amount and recipient for `tokenId` and `salePrice`.",
            "params": {
              "salePrice": "Sale price of the token.",
              "tokenId": "The tokenID of the NFT for which to query royalty info."
            },
            "returns": {
              "receiver": "       Address of royalty recipient account.",
              "royaltyAmount": "  Royalty amount calculated at current royaltyBps value."
            }
          },
          "safeTransferFrom(address,address,uint256)": {
            "details": "See {IERC721-safeTransferFrom}."
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            "details": "See {IERC721-safeTransferFrom}."
          },
          "setApprovalForAll(address,bool)": {
            "details": "See {IERC721-setApprovalForAll}."
          },
          "setClaimConditions((uint256,uint256,uint256,uint256,bytes32,uint256,address,string)[],bool)": {
            "details": "Lets a contract admin set claim conditions."
          },
          "setContractURI(string)": {
            "details": "Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.",
            "params": {
              "_uri": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "setDefaultRoyaltyInfo(address,uint256)": {
            "details": "Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {DefaultRoyalty Event}; See {_setupDefaultRoyaltyInfo}.",
            "params": {
              "_royaltyBps": "Updated royalty bps.",
              "_royaltyRecipient": "Address to be set as default royalty recipient."
            }
          },
          "setOwner(address)": {
            "params": {
              "_newOwner": "The address to set as the new owner of the contract."
            }
          },
          "setPlatformFeeInfo(address,uint256)": {
            "details": "Caller should be authorized to set platform fee info.                  See {_canSetPlatformFeeInfo}.                  Emits {PlatformFeeInfoUpdated Event}; See {_setupPlatformFeeInfo}.",
            "params": {
              "_platformFeeBps": "Updated platformFeeBps.",
              "_platformFeeRecipient": "Address to be set as new platformFeeRecipient."
            }
          },
          "setPrimarySaleRecipient(address)": {
            "details": "Caller should be authorized to set primary sales info.                  See {_canSetPrimarySaleRecipient}.                  Emits {PrimarySaleRecipientUpdated Event}; See {_setupPrimarySaleRecipient}.",
            "params": {
              "_saleRecipient": "Address to be set as new recipient of primary sales."
            }
          },
          "setRoyaltyInfoForToken(uint256,address,uint256)": {
            "details": "Sets royalty info for `_tokenId`. Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {RoyaltyForToken Event}; See {_setupRoyaltyInfoForToken}.",
            "params": {
              "_bps": "Updated royalty bps for the token Id.",
              "_recipient": "Address to be set as royalty recipient for given token Id."
            }
          },
          "symbol()": {
            "details": "See {IERC721Metadata-symbol}."
          },
          "tokenURI(uint256)": {
            "details": "The URI, for a given tokenId, is returned once it is lazy minted, even if it might not be actually minted. (See `LazyMint`)"
          },
          "totalSupply()": {
            "details": "Burned tokens are calculated here, use _totalMinted() if you want to count just minted tokens."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC721-transferFrom}."
          },
          "verifyClaim(uint256,address,uint256,address,uint256,(bytes32[],uint256,uint256,address))": {
            "details": "Checks a request to claim NFTs against the active claim condition's criteria."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "burn(uint256)": {
            "notice": "Burns `tokenId`. See {ERC721-_burn}."
          },
          "burnAndClaim(uint256,uint256)": {
            "notice": "Claim lazy minted tokens after burning required tokens from origin contract."
          },
          "contractURI()": {
            "notice": "Returns the contract metadata URI."
          },
          "encryptDecrypt(bytes,bytes)": {
            "notice": "Encrypt/decrypt data on chain."
          },
          "getBaseURICount()": {
            "notice": "Returns the count of batches of NFTs."
          },
          "getBatchIdAtIndex(uint256)": {
            "notice": "Returns the ID for the batch of tokens the given tokenId belongs to."
          },
          "getBurnToClaimInfo()": {
            "notice": "Returns the confugration for burning tokens to claim new tokens."
          },
          "getDefaultRoyaltyInfo()": {
            "notice": "Returns the defualt royalty recipient and BPS for this contract's NFTs."
          },
          "getRevealURI(uint256,bytes)": {
            "notice": "Returns revealed URI for a batch of NFTs."
          },
          "getRoyaltyInfoForToken(uint256)": {
            "notice": "View royalty info for a given token."
          },
          "isEncryptedBatch(uint256)": {
            "notice": "Returns whether the relvant batch of NFTs is subject to a delayed reveal."
          },
          "lazyMint(uint256,string,bytes)": {
            "notice": "Lets an account with `MINTER_ROLE` lazy mint 'n' NFTs.          The URIs for each token is the provided `_baseURIForTokens` + `{tokenId}`."
          },
          "maxTotalMinted()": {
            "notice": "Global max total NFTs that can be minted."
          },
          "nextTokenIdToClaim()": {
            "notice": "The next token ID of the NFT that can be claimed."
          },
          "nextTokenIdToMint()": {
            "notice": "The tokenId of the next NFT that will be minted / lazy minted."
          },
          "owner()": {
            "notice": "Returns the owner of the contract."
          },
          "reveal(uint256,bytes)": {
            "notice": "Lets an account with `MINTER_ROLE` reveal the URI for a batch of 'delayed-reveal' NFTs."
          },
          "royaltyInfo(uint256,uint256)": {
            "notice": "View royalty info for a given token and sale price."
          },
          "setBurnToClaimInfo((address,uint8,uint256,uint256,address))": {
            "notice": "Sets the configuration for burning tokens to claim new tokens."
          },
          "setContractURI(string)": {
            "notice": "Lets a contract admin set the URI for contract-level metadata."
          },
          "setDefaultRoyaltyInfo(address,uint256)": {
            "notice": "Updates default royalty recipient and bps."
          },
          "setMaxTotalMinted(uint256)": {
            "notice": "Lets a contract admin set the global maximum NFTs that can be minted."
          },
          "setOwner(address)": {
            "notice": "Lets an authorized wallet set a new owner for the contract."
          },
          "setPlatformFeeInfo(address,uint256)": {
            "notice": "Updates the platform fee recipient and bps."
          },
          "setPrimarySaleRecipient(address)": {
            "notice": "Updates primary sale recipient."
          },
          "setRoyaltyInfoForToken(uint256,address,uint256)": {
            "notice": "Updates default royalty recipient and bps for a particular token."
          },
          "supportsInterface(bytes4)": {
            "notice": "See ERC 165"
          },
          "tokenURI(uint256)": {
            "notice": "Returns the URI for a given tokenId."
          },
          "totalMinted()": {
            "notice": "Returns the total amount of tokens minted in the contract."
          },
          "verifyBurnToClaim(address,uint256,uint256)": {
            "notice": "Verifies an attempt to burn tokens to claim new tokens."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=lib/chainlink/",
        "@ds-test/=lib/ds-test/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@std/=lib/forge-std/src/",
        "@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/",
        "ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/",
        "ERC721A/=lib/ERC721A/contracts/",
        "chainlink/=lib/chainlink/",
        "contracts/=contracts/",
        "ds-test/=lib/ds-test/src/",
        "dynamic-contracts/=lib/dynamic-contracts/src/",
        "erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/",
        "erc721a-upgradeable/=lib/ERC721A-Upgradeable/",
        "erc721a/=lib/ERC721A/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/prebuilts/unaudited/burn-to-claim-drop/extension/BurnToClaimDrop721Logic.sol": "BurnToClaimDrop721Logic"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/eip/ERC165.sol": {
        "keccak256": "0x0ea604ea6ebe99809a2f620009c8dead82d7fb17ab12b734e1e29c8ceb85938b",
        "urls": [
          "bzz-raw://d9d109154c913e34d107db2cec5608dd8a55075dee35ae77aa78ebb9ff7d856c",
          "dweb:/ipfs/QmW8QKw4kag1Bv68FjSZiGvPP8WDocjdhLSd3ssUXZ5Kgr"
        ],
        "license": "MIT"
      },
      "contracts/eip/ERC721AUpgradeable.sol": {
        "keccak256": "0x6eb911bd484664ced4736cf480ee3ff3e3938a8072d58f16f009281f026041a7",
        "urls": [
          "bzz-raw://6088bb2d0bd13cc3a05aeb9e7e809e727cae21554e2be7fc2df5e26bb222b6e0",
          "dweb:/ipfs/QmaEfgccafiu8mcKzWRUVzM5LjMhqWFSCPq5tPjokcAvce"
        ],
        "license": "MIT"
      },
      "contracts/eip/interface/IERC1155.sol": {
        "keccak256": "0x17c265f3f47161c9d2f6c7f7f4040440df9ad4cd7eb74eb411bf25a94b542f9e",
        "urls": [
          "bzz-raw://c4f468eb184f2a08909834b51e33e854741647f9798aa1e6746f3f1b69525552",
          "dweb:/ipfs/QmbCMy9vJLga2dCxGG6nXW7VKGqsMrzU8phPhcd58xkapq"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC165.sol": {
        "keccak256": "0x35d0a916f70344a5fcc6c67cb531b6150d2fce43e72a6282385eab02020f2f49",
        "urls": [
          "bzz-raw://75ccd8b9a8b52a93b8097fcb8181b7afb6d72bbe6eaabf434f0481a7a207cc8a",
          "dweb:/ipfs/QmPUZAEE4nwkijcE2amAXAWEVGVG5XaKWGhpgnRwpAf93R"
        ],
        "license": "MIT"
      },
      "contracts/eip/interface/IERC20.sol": {
        "keccak256": "0x5bdd9dd97ba7d9d7c9a2953db287e4d9d7fa93a27a96bc2e72a8da4919b6f7ff",
        "urls": [
          "bzz-raw://45527c265ee5de6bbb3ecfc052e7b1175531a82c2ac16172020aee855f7dd592",
          "dweb:/ipfs/QmVZthqbG916qUQSwv1LE8bB58ZGQ1VfQbLbbRV5urfEYA"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC2981.sol": {
        "keccak256": "0x7886c17b1bc3df885201378fd070d2f00d05fa54f20f7daf10382ec6ff4bd0c9",
        "urls": [
          "bzz-raw://a0802623ba9555f6d186bab5fd139203b643e88ea31d78f4f05cddd4008ac6cf",
          "dweb:/ipfs/QmYbqzSKkKmF2xYeH1zGNewBDNAhukuaZEUVAvYgnKt1He"
        ],
        "license": "Apache 2.0"
      },
      "contracts/eip/interface/IERC721.sol": {
        "keccak256": "0xbd9f2dd131e8f1e4e50b1b116eae917510ab9bf5d4356de37c5daf4cffdfa049",
        "urls": [
          "bzz-raw://8ac3530b317083464271b100de1976ed9179b9e7d5a4fc3d992c61c80676a676",
          "dweb:/ipfs/QmUq1AVzymvp7Y8H1eypGEGU4icjzn5vDSvKMNpXnoaeMT"
        ],
        "license": "MIT"
      },
      "contracts/eip/interface/IERC721A.sol": {
        "keccak256": "0xba8dd210c2a35a4e82cfc1e6586a3033fe337e40c23798793d7c8cd31694e0cd",
        "urls": [
          "bzz-raw://368eedd471b0aa41e83c2233aba9939ce25daae28de6b5ab427399ac91140eb8",
          "dweb:/ipfs/QmeMQTGpAGN4YZV8GPjrZr4zUtQ9Macsaset3FFY5CBVP5"
        ],
        "license": "MIT"
      },
      "contracts/eip/interface/IERC721Metadata.sol": {
        "keccak256": "0x7f80ade420dd9bf39c4dbca10484b625e2096ee332c22a00e658148f170ee5fb",
        "urls": [
          "bzz-raw://7bcac290ef069b09e887e6c80af6a77c23e935bc271622585f61339779ac485e",
          "dweb:/ipfs/QmbqzDQ2pCtKrJcD7LJcBDUX6nfmx2YtcTDAhi3noX5rc4"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC721Receiver.sol": {
        "keccak256": "0xd5fa74b4fb323776fa4a8158800fec9d5ac0fec0d6dd046dd93798632ada265f",
        "urls": [
          "bzz-raw://33017a30a99cc5411a9e376622c31fc4a55cfc6a335e2f57f00cbf24a817ff3f",
          "dweb:/ipfs/QmWNQtWTPhA7Lo8nbxbc8KFMvZwbFYB8fSeEQ3vuapSV4a"
        ],
        "license": "MIT"
      },
      "contracts/extension/interface/IBurnToClaim.sol": {
        "keccak256": "0x3bde8dde8fddeda9f0ce33367cbc6c3eea00277bd46308693dc828aa0baa9b92",
        "urls": [
          "bzz-raw://b9d53a5ee9258bc9f972f963fcde4b4069515a154563a08e5e4d2e49ef7f1202",
          "dweb:/ipfs/QmVQm57F8Qi98Pa5UsVhm1B2kE4s8fgCkx7a6qG1g5Cngz"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IClaimCondition.sol": {
        "keccak256": "0x391e69970031edb30dfa59f8db33c7446b349cd5ec505fd99f0f0b672b19e6d6",
        "urls": [
          "bzz-raw://fd9eafca6098421f3aa25bf0a0b24386facc764b7ecb8e6ce4a890afa3c6d459",
          "dweb:/ipfs/QmPXTSX2ie5wsZ6FyXWS4YMa7aPpYNyza9Rym1n799B5LU"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IClaimConditionMultiPhase.sol": {
        "keccak256": "0x8388214d6cc8f1fd481aed7e062a8b23d5959e870a56076017fcf474404dbbfa",
        "urls": [
          "bzz-raw://54c039ba9f0e674a6bdbb0ab015ad4054feffaea7eb3cc7c485aa95761156125",
          "dweb:/ipfs/QmTya89XYsc1iGAhfsHeZkgGaAv7ivA5Vr4jrGCifYHmKh"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IContractMetadata.sol": {
        "keccak256": "0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2",
        "urls": [
          "bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a",
          "dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IDelayedReveal.sol": {
        "keccak256": "0xbbe98263ebce49f81cb42f8bf1e7e631afd81cda73be79b907e81a2f54fd2123",
        "urls": [
          "bzz-raw://76913c2086e309c97ac0d5be72bbe23e66fe35e231c75318993c14e6aa4c0138",
          "dweb:/ipfs/QmXwr49U275Cam8x9mYcNdcCmZHUYuBge3CtFPkBkEMzL4"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IDrop.sol": {
        "keccak256": "0xa8fa4a9fde50a512383c1608295dab741357852822bf089b64dfc8e89041bbad",
        "urls": [
          "bzz-raw://67e26a8f07f05daeebae7a4a652bfe90d4b62d057b737e00a9d3c1782f5bb093",
          "dweb:/ipfs/QmR9b1N5BAuRibaK1iJkyUD7kXE7F3GocjM985oT9wPdZo"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IERC2771Context.sol": {
        "keccak256": "0x47c68c2b49d42008eb5fe42cf7cde539c380c37fc58927ca65711f846da28ca1",
        "urls": [
          "bzz-raw://e8a91fd4dd913f5d26dd9594c8159324efe2a3530e92d8d27753e61db5b1dc41",
          "dweb:/ipfs/QmZUgkaF894U6EK1wnNiLnGmEa7fJoVkhagAiAkxwRdAnp"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/ILazyMint.sol": {
        "keccak256": "0x480953502a40e438d855392e322adc0369e2109f6d46fb9ec2bb3ad0afbb0aec",
        "urls": [
          "bzz-raw://2b3bb332d4f5e38f9786b00564ad417e48c689b4a92a60888c3845b986c995a3",
          "dweb:/ipfs/QmPVM4KTUeLD7uVCfP8MBQNRo7pU8xF3rXQuDcx3C6cLxA"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IOwnable.sol": {
        "keccak256": "0xd659a64da6264fdd50ee379be032fea4917eba4fadfd6d366107fb17e46907f3",
        "urls": [
          "bzz-raw://c15940c4a3d229f4fdd1226fe297a58fde10b07b86a34de1ed11a8802dd5dea9",
          "dweb:/ipfs/QmS8p8CxWiahLkYsCWNhFjCnmQzuc4ck3kjYYuCFj8LsmC"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPermissions.sol": {
        "keccak256": "0xc0cd1f87bac474a06f85e2b341b9b57662aee957fc24180d42c872481c2f2ae3",
        "urls": [
          "bzz-raw://7dec3eed451d63867531d693f0be3279fa2c9aef3130f0826c3520c06820fa5d",
          "dweb:/ipfs/QmTYANrcPdd9SCe99DWsKJ19evNRQKQGZeoS1Keew4M2cS"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPlatformFee.sol": {
        "keccak256": "0x8c23c2a223a3b94ccce125b418e5fabfb631695d927e336512bc8dca61bbc736",
        "urls": [
          "bzz-raw://86dd8c93e75cb3a44d64c873154ee3857b604d1b07a9e52c120870172c2e9a34",
          "dweb:/ipfs/QmWXxEi7ygoRjN8yWYfVGbfhuwVg8bkLoHNzr3xMNa1VRv"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPrimarySale.sol": {
        "keccak256": "0x77c89cb8d9b781b0a08b1fa81c95a0dd5c19200b2fb0dc884c1084b931624004",
        "urls": [
          "bzz-raw://a37b042af11a08ba5518dadf72c91745d1b5f42b1c20ea5282492bfd18f53869",
          "dweb:/ipfs/QmWEYYG5VqR8MRfr2rydDV98GLKmaJtCC8G1W7MzJ9qFnF"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IRoyalty.sol": {
        "keccak256": "0x13912ba3970fdedd1eb5bf8bf0bcc5e64e43f2cadb8d22c3d6fb695fd9877385",
        "urls": [
          "bzz-raw://b84d19df7aa9cb7460cca50ab050cdcfffb62f53c246daf35df276cad7088e9b",
          "dweb:/ipfs/QmNPPHJuiW1KCcq3aXELnA4X8NaSPM9S2vHbsBEEDYiwP8"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/upgradeable/BatchMintMetadata.sol": {
        "keccak256": "0x2d8a435ef16e097d7120d8d9e44314bc668524ecf4f8ff533925191ee5241021",
        "urls": [
          "bzz-raw://e201928a50a7491ccb753729dd95dcb219515c390c19d391ff7643db72c589af",
          "dweb:/ipfs/QmRJ8siTG9iA5HyQGxG1hQTEAVGWFt6LmUXnfaPd5mXKUF"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/upgradeable/BurnToClaim.sol": {
        "keccak256": "0xa8a5f81797157595be663b4392945699aa5b693c23ec50604621bf96ad458bf3",
        "urls": [
          "bzz-raw://f646b32536020a3e084f2fc0df1b2202a693e6382da5e27c73654ff6b5402fb8",
          "dweb:/ipfs/QmSJYiApWD2QPNJ3uKkUdQrN8Qhiezsv53gc1wgYbp8QU5"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/upgradeable/ContractMetadata.sol": {
        "keccak256": "0xe42f63bdf826446047de0825bc930d8a157cf613cf35b74cd10ade9246ed5907",
        "urls": [
          "bzz-raw://a907ddcadb07f70600753b37b129d7be234f44cd557aaa0a5833b0a796a2a826",
          "dweb:/ipfs/QmdhJ3Y4N6nnQDgLCPVmyRU26sgJfkLxUnqgSt911Eqmms"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/upgradeable/DelayedReveal.sol": {
        "keccak256": "0xfc58a7f52d1e7bd2f177d60eeba4db1bb8a6a6f216ac24d3ab27b3e02b776588",
        "urls": [
          "bzz-raw://5db70d2a22b6d81e39ac48212fd362ccd319480a4bcf055f5efbae36f8844eea",
          "dweb:/ipfs/QmWwUuh6g9DDHLmVjywDGv4wHWJCyZuL23FfRCrwXmnLwT"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/upgradeable/Drop.sol": {
        "keccak256": "0xf94245ca1933f06f2696341366dba8a133e4f5de2245a40a5290d70bbb50995c",
        "urls": [
          "bzz-raw://1039ca1199b61be6dc259da301cb43b72c6c79a5f3b71962f8b54aecbc821468",
          "dweb:/ipfs/QmQPb8e2aksAT2CWpGWsF1jxGRbZTKU1m873Fe6wb1Hr2B"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/upgradeable/ERC2771ContextUpgradeable.sol": {
        "keccak256": "0x9000e8ba1978a32b8ffac366f2128806ee89247ed250992c13c1467be9aad2cf",
        "urls": [
          "bzz-raw://e27c3bb411bfd82501a3df7e35aada7dce0583df796ae086aaba38e6b2a5e455",
          "dweb:/ipfs/QmPcv2ccTn1DiQPRdYb6V6SwDiRxVZRYZkrvswYeq8L9sq"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/upgradeable/Initializable.sol": {
        "keccak256": "0x86a70269e008e05d0ad9deb6f8b3ae64c6502d66d35aabc4a71968c27f2e5541",
        "urls": [
          "bzz-raw://e5d4ee97df8a7d0675e1d07ab394f27a20d45e7bae5d60a440697671f1ab1994",
          "dweb:/ipfs/Qmbpj95U5M3mJVVUno7ne6CgggDv1dRYte8WXe33fztZ7b"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/upgradeable/LazyMint.sol": {
        "keccak256": "0xca278cbb41bd1a0f51ecb1a1dbc9d79c23af01e35fdac2f1fe235edd3837260f",
        "urls": [
          "bzz-raw://87a28f0f4f1dd9b4e2cb9917aa0e8819a81633eee97cd2ed2ab31fe41f98446f",
          "dweb:/ipfs/QmY7wC2eMS9otXQDZRRk2yokGPzVTAG7Lwv61c4MngibBm"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/upgradeable/Ownable.sol": {
        "keccak256": "0x33dee90adc13a41f7288082941cfde1980c193e86ca63f0703c6568b3e746595",
        "urls": [
          "bzz-raw://b5f0d7ebbe9c8f9d3a56ab55548ccc72dc9c7f7c365c46142121da4681979a71",
          "dweb:/ipfs/QmURLfv5Eqezf85i2r6idTwezZnJAB6jeM3Vk8H3Fm6PYS"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/upgradeable/Permissions.sol": {
        "keccak256": "0x1ced1057ad0c07677db95c9ea291a8748c5cf14f1cce39423d28fab4413fb7fd",
        "urls": [
          "bzz-raw://aeae206f911e13618737544b287d077f870d60c8d40f599aad20c5ffa5730c6e",
          "dweb:/ipfs/QmQ3yy9o7iWAfLrpEDMMB6uA6cw9HJxKCPGjxaEVG4AQrs"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/upgradeable/PlatformFee.sol": {
        "keccak256": "0x737a1f5b8225ccdc3a14b76121c3fc35779f44a1c19bcadeb2019f338847ba36",
        "urls": [
          "bzz-raw://ab4b5596b075af3d590efeed4686a940a0817844701c82bfa29ddd9c278abb61",
          "dweb:/ipfs/QmWeqM8Y1MB3gRZMKSCXtzkj5HqzVnezZ7zcMaG5scKpA5"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/upgradeable/PrimarySale.sol": {
        "keccak256": "0xf35b8122490c76cd6734e992c45782723bb450b8c3b058e3333e1438fb855625",
        "urls": [
          "bzz-raw://70a8494f03a34f4198eb99b6c88a0f821d5fee53331eb718617f8979658ad31d",
          "dweb:/ipfs/Qmdr3aexVCgxcVk3deASvsbZqPFcrRMp6okkApAYDgU4Mg"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/upgradeable/Royalty.sol": {
        "keccak256": "0x2f5da520d841b2718660ffa35a28a4a2467a223b5e0cd69476fcfba1375f77b4",
        "urls": [
          "bzz-raw://ea1a001058a5e443639213432d7e9be5b2be4cff1fb5141d59d524b51d205491",
          "dweb:/ipfs/QmchGWE3veeQgNBb3y4gLaiD1x1MeK2zc5SR6GDstHMBVs"
        ],
        "license": "Apache-2.0"
      },
      "contracts/external-deps/openzeppelin/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xa6149938a7c7c8af4244743aeaafcfb1fd9ce15ad45de58fa9576f0ed5599b2c",
        "urls": [
          "bzz-raw://839aa4ea6ef6d1972881bfd7420a9ddcd2f37139e3f0bf25310f93f48410702d",
          "dweb:/ipfs/QmSH65kStfbgMbfjFdfJqV412omPy6nB1JMvMt9q7SsytW"
        ],
        "license": "MIT"
      },
      "contracts/external-deps/openzeppelin/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "contracts/infra/interface/IWETH.sol": {
        "keccak256": "0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b",
        "urls": [
          "bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1",
          "dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/CurrencyTransferLib.sol": {
        "keccak256": "0x4a30bc9a8cd6cc8b855621fb1a651e2c3a1639b0ad153f1139c3ba463605672d",
        "urls": [
          "bzz-raw://417cc64ec6393f3cc89981ca9c32bbcc444a5f91363d69f84dd8ace888b2b859",
          "dweb:/ipfs/QmZeaQsYGx4VNoP8e1fcwC87PwvyakheWYeuwEwhFSJnvB"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/MerkleProof.sol": {
        "keccak256": "0xfeb51ecaba6f9c1649a143825dc3b7ca0eb9edff7787c7a54957dfd542f7ece0",
        "urls": [
          "bzz-raw://8819ab0f7546a6a0dc126d5dbf019ba015563220689f661b1da4174f7ce87bbf",
          "dweb:/ipfs/QmT6Q9YQGMJbCWhE6G4ze8dsqjMyewnErTNGgLFSAHkFU7"
        ],
        "license": "Apache 2.0"
      },
      "contracts/lib/TWAddress.sol": {
        "keccak256": "0x460f032cf3bf43d586e126ab2ec8be4335767f497ccb699741546a1cfba94a7e",
        "urls": [
          "bzz-raw://28fcbf6dde6c2eeb9864f6ec6f21dcc81ec426877debf4b912f2f3bc5b0fc91e",
          "dweb:/ipfs/QmS1SHrZDfefX8EE7DdvszTY6VPCHydf4HM7NKJ2gP72e6"
        ],
        "license": "Apache 2.0"
      },
      "contracts/lib/TWStrings.sol": {
        "keccak256": "0xef7e9954d888f99baffc10db1d9bf6a2beb66c842d81dea90352ddded22cbbf8",
        "urls": [
          "bzz-raw://832415134684f5413f9d0f3f5536aa30848690cfe54769f7730a3807438f3bf9",
          "dweb:/ipfs/QmduTiUdtsnyJVMXpdomohEWDVg46aZhnS9uTURu4x1NYt"
        ],
        "license": "Apache 2.0"
      },
      "contracts/prebuilts/unaudited/burn-to-claim-drop/extension/BurnToClaimDrop721Logic.sol": {
        "keccak256": "0xc3e85ffe185395d7811f5ad121d16bd431a5fa70915f706b8ca9d841a41c41cc",
        "urls": [
          "bzz-raw://a4c7241337c2befb25a6990caa8e95779776c6be1ee6ffefa46120059b6b550b",
          "dweb:/ipfs/QmPUehGxzVRpJw2jpugpwszoH755ft572Awruq3MesGEHR"
        ],
        "license": "Apache-2.0"
      },
      "contracts/prebuilts/unaudited/burn-to-claim-drop/extension/BurnToClaimDrop721Storage.sol": {
        "keccak256": "0x06e218a302f75c0e31b6c28518f9578c3e2ce79340265d1f78babfe3ae297f07",
        "urls": [
          "bzz-raw://66caed12c4f528a2f06b8f8ea1002b1eb993bf27153c7b754506f49e1e2eaa96",
          "dweb:/ipfs/QmdufpZy2zwqx1G7c7ktbFb5v3dArGLk3Mu42m4115aXog"
        ],
        "license": "Apache-2.0"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC1155/ERC1155.sol": {
        "keccak256": "0x447a21c87433c0f11252912313a96f3454629ef88cca7a4eefbb283b3ec409f9",
        "urls": [
          "bzz-raw://67d35750fb5ced798b82b8ab085eb5f71529b0d4f72152d182b5bebdc770b20d",
          "dweb:/ipfs/QmUqmyzRZxaLvSXig87HFZgiUxv9ivc2VqfAbxEw7rx32d"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol": {
        "keccak256": "0x6392f2cfe3a5ee802227fe7a2dfd47096d881aec89bddd214b35c5b46d3cd941",
        "urls": [
          "bzz-raw://bd9c47a375639888e726a99da718890ba16d17d7ad9eacb0ccc892d46d1b3ee0",
          "dweb:/ipfs/Qmb41W5RUjy2sWg49A2rMnxekSeEk6SvGyJL5tyCCSr7un"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol": {
        "keccak256": "0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b",
        "urls": [
          "bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec",
          "dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/ERC1155Burnable.sol": {
        "keccak256": "0xb11d1ade7146ac3da122e1f387ea82b0bd385d50823946c3f967dbffef3e9f4f",
        "urls": [
          "bzz-raw://0a5fc67f024fd2d261543c52a33a2a90b96d2ea1867829e8e12fe6b89b53aee1",
          "dweb:/ipfs/QmPc3ryH7Yv4FoY14CGbaXuQVQ7iu2yrxVAtmbGrN7bscf"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
        "keccak256": "0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574",
        "urls": [
          "bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797",
          "dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol": {
        "keccak256": "0x0b606994df12f0ce35f6d2f6dcdde7e55e6899cdef7e00f180980caa81e3844e",
        "urls": [
          "bzz-raw://4c827c981a552d1c76c96060e92f56b52bc20c6f9b4dbf911fe99ddbfb41f2ea",
          "dweb:/ipfs/QmW8xvJdzHrr8Ry34C7viBsgG2b8T1mL4BQWJ5CdfD9JLB"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f",
        "urls": [
          "bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f",
          "dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da",
        "urls": [
          "bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708",
          "dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Burnable.sol": {
        "keccak256": "0xfa6873a010382f62e9ffe4592b305ef6e60f55502c95ed0ffa51eb10b5200d45",
        "urls": [
          "bzz-raw://f86000c6885fb5a0a8bd5cd2595d302f0b4038411d66b85b07fa10590f844c2e",
          "dweb:/ipfs/QmeZuXaxdr7NH2wUAprx3BcLTke9RtcptAZgRKfQVHops5"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
        "keccak256": "0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9",
        "urls": [
          "bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146",
          "dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10",
        "urls": [
          "bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487",
          "dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3",
        "urls": [
          "bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638",
          "dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/prebuilts/unaudited/burn-to-claim-drop/extension/BurnToClaimDrop721Logic.sol",
    "id": 99647,
    "exportedSymbols": {
      "BurnToClaim": [
        38672
      ],
      "BurnToClaimDrop721Logic": [
        99646
      ],
      "BurnToClaimDrop721Storage": [
        99669
      ],
      "BurnToClaimStorage": [
        38465
      ],
      "Context": [
        48483
      ],
      "ContractMetadata": [
        38777
      ],
      "CurrencyTransferLib": [
        63578
      ],
      "DelayedReveal": [
        38989
      ],
      "Drop": [
        39739
      ],
      "ERC2771ContextUpgradeable": [
        40089
      ],
      "ERC721AStorage": [
        9251
      ],
      "ERC721AUpgradeable": [
        10851
      ],
      "IERC165": [
        13829
      ],
      "IERC20": [
        13899
      ],
      "IERC2771Context": [
        32785
      ],
      "IERC2981": [
        13973
      ],
      "IWETH": [
        54557
      ],
      "LazyMint": [
        40446
      ],
      "Ownable": [
        40832
      ],
      "PermissionsStorage": [
        40867
      ],
      "PlatformFee": [
        41778
      ],
      "PrimarySale": [
        41908
      ],
      "Royalty": [
        42274
      ],
      "SafeERC20": [
        48369
      ],
      "TWAddress": [
        64152
      ],
      "TWStrings": [
        64852
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:14948:383",
    "nodes": [
      {
        "id": 98751,
        "nodeType": "PragmaDirective",
        "src": "39:24:383",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".11"
        ]
      },
      {
        "id": 98753,
        "nodeType": "ImportDirective",
        "src": "727:76:383",
        "nodes": [],
        "absolutePath": "contracts/prebuilts/unaudited/burn-to-claim-drop/extension/BurnToClaimDrop721Storage.sol",
        "file": "./BurnToClaimDrop721Storage.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 99647,
        "sourceUnit": 99670,
        "symbolAliases": [
          {
            "foreign": {
              "id": 98752,
              "name": "BurnToClaimDrop721Storage",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 99669,
              "src": "736:25:383",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_BurnToClaimDrop721Storage_$99669_$",
                "typeString": "type(library BurnToClaimDrop721Storage)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 98754,
        "nodeType": "ImportDirective",
        "src": "805:39:383",
        "nodes": [],
        "absolutePath": "contracts/lib/TWStrings.sol",
        "file": "../../../../lib/TWStrings.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 99647,
        "sourceUnit": 64853,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 98755,
        "nodeType": "ImportDirective",
        "src": "845:49:383",
        "nodes": [],
        "absolutePath": "contracts/lib/CurrencyTransferLib.sol",
        "file": "../../../../lib/CurrencyTransferLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 99647,
        "sourceUnit": 63579,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 98757,
        "nodeType": "ImportDirective",
        "src": "896:66:383",
        "nodes": [],
        "absolutePath": "contracts/eip/interface/IERC2981.sol",
        "file": "../../../../eip/interface/IERC2981.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 99647,
        "sourceUnit": 13974,
        "symbolAliases": [
          {
            "foreign": {
              "id": 98756,
              "name": "IERC2981",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 13973,
              "src": "905:8:383",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_IERC2981_$13973_$",
                "typeString": "type(contract IERC2981)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 98761,
        "nodeType": "ImportDirective",
        "src": "963:101:383",
        "nodes": [],
        "absolutePath": "contracts/eip/ERC721AUpgradeable.sol",
        "file": "../../../../eip/ERC721AUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 99647,
        "sourceUnit": 10852,
        "symbolAliases": [
          {
            "foreign": {
              "id": 98758,
              "name": "Context",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 48483,
              "src": "972:7:383",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_Context_$48483_$",
                "typeString": "type(contract Context)"
              }
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 98759,
              "name": "ERC721AUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 10851,
              "src": "981:18:383",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_ERC721AUpgradeable_$10851_$",
                "typeString": "type(contract ERC721AUpgradeable)"
              }
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 98760,
              "name": "ERC721AStorage",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 9251,
              "src": "1001:14:383",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_ERC721AStorage_$9251_$",
                "typeString": "type(library ERC721AStorage)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 98763,
        "nodeType": "ImportDirective",
        "src": "1066:86:383",
        "nodes": [],
        "absolutePath": "contracts/extension/interface/IERC2771Context.sol",
        "file": "../../../../extension/interface/IERC2771Context.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 99647,
        "sourceUnit": 32786,
        "symbolAliases": [
          {
            "foreign": {
              "id": 98762,
              "name": "IERC2771Context",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 32785,
              "src": "1075:15:383",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_IERC2771Context_$32785_$",
                "typeString": "type(contract IERC2771Context)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 98765,
        "nodeType": "ImportDirective",
        "src": "1154:108:383",
        "nodes": [],
        "absolutePath": "contracts/extension/upgradeable/ERC2771ContextUpgradeable.sol",
        "file": "../../../../extension/upgradeable/ERC2771ContextUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 99647,
        "sourceUnit": 40090,
        "symbolAliases": [
          {
            "foreign": {
              "id": 98764,
              "name": "ERC2771ContextUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 40089,
              "src": "1163:25:383",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_ERC2771ContextUpgradeable_$40089_$",
                "typeString": "type(contract ERC2771ContextUpgradeable)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 98767,
        "nodeType": "ImportDirective",
        "src": "1263:84:383",
        "nodes": [],
        "absolutePath": "contracts/extension/upgradeable/DelayedReveal.sol",
        "file": "../../../../extension/upgradeable/DelayedReveal.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 99647,
        "sourceUnit": 38990,
        "symbolAliases": [
          {
            "foreign": {
              "id": 98766,
              "name": "DelayedReveal",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 38989,
              "src": "1272:13:383",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_DelayedReveal_$38989_$",
                "typeString": "type(contract DelayedReveal)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 98769,
        "nodeType": "ImportDirective",
        "src": "1348:80:383",
        "nodes": [],
        "absolutePath": "contracts/extension/upgradeable/PrimarySale.sol",
        "file": "../../../../extension/upgradeable/PrimarySale.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 99647,
        "sourceUnit": 41909,
        "symbolAliases": [
          {
            "foreign": {
              "id": 98768,
              "name": "PrimarySale",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 41908,
              "src": "1357:11:383",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_PrimarySale_$41908_$",
                "typeString": "type(contract PrimarySale)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 98771,
        "nodeType": "ImportDirective",
        "src": "1429:80:383",
        "nodes": [],
        "absolutePath": "contracts/extension/upgradeable/PlatformFee.sol",
        "file": "../../../../extension/upgradeable/PlatformFee.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 99647,
        "sourceUnit": 41779,
        "symbolAliases": [
          {
            "foreign": {
              "id": 98770,
              "name": "PlatformFee",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 41778,
              "src": "1438:11:383",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_PlatformFee_$41778_$",
                "typeString": "type(contract PlatformFee)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 98774,
        "nodeType": "ImportDirective",
        "src": "1510:81:383",
        "nodes": [],
        "absolutePath": "contracts/extension/upgradeable/Royalty.sol",
        "file": "../../../../extension/upgradeable/Royalty.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 99647,
        "sourceUnit": 42275,
        "symbolAliases": [
          {
            "foreign": {
              "id": 98772,
              "name": "Royalty",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 42274,
              "src": "1519:7:383",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_Royalty_$42274_$",
                "typeString": "type(contract Royalty)"
              }
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 98773,
              "name": "IERC165",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 13829,
              "src": "1528:7:383",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_IERC165_$13829_$",
                "typeString": "type(contract IERC165)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 98776,
        "nodeType": "ImportDirective",
        "src": "1592:74:383",
        "nodes": [],
        "absolutePath": "contracts/extension/upgradeable/LazyMint.sol",
        "file": "../../../../extension/upgradeable/LazyMint.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 99647,
        "sourceUnit": 40447,
        "symbolAliases": [
          {
            "foreign": {
              "id": 98775,
              "name": "LazyMint",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 40446,
              "src": "1601:8:383",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_LazyMint_$40446_$",
                "typeString": "type(contract LazyMint)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 98778,
        "nodeType": "ImportDirective",
        "src": "1667:66:383",
        "nodes": [],
        "absolutePath": "contracts/extension/upgradeable/Drop.sol",
        "file": "../../../../extension/upgradeable/Drop.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 99647,
        "sourceUnit": 39740,
        "symbolAliases": [
          {
            "foreign": {
              "id": 98777,
              "name": "Drop",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 39739,
              "src": "1676:4:383",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_Drop_$39739_$",
                "typeString": "type(contract Drop)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 98780,
        "nodeType": "ImportDirective",
        "src": "1734:90:383",
        "nodes": [],
        "absolutePath": "contracts/extension/upgradeable/ContractMetadata.sol",
        "file": "../../../../extension/upgradeable/ContractMetadata.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 99647,
        "sourceUnit": 38778,
        "symbolAliases": [
          {
            "foreign": {
              "id": 98779,
              "name": "ContractMetadata",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 38777,
              "src": "1743:16:383",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_ContractMetadata_$38777_$",
                "typeString": "type(contract ContractMetadata)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 98782,
        "nodeType": "ImportDirective",
        "src": "1825:72:383",
        "nodes": [],
        "absolutePath": "contracts/extension/upgradeable/Ownable.sol",
        "file": "../../../../extension/upgradeable/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 99647,
        "sourceUnit": 40833,
        "symbolAliases": [
          {
            "foreign": {
              "id": 98781,
              "name": "Ownable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 40832,
              "src": "1834:7:383",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_Ownable_$40832_$",
                "typeString": "type(contract Ownable)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 98784,
        "nodeType": "ImportDirective",
        "src": "1898:87:383",
        "nodes": [],
        "absolutePath": "contracts/extension/upgradeable/Permissions.sol",
        "file": "../../../../extension/upgradeable/Permissions.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 99647,
        "sourceUnit": 41254,
        "symbolAliases": [
          {
            "foreign": {
              "id": 98783,
              "name": "PermissionsStorage",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 40867,
              "src": "1907:18:383",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_PermissionsStorage_$40867_$",
                "typeString": "type(library PermissionsStorage)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 98787,
        "nodeType": "ImportDirective",
        "src": "1986:100:383",
        "nodes": [],
        "absolutePath": "contracts/extension/upgradeable/BurnToClaim.sol",
        "file": "../../../../extension/upgradeable/BurnToClaim.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 99647,
        "sourceUnit": 38673,
        "symbolAliases": [
          {
            "foreign": {
              "id": 98785,
              "name": "BurnToClaim",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 38672,
              "src": "1995:11:383",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_BurnToClaim_$38672_$",
                "typeString": "type(contract BurnToClaim)"
              }
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 98786,
              "name": "BurnToClaimStorage",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 38465,
              "src": "2008:18:383",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_BurnToClaimStorage_$38465_$",
                "typeString": "type(library BurnToClaimStorage)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 99646,
        "nodeType": "ContractDefinition",
        "src": "2088:12898:383",
        "nodes": [
          {
            "id": 98812,
            "nodeType": "UsingForDirective",
            "src": "2326:28:383",
            "nodes": [],
            "libraryName": {
              "id": 98810,
              "name": "TWStrings",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 64852,
              "src": "2332:9:383"
            },
            "typeName": {
              "id": 98811,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2346:7:383",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 98816,
            "nodeType": "VariableDeclaration",
            "src": "2644:50:383",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 98813,
              "nodeType": "StructuredDocumentation",
              "src": "2538:101:383",
              "text": "@dev Default admin role for all roles. Only accounts with this role can grant/revoke other roles."
            },
            "mutability": "constant",
            "name": "DEFAULT_ADMIN_ROLE",
            "nameLocation": "2669:18:383",
            "scope": 99646,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 98814,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2644:7:383",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "hexValue": "30783030",
              "id": 98815,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2690:4:383",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0x00"
            },
            "visibility": "private"
          },
          {
            "id": 98822,
            "nodeType": "VariableDeclaration",
            "src": "2803:67:383",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 98817,
              "nodeType": "StructuredDocumentation",
              "src": "2700:98:383",
              "text": "@dev Only transfers to or from TRANSFER_ROLE holders are valid, when transfers are restricted."
            },
            "mutability": "constant",
            "name": "TRANSFER_ROLE",
            "nameLocation": "2828:13:383",
            "scope": 99646,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 98818,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2803:7:383",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "5452414e534645525f524f4c45",
                  "id": 98820,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2854:15:383",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c",
                    "typeString": "literal_string \"TRANSFER_ROLE\""
                  },
                  "value": "TRANSFER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c",
                    "typeString": "literal_string \"TRANSFER_ROLE\""
                  }
                ],
                "id": 98819,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "2844:9:383",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 98821,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2844:26:383",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "id": 98828,
            "nodeType": "VariableDeclaration",
            "src": "2967:63:383",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 98823,
              "nodeType": "StructuredDocumentation",
              "src": "2876:86:383",
              "text": "@dev Only MINTER_ROLE holders can sign off on `MintRequest`s and lazy mint tokens."
            },
            "mutability": "constant",
            "name": "MINTER_ROLE",
            "nameLocation": "2992:11:383",
            "scope": 99646,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 98824,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2967:7:383",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "4d494e5445525f524f4c45",
                  "id": 98826,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3016:13:383",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                    "typeString": "literal_string \"MINTER_ROLE\""
                  },
                  "value": "MINTER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                    "typeString": "literal_string \"MINTER_ROLE\""
                  }
                ],
                "id": 98825,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "3006:9:383",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 98827,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "3006:24:383",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "id": 98832,
            "nodeType": "VariableDeclaration",
            "src": "3082:41:383",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 98829,
              "nodeType": "StructuredDocumentation",
              "src": "3037:40:383",
              "text": "@dev Max bps in the thirdweb system."
            },
            "mutability": "constant",
            "name": "MAX_BPS",
            "nameLocation": "3107:7:383",
            "scope": 99646,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 98830,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3082:7:383",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31305f303030",
              "id": 98831,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "3117:6:383",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000_by_1",
                "typeString": "int_const 10000"
              },
              "value": "10_000"
            },
            "visibility": "private"
          },
          {
            "id": 98837,
            "nodeType": "EventDefinition",
            "src": "3386:52:383",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 98833,
              "nodeType": "StructuredDocumentation",
              "src": "3309:72:383",
              "text": "@dev Emitted when the global max NFTs that can be minted is updated."
            },
            "name": "MaxTotalMintedUpdated",
            "nameLocation": "3392:21:383",
            "parameters": {
              "id": 98836,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 98835,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "maxTotalMinted",
                  "nameLocation": "3422:14:383",
                  "nodeType": "VariableDeclaration",
                  "scope": 98837,
                  "src": "3414:22:383",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 98834,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3414:7:383",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3413:24:383"
            }
          },
          {
            "id": 98885,
            "nodeType": "FunctionDefinition",
            "src": "3841:402:383",
            "nodes": [],
            "body": {
              "id": 98884,
              "nodeType": "Block",
              "src": "3922:321:383",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    98847,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 98847,
                      "mutability": "mutable",
                      "name": "batchId",
                      "nameLocation": "3941:7:383",
                      "nodeType": "VariableDeclaration",
                      "scope": 98884,
                      "src": "3933:15:383",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 98846,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3933:7:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 98851,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 98849,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98840,
                        "src": "3966:8:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 98848,
                      "name": "_getBatchId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38195,
                      "src": "3954:11:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256,uint256)"
                      }
                    },
                    "id": 98850,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3954:21:383",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3932:43:383"
                },
                {
                  "assignments": [
                    98853
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 98853,
                      "mutability": "mutable",
                      "name": "batchUri",
                      "nameLocation": "3999:8:383",
                      "nodeType": "VariableDeclaration",
                      "scope": 98884,
                      "src": "3985:22:383",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 98852,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "3985:6:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 98857,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 98855,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98840,
                        "src": "4022:8:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 98854,
                      "name": "_getBaseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38250,
                      "src": "4010:11:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (uint256) view returns (string memory)"
                      }
                    },
                    "id": 98856,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4010:21:383",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3985:46:383"
                },
                {
                  "condition": {
                    "arguments": [
                      {
                        "id": 98859,
                        "name": "batchId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98847,
                        "src": "4063:7:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 98858,
                      "name": "isEncryptedBatch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38974,
                      "src": "4046:16:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) view returns (bool)"
                      }
                    },
                    "id": 98860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4046:25:383",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 98882,
                    "nodeType": "Block",
                    "src": "4150:87:383",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 98875,
                                  "name": "batchUri",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 98853,
                                  "src": "4195:8:383",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "id": 98876,
                                      "name": "_tokenId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 98840,
                                      "src": "4205:8:383",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 98877,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "toString",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 64734,
                                    "src": "4205:17:383",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256) pure returns (string memory)"
                                    }
                                  },
                                  "id": 98878,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4205:19:383",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "id": 98873,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "4178:3:383",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 98874,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "4178:16:383",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 98879,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4178:47:383",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 98872,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4171:6:383",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                              "typeString": "type(string storage pointer)"
                            },
                            "typeName": {
                              "id": 98871,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "4171:6:383",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 98880,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4171:55:383",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 98845,
                        "id": 98881,
                        "nodeType": "Return",
                        "src": "4164:62:383"
                      }
                    ]
                  },
                  "id": 98883,
                  "nodeType": "IfStatement",
                  "src": "4042:195:383",
                  "trueBody": {
                    "id": 98870,
                    "nodeType": "Block",
                    "src": "4073:71:383",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 98865,
                                  "name": "batchUri",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 98853,
                                  "src": "4118:8:383",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                {
                                  "hexValue": "30",
                                  "id": 98866,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4128:3:383",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
                                    "typeString": "literal_string \"0\""
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
                                    "typeString": "literal_string \"0\""
                                  }
                                ],
                                "expression": {
                                  "id": 98863,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "4101:3:383",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 98864,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "4101:16:383",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 98867,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4101:31:383",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 98862,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4094:6:383",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                              "typeString": "type(string storage pointer)"
                            },
                            "typeName": {
                              "id": 98861,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "4094:6:383",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 98868,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4094:39:383",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 98845,
                        "id": 98869,
                        "nodeType": "Return",
                        "src": "4087:46:383"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              9735
            ],
            "documentation": {
              "id": 98838,
              "nodeType": "StructuredDocumentation",
              "src": "3635:201:383",
              "text": "  @notice Returns the URI for a given tokenId.\n  @dev The URI, for a given tokenId, is returned once it is lazy minted, even if it might not be actually minted. (See `LazyMint`)"
            },
            "functionSelector": "c87b56dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "3850:8:383",
            "overrides": {
              "id": 98842,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3889:8:383"
            },
            "parameters": {
              "id": 98841,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 98840,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "3867:8:383",
                  "nodeType": "VariableDeclaration",
                  "scope": 98885,
                  "src": "3859:16:383",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 98839,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3859:7:383",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3858:18:383"
            },
            "returnParameters": {
              "id": 98845,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 98844,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 98885,
                  "src": "3907:13:383",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 98843,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3907:6:383",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3906:15:383"
            },
            "scope": 99646,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 98909,
            "nodeType": "FunctionDefinition",
            "src": "4277:269:383",
            "nodes": [],
            "body": {
              "id": 98908,
              "nodeType": "Block",
              "src": "4441:105:383",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 98906,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 98898,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98888,
                          "src": "4482:11:383",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 98896,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -25,
                          "src": "4458:5:383",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_BurnToClaimDrop721Logic_$99646_$",
                            "typeString": "type(contract super BurnToClaimDrop721Logic)"
                          }
                        },
                        "id": 98897,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9408,
                        "src": "4458:23:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view returns (bool)"
                        }
                      },
                      "id": 98899,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4458:36:383",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 98905,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 98901,
                              "name": "IERC2981",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13973,
                              "src": "4503:8:383",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC2981_$13973_$",
                                "typeString": "type(contract IERC2981)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_IERC2981_$13973_$",
                                "typeString": "type(contract IERC2981)"
                              }
                            ],
                            "id": 98900,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "4498:4:383",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 98902,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4498:14:383",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_IERC2981_$13973",
                            "typeString": "type(contract IERC2981)"
                          }
                        },
                        "id": 98903,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "interfaceId",
                        "nodeType": "MemberAccess",
                        "src": "4498:26:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 98904,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98888,
                        "src": "4528:11:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "src": "4498:41:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4458:81:383",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 98895,
                  "id": 98907,
                  "nodeType": "Return",
                  "src": "4451:88:383"
                }
              ]
            },
            "baseFunctions": [
              9408,
              13828
            ],
            "documentation": {
              "id": 98886,
              "nodeType": "StructuredDocumentation",
              "src": "4249:23:383",
              "text": "@notice See ERC 165"
            },
            "functionSelector": "01ffc9a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "4286:17:383",
            "overrides": {
              "id": 98892,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 98890,
                  "name": "ERC721AUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10851,
                  "src": "4385:18:383"
                },
                {
                  "id": 98891,
                  "name": "IERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 13829,
                  "src": "4405:7:383"
                }
              ],
              "src": "4376:37:383"
            },
            "parameters": {
              "id": 98889,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 98888,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "4311:11:383",
                  "nodeType": "VariableDeclaration",
                  "scope": 98909,
                  "src": "4304:18:383",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 98887,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "4304:6:383",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4303:20:383"
            },
            "returnParameters": {
              "id": 98895,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 98894,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 98909,
                  "src": "4431:4:383",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 98893,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4431:4:383",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4430:6:383"
            },
            "scope": 99646,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 98972,
            "nodeType": "FunctionDefinition",
            "src": "4926:567:383",
            "nodes": [],
            "body": {
              "id": 98971,
              "nodeType": "Block",
              "src": "5082:411:383",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    98923
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 98923,
                      "mutability": "mutable",
                      "name": "nextId",
                      "nameLocation": "5100:6:383",
                      "nodeType": "VariableDeclaration",
                      "scope": 98971,
                      "src": "5092:14:383",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 98922,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5092:7:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 98926,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 98924,
                      "name": "nextTokenIdToLazyMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40362,
                      "src": "5109:21:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 98925,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5109:23:383",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5092:40:383"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 98930,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 98927,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98916,
                        "src": "5146:5:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      "id": 98928,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "5146:12:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 98929,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5161:1:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5146:16:383",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 98963,
                  "nodeType": "IfStatement",
                  "src": "5142:278:383",
                  "trueBody": {
                    "id": 98962,
                    "nodeType": "Block",
                    "src": "5164:256:383",
                    "statements": [
                      {
                        "assignments": [
                          98932,
                          98934
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 98932,
                            "mutability": "mutable",
                            "name": "encryptedURI",
                            "nameLocation": "5192:12:383",
                            "nodeType": "VariableDeclaration",
                            "scope": 98962,
                            "src": "5179:25:383",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 98931,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "5179:5:383",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 98934,
                            "mutability": "mutable",
                            "name": "provenanceHash",
                            "nameLocation": "5214:14:383",
                            "nodeType": "VariableDeclaration",
                            "scope": 98962,
                            "src": "5206:22:383",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 98933,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "5206:7:383",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 98944,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 98937,
                              "name": "_data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 98916,
                              "src": "5243:5:383",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            },
                            {
                              "components": [
                                {
                                  "id": 98939,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5251:5:383",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                    "typeString": "type(bytes storage pointer)"
                                  },
                                  "typeName": {
                                    "id": 98938,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5251:5:383",
                                    "typeDescriptions": {}
                                  }
                                },
                                {
                                  "id": 98941,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5258:7:383",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bytes32_$",
                                    "typeString": "type(bytes32)"
                                  },
                                  "typeName": {
                                    "id": 98940,
                                    "name": "bytes32",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5258:7:383",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "id": 98942,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "5250:16:383",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_type$_t_bytes_storage_ptr_$_$_t_type$_t_bytes32_$_$",
                                "typeString": "tuple(type(bytes storage pointer),type(bytes32))"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              },
                              {
                                "typeIdentifier": "t_tuple$_t_type$_t_bytes_storage_ptr_$_$_t_type$_t_bytes32_$_$",
                                "typeString": "tuple(type(bytes storage pointer),type(bytes32))"
                              }
                            ],
                            "expression": {
                              "id": 98935,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "5232:3:383",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 98936,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "decode",
                            "nodeType": "MemberAccess",
                            "src": "5232:10:383",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 98943,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5232:35:383",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bytes_memory_ptr_$_t_bytes32_$",
                            "typeString": "tuple(bytes memory,bytes32)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5178:89:383"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 98952,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 98948,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 98945,
                                "name": "encryptedURI",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 98932,
                                "src": "5285:12:383",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              "id": 98946,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "5285:19:383",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 98947,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5308:1:383",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "5285:24:383",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "id": 98951,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 98949,
                              "name": "provenanceHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 98934,
                              "src": "5313:14:383",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "hexValue": "",
                              "id": 98950,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5331:2:383",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            },
                            "src": "5313:20:383",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "5285:48:383",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 98961,
                        "nodeType": "IfStatement",
                        "src": "5281:129:383",
                        "trueBody": {
                          "id": 98960,
                          "nodeType": "Block",
                          "src": "5335:75:383",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 98956,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 98954,
                                      "name": "nextId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 98923,
                                      "src": "5371:6:383",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "+",
                                    "rightExpression": {
                                      "id": 98955,
                                      "name": "_amount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 98912,
                                      "src": "5380:7:383",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "5371:16:383",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 98957,
                                    "name": "_data",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 98916,
                                    "src": "5389:5:383",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_calldata_ptr",
                                      "typeString": "bytes calldata"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_calldata_ptr",
                                      "typeString": "bytes calldata"
                                    }
                                  ],
                                  "id": 98953,
                                  "name": "_setEncryptedData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 38838,
                                  "src": "5353:17:383",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                                    "typeString": "function (uint256,bytes memory)"
                                  }
                                },
                                "id": 98958,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5353:42:383",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 98959,
                              "nodeType": "ExpressionStatement",
                              "src": "5353:42:383"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 98966,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98912,
                        "src": "5452:7:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 98967,
                        "name": "_baseURIForTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98914,
                        "src": "5461:17:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 98968,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98916,
                        "src": "5480:5:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "expression": {
                        "id": 98964,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "5437:5:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_BurnToClaimDrop721Logic_$99646_$",
                          "typeString": "type(contract super BurnToClaimDrop721Logic)"
                        }
                      },
                      "id": 98965,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "lazyMint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40425,
                      "src": "5437:14:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_uint256_$",
                        "typeString": "function (uint256,string calldata,bytes calldata) returns (uint256)"
                      }
                    },
                    "id": 98969,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5437:49:383",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 98921,
                  "id": 98970,
                  "nodeType": "Return",
                  "src": "5430:56:383"
                }
              ]
            },
            "baseFunctions": [
              40425
            ],
            "documentation": {
              "id": 98910,
              "nodeType": "StructuredDocumentation",
              "src": "4748:173:383",
              "text": "  @notice Lets an account with `MINTER_ROLE` lazy mint 'n' NFTs.\n          The URIs for each token is the provided `_baseURIForTokens` + `{tokenId}`."
            },
            "functionSelector": "d37c353b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "lazyMint",
            "nameLocation": "4935:8:383",
            "overrides": {
              "id": 98918,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5055:8:383"
            },
            "parameters": {
              "id": 98917,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 98912,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "4961:7:383",
                  "nodeType": "VariableDeclaration",
                  "scope": 98972,
                  "src": "4953:15:383",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 98911,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4953:7:383",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 98914,
                  "mutability": "mutable",
                  "name": "_baseURIForTokens",
                  "nameLocation": "4994:17:383",
                  "nodeType": "VariableDeclaration",
                  "scope": 98972,
                  "src": "4978:33:383",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 98913,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4978:6:383",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 98916,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "5036:5:383",
                  "nodeType": "VariableDeclaration",
                  "scope": 98972,
                  "src": "5021:20:383",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 98915,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5021:5:383",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4943:104:383"
            },
            "returnParameters": {
              "id": 98921,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 98920,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 98972,
                  "src": "5073:7:383",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 98919,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5073:7:383",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5072:9:383"
            },
            "scope": 99646,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 99020,
            "nodeType": "FunctionDefinition",
            "src": "5603:415:383",
            "nodes": [],
            "body": {
              "id": 99019,
              "nodeType": "Block",
              "src": "5701:317:383",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 98984,
                            "name": "MINTER_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 98828,
                            "src": "5728:11:383",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 98985,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                99632
                              ],
                              "referencedDeclaration": 99632,
                              "src": "5741:10:383",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 98986,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5741:12:383",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 98983,
                          "name": "_hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99609,
                          "src": "5719:8:383",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 98987,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5719:35:383",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f74206d696e7465722e",
                        "id": 98988,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5756:13:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ef3ba029e0c0ab4a73c06188e1050a612d65341c83aa83d5839a5156e5f7b497",
                          "typeString": "literal_string \"not minter.\""
                        },
                        "value": "not minter."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ef3ba029e0c0ab4a73c06188e1050a612d65341c83aa83d5839a5156e5f7b497",
                          "typeString": "literal_string \"not minter.\""
                        }
                      ],
                      "id": 98982,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5711:7:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 98989,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5711:59:383",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98990,
                  "nodeType": "ExpressionStatement",
                  "src": "5711:59:383"
                },
                {
                  "assignments": [
                    98992
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 98992,
                      "mutability": "mutable",
                      "name": "batchId",
                      "nameLocation": "5788:7:383",
                      "nodeType": "VariableDeclaration",
                      "scope": 99019,
                      "src": "5780:15:383",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 98991,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5780:7:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 98996,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 98994,
                        "name": "_index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98975,
                        "src": "5816:6:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 98993,
                      "name": "getBatchIdAtIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38132,
                      "src": "5798:17:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 98995,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5798:25:383",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5780:43:383"
                },
                {
                  "expression": {
                    "id": 99002,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 98997,
                      "name": "revealedURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 98980,
                      "src": "5833:11:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 98999,
                          "name": "batchId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98992,
                          "src": "5860:7:383",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 99000,
                          "name": "_key",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98977,
                          "src": "5869:4:383",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        ],
                        "id": 98998,
                        "name": "getRevealURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38906,
                        "src": "5847:12:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_string_memory_ptr_$",
                          "typeString": "function (uint256,bytes calldata) view returns (string memory)"
                        }
                      },
                      "id": 99001,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5847:27:383",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "5833:41:383",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 99003,
                  "nodeType": "ExpressionStatement",
                  "src": "5833:41:383"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 99005,
                        "name": "batchId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98992,
                        "src": "5903:7:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 99006,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5912:2:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 99004,
                      "name": "_setEncryptedData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38838,
                      "src": "5885:17:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,bytes memory)"
                      }
                    },
                    "id": 99007,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5885:30:383",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99008,
                  "nodeType": "ExpressionStatement",
                  "src": "5885:30:383"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 99010,
                        "name": "batchId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98992,
                        "src": "5937:7:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 99011,
                        "name": "revealedURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98980,
                        "src": "5946:11:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 99009,
                      "name": "_setBaseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38343,
                      "src": "5925:11:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 99012,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5925:33:383",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99013,
                  "nodeType": "ExpressionStatement",
                  "src": "5925:33:383"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 99015,
                        "name": "_index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98975,
                        "src": "5991:6:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 99016,
                        "name": "revealedURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98980,
                        "src": "5999:11:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 99014,
                      "name": "TokenURIRevealed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32447,
                      "src": "5974:16:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 99017,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5974:37:383",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99018,
                  "nodeType": "EmitStatement",
                  "src": "5969:42:383"
                }
              ]
            },
            "baseFunctions": [
              32457
            ],
            "documentation": {
              "id": 98973,
              "nodeType": "StructuredDocumentation",
              "src": "5499:99:383",
              "text": "@notice Lets an account with `MINTER_ROLE` reveal the URI for a batch of 'delayed-reveal' NFTs."
            },
            "functionSelector": "ce805642",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "reveal",
            "nameLocation": "5612:6:383",
            "parameters": {
              "id": 98978,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 98975,
                  "mutability": "mutable",
                  "name": "_index",
                  "nameLocation": "5627:6:383",
                  "nodeType": "VariableDeclaration",
                  "scope": 99020,
                  "src": "5619:14:383",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 98974,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5619:7:383",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 98977,
                  "mutability": "mutable",
                  "name": "_key",
                  "nameLocation": "5650:4:383",
                  "nodeType": "VariableDeclaration",
                  "scope": 99020,
                  "src": "5635:19:383",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 98976,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5635:5:383",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5618:37:383"
            },
            "returnParameters": {
              "id": 98981,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 98980,
                  "mutability": "mutable",
                  "name": "revealedURI",
                  "nameLocation": "5688:11:383",
                  "nodeType": "VariableDeclaration",
                  "scope": 99020,
                  "src": "5674:25:383",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 98979,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5674:6:383",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5673:27:383"
            },
            "scope": 99646,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 99081,
            "nodeType": "FunctionDefinition",
            "src": "6311:889:383",
            "nodes": [],
            "body": {
              "id": 99080,
              "nodeType": "Block",
              "src": "6391:809:383",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 99029,
                        "name": "_quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99025,
                        "src": "6419:9:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 99028,
                      "name": "_checkTokenSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99156,
                      "src": "6401:17:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) view"
                      }
                    },
                    "id": 99030,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6401:28:383",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99031,
                  "nodeType": "ExpressionStatement",
                  "src": "6401:28:383"
                },
                {
                  "assignments": [
                    99033
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 99033,
                      "mutability": "mutable",
                      "name": "_tokenOwner",
                      "nameLocation": "6501:11:383",
                      "nodeType": "VariableDeclaration",
                      "scope": 99080,
                      "src": "6493:19:383",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 99032,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6493:7:383",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 99036,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 99034,
                      "name": "_dropMsgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        99619
                      ],
                      "referencedDeclaration": 99619,
                      "src": "6515:14:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 99035,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6515:16:383",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6493:38:383"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 99038,
                        "name": "_tokenOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99033,
                        "src": "6559:11:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 99039,
                        "name": "_burnTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99023,
                        "src": "6572:12:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 99040,
                        "name": "_quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99025,
                        "src": "6586:9:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 99037,
                      "name": "verifyBurnToClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38600,
                      "src": "6541:17:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256) view"
                      }
                    },
                    "id": 99041,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6541:55:383",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99042,
                  "nodeType": "ExpressionStatement",
                  "src": "6541:55:383"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 99044,
                        "name": "_tokenOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99033,
                        "src": "6626:11:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 99045,
                        "name": "_burnTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99023,
                        "src": "6639:12:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 99046,
                        "name": "_quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99025,
                        "src": "6653:9:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 99043,
                      "name": "_burnTokensOnOrigin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38651,
                      "src": "6606:19:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 99047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6606:57:383",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99048,
                  "nodeType": "ExpressionStatement",
                  "src": "6606:57:383"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 99052,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6741:1:383",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 99051,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6733:7:383",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 99050,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6733:7:383",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 99053,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6733:10:383",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 99054,
                        "name": "_quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99025,
                        "src": "6757:9:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 99055,
                              "name": "_burnToClaimStorage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 38665,
                              "src": "6780:19:383",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Data_$38452_storage_ptr_$",
                                "typeString": "function () pure returns (struct BurnToClaimStorage.Data storage pointer)"
                              }
                            },
                            "id": 99056,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6780:21:383",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Data_$38452_storage_ptr",
                              "typeString": "struct BurnToClaimStorage.Data storage pointer"
                            }
                          },
                          "id": 99057,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "burnToClaimInfo",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 38451,
                          "src": "6780:37:383",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_BurnToClaimInfo_$32191_storage",
                            "typeString": "struct IBurnToClaim.BurnToClaimInfo storage ref"
                          }
                        },
                        "id": 99058,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "currency",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32190,
                        "src": "6780:46:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 99059,
                              "name": "_burnToClaimStorage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 38665,
                              "src": "6840:19:383",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Data_$38452_storage_ptr_$",
                                "typeString": "function () pure returns (struct BurnToClaimStorage.Data storage pointer)"
                              }
                            },
                            "id": 99060,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6840:21:383",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Data_$38452_storage_ptr",
                              "typeString": "struct BurnToClaimStorage.Data storage pointer"
                            }
                          },
                          "id": 99061,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "burnToClaimInfo",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 38451,
                          "src": "6840:37:383",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_BurnToClaimInfo_$32191_storage",
                            "typeString": "struct IBurnToClaim.BurnToClaimInfo storage ref"
                          }
                        },
                        "id": 99062,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "mintPriceForNewToken",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32188,
                        "src": "6840:58:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 99049,
                      "name": "_collectPriceOnClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        99293
                      ],
                      "referencedDeclaration": 99293,
                      "src": "6699:20:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,address,uint256)"
                      }
                    },
                    "id": 99063,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6699:209:383",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99064,
                  "nodeType": "ExpressionStatement",
                  "src": "6699:209:383"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 99066,
                        "name": "_tokenOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99033,
                        "src": "6953:11:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 99067,
                        "name": "_quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99025,
                        "src": "6966:9:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 99065,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10018,
                        10202
                      ],
                      "referencedDeclaration": 10018,
                      "src": "6943:9:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 99068,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6943:33:383",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99069,
                  "nodeType": "ExpressionStatement",
                  "src": "6943:33:383"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 99071,
                              "name": "_burnToClaimStorage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 38665,
                              "src": "7050:19:383",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Data_$38452_storage_ptr_$",
                                "typeString": "function () pure returns (struct BurnToClaimStorage.Data storage pointer)"
                              }
                            },
                            "id": 99072,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7050:21:383",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Data_$38452_storage_ptr",
                              "typeString": "struct BurnToClaimStorage.Data storage pointer"
                            }
                          },
                          "id": 99073,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "burnToClaimInfo",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 38451,
                          "src": "7050:37:383",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_BurnToClaimInfo_$32191_storage",
                            "typeString": "struct IBurnToClaim.BurnToClaimInfo storage ref"
                          }
                        },
                        "id": 99074,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "originContractAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32181,
                        "src": "7050:59:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 99075,
                        "name": "_tokenOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99033,
                        "src": "7123:11:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 99076,
                        "name": "_burnTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99023,
                        "src": "7148:12:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 99077,
                        "name": "_quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99025,
                        "src": "7174:9:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 99070,
                      "name": "TokensBurnedAndClaimed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32202,
                      "src": "7014:22:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 99078,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7014:179:383",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99079,
                  "nodeType": "EmitStatement",
                  "src": "7009:184:383"
                }
              ]
            },
            "documentation": {
              "id": 99021,
              "nodeType": "StructuredDocumentation",
              "src": "6218:88:383",
              "text": "@notice Claim lazy minted tokens after burning required tokens from origin contract."
            },
            "functionSelector": "1567313b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burnAndClaim",
            "nameLocation": "6320:12:383",
            "parameters": {
              "id": 99026,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99023,
                  "mutability": "mutable",
                  "name": "_burnTokenId",
                  "nameLocation": "6341:12:383",
                  "nodeType": "VariableDeclaration",
                  "scope": 99081,
                  "src": "6333:20:383",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 99022,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6333:7:383",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 99025,
                  "mutability": "mutable",
                  "name": "_quantity",
                  "nameLocation": "6363:9:383",
                  "nodeType": "VariableDeclaration",
                  "scope": 99081,
                  "src": "6355:17:383",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 99024,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6355:7:383",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6332:41:383"
            },
            "returnParameters": {
              "id": 99027,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6391:0:383"
            },
            "scope": 99646,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 99116,
            "nodeType": "FunctionDefinition",
            "src": "7473:353:383",
            "nodes": [],
            "body": {
              "id": 99115,
              "nodeType": "Block",
              "src": "7534:292:383",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 99089,
                            "name": "DEFAULT_ADMIN_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 98816,
                            "src": "7561:18:383",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 99090,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                99632
                              ],
                              "referencedDeclaration": 99632,
                              "src": "7581:10:383",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 99091,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7581:12:383",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 99088,
                          "name": "_hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99609,
                          "src": "7552:8:383",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 99092,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7552:42:383",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f742061646d696e2e",
                        "id": 99093,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7596:12:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e53bf2a2bcdd43c564217a5a8749411547168b3f2765ac09377195dccc999427",
                          "typeString": "literal_string \"not admin.\""
                        },
                        "value": "not admin."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e53bf2a2bcdd43c564217a5a8749411547168b3f2765ac09377195dccc999427",
                          "typeString": "literal_string \"not admin.\""
                        }
                      ],
                      "id": 99087,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7544:7:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 99094,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7544:65:383",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99095,
                  "nodeType": "ExpressionStatement",
                  "src": "7544:65:383"
                },
                {
                  "assignments": [
                    99100
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 99100,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "7659:4:383",
                      "nodeType": "VariableDeclaration",
                      "scope": 99115,
                      "src": "7620:43:383",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$99656_storage_ptr",
                        "typeString": "struct BurnToClaimDrop721Storage.Data"
                      },
                      "typeName": {
                        "id": 99099,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 99098,
                          "name": "BurnToClaimDrop721Storage.Data",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 99656,
                          "src": "7620:30:383"
                        },
                        "referencedDeclaration": 99656,
                        "src": "7620:30:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$99656_storage_ptr",
                          "typeString": "struct BurnToClaimDrop721Storage.Data"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 99104,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 99101,
                        "name": "BurnToClaimDrop721Storage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99669,
                        "src": "7666:25:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_BurnToClaimDrop721Storage_$99669_$",
                          "typeString": "type(library BurnToClaimDrop721Storage)"
                        }
                      },
                      "id": 99102,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burnToClaimDrop721Storage",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 99668,
                      "src": "7666:51:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Data_$99656_storage_ptr_$",
                        "typeString": "function () pure returns (struct BurnToClaimDrop721Storage.Data storage pointer)"
                      }
                    },
                    "id": 99103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7666:53:383",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Data_$99656_storage_ptr",
                      "typeString": "struct BurnToClaimDrop721Storage.Data storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7620:99:383"
                },
                {
                  "expression": {
                    "id": 99109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 99105,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99100,
                        "src": "7729:4:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$99656_storage_ptr",
                          "typeString": "struct BurnToClaimDrop721Storage.Data storage pointer"
                        }
                      },
                      "id": 99107,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "maxTotalMinted",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 99655,
                      "src": "7729:19:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 99108,
                      "name": "_maxTotalMinted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99084,
                      "src": "7751:15:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7729:37:383",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 99110,
                  "nodeType": "ExpressionStatement",
                  "src": "7729:37:383"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 99112,
                        "name": "_maxTotalMinted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99084,
                        "src": "7803:15:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 99111,
                      "name": "MaxTotalMintedUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 98837,
                      "src": "7781:21:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 99113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7781:38:383",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99114,
                  "nodeType": "EmitStatement",
                  "src": "7776:43:383"
                }
              ]
            },
            "documentation": {
              "id": 99082,
              "nodeType": "StructuredDocumentation",
              "src": "7387:81:383",
              "text": "@notice Lets a contract admin set the global maximum NFTs that can be minted."
            },
            "functionSelector": "fd3078d8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setMaxTotalMinted",
            "nameLocation": "7482:17:383",
            "parameters": {
              "id": 99085,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99084,
                  "mutability": "mutable",
                  "name": "_maxTotalMinted",
                  "nameLocation": "7508:15:383",
                  "nodeType": "VariableDeclaration",
                  "scope": 99116,
                  "src": "7500:23:383",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 99083,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7500:7:383",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7499:25:383"
            },
            "returnParameters": {
              "id": 99086,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7534:0:383"
            },
            "scope": 99646,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 99156,
            "nodeType": "FunctionDefinition",
            "src": "8078:415:383",
            "nodes": [],
            "body": {
              "id": 99155,
              "nodeType": "Block",
              "src": "8138:355:383",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    99123
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 99123,
                      "mutability": "mutable",
                      "name": "_maxTotalMinted",
                      "nameLocation": "8156:15:383",
                      "nodeType": "VariableDeclaration",
                      "scope": 99155,
                      "src": "8148:23:383",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 99122,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8148:7:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 99126,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 99124,
                      "name": "maxTotalMinted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99507,
                      "src": "8174:14:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 99125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8174:16:383",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8148:42:383"
                },
                {
                  "assignments": [
                    99128
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 99128,
                      "mutability": "mutable",
                      "name": "currentTotalMinted",
                      "nameLocation": "8208:18:383",
                      "nodeType": "VariableDeclaration",
                      "scope": 99155,
                      "src": "8200:26:383",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 99127,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8200:7:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 99131,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 99129,
                      "name": "totalMinted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99459,
                      "src": "8229:11:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 99130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8229:13:383",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8200:42:383"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 99138,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 99135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 99133,
                            "name": "currentTotalMinted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99128,
                            "src": "8261:18:383",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 99134,
                            "name": "_quantity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99119,
                            "src": "8282:9:383",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8261:30:383",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 99136,
                            "name": "nextTokenIdToLazyMint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40362,
                            "src": "8295:21:383",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 99137,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8295:23:383",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8261:57:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "21546f6b656e73",
                        "id": 99139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8320:9:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9c48d16b147323aabba55b2c5e21a0b7a88b05e59180ad9d2d4b243d721a30dd",
                          "typeString": "literal_string \"!Tokens\""
                        },
                        "value": "!Tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9c48d16b147323aabba55b2c5e21a0b7a88b05e59180ad9d2d4b243d721a30dd",
                          "typeString": "literal_string \"!Tokens\""
                        }
                      ],
                      "id": 99132,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8253:7:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 99140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8253:77:383",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99141,
                  "nodeType": "ExpressionStatement",
                  "src": "8253:77:383"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 99151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 99145,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 99143,
                            "name": "_maxTotalMinted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99123,
                            "src": "8361:15:383",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 99144,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8380:1:383",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "8361:20:383",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 99150,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 99148,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 99146,
                              "name": "currentTotalMinted",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 99128,
                              "src": "8385:18:383",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 99147,
                              "name": "_quantity",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 99119,
                              "src": "8406:9:383",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "8385:30:383",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "id": 99149,
                            "name": "_maxTotalMinted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99123,
                            "src": "8419:15:383",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8385:49:383",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "8361:73:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "657863656564206d617820746f74616c206d696e74206361702e",
                        "id": 99152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8448:28:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ab3600bb000aa5b1aa082974b20da182751fec6316b014c079f115095636fe31",
                          "typeString": "literal_string \"exceed max total mint cap.\""
                        },
                        "value": "exceed max total mint cap."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ab3600bb000aa5b1aa082974b20da182751fec6316b014c079f115095636fe31",
                          "typeString": "literal_string \"exceed max total mint cap.\""
                        }
                      ],
                      "id": 99142,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8340:7:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 99153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8340:146:383",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99154,
                  "nodeType": "ExpressionStatement",
                  "src": "8340:146:383"
                }
              ]
            },
            "documentation": {
              "id": 99117,
              "nodeType": "StructuredDocumentation",
              "src": "8015:58:383",
              "text": "@dev Check if given quantity is available for minting."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_checkTokenSupply",
            "nameLocation": "8087:17:383",
            "parameters": {
              "id": 99120,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99119,
                  "mutability": "mutable",
                  "name": "_quantity",
                  "nameLocation": "8113:9:383",
                  "nodeType": "VariableDeclaration",
                  "scope": 99156,
                  "src": "8105:17:383",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 99118,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8105:7:383",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8104:19:383"
            },
            "returnParameters": {
              "id": 99121,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8138:0:383"
            },
            "scope": 99646,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 99179,
            "nodeType": "FunctionDefinition",
            "src": "8553:229:383",
            "nodes": [],
            "body": {
              "id": 99178,
              "nodeType": "Block",
              "src": "8737:45:383",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 99175,
                        "name": "_quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99161,
                        "src": "8765:9:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 99174,
                      "name": "_checkTokenSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99156,
                      "src": "8747:17:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) view"
                      }
                    },
                    "id": 99176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8747:28:383",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99177,
                  "nodeType": "ExpressionStatement",
                  "src": "8747:28:383"
                }
              ]
            },
            "baseFunctions": [
              39678
            ],
            "documentation": {
              "id": 99157,
              "nodeType": "StructuredDocumentation",
              "src": "8499:49:383",
              "text": "@dev Runs before every `claim` function call."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeClaim",
            "nameLocation": "8562:12:383",
            "overrides": {
              "id": 99172,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8728:8:383"
            },
            "parameters": {
              "id": 99171,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99159,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 99179,
                  "src": "8584:7:383",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 99158,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8584:7:383",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 99161,
                  "mutability": "mutable",
                  "name": "_quantity",
                  "nameLocation": "8609:9:383",
                  "nodeType": "VariableDeclaration",
                  "scope": 99179,
                  "src": "8601:17:383",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 99160,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8601:7:383",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 99163,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 99179,
                  "src": "8628:7:383",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 99162,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8628:7:383",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 99165,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 99179,
                  "src": "8645:7:383",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 99164,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8645:7:383",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 99168,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 99179,
                  "src": "8662:23:383",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_AllowlistProof_$32523_calldata_ptr",
                    "typeString": "struct IDrop.AllowlistProof"
                  },
                  "typeName": {
                    "id": 99167,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 99166,
                      "name": "AllowlistProof",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 32523,
                      "src": "8662:14:383"
                    },
                    "referencedDeclaration": 32523,
                    "src": "8662:14:383",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_AllowlistProof_$32523_storage_ptr",
                      "typeString": "struct IDrop.AllowlistProof"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 99170,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 99179,
                  "src": "8695:12:383",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 99169,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8695:5:383",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8574:139:383"
            },
            "returnParameters": {
              "id": 99173,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8737:0:383"
            },
            "scope": 99646,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 99293,
            "nodeType": "FunctionDefinition",
            "src": "8872:1136:383",
            "nodes": [],
            "body": {
              "id": 99292,
              "nodeType": "Block",
              "src": "9058:950:383",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 99194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 99192,
                      "name": "_pricePerToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99188,
                      "src": "9072:14:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 99193,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9090:1:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "9072:19:383",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 99205,
                  "nodeType": "IfStatement",
                  "src": "9068:103:383",
                  "trueBody": {
                    "id": 99204,
                    "nodeType": "Block",
                    "src": "9093:78:383",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 99199,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 99196,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "9115:3:383",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 99197,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "9115:9:383",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 99198,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9128:1:383",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "9115:14:383",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "2156616c7565",
                              "id": 99200,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9131:8:383",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_208006903b0d1b8c530b3b2de29e1f765aa4311b3f136f1a342e9de039eda1b1",
                                "typeString": "literal_string \"!Value\""
                              },
                              "value": "!Value"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_208006903b0d1b8c530b3b2de29e1f765aa4311b3f136f1a342e9de039eda1b1",
                                "typeString": "literal_string \"!Value\""
                              }
                            ],
                            "id": 99195,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "9107:7:383",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 99201,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9107:33:383",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 99202,
                        "nodeType": "ExpressionStatement",
                        "src": "9107:33:383"
                      },
                      {
                        "functionReturnParameters": 99191,
                        "id": 99203,
                        "nodeType": "Return",
                        "src": "9154:7:383"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    99207,
                    99209
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 99207,
                      "mutability": "mutable",
                      "name": "platformFeeRecipient",
                      "nameLocation": "9190:20:383",
                      "nodeType": "VariableDeclaration",
                      "scope": 99292,
                      "src": "9182:28:383",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 99206,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9182:7:383",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 99209,
                      "mutability": "mutable",
                      "name": "platformFeeBps",
                      "nameLocation": "9219:14:383",
                      "nodeType": "VariableDeclaration",
                      "scope": 99292,
                      "src": "9212:21:383",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "typeName": {
                        "id": 99208,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "9212:6:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 99212,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 99210,
                      "name": "getPlatformFeeInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41683,
                      "src": "9237:18:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$_t_uint16_$",
                        "typeString": "function () view returns (address,uint16)"
                      }
                    },
                    "id": 99211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9237:20:383",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_uint16_$",
                      "typeString": "tuple(address,uint16)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9181:76:383"
                },
                {
                  "assignments": [
                    99214
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 99214,
                      "mutability": "mutable",
                      "name": "saleRecipient",
                      "nameLocation": "9276:13:383",
                      "nodeType": "VariableDeclaration",
                      "scope": 99292,
                      "src": "9268:21:383",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 99213,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9268:7:383",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 99225,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 99220,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 99215,
                        "name": "_primarySaleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99182,
                        "src": "9292:21:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 99218,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9325:1:383",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 99217,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9317:7:383",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 99216,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9317:7:383",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 99219,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9317:10:383",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "9292:35:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 99223,
                      "name": "_primarySaleRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99182,
                      "src": "9355:21:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 99224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "9292:84:383",
                    "trueExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 99221,
                        "name": "primarySaleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41837,
                        "src": "9330:20:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 99222,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9330:22:383",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9268:108:383"
                },
                {
                  "assignments": [
                    99227
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 99227,
                      "mutability": "mutable",
                      "name": "totalPrice",
                      "nameLocation": "9395:10:383",
                      "nodeType": "VariableDeclaration",
                      "scope": 99292,
                      "src": "9387:18:383",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 99226,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9387:7:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 99231,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 99230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 99228,
                      "name": "_quantityToClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99184,
                      "src": "9408:16:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 99229,
                      "name": "_pricePerToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99188,
                      "src": "9427:14:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9408:33:383",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9387:54:383"
                },
                {
                  "assignments": [
                    99233
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 99233,
                      "mutability": "mutable",
                      "name": "platformFees",
                      "nameLocation": "9459:12:383",
                      "nodeType": "VariableDeclaration",
                      "scope": 99292,
                      "src": "9451:20:383",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 99232,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9451:7:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 99240,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 99239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 99236,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 99234,
                            "name": "totalPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99227,
                            "src": "9475:10:383",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 99235,
                            "name": "platformFeeBps",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99209,
                            "src": "9488:14:383",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "src": "9475:27:383",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 99237,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "9474:29:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 99238,
                      "name": "MAX_BPS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 98832,
                      "src": "9506:7:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9474:39:383",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9451:62:383"
                },
                {
                  "assignments": [
                    99242
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 99242,
                      "mutability": "mutable",
                      "name": "validMsgValue",
                      "nameLocation": "9529:13:383",
                      "nodeType": "VariableDeclaration",
                      "scope": 99292,
                      "src": "9524:18:383",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 99241,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "9524:4:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 99243,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9524:18:383"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 99247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 99244,
                      "name": "_currency",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99186,
                      "src": "9556:9:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 99245,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63578,
                        "src": "9569:19:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$63578_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 99246,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "NATIVE_TOKEN",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63346,
                      "src": "9569:32:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9556:45:383",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 99263,
                    "nodeType": "Block",
                    "src": "9673:55:383",
                    "statements": [
                      {
                        "expression": {
                          "id": 99261,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 99256,
                            "name": "validMsgValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99242,
                            "src": "9687:13:383",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 99260,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 99257,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "9703:3:383",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 99258,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "9703:9:383",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 99259,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9716:1:383",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "9703:14:383",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "9687:30:383",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 99262,
                        "nodeType": "ExpressionStatement",
                        "src": "9687:30:383"
                      }
                    ]
                  },
                  "id": 99264,
                  "nodeType": "IfStatement",
                  "src": "9552:176:383",
                  "trueBody": {
                    "id": 99255,
                    "nodeType": "Block",
                    "src": "9603:64:383",
                    "statements": [
                      {
                        "expression": {
                          "id": 99253,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 99248,
                            "name": "validMsgValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99242,
                            "src": "9617:13:383",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 99252,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 99249,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "9633:3:383",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 99250,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "9633:9:383",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 99251,
                              "name": "totalPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 99227,
                              "src": "9646:10:383",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "9633:23:383",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "9617:39:383",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 99254,
                        "nodeType": "ExpressionStatement",
                        "src": "9617:39:383"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 99266,
                        "name": "validMsgValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99242,
                        "src": "9745:13:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964206d73672076616c7565",
                        "id": 99267,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9760:19:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_de0d8376eff7771bcc57765656c140a92c651b9eeb4df686f809560770e7fe49",
                          "typeString": "literal_string \"Invalid msg value\""
                        },
                        "value": "Invalid msg value"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_de0d8376eff7771bcc57765656c140a92c651b9eeb4df686f809560770e7fe49",
                          "typeString": "literal_string \"Invalid msg value\""
                        }
                      ],
                      "id": 99265,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9737:7:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 99268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9737:43:383",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99269,
                  "nodeType": "ExpressionStatement",
                  "src": "9737:43:383"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 99273,
                        "name": "_currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99186,
                        "src": "9828:9:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 99274,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            99632
                          ],
                          "referencedDeclaration": 99632,
                          "src": "9839:10:383",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 99275,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9839:12:383",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 99276,
                        "name": "platformFeeRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99207,
                        "src": "9853:20:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 99277,
                        "name": "platformFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99233,
                        "src": "9875:12:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 99270,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63578,
                        "src": "9791:19:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$63578_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 99272,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferCurrency",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63383,
                      "src": "9791:36:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 99278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9791:97:383",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99279,
                  "nodeType": "ExpressionStatement",
                  "src": "9791:97:383"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 99283,
                        "name": "_currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99186,
                        "src": "9935:9:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 99284,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            99632
                          ],
                          "referencedDeclaration": 99632,
                          "src": "9946:10:383",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 99285,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9946:12:383",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 99286,
                        "name": "saleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99214,
                        "src": "9960:13:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 99289,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 99287,
                          "name": "totalPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99227,
                          "src": "9975:10:383",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 99288,
                          "name": "platformFees",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99233,
                          "src": "9988:12:383",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9975:25:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 99280,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63578,
                        "src": "9898:19:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$63578_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 99282,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferCurrency",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63383,
                      "src": "9898:36:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 99290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9898:103:383",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99291,
                  "nodeType": "ExpressionStatement",
                  "src": "9898:103:383"
                }
              ]
            },
            "baseFunctions": [
              39722
            ],
            "documentation": {
              "id": 99180,
              "nodeType": "StructuredDocumentation",
              "src": "8788:79:383",
              "text": "@dev Collects and distributes the primary sale value of NFTs being claimed."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_collectPriceOnClaim",
            "nameLocation": "8881:20:383",
            "overrides": {
              "id": 99190,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9049:8:383"
            },
            "parameters": {
              "id": 99189,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99182,
                  "mutability": "mutable",
                  "name": "_primarySaleRecipient",
                  "nameLocation": "8919:21:383",
                  "nodeType": "VariableDeclaration",
                  "scope": 99293,
                  "src": "8911:29:383",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 99181,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8911:7:383",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 99184,
                  "mutability": "mutable",
                  "name": "_quantityToClaim",
                  "nameLocation": "8958:16:383",
                  "nodeType": "VariableDeclaration",
                  "scope": 99293,
                  "src": "8950:24:383",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 99183,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8950:7:383",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 99186,
                  "mutability": "mutable",
                  "name": "_currency",
                  "nameLocation": "8992:9:383",
                  "nodeType": "VariableDeclaration",
                  "scope": 99293,
                  "src": "8984:17:383",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 99185,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8984:7:383",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 99188,
                  "mutability": "mutable",
                  "name": "_pricePerToken",
                  "nameLocation": "9019:14:383",
                  "nodeType": "VariableDeclaration",
                  "scope": 99293,
                  "src": "9011:22:383",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 99187,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9011:7:383",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8901:138:383"
            },
            "returnParameters": {
              "id": 99191,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9058:0:383"
            },
            "scope": 99646,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 99324,
            "nodeType": "FunctionDefinition",
            "src": "10061:326:383",
            "nodes": [],
            "body": {
              "id": 99323,
              "nodeType": "Block",
              "src": "10214:173:383",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    99308
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 99308,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "10252:4:383",
                      "nodeType": "VariableDeclaration",
                      "scope": 99323,
                      "src": "10224:32:383",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$9238_storage_ptr",
                        "typeString": "struct ERC721AStorage.Data"
                      },
                      "typeName": {
                        "id": 99307,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 99306,
                          "name": "ERC721AStorage.Data",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9238,
                          "src": "10224:19:383"
                        },
                        "referencedDeclaration": 9238,
                        "src": "10224:19:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$9238_storage_ptr",
                          "typeString": "struct ERC721AStorage.Data"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 99312,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 99309,
                        "name": "ERC721AStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9251,
                        "src": "10259:14:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721AStorage_$9251_$",
                          "typeString": "type(library ERC721AStorage)"
                        }
                      },
                      "id": 99310,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "erc721AStorage",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9250,
                      "src": "10259:29:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Data_$9238_storage_ptr_$",
                        "typeString": "function () pure returns (struct ERC721AStorage.Data storage pointer)"
                      }
                    },
                    "id": 99311,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10259:31:383",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Data_$9238_storage_ptr",
                      "typeString": "struct ERC721AStorage.Data storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10224:66:383"
                },
                {
                  "expression": {
                    "id": 99316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 99313,
                      "name": "startTokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99302,
                      "src": "10300:12:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 99314,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99308,
                        "src": "10315:4:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$9238_storage_ptr",
                          "typeString": "struct ERC721AStorage.Data storage pointer"
                        }
                      },
                      "id": 99315,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_currentIndex",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9211,
                      "src": "10315:18:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10300:33:383",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 99317,
                  "nodeType": "ExpressionStatement",
                  "src": "10300:33:383"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 99319,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99296,
                        "src": "10353:3:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 99320,
                        "name": "_quantityBeingClaimed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99298,
                        "src": "10358:21:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 99318,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10018,
                        10202
                      ],
                      "referencedDeclaration": 10018,
                      "src": "10343:9:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 99321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10343:37:383",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99322,
                  "nodeType": "ExpressionStatement",
                  "src": "10343:37:383"
                }
              ]
            },
            "baseFunctions": [
              39732
            ],
            "documentation": {
              "id": 99294,
              "nodeType": "StructuredDocumentation",
              "src": "10014:42:383",
              "text": "@dev Transfers the NFTs being claimed."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transferTokensOnClaim",
            "nameLocation": "10070:22:383",
            "overrides": {
              "id": 99300,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10162:8:383"
            },
            "parameters": {
              "id": 99299,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99296,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "10101:3:383",
                  "nodeType": "VariableDeclaration",
                  "scope": 99324,
                  "src": "10093:11:383",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 99295,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10093:7:383",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 99298,
                  "mutability": "mutable",
                  "name": "_quantityBeingClaimed",
                  "nameLocation": "10114:21:383",
                  "nodeType": "VariableDeclaration",
                  "scope": 99324,
                  "src": "10106:29:383",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 99297,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10106:7:383",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10092:44:383"
            },
            "returnParameters": {
              "id": 99303,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99302,
                  "mutability": "mutable",
                  "name": "startTokenId",
                  "nameLocation": "10196:12:383",
                  "nodeType": "VariableDeclaration",
                  "scope": 99324,
                  "src": "10188:20:383",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 99301,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10188:7:383",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10187:22:383"
            },
            "scope": 99646,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 99338,
            "nodeType": "FunctionDefinition",
            "src": "10482:138:383",
            "nodes": [],
            "body": {
              "id": 99337,
              "nodeType": "Block",
              "src": "10554:66:383",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 99332,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98816,
                        "src": "10580:18:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 99333,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            99632
                          ],
                          "referencedDeclaration": 99632,
                          "src": "10600:10:383",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 99334,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10600:12:383",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 99331,
                      "name": "_hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99609,
                      "src": "10571:8:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 99335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10571:42:383",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 99330,
                  "id": 99336,
                  "nodeType": "Return",
                  "src": "10564:49:383"
                }
              ]
            },
            "baseFunctions": [
              41777
            ],
            "documentation": {
              "id": 99325,
              "nodeType": "StructuredDocumentation",
              "src": "10393:84:383",
              "text": "@dev Checks whether platform fee info can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetPlatformFeeInfo",
            "nameLocation": "10491:22:383",
            "overrides": {
              "id": 99327,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10530:8:383"
            },
            "parameters": {
              "id": 99326,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10513:2:383"
            },
            "returnParameters": {
              "id": 99330,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99329,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 99338,
                  "src": "10548:4:383",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 99328,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10548:4:383",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10547:6:383"
            },
            "scope": 99646,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 99352,
            "nodeType": "FunctionDefinition",
            "src": "10720:143:383",
            "nodes": [],
            "body": {
              "id": 99351,
              "nodeType": "Block",
              "src": "10797:66:383",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 99346,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98816,
                        "src": "10823:18:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 99347,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            99632
                          ],
                          "referencedDeclaration": 99632,
                          "src": "10843:10:383",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 99348,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10843:12:383",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 99345,
                      "name": "_hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99609,
                      "src": "10814:8:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 99349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10814:42:383",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 99344,
                  "id": 99350,
                  "nodeType": "Return",
                  "src": "10807:49:383"
                }
              ]
            },
            "baseFunctions": [
              41907
            ],
            "documentation": {
              "id": 99339,
              "nodeType": "StructuredDocumentation",
              "src": "10626:89:383",
              "text": "@dev Checks whether primary sale recipient can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetPrimarySaleRecipient",
            "nameLocation": "10729:27:383",
            "overrides": {
              "id": 99341,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10773:8:383"
            },
            "parameters": {
              "id": 99340,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10756:2:383"
            },
            "returnParameters": {
              "id": 99344,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99343,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 99352,
                  "src": "10791:4:383",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 99342,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10791:4:383",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10790:6:383"
            },
            "scope": 99646,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 99366,
            "nodeType": "FunctionDefinition",
            "src": "10946:128:383",
            "nodes": [],
            "body": {
              "id": 99365,
              "nodeType": "Block",
              "src": "11008:66:383",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 99360,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98816,
                        "src": "11034:18:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 99361,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            99632
                          ],
                          "referencedDeclaration": 99632,
                          "src": "11054:10:383",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 99362,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11054:12:383",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 99359,
                      "name": "_hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99609,
                      "src": "11025:8:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 99363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11025:42:383",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 99358,
                  "id": 99364,
                  "nodeType": "Return",
                  "src": "11018:49:383"
                }
              ]
            },
            "baseFunctions": [
              40831
            ],
            "documentation": {
              "id": 99353,
              "nodeType": "StructuredDocumentation",
              "src": "10869:72:383",
              "text": "@dev Checks whether owner can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetOwner",
            "nameLocation": "10955:12:383",
            "overrides": {
              "id": 99355,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10984:8:383"
            },
            "parameters": {
              "id": 99354,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10967:2:383"
            },
            "returnParameters": {
              "id": 99358,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99357,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 99366,
                  "src": "11002:4:383",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 99356,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11002:4:383",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11001:6:383"
            },
            "scope": 99646,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 99380,
            "nodeType": "FunctionDefinition",
            "src": "11164:134:383",
            "nodes": [],
            "body": {
              "id": 99379,
              "nodeType": "Block",
              "src": "11232:66:383",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 99374,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98816,
                        "src": "11258:18:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 99375,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            99632
                          ],
                          "referencedDeclaration": 99632,
                          "src": "11278:10:383",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 99376,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11278:12:383",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 99373,
                      "name": "_hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99609,
                      "src": "11249:8:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 99377,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11249:42:383",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 99372,
                  "id": 99378,
                  "nodeType": "Return",
                  "src": "11242:49:383"
                }
              ]
            },
            "baseFunctions": [
              42273
            ],
            "documentation": {
              "id": 99367,
              "nodeType": "StructuredDocumentation",
              "src": "11080:79:383",
              "text": "@dev Checks whether royalty info can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetRoyaltyInfo",
            "nameLocation": "11173:18:383",
            "overrides": {
              "id": 99369,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "11208:8:383"
            },
            "parameters": {
              "id": 99368,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11191:2:383"
            },
            "returnParameters": {
              "id": 99372,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99371,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 99380,
                  "src": "11226:4:383",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 99370,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11226:4:383",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11225:6:383"
            },
            "scope": 99646,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 99394,
            "nodeType": "FunctionDefinition",
            "src": "11393:134:383",
            "nodes": [],
            "body": {
              "id": 99393,
              "nodeType": "Block",
              "src": "11461:66:383",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 99388,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98816,
                        "src": "11487:18:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 99389,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            99632
                          ],
                          "referencedDeclaration": 99632,
                          "src": "11507:10:383",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 99390,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11507:12:383",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 99387,
                      "name": "_hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99609,
                      "src": "11478:8:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 99391,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11478:42:383",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 99386,
                  "id": 99392,
                  "nodeType": "Return",
                  "src": "11471:49:383"
                }
              ]
            },
            "baseFunctions": [
              38776
            ],
            "documentation": {
              "id": 99381,
              "nodeType": "StructuredDocumentation",
              "src": "11304:84:383",
              "text": "@dev Checks whether contract metadata can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetContractURI",
            "nameLocation": "11402:18:383",
            "overrides": {
              "id": 99383,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "11437:8:383"
            },
            "parameters": {
              "id": 99382,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11420:2:383"
            },
            "returnParameters": {
              "id": 99386,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99385,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 99394,
                  "src": "11455:4:383",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 99384,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11455:4:383",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11454:6:383"
            },
            "scope": 99646,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 99408,
            "nodeType": "FunctionDefinition",
            "src": "11622:138:383",
            "nodes": [],
            "body": {
              "id": 99407,
              "nodeType": "Block",
              "src": "11694:66:383",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 99402,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98816,
                        "src": "11720:18:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 99403,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            99632
                          ],
                          "referencedDeclaration": 99632,
                          "src": "11740:10:383",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 99404,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11740:12:383",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 99401,
                      "name": "_hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99609,
                      "src": "11711:8:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 99405,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11711:42:383",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 99400,
                  "id": 99406,
                  "nodeType": "Return",
                  "src": "11704:49:383"
                }
              ]
            },
            "baseFunctions": [
              39738
            ],
            "documentation": {
              "id": 99395,
              "nodeType": "StructuredDocumentation",
              "src": "11533:84:383",
              "text": "@dev Checks whether platform fee info can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetClaimConditions",
            "nameLocation": "11631:22:383",
            "overrides": {
              "id": 99397,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "11670:8:383"
            },
            "parameters": {
              "id": 99396,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11653:2:383"
            },
            "returnParameters": {
              "id": 99400,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99399,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 99408,
                  "src": "11688:4:383",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 99398,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11688:4:383",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11687:6:383"
            },
            "scope": 99646,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 99422,
            "nodeType": "FunctionDefinition",
            "src": "11852:129:383",
            "nodes": [],
            "body": {
              "id": 99421,
              "nodeType": "Block",
              "src": "11922:59:383",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 99416,
                        "name": "MINTER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98828,
                        "src": "11948:11:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 99417,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            99632
                          ],
                          "referencedDeclaration": 99632,
                          "src": "11961:10:383",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 99418,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11961:12:383",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 99415,
                      "name": "_hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99609,
                      "src": "11939:8:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 99419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11939:35:383",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 99414,
                  "id": 99420,
                  "nodeType": "Return",
                  "src": "11932:42:383"
                }
              ]
            },
            "baseFunctions": [
              40445
            ],
            "documentation": {
              "id": 99409,
              "nodeType": "StructuredDocumentation",
              "src": "11766:81:383",
              "text": "@dev Returns whether lazy minting can be done in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canLazyMint",
            "nameLocation": "11861:12:383",
            "overrides": {
              "id": 99411,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "11898:8:383"
            },
            "parameters": {
              "id": 99410,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11873:2:383"
            },
            "returnParameters": {
              "id": 99414,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99413,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 99422,
                  "src": "11916:4:383",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 99412,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11916:4:383",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11915:6:383"
            },
            "scope": 99646,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 99436,
            "nodeType": "FunctionDefinition",
            "src": "12078:142:383",
            "nodes": [],
            "body": {
              "id": 99435,
              "nodeType": "Block",
              "src": "12154:66:383",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 99430,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98816,
                        "src": "12180:18:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 99431,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            99632
                          ],
                          "referencedDeclaration": 99632,
                          "src": "12200:10:383",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 99432,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12200:12:383",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 99429,
                      "name": "_hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99609,
                      "src": "12171:8:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 99433,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12171:42:383",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 99428,
                  "id": 99434,
                  "nodeType": "Return",
                  "src": "12164:49:383"
                }
              ]
            },
            "baseFunctions": [
              38671
            ],
            "documentation": {
              "id": 99423,
              "nodeType": "StructuredDocumentation",
              "src": "11987:86:383",
              "text": "@dev Returns whether burn-to-claim info can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetBurnToClaim",
            "nameLocation": "12087:18:383",
            "overrides": {
              "id": 99425,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "12130:8:383"
            },
            "parameters": {
              "id": 99424,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12105:2:383"
            },
            "returnParameters": {
              "id": 99428,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99427,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 99436,
                  "src": "12148:4:383",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 99426,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12148:4:383",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12147:6:383"
            },
            "scope": 99646,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 99459,
            "nodeType": "FunctionDefinition",
            "src": "12494:223:383",
            "nodes": [],
            "body": {
              "id": 99458,
              "nodeType": "Block",
              "src": "12547:170:383",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    99446
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 99446,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "12585:4:383",
                      "nodeType": "VariableDeclaration",
                      "scope": 99458,
                      "src": "12557:32:383",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$9238_storage_ptr",
                        "typeString": "struct ERC721AStorage.Data"
                      },
                      "typeName": {
                        "id": 99445,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 99444,
                          "name": "ERC721AStorage.Data",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9238,
                          "src": "12557:19:383"
                        },
                        "referencedDeclaration": 9238,
                        "src": "12557:19:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$9238_storage_ptr",
                          "typeString": "struct ERC721AStorage.Data"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 99450,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 99447,
                        "name": "ERC721AStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9251,
                        "src": "12592:14:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721AStorage_$9251_$",
                          "typeString": "type(library ERC721AStorage)"
                        }
                      },
                      "id": 99448,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "erc721AStorage",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9250,
                      "src": "12592:29:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Data_$9238_storage_ptr_$",
                        "typeString": "function () pure returns (struct ERC721AStorage.Data storage pointer)"
                      }
                    },
                    "id": 99449,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12592:31:383",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Data_$9238_storage_ptr",
                      "typeString": "struct ERC721AStorage.Data storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12557:66:383"
                },
                {
                  "id": 99457,
                  "nodeType": "UncheckedBlock",
                  "src": "12633:78:383",
                  "statements": [
                    {
                      "expression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 99455,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 99451,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99446,
                            "src": "12664:4:383",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Data_$9238_storage_ptr",
                              "typeString": "struct ERC721AStorage.Data storage pointer"
                            }
                          },
                          "id": 99452,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_currentIndex",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9211,
                          "src": "12664:18:383",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 99453,
                            "name": "_startTokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9328,
                            "src": "12685:13:383",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 99454,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12685:15:383",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12664:36:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "functionReturnParameters": 99441,
                      "id": 99456,
                      "nodeType": "Return",
                      "src": "12657:43:383"
                    }
                  ]
                }
              ]
            },
            "documentation": {
              "id": 99437,
              "nodeType": "StructuredDocumentation",
              "src": "12404:85:383",
              "text": " @notice Returns the total amount of tokens minted in the contract."
            },
            "functionSelector": "a2309ff8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalMinted",
            "nameLocation": "12503:11:383",
            "parameters": {
              "id": 99438,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12514:2:383"
            },
            "returnParameters": {
              "id": 99441,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99440,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 99459,
                  "src": "12538:7:383",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 99439,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12538:7:383",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12537:9:383"
            },
            "scope": 99646,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 99469,
            "nodeType": "FunctionDefinition",
            "src": "12802:108:383",
            "nodes": [],
            "body": {
              "id": 99468,
              "nodeType": "Block",
              "src": "12863:47:383",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 99465,
                      "name": "nextTokenIdToLazyMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40362,
                      "src": "12880:21:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 99466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12880:23:383",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 99464,
                  "id": 99467,
                  "nodeType": "Return",
                  "src": "12873:30:383"
                }
              ]
            },
            "documentation": {
              "id": 99460,
              "nodeType": "StructuredDocumentation",
              "src": "12723:74:383",
              "text": "@notice The tokenId of the next NFT that will be minted / lazy minted."
            },
            "functionSelector": "3b1475a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "nextTokenIdToMint",
            "nameLocation": "12811:17:383",
            "parameters": {
              "id": 99461,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12828:2:383"
            },
            "returnParameters": {
              "id": 99464,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99463,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 99469,
                  "src": "12854:7:383",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 99462,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12854:7:383",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12853:9:383"
            },
            "scope": 99646,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 99488,
            "nodeType": "FunctionDefinition",
            "src": "12982:180:383",
            "nodes": [],
            "body": {
              "id": 99487,
              "nodeType": "Block",
              "src": "13044:118:383",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    99479
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 99479,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "13082:4:383",
                      "nodeType": "VariableDeclaration",
                      "scope": 99487,
                      "src": "13054:32:383",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$9238_storage_ptr",
                        "typeString": "struct ERC721AStorage.Data"
                      },
                      "typeName": {
                        "id": 99478,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 99477,
                          "name": "ERC721AStorage.Data",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9238,
                          "src": "13054:19:383"
                        },
                        "referencedDeclaration": 9238,
                        "src": "13054:19:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$9238_storage_ptr",
                          "typeString": "struct ERC721AStorage.Data"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 99483,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 99480,
                        "name": "ERC721AStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9251,
                        "src": "13089:14:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721AStorage_$9251_$",
                          "typeString": "type(library ERC721AStorage)"
                        }
                      },
                      "id": 99481,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "erc721AStorage",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9250,
                      "src": "13089:29:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Data_$9238_storage_ptr_$",
                        "typeString": "function () pure returns (struct ERC721AStorage.Data storage pointer)"
                      }
                    },
                    "id": 99482,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13089:31:383",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Data_$9238_storage_ptr",
                      "typeString": "struct ERC721AStorage.Data storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13054:66:383"
                },
                {
                  "expression": {
                    "expression": {
                      "id": 99484,
                      "name": "data",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99479,
                      "src": "13137:4:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$9238_storage_ptr",
                        "typeString": "struct ERC721AStorage.Data storage pointer"
                      }
                    },
                    "id": 99485,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "_currentIndex",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 9211,
                    "src": "13137:18:383",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 99474,
                  "id": 99486,
                  "nodeType": "Return",
                  "src": "13130:25:383"
                }
              ]
            },
            "documentation": {
              "id": 99470,
              "nodeType": "StructuredDocumentation",
              "src": "12916:61:383",
              "text": "@notice The next token ID of the NFT that can be claimed."
            },
            "functionSelector": "acd083f8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "nextTokenIdToClaim",
            "nameLocation": "12991:18:383",
            "parameters": {
              "id": 99471,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13009:2:383"
            },
            "returnParameters": {
              "id": 99474,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99473,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 99488,
                  "src": "13035:7:383",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 99472,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13035:7:383",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13034:9:383"
            },
            "scope": 99646,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 99507,
            "nodeType": "FunctionDefinition",
            "src": "13226:208:383",
            "nodes": [],
            "body": {
              "id": 99506,
              "nodeType": "Block",
              "src": "13282:152:383",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    99498
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 99498,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "13331:4:383",
                      "nodeType": "VariableDeclaration",
                      "scope": 99506,
                      "src": "13292:43:383",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$99656_storage_ptr",
                        "typeString": "struct BurnToClaimDrop721Storage.Data"
                      },
                      "typeName": {
                        "id": 99497,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 99496,
                          "name": "BurnToClaimDrop721Storage.Data",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 99656,
                          "src": "13292:30:383"
                        },
                        "referencedDeclaration": 99656,
                        "src": "13292:30:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$99656_storage_ptr",
                          "typeString": "struct BurnToClaimDrop721Storage.Data"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 99502,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 99499,
                        "name": "BurnToClaimDrop721Storage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99669,
                        "src": "13338:25:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_BurnToClaimDrop721Storage_$99669_$",
                          "typeString": "type(library BurnToClaimDrop721Storage)"
                        }
                      },
                      "id": 99500,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burnToClaimDrop721Storage",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 99668,
                      "src": "13338:51:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Data_$99656_storage_ptr_$",
                        "typeString": "function () pure returns (struct BurnToClaimDrop721Storage.Data storage pointer)"
                      }
                    },
                    "id": 99501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13338:53:383",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Data_$99656_storage_ptr",
                      "typeString": "struct BurnToClaimDrop721Storage.Data storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13292:99:383"
                },
                {
                  "expression": {
                    "expression": {
                      "id": 99503,
                      "name": "data",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99498,
                      "src": "13408:4:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$99656_storage_ptr",
                        "typeString": "struct BurnToClaimDrop721Storage.Data storage pointer"
                      }
                    },
                    "id": 99504,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "maxTotalMinted",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 99655,
                    "src": "13408:19:383",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 99493,
                  "id": 99505,
                  "nodeType": "Return",
                  "src": "13401:26:383"
                }
              ]
            },
            "documentation": {
              "id": 99489,
              "nodeType": "StructuredDocumentation",
              "src": "13168:53:383",
              "text": "@notice Global max total NFTs that can be minted."
            },
            "functionSelector": "cbfaa46b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "maxTotalMinted",
            "nameLocation": "13235:14:383",
            "parameters": {
              "id": 99490,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13249:2:383"
            },
            "returnParameters": {
              "id": 99493,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99492,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 99507,
                  "src": "13273:7:383",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 99491,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13273:7:383",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13272:9:383"
            },
            "scope": 99646,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 99519,
            "nodeType": "FunctionDefinition",
            "src": "13493:184:383",
            "nodes": [],
            "body": {
              "id": 99518,
              "nodeType": "Block",
              "src": "13541:136:383",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 99514,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99510,
                        "src": "13656:7:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 99515,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13665:4:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 99513,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10538,
                        10735
                      ],
                      "referencedDeclaration": 10735,
                      "src": "13650:5:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (uint256,bool)"
                      }
                    },
                    "id": 99516,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13650:20:383",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99517,
                  "nodeType": "ExpressionStatement",
                  "src": "13650:20:383"
                }
              ]
            },
            "documentation": {
              "id": 99508,
              "nodeType": "StructuredDocumentation",
              "src": "13440:48:383",
              "text": "@notice Burns `tokenId`. See {ERC721-_burn}."
            },
            "functionSelector": "42966c68",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "13502:4:383",
            "parameters": {
              "id": 99511,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99510,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "13515:7:383",
                  "nodeType": "VariableDeclaration",
                  "scope": 99519,
                  "src": "13507:15:383",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 99509,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13507:7:383",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13506:17:383"
            },
            "returnParameters": {
              "id": 99512,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13541:0:383"
            },
            "scope": 99646,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 99583,
            "nodeType": "FunctionDefinition",
            "src": "13731:579:383",
            "nodes": [],
            "body": {
              "id": 99582,
              "nodeType": "Block",
              "src": "13892:418:383",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 99535,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99522,
                        "src": "13930:4:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 99536,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99524,
                        "src": "13936:2:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 99537,
                        "name": "startTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99526,
                        "src": "13940:12:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 99538,
                        "name": "quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99528,
                        "src": "13954:8:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 99532,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "13902:5:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_BurnToClaimDrop721Logic_$99646_$",
                          "typeString": "type(contract super BurnToClaimDrop721Logic)"
                        }
                      },
                      "id": 99534,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_beforeTokenTransfers",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10837,
                      "src": "13902:27:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 99539,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13902:61:383",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99540,
                  "nodeType": "ExpressionStatement",
                  "src": "13902:61:383"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 99562,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 99555,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 99548,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "14075:36:383",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 99542,
                              "name": "TRANSFER_ROLE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 98822,
                              "src": "14085:13:383",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 99545,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "14108:1:383",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 99544,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "14100:7:383",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 99543,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "14100:7:383",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 99546,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14100:10:383",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 99541,
                            "name": "_hasRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99609,
                            "src": "14076:8:383",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) view returns (bool)"
                            }
                          },
                          "id": 99547,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14076:35:383",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 99554,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 99549,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99522,
                          "src": "14115:4:383",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 99552,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14131:1:383",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 99551,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "14123:7:383",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 99550,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "14123:7:383",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 99553,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14123:10:383",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "14115:18:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "14075:58:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 99561,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 99556,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99524,
                        "src": "14137:2:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 99559,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14151:1:383",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 99558,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "14143:7:383",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 99557,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "14143:7:383",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 99560,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14143:10:383",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "14137:16:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "14075:78:383",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 99581,
                  "nodeType": "IfStatement",
                  "src": "14071:233:383",
                  "trueBody": {
                    "id": 99580,
                    "nodeType": "Block",
                    "src": "14155:149:383",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 99573,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 99567,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "14173:30:383",
                            "subExpression": {
                              "arguments": [
                                {
                                  "id": 99564,
                                  "name": "TRANSFER_ROLE",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 98822,
                                  "src": "14183:13:383",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "id": 99565,
                                  "name": "from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 99522,
                                  "src": "14198:4:383",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 99563,
                                "name": "_hasRole",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 99609,
                                "src": "14174:8:383",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (bytes32,address) view returns (bool)"
                                }
                              },
                              "id": 99566,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14174:29:383",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "id": 99572,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "14207:28:383",
                            "subExpression": {
                              "arguments": [
                                {
                                  "id": 99569,
                                  "name": "TRANSFER_ROLE",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 98822,
                                  "src": "14217:13:383",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "id": 99570,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 99524,
                                  "src": "14232:2:383",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 99568,
                                "name": "_hasRole",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 99609,
                                "src": "14208:8:383",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (bytes32,address) view returns (bool)"
                                }
                              },
                              "id": 99571,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14208:27:383",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "14173:62:383",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 99579,
                        "nodeType": "IfStatement",
                        "src": "14169:125:383",
                        "trueBody": {
                          "id": 99578,
                          "nodeType": "Block",
                          "src": "14237:57:383",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "hexValue": "215472616e736665722d526f6c65",
                                    "id": 99575,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "14262:16:383",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_580e0c4592c88fed8ee4d517df979aadb8488f3871dc6e505bc9673b5984355e",
                                      "typeString": "literal_string \"!Transfer-Role\""
                                    },
                                    "value": "!Transfer-Role"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_580e0c4592c88fed8ee4d517df979aadb8488f3871dc6e505bc9673b5984355e",
                                      "typeString": "literal_string \"!Transfer-Role\""
                                    }
                                  ],
                                  "id": 99574,
                                  "name": "revert",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -19,
                                    -19
                                  ],
                                  "referencedDeclaration": -19,
                                  "src": "14255:6:383",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (string memory) pure"
                                  }
                                },
                                "id": 99576,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "14255:24:383",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 99577,
                              "nodeType": "ExpressionStatement",
                              "src": "14255:24:383"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              10837
            ],
            "documentation": {
              "id": 99520,
              "nodeType": "StructuredDocumentation",
              "src": "13683:43:383",
              "text": "@dev See {ERC721-_beforeTokenTransfer}."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfers",
            "nameLocation": "13740:21:383",
            "overrides": {
              "id": 99530,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "13883:8:383"
            },
            "parameters": {
              "id": 99529,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99522,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "13779:4:383",
                  "nodeType": "VariableDeclaration",
                  "scope": 99583,
                  "src": "13771:12:383",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 99521,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13771:7:383",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 99524,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "13801:2:383",
                  "nodeType": "VariableDeclaration",
                  "scope": 99583,
                  "src": "13793:10:383",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 99523,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13793:7:383",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 99526,
                  "mutability": "mutable",
                  "name": "startTokenId",
                  "nameLocation": "13821:12:383",
                  "nodeType": "VariableDeclaration",
                  "scope": 99583,
                  "src": "13813:20:383",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 99525,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13813:7:383",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 99528,
                  "mutability": "mutable",
                  "name": "quantity",
                  "nameLocation": "13851:8:383",
                  "nodeType": "VariableDeclaration",
                  "scope": 99583,
                  "src": "13843:16:383",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 99527,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13843:7:383",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13761:104:383"
            },
            "returnParameters": {
              "id": 99531,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13892:0:383"
            },
            "scope": 99646,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 99609,
            "nodeType": "FunctionDefinition",
            "src": "14316:198:383",
            "nodes": [],
            "body": {
              "id": 99608,
              "nodeType": "Block",
              "src": "14391:123:383",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    99596
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 99596,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "14433:4:383",
                      "nodeType": "VariableDeclaration",
                      "scope": 99608,
                      "src": "14401:36:383",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$40854_storage_ptr",
                        "typeString": "struct PermissionsStorage.Data"
                      },
                      "typeName": {
                        "id": 99595,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 99594,
                          "name": "PermissionsStorage.Data",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 40854,
                          "src": "14401:23:383"
                        },
                        "referencedDeclaration": 40854,
                        "src": "14401:23:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$40854_storage_ptr",
                          "typeString": "struct PermissionsStorage.Data"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 99600,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 99597,
                        "name": "PermissionsStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40867,
                        "src": "14440:18:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_PermissionsStorage_$40867_$",
                          "typeString": "type(library PermissionsStorage)"
                        }
                      },
                      "id": 99598,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "data",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40866,
                      "src": "14440:23:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Data_$40854_storage_ptr_$",
                        "typeString": "function () pure returns (struct PermissionsStorage.Data storage pointer)"
                      }
                    },
                    "id": 99599,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14440:25:383",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Data_$40854_storage_ptr",
                      "typeString": "struct PermissionsStorage.Data storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14401:64:383"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "expression": {
                          "id": 99601,
                          "name": "data",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99596,
                          "src": "14482:4:383",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Data_$40854_storage_ptr",
                            "typeString": "struct PermissionsStorage.Data storage pointer"
                          }
                        },
                        "id": 99602,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "_hasRole",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 40848,
                        "src": "14482:13:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_bool_$_$",
                          "typeString": "mapping(bytes32 => mapping(address => bool))"
                        }
                      },
                      "id": 99604,
                      "indexExpression": {
                        "id": 99603,
                        "name": "role",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99585,
                        "src": "14496:4:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "14482:19:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 99606,
                    "indexExpression": {
                      "id": 99605,
                      "name": "addr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99587,
                      "src": "14502:4:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "14482:25:383",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 99591,
                  "id": 99607,
                  "nodeType": "Return",
                  "src": "14475:32:383"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_hasRole",
            "nameLocation": "14325:8:383",
            "parameters": {
              "id": 99588,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99585,
                  "mutability": "mutable",
                  "name": "role",
                  "nameLocation": "14342:4:383",
                  "nodeType": "VariableDeclaration",
                  "scope": 99609,
                  "src": "14334:12:383",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 99584,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "14334:7:383",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 99587,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "14356:4:383",
                  "nodeType": "VariableDeclaration",
                  "scope": 99609,
                  "src": "14348:12:383",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 99586,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14348:7:383",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14333:28:383"
            },
            "returnParameters": {
              "id": 99591,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99590,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 99609,
                  "src": "14385:4:383",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 99589,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "14385:4:383",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14384:6:383"
            },
            "scope": 99646,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 99619,
            "nodeType": "FunctionDefinition",
            "src": "14520:111:383",
            "nodes": [],
            "body": {
              "id": 99618,
              "nodeType": "Block",
              "src": "14595:36:383",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 99615,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        99632
                      ],
                      "referencedDeclaration": 99632,
                      "src": "14612:10:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 99616,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14612:12:383",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 99614,
                  "id": 99617,
                  "nodeType": "Return",
                  "src": "14605:19:383"
                }
              ]
            },
            "baseFunctions": [
              39660
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_dropMsgSender",
            "nameLocation": "14529:14:383",
            "overrides": {
              "id": 99611,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "14568:8:383"
            },
            "parameters": {
              "id": 99610,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14543:2:383"
            },
            "returnParameters": {
              "id": 99614,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99613,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 99619,
                  "src": "14586:7:383",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 99612,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14586:7:383",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14585:9:383"
            },
            "scope": 99646,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 99632,
            "nodeType": "FunctionDefinition",
            "src": "14637:169:383",
            "nodes": [],
            "body": {
              "id": 99631,
              "nodeType": "Block",
              "src": "14744:62:383",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 99627,
                        "name": "ERC2771ContextUpgradeable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40089,
                        "src": "14761:25:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC2771ContextUpgradeable_$40089_$",
                          "typeString": "type(contract ERC2771ContextUpgradeable)"
                        }
                      },
                      "id": 99628,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_msgSender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40045,
                      "src": "14761:36:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 99629,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14761:38:383",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 99626,
                  "id": 99630,
                  "nodeType": "Return",
                  "src": "14754:45:383"
                }
              ]
            },
            "baseFunctions": [
              40045,
              48473
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgSender",
            "nameLocation": "14646:10:383",
            "overrides": {
              "id": 99623,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 99621,
                  "name": "Context",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 48483,
                  "src": "14690:7:383"
                },
                {
                  "id": 99622,
                  "name": "ERC2771ContextUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40089,
                  "src": "14699:25:383"
                }
              ],
              "src": "14681:44:383"
            },
            "parameters": {
              "id": 99620,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14656:2:383"
            },
            "returnParameters": {
              "id": 99626,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99625,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 99632,
                  "src": "14735:7:383",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 99624,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14735:7:383",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14734:9:383"
            },
            "scope": 99646,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 99645,
            "nodeType": "FunctionDefinition",
            "src": "14812:172:383",
            "nodes": [],
            "body": {
              "id": 99644,
              "nodeType": "Block",
              "src": "14924:60:383",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 99640,
                        "name": "ERC2771ContextUpgradeable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40089,
                        "src": "14941:25:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC2771ContextUpgradeable_$40089_$",
                          "typeString": "type(contract ERC2771ContextUpgradeable)"
                        }
                      },
                      "id": 99641,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_msgData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40070,
                      "src": "14941:34:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_calldata_ptr_$",
                        "typeString": "function () view returns (bytes calldata)"
                      }
                    },
                    "id": 99642,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14941:36:383",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_calldata_ptr",
                      "typeString": "bytes calldata"
                    }
                  },
                  "functionReturnParameters": 99639,
                  "id": 99643,
                  "nodeType": "Return",
                  "src": "14934:43:383"
                }
              ]
            },
            "baseFunctions": [
              40070,
              48482
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgData",
            "nameLocation": "14821:8:383",
            "overrides": {
              "id": 99636,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 99634,
                  "name": "Context",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 48483,
                  "src": "14863:7:383"
                },
                {
                  "id": 99635,
                  "name": "ERC2771ContextUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40089,
                  "src": "14872:25:383"
                }
              ],
              "src": "14854:44:383"
            },
            "parameters": {
              "id": 99633,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14829:2:383"
            },
            "returnParameters": {
              "id": 99639,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99638,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 99645,
                  "src": "14908:14:383",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 99637,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "14908:5:383",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14907:16:383"
            },
            "scope": 99646,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 98788,
              "name": "ContractMetadata",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 38777,
              "src": "2128:16:383"
            },
            "id": 98789,
            "nodeType": "InheritanceSpecifier",
            "src": "2128:16:383"
          },
          {
            "baseName": {
              "id": 98790,
              "name": "PlatformFee",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 41778,
              "src": "2150:11:383"
            },
            "id": 98791,
            "nodeType": "InheritanceSpecifier",
            "src": "2150:11:383"
          },
          {
            "baseName": {
              "id": 98792,
              "name": "Royalty",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 42274,
              "src": "2167:7:383"
            },
            "id": 98793,
            "nodeType": "InheritanceSpecifier",
            "src": "2167:7:383"
          },
          {
            "baseName": {
              "id": 98794,
              "name": "PrimarySale",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 41908,
              "src": "2180:11:383"
            },
            "id": 98795,
            "nodeType": "InheritanceSpecifier",
            "src": "2180:11:383"
          },
          {
            "baseName": {
              "id": 98796,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 40832,
              "src": "2197:7:383"
            },
            "id": 98797,
            "nodeType": "InheritanceSpecifier",
            "src": "2197:7:383"
          },
          {
            "baseName": {
              "id": 98798,
              "name": "BurnToClaim",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 38672,
              "src": "2210:11:383"
            },
            "id": 98799,
            "nodeType": "InheritanceSpecifier",
            "src": "2210:11:383"
          },
          {
            "baseName": {
              "id": 98800,
              "name": "DelayedReveal",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 38989,
              "src": "2227:13:383"
            },
            "id": 98801,
            "nodeType": "InheritanceSpecifier",
            "src": "2227:13:383"
          },
          {
            "baseName": {
              "id": 98802,
              "name": "LazyMint",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 40446,
              "src": "2246:8:383"
            },
            "id": 98803,
            "nodeType": "InheritanceSpecifier",
            "src": "2246:8:383"
          },
          {
            "baseName": {
              "id": 98804,
              "name": "Drop",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 39739,
              "src": "2260:4:383"
            },
            "id": 98805,
            "nodeType": "InheritanceSpecifier",
            "src": "2260:4:383"
          },
          {
            "baseName": {
              "id": 98806,
              "name": "ERC2771ContextUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 40089,
              "src": "2270:25:383"
            },
            "id": 98807,
            "nodeType": "InheritanceSpecifier",
            "src": "2270:25:383"
          },
          {
            "baseName": {
              "id": 98808,
              "name": "ERC721AUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 10851,
              "src": "2301:18:383"
            },
            "id": 98809,
            "nodeType": "InheritanceSpecifier",
            "src": "2301:18:383"
          }
        ],
        "canonicalName": "BurnToClaimDrop721Logic",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          99646,
          10851,
          14176,
          14222,
          14105,
          7823,
          40089,
          39739,
          32573,
          32308,
          32285,
          40446,
          38435,
          32812,
          38989,
          32468,
          38672,
          32210,
          40832,
          33183,
          41908,
          33345,
          42274,
          33409,
          13973,
          13829,
          48483,
          40322,
          41778,
          33324,
          38777,
          32437
        ],
        "name": "BurnToClaimDrop721Logic",
        "nameLocation": "2097:23:383",
        "scope": 99647,
        "usedErrors": [
          14117,
          14120,
          14123,
          14126,
          14129,
          14132,
          14135,
          14138,
          14141,
          14144,
          14147,
          14150,
          14153
        ]
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 383
}