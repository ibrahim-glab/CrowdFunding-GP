{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nativeTokenWrapper",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "prevURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "newURI",
          "type": "string"
        }
      ],
      "name": "ContractURIUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "RewardTokensDepositedByAdmin",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "RewardTokensWithdrawnByAdmin",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rewardAmount",
          "type": "uint256"
        }
      ],
      "name": "RewardsClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokensStaked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokensWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newAmount",
          "type": "uint256"
        }
      ],
      "name": "UpdatedMinStakeAmount",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldNumerator",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newNumerator",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldDenominator",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newDenominator",
          "type": "uint256"
        }
      ],
      "name": "UpdatedRewardRatio",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldTimeUnit",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newTimeUnit",
          "type": "uint256"
        }
      ],
      "name": "UpdatedTimeUnit",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractType",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractVersion",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "depositRewardTokens",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRewardRatio",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_numerator",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_denominator",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRewardTokenBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRoleMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "member",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "count",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_staker",
          "type": "address"
        }
      ],
      "name": "getStakeInfo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_tokensStaked",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_rewards",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTimeUnit",
      "outputs": [
        {
          "internalType": "uint80",
          "name": "_timeUnit",
          "type": "uint80"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRoleWithSwitch",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_defaultAdmin",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_contractURI",
          "type": "string"
        },
        {
          "internalType": "address[]",
          "name": "_trustedForwarders",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "_rewardToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_stakingToken",
          "type": "address"
        },
        {
          "internalType": "uint80",
          "name": "_timeUnit",
          "type": "uint80"
        },
        {
          "internalType": "uint256",
          "name": "_rewardRatioNumerator",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_rewardRatioDenominator",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "forwarder",
          "type": "address"
        }
      ],
      "name": "isTrustedForwarder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "multicall",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "results",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardTokenDecimals",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "setContractURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_numerator",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_denominator",
          "type": "uint256"
        }
      ],
      "name": "setRewardRatio",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint80",
          "name": "_timeUnit",
          "type": "uint80"
        }
      ],
      "name": "setTimeUnit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "stake",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "stakers",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "timeOfLastUpdate",
          "type": "uint128"
        },
        {
          "internalType": "uint64",
          "name": "conditionIdOflastUpdate",
          "type": "uint64"
        },
        {
          "internalType": "uint256",
          "name": "amountStaked",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "unclaimedRewards",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "stakersArray",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakingToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakingTokenBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakingTokenDecimals",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawRewardTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x60a06040523480156200001157600080fd5b5060405162003fbe38038062003fbe8339810160408190526200003491620001c1565b806001600160a01b0381166200007d5760405162461bcd60e51b815260206004820152600960248201526806164647265737320360bc1b60448201526064015b60405180910390fd5b6001600160a01b0316608052600054610100900460ff1615808015620000aa5750600054600160ff909116105b80620000da5750620000c730620001b260201b620017c51760201c565b158015620000da575060005460ff166001145b6200013f5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840162000074565b6000805460ff19166001179055801562000163576000805461ff0019166101001790555b8015620001aa576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050620001f3565b6001600160a01b03163b151590565b600060208284031215620001d457600080fd5b81516001600160a01b0381168114620001ec57600080fd5b9392505050565b608051613d7e62000240600039600081816101ac015281816108fe015281816109ae01528181611249015281816112a901528181611dc90152818161223401526130140152613d7e6000f3fe60806040526004361061019c5760003560e01c80639bdcecd1116100dd5780639bdcecd1146104c8578063a0a8e460146104fd578063a217fddf14610519578063a32fa5b31461052e578063a694fc3a1461054e578063ac9650d814610561578063b218f0691461058e578063b9f7a7b5146105ae578063c3453153146105d0578063ca15c873146105f0578063cb2ef6f714610610578063cb43b2dd14610630578063d547741f14610650578063d68124c714610670578063df6543761461069d578063e8a3d485146106bd578063f7c618c1146106df57600080fd5b80621b79341461022557806316c621e014610245578063248a9ca3146102585780632e1a7d4d146102985780632f2ff15d146102b857806336568abe146102d8578063372500ab146102f85780635357e9161461030d578063572b6c051461033a57806372f702f31461036a5780638caaa2711461038a5780639010d07c146103a05780639168ae72146103c057806391d1485414610449578063938e3d7b1461046957806393ce53431461048957806397e1b4bc1461049e57600080fd5b3661022057336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461021e5760405162461bcd60e51b815260206004820181905260248201527f63616c6c6572206e6f74206e617469766520746f6b656e20777261707065722e60448201526064015b60405180910390fd5b005b600080fd5b34801561023157600080fd5b5061021e61024036600461347d565b6106ff565b61021e61025336600461349f565b610871565b34801561026457600080fd5b5061028561027336600461349f565b60009081526003602052604090205490565b6040519081526020015b60405180910390f35b3480156102a457600080fd5b5061021e6102b336600461349f565b610aa3565b3480156102c457600080fd5b5061021e6102d33660046134cf565b610adc565b3480156102e457600080fd5b5061021e6102f33660046134cf565b610b76565b34801561030457600080fd5b5061021e610bd5565b34801561031957600080fd5b5061032d61032836600461349f565b610c0c565b60405161028f91906134fb565b34801561034657600080fd5b5061035a61035536600461350f565b610c36565b604051901515815260200161028f565b34801561037657600080fd5b5060cd5461032d906001600160a01b031681565b34801561039657600080fd5b5061028560ce5481565b3480156103ac57600080fd5b5061032d6103bb36600461347d565b610c54565b3480156103cc57600080fd5b506104176103db36600461350f565b60d0602052600090815260409020805460018201546002909201546001600160801b03821692600160801b9092046001600160401b0316919084565b604080516001600160801b0390951685526001600160401b03909316602085015291830152606082015260800161028f565b34801561045557600080fd5b5061035a6104643660046134cf565b610d44565b34801561047557600080fd5b5061021e6104843660046135df565b610d6f565b34801561049557600080fd5b5060d354610285565b3480156104aa57600080fd5b506104b3610d9f565b6040805192835260208301919091520161028f565b3480156104d457600080fd5b5060cd546104ea90600160b01b900461ffff1681565b60405161ffff909116815260200161028f565b34801561050957600080fd5b506040516001815260200161028f565b34801561052557600080fd5b50610285600081565b34801561053a57600080fd5b5061035a6105493660046134cf565b610e2c565b61021e61055c36600461349f565b610e82565b34801561056d57600080fd5b5061058161057c366004613613565b610eb3565b60405161028f91906136df565b34801561059a57600080fd5b5061021e6105a9366004613758565b610fa7565b3480156105ba57600080fd5b5060cd546104ea90600160a01b900461ffff1681565b3480156105dc57600080fd5b506104b36105eb36600461350f565b611104565b3480156105fc57600080fd5b5061028561060b36600461349f565b611131565b34801561061c57600080fd5b5069546f6b656e5374616b6560b01b610285565b34801561063c57600080fd5b5061021e61064b36600461349f565b6111ba565b34801561065c57600080fd5b5061021e61066b3660046134cf565b6113c5565b34801561067c57600080fd5b506106856113de565b6040516001600160501b03909116815260200161028f565b3480156106a957600080fd5b5061021e6106b8366004613773565b61142e565b3480156106c957600080fd5b506106d2611737565b60405161028f919061389c565b3480156106eb57600080fd5b5060d25461032d906001600160a01b031681565b6107076117d4565b6107235760405162461bcd60e51b8152600401610215906138af565b600060d16000600160cd60189054906101000a90046001600160401b031661074b91906138ed565b6001600160401b031681526020808201929092526040908101600020815160a08101835281546001600160501b038082168352600160501b8204811695830195909552600160a01b9004909316918301919091526001810154606083018190526002909101546080830152909150831415806107cb575080608001518214155b6108115760405162461bcd60e51b81526020600482015260176024820152762932bbb0b932103930ba34b7903ab731b430b733b2b21760491b6044820152606401610215565b805161081e9084846117e7565b60608082015160808084015160408051938452602084018890528301529181018490527feb6684a1e7c9bd2adc792fb253558f022bcbef39fb6ad31dc58cdfefdd5b5190910160405180910390a1505050565b6002609b5414156108945760405162461bcd60e51b815260040161021590613915565b6002609b556108a6600061046461199f565b6108c25760405162461bcd60e51b8152600401610215906138af565b60d2546000906001600160a01b031673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee146108fc5760d2546001600160a01b031661091e565b7f00000000000000000000000000000000000000000000000000000000000000005b90506000816001600160a01b03166370a08231306040518263ffffffff1660e01b815260040161094e91906134fb565b602060405180830381865afa15801561096b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098f919061394c565b60d2549091506109d2906001600160a01b03166109aa61199f565b30867f00000000000000000000000000000000000000000000000000000000000000006119a9565b600081836001600160a01b03166370a08231306040518263ffffffff1660e01b8152600401610a0191906134fb565b602060405180830381865afa158015610a1e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a42919061394c565b610a4c9190613965565b90508060d36000828254610a60919061397c565b90915550506040518181527ff9d14e57815939d300bc94720ede00c8c8e08d254ab28e2917ea46e149aa119b9060200160405180910390a150506001609b555050565b6002609b541415610ac65760405162461bcd60e51b815260040161021590613915565b6002609b55610ad481611b20565b506001609b55565b600082815260036020526040902054610af59033611e3b565b60008281526002602090815260408083206001600160a01b038516845290915290205460ff1615610b685760405162461bcd60e51b815260206004820152601d60248201527f43616e206f6e6c79206772616e7420746f206e6f6e20686f6c646572730000006044820152606401610215565b610b728282611ebb565b5050565b336001600160a01b03821614610bcb5760405162461bcd60e51b815260206004820152601a60248201527921b0b71037b7363c903932b737bab731b2903337b91039b2b63360311b6044820152606401610215565b610b728282611ecf565b6002609b541415610bf85760405162461bcd60e51b815260040161021590613915565b6002609b55610c05611f26565b6001609b55565b60cf8181548110610c1c57600080fd5b6000918252602090912001546001600160a01b0316905081565b6001600160a01b031660009081526037602052604090205460ff1690565b60008281526004602052604081205481805b82811015610d3a5760008681526004602090815260408083208484526001019091529020546001600160a01b031615610ce35784821415610cd15760008681526004602090815260408083209383526001909301905220546001600160a01b03169250610d3e915050565b610cdc60018361397c565b9150610d28565b610cee866000610d44565b8015610d155750600086815260046020908152604080832083805260020190915290205481145b15610d2857610d2560018361397c565b91505b610d3360018261397c565b9050610c66565b5050505b92915050565b60009182526002602090815260408084206001600160a01b0393909316845291905290205460ff1690565b610d776117d4565b610d935760405162461bcd60e51b8152600401610215906138af565b610d9c816120f1565b50565b60008060d16000600160cd60189054906101000a90046001600160401b0316610dc891906138ed565b6001600160401b0316815260200190815260200160002060010154915060d16000600160cd60189054906101000a90046001600160401b0316610e0b91906138ed565b6001600160401b031681526020019081526020016000206002015490509091565b600082815260026020908152604080832083805290915281205460ff16610e79575060008281526002602090815260408083206001600160a01b038516845290915290205460ff16610d3e565b50600192915050565b6002609b541415610ea55760405162461bcd60e51b815260040161021590613915565b6002609b55610ad4816121c7565b6060816001600160401b03811115610ecd57610ecd61352a565b604051908082528060200260200182016040528015610f0057816020015b6060815260200190600190039081610eeb5790505b50905060005b82811015610fa057610f7030858584818110610f2457610f24613994565b9050602002810190610f3691906139aa565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061259492505050565b828281518110610f8257610f82613994565b60200260200101819052508080610f98906139f0565b915050610f06565b5092915050565b610faf6117d4565b610fcb5760405162461bcd60e51b8152600401610215906138af565b600060d16000600160cd60189054906101000a90046001600160401b0316610ff391906138ed565b6001600160401b031681526020808201929092526040908101600020815160a08101835281546001600160501b03808216808452600160501b8304821696840196909652600160a01b9091048116938201939093526001820154606082015260029091015460808201529250831614156110a65760405162461bcd60e51b81526020600482015260146024820152732a34b6b296bab734ba103ab731b430b733b2b21760611b6044820152606401610215565b6110b982826060015183608001516117e7565b8051604080516001600160501b03928316815291841660208301527fd968de290ed68f978b9e4816f7d4be9ef46189fe8eeb3eeb86199e7229cf2de091015b60405180910390a15050565b6001600160a01b038116600090815260d060205260408120600101549061112a83612686565b9050915091565b600081815260046020526040812054815b818110156111955760008481526004602090815260408083208484526001019091529020546001600160a01b0316156111835761118060018461397c565b92505b61118e60018261397c565b9050611142565b506111a1836000610d44565b156111b4576111b160018361397c565b91505b50919050565b6002609b5414156111dd5760405162461bcd60e51b815260040161021590613915565b6002609b556111ef600061046461199f565b61120b5760405162461bcd60e51b8152600401610215906138af565b60d3548111611227578060d3546112229190613965565b61122a565b60005b60d35560d25461126d906001600160a01b03163061124661199f565b847f00000000000000000000000000000000000000000000000000000000000000006119a9565b60cd546000906001600160a01b031673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee146112a75760cd546001600160a01b03166112c9565b7f00000000000000000000000000000000000000000000000000000000000000005b905060ce54816001600160a01b03166370a08231306040518263ffffffff1660e01b81526004016112fa91906134fb565b602060405180830381865afa158015611317573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061133b919061394c565b10156113895760405162461bcd60e51b815260206004820152601e60248201527f5374616b696e6720746f6b656e2062616c616e636520726564756365642e00006044820152606401610215565b6040518281527f37ff8766c704931c4283e470feb7c20ddcd8aa492746f74b30503709a0452acd9060200160405180910390a150506001609b55565b600082815260036020526040902054610bcb9033611e3b565b600060d16000600160cd60189054906101000a90046001600160401b031661140691906138ed565b6001600160401b031681526020810191909152604001600020546001600160501b0316919050565b600054610100900460ff161580801561144e5750600054600160ff909116105b8061146f575061145d306117c5565b15801561146f575060005460ff166001145b6114d25760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610215565b6000805460ff1916600117905580156114f5576000805461ff0019166101001790555b6114fe876126fc565b846001600160a01b0316866001600160a01b031614156115765760405162461bcd60e51b815260206004820152602d60248201527f52657761726420546f6b656e20616e64205374616b696e6720546f6b656e206360448201526c30b713ba1031329039b0b6b29760991b6064820152608401610215565b60d280546001600160a01b0319166001600160a01b038881169190911790915560009073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee9087161461161d57856001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156115f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116189190613a0b565b611620565b60125b60ff16905060006001600160a01b03881673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee146116b257876001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015611689573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116ad9190613a0b565b6116b5565b60125b60ff1690506116c587838361278b565b6116d08686866117e7565b6116d98a6120f1565b6116e460008c611ebb565b5050801561172c576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050505050565b6001805461174490613a2e565b80601f016020809104026020016040519081016040528092919081815260200182805461177090613a2e565b80156117bd5780601f10611792576101008083540402835291602001916117bd565b820191906000526020600020905b8154815290600101906020018083116117a057829003601f168201915b505050505081565b6001600160a01b03163b151590565b60006117e28161046461199f565b905090565b806118225760405162461bcd60e51b815260206004820152600b60248201526a064697669646520627920360ac1b6044820152606401610215565b6001600160501b03831661186f5760405162461bcd60e51b8152602060048201526014602482015273074696d652d756e69742063616e277420626520360641b6044820152606401610215565b60cd8054600160c01b90046001600160401b03169060019060186118938385613a63565b82546001600160401b039182166101009390930a9283029190920219909116179055506040805160a0810182526001600160501b03808716825242811660208084019182526000848601818152606086018a8152608087018a815289845260d19094529690912094518554935191518516600160a01b02600160a01b600160f01b0319928616600160501b026001600160a01b0319909516919095161792909217919091169190911782559151600182015590516002909101558015611999574260d16000611963600185613965565b815260200190815260200160002060000160146101000a8154816001600160501b0302191690836001600160501b031602179055505b50505050565b60006117e2612895565b816119b357611b19565b6001600160a01b03851673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1415611b0d576001600160a01b038416301415611a5357604051632e1a7d4d60e01b8152600481018390526001600160a01b03821690632e1a7d4d90602401600060405180830381600087803b158015611a2b57600080fd5b505af1158015611a3f573d6000803e3d6000fd5b50505050611a4e8383836128b7565b611b19565b6001600160a01b038316301415611b0257348214611aa95760405162461bcd60e51b81526020600482015260136024820152721b5cd9cb9d985b1d5948084f48185b5bdd5b9d606a1b6044820152606401610215565b806001600160a01b031663d0e30db0836040518263ffffffff1660e01b81526004016000604051808303818588803b158015611ae457600080fd5b505af1158015611af8573d6000803e3d6000fd5b5050505050611b19565b611a4e8383836128b7565b611b198585858561297c565b5050505050565b600060d06000611b2e6129da565b6001600160a01b03168152602081019190915260400160002060010154905081611b915760405162461bcd60e51b81526020600482015260146024820152735769746864726177696e67203020746f6b656e7360601b6044820152606401610215565b81811015611be05760405162461bcd60e51b815260206004820152601c60248201527b15da5d1a191c985dda5b99c81b5bdc99481d1a185b881cdd185ad95960221b6044820152606401610215565b611bf0611beb6129da565b6129e4565b81811415611d5057600060cf805480602002602001604051908101604052809291908181526020018280548015611c5057602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611c32575b5050505050905060005b8151811015611d4d57611c6b6129da565b6001600160a01b0316828281518110611c8657611c86613994565b60200260200101516001600160a01b03161415611d3d578160018351611cac9190613965565b81518110611cbc57611cbc613994565b602002602001015160cf8281548110611cd757611cd7613994565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060cf805480611d1657611d16613a8e565b600082815260209020810160001990810180546001600160a01b0319169055019055611d4d565b611d46816139f0565b9050611c5a565b50505b8160d06000611d5d6129da565b6001600160a01b03166001600160a01b031681526020019081526020016000206001016000828254611d8f9190613965565b925050819055508160ce6000828254611da89190613965565b909155505060cd54611ded906001600160a01b031630611dc66129da565b857f00000000000000000000000000000000000000000000000000000000000000006119a9565b611df56129da565b6001600160a01b03167f6352c5382c4a4578e712449ca65e83cdb392d045dfcf1cad9615189db2da244b83604051611e2f91815260200190565b60405180910390a25050565b60008281526002602090815260408083206001600160a01b038516845290915290205460ff16610b7257611e79816001600160a01b03166014612abb565b611e84836020612abb565b604051602001611e95929190613aa4565b60408051601f198184030181529082905262461bcd60e51b82526102159160040161389c565b611ec58282612c5d565b610b728282612cb8565b611ed98282612d25565b60008281526004602090815260408083206001600160a01b03851680855260028201808552838620805487526001909301855292852080546001600160a01b031916905584529152555050565b6000611f38611f336129da565b612d87565b60d06000611f446129da565b6001600160a01b03166001600160a01b0316815260200190815260200160002060020154611f72919061397c565b905080611fae5760405162461bcd60e51b815260206004820152600a6024820152694e6f207265776172647360b01b6044820152606401610215565b426001600160501b031660d06000611fc46129da565b6001600160a01b031681526020810191909152604001600090812080546001600160801b0319166001600160801b03939093169290921790915560d0816120096129da565b6001600160a01b0316815260208101919091526040016000206002015560cd5461204590600190600160c01b90046001600160401b03166138ed565b60d060006120516129da565b6001600160a01b03168152602081019190915260400160002080546001600160401b0392909216600160801b02600160801b600160c01b03199092169190911790556120a461209e6129da565b82612f9b565b6120ac6129da565b6001600160a01b03167ffc30cddea38e2bf4d6ea7d3f9ed3b6ad7f176419f4963bd81318067a4aee73fe826040516120e691815260200190565b60405180910390a250565b60006001805461210090613a2e565b80601f016020809104026020016040519081016040528092919081815260200182805461212c90613a2e565b80156121795780601f1061214e57610100808354040283529160200191612179565b820191906000526020600020905b81548152906001019060200180831161215c57829003601f168201915b50508551939450612195936001935060208701925090506133e4565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a1681836040516110f8929190613b11565b806122075760405162461bcd60e51b815260206004820152601060248201526f5374616b696e67203020746f6b656e7360801b6044820152606401610215565b60cd546000906001600160a01b031673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee141561225857507f00000000000000000000000000000000000000000000000000000000000000006122a2565b34156122945760405162461bcd60e51b815260206004820152600b60248201526a056616c7565206e6f7420360ac1b6044820152606401610215565b5060cd546001600160a01b03165b600060d060006122b06129da565b6001600160a01b03166001600160a01b031681526020019081526020016000206001015411156122ea576122e5611beb6129da565b6123df565b60cf6122f46129da565b81546001810183556000928352602083200180546001600160a01b0319166001600160a01b0392909216919091179055426001600160501b03169060d09061233a6129da565b6001600160a01b03168152602081019190915260400160002080546001600160801b0319166001600160801b039290921691909117905560cd5461239090600190600160c01b90046001600160401b03166138ed565b60d0600061239c6129da565b6001600160a01b03168152602081019190915260400160002080546001600160401b0392909216600160801b02600160801b600160c01b03199092169190911790555b6040516370a0823160e01b81526000906001600160a01b038316906370a082319061240e9030906004016134fb565b602060405180830381865afa15801561242b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061244f919061394c565b60cd5490915061246a906001600160a01b03166109aa6129da565b600081836001600160a01b03166370a08231306040518263ffffffff1660e01b815260040161249991906134fb565b602060405180830381865afa1580156124b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124da919061394c565b6124e49190613965565b90508060d060006124f36129da565b6001600160a01b03166001600160a01b031681526020019081526020016000206001016000828254612525919061397c565b925050819055508060ce600082825461253e919061397c565b9091555061254c90506129da565b6001600160a01b03167fb539ca1e5c8d398ddf1c41c30166f33404941683be4683319b57669a93dad4ef8260405161258691815260200190565b60405180910390a250505050565b606061259f836117c5565b6125fa5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610215565b600080846001600160a01b0316846040516126159190613b36565b600060405180830381855af49150503d8060008114612650576040519150601f19603f3d011682016040523d82523d6000602084013e612655565b606091505b509150915061267d8282604051806060016040528060278152602001613d2260279139613038565b95945050505050565b6001600160a01b038116600090815260d060205260408120600101546126c557506001600160a01b0316600090815260d0602052604090206002015490565b6126ce82612d87565b6001600160a01b038316600090815260d060205260409020600201546126f4919061397c565b90505b919050565b600054610100900460ff166127235760405162461bcd60e51b815260040161021590613b52565b60005b8151811015610b725760016037600084848151811061274757612747613994565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff191691151591909117905580612783816139f0565b915050612726565b600054610100900460ff166127b25760405162461bcd60e51b815260040161021590613b52565b6127ba613071565b6001600160a01b0383166128025760405162461bcd60e51b815260206004820152600f60248201526e0746f6b656e2061646472657373203608c1b6044820152606401610215565b61ffff821615801590612818575061ffff811615155b6128515760405162461bcd60e51b815260206004820152600a6024820152690646563696d616c7320360b41b6044820152606401610215565b60cd80546001600160a01b03949094166001600160b01b031990941693909317600160a01b61ffff938416021761ffff60b01b1916600160b01b9190921602179055565b60006128a033610c36565b156128b2575060131936013560601c90565b503390565b6000836001600160a01b03168360405160006040518083038185875af1925050503d8060008114612904576040519150601f19603f3d011682016040523d82523d6000602084013e612909565b606091505b505090508061199957816001600160a01b031663d0e30db0846040518263ffffffff1660e01b81526004016000604051808303818588803b15801561294d57600080fd5b505af1158015612961573d6000803e3d6000fd5b50611999935050506001600160a01b038416905085856130a2565b816001600160a01b0316836001600160a01b0316141561299b57611999565b6001600160a01b0383163014156129c5576129c06001600160a01b03851683836130a2565b611999565b6119996001600160a01b03851684848461310a565b60006117e261199f565b60006129ef82612d87565b6001600160a01b038316600090815260d06020526040812060020180549293508392909190612a1f90849061397c565b90915550506001600160a01b038216600090815260d06020526040902080546001600160801b0319166001600160501b03421617905560cd54612a75906001906001600160401b03600160c01b909104166138ed565b6001600160a01b03909216600090815260d06020526040902080546001600160401b0393909316600160801b02600160801b600160c01b03199093169290921790915550565b60606000612aca836002613b9d565b612ad590600261397c565b6001600160401b03811115612aec57612aec61352a565b6040519080825280601f01601f191660200182016040528015612b16576020820181803683370190505b509050600360fc1b81600081518110612b3157612b31613994565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110612b6057612b60613994565b60200101906001600160f81b031916908160001a9053506000612b84846002613b9d565b612b8f90600161397c565b90505b6001811115612c07576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110612bc357612bc3613994565b1a60f81b828281518110612bd957612bd9613994565b60200101906001600160f81b031916908160001a90535060049490941c93612c0081613bbc565b9050612b92565b508315612c565760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610215565b9392505050565b60008281526002602090815260408083206001600160a01b0385168085529252808320805460ff1916600117905551339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b600082815260046020526040812080549160019190612cd7838561397c565b9091555050600092835260046020908152604080852083865260018101835281862080546001600160a01b039096166001600160a01b03199096168617905593855260029093019052912055565b612d2f8282611e3b565b60008281526002602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6001600160a01b038116600090815260d060209081526040808320815160808101835281546001600160801b03811682526001600160401b03600160801b9091048116948201859052600183015493820193909352600290910154606082015260cd54909291600160c01b90910416815b81811015612f4f57600081815260d160209081526040808320815160a08101835281546001600160501b038082168352600160501b8204811695830195909552600160a01b900490931691830191909152600181015460608301526002015460808201529084831415612e6c578551612e7b565b81602001516001600160501b03165b6001600160801b03169050600082604001516001600160501b031660001415612ea45742612eb3565b82604001516001600160501b03165b9050600080612ee089604001518585612ecc9190613965565b612ed69190613b9d565b8660600151613142565b91509150600080612f188c886080015189600001516001600160501b031686612f099190613be9565b612f139190613be9565b61318a565b91509150838015612f265750815b612f30578b612f32565b805b9b5050505050505050600181612f48919061397c565b9050612df8565b5060cd54612f74908590612f6f90600160b01b900461ffff16600a613cef565b613142565b60cd54909550612f919150600160a01b900461ffff16600a613cef565b61267d9085613be9565b60d354811115612fe85760405162461bcd60e51b81526020600482015260186024820152774e6f7420656e6f7567682072657761726420746f6b656e7360401b6044820152606401610215565b8060d36000828254612ffa9190613965565b909155505060d254610b72906001600160a01b03163084847f00000000000000000000000000000000000000000000000000000000000000006119a9565b60608315613047575081612c56565b8251156130575782518084602001fd5b8160405162461bcd60e51b8152600401610215919061389c565b600054610100900460ff166130985760405162461bcd60e51b815260040161021590613b52565b6130a06131a5565b565b6040516001600160a01b03831660248201526044810182905261310590849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526131cc565b505050565b6040516001600160a01b03808516602483015283166044820152606481018290526119999085906323b872dd60e01b906084016130ce565b600080836131565750600190506000613183565b8383028385828161316957613169613bd3565b041461317c576000809250925050613183565b6001925090505b9250929050565b6000808383018481101561317c576000809250925050613183565b600054610100900460ff16610c055760405162461bcd60e51b815260040161021590613b52565b6000613221826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661329e9092919063ffffffff16565b805190915015613105578080602001905181019061323f9190613cff565b6131055760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610215565b60606132ad84846000856132b5565b949350505050565b6060824710156133165760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610215565b61331f856117c5565b61336b5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610215565b600080866001600160a01b031685876040516133879190613b36565b60006040518083038185875af1925050503d80600081146133c4576040519150601f19603f3d011682016040523d82523d6000602084013e6133c9565b606091505b50915091506133d9828286613038565b979650505050505050565b8280546133f090613a2e565b90600052602060002090601f0160209004810192826134125760008555613458565b82601f1061342b57805160ff1916838001178555613458565b82800160010185558215613458579182015b8281111561345857825182559160200191906001019061343d565b50613464929150613468565b5090565b5b808211156134645760008155600101613469565b6000806040838503121561349057600080fd5b50508035926020909101359150565b6000602082840312156134b157600080fd5b5035919050565b80356001600160a01b03811681146126f757600080fd5b600080604083850312156134e257600080fd5b823591506134f2602084016134b8565b90509250929050565b6001600160a01b0391909116815260200190565b60006020828403121561352157600080fd5b612c56826134b8565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b03811182821017156135685761356861352a565b604052919050565b600082601f83011261358157600080fd5b81356001600160401b0381111561359a5761359a61352a565b6135ad601f8201601f1916602001613540565b8181528460208386010111156135c257600080fd5b816020850160208301376000918101602001919091529392505050565b6000602082840312156135f157600080fd5b81356001600160401b0381111561360757600080fd5b6132ad84828501613570565b6000806020838503121561362657600080fd5b82356001600160401b038082111561363d57600080fd5b818501915085601f83011261365157600080fd5b81358181111561366057600080fd5b8660208260051b850101111561367557600080fd5b60209290920196919550909350505050565b60005b838110156136a257818101518382015260200161368a565b838111156119995750506000910152565b600081518084526136cb816020860160208601613687565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561373457603f198886030184526137228583516136b3565b94509285019290850190600101613706565b5092979650505050505050565b80356001600160501b03811681146126f757600080fd5b60006020828403121561376a57600080fd5b612c5682613741565b600080600080600080600080610100898b03121561379057600080fd5b613799896134b8565b97506020808a01356001600160401b03808211156137b657600080fd5b6137c28d838e01613570565b995060408c01359150808211156137d857600080fd5b818c0191508c601f8301126137ec57600080fd5b8135818111156137fe576137fe61352a565b8060051b915061380f848301613540565b818152918301840191848101908f84111561382957600080fd5b938501935b8385101561384e5761383f856134b8565b8252938501939085019061382e565b809b5050505050505061386360608a016134b8565b945061387160808a016134b8565b935061387f60a08a01613741565b925060c0890135915060e089013590509295985092959890939650565b602081526000612c5660208301846136b3565b6020808252600e908201526d139bdd08185d5d1a1bdc9a5e995960921b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b60006001600160401b038381169083168181101561390d5761390d6138d7565b039392505050565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b60006020828403121561395e57600080fd5b5051919050565b600082821015613977576139776138d7565b500390565b6000821982111561398f5761398f6138d7565b500190565b634e487b7160e01b600052603260045260246000fd5b6000808335601e198436030181126139c157600080fd5b8301803591506001600160401b038211156139db57600080fd5b60200191503681900382131561318357600080fd5b6000600019821415613a0457613a046138d7565b5060010190565b600060208284031215613a1d57600080fd5b815160ff81168114612c5657600080fd5b600181811c90821680613a4257607f821691505b602082108114156111b457634e487b7160e01b600052602260045260246000fd5b60006001600160401b03808316818516808303821115613a8557613a856138d7565b01949350505050565b634e487b7160e01b600052603160045260246000fd5b7402832b936b4b9b9b4b7b7399d1030b1b1b7bab73a1605d1b815260008351613ad4816015850160208801613687565b7001034b99036b4b9b9b4b733903937b6329607d1b6015918401918201528351613b05816026840160208801613687565b01602601949350505050565b604081526000613b2460408301856136b3565b828103602084015261267d81856136b3565b60008251613b48818460208701613687565b9190910192915050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6000816000190483118215151615613bb757613bb76138d7565b500290565b600081613bcb57613bcb6138d7565b506000190190565b634e487b7160e01b600052601260045260246000fd5b600082613c0657634e487b7160e01b600052601260045260246000fd5b500490565b600181815b80851115613c46578160001904821115613c2c57613c2c6138d7565b80851615613c3957918102915b93841c9390800290613c10565b509250929050565b600082613c5d57506001610d3e565b81613c6a57506000610d3e565b8160018114613c805760028114613c8a57613ca6565b6001915050610d3e565b60ff841115613c9b57613c9b6138d7565b50506001821b610d3e565b5060208310610133831016604e8410600b8410161715613cc9575081810a610d3e565b613cd38383613c0b565b8060001904821115613ce757613ce76138d7565b029392505050565b6000612c5661ffff841683613c4e565b600060208284031215613d1157600080fd5b81518015158114612c5657600080fdfe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212201e8cb4d9fa297ad9725a2e4ce9889c8abf68f3504abdcffe317738cb27c4b4d164736f6c634300080c0033",
    "sourceMap": "1373:6193:371:-:0;;;1879:97;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1953:19;-1:-1:-1;;;;;1706:33:89;;1698:55;;;;-1:-1:-1;;;1698:55:89;;511:2:644;1698:55:89;;;493:21:644;550:1;530:18;;;523:29;-1:-1:-1;;;568:18:644;;;561:39;617:18;;1698:55:89;;;;;;;;;-1:-1:-1;;;;;1764:40:89;;;3111:19:436;3134:13;;;;;;3133:14;;3179:34;;;;-1:-1:-1;3197:12:436;;3212:1;3197:12;;;;:16;3179:34;3178:108;;;;3220:44;3258:4;3220:29;;;;;:44;;:::i;:::-;3219:45;:66;;;;-1:-1:-1;3268:12:436;;;;;:17;3219:66;3157:201;;;;-1:-1:-1;;;3157:201:436;;848:2:644;3157:201:436;;;830:21:644;887:2;867:18;;;860:30;926:34;906:18;;;899:62;-1:-1:-1;;;977:18:644;;;970:44;1031:19;;3157:201:436;646:410:644;3157:201:436;3368:12;:16;;-1:-1:-1;;3368:16:436;3383:1;3368:16;;;3394:65;;;;3428:13;:20;;-1:-1:-1;;3428:20:436;;;;;3394:65;3483:14;3479:99;;;3529:5;3513:21;;-1:-1:-1;;3513:21:436;;;3553:14;;-1:-1:-1;1213:36:644;;3553:14:436;;1201:2:644;1186:18;3553:14:436;;;;;;;3479:99;3101:483;1879:97:371;1373:6193;;1186:320:462;-1:-1:-1;;;;;1476:19:462;;:23;;;1186:320::o;14:290:644:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:644;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:644:o;1061:194::-;1373:6193:371;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040526004361061019c5760003560e01c80639bdcecd1116100dd5780639bdcecd1146104c8578063a0a8e460146104fd578063a217fddf14610519578063a32fa5b31461052e578063a694fc3a1461054e578063ac9650d814610561578063b218f0691461058e578063b9f7a7b5146105ae578063c3453153146105d0578063ca15c873146105f0578063cb2ef6f714610610578063cb43b2dd14610630578063d547741f14610650578063d68124c714610670578063df6543761461069d578063e8a3d485146106bd578063f7c618c1146106df57600080fd5b80621b79341461022557806316c621e014610245578063248a9ca3146102585780632e1a7d4d146102985780632f2ff15d146102b857806336568abe146102d8578063372500ab146102f85780635357e9161461030d578063572b6c051461033a57806372f702f31461036a5780638caaa2711461038a5780639010d07c146103a05780639168ae72146103c057806391d1485414610449578063938e3d7b1461046957806393ce53431461048957806397e1b4bc1461049e57600080fd5b3661022057336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461021e5760405162461bcd60e51b815260206004820181905260248201527f63616c6c6572206e6f74206e617469766520746f6b656e20777261707065722e60448201526064015b60405180910390fd5b005b600080fd5b34801561023157600080fd5b5061021e61024036600461347d565b6106ff565b61021e61025336600461349f565b610871565b34801561026457600080fd5b5061028561027336600461349f565b60009081526003602052604090205490565b6040519081526020015b60405180910390f35b3480156102a457600080fd5b5061021e6102b336600461349f565b610aa3565b3480156102c457600080fd5b5061021e6102d33660046134cf565b610adc565b3480156102e457600080fd5b5061021e6102f33660046134cf565b610b76565b34801561030457600080fd5b5061021e610bd5565b34801561031957600080fd5b5061032d61032836600461349f565b610c0c565b60405161028f91906134fb565b34801561034657600080fd5b5061035a61035536600461350f565b610c36565b604051901515815260200161028f565b34801561037657600080fd5b5060cd5461032d906001600160a01b031681565b34801561039657600080fd5b5061028560ce5481565b3480156103ac57600080fd5b5061032d6103bb36600461347d565b610c54565b3480156103cc57600080fd5b506104176103db36600461350f565b60d0602052600090815260409020805460018201546002909201546001600160801b03821692600160801b9092046001600160401b0316919084565b604080516001600160801b0390951685526001600160401b03909316602085015291830152606082015260800161028f565b34801561045557600080fd5b5061035a6104643660046134cf565b610d44565b34801561047557600080fd5b5061021e6104843660046135df565b610d6f565b34801561049557600080fd5b5060d354610285565b3480156104aa57600080fd5b506104b3610d9f565b6040805192835260208301919091520161028f565b3480156104d457600080fd5b5060cd546104ea90600160b01b900461ffff1681565b60405161ffff909116815260200161028f565b34801561050957600080fd5b506040516001815260200161028f565b34801561052557600080fd5b50610285600081565b34801561053a57600080fd5b5061035a6105493660046134cf565b610e2c565b61021e61055c36600461349f565b610e82565b34801561056d57600080fd5b5061058161057c366004613613565b610eb3565b60405161028f91906136df565b34801561059a57600080fd5b5061021e6105a9366004613758565b610fa7565b3480156105ba57600080fd5b5060cd546104ea90600160a01b900461ffff1681565b3480156105dc57600080fd5b506104b36105eb36600461350f565b611104565b3480156105fc57600080fd5b5061028561060b36600461349f565b611131565b34801561061c57600080fd5b5069546f6b656e5374616b6560b01b610285565b34801561063c57600080fd5b5061021e61064b36600461349f565b6111ba565b34801561065c57600080fd5b5061021e61066b3660046134cf565b6113c5565b34801561067c57600080fd5b506106856113de565b6040516001600160501b03909116815260200161028f565b3480156106a957600080fd5b5061021e6106b8366004613773565b61142e565b3480156106c957600080fd5b506106d2611737565b60405161028f919061389c565b3480156106eb57600080fd5b5060d25461032d906001600160a01b031681565b6107076117d4565b6107235760405162461bcd60e51b8152600401610215906138af565b600060d16000600160cd60189054906101000a90046001600160401b031661074b91906138ed565b6001600160401b031681526020808201929092526040908101600020815160a08101835281546001600160501b038082168352600160501b8204811695830195909552600160a01b9004909316918301919091526001810154606083018190526002909101546080830152909150831415806107cb575080608001518214155b6108115760405162461bcd60e51b81526020600482015260176024820152762932bbb0b932103930ba34b7903ab731b430b733b2b21760491b6044820152606401610215565b805161081e9084846117e7565b60608082015160808084015160408051938452602084018890528301529181018490527feb6684a1e7c9bd2adc792fb253558f022bcbef39fb6ad31dc58cdfefdd5b5190910160405180910390a1505050565b6002609b5414156108945760405162461bcd60e51b815260040161021590613915565b6002609b556108a6600061046461199f565b6108c25760405162461bcd60e51b8152600401610215906138af565b60d2546000906001600160a01b031673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee146108fc5760d2546001600160a01b031661091e565b7f00000000000000000000000000000000000000000000000000000000000000005b90506000816001600160a01b03166370a08231306040518263ffffffff1660e01b815260040161094e91906134fb565b602060405180830381865afa15801561096b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098f919061394c565b60d2549091506109d2906001600160a01b03166109aa61199f565b30867f00000000000000000000000000000000000000000000000000000000000000006119a9565b600081836001600160a01b03166370a08231306040518263ffffffff1660e01b8152600401610a0191906134fb565b602060405180830381865afa158015610a1e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a42919061394c565b610a4c9190613965565b90508060d36000828254610a60919061397c565b90915550506040518181527ff9d14e57815939d300bc94720ede00c8c8e08d254ab28e2917ea46e149aa119b9060200160405180910390a150506001609b555050565b6002609b541415610ac65760405162461bcd60e51b815260040161021590613915565b6002609b55610ad481611b20565b506001609b55565b600082815260036020526040902054610af59033611e3b565b60008281526002602090815260408083206001600160a01b038516845290915290205460ff1615610b685760405162461bcd60e51b815260206004820152601d60248201527f43616e206f6e6c79206772616e7420746f206e6f6e20686f6c646572730000006044820152606401610215565b610b728282611ebb565b5050565b336001600160a01b03821614610bcb5760405162461bcd60e51b815260206004820152601a60248201527921b0b71037b7363c903932b737bab731b2903337b91039b2b63360311b6044820152606401610215565b610b728282611ecf565b6002609b541415610bf85760405162461bcd60e51b815260040161021590613915565b6002609b55610c05611f26565b6001609b55565b60cf8181548110610c1c57600080fd5b6000918252602090912001546001600160a01b0316905081565b6001600160a01b031660009081526037602052604090205460ff1690565b60008281526004602052604081205481805b82811015610d3a5760008681526004602090815260408083208484526001019091529020546001600160a01b031615610ce35784821415610cd15760008681526004602090815260408083209383526001909301905220546001600160a01b03169250610d3e915050565b610cdc60018361397c565b9150610d28565b610cee866000610d44565b8015610d155750600086815260046020908152604080832083805260020190915290205481145b15610d2857610d2560018361397c565b91505b610d3360018261397c565b9050610c66565b5050505b92915050565b60009182526002602090815260408084206001600160a01b0393909316845291905290205460ff1690565b610d776117d4565b610d935760405162461bcd60e51b8152600401610215906138af565b610d9c816120f1565b50565b60008060d16000600160cd60189054906101000a90046001600160401b0316610dc891906138ed565b6001600160401b0316815260200190815260200160002060010154915060d16000600160cd60189054906101000a90046001600160401b0316610e0b91906138ed565b6001600160401b031681526020019081526020016000206002015490509091565b600082815260026020908152604080832083805290915281205460ff16610e79575060008281526002602090815260408083206001600160a01b038516845290915290205460ff16610d3e565b50600192915050565b6002609b541415610ea55760405162461bcd60e51b815260040161021590613915565b6002609b55610ad4816121c7565b6060816001600160401b03811115610ecd57610ecd61352a565b604051908082528060200260200182016040528015610f0057816020015b6060815260200190600190039081610eeb5790505b50905060005b82811015610fa057610f7030858584818110610f2457610f24613994565b9050602002810190610f3691906139aa565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061259492505050565b828281518110610f8257610f82613994565b60200260200101819052508080610f98906139f0565b915050610f06565b5092915050565b610faf6117d4565b610fcb5760405162461bcd60e51b8152600401610215906138af565b600060d16000600160cd60189054906101000a90046001600160401b0316610ff391906138ed565b6001600160401b031681526020808201929092526040908101600020815160a08101835281546001600160501b03808216808452600160501b8304821696840196909652600160a01b9091048116938201939093526001820154606082015260029091015460808201529250831614156110a65760405162461bcd60e51b81526020600482015260146024820152732a34b6b296bab734ba103ab731b430b733b2b21760611b6044820152606401610215565b6110b982826060015183608001516117e7565b8051604080516001600160501b03928316815291841660208301527fd968de290ed68f978b9e4816f7d4be9ef46189fe8eeb3eeb86199e7229cf2de091015b60405180910390a15050565b6001600160a01b038116600090815260d060205260408120600101549061112a83612686565b9050915091565b600081815260046020526040812054815b818110156111955760008481526004602090815260408083208484526001019091529020546001600160a01b0316156111835761118060018461397c565b92505b61118e60018261397c565b9050611142565b506111a1836000610d44565b156111b4576111b160018361397c565b91505b50919050565b6002609b5414156111dd5760405162461bcd60e51b815260040161021590613915565b6002609b556111ef600061046461199f565b61120b5760405162461bcd60e51b8152600401610215906138af565b60d3548111611227578060d3546112229190613965565b61122a565b60005b60d35560d25461126d906001600160a01b03163061124661199f565b847f00000000000000000000000000000000000000000000000000000000000000006119a9565b60cd546000906001600160a01b031673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee146112a75760cd546001600160a01b03166112c9565b7f00000000000000000000000000000000000000000000000000000000000000005b905060ce54816001600160a01b03166370a08231306040518263ffffffff1660e01b81526004016112fa91906134fb565b602060405180830381865afa158015611317573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061133b919061394c565b10156113895760405162461bcd60e51b815260206004820152601e60248201527f5374616b696e6720746f6b656e2062616c616e636520726564756365642e00006044820152606401610215565b6040518281527f37ff8766c704931c4283e470feb7c20ddcd8aa492746f74b30503709a0452acd9060200160405180910390a150506001609b55565b600082815260036020526040902054610bcb9033611e3b565b600060d16000600160cd60189054906101000a90046001600160401b031661140691906138ed565b6001600160401b031681526020810191909152604001600020546001600160501b0316919050565b600054610100900460ff161580801561144e5750600054600160ff909116105b8061146f575061145d306117c5565b15801561146f575060005460ff166001145b6114d25760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610215565b6000805460ff1916600117905580156114f5576000805461ff0019166101001790555b6114fe876126fc565b846001600160a01b0316866001600160a01b031614156115765760405162461bcd60e51b815260206004820152602d60248201527f52657761726420546f6b656e20616e64205374616b696e6720546f6b656e206360448201526c30b713ba1031329039b0b6b29760991b6064820152608401610215565b60d280546001600160a01b0319166001600160a01b038881169190911790915560009073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee9087161461161d57856001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156115f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116189190613a0b565b611620565b60125b60ff16905060006001600160a01b03881673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee146116b257876001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015611689573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116ad9190613a0b565b6116b5565b60125b60ff1690506116c587838361278b565b6116d08686866117e7565b6116d98a6120f1565b6116e460008c611ebb565b5050801561172c576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050505050565b6001805461174490613a2e565b80601f016020809104026020016040519081016040528092919081815260200182805461177090613a2e565b80156117bd5780601f10611792576101008083540402835291602001916117bd565b820191906000526020600020905b8154815290600101906020018083116117a057829003601f168201915b505050505081565b6001600160a01b03163b151590565b60006117e28161046461199f565b905090565b806118225760405162461bcd60e51b815260206004820152600b60248201526a064697669646520627920360ac1b6044820152606401610215565b6001600160501b03831661186f5760405162461bcd60e51b8152602060048201526014602482015273074696d652d756e69742063616e277420626520360641b6044820152606401610215565b60cd8054600160c01b90046001600160401b03169060019060186118938385613a63565b82546001600160401b039182166101009390930a9283029190920219909116179055506040805160a0810182526001600160501b03808716825242811660208084019182526000848601818152606086018a8152608087018a815289845260d19094529690912094518554935191518516600160a01b02600160a01b600160f01b0319928616600160501b026001600160a01b0319909516919095161792909217919091169190911782559151600182015590516002909101558015611999574260d16000611963600185613965565b815260200190815260200160002060000160146101000a8154816001600160501b0302191690836001600160501b031602179055505b50505050565b60006117e2612895565b816119b357611b19565b6001600160a01b03851673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1415611b0d576001600160a01b038416301415611a5357604051632e1a7d4d60e01b8152600481018390526001600160a01b03821690632e1a7d4d90602401600060405180830381600087803b158015611a2b57600080fd5b505af1158015611a3f573d6000803e3d6000fd5b50505050611a4e8383836128b7565b611b19565b6001600160a01b038316301415611b0257348214611aa95760405162461bcd60e51b81526020600482015260136024820152721b5cd9cb9d985b1d5948084f48185b5bdd5b9d606a1b6044820152606401610215565b806001600160a01b031663d0e30db0836040518263ffffffff1660e01b81526004016000604051808303818588803b158015611ae457600080fd5b505af1158015611af8573d6000803e3d6000fd5b5050505050611b19565b611a4e8383836128b7565b611b198585858561297c565b5050505050565b600060d06000611b2e6129da565b6001600160a01b03168152602081019190915260400160002060010154905081611b915760405162461bcd60e51b81526020600482015260146024820152735769746864726177696e67203020746f6b656e7360601b6044820152606401610215565b81811015611be05760405162461bcd60e51b815260206004820152601c60248201527b15da5d1a191c985dda5b99c81b5bdc99481d1a185b881cdd185ad95960221b6044820152606401610215565b611bf0611beb6129da565b6129e4565b81811415611d5057600060cf805480602002602001604051908101604052809291908181526020018280548015611c5057602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611c32575b5050505050905060005b8151811015611d4d57611c6b6129da565b6001600160a01b0316828281518110611c8657611c86613994565b60200260200101516001600160a01b03161415611d3d578160018351611cac9190613965565b81518110611cbc57611cbc613994565b602002602001015160cf8281548110611cd757611cd7613994565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060cf805480611d1657611d16613a8e565b600082815260209020810160001990810180546001600160a01b0319169055019055611d4d565b611d46816139f0565b9050611c5a565b50505b8160d06000611d5d6129da565b6001600160a01b03166001600160a01b031681526020019081526020016000206001016000828254611d8f9190613965565b925050819055508160ce6000828254611da89190613965565b909155505060cd54611ded906001600160a01b031630611dc66129da565b857f00000000000000000000000000000000000000000000000000000000000000006119a9565b611df56129da565b6001600160a01b03167f6352c5382c4a4578e712449ca65e83cdb392d045dfcf1cad9615189db2da244b83604051611e2f91815260200190565b60405180910390a25050565b60008281526002602090815260408083206001600160a01b038516845290915290205460ff16610b7257611e79816001600160a01b03166014612abb565b611e84836020612abb565b604051602001611e95929190613aa4565b60408051601f198184030181529082905262461bcd60e51b82526102159160040161389c565b611ec58282612c5d565b610b728282612cb8565b611ed98282612d25565b60008281526004602090815260408083206001600160a01b03851680855260028201808552838620805487526001909301855292852080546001600160a01b031916905584529152555050565b6000611f38611f336129da565b612d87565b60d06000611f446129da565b6001600160a01b03166001600160a01b0316815260200190815260200160002060020154611f72919061397c565b905080611fae5760405162461bcd60e51b815260206004820152600a6024820152694e6f207265776172647360b01b6044820152606401610215565b426001600160501b031660d06000611fc46129da565b6001600160a01b031681526020810191909152604001600090812080546001600160801b0319166001600160801b03939093169290921790915560d0816120096129da565b6001600160a01b0316815260208101919091526040016000206002015560cd5461204590600190600160c01b90046001600160401b03166138ed565b60d060006120516129da565b6001600160a01b03168152602081019190915260400160002080546001600160401b0392909216600160801b02600160801b600160c01b03199092169190911790556120a461209e6129da565b82612f9b565b6120ac6129da565b6001600160a01b03167ffc30cddea38e2bf4d6ea7d3f9ed3b6ad7f176419f4963bd81318067a4aee73fe826040516120e691815260200190565b60405180910390a250565b60006001805461210090613a2e565b80601f016020809104026020016040519081016040528092919081815260200182805461212c90613a2e565b80156121795780601f1061214e57610100808354040283529160200191612179565b820191906000526020600020905b81548152906001019060200180831161215c57829003601f168201915b50508551939450612195936001935060208701925090506133e4565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a1681836040516110f8929190613b11565b806122075760405162461bcd60e51b815260206004820152601060248201526f5374616b696e67203020746f6b656e7360801b6044820152606401610215565b60cd546000906001600160a01b031673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee141561225857507f00000000000000000000000000000000000000000000000000000000000000006122a2565b34156122945760405162461bcd60e51b815260206004820152600b60248201526a056616c7565206e6f7420360ac1b6044820152606401610215565b5060cd546001600160a01b03165b600060d060006122b06129da565b6001600160a01b03166001600160a01b031681526020019081526020016000206001015411156122ea576122e5611beb6129da565b6123df565b60cf6122f46129da565b81546001810183556000928352602083200180546001600160a01b0319166001600160a01b0392909216919091179055426001600160501b03169060d09061233a6129da565b6001600160a01b03168152602081019190915260400160002080546001600160801b0319166001600160801b039290921691909117905560cd5461239090600190600160c01b90046001600160401b03166138ed565b60d0600061239c6129da565b6001600160a01b03168152602081019190915260400160002080546001600160401b0392909216600160801b02600160801b600160c01b03199092169190911790555b6040516370a0823160e01b81526000906001600160a01b038316906370a082319061240e9030906004016134fb565b602060405180830381865afa15801561242b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061244f919061394c565b60cd5490915061246a906001600160a01b03166109aa6129da565b600081836001600160a01b03166370a08231306040518263ffffffff1660e01b815260040161249991906134fb565b602060405180830381865afa1580156124b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124da919061394c565b6124e49190613965565b90508060d060006124f36129da565b6001600160a01b03166001600160a01b031681526020019081526020016000206001016000828254612525919061397c565b925050819055508060ce600082825461253e919061397c565b9091555061254c90506129da565b6001600160a01b03167fb539ca1e5c8d398ddf1c41c30166f33404941683be4683319b57669a93dad4ef8260405161258691815260200190565b60405180910390a250505050565b606061259f836117c5565b6125fa5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610215565b600080846001600160a01b0316846040516126159190613b36565b600060405180830381855af49150503d8060008114612650576040519150601f19603f3d011682016040523d82523d6000602084013e612655565b606091505b509150915061267d8282604051806060016040528060278152602001613d2260279139613038565b95945050505050565b6001600160a01b038116600090815260d060205260408120600101546126c557506001600160a01b0316600090815260d0602052604090206002015490565b6126ce82612d87565b6001600160a01b038316600090815260d060205260409020600201546126f4919061397c565b90505b919050565b600054610100900460ff166127235760405162461bcd60e51b815260040161021590613b52565b60005b8151811015610b725760016037600084848151811061274757612747613994565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff191691151591909117905580612783816139f0565b915050612726565b600054610100900460ff166127b25760405162461bcd60e51b815260040161021590613b52565b6127ba613071565b6001600160a01b0383166128025760405162461bcd60e51b815260206004820152600f60248201526e0746f6b656e2061646472657373203608c1b6044820152606401610215565b61ffff821615801590612818575061ffff811615155b6128515760405162461bcd60e51b815260206004820152600a6024820152690646563696d616c7320360b41b6044820152606401610215565b60cd80546001600160a01b03949094166001600160b01b031990941693909317600160a01b61ffff938416021761ffff60b01b1916600160b01b9190921602179055565b60006128a033610c36565b156128b2575060131936013560601c90565b503390565b6000836001600160a01b03168360405160006040518083038185875af1925050503d8060008114612904576040519150601f19603f3d011682016040523d82523d6000602084013e612909565b606091505b505090508061199957816001600160a01b031663d0e30db0846040518263ffffffff1660e01b81526004016000604051808303818588803b15801561294d57600080fd5b505af1158015612961573d6000803e3d6000fd5b50611999935050506001600160a01b038416905085856130a2565b816001600160a01b0316836001600160a01b0316141561299b57611999565b6001600160a01b0383163014156129c5576129c06001600160a01b03851683836130a2565b611999565b6119996001600160a01b03851684848461310a565b60006117e261199f565b60006129ef82612d87565b6001600160a01b038316600090815260d06020526040812060020180549293508392909190612a1f90849061397c565b90915550506001600160a01b038216600090815260d06020526040902080546001600160801b0319166001600160501b03421617905560cd54612a75906001906001600160401b03600160c01b909104166138ed565b6001600160a01b03909216600090815260d06020526040902080546001600160401b0393909316600160801b02600160801b600160c01b03199093169290921790915550565b60606000612aca836002613b9d565b612ad590600261397c565b6001600160401b03811115612aec57612aec61352a565b6040519080825280601f01601f191660200182016040528015612b16576020820181803683370190505b509050600360fc1b81600081518110612b3157612b31613994565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110612b6057612b60613994565b60200101906001600160f81b031916908160001a9053506000612b84846002613b9d565b612b8f90600161397c565b90505b6001811115612c07576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110612bc357612bc3613994565b1a60f81b828281518110612bd957612bd9613994565b60200101906001600160f81b031916908160001a90535060049490941c93612c0081613bbc565b9050612b92565b508315612c565760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610215565b9392505050565b60008281526002602090815260408083206001600160a01b0385168085529252808320805460ff1916600117905551339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b600082815260046020526040812080549160019190612cd7838561397c565b9091555050600092835260046020908152604080852083865260018101835281862080546001600160a01b039096166001600160a01b03199096168617905593855260029093019052912055565b612d2f8282611e3b565b60008281526002602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6001600160a01b038116600090815260d060209081526040808320815160808101835281546001600160801b03811682526001600160401b03600160801b9091048116948201859052600183015493820193909352600290910154606082015260cd54909291600160c01b90910416815b81811015612f4f57600081815260d160209081526040808320815160a08101835281546001600160501b038082168352600160501b8204811695830195909552600160a01b900490931691830191909152600181015460608301526002015460808201529084831415612e6c578551612e7b565b81602001516001600160501b03165b6001600160801b03169050600082604001516001600160501b031660001415612ea45742612eb3565b82604001516001600160501b03165b9050600080612ee089604001518585612ecc9190613965565b612ed69190613b9d565b8660600151613142565b91509150600080612f188c886080015189600001516001600160501b031686612f099190613be9565b612f139190613be9565b61318a565b91509150838015612f265750815b612f30578b612f32565b805b9b5050505050505050600181612f48919061397c565b9050612df8565b5060cd54612f74908590612f6f90600160b01b900461ffff16600a613cef565b613142565b60cd54909550612f919150600160a01b900461ffff16600a613cef565b61267d9085613be9565b60d354811115612fe85760405162461bcd60e51b81526020600482015260186024820152774e6f7420656e6f7567682072657761726420746f6b656e7360401b6044820152606401610215565b8060d36000828254612ffa9190613965565b909155505060d254610b72906001600160a01b03163084847f00000000000000000000000000000000000000000000000000000000000000006119a9565b60608315613047575081612c56565b8251156130575782518084602001fd5b8160405162461bcd60e51b8152600401610215919061389c565b600054610100900460ff166130985760405162461bcd60e51b815260040161021590613b52565b6130a06131a5565b565b6040516001600160a01b03831660248201526044810182905261310590849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526131cc565b505050565b6040516001600160a01b03808516602483015283166044820152606481018290526119999085906323b872dd60e01b906084016130ce565b600080836131565750600190506000613183565b8383028385828161316957613169613bd3565b041461317c576000809250925050613183565b6001925090505b9250929050565b6000808383018481101561317c576000809250925050613183565b600054610100900460ff16610c055760405162461bcd60e51b815260040161021590613b52565b6000613221826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661329e9092919063ffffffff16565b805190915015613105578080602001905181019061323f9190613cff565b6131055760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610215565b60606132ad84846000856132b5565b949350505050565b6060824710156133165760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610215565b61331f856117c5565b61336b5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610215565b600080866001600160a01b031685876040516133879190613b36565b60006040518083038185875af1925050503d80600081146133c4576040519150601f19603f3d011682016040523d82523d6000602084013e6133c9565b606091505b50915091506133d9828286613038565b979650505050505050565b8280546133f090613a2e565b90600052602060002090601f0160209004810192826134125760008555613458565b82601f1061342b57805160ff1916838001178555613458565b82800160010185558215613458579182015b8281111561345857825182559160200191906001019061343d565b50613464929150613468565b5090565b5b808211156134645760008155600101613469565b6000806040838503121561349057600080fd5b50508035926020909101359150565b6000602082840312156134b157600080fd5b5035919050565b80356001600160a01b03811681146126f757600080fd5b600080604083850312156134e257600080fd5b823591506134f2602084016134b8565b90509250929050565b6001600160a01b0391909116815260200190565b60006020828403121561352157600080fd5b612c56826134b8565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b03811182821017156135685761356861352a565b604052919050565b600082601f83011261358157600080fd5b81356001600160401b0381111561359a5761359a61352a565b6135ad601f8201601f1916602001613540565b8181528460208386010111156135c257600080fd5b816020850160208301376000918101602001919091529392505050565b6000602082840312156135f157600080fd5b81356001600160401b0381111561360757600080fd5b6132ad84828501613570565b6000806020838503121561362657600080fd5b82356001600160401b038082111561363d57600080fd5b818501915085601f83011261365157600080fd5b81358181111561366057600080fd5b8660208260051b850101111561367557600080fd5b60209290920196919550909350505050565b60005b838110156136a257818101518382015260200161368a565b838111156119995750506000910152565b600081518084526136cb816020860160208601613687565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561373457603f198886030184526137228583516136b3565b94509285019290850190600101613706565b5092979650505050505050565b80356001600160501b03811681146126f757600080fd5b60006020828403121561376a57600080fd5b612c5682613741565b600080600080600080600080610100898b03121561379057600080fd5b613799896134b8565b97506020808a01356001600160401b03808211156137b657600080fd5b6137c28d838e01613570565b995060408c01359150808211156137d857600080fd5b818c0191508c601f8301126137ec57600080fd5b8135818111156137fe576137fe61352a565b8060051b915061380f848301613540565b818152918301840191848101908f84111561382957600080fd5b938501935b8385101561384e5761383f856134b8565b8252938501939085019061382e565b809b5050505050505061386360608a016134b8565b945061387160808a016134b8565b935061387f60a08a01613741565b925060c0890135915060e089013590509295985092959890939650565b602081526000612c5660208301846136b3565b6020808252600e908201526d139bdd08185d5d1a1bdc9a5e995960921b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b60006001600160401b038381169083168181101561390d5761390d6138d7565b039392505050565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b60006020828403121561395e57600080fd5b5051919050565b600082821015613977576139776138d7565b500390565b6000821982111561398f5761398f6138d7565b500190565b634e487b7160e01b600052603260045260246000fd5b6000808335601e198436030181126139c157600080fd5b8301803591506001600160401b038211156139db57600080fd5b60200191503681900382131561318357600080fd5b6000600019821415613a0457613a046138d7565b5060010190565b600060208284031215613a1d57600080fd5b815160ff81168114612c5657600080fd5b600181811c90821680613a4257607f821691505b602082108114156111b457634e487b7160e01b600052602260045260246000fd5b60006001600160401b03808316818516808303821115613a8557613a856138d7565b01949350505050565b634e487b7160e01b600052603160045260246000fd5b7402832b936b4b9b9b4b7b7399d1030b1b1b7bab73a1605d1b815260008351613ad4816015850160208801613687565b7001034b99036b4b9b9b4b733903937b6329607d1b6015918401918201528351613b05816026840160208801613687565b01602601949350505050565b604081526000613b2460408301856136b3565b828103602084015261267d81856136b3565b60008251613b48818460208701613687565b9190910192915050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6000816000190483118215151615613bb757613bb76138d7565b500290565b600081613bcb57613bcb6138d7565b506000190190565b634e487b7160e01b600052601260045260246000fd5b600082613c0657634e487b7160e01b600052601260045260246000fd5b500490565b600181815b80851115613c46578160001904821115613c2c57613c2c6138d7565b80851615613c3957918102915b93841c9390800290613c10565b509250929050565b600082613c5d57506001610d3e565b81613c6a57506000610d3e565b8160018114613c805760028114613c8a57613ca6565b6001915050610d3e565b60ff841115613c9b57613c9b6138d7565b50506001821b610d3e565b5060208310610133831016604e8410600b8410161715613cc9575081810a610d3e565b613cd38383613c0b565b8060001904821115613ce757613ce76138d7565b029392505050565b6000612c5661ffff841683613c4e565b600060208284031215613d1157600080fd5b81518015158114612c5657600080fdfe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212201e8cb4d9fa297ad9725a2e4ce9889c8abf68f3504abdcffe317738cb27c4b4d164736f6c634300080c0033",
    "sourceMap": "1373:6193:371:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3603:10;-1:-1:-1;;;;;3617:18:371;3603:32;;3595:77;;;;-1:-1:-1;;;3595:77:371;;216:2:644;3595:77:371;;;198:21:644;;;235:18;;;228:30;294:34;274:18;;;267:62;346:18;;3595:77:371;;;;;;;;;1373:6193;;;;;4625:700:89;;;;;;;;;;-1:-1:-1;4625:700:89;;;;;:::i;:::-;;:::i;3728:752:371:-;;;;;;:::i;:::-;;:::i;2740:120:69:-;;;;;;;;;;-1:-1:-1;2740:120:69;;;;;:::i;:::-;2808:7;2834:19;;;:13;:19;;;;;;;2740:120;;;;1144:25:644;;;1132:2;1117:18;2740:120:69;;;;;;;;3014:92:89;;;;;;;;;;-1:-1:-1;3014:92:89;;;;;:::i;:::-;;:::i;3255:271:69:-;;;;;;;;;;-1:-1:-1;3255:271:69;;;;;:::i;:::-;;:::i;4466:217::-;;;;;;;;;;-1:-1:-1;4466:217:69;;;;;:::i;:::-;;:::i;3335:78:89:-;;;;;;;;;;;;;:::i;1307:29::-;;;;;;;;;;-1:-1:-1;1307:29:89;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;918:134:209:-;;;;;;;;;;-1:-1:-1;918:134:209;;;;;:::i;:::-;;:::i;:::-;;;2181:14:644;;2174:22;2156:41;;2144:2;2129:18;918:134:209;2016:187:644;832:27:89;;;;;;;;;;-1:-1:-1;832:27:89;;;;-1:-1:-1;;;;;832:27:89;;;1204:34;;;;;;;;;;;;;;;;1643:633:70;;;;;;;;;;-1:-1:-1;1643:633:70;;;;;:::i;:::-;;:::i;1428:41:89:-;;;;;;;;;;-1:-1:-1;1428:41:89;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1428:41:89;;;-1:-1:-1;;;1428:41:89;;;-1:-1:-1;;;;;1428:41:89;;;;;;;;;-1:-1:-1;;;;;2890:32:644;;;2872:51;;-1:-1:-1;;;;;2959:31:644;;;2954:2;2939:18;;2932:59;3007:18;;;3000:34;3065:2;3050:18;;3043:34;2859:3;2844:19;1428:41:89;2643:440:644;1324:131:69;;;;;;;;;;-1:-1:-1;1324:131:69;;;;;:::i;:::-;;:::i;1003:188:54:-;;;;;;;;;;-1:-1:-1;1003:188:54;;;;;:::i;:::-;;:::i;5561:116:371:-;;;;;;;;;;-1:-1:-1;5652:18:371;;5561:116;;5970:264:89;;;;;;;;;;;;;:::i;:::-;;;;4537:25:644;;;4593:2;4578:18;;4571:34;;;;4510:18;5970:264:89;4363:248:644;986:33:89;;;;;;;;;;-1:-1:-1;986:33:89;;;;-1:-1:-1;;;986:33:89;;;;;;;;;4790:6:644;4778:19;;;4760:38;;4748:2;4733:18;986:33:89;4616:188:644;3379:103:371;;;;;;;;;;-1:-1:-1;3379:103:371;;1670:1;4951:36:644;;4939:2;4924:18;3379:103:371;4809:184:644;742:49:69;;;;;;;;;;-1:-1:-1;742:49:69;787:4;742:49;;2206:211;;;;;;;;;;-1:-1:-1;2206:211:69;;;;;:::i;:::-;;:::i;2712:94:89:-;;;;;;:::i;:::-;;:::i;632:301:466:-;;;;;;;;;;-1:-1:-1;632:301:466;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3684:481:89:-;;;;;;;;;;-1:-1:-1;3684:481:89;;;;;:::i;:::-;;:::i;906:34::-;;;;;;;;;;-1:-1:-1;906:34:89;;;;-1:-1:-1;;;906:34:89;;;;;;5600:220;;;;;;;;;;-1:-1:-1;5600:220:89;;;;;:::i;:::-;;:::i;2683:398:70:-;;;;;;;;;;-1:-1:-1;2683:398:70;;;;;:::i;:::-;;:::i;3224:99:371:-;;;;;;;;;;-1:-1:-1;;;;3224:99:371;;4540:945;;;;;;;;;;-1:-1:-1;4540:945:371;;;;;:::i;:::-;;:::i;3897:171:69:-;;;;;;;;;;-1:-1:-1;3897:171:69;;;;;:::i;:::-;;:::i;5826:138:89:-;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;7486:31:644;;;7468:50;;7456:2;7441:18;5826:138:89;7324:200:644;2041:1123:371;;;;;;;;;;-1:-1:-1;2041:1123:371;;;;;:::i;:::-;;:::i;565:34:54:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;1745:26:371:-;;;;;;;;;;-1:-1:-1;1745:26:371;;;;-1:-1:-1;;;;;1745:26:371;;;4625:700:89;4723:24;:22;:24::i;:::-;4718:80;;4763:24;;-1:-1:-1;;;4763:24:89;;;;;;;:::i;4718:80::-;4808:33;4844:17;:38;4880:1;4862:15;;;;;;;;;-1:-1:-1;;;;;4862:15:89;:19;;;;:::i;:::-;-1:-1:-1;;;;;4844:38:89;;;;;;;;;;;;;;;-1:-1:-1;4844:38:89;4808:74;;;;;;;;;-1:-1:-1;;;;;4808:74:89;;;;;-1:-1:-1;;;4808:74:89;;;;;;;;;;;-1:-1:-1;;;4808:74:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4913:44:89;;;;:96;;;4977:9;:32;;;4961:12;:48;;4913:96;4892:166;;;;-1:-1:-1;;;4892:166:89;;10256:2:644;4892:166:89;;;10238:21:644;10295:2;10275:18;;;10268:30;-1:-1:-1;;;10314:18:644;;;10307:53;10377:18;;4892:166:89;10054:347:644;4892:166:89;5089:18;;5068:66;;5109:10;5121:12;5068:20;:66::i;:::-;5182:30;;;;;5250:32;;;;;5150:168;;;10637:25:644;;;10693:2;10678:18;;10671:34;;;10721:18;;10714:34;10764:18;;;10757:34;;;5150:168:89;;10609:19:644;5150:168:89;;;;;;;4708:617;4625:700;;:::o;3728:752:371:-;1815:1:438;2569:7;;:19;;2561:63;;;;-1:-1:-1;;;2561:63:438;;;;;;;:::i;:::-;1815:1;2699:7;:18;3822:41:371::1;787:4:69;3850:12:371;:10;:12::i;3822:41::-;3814:68;;;;-1:-1:-1::0;;;3814:68:371::1;;;;;;;:::i;:::-;3916:11;::::0;3893:20:::1;::::0;-1:-1:-1;;;;;3916:11:371::1;408:42:284;3916:47:371;:82;;3987:11;::::0;-1:-1:-1;;;;;3987:11:371::1;3916:82;;;3966:18;3916:82;3893:105;;4009:21;4040:12;-1:-1:-1::0;;;;;4033:30:371::1;;4072:4;4033:45;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4149:11;::::0;4009:69;;-1:-1:-1;4088:188:371::1;::::0;-1:-1:-1;;;;;4149:11:371::1;4174:12;:10;:12::i;:::-;4208:4;4227:7;4248:18;4088:47;:188::i;:::-;4286:20;4357:13;4316:12;-1:-1:-1::0;;;;;4309:30:371::1;;4348:4;4309:45;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:61;;;;:::i;:::-;4286:84;;4403:12;4381:18;;:34;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;4431:42:371::1;::::0;1144:25:644;;;4431:42:371::1;::::0;1132:2:644;1117:18;4431:42:371::1;;;;;;;-1:-1:-1::0;;1772:1:438;2872:7;:22;-1:-1:-1;;3728:752:371:o;3014:92:89:-;1815:1:438;2569:7;;:19;;2561:63;;;;-1:-1:-1;;;2561:63:438;;;;;;;:::i;:::-;1815:1;2699:7;:18;3081::89::1;3091:7:::0;3081:9:::1;:18::i;:::-;-1:-1:-1::0;1772:1:438;2872:7;:22;3014:92:89:o;3255:271:69:-;3350:19;;;;:13;:19;;;;;;3339:43;;3371:10;3339;:43::i;:::-;3396:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;3396:23:69;;;;;;;;;;;;3392:93;;;3435:39;;-1:-1:-1;;;3435:39:69;;11816:2:644;3435:39:69;;;11798:21:644;11855:2;11835:18;;;11828:30;11894:31;11874:18;;;11867:59;11943:18;;3435:39:69;11614:353:644;3392:93:69;3494:25;3505:4;3511:7;3494:10;:25::i;:::-;3255:271;;:::o;4466:217::-;4557:10;-1:-1:-1;;;;;4557:21:69;;;4553:88;;4594:36;;-1:-1:-1;;;4594:36:69;;12174:2:644;4594:36:69;;;12156:21:644;12213:2;12193:18;;;12186:30;-1:-1:-1;;;12232:18:644;;;12225:56;12298:18;;4594:36:69;11972:350:644;4553:88:69;4650:26;4662:4;4668:7;4650:11;:26::i;3335:78:89:-;1815:1:438;2569:7;;:19;;2561:63;;;;-1:-1:-1;;;2561:63:438;;;;;;;:::i;:::-;1815:1;2699:7;:18;3391:15:89::1;:13;:15::i;:::-;1772:1:438::0;2872:7;:22;3335:78:89:o;1307:29::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1307:29:89;;-1:-1:-1;1307:29:89;:::o;918:134:209:-;-1:-1:-1;;;;;1017:28:209;994:4;1017:28;;;:17;:28;;;;;;;;;918:134::o;1643:633:70:-;1727:14;1776:17;;;:11;:17;;;;;:23;1727:14;;1833:437;1857:12;1853:1;:16;1833:437;;;1937:1;1897:17;;;:11;:17;;;;;;;;:28;;;:25;;:28;;;;;;-1:-1:-1;;;;;1897:28:70;:42;1893:367;;1972:5;1963;:14;1959:133;;;2010:17;;;;:11;:17;;;;;;;;:28;;;:25;;;;:28;;;;-1:-1:-1;;;;;2010:28:70;;-1:-1:-1;2060:13:70;;-1:-1:-1;;2060:13:70;1959:133;2109:10;2118:1;2109:10;;:::i;:::-;;;1893:367;;;2144:25;2152:4;2166:1;2144:7;:25::i;:::-;:71;;;;-1:-1:-1;2178:17:70;;;;:11;:17;;;;;;;;:37;;;:25;;:37;;;;;;2173:42;;2144:71;2140:120;;;2235:10;2244:1;2235:10;;:::i;:::-;;;2140:120;1871:6;1876:1;1871:6;;:::i;:::-;;;1833:437;;;;1743:533;;1643:633;;;;;:::o;1324:131:69:-;1402:4;1425:14;;;:8;:14;;;;;;;;-1:-1:-1;;;;;1425:23:69;;;;;;;;;;;;;;;1324:131::o;1003:188:54:-;1080:20;:18;:20::i;:::-;1075:76;;1116:24;;-1:-1:-1;;;1116:24:54;;;;;;;:::i;1075:76::-;1161:23;1179:4;1161:17;:23::i;:::-;1003:188;:::o;5970:264:89:-;6017:18;6037:20;6082:17;:38;6118:1;6100:15;;;;;;;;;-1:-1:-1;;;;;6100:15:89;:19;;;;:::i;:::-;-1:-1:-1;;;;;6082:38:89;;;;;;;;;;;;:59;;;6069:72;;6166:17;:38;6202:1;6184:15;;;;;;;;;-1:-1:-1;;;;;6184:15:89;:19;;;;:::i;:::-;-1:-1:-1;;;;;6166:38:89;;;;;;;;;;;;:61;;;6151:76;;5970:264;;:::o;2206:211:69:-;2285:4;2306:14;;;:8;:14;;;;;;;;:26;;;;;;;;;;;2301:88;;-1:-1:-1;2355:14:69;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;2355:23:69;;;;;;;;;;;;2348:30;;2301:88;-1:-1:-1;2406:4:69;2206:211;;;;:::o;2712:94:89:-;1815:1:438;2569:7;;:19;;2561:63;;;;-1:-1:-1;;;2561:63:438;;;;;;;:::i;:::-;1815:1;2699:7;:18;2784:15:89::1;2791:7:::0;2784:6:::1;:15::i;632:301:466:-:0;700:22;756:4;-1:-1:-1;;;;;744:24:466;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;734:34;;783:9;778:125;798:15;;;778:125;;;847:45;877:4;884;;889:1;884:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;847:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;847:21:466;;-1:-1:-1;;;847:45:466:i;:::-;834:7;842:1;834:10;;;;;;;;:::i;:::-;;;;;;:58;;;;815:3;;;;;:::i;:::-;;;;778:125;;;;632:301;;;;:::o;3684:481:89:-;3755:24;:22;:24::i;:::-;3750:80;;3795:24;;-1:-1:-1;;;3795:24:89;;;;;;;:::i;3750:80::-;3840:33;3876:17;:38;3912:1;3894:15;;;;;;;;;-1:-1:-1;;;;;3894:15:89;:19;;;;:::i;:::-;-1:-1:-1;;;;;3876:38:89;;;;;;;;;;;;;;;-1:-1:-1;3876:38:89;3840:74;;;;;;;;;-1:-1:-1;;;;;3840:74:89;;;;;;-1:-1:-1;;;3840:74:89;;;;;;;;;;;-1:-1:-1;;;3840:74:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3932:31:89;;;;3924:64;;;;-1:-1:-1;;;3924:64:89;;13327:2:644;3924:64:89;;;13309:21:644;13366:2;13346:18;;;13339:30;-1:-1:-1;;;13385:18:644;;;13378:50;13445:18;;3924:64:89;13125:344:644;3924:64:89;3999:97;4020:9;4031;:30;;;4063:9;:32;;;3999:20;:97::i;:::-;4128:18;;4112:46;;;-1:-1:-1;;;;;13701:15:644;;;13683:34;;13753:15;;;13748:2;13733:18;;13726:43;4112:46:89;;13619:18:644;4112:46:89;;;;;;;;3740:425;3684:481;:::o;5600:220::-;-1:-1:-1;;;;;5737:16:89;;5670:21;5737:16;;;:7;:16;;;;;:29;;;;5787:26;5745:7;5787:17;:26::i;:::-;5776:37;;5600:220;;;:::o;2683:398:70:-;2757:13;2805:17;;;:11;:17;;;;;:23;2757:13;2839:161;2863:12;2859:1;:16;2839:161;;;2943:1;2903:17;;;:11;:17;;;;;;;;:28;;;:25;;:28;;;;;;-1:-1:-1;;;;;2903:28:70;:42;2899:91;;2965:10;2974:1;2965:10;;:::i;:::-;;;2899:91;2877:6;2882:1;2877:6;;:::i;:::-;;;2839:161;;;;3013:25;3021:4;3035:1;3013:7;:25::i;:::-;3009:66;;;3054:10;3063:1;3054:10;;:::i;:::-;;;3009:66;2772:309;2683:398;;;:::o;4540:945:371:-;1815:1:438;2569:7;;:19;;2561:63;;;;-1:-1:-1;;;2561:63:438;;;;;;;:::i;:::-;1815:1;2699:7;:18;4627:41:371::1;787:4:69;4655:12:371;:10;:12::i;4627:41::-;4619:68;;;;-1:-1:-1::0;;;4619:68:371::1;;;;;;;:::i;:::-;4788:18;;4778:7;:28;:63;;4834:7;4813:18;;:28;;;;:::i;:::-;4778:63;;;4809:1;4778:63;4757:18;:84:::0;4913:11:::1;::::0;4852:188:::1;::::0;-1:-1:-1;;;;;4913:11:371::1;4946:4;4965:12;:10;:12::i;:::-;4991:7;5012:18;4852:47;:188::i;:::-;5185:12;::::0;5161:21:::1;::::0;-1:-1:-1;;;;;5185:12:371::1;408:42:284;5185:48:371;:84;;5257:12;::::0;-1:-1:-1;;;;;5257:12:371::1;5185:84;;;5236:18;5185:84;5161:108;;5350:19;;5307:13;-1:-1:-1::0;;;;;5300:31:371::1;;5340:4;5300:46;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:69;;5279:146;;;::::0;-1:-1:-1;;;5279:146:371;;13982:2:644;5279:146:371::1;::::0;::::1;13964:21:644::0;14021:2;14001:18;;;13994:30;14060:32;14040:18;;;14033:60;14110:18;;5279:146:371::1;13780:354:644::0;5279:146:371::1;5441:37;::::0;1144:25:644;;;5441:37:371::1;::::0;1132:2:644;1117:18;5441:37:371::1;;;;;;;-1:-1:-1::0;;1772:1:438;2872:7;:22;4540:945:371:o;3897:171:69:-;3993:19;;;;:13;:19;;;;;;3982:43;;4014:10;3982;:43::i;5826:138:89:-;5870:16;5910:17;:38;5946:1;5928:15;;;;;;;;;-1:-1:-1;;;;;5928:15:89;:19;;;;:::i;:::-;-1:-1:-1;;;;;5910:38:89;;;;;;;;;;;;-1:-1:-1;5910:38:89;:47;-1:-1:-1;;;;;5910:47:89;;5826:138;-1:-1:-1;5826:138:89:o;2041:1123:371:-;3111:19:436;3134:13;;;;;;3133:14;;3179:34;;;;-1:-1:-1;3197:12:436;;3212:1;3197:12;;;;:16;3179:34;3178:108;;;;3220:44;3258:4;3220:29;:44::i;:::-;3219:45;:66;;;;-1:-1:-1;3268:12:436;;;;;:17;3219:66;3157:201;;;;-1:-1:-1;;;3157:201:436;;14341:2:644;3157:201:436;;;14323:21:644;14380:2;14360:18;;;14353:30;14419:34;14399:18;;;14392:62;-1:-1:-1;;;14470:18:644;;;14463:44;14524:19;;3157:201:436;14139:410:644;3157:201:436;3368:12;:16;;-1:-1:-1;;3368:16:436;3383:1;3368:16;;;3394:65;;;;3428:13;:20;;-1:-1:-1;;3428:20:436;;;;;3394:65;2377:51:371::1;2409:18;2377:31;:51::i;:::-;2463:13;-1:-1:-1::0;;;;;2447:29:371::1;:12;-1:-1:-1::0;;;;;2447:29:371::1;;;2439:87;;;::::0;-1:-1:-1;;;2439:87:371;;14756:2:644;2439:87:371::1;::::0;::::1;14738:21:644::0;14795:2;14775:18;;;14768:30;14834:34;14814:18;;;14807:62;-1:-1:-1;;;14885:18:644;;;14878:43;14938:19;;2439:87:371::1;14554:409:644::0;2439:87:371::1;2536:11;:26:::0;;-1:-1:-1;;;;;;2536:26:371::1;-1:-1:-1::0;;;;;2536:26:371;;::::1;::::0;;;::::1;::::0;;;-1:-1:-1;;408:42:284::1;2604:49:371::0;;::::1;;:121;;2700:13;-1:-1:-1::0;;;;;2685:38:371::1;;:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2604:121;;;2668:2;2604:121;2573:152;;::::0;-1:-1:-1;2735:27:371::1;-1:-1:-1::0;;;;;2765:48:371;::::1;408:42:284;2765:48:371;:119;;2860:12;-1:-1:-1::0;;;;;2845:37:371::1;;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2765:119;;;2828:2;2765:119;2735:149;;;;2895:76;2912:13;2927:21;2950:20;2895:16;:76::i;:::-;2981:79;3002:9;3013:21;3036:23;2981:20;:79::i;:::-;3071:31;3089:12;3071:17;:31::i;:::-;3112:45;787:4:69;3143:13:371::0;3112:10:::1;:45::i;:::-;2367:797;;3483:14:436::0;3479:99;;;3529:5;3513:21;;-1:-1:-1;;3513:21:436;;;3553:14;;-1:-1:-1;4951:36:644;;3553:14:436;;4939:2:644;4924:18;3553:14:436;;;;;;;3479:99;3101:483;2041:1123:371;;;;;;;;:::o;565:34:54:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1186:320:462:-;-1:-1:-1;;;;;1476:19:462;;:23;;;1186:320::o;6611:137:371:-;6677:4;6700:41;6677:4;6728:12;:10;:12::i;6700:41::-;6693:48;;6611:137;:::o;10410:741:89:-;10565:17;10557:41;;;;-1:-1:-1;;;10557:41:89;;16032:2:644;10557:41:89;;;16014:21:644;16071:2;16051:18;;;16044:30;-1:-1:-1;;;16090:18:644;;;16083:41;16141:18;;10557:41:89;15830:335:644;10557:41:89;-1:-1:-1;;;;;10616:14:89;;10608:47;;;;-1:-1:-1;;;10608:47:89;;16372:2:644;10608:47:89;;;16354:21:644;16411:2;16391:18;;;16384:30;-1:-1:-1;;;16430:18:644;;;16423:50;16490:18;;10608:47:89;16170:344:644;10608:47:89;10687:15;;;-1:-1:-1;;;10687:15:89;;-1:-1:-1;;;;;10687:15:89;;10731:1;;10687:15;10712:20;10731:1;10687:15;10712:20;:::i;:::-;;;-1:-1:-1;;;;;10712:20:89;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10776:239:89;;;;;;;;-1:-1:-1;;;;;10776:239:89;;;;;10959:15;10776:239;;;;;;;;;-1:-1:-1;10776:239:89;;;;;;;;;;;;;;;;;;10743:30;;;:17;:30;;;;;;;:272;;;;;;;;;;-1:-1:-1;;;10743:272:89;-1:-1:-1;;;;;;;;10743:272:89;;;-1:-1:-1;;;10743:272:89;-1:-1:-1;;;;;;10743:272:89;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10743:272:89;;;;;;;;;;11030:15;;11026:119;;11118:15;11061:17;:34;11079:15;11093:1;11079:11;:15;:::i;:::-;11061:34;;;;;;;;;;;:47;;;:73;;;;;-1:-1:-1;;;;;11061:73:89;;;;;-1:-1:-1;;;;;11061:73:89;;;;;;11026:119;10547:604;10410:741;;;:::o;7282:140:371:-;7344:14;7377:38;:36;:38::i;979:1021:284:-;1178:12;1174:49;;1206:7;;1174:49;-1:-1:-1;;;;;1237:25:284;;408:42;1237:25;1233:761;;;-1:-1:-1;;;;;1282:22:284;;1299:4;1282:22;1278:626;;;1412:44;;-1:-1:-1;;;1412:44:284;;;;;1144:25:644;;;-1:-1:-1;;;;;1412:35:284;;;;;1117:18:644;;1412:44:284;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1474:69;1509:3;1514:7;1523:19;1474:34;:69::i;:::-;1233:761;;1278:626;-1:-1:-1;;;;;1568:20:284;;1583:4;1568:20;1564:340;;;1676:9;1665:7;:20;1657:52;;;;-1:-1:-1;;;1657:52:284;;16962:2:644;1657:52:284;;;16944:21:644;17001:2;16981:18;;;16974:30;-1:-1:-1;;;17020:18:644;;;17013:49;17079:18;;1657:52:284;16760:343:644;1657:52:284;1733:19;-1:-1:-1;;;;;1727:34:284;;1770:7;1727:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1233:761;;1564:340;1820:69;1855:3;1860:7;1869:19;1820:34;:69::i;1233:761::-;1934:49;1952:9;1963:5;1970:3;1975:7;1934:17;:49::i;:::-;979:1021;;;;;:::o;7846:1104:89:-;7909:21;7933:7;:26;7941:17;:15;:17::i;:::-;-1:-1:-1;;;;;7933:26:89;;;;;;;;;;;;-1:-1:-1;7933:26:89;:39;;;;-1:-1:-1;7990:12:89;7982:45;;;;-1:-1:-1;;;7982:45:89;;17310:2:644;7982:45:89;;;17292:21:644;17349:2;17329:18;;;17322:30;-1:-1:-1;;;17368:18:644;;;17361:50;17428:18;;7982:45:89;17108:344:644;7982:45:89;8062:7;8045:13;:24;;8037:65;;;;-1:-1:-1;;;8037:65:89;;17659:2:644;8037:65:89;;;17641:21:644;17698:2;17678:18;;;17671:30;-1:-1:-1;;;17717:18:644;;;17710:58;17785:18;;8037:65:89;17457:352:644;8037:65:89;8113:51;8146:17;:15;:17::i;:::-;8113:32;:51::i;:::-;8196:7;8179:13;:24;8175:404;;;8219:30;8252:12;8219:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8219:45:89;;;;;;;;;;;;;;;;;;;;;;;8283:9;8278:291;8302:13;:20;8298:1;:24;8278:291;;;8371:17;:15;:17::i;:::-;-1:-1:-1;;;;;8351:37:89;:13;8365:1;8351:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;8351:37:89;;8347:208;;;8430:13;8467:1;8444:13;:20;:24;;;;:::i;:::-;8430:39;;;;;;;;:::i;:::-;;;;;;;8412:12;8425:1;8412:15;;;;;;;;:::i;:::-;;;;;;;;;:57;;;;;-1:-1:-1;;;;;8412:57:89;;;;;-1:-1:-1;;;;;8412:57:89;;;;;;8491:12;:18;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;8491:18:89;;;;;-1:-1:-1;;;;;;8491:18:89;;;;;;8531:5;;8347:208;8324:3;;;:::i;:::-;;;8278:291;;;;8205:374;8175:404;8632:7;8589;:26;8597:17;:15;:17::i;:::-;-1:-1:-1;;;;;8589:26:89;-1:-1:-1;;;;;8589:26:89;;;;;;;;;;;;:39;;;:50;;;;;;;:::i;:::-;;;;;;;;8672:7;8649:19;;:30;;;;;;;:::i;:::-;;;;-1:-1:-1;;8751:12:89;;8690:194;;-1:-1:-1;;;;;8751:12:89;8785:4;8804:17;:15;:17::i;:::-;8835:7;8856:18;8690:47;:194::i;:::-;8916:17;:15;:17::i;:::-;-1:-1:-1;;;;;8900:43:89;;8935:7;8900:43;;;;1144:25:644;;1132:2;1117:18;;998:177;8900:43:89;;;;;;;;7899:1051;7846:1104;:::o;5557:495:69:-;5645:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;5645:23:69;;;;;;;;;;;;5640:406;;5827:43;5857:7;-1:-1:-1;;;;;5827:43:69;5867:2;5827:21;:43::i;:::-;5941:40;5971:4;5978:2;5941:21;:40::i;:::-;5736:267;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;5736:267:69;;;;;;;;;;-1:-1:-1;;;5684:351:69;;;;;;;:::i;3475:152:70:-;3554:31;3571:4;3577:7;3554:16;:31::i;:::-;3595:25;3606:4;3612:7;3595:10;:25::i;3205:157::-;3285:32;3303:4;3309:7;3285:17;:32::i;:::-;4084:11;4098:17;;;:11;:17;;;;;;;;-1:-1:-1;;;;;4098:34:70;;;;;:25;;;:34;;;;;;;;4150:30;;:25;;;;:30;;;;;4143:37;;-1:-1:-1;;;;;;4143:37:70;;;4197:34;;;;4190:41;3255:271:69;;:::o;9027:533:89:-;9079:15;9143:36;9161:17;:15;:17::i;:::-;9143;:36::i;:::-;9097:7;:26;9105:17;:15;:17::i;:::-;-1:-1:-1;;;;;9097:26:89;-1:-1:-1;;;;;9097:26:89;;;;;;;;;;;;:43;;;:82;;;;:::i;:::-;9079:100;-1:-1:-1;9198:12:89;9190:35;;;;-1:-1:-1;;;9190:35:89;;18937:2:644;9190:35:89;;;18919:21:644;18976:2;18956:18;;;18949:30;-1:-1:-1;;;18995:18:644;;;18988:40;19045:18;;9190:35:89;18735:334:644;9190:35:89;9289:15;-1:-1:-1;;;;;9236:69:89;:7;:26;9244:17;:15;:17::i;:::-;-1:-1:-1;;;;;9236:26:89;;;;;;;;;;;;-1:-1:-1;9236:26:89;;;:69;;-1:-1:-1;;;;;;9236:69:89;-1:-1:-1;;;;;9236:69:89;;;;;;;;;;;9315:7;-1:-1:-1;9323:17:89;:15;:17::i;:::-;-1:-1:-1;;;;;9315:26:89;;;;;;;;;;;;-1:-1:-1;9315:26:89;:43;;:47;9425:15;;:19;;9443:1;;-1:-1:-1;;;9425:15:89;;-1:-1:-1;;;;;9425:15:89;:19;:::i;:::-;9372:7;:26;9380:17;:15;:17::i;:::-;-1:-1:-1;;;;;9372:26:89;;;;;;;;;;;;-1:-1:-1;9372:26:89;:72;;-1:-1:-1;;;;;9372:72:89;;;;-1:-1:-1;;;9372:72:89;-1:-1:-1;;;;;;;;9372:72:89;;;;;;;;;9455:40;9468:17;:15;:17::i;:::-;9487:7;9455:12;:40::i;:::-;9526:17;:15;:17::i;:::-;-1:-1:-1;;;;;9511:42:89;;9545:7;9511:42;;;;1144:25:644;;1132:2;1117:18;;998:177;9511:42:89;;;;;;;;9069:491;9027:533::o;1273:185:54:-;1339:21;1363:11;1339:35;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1384:18:54;;1339:35;;-1:-1:-1;1384:18:54;;:11;;-1:-1:-1;1384:18:54;;;;-1:-1:-1;1384:18:54;-1:-1:-1;1384:18:54;:::i;:::-;;1418:33;1437:7;1446:4;1418:33;;;;;;;:::i;6485:1296:89:-;6553:12;6545:41;;;;-1:-1:-1;;;6545:41:89;;19662:2:644;6545:41:89;;;19644:21:644;19701:2;19681:18;;;19674:30;-1:-1:-1;;;19720:18:644;;;19713:46;19776:18;;6545:41:89;19460:340:644;6545:41:89;6632:12;;6597:21;;-1:-1:-1;;;;;6632:12:89;408:42:284;6632:48:89;6628:224;;;-1:-1:-1;6712:18:89;6628:224;;;6769:9;:14;6761:38;;;;-1:-1:-1;;;6761:38:89;;20007:2:644;6761:38:89;;;19989:21:644;20046:2;20026:18;;;20019:30;-1:-1:-1;;;20065:18:644;;;20058:41;20116:18;;6761:38:89;19805:335:644;6761:38:89;-1:-1:-1;6829:12:89;;-1:-1:-1;;;;;6829:12:89;6628:224;6908:1;6866:7;:26;6874:17;:15;:17::i;:::-;-1:-1:-1;;;;;6866:26:89;-1:-1:-1;;;;;6866:26:89;;;;;;;;;;;;:39;;;:43;6862:361;;;6925:51;6958:17;:15;:17::i;6925:51::-;6862:361;;;7007:12;7025:17;:15;:17::i;:::-;7007:36;;;;;;;-1:-1:-1;7007:36:89;;;;;;;;;-1:-1:-1;;;;;;7007:36:89;-1:-1:-1;;;;;7007:36:89;;;;;;;;;;7110:15;-1:-1:-1;;;;;7057:69:89;;:7;;7065:17;:15;:17::i;:::-;-1:-1:-1;;;;;7057:26:89;;;;;;;;;;;;-1:-1:-1;7057:26:89;:69;;-1:-1:-1;;;;;;7057:69:89;-1:-1:-1;;;;;7057:69:89;;;;;;;;;;7193:15;;:19;;-1:-1:-1;;;;;7193:15:89;;-1:-1:-1;;;;;7193:15:89;:19;:::i;:::-;7140:7;:26;7148:17;:15;:17::i;:::-;-1:-1:-1;;;;;7140:26:89;;;;;;;;;;;;-1:-1:-1;7140:26:89;:72;;-1:-1:-1;;;;;7140:72:89;;;;-1:-1:-1;;;7140:72:89;-1:-1:-1;;;;;;;;7140:72:89;;;;;;;;;6862:361;7257:46;;-1:-1:-1;;;7257:46:89;;7233:21;;-1:-1:-1;;;;;7257:31:89;;;;;:46;;7297:4;;7257:46;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7374:12;;7233:70;;-1:-1:-1;7313:194:89;;-1:-1:-1;;;;;7374:12:89;7400:17;:15;:17::i;7313:194::-;7517:20;7589:13;7547;-1:-1:-1;;;;;7540:31:89;;7580:4;7540:46;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:62;;;;:::i;:::-;7517:85;;7656:12;7613:7;:26;7621:17;:15;:17::i;:::-;-1:-1:-1;;;;;7613:26:89;-1:-1:-1;;;;;7613:26:89;;;;;;;;;;;;:39;;;:55;;;;;;;:::i;:::-;;;;;;;;7701:12;7678:19;;:35;;;;;;;:::i;:::-;;;;-1:-1:-1;7742:17:89;;-1:-1:-1;7742:15:89;:17::i;:::-;-1:-1:-1;;;;;7729:45:89;;7761:12;7729:45;;;;1144:25:644;;1132:2;1117:18;;998:177;7729:45:89;;;;;;;;6535:1246;;;6485:1296;:::o;1119:455:466:-;1202:12;1234:37;1264:6;1234:29;:37::i;:::-;1226:88;;;;-1:-1:-1;;;1226:88:466;;20347:2:644;1226:88:466;;;20329:21:644;20386:2;20366:18;;;20359:30;20425:34;20405:18;;;20398:62;-1:-1:-1;;;20476:18:644;;;20469:36;20522:19;;1226:88:466;20145:402:644;1226:88:466;1385:12;1399:23;1426:6;-1:-1:-1;;;;;1426:19:466;1446:4;1426:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1384:67;;;;1468:99;1504:7;1513:10;1468:99;;;;;;;;;;;;;;;;;:35;:99::i;:::-;1461:106;1119:455;-1:-1:-1;;;;;1119:455:466:o;9614:322:89:-;-1:-1:-1;;;;;9721:16:89;;9689;9721;;;:7;:16;;;;;:29;;;9717:213;;-1:-1:-1;;;;;;9782:16:89;;;;;:7;:16;;;;;:33;;;;9614:322::o;9717:213::-;9893:26;9911:7;9893:17;:26::i;:::-;-1:-1:-1;;;;;9857:16:89;;;;;;:7;:16;;;;;:33;;;:62;;;;:::i;:::-;9846:73;;9717:213;9614:322;;;:::o;670:242:209:-;4910:13:436;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:436;;;;;;;:::i;:::-;787:9:209::1;782:124;806:16;:23;802:1;:27;782:124;;;891:4;850:17;:38;868:16;885:1;868:19;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;-1:-1:-1;;;;;850:38:209::1;::::0;;;::::1;::::0;;;;;;-1:-1:-1;850:38:209;:45;;-1:-1:-1;;850:45:209::1;::::0;::::1;;::::0;;;::::1;::::0;;831:3;::::1;::::0;::::1;:::i;:::-;;;;782:124;;1817:513:89::0;4910:13:436;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:436;;;;;;;:::i;:::-;1991:24:89::1;:22;:24::i;:::-;-1:-1:-1::0;;;;;2034:36:89;::::1;2026:64;;;::::0;-1:-1:-1;;;2026:64:89;;21445:2:644;2026:64:89::1;::::0;::::1;21427:21:644::0;21484:2;21464:18;;;21457:30;-1:-1:-1;;;21503:18:644;;;21496:45;21558:18;;2026:64:89::1;21243:339:644::0;2026:64:89::1;2108:26;::::0;::::1;::::0;;::::1;::::0;:55:::1;;-1:-1:-1::0;2138:25:89::1;::::0;::::1;::::0;::::1;2108:55;2100:78;;;::::0;-1:-1:-1;;;2100:78:89;;21789:2:644;2100:78:89::1;::::0;::::1;21771:21:644::0;21828:2;21808:18;;;21801:30;-1:-1:-1;;;21847:18:644;;;21840:40;21897:18;;2100:78:89::1;21587:334:644::0;2100:78:89::1;2189:12;:28:::0;;-1:-1:-1;;;;;2189:28:89;;;::::1;-1:-1:-1::0;;;;;;2227:44:89;;;;;;;-1:-1:-1;;;2227:44:89::1;::::0;;::::1;;;-1:-1:-1::0;;;;2281:42:89::1;-1:-1:-1::0;;;2281:42:89;;;::::1;;;::::0;;1817:513::o;1058:401:209:-;1120:14;1150:30;1169:10;1150:18;:30::i;:::-;1146:307;;;-1:-1:-1;;;1352:14:209;1348:23;1335:37;1331:2;1327:46;1058:401;:::o;1146:307::-;-1:-1:-1;929:10:464;;6611:137:371:o;2916:469:284:-;3168:12;3186:2;-1:-1:-1;;;;;3186:7:284;3202:5;3186:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3167:46;;;3228:7;3223:156;;3257:19;-1:-1:-1;;;;;3251:34:284;;3294:5;3251:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3317:51:284;;-1:-1:-1;;;;;;;;3317:40:284;;;-1:-1:-1;3358:2:284;3362:5;3317:40;:51::i;2073:396::-;2234:3;-1:-1:-1;;;;;2225:12:284;:5;-1:-1:-1;;;;;2225:12:284;;2221:49;;;2253:7;;2221:49;-1:-1:-1;;;;;2284:22:284;;2301:4;2284:22;2280:183;;;2322:44;-1:-1:-1;;;;;2322:30:284;;2353:3;2358:7;2322:30;:44::i;:::-;2280:183;;;2397:55;-1:-1:-1;;;;;2397:34:284;;2432:5;2439:3;2444:7;2397:34;:55::i;7164:112:371:-;7231:7;7257:12;:10;:12::i;10035:332:89:-;10121:15;10139:26;10157:7;10139:17;:26::i;:::-;-1:-1:-1;;;;;10175:16:89;;;;;;:7;:16;;;;;:33;;:44;;10121;;-1:-1:-1;10121:44:89;;10175:33;;:16;:44;;10121;;10175;:::i;:::-;;;;-1:-1:-1;;;;;;;10229:16:89;;;;;;:7;:16;;;;;:59;;-1:-1:-1;;;;;;10229:59:89;-1:-1:-1;;;;;10272:15:89;10229:59;;;;10341:15;;:19;;10229:59;;-1:-1:-1;;;;;;;;10341:15:89;;;;:19;:::i;:::-;-1:-1:-1;;;;;10298:16:89;;;;;;;:7;:16;;;;;:62;;-1:-1:-1;;;;;10298:62:89;;;;-1:-1:-1;;;10298:62:89;-1:-1:-1;;;;;;;;10298:62:89;;;;;;;;;;-1:-1:-1;10035:332:89:o;1565:441:292:-;1640:13;1665:19;1697:10;1701:6;1697:1;:10;:::i;:::-;:14;;1710:1;1697:14;:::i;:::-;-1:-1:-1;;;;;1687:25:292;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1687:25:292;;1665:47;;-1:-1:-1;;;1722:6:292;1729:1;1722:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1722:15:292;;;;;;;;;-1:-1:-1;;;1747:6:292;1754:1;1747:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1747:15:292;;;;;;;;-1:-1:-1;1777:9:292;1789:10;1793:6;1789:1;:10;:::i;:::-;:14;;1802:1;1789:14;:::i;:::-;1777:26;;1772:132;1809:1;1805;:5;1772:132;;;-1:-1:-1;;;1856:5:292;1864:3;1856:11;1843:25;;;;;;;:::i;:::-;;;;1831:6;1838:1;1831:9;;;;;;;;:::i;:::-;;;;:37;-1:-1:-1;;;;;1831:37:292;;;;;;;;-1:-1:-1;1892:1:292;1882:11;;;;;1812:3;;;:::i;:::-;;;1772:132;;;-1:-1:-1;1921:10:292;;1913:55;;;;-1:-1:-1;;;1913:55:292;;22652:2:644;1913:55:292;;;22634:21:644;;;22671:18;;;22664:30;22730:34;22710:18;;;22703:62;22782:18;;1913:55:292;22450:356:644;1913:55:292;1992:6;1565:441;-1:-1:-1;;;1565:441:292:o;5036:168:69:-;5114:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;5114:23:69;;;;;;;;;;:30;;-1:-1:-1;;5114:30:69;5140:4;5114:30;;;5159:38;5186:10;;5123:4;;5159:38;;5114:14;5159:38;5036:168;;:::o;3690:253:70:-;3760:11;3774:17;;;:11;:17;;;;;:23;;;3834:1;;3774:17;3807:28;3834:1;3774:23;3807:28;:::i;:::-;;;;-1:-1:-1;;3846:17:70;;;;:11;:17;;;;;;;;:30;;;:25;;;:30;;;;;:40;;-1:-1:-1;;;;;3846:40:70;;;-1:-1:-1;;;;;;3846:40:70;;;;;;;3896:34;;;:25;;;;:34;;;;:40;3690:253::o;5253:204:69:-;5332:25;5343:4;5349:7;5332:10;:25::i;:::-;5374:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;5374:23:69;;;;;;;;;;5367:30;;-1:-1:-1;;5367:30:69;;;5412:38;5439:10;;5383:4;;5412:38;;5374:14;5412:38;5253:204;;:::o;11202:1257:89:-;-1:-1:-1;;;;;11328:16:89;;11277;11328;;;:7;:16;;;;;;;;11305:39;;;;;;;;;-1:-1:-1;;;;;11305:39:89;;;;-1:-1:-1;;;;;;;;11305:39:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11451:15;;11305:39;;;-1:-1:-1;;;11451:15:89;;;;11305:39;11477:851;11518:16;11514:1;:20;11477:851;;;11558:33;11594:20;;;:17;:20;;;;;;;;11558:56;;;;;;;;;-1:-1:-1;;;;;11558:56:89;;;;;-1:-1:-1;;;11558:56:89;;;;;;;;;;;-1:-1:-1;;;11558:56:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;11649:23;;;;:76;;11702:23;;11649:76;;;11675:9;:24;;;-1:-1:-1;;;;;11649:76:89;;-1:-1:-1;;;;;11629:96:89;;;11739:15;11757:9;:22;;;-1:-1:-1;;;;;11757:27:89;11783:1;11757:27;;:70;;11812:15;11757:70;;;11787:9;:22;;;-1:-1:-1;;;;;11757:70:89;;11739:88;;11843:22;11867;11893:138;11950:6;:19;;;11937:9;11927:7;:19;;;;:::i;:::-;11926:43;;;;:::i;:::-;11987:9;:30;;;11893:15;:138::i;:::-;11842:189;;;;12046:18;12066;12088:145;12121:8;12187:9;:32;;;12165:9;:18;;;-1:-1:-1;;;;;12148:35:89;:14;:35;;;;:::i;:::-;12147:72;;;;:::i;:::-;12088:15;:145::i;:::-;12045:188;;;;12259:17;:34;;;;;12280:13;12259:34;:58;;12309:8;12259:58;;;12296:10;12259:58;12248:69;;11544:784;;;;;;;11541:1;11536:6;;;;;:::i;:::-;;;11477:851;;;-1:-1:-1;12383:19:89;;12353:50;;12369:8;;12379:23;;-1:-1:-1;;;12383:19:89;;;;12379:2;:23;:::i;:::-;12353:15;:50::i;:::-;12431:20;;12338:65;;-1:-1:-1;12427:24:89;;-1:-1:-1;;;;12431:20:89;;;;12427:2;:24;:::i;:::-;12414:38;;;;:::i;5928:393:371:-;6033:18;;6021:8;:30;;6013:67;;;;-1:-1:-1;;;6013:67:371;;24753:2:644;6013:67:371;;;24735:21:644;24792:2;24772:18;;;24765:30;-1:-1:-1;;;24811:18:644;;;24804:54;24875:18;;6013:67:371;24551:348:644;6013:67:371;6112:8;6090:18;;:30;;;;;;;:::i;:::-;;;;-1:-1:-1;;6191:11:371;;6130:184;;-1:-1:-1;;;;;6191:11:371;6224:4;6243:7;6264:8;6286:18;6130:47;:184::i;6622:742:462:-;6768:12;6796:7;6792:566;;;-1:-1:-1;6826:10:462;6819:17;;6792:566;6937:17;;:21;6933:415;;7181:10;7175:17;7241:15;7228:10;7224:2;7220:19;7213:44;6933:415;7320:12;7313:20;;-1:-1:-1;;;7313:20:462;;;;;;;;:::i;1853:111:438:-;4910:13:436;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:436;;;;;;;:::i;:::-;1923:34:438::1;:32;:34::i;:::-;1853:111::o:0;735:205:226:-;874:58;;-1:-1:-1;;;;;25096:32:644;;874:58:226;;;25078:51:644;25145:18;;;25138:34;;;847:86:226;;867:5;;-1:-1:-1;;;897:23:226;25051:18:644;;874:58:226;;;;-1:-1:-1;;874:58:226;;;;;;;;;;;;;;-1:-1:-1;;;;;874:58:226;-1:-1:-1;;;;;;874:58:226;;;;;;;;;;847:19;:86::i;:::-;735:205;;;:::o;946:241::-;1111:68;;-1:-1:-1;;;;;25441:15:644;;;1111:68:226;;;25423:34:644;25493:15;;25473:18;;;25466:43;25525:18;;;25518:34;;;1084:96:226;;1104:5;;-1:-1:-1;;;1134:27:226;25358:18:644;;1111:68:226;25183:375:644;1339:493:241;1400:4;;1683:6;1679:28;;-1:-1:-1;1699:4:241;;-1:-1:-1;1705:1:241;1691:16;;1679:28;1733:5;;;1737:1;1733;:5;:1;1756:5;;;;:::i;:::-;;:10;1752:33;;1776:5;1783:1;1768:17;;;;;;;1752:33;1807:4;;-1:-1:-1;1813:1:241;-1:-1:-1;1339:493:241;;;;;;:::o;641:216::-;702:4;;763:5;;;786;;;782:28;;;801:5;808:1;793:17;;;;;;;1970:109:438;4910:13:436;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:436;;;;;;;:::i;3241:706:226:-;3660:23;3686:69;3714:4;3686:69;;;;;;;;;;;;;;;;;3694:5;-1:-1:-1;;;;;3686:27:226;;;:69;;;;;:::i;:::-;3769:17;;3660:95;;-1:-1:-1;3769:21:226;3765:176;;3864:10;3853:30;;;;;;;;;;;;:::i;:::-;3845:85;;;;-1:-1:-1;;;3845:85:226;;26047:2:644;3845:85:226;;;26029:21:644;26086:2;26066:18;;;26059:30;26125:34;26105:18;;;26098:62;-1:-1:-1;;;26176:18:644;;;26169:40;26226:19;;3845:85:226;25845:406:644;3827:223:288;3960:12;3991:52;4013:6;4021:4;4027:1;4030:12;3991:21;:52::i;:::-;3984:59;3827:223;-1:-1:-1;;;;3827:223:288:o;4914:501::-;5079:12;5136:5;5111:21;:30;;5103:81;;;;-1:-1:-1;;;5103:81:288;;26458:2:644;5103:81:288;;;26440:21:644;26497:2;26477:18;;;26470:30;26536:34;26516:18;;;26509:62;-1:-1:-1;;;26587:18:644;;;26580:36;26633:19;;5103:81:288;26256:402:644;5103:81:288;5202:18;5213:6;5202:10;:18::i;:::-;5194:60;;;;-1:-1:-1;;;5194:60:288;;26865:2:644;5194:60:288;;;26847:21:644;26904:2;26884:18;;;26877:30;26943:31;26923:18;;;26916:59;26992:18;;5194:60:288;26663:353:644;5194:60:288;5266:12;5280:23;5307:6;-1:-1:-1;;;;;5307:11:288;5327:5;5335:4;5307:33;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5265:75;;;;5357:51;5374:7;5383:10;5395:12;5357:16;:51::i;:::-;5350:58;4914:501;-1:-1:-1;;;;;;;4914:501:288:o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;375:248:644;443:6;451;504:2;492:9;483:7;479:23;475:32;472:52;;;520:1;517;510:12;472:52;-1:-1:-1;;543:23:644;;;613:2;598:18;;;585:32;;-1:-1:-1;375:248:644:o;628:180::-;687:6;740:2;728:9;719:7;715:23;711:32;708:52;;;756:1;753;746:12;708:52;-1:-1:-1;779:23:644;;628:180;-1:-1:-1;628:180:644:o;1180:173::-;1248:20;;-1:-1:-1;;;;;1297:31:644;;1287:42;;1277:70;;1343:1;1340;1333:12;1358:254;1426:6;1434;1487:2;1475:9;1466:7;1462:23;1458:32;1455:52;;;1503:1;1500;1493:12;1455:52;1539:9;1526:23;1516:33;;1568:38;1602:2;1591:9;1587:18;1568:38;:::i;:::-;1558:48;;1358:254;;;;;:::o;1617:203::-;-1:-1:-1;;;;;1781:32:644;;;;1763:51;;1751:2;1736:18;;1617:203::o;1825:186::-;1884:6;1937:2;1925:9;1916:7;1912:23;1908:32;1905:52;;;1953:1;1950;1943:12;1905:52;1976:29;1995:9;1976:29;:::i;3088:127::-;3149:10;3144:3;3140:20;3137:1;3130:31;3180:4;3177:1;3170:15;3204:4;3201:1;3194:15;3220:275;3291:2;3285:9;3356:2;3337:13;;-1:-1:-1;;3333:27:644;3321:40;;-1:-1:-1;;;;;3376:34:644;;3412:22;;;3373:62;3370:88;;;3438:18;;:::i;:::-;3474:2;3467:22;3220:275;;-1:-1:-1;3220:275:644:o;3500:531::-;3543:5;3596:3;3589:4;3581:6;3577:17;3573:27;3563:55;;3614:1;3611;3604:12;3563:55;3650:6;3637:20;-1:-1:-1;;;;;3672:2:644;3669:26;3666:52;;;3698:18;;:::i;:::-;3742:55;3785:2;3766:13;;-1:-1:-1;;3762:27:644;3791:4;3758:38;3742:55;:::i;:::-;3822:2;3813:7;3806:19;3868:3;3861:4;3856:2;3848:6;3844:15;3840:26;3837:35;3834:55;;;3885:1;3882;3875:12;3834:55;3950:2;3943:4;3935:6;3931:17;3924:4;3915:7;3911:18;3898:55;3998:1;3973:16;;;3991:4;3969:27;3962:38;;;;3977:7;3500:531;-1:-1:-1;;;3500:531:644:o;4036:322::-;4105:6;4158:2;4146:9;4137:7;4133:23;4129:32;4126:52;;;4174:1;4171;4164:12;4126:52;4214:9;4201:23;-1:-1:-1;;;;;4239:6:644;4236:30;4233:50;;;4279:1;4276;4269:12;4233:50;4302;4344:7;4335:6;4324:9;4320:22;4302:50;:::i;4998:626::-;5095:6;5103;5156:2;5144:9;5135:7;5131:23;5127:32;5124:52;;;5172:1;5169;5162:12;5124:52;5212:9;5199:23;-1:-1:-1;;;;;5282:2:644;5274:6;5271:14;5268:34;;;5298:1;5295;5288:12;5268:34;5336:6;5325:9;5321:22;5311:32;;5381:7;5374:4;5370:2;5366:13;5362:27;5352:55;;5403:1;5400;5393:12;5352:55;5443:2;5430:16;5469:2;5461:6;5458:14;5455:34;;;5485:1;5482;5475:12;5455:34;5538:7;5533:2;5523:6;5520:1;5516:14;5512:2;5508:23;5504:32;5501:45;5498:65;;;5559:1;5556;5549:12;5498:65;5590:2;5582:11;;;;;5612:6;;-1:-1:-1;4998:626:644;;-1:-1:-1;;;;4998:626:644:o;5629:258::-;5701:1;5711:113;5725:6;5722:1;5719:13;5711:113;;;5801:11;;;5795:18;5782:11;;;5775:39;5747:2;5740:10;5711:113;;;5842:6;5839:1;5836:13;5833:48;;;-1:-1:-1;;5877:1:644;5859:16;;5852:27;5629:258::o;5892:257::-;5933:3;5971:5;5965:12;5998:6;5993:3;5986:19;6014:63;6070:6;6063:4;6058:3;6054:14;6047:4;6040:5;6036:16;6014:63;:::i;:::-;6131:2;6110:15;-1:-1:-1;;6106:29:644;6097:39;;;;6138:4;6093:50;;5892:257;-1:-1:-1;;5892:257:644:o;6154:800::-;6314:4;6343:2;6383;6372:9;6368:18;6413:2;6402:9;6395:21;6436:6;6471;6465:13;6502:6;6494;6487:22;6540:2;6529:9;6525:18;6518:25;;6602:2;6592:6;6589:1;6585:14;6574:9;6570:30;6566:39;6552:53;;6640:2;6632:6;6628:15;6661:1;6671:254;6685:6;6682:1;6679:13;6671:254;;;6778:2;6774:7;6762:9;6754:6;6750:22;6746:36;6741:3;6734:49;6806:39;6838:6;6829;6823:13;6806:39;:::i;:::-;6796:49;-1:-1:-1;6903:12:644;;;;6868:15;;;;6707:1;6700:9;6671:254;;;-1:-1:-1;6942:6:644;;6154:800;-1:-1:-1;;;;;;;6154:800:644:o;6959:171::-;7026:20;;-1:-1:-1;;;;;7075:30:644;;7065:41;;7055:69;;7120:1;7117;7110:12;7135:184;7193:6;7246:2;7234:9;7225:7;7221:23;7217:32;7214:52;;;7262:1;7259;7252:12;7214:52;7285:28;7303:9;7285:28;:::i;7529:1587::-;7685:6;7693;7701;7709;7717;7725;7733;7741;7794:3;7782:9;7773:7;7769:23;7765:33;7762:53;;;7811:1;7808;7801:12;7762:53;7834:29;7853:9;7834:29;:::i;:::-;7824:39;;7882:2;7935;7924:9;7920:18;7907:32;-1:-1:-1;;;;;7999:2:644;7991:6;7988:14;7985:34;;;8015:1;8012;8005:12;7985:34;8038:50;8080:7;8071:6;8060:9;8056:22;8038:50;:::i;:::-;8028:60;;8141:2;8130:9;8126:18;8113:32;8097:48;;8170:2;8160:8;8157:16;8154:36;;;8186:1;8183;8176:12;8154:36;8224:8;8213:9;8209:24;8199:34;;8271:7;8264:4;8260:2;8256:13;8252:27;8242:55;;8293:1;8290;8283:12;8242:55;8329:2;8316:16;8351:2;8347;8344:10;8341:36;;;8357:18;;:::i;:::-;8403:2;8400:1;8396:10;8386:20;;8426:28;8450:2;8446;8442:11;8426:28;:::i;:::-;8488:15;;;8558:11;;;8554:20;;;8519:12;;;;8586:19;;;8583:39;;;8618:1;8615;8608:12;8583:39;8642:11;;;;8662:148;8678:6;8673:3;8670:15;8662:148;;;8744:23;8763:3;8744:23;:::i;:::-;8732:36;;8695:12;;;;8788;;;;8662:148;;;8829:5;8819:15;;;;;;;;8853:38;8887:2;8876:9;8872:18;8853:38;:::i;:::-;8843:48;;8910:39;8944:3;8933:9;8929:19;8910:39;:::i;:::-;8900:49;;8968:38;9001:3;8990:9;8986:19;8968:38;:::i;:::-;8958:48;;9053:3;9042:9;9038:19;9025:33;9015:43;;9105:3;9094:9;9090:19;9077:33;9067:43;;7529:1587;;;;;;;;;;;:::o;9121:219::-;9270:2;9259:9;9252:21;9233:4;9290:44;9330:2;9319:9;9315:18;9307:6;9290:44;:::i;9345:338::-;9547:2;9529:21;;;9586:2;9566:18;;;9559:30;-1:-1:-1;;;9620:2:644;9605:18;;9598:44;9674:2;9659:18;;9345:338::o;9688:127::-;9749:10;9744:3;9740:20;9737:1;9730:31;9780:4;9777:1;9770:15;9804:4;9801:1;9794:15;9820:229;9859:4;-1:-1:-1;;;;;9956:10:644;;;;9926;;9978:12;;;9975:38;;;9993:18;;:::i;:::-;10030:13;;9820:229;-1:-1:-1;;;9820:229:644:o;10802:355::-;11004:2;10986:21;;;11043:2;11023:18;;;11016:30;11082:33;11077:2;11062:18;;11055:61;11148:2;11133:18;;10802:355::o;11162:184::-;11232:6;11285:2;11273:9;11264:7;11260:23;11256:32;11253:52;;;11301:1;11298;11291:12;11253:52;-1:-1:-1;11324:16:644;;11162:184;-1:-1:-1;11162:184:644:o;11351:125::-;11391:4;11419:1;11416;11413:8;11410:34;;;11424:18;;:::i;:::-;-1:-1:-1;11461:9:644;;11351:125::o;11481:128::-;11521:3;11552:1;11548:6;11545:1;11542:13;11539:39;;;11558:18;;:::i;:::-;-1:-1:-1;11594:9:644;;11481:128::o;12327:127::-;12388:10;12383:3;12379:20;12376:1;12369:31;12419:4;12416:1;12409:15;12443:4;12440:1;12433:15;12459:521;12536:4;12542:6;12602:11;12589:25;12696:2;12692:7;12681:8;12665:14;12661:29;12657:43;12637:18;12633:68;12623:96;;12715:1;12712;12705:12;12623:96;12742:33;;12794:20;;;-1:-1:-1;;;;;;12826:30:644;;12823:50;;;12869:1;12866;12859:12;12823:50;12902:4;12890:17;;-1:-1:-1;12933:14:644;12929:27;;;12919:38;;12916:58;;;12970:1;12967;12960:12;12985:135;13024:3;-1:-1:-1;;13045:17:644;;13042:43;;;13065:18;;:::i;:::-;-1:-1:-1;13112:1:644;13101:13;;12985:135::o;14968:273::-;15036:6;15089:2;15077:9;15068:7;15064:23;15060:32;15057:52;;;15105:1;15102;15095:12;15057:52;15137:9;15131:16;15187:4;15180:5;15176:16;15169:5;15166:27;15156:55;;15207:1;15204;15197:12;15445:380;15524:1;15520:12;;;;15567;;;15588:61;;15642:4;15634:6;15630:17;15620:27;;15588:61;15695:2;15687:6;15684:14;15664:18;15661:38;15658:161;;;15741:10;15736:3;15732:20;15729:1;15722:31;15776:4;15773:1;15766:15;15804:4;15801:1;15794:15;16519:236;16558:3;-1:-1:-1;;;;;16631:2:644;16628:1;16624:10;16661:2;16658:1;16654:10;16692:3;16688:2;16684:12;16679:3;16676:21;16673:47;;;16700:18;;:::i;:::-;16736:13;;16519:236;-1:-1:-1;;;;16519:236:644:o;17814:127::-;17875:10;17870:3;17866:20;17863:1;17856:31;17906:4;17903:1;17896:15;17930:4;17927:1;17920:15;17946:784;-1:-1:-1;;;18352:3:644;18345:36;18327:3;18410:6;18404:13;18426:62;18481:6;18476:2;18471:3;18467:12;18460:4;18452:6;18448:17;18426:62;:::i;:::-;-1:-1:-1;;;18547:2:644;18507:16;;;18539:11;;;18532:40;18597:13;;18619:63;18597:13;18668:2;18660:11;;18653:4;18641:17;;18619:63;:::i;:::-;18702:17;18721:2;18698:26;;17946:784;-1:-1:-1;;;;17946:784:644:o;19074:381::-;19271:2;19260:9;19253:21;19234:4;19297:44;19337:2;19326:9;19322:18;19314:6;19297:44;:::i;:::-;19389:9;19381:6;19377:22;19372:2;19361:9;19357:18;19350:50;19417:32;19442:6;19434;19417:32;:::i;20552:274::-;20681:3;20719:6;20713:13;20735:53;20781:6;20776:3;20769:4;20761:6;20757:17;20735:53;:::i;:::-;20804:16;;;;;20552:274;-1:-1:-1;;20552:274:644:o;20831:407::-;21033:2;21015:21;;;21072:2;21052:18;;;21045:30;21111:34;21106:2;21091:18;;21084:62;-1:-1:-1;;;21177:2:644;21162:18;;21155:41;21228:3;21213:19;;20831:407::o;22136:168::-;22176:7;22242:1;22238;22234:6;22230:14;22227:1;22224:21;22219:1;22212:9;22205:17;22201:45;22198:71;;;22249:18;;:::i;:::-;-1:-1:-1;22289:9:644;;22136:168::o;22309:136::-;22348:3;22376:5;22366:39;;22385:18;;:::i;:::-;-1:-1:-1;;;22421:18:644;;22309:136::o;22811:127::-;22872:10;22867:3;22863:20;22860:1;22853:31;22903:4;22900:1;22893:15;22927:4;22924:1;22917:15;22943:217;22983:1;23009;22999:132;;23053:10;23048:3;23044:20;23041:1;23034:31;23088:4;23085:1;23078:15;23116:4;23113:1;23106:15;22999:132;-1:-1:-1;23145:9:644;;22943:217::o;23165:422::-;23254:1;23297:5;23254:1;23311:270;23332:7;23322:8;23319:21;23311:270;;;23391:4;23387:1;23383:6;23379:17;23373:4;23370:27;23367:53;;;23400:18;;:::i;:::-;23450:7;23440:8;23436:22;23433:55;;;23470:16;;;;23433:55;23549:22;;;;23509:15;;;;23311:270;;;23315:3;23165:422;;;;;:::o;23592:806::-;23641:5;23671:8;23661:80;;-1:-1:-1;23712:1:644;23726:5;;23661:80;23760:4;23750:76;;-1:-1:-1;23797:1:644;23811:5;;23750:76;23842:4;23860:1;23855:59;;;;23928:1;23923:130;;;;23835:218;;23855:59;23885:1;23876:10;;23899:5;;;23923:130;23960:3;23950:8;23947:17;23944:43;;;23967:18;;:::i;:::-;-1:-1:-1;;24023:1:644;24009:16;;24038:5;;23835:218;;24137:2;24127:8;24124:16;24118:3;24112:4;24109:13;24105:36;24099:2;24089:8;24086:16;24081:2;24075:4;24072:12;24068:35;24065:77;24062:159;;;-1:-1:-1;24174:19:644;;;24206:5;;24062:159;24253:34;24278:8;24272:4;24253:34;:::i;:::-;24323:6;24319:1;24315:6;24311:19;24302:7;24299:32;24296:58;;;24334:18;;:::i;:::-;24372:20;;23592:806;-1:-1:-1;;;23592:806:644:o;24403:143::-;24462:5;24491:49;24532:6;24522:8;24518:21;24512:4;24491:49;:::i;25563:277::-;25630:6;25683:2;25671:9;25662:7;25658:23;25654:32;25651:52;;;25699:1;25696;25689:12;25651:52;25731:9;25725:16;25784:5;25777:13;25770:21;25763:5;25760:32;25750:60;;25806:1;25803;25796:12",
    "linkReferences": {},
    "immutableReferences": {
      "28192": [
        {
          "start": 428,
          "length": 32
        },
        {
          "start": 2302,
          "length": 32
        },
        {
          "start": 2478,
          "length": 32
        },
        {
          "start": 4681,
          "length": 32
        },
        {
          "start": 4777,
          "length": 32
        },
        {
          "start": 7625,
          "length": 32
        },
        {
          "start": 8756,
          "length": 32
        },
        {
          "start": 12308,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "DEFAULT_ADMIN_ROLE()": "a217fddf",
    "claimRewards()": "372500ab",
    "contractType()": "cb2ef6f7",
    "contractURI()": "e8a3d485",
    "contractVersion()": "a0a8e460",
    "depositRewardTokens(uint256)": "16c621e0",
    "getRewardRatio()": "97e1b4bc",
    "getRewardTokenBalance()": "93ce5343",
    "getRoleAdmin(bytes32)": "248a9ca3",
    "getRoleMember(bytes32,uint256)": "9010d07c",
    "getRoleMemberCount(bytes32)": "ca15c873",
    "getStakeInfo(address)": "c3453153",
    "getTimeUnit()": "d68124c7",
    "grantRole(bytes32,address)": "2f2ff15d",
    "hasRole(bytes32,address)": "91d14854",
    "hasRoleWithSwitch(bytes32,address)": "a32fa5b3",
    "initialize(address,string,address[],address,address,uint80,uint256,uint256)": "df654376",
    "isTrustedForwarder(address)": "572b6c05",
    "multicall(bytes[])": "ac9650d8",
    "renounceRole(bytes32,address)": "36568abe",
    "revokeRole(bytes32,address)": "d547741f",
    "rewardToken()": "f7c618c1",
    "rewardTokenDecimals()": "9bdcecd1",
    "setContractURI(string)": "938e3d7b",
    "setRewardRatio(uint256,uint256)": "001b7934",
    "setTimeUnit(uint80)": "b218f069",
    "stake(uint256)": "a694fc3a",
    "stakers(address)": "9168ae72",
    "stakersArray(uint256)": "5357e916",
    "stakingToken()": "72f702f3",
    "stakingTokenBalance()": "8caaa271",
    "stakingTokenDecimals()": "b9f7a7b5",
    "withdraw(uint256)": "2e1a7d4d",
    "withdrawRewardTokens(uint256)": "cb43b2dd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nativeTokenWrapper\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"prevURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newURI\",\"type\":\"string\"}],\"name\":\"ContractURIUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"RewardTokensDepositedByAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"RewardTokensWithdrawnByAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"}],\"name\":\"RewardsClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensStaked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newAmount\",\"type\":\"uint256\"}],\"name\":\"UpdatedMinStakeAmount\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldNumerator\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newNumerator\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldDenominator\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newDenominator\",\"type\":\"uint256\"}],\"name\":\"UpdatedRewardRatio\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldTimeUnit\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newTimeUnit\",\"type\":\"uint256\"}],\"name\":\"UpdatedTimeUnit\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractType\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractVersion\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"depositRewardTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRewardRatio\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_numerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_denominator\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRewardTokenBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_staker\",\"type\":\"address\"}],\"name\":\"getStakeInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokensStaked\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_rewards\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTimeUnit\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"_timeUnit\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRoleWithSwitch\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_defaultAdmin\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_contractURI\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"_trustedForwarders\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"_rewardToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_stakingToken\",\"type\":\"address\"},{\"internalType\":\"uint80\",\"name\":\"_timeUnit\",\"type\":\"uint80\"},{\"internalType\":\"uint256\",\"name\":\"_rewardRatioNumerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_rewardRatioDenominator\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardTokenDecimals\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"setContractURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_numerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_denominator\",\"type\":\"uint256\"}],\"name\":\"setRewardRatio\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_timeUnit\",\"type\":\"uint80\"}],\"name\":\"setTimeUnit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakers\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"timeOfLastUpdate\",\"type\":\"uint128\"},{\"internalType\":\"uint64\",\"name\":\"conditionIdOflastUpdate\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"amountStaked\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unclaimedRewards\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stakersArray\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingTokenBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingTokenDecimals\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawRewardTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"claimRewards()\":{\"details\":\"See {_claimRewards}. Override that to implement custom logic.             See {_calculateRewards} for reward-calculation logic.\"},\"contractType()\":{\"details\":\"Returns the module type of the contract.\"},\"contractVersion()\":{\"details\":\"Returns the version of the contract.\"},\"depositRewardTokens(uint256)\":{\"details\":\"Admin deposits reward tokens.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"See {grantRole} and {revokeRole}.                  To change a role's admin, use {_setRoleAdmin}.\",\"params\":{\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns `member` who has `role`, at `index` of role-members list.                  See struct {RoleMembers}, and mapping {roleMembers}\",\"params\":{\"index\":\"Index in list of current members for the role.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"},\"returns\":{\"member\":\" Address of account that has `role`\"}},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns `count` of accounts that have `role`.                  See struct {RoleMembers}, and mapping {roleMembers}\",\"params\":{\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"},\"returns\":{\"count\":\"  Total number of accounts that have `role`\"}},\"getStakeInfo(address)\":{\"params\":{\"_staker\":\"Address for which to calculated rewards.\"},\"returns\":{\"_rewards\":\"       Available reward amount.\",\"_tokensStaked\":\"  Amount of tokens staked.\"}},\"grantRole(bytes32,address)\":{\"details\":\"Caller must have admin role for the `role`.                  Emits {RoleGranted Event}.\",\"params\":{\"account\":\"Address of the account to which the role is being granted.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\",\"params\":{\"account\":\"Address of the account for which the role is being checked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"hasRoleWithSwitch(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.                  Role restrictions can be swtiched on and off:                      - If address(0) has ROLE, then the ROLE restrictions                        don't apply.                      - If address(0) does not have ROLE, then the ROLE                        restrictions will apply.\",\"params\":{\"account\":\"Address of the account for which the role is being checked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"initialize(address,string,address[],address,address,uint80,uint256,uint256)\":{\"details\":\"Initializes the contract, like a constructor.\"},\"multicall(bytes[])\":{\"details\":\"Receives and executes a batch of function calls on this contract.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Caller must have the `role`, with caller being the same as `account`.                  Emits {RoleRevoked Event}.\",\"params\":{\"account\":\"Address of the account from which the role is being revoked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"revokeRole(bytes32,address)\":{\"details\":\"Caller must have admin role for the `role`.                  Emits {RoleRevoked Event}.\",\"params\":{\"account\":\"Address of the account from which the role is being revoked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"setContractURI(string)\":{\"details\":\"Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.\",\"params\":{\"_uri\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"setRewardRatio(uint256,uint256)\":{\"details\":\"Only admin/authorized-account can call it.\",\"params\":{\"_denominator\":\"Reward ratio denominator.\",\"_numerator\":\"Reward ratio numerator.\"}},\"setTimeUnit(uint80)\":{\"details\":\"Only admin/authorized-account can call it.\",\"params\":{\"_timeUnit\":\"New time unit.\"}},\"stake(uint256)\":{\"details\":\"See {_stake}. Override that to implement custom logic.\",\"params\":{\"_amount\":\"Amount to stake.\"}},\"withdraw(uint256)\":{\"details\":\"See {_withdraw}. Override that to implement custom logic.\",\"params\":{\"_amount\":\"Amount to withdraw.\"}},\"withdrawRewardTokens(uint256)\":{\"details\":\"Admin can withdraw excess reward tokens.\"}},\"stateVariables\":{\"rewardToken\":{\"details\":\"ERC20 Reward Token address. See {_mintRewards} below.\"},\"rewardTokenBalance\":{\"details\":\"Total amount of reward tokens in the contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"claimRewards()\":{\"notice\":\"Claim accumulated rewards.\"},\"contractURI()\":{\"notice\":\"Returns the contract metadata URI.\"},\"getRewardTokenBalance()\":{\"notice\":\"View total rewards available in the staking contract.\"},\"getRoleAdmin(bytes32)\":{\"notice\":\"Returns the admin role that controls the specified role.\"},\"getRoleMember(bytes32,uint256)\":{\"notice\":\"Returns the role-member from a list of members for a role,                  at a given index.\"},\"getRoleMemberCount(bytes32)\":{\"notice\":\"Returns total number of accounts that have a role.\"},\"getStakeInfo(address)\":{\"notice\":\"View amount staked and rewards for a user.\"},\"grantRole(bytes32,address)\":{\"notice\":\"Grants a role to an account, if not previously granted.\"},\"hasRole(bytes32,address)\":{\"notice\":\"Checks whether an account has a particular role.\"},\"hasRoleWithSwitch(bytes32,address)\":{\"notice\":\"Checks whether an account has a particular role;                  role restrictions can be swtiched on and off.\"},\"renounceRole(bytes32,address)\":{\"notice\":\"Revokes role from the account.\"},\"revokeRole(bytes32,address)\":{\"notice\":\"Revokes role from an account.\"},\"setContractURI(string)\":{\"notice\":\"Lets a contract admin set the URI for contract-level metadata.\"},\"setRewardRatio(uint256,uint256)\":{\"notice\":\"Set rewards per unit of time.           Interpreted as (numerator/denominator) rewards per second/per day/etc based on time-unit.           For e.g., ratio of 1/20 would mean 1 reward token for every 20 tokens staked.\"},\"setTimeUnit(uint80)\":{\"notice\":\"Set time unit. Set as a number of seconds.           Could be specified as -- x * 1 hours, x * 1 days, etc.\"},\"stake(uint256)\":{\"notice\":\"Stake ERC20 Tokens.\"},\"withdraw(uint256)\":{\"notice\":\"Withdraw staked ERC20 tokens.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/prebuilts/staking/TokenStake.sol\":\"TokenStake\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@std/=lib/forge-std/src/\",\":@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/\",\":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/\",\":contracts/=contracts/\",\":ds-test/=lib/ds-test/src/\",\":dynamic-contracts/=lib/dynamic-contracts/src/\",\":erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/ERC721A-Upgradeable/\",\":erc721a/=lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/\"]},\"sources\":{\"contracts/eip/interface/IERC20.sol\":{\"keccak256\":\"0x5bdd9dd97ba7d9d7c9a2953db287e4d9d7fa93a27a96bc2e72a8da4919b6f7ff\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://45527c265ee5de6bbb3ecfc052e7b1175531a82c2ac16172020aee855f7dd592\",\"dweb:/ipfs/QmVZthqbG916qUQSwv1LE8bB58ZGQ1VfQbLbbRV5urfEYA\"]},\"contracts/eip/interface/IERC20Metadata.sol\":{\"keccak256\":\"0xc2500d7a12573fc6f9714d806bec722ad4110a68e6dd14b69903042421001734\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://02423735619f14f3a13fae0ad6e407385565f159ad956c8bd1c14b3605a73a65\",\"dweb:/ipfs/QmYfYWh5wGidaQ7qDbC8oSuQ3gsnd3moJbWZ8yBzMnrYz1\"]},\"contracts/extension/ContractMetadata.sol\":{\"keccak256\":\"0xf53ab08ec3057056872c15e35a5610f7a43426bd2829786aed006d527177adfe\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ee132ae5efdd372152febfcd8fd3a7cb82c7019367d92c886f5096003a79f392\",\"dweb:/ipfs/QmRW1cGWmZAu57huZpTUwsWB8AxUFrBp6g4NqozXpbWsR6\"]},\"contracts/extension/Permissions.sol\":{\"keccak256\":\"0xe7e18181f2d2c8bae4afc7ee69ce1d547e7aa583182e8e0853ca33c49a28c04d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://75d5f5a9356c290e398a5dd05914b59c3d09e6fedde2da80b6f1012aedf323f8\",\"dweb:/ipfs/QmNrrf8Uyq33XBsE2NqVTW6HVX3XixFTjCG8KGbGxdEE84\"]},\"contracts/extension/PermissionsEnumerable.sol\":{\"keccak256\":\"0x434a6ffc16ddc437ffb37b8fbe4c9696385252f15a617c4606b8c5e10561caf3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1a9d4dac4bf2ae3c3c086af1956dc25e8b149b0914125e660cc0648791c247cb\",\"dweb:/ipfs/QmTMEggPdBea1JCamsShwRf3en2FgVTXNTPJ2isFtBk4Kk\"]},\"contracts/extension/Staking20Upgradeable.sol\":{\"keccak256\":\"0x317714dec494fe9ddef56458d2ffca45314eebfcb7fdefeb79015f4e1e1180de\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8761a1707cb84f332a3b73f6015939aac5c463203aa8c3cb76e6a0f671e34dfc\",\"dweb:/ipfs/QmVcvLvNCx6do9PS2rtzrf2bCBsxzu7Xgij4SvguKsjm9d\"]},\"contracts/extension/interface/IContractMetadata.sol\":{\"keccak256\":\"0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a\",\"dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr\"]},\"contracts/extension/interface/IPermissions.sol\":{\"keccak256\":\"0xc0cd1f87bac474a06f85e2b341b9b57662aee957fc24180d42c872481c2f2ae3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7dec3eed451d63867531d693f0be3279fa2c9aef3130f0826c3520c06820fa5d\",\"dweb:/ipfs/QmTYANrcPdd9SCe99DWsKJ19evNRQKQGZeoS1Keew4M2cS\"]},\"contracts/extension/interface/IPermissionsEnumerable.sol\":{\"keccak256\":\"0x2e742c18a4481bad41d56424cd16c52def2fb415f69e5fb5f67d8d979300ff95\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d9be33bb865e3e82aca540a3e38cbc2bf2e431f9d1bf39c50d6c757e7b7bf3ee\",\"dweb:/ipfs/Qmdad1Xqj5SQ44Bk4bwD2uA36XnGHtqnVYSomKZQvnUBVG\"]},\"contracts/extension/interface/IStaking20.sol\":{\"keccak256\":\"0xb7abd61f05ee0607bae639fd4f5f947aa78e067e3201af4d18e58069cba69828\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://063d9a39c5c7078fe3d4f5b7908333d5d36e0c1b59433b1d8332871ec9da0852\",\"dweb:/ipfs/QmRTunZrRtDaV2YH54TT49dScAKhcwL2QdmGNv9bhYF7iL\"]},\"contracts/external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol\":{\"keccak256\":\"0xdbc96b1264d2e2bd82cb7e697056929325e09d1641321145a8cec53b22b9567d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ca7ccf947d21d98878ec18e941b750cd2ae7c563e6d2a707da4f806038d67c8\",\"dweb:/ipfs/QmYVLYUPMD3b95vKrS5yjxcz2MDNNzkWJY9xc9bc9oTZdh\"]},\"contracts/external-deps/openzeppelin/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xa6149938a7c7c8af4244743aeaafcfb1fd9ce15ad45de58fa9576f0ed5599b2c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://839aa4ea6ef6d1972881bfd7420a9ddcd2f37139e3f0bf25310f93f48410702d\",\"dweb:/ipfs/QmSH65kStfbgMbfjFdfJqV412omPy6nB1JMvMt9q7SsytW\"]},\"contracts/external-deps/openzeppelin/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"contracts/infra/interface/IWETH.sol\":{\"keccak256\":\"0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1\",\"dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU\"]},\"contracts/lib/CurrencyTransferLib.sol\":{\"keccak256\":\"0x4a30bc9a8cd6cc8b855621fb1a651e2c3a1639b0ad153f1139c3ba463605672d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://417cc64ec6393f3cc89981ca9c32bbcc444a5f91363d69f84dd8ace888b2b859\",\"dweb:/ipfs/QmZeaQsYGx4VNoP8e1fcwC87PwvyakheWYeuwEwhFSJnvB\"]},\"contracts/lib/TWAddress.sol\":{\"keccak256\":\"0x460f032cf3bf43d586e126ab2ec8be4335767f497ccb699741546a1cfba94a7e\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://28fcbf6dde6c2eeb9864f6ec6f21dcc81ec426877debf4b912f2f3bc5b0fc91e\",\"dweb:/ipfs/QmS1SHrZDfefX8EE7DdvszTY6VPCHydf4HM7NKJ2gP72e6\"]},\"contracts/lib/TWStrings.sol\":{\"keccak256\":\"0xef7e9954d888f99baffc10db1d9bf6a2beb66c842d81dea90352ddded22cbbf8\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://832415134684f5413f9d0f3f5536aa30848690cfe54769f7730a3807438f3bf9\",\"dweb:/ipfs/QmduTiUdtsnyJVMXpdomohEWDVg46aZhnS9uTURu4x1NYt\"]},\"contracts/prebuilts/interface/staking/ITokenStake.sol\":{\"keccak256\":\"0x5e57570a9b8db064bfca10c4843d82551e89d230116f582eba7c9d5850460ed1\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://417939013614af1de97cc4143f7e71b5468513cafc984c6a6e1e1a1d11bb1ea1\",\"dweb:/ipfs/QmcRBdvc7dM9F3yGq1YUYvz6Cs7N4iJw4LLDLdGokPrAqC\"]},\"contracts/prebuilts/staking/TokenStake.sol\":{\"keccak256\":\"0xefa10aefbf2a6c9b0738d8b55049ef9345e5b561ded89f8bf96e850933c5f0dd\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1781bad4e5ec9d418a653b369ce9f9af680cd62ba4a562d10e96cf418048fb04\",\"dweb:/ipfs/QmTUANgN6NxoYyJh1CNvwAatxNQeKLYfuqbEg3LUgHvfUK\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x8cc03c5ac17e8a7396e487cda41fc1f1dfdb91db7d528e6da84bee3b6dd7e167\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://607818f1b44548c2d8268176f73cdb290e1faed971b1061930d92698366e2a11\",\"dweb:/ipfs/QmQibMe3r5no95b6q7isGT5R75V8xSofWEDLXzp95b7LgZ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/MulticallUpgradeable.sol\":{\"keccak256\":\"0xb8709268fac307114f6cbb5e3cee798d91cd0adfea4d337c4920f8f0b2414f15\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34975544d7bea644eee9ad6e9034b7bbbc0b165159b77f60d0c6004300ab601d\",\"dweb:/ipfs/QmUW5vLADhvVqSdBe96QFM6gzwtv9pagpaUkzXmaeQTWPQ\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.12+commit.f00d7308"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_nativeTokenWrapper",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "prevURI",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "newURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ContractURIUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RewardTokensDepositedByAdmin",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RewardTokensWithdrawnByAdmin",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "rewardAmount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RewardsClaimed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleAdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleGranted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleRevoked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensStaked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensWithdrawn",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "oldAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newAmount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "UpdatedMinStakeAmount",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "oldNumerator",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newNumerator",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "oldDenominator",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newDenominator",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "UpdatedRewardRatio",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "oldTimeUnit",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newTimeUnit",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "UpdatedTimeUnit",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DEFAULT_ADMIN_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimRewards"
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "contractType",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "contractURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "contractVersion",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "depositRewardTokens"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getRewardRatio",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "_numerator",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_denominator",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getRewardTokenBalance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleAdmin",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleMember",
          "outputs": [
            {
              "internalType": "address",
              "name": "member",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleMemberCount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "count",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_staker",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getStakeInfo",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "_tokensStaked",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_rewards",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getTimeUnit",
          "outputs": [
            {
              "internalType": "uint80",
              "name": "_timeUnit",
              "type": "uint80"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRole",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRoleWithSwitch",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_defaultAdmin",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "_contractURI",
              "type": "string"
            },
            {
              "internalType": "address[]",
              "name": "_trustedForwarders",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "_rewardToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_stakingToken",
              "type": "address"
            },
            {
              "internalType": "uint80",
              "name": "_timeUnit",
              "type": "uint80"
            },
            {
              "internalType": "uint256",
              "name": "_rewardRatioNumerator",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_rewardRatioDenominator",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "forwarder",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isTrustedForwarder",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes[]",
              "name": "data",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "multicall",
          "outputs": [
            {
              "internalType": "bytes[]",
              "name": "results",
              "type": "bytes[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeRole"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "rewardToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "rewardTokenDecimals",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_uri",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setContractURI"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_numerator",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_denominator",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRewardRatio"
        },
        {
          "inputs": [
            {
              "internalType": "uint80",
              "name": "_timeUnit",
              "type": "uint80"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setTimeUnit"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "stake"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "stakers",
          "outputs": [
            {
              "internalType": "uint128",
              "name": "timeOfLastUpdate",
              "type": "uint128"
            },
            {
              "internalType": "uint64",
              "name": "conditionIdOflastUpdate",
              "type": "uint64"
            },
            {
              "internalType": "uint256",
              "name": "amountStaked",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "unclaimedRewards",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "stakersArray",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "stakingToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "stakingTokenBalance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "stakingTokenDecimals",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawRewardTokens"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "claimRewards()": {
            "details": "See {_claimRewards}. Override that to implement custom logic.             See {_calculateRewards} for reward-calculation logic."
          },
          "contractType()": {
            "details": "Returns the module type of the contract."
          },
          "contractVersion()": {
            "details": "Returns the version of the contract."
          },
          "depositRewardTokens(uint256)": {
            "details": "Admin deposits reward tokens."
          },
          "getRoleAdmin(bytes32)": {
            "details": "See {grantRole} and {revokeRole}.                  To change a role's admin, use {_setRoleAdmin}.",
            "params": {
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "getRoleMember(bytes32,uint256)": {
            "details": "Returns `member` who has `role`, at `index` of role-members list.                  See struct {RoleMembers}, and mapping {roleMembers}",
            "params": {
              "index": "Index in list of current members for the role.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            },
            "returns": {
              "member": " Address of account that has `role`"
            }
          },
          "getRoleMemberCount(bytes32)": {
            "details": "Returns `count` of accounts that have `role`.                  See struct {RoleMembers}, and mapping {roleMembers}",
            "params": {
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            },
            "returns": {
              "count": "  Total number of accounts that have `role`"
            }
          },
          "getStakeInfo(address)": {
            "params": {
              "_staker": "Address for which to calculated rewards."
            },
            "returns": {
              "_rewards": "       Available reward amount.",
              "_tokensStaked": "  Amount of tokens staked."
            }
          },
          "grantRole(bytes32,address)": {
            "details": "Caller must have admin role for the `role`.                  Emits {RoleGranted Event}.",
            "params": {
              "account": "Address of the account to which the role is being granted.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "hasRole(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`.",
            "params": {
              "account": "Address of the account for which the role is being checked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "hasRoleWithSwitch(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`.                  Role restrictions can be swtiched on and off:                      - If address(0) has ROLE, then the ROLE restrictions                        don't apply.                      - If address(0) does not have ROLE, then the ROLE                        restrictions will apply.",
            "params": {
              "account": "Address of the account for which the role is being checked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "initialize(address,string,address[],address,address,uint80,uint256,uint256)": {
            "details": "Initializes the contract, like a constructor."
          },
          "multicall(bytes[])": {
            "details": "Receives and executes a batch of function calls on this contract."
          },
          "renounceRole(bytes32,address)": {
            "details": "Caller must have the `role`, with caller being the same as `account`.                  Emits {RoleRevoked Event}.",
            "params": {
              "account": "Address of the account from which the role is being revoked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "revokeRole(bytes32,address)": {
            "details": "Caller must have admin role for the `role`.                  Emits {RoleRevoked Event}.",
            "params": {
              "account": "Address of the account from which the role is being revoked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "setContractURI(string)": {
            "details": "Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.",
            "params": {
              "_uri": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "setRewardRatio(uint256,uint256)": {
            "details": "Only admin/authorized-account can call it.",
            "params": {
              "_denominator": "Reward ratio denominator.",
              "_numerator": "Reward ratio numerator."
            }
          },
          "setTimeUnit(uint80)": {
            "details": "Only admin/authorized-account can call it.",
            "params": {
              "_timeUnit": "New time unit."
            }
          },
          "stake(uint256)": {
            "details": "See {_stake}. Override that to implement custom logic.",
            "params": {
              "_amount": "Amount to stake."
            }
          },
          "withdraw(uint256)": {
            "details": "See {_withdraw}. Override that to implement custom logic.",
            "params": {
              "_amount": "Amount to withdraw."
            }
          },
          "withdrawRewardTokens(uint256)": {
            "details": "Admin can withdraw excess reward tokens."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "claimRewards()": {
            "notice": "Claim accumulated rewards."
          },
          "contractURI()": {
            "notice": "Returns the contract metadata URI."
          },
          "getRewardTokenBalance()": {
            "notice": "View total rewards available in the staking contract."
          },
          "getRoleAdmin(bytes32)": {
            "notice": "Returns the admin role that controls the specified role."
          },
          "getRoleMember(bytes32,uint256)": {
            "notice": "Returns the role-member from a list of members for a role,                  at a given index."
          },
          "getRoleMemberCount(bytes32)": {
            "notice": "Returns total number of accounts that have a role."
          },
          "getStakeInfo(address)": {
            "notice": "View amount staked and rewards for a user."
          },
          "grantRole(bytes32,address)": {
            "notice": "Grants a role to an account, if not previously granted."
          },
          "hasRole(bytes32,address)": {
            "notice": "Checks whether an account has a particular role."
          },
          "hasRoleWithSwitch(bytes32,address)": {
            "notice": "Checks whether an account has a particular role;                  role restrictions can be swtiched on and off."
          },
          "renounceRole(bytes32,address)": {
            "notice": "Revokes role from the account."
          },
          "revokeRole(bytes32,address)": {
            "notice": "Revokes role from an account."
          },
          "setContractURI(string)": {
            "notice": "Lets a contract admin set the URI for contract-level metadata."
          },
          "setRewardRatio(uint256,uint256)": {
            "notice": "Set rewards per unit of time.           Interpreted as (numerator/denominator) rewards per second/per day/etc based on time-unit.           For e.g., ratio of 1/20 would mean 1 reward token for every 20 tokens staked."
          },
          "setTimeUnit(uint80)": {
            "notice": "Set time unit. Set as a number of seconds.           Could be specified as -- x * 1 hours, x * 1 days, etc."
          },
          "stake(uint256)": {
            "notice": "Stake ERC20 Tokens."
          },
          "withdraw(uint256)": {
            "notice": "Withdraw staked ERC20 tokens."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=lib/chainlink/",
        "@ds-test/=lib/ds-test/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@std/=lib/forge-std/src/",
        "@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/",
        "ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/",
        "ERC721A/=lib/ERC721A/contracts/",
        "chainlink/=lib/chainlink/",
        "contracts/=contracts/",
        "ds-test/=lib/ds-test/src/",
        "dynamic-contracts/=lib/dynamic-contracts/src/",
        "erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/",
        "erc721a-upgradeable/=lib/ERC721A-Upgradeable/",
        "erc721a/=lib/ERC721A/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/prebuilts/staking/TokenStake.sol": "TokenStake"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/eip/interface/IERC20.sol": {
        "keccak256": "0x5bdd9dd97ba7d9d7c9a2953db287e4d9d7fa93a27a96bc2e72a8da4919b6f7ff",
        "urls": [
          "bzz-raw://45527c265ee5de6bbb3ecfc052e7b1175531a82c2ac16172020aee855f7dd592",
          "dweb:/ipfs/QmVZthqbG916qUQSwv1LE8bB58ZGQ1VfQbLbbRV5urfEYA"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC20Metadata.sol": {
        "keccak256": "0xc2500d7a12573fc6f9714d806bec722ad4110a68e6dd14b69903042421001734",
        "urls": [
          "bzz-raw://02423735619f14f3a13fae0ad6e407385565f159ad956c8bd1c14b3605a73a65",
          "dweb:/ipfs/QmYfYWh5wGidaQ7qDbC8oSuQ3gsnd3moJbWZ8yBzMnrYz1"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/ContractMetadata.sol": {
        "keccak256": "0xf53ab08ec3057056872c15e35a5610f7a43426bd2829786aed006d527177adfe",
        "urls": [
          "bzz-raw://ee132ae5efdd372152febfcd8fd3a7cb82c7019367d92c886f5096003a79f392",
          "dweb:/ipfs/QmRW1cGWmZAu57huZpTUwsWB8AxUFrBp6g4NqozXpbWsR6"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Permissions.sol": {
        "keccak256": "0xe7e18181f2d2c8bae4afc7ee69ce1d547e7aa583182e8e0853ca33c49a28c04d",
        "urls": [
          "bzz-raw://75d5f5a9356c290e398a5dd05914b59c3d09e6fedde2da80b6f1012aedf323f8",
          "dweb:/ipfs/QmNrrf8Uyq33XBsE2NqVTW6HVX3XixFTjCG8KGbGxdEE84"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/PermissionsEnumerable.sol": {
        "keccak256": "0x434a6ffc16ddc437ffb37b8fbe4c9696385252f15a617c4606b8c5e10561caf3",
        "urls": [
          "bzz-raw://1a9d4dac4bf2ae3c3c086af1956dc25e8b149b0914125e660cc0648791c247cb",
          "dweb:/ipfs/QmTMEggPdBea1JCamsShwRf3en2FgVTXNTPJ2isFtBk4Kk"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Staking20Upgradeable.sol": {
        "keccak256": "0x317714dec494fe9ddef56458d2ffca45314eebfcb7fdefeb79015f4e1e1180de",
        "urls": [
          "bzz-raw://8761a1707cb84f332a3b73f6015939aac5c463203aa8c3cb76e6a0f671e34dfc",
          "dweb:/ipfs/QmVcvLvNCx6do9PS2rtzrf2bCBsxzu7Xgij4SvguKsjm9d"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IContractMetadata.sol": {
        "keccak256": "0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2",
        "urls": [
          "bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a",
          "dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPermissions.sol": {
        "keccak256": "0xc0cd1f87bac474a06f85e2b341b9b57662aee957fc24180d42c872481c2f2ae3",
        "urls": [
          "bzz-raw://7dec3eed451d63867531d693f0be3279fa2c9aef3130f0826c3520c06820fa5d",
          "dweb:/ipfs/QmTYANrcPdd9SCe99DWsKJ19evNRQKQGZeoS1Keew4M2cS"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPermissionsEnumerable.sol": {
        "keccak256": "0x2e742c18a4481bad41d56424cd16c52def2fb415f69e5fb5f67d8d979300ff95",
        "urls": [
          "bzz-raw://d9be33bb865e3e82aca540a3e38cbc2bf2e431f9d1bf39c50d6c757e7b7bf3ee",
          "dweb:/ipfs/Qmdad1Xqj5SQ44Bk4bwD2uA36XnGHtqnVYSomKZQvnUBVG"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IStaking20.sol": {
        "keccak256": "0xb7abd61f05ee0607bae639fd4f5f947aa78e067e3201af4d18e58069cba69828",
        "urls": [
          "bzz-raw://063d9a39c5c7078fe3d4f5b7908333d5d36e0c1b59433b1d8332871ec9da0852",
          "dweb:/ipfs/QmRTunZrRtDaV2YH54TT49dScAKhcwL2QdmGNv9bhYF7iL"
        ],
        "license": "Apache-2.0"
      },
      "contracts/external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol": {
        "keccak256": "0xdbc96b1264d2e2bd82cb7e697056929325e09d1641321145a8cec53b22b9567d",
        "urls": [
          "bzz-raw://7ca7ccf947d21d98878ec18e941b750cd2ae7c563e6d2a707da4f806038d67c8",
          "dweb:/ipfs/QmYVLYUPMD3b95vKrS5yjxcz2MDNNzkWJY9xc9bc9oTZdh"
        ],
        "license": "MIT"
      },
      "contracts/external-deps/openzeppelin/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xa6149938a7c7c8af4244743aeaafcfb1fd9ce15ad45de58fa9576f0ed5599b2c",
        "urls": [
          "bzz-raw://839aa4ea6ef6d1972881bfd7420a9ddcd2f37139e3f0bf25310f93f48410702d",
          "dweb:/ipfs/QmSH65kStfbgMbfjFdfJqV412omPy6nB1JMvMt9q7SsytW"
        ],
        "license": "MIT"
      },
      "contracts/external-deps/openzeppelin/utils/math/SafeMath.sol": {
        "keccak256": "0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e",
        "urls": [
          "bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65",
          "dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN"
        ],
        "license": "MIT"
      },
      "contracts/infra/interface/IWETH.sol": {
        "keccak256": "0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b",
        "urls": [
          "bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1",
          "dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/CurrencyTransferLib.sol": {
        "keccak256": "0x4a30bc9a8cd6cc8b855621fb1a651e2c3a1639b0ad153f1139c3ba463605672d",
        "urls": [
          "bzz-raw://417cc64ec6393f3cc89981ca9c32bbcc444a5f91363d69f84dd8ace888b2b859",
          "dweb:/ipfs/QmZeaQsYGx4VNoP8e1fcwC87PwvyakheWYeuwEwhFSJnvB"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/TWAddress.sol": {
        "keccak256": "0x460f032cf3bf43d586e126ab2ec8be4335767f497ccb699741546a1cfba94a7e",
        "urls": [
          "bzz-raw://28fcbf6dde6c2eeb9864f6ec6f21dcc81ec426877debf4b912f2f3bc5b0fc91e",
          "dweb:/ipfs/QmS1SHrZDfefX8EE7DdvszTY6VPCHydf4HM7NKJ2gP72e6"
        ],
        "license": "Apache 2.0"
      },
      "contracts/lib/TWStrings.sol": {
        "keccak256": "0xef7e9954d888f99baffc10db1d9bf6a2beb66c842d81dea90352ddded22cbbf8",
        "urls": [
          "bzz-raw://832415134684f5413f9d0f3f5536aa30848690cfe54769f7730a3807438f3bf9",
          "dweb:/ipfs/QmduTiUdtsnyJVMXpdomohEWDVg46aZhnS9uTURu4x1NYt"
        ],
        "license": "Apache 2.0"
      },
      "contracts/prebuilts/interface/staking/ITokenStake.sol": {
        "keccak256": "0x5e57570a9b8db064bfca10c4843d82551e89d230116f582eba7c9d5850460ed1",
        "urls": [
          "bzz-raw://417939013614af1de97cc4143f7e71b5468513cafc984c6a6e1e1a1d11bb1ea1",
          "dweb:/ipfs/QmcRBdvc7dM9F3yGq1YUYvz6Cs7N4iJw4LLDLdGokPrAqC"
        ],
        "license": "Apache-2.0"
      },
      "contracts/prebuilts/staking/TokenStake.sol": {
        "keccak256": "0xefa10aefbf2a6c9b0738d8b55049ef9345e5b561ded89f8bf96e850933c5f0dd",
        "urls": [
          "bzz-raw://1781bad4e5ec9d418a653b369ce9f9af680cd62ba4a562d10e96cf418048fb04",
          "dweb:/ipfs/QmTUANgN6NxoYyJh1CNvwAatxNQeKLYfuqbEg3LUgHvfUK"
        ],
        "license": "Apache-2.0"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e",
        "urls": [
          "bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497",
          "dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol": {
        "keccak256": "0x8cc03c5ac17e8a7396e487cda41fc1f1dfdb91db7d528e6da84bee3b6dd7e167",
        "urls": [
          "bzz-raw://607818f1b44548c2d8268176f73cdb290e1faed971b1061930d92698366e2a11",
          "dweb:/ipfs/QmQibMe3r5no95b6q7isGT5R75V8xSofWEDLXzp95b7LgZ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3",
        "urls": [
          "bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4",
          "dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/MulticallUpgradeable.sol": {
        "keccak256": "0xb8709268fac307114f6cbb5e3cee798d91cd0adfea4d337c4920f8f0b2414f15",
        "urls": [
          "bzz-raw://34975544d7bea644eee9ad6e9034b7bbbc0b165159b77f60d0c6004300ab601d",
          "dweb:/ipfs/QmUW5vLADhvVqSdBe96QFM6gzwtv9pagpaUkzXmaeQTWPQ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/prebuilts/staking/TokenStake.sol",
    "id": 91577,
    "exportedSymbols": {
      "AddressUpgradeable": [
        155768
      ],
      "ContextUpgradeable": [
        156044
      ],
      "ContractMetadata": [
        17526
      ],
      "CurrencyTransferLib": [
        63578
      ],
      "ERC2771ContextUpgradeable": [
        45607
      ],
      "IContractMetadata": [
        32437
      ],
      "IERC20": [
        164086
      ],
      "IERC20Metadata": [
        13918
      ],
      "IPermissions": [
        33256
      ],
      "IPermissionsEnumerable": [
        33281
      ],
      "ITokenStake": [
        76312
      ],
      "Initializable": [
        150199
      ],
      "MulticallUpgradeable": [
        156227
      ],
      "Permissions": [
        21500
      ],
      "PermissionsEnumerable": [
        21799
      ],
      "Staking20Upgradeable": [
        29126
      ],
      "TWStrings": [
        64852
      ],
      "TokenStake": [
        91576
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:7528:371",
    "nodes": [
      {
        "id": 91150,
        "nodeType": "PragmaDirective",
        "src": "39:24:371",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".11"
        ]
      },
      {
        "id": 91151,
        "nodeType": "ImportDirective",
        "src": "736:56:371",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 91577,
        "sourceUnit": 164087,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 91152,
        "nodeType": "ImportDirective",
        "src": "815:79:371",
        "nodes": [],
        "absolutePath": "contracts/external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol",
        "file": "../../external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 91577,
        "sourceUnit": 45608,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 91153,
        "nodeType": "ImportDirective",
        "src": "905:76:371",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/utils/MulticallUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/utils/MulticallUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 91577,
        "sourceUnit": 156228,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 91155,
        "nodeType": "ImportDirective",
        "src": "982:72:371",
        "nodes": [],
        "absolutePath": "contracts/lib/CurrencyTransferLib.sol",
        "file": "../../lib/CurrencyTransferLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 91577,
        "sourceUnit": 63579,
        "symbolAliases": [
          {
            "foreign": {
              "id": 91154,
              "name": "CurrencyTransferLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 63578,
              "src": "991:19:371",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$63578_$",
                "typeString": "type(library CurrencyTransferLib)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 91156,
        "nodeType": "ImportDirective",
        "src": "1055:48:371",
        "nodes": [],
        "absolutePath": "contracts/eip/interface/IERC20Metadata.sol",
        "file": "../../eip/interface/IERC20Metadata.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 91577,
        "sourceUnit": 13919,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 91157,
        "nodeType": "ImportDirective",
        "src": "1145:46:371",
        "nodes": [],
        "absolutePath": "contracts/extension/ContractMetadata.sol",
        "file": "../../extension/ContractMetadata.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 91577,
        "sourceUnit": 17527,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 91158,
        "nodeType": "ImportDirective",
        "src": "1192:51:371",
        "nodes": [],
        "absolutePath": "contracts/extension/PermissionsEnumerable.sol",
        "file": "../../extension/PermissionsEnumerable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 91577,
        "sourceUnit": 21800,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 91160,
        "nodeType": "ImportDirective",
        "src": "1244:80:371",
        "nodes": [],
        "absolutePath": "contracts/extension/Staking20Upgradeable.sol",
        "file": "../../extension/Staking20Upgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 91577,
        "sourceUnit": 29127,
        "symbolAliases": [
          {
            "foreign": {
              "id": 91159,
              "name": "Staking20Upgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 29126,
              "src": "1253:20:371",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_Staking20Upgradeable_$29126_$",
                "typeString": "type(contract Staking20Upgradeable)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 91161,
        "nodeType": "ImportDirective",
        "src": "1325:46:371",
        "nodes": [],
        "absolutePath": "contracts/prebuilts/interface/staking/ITokenStake.sol",
        "file": "../interface/staking/ITokenStake.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 91577,
        "sourceUnit": 76313,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 91576,
        "nodeType": "ContractDefinition",
        "src": "1373:6193:371",
        "nodes": [
          {
            "id": 91181,
            "nodeType": "VariableDeclaration",
            "src": "1569:60:371",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "MODULE_TYPE",
            "nameLocation": "1594:11:371",
            "scope": 91576,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 91176,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1569:7:371",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "546f6b656e5374616b65",
                  "id": 91179,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1616:12:371",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_e53bc57d7eba7cf71fa741a009e2b7a341830ecbf013709ae44b55d94803322c",
                    "typeString": "literal_string \"TokenStake\""
                  },
                  "value": "TokenStake"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_e53bc57d7eba7cf71fa741a009e2b7a341830ecbf013709ae44b55d94803322c",
                    "typeString": "literal_string \"TokenStake\""
                  }
                ],
                "id": 91178,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1608:7:371",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_bytes32_$",
                  "typeString": "type(bytes32)"
                },
                "typeName": {
                  "id": 91177,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1608:7:371",
                  "typeDescriptions": {}
                }
              },
              "id": 91180,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1608:21:371",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "id": 91184,
            "nodeType": "VariableDeclaration",
            "src": "1635:36:371",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "VERSION",
            "nameLocation": "1660:7:371",
            "scope": 91576,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 91182,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1635:7:371",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 91183,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1670:1:371",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "private"
          },
          {
            "id": 91187,
            "nodeType": "VariableDeclaration",
            "src": "1745:26:371",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 91185,
              "nodeType": "StructuredDocumentation",
              "src": "1678:62:371",
              "text": "@dev ERC20 Reward Token address. See {_mintRewards} below."
            },
            "functionSelector": "f7c618c1",
            "mutability": "mutable",
            "name": "rewardToken",
            "nameLocation": "1760:11:371",
            "scope": 91576,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 91186,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1745:7:371",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 91190,
            "nodeType": "VariableDeclaration",
            "src": "1838:34:371",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 91188,
              "nodeType": "StructuredDocumentation",
              "src": "1778:55:371",
              "text": "@dev Total amount of reward tokens in the contract."
            },
            "mutability": "mutable",
            "name": "rewardTokenBalance",
            "nameLocation": "1854:18:371",
            "scope": 91576,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 91189,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1838:7:371",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "id": 91201,
            "nodeType": "FunctionDefinition",
            "src": "1879:97:371",
            "nodes": [],
            "body": {
              "id": 91200,
              "nodeType": "Block",
              "src": "1974:2:371",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "id": 91195,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 91194,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 150119,
                  "src": "1920:11:371"
                },
                "nodeType": "ModifierInvocation",
                "src": "1920:11:371"
              },
              {
                "arguments": [
                  {
                    "id": 91197,
                    "name": "_nativeTokenWrapper",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 91192,
                    "src": "1953:19:371",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 91198,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 91196,
                  "name": "Staking20Upgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29126,
                  "src": "1932:20:371"
                },
                "nodeType": "ModifierInvocation",
                "src": "1932:41:371"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 91193,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 91192,
                  "mutability": "mutable",
                  "name": "_nativeTokenWrapper",
                  "nameLocation": "1899:19:371",
                  "nodeType": "VariableDeclaration",
                  "scope": 91201,
                  "src": "1891:27:371",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 91191,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1891:7:371",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1890:29:371"
            },
            "returnParameters": {
              "id": 91199,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1974:0:371"
            },
            "scope": 91576,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 91289,
            "nodeType": "FunctionDefinition",
            "src": "2041:1123:371",
            "nodes": [],
            "body": {
              "id": 91288,
              "nodeType": "Block",
              "src": "2367:797:371",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 91225,
                        "name": "_trustedForwarders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91209,
                        "src": "2409:18:371",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      ],
                      "id": 91224,
                      "name": "__ERC2771Context_init_unchained",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45544,
                      "src": "2377:31:371",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address[] memory)"
                      }
                    },
                    "id": 91226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2377:51:371",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91227,
                  "nodeType": "ExpressionStatement",
                  "src": "2377:51:371"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 91231,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 91229,
                          "name": "_rewardToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 91211,
                          "src": "2447:12:371",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 91230,
                          "name": "_stakingToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 91213,
                          "src": "2463:13:371",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2447:29:371",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52657761726420546f6b656e20616e64205374616b696e6720546f6b656e2063616e27742062652073616d652e",
                        "id": 91232,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2478:47:371",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e17add4d2cc0d52c03c959bc4a348eb0f9d1b38e50ee9eec58635f407746c04d",
                          "typeString": "literal_string \"Reward Token and Staking Token can't be same.\""
                        },
                        "value": "Reward Token and Staking Token can't be same."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e17add4d2cc0d52c03c959bc4a348eb0f9d1b38e50ee9eec58635f407746c04d",
                          "typeString": "literal_string \"Reward Token and Staking Token can't be same.\""
                        }
                      ],
                      "id": 91228,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2439:7:371",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 91233,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2439:87:371",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91234,
                  "nodeType": "ExpressionStatement",
                  "src": "2439:87:371"
                },
                {
                  "expression": {
                    "id": 91237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 91235,
                      "name": "rewardToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 91187,
                      "src": "2536:11:371",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 91236,
                      "name": "_rewardToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 91211,
                      "src": "2550:12:371",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2536:26:371",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 91238,
                  "nodeType": "ExpressionStatement",
                  "src": "2536:26:371"
                },
                {
                  "assignments": [
                    91240
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 91240,
                      "mutability": "mutable",
                      "name": "_stakingTokenDecimals",
                      "nameLocation": "2580:21:371",
                      "nodeType": "VariableDeclaration",
                      "scope": 91288,
                      "src": "2573:28:371",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "typeName": {
                        "id": 91239,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "2573:6:371",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 91252,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 91244,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 91241,
                        "name": "_stakingToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91213,
                        "src": "2604:13:371",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 91242,
                          "name": "CurrencyTransferLib",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63578,
                          "src": "2621:19:371",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$63578_$",
                            "typeString": "type(library CurrencyTransferLib)"
                          }
                        },
                        "id": 91243,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "NATIVE_TOKEN",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 63346,
                        "src": "2621:32:371",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "2604:49:371",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "arguments": [
                            {
                              "id": 91247,
                              "name": "_stakingToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 91213,
                              "src": "2700:13:371",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 91246,
                            "name": "IERC20Metadata",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13918,
                            "src": "2685:14:371",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC20Metadata_$13918_$",
                              "typeString": "type(contract IERC20Metadata)"
                            }
                          },
                          "id": 91248,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2685:29:371",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20Metadata_$13918",
                            "typeString": "contract IERC20Metadata"
                          }
                        },
                        "id": 91249,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "decimals",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 13917,
                        "src": "2685:38:371",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                          "typeString": "function () view external returns (uint8)"
                        }
                      },
                      "id": 91250,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2685:40:371",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "id": 91251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "2604:121:371",
                    "trueExpression": {
                      "hexValue": "3138",
                      "id": 91245,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2668:2:371",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_18_by_1",
                        "typeString": "int_const 18"
                      },
                      "value": "18"
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2573:152:371"
                },
                {
                  "assignments": [
                    91254
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 91254,
                      "mutability": "mutable",
                      "name": "_rewardTokenDecimals",
                      "nameLocation": "2742:20:371",
                      "nodeType": "VariableDeclaration",
                      "scope": 91288,
                      "src": "2735:27:371",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "typeName": {
                        "id": 91253,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "2735:6:371",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 91266,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 91258,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 91255,
                        "name": "_rewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91211,
                        "src": "2765:12:371",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 91256,
                          "name": "CurrencyTransferLib",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63578,
                          "src": "2781:19:371",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$63578_$",
                            "typeString": "type(library CurrencyTransferLib)"
                          }
                        },
                        "id": 91257,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "NATIVE_TOKEN",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 63346,
                        "src": "2781:32:371",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "2765:48:371",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "arguments": [
                            {
                              "id": 91261,
                              "name": "_rewardToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 91211,
                              "src": "2860:12:371",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 91260,
                            "name": "IERC20Metadata",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13918,
                            "src": "2845:14:371",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC20Metadata_$13918_$",
                              "typeString": "type(contract IERC20Metadata)"
                            }
                          },
                          "id": 91262,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2845:28:371",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20Metadata_$13918",
                            "typeString": "contract IERC20Metadata"
                          }
                        },
                        "id": 91263,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "decimals",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 13917,
                        "src": "2845:37:371",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                          "typeString": "function () view external returns (uint8)"
                        }
                      },
                      "id": 91264,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2845:39:371",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "id": 91265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "2765:119:371",
                    "trueExpression": {
                      "hexValue": "3138",
                      "id": 91259,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2828:2:371",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_18_by_1",
                        "typeString": "int_const 18"
                      },
                      "value": "18"
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2735:149:371"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 91268,
                        "name": "_stakingToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91213,
                        "src": "2912:13:371",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 91269,
                        "name": "_stakingTokenDecimals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91240,
                        "src": "2927:21:371",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      {
                        "id": 91270,
                        "name": "_rewardTokenDecimals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91254,
                        "src": "2950:20:371",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
                      "id": 91267,
                      "name": "__Staking20_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28294,
                      "src": "2895:16:371",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint16_$_t_uint16_$returns$__$",
                        "typeString": "function (address,uint16,uint16)"
                      }
                    },
                    "id": 91271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2895:76:371",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91272,
                  "nodeType": "ExpressionStatement",
                  "src": "2895:76:371"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 91274,
                        "name": "_timeUnit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91215,
                        "src": "3002:9:371",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        }
                      },
                      {
                        "id": 91275,
                        "name": "_rewardRatioNumerator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91217,
                        "src": "3013:21:371",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 91276,
                        "name": "_rewardRatioDenominator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91219,
                        "src": "3036:23:371",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 91273,
                      "name": "_setStakingCondition",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28966,
                      "src": "2981:20:371",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint80_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint80,uint256,uint256)"
                      }
                    },
                    "id": 91277,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2981:79:371",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91278,
                  "nodeType": "ExpressionStatement",
                  "src": "2981:79:371"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 91280,
                        "name": "_contractURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91206,
                        "src": "3089:12:371",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 91279,
                      "name": "_setupContractURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17519,
                      "src": "3071:17:371",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 91281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3071:31:371",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91282,
                  "nodeType": "ExpressionStatement",
                  "src": "3071:31:371"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 91284,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21176,
                        "src": "3123:18:371",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 91285,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91204,
                        "src": "3143:13:371",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 91283,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        21723
                      ],
                      "referencedDeclaration": 21723,
                      "src": "3112:10:371",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 91286,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3112:45:371",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91287,
                  "nodeType": "ExpressionStatement",
                  "src": "3112:45:371"
                }
              ]
            },
            "documentation": {
              "id": 91202,
              "nodeType": "StructuredDocumentation",
              "src": "1982:54:371",
              "text": "@dev Initializes the contract, like a constructor."
            },
            "functionSelector": "df654376",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 91222,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 91221,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 150119,
                  "src": "2355:11:371"
                },
                "nodeType": "ModifierInvocation",
                "src": "2355:11:371"
              }
            ],
            "name": "initialize",
            "nameLocation": "2050:10:371",
            "parameters": {
              "id": 91220,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 91204,
                  "mutability": "mutable",
                  "name": "_defaultAdmin",
                  "nameLocation": "2078:13:371",
                  "nodeType": "VariableDeclaration",
                  "scope": 91289,
                  "src": "2070:21:371",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 91203,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2070:7:371",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 91206,
                  "mutability": "mutable",
                  "name": "_contractURI",
                  "nameLocation": "2115:12:371",
                  "nodeType": "VariableDeclaration",
                  "scope": 91289,
                  "src": "2101:26:371",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 91205,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2101:6:371",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 91209,
                  "mutability": "mutable",
                  "name": "_trustedForwarders",
                  "nameLocation": "2154:18:371",
                  "nodeType": "VariableDeclaration",
                  "scope": 91289,
                  "src": "2137:35:371",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 91207,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2137:7:371",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 91208,
                    "nodeType": "ArrayTypeName",
                    "src": "2137:9:371",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 91211,
                  "mutability": "mutable",
                  "name": "_rewardToken",
                  "nameLocation": "2190:12:371",
                  "nodeType": "VariableDeclaration",
                  "scope": 91289,
                  "src": "2182:20:371",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 91210,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2182:7:371",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 91213,
                  "mutability": "mutable",
                  "name": "_stakingToken",
                  "nameLocation": "2220:13:371",
                  "nodeType": "VariableDeclaration",
                  "scope": 91289,
                  "src": "2212:21:371",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 91212,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2212:7:371",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 91215,
                  "mutability": "mutable",
                  "name": "_timeUnit",
                  "nameLocation": "2250:9:371",
                  "nodeType": "VariableDeclaration",
                  "scope": 91289,
                  "src": "2243:16:371",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint80",
                    "typeString": "uint80"
                  },
                  "typeName": {
                    "id": 91214,
                    "name": "uint80",
                    "nodeType": "ElementaryTypeName",
                    "src": "2243:6:371",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint80",
                      "typeString": "uint80"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 91217,
                  "mutability": "mutable",
                  "name": "_rewardRatioNumerator",
                  "nameLocation": "2277:21:371",
                  "nodeType": "VariableDeclaration",
                  "scope": 91289,
                  "src": "2269:29:371",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 91216,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2269:7:371",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 91219,
                  "mutability": "mutable",
                  "name": "_rewardRatioDenominator",
                  "nameLocation": "2316:23:371",
                  "nodeType": "VariableDeclaration",
                  "scope": 91289,
                  "src": "2308:31:371",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 91218,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2308:7:371",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2060:285:371"
            },
            "returnParameters": {
              "id": 91223,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2367:0:371"
            },
            "scope": 91576,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 91298,
            "nodeType": "FunctionDefinition",
            "src": "3224:99:371",
            "nodes": [],
            "body": {
              "id": 91297,
              "nodeType": "Block",
              "src": "3288:35:371",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 91295,
                    "name": "MODULE_TYPE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 91181,
                    "src": "3305:11:371",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 91294,
                  "id": 91296,
                  "nodeType": "Return",
                  "src": "3298:18:371"
                }
              ]
            },
            "documentation": {
              "id": 91290,
              "nodeType": "StructuredDocumentation",
              "src": "3170:49:371",
              "text": "@dev Returns the module type of the contract."
            },
            "functionSelector": "cb2ef6f7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "contractType",
            "nameLocation": "3233:12:371",
            "parameters": {
              "id": 91291,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3245:2:371"
            },
            "returnParameters": {
              "id": 91294,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 91293,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 91298,
                  "src": "3279:7:371",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 91292,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3279:7:371",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3278:9:371"
            },
            "scope": 91576,
            "stateMutability": "pure",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 91310,
            "nodeType": "FunctionDefinition",
            "src": "3379:103:371",
            "nodes": [],
            "body": {
              "id": 91309,
              "nodeType": "Block",
              "src": "3444:38:371",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 91306,
                        "name": "VERSION",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91184,
                        "src": "3467:7:371",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 91305,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3461:5:371",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint8_$",
                        "typeString": "type(uint8)"
                      },
                      "typeName": {
                        "id": 91304,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "3461:5:371",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 91307,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3461:14:371",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 91303,
                  "id": 91308,
                  "nodeType": "Return",
                  "src": "3454:21:371"
                }
              ]
            },
            "documentation": {
              "id": 91299,
              "nodeType": "StructuredDocumentation",
              "src": "3329:45:371",
              "text": "@dev Returns the version of the contract."
            },
            "functionSelector": "a0a8e460",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "contractVersion",
            "nameLocation": "3388:15:371",
            "parameters": {
              "id": 91300,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3403:2:371"
            },
            "returnParameters": {
              "id": 91303,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 91302,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 91310,
                  "src": "3437:5:371",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 91301,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3437:5:371",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3436:7:371"
            },
            "scope": 91576,
            "stateMutability": "pure",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 91323,
            "nodeType": "FunctionDefinition",
            "src": "3558:121:371",
            "nodes": [],
            "body": {
              "id": 91322,
              "nodeType": "Block",
              "src": "3585:94:371",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 91318,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 91315,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3603:3:371",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 91316,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3603:10:371",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 91317,
                          "name": "nativeTokenWrapper",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28192,
                          "src": "3617:18:371",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3603:32:371",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63616c6c6572206e6f74206e617469766520746f6b656e20777261707065722e",
                        "id": 91319,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3637:34:371",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fff6f4088a14dc9fb6c418ac7dfb6aa2cb5091cf5954b1f93aeb20616b356a54",
                          "typeString": "literal_string \"caller not native token wrapper.\""
                        },
                        "value": "caller not native token wrapper."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fff6f4088a14dc9fb6c418ac7dfb6aa2cb5091cf5954b1f93aeb20616b356a54",
                          "typeString": "literal_string \"caller not native token wrapper.\""
                        }
                      ],
                      "id": 91314,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3595:7:371",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 91320,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3595:77:371",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91321,
                  "nodeType": "ExpressionStatement",
                  "src": "3595:77:371"
                }
              ]
            },
            "documentation": {
              "id": 91311,
              "nodeType": "StructuredDocumentation",
              "src": "3488:65:371",
              "text": "@dev Lets the contract receive ether to unwrap native tokens."
            },
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 91312,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3565:2:371"
            },
            "returnParameters": {
              "id": 91313,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3585:0:371"
            },
            "scope": 91576,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 91399,
            "nodeType": "FunctionDefinition",
            "src": "3728:752:371",
            "nodes": [],
            "body": {
              "id": 91398,
              "nodeType": "Block",
              "src": "3804:676:371",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 91333,
                            "name": "DEFAULT_ADMIN_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21176,
                            "src": "3830:18:371",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 91334,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                91564
                              ],
                              "referencedDeclaration": 91564,
                              "src": "3850:10:371",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 91335,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3850:12:371",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 91332,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21207,
                          "src": "3822:7:371",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 91336,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3822:41:371",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420617574686f72697a6564",
                        "id": 91337,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3865:16:371",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
                          "typeString": "literal_string \"Not authorized\""
                        },
                        "value": "Not authorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
                          "typeString": "literal_string \"Not authorized\""
                        }
                      ],
                      "id": 91331,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3814:7:371",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 91338,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3814:68:371",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91339,
                  "nodeType": "ExpressionStatement",
                  "src": "3814:68:371"
                },
                {
                  "assignments": [
                    91341
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 91341,
                      "mutability": "mutable",
                      "name": "_rewardToken",
                      "nameLocation": "3901:12:371",
                      "nodeType": "VariableDeclaration",
                      "scope": 91398,
                      "src": "3893:20:371",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 91340,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3893:7:371",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 91349,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 91345,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 91342,
                        "name": "rewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91187,
                        "src": "3916:11:371",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 91343,
                          "name": "CurrencyTransferLib",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63578,
                          "src": "3931:19:371",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$63578_$",
                            "typeString": "type(library CurrencyTransferLib)"
                          }
                        },
                        "id": 91344,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "NATIVE_TOKEN",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 63346,
                        "src": "3931:32:371",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "3916:47:371",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 91347,
                      "name": "rewardToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 91187,
                      "src": "3987:11:371",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 91348,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "3916:82:371",
                    "trueExpression": {
                      "id": 91346,
                      "name": "nativeTokenWrapper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28192,
                      "src": "3966:18:371",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3893:105:371"
                },
                {
                  "assignments": [
                    91351
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 91351,
                      "mutability": "mutable",
                      "name": "balanceBefore",
                      "nameLocation": "4017:13:371",
                      "nodeType": "VariableDeclaration",
                      "scope": 91398,
                      "src": "4009:21:371",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 91350,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4009:7:371",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 91361,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 91358,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4072:4:371",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenStake_$91576",
                              "typeString": "contract TokenStake"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TokenStake_$91576",
                              "typeString": "contract TokenStake"
                            }
                          ],
                          "id": 91357,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4064:7:371",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 91356,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4064:7:371",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 91359,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4064:13:371",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 91353,
                            "name": "_rewardToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 91341,
                            "src": "4040:12:371",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 91352,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 164086,
                          "src": "4033:6:371",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$164086_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 91354,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4033:20:371",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$164086",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 91355,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 164043,
                      "src": "4033:30:371",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 91360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4033:45:371",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4009:69:371"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 91365,
                        "name": "rewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91187,
                        "src": "4149:11:371",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 91366,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            91564
                          ],
                          "referencedDeclaration": 91564,
                          "src": "4174:10:371",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 91367,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4174:12:371",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 91370,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4208:4:371",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenStake_$91576",
                              "typeString": "contract TokenStake"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TokenStake_$91576",
                              "typeString": "contract TokenStake"
                            }
                          ],
                          "id": 91369,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4200:7:371",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 91368,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4200:7:371",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 91371,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4200:13:371",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 91372,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91326,
                        "src": "4227:7:371",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 91373,
                        "name": "nativeTokenWrapper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28192,
                        "src": "4248:18:371",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 91362,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63578,
                        "src": "4088:19:371",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$63578_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 91364,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferCurrencyWithWrapper",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63469,
                      "src": "4088:47:371",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address,uint256,address)"
                      }
                    },
                    "id": 91374,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4088:188:371",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91375,
                  "nodeType": "ExpressionStatement",
                  "src": "4088:188:371"
                },
                {
                  "assignments": [
                    91377
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 91377,
                      "mutability": "mutable",
                      "name": "actualAmount",
                      "nameLocation": "4294:12:371",
                      "nodeType": "VariableDeclaration",
                      "scope": 91398,
                      "src": "4286:20:371",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 91376,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4286:7:371",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 91389,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 91388,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 91384,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "4348:4:371",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TokenStake_$91576",
                                "typeString": "contract TokenStake"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TokenStake_$91576",
                                "typeString": "contract TokenStake"
                              }
                            ],
                            "id": 91383,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4340:7:371",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 91382,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4340:7:371",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 91385,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4340:13:371",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 91379,
                              "name": "_rewardToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 91341,
                              "src": "4316:12:371",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 91378,
                            "name": "IERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 164086,
                            "src": "4309:6:371",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC20_$164086_$",
                              "typeString": "type(contract IERC20)"
                            }
                          },
                          "id": 91380,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4309:20:371",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$164086",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 91381,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 164043,
                        "src": "4309:30:371",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 91386,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4309:45:371",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 91387,
                      "name": "balanceBefore",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 91351,
                      "src": "4357:13:371",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4309:61:371",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4286:84:371"
                },
                {
                  "expression": {
                    "id": 91392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 91390,
                      "name": "rewardTokenBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 91190,
                      "src": "4381:18:371",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 91391,
                      "name": "actualAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 91377,
                      "src": "4403:12:371",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4381:34:371",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 91393,
                  "nodeType": "ExpressionStatement",
                  "src": "4381:34:371"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 91395,
                        "name": "actualAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91377,
                        "src": "4460:12:371",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 91394,
                      "name": "RewardTokensDepositedByAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76299,
                      "src": "4431:28:371",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 91396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4431:42:371",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91397,
                  "nodeType": "EmitStatement",
                  "src": "4426:47:371"
                }
              ]
            },
            "baseFunctions": [
              76305
            ],
            "documentation": {
              "id": 91324,
              "nodeType": "StructuredDocumentation",
              "src": "3685:38:371",
              "text": "@dev Admin deposits reward tokens."
            },
            "functionSelector": "16c621e0",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 91329,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 91328,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 150379,
                  "src": "3791:12:371"
                },
                "nodeType": "ModifierInvocation",
                "src": "3791:12:371"
              }
            ],
            "name": "depositRewardTokens",
            "nameLocation": "3737:19:371",
            "parameters": {
              "id": 91327,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 91326,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "3765:7:371",
                  "nodeType": "VariableDeclaration",
                  "scope": 91399,
                  "src": "3757:15:371",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 91325,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3757:7:371",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3756:17:371"
            },
            "returnParameters": {
              "id": 91330,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3804:0:371"
            },
            "scope": 91576,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 91471,
            "nodeType": "FunctionDefinition",
            "src": "4540:945:371",
            "nodes": [],
            "body": {
              "id": 91470,
              "nodeType": "Block",
              "src": "4609:876:371",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 91409,
                            "name": "DEFAULT_ADMIN_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21176,
                            "src": "4635:18:371",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 91410,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                91564
                              ],
                              "referencedDeclaration": 91564,
                              "src": "4655:10:371",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 91411,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4655:12:371",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 91408,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21207,
                          "src": "4627:7:371",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 91412,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4627:41:371",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420617574686f72697a6564",
                        "id": 91413,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4670:16:371",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
                          "typeString": "literal_string \"Not authorized\""
                        },
                        "value": "Not authorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
                          "typeString": "literal_string \"Not authorized\""
                        }
                      ],
                      "id": 91407,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4619:7:371",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 91414,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4619:68:371",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91415,
                  "nodeType": "ExpressionStatement",
                  "src": "4619:68:371"
                },
                {
                  "expression": {
                    "id": 91425,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 91416,
                      "name": "rewardTokenBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 91190,
                      "src": "4757:18:371",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 91419,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 91417,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 91402,
                          "src": "4778:7:371",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "id": 91418,
                          "name": "rewardTokenBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 91190,
                          "src": "4788:18:371",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4778:28:371",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 91423,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 91421,
                          "name": "rewardTokenBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 91190,
                          "src": "4813:18:371",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 91422,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 91402,
                          "src": "4834:7:371",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4813:28:371",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 91424,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "Conditional",
                      "src": "4778:63:371",
                      "trueExpression": {
                        "hexValue": "30",
                        "id": 91420,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4809:1:371",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4757:84:371",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 91426,
                  "nodeType": "ExpressionStatement",
                  "src": "4757:84:371"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 91430,
                        "name": "rewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91187,
                        "src": "4913:11:371",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 91433,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4946:4:371",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenStake_$91576",
                              "typeString": "contract TokenStake"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TokenStake_$91576",
                              "typeString": "contract TokenStake"
                            }
                          ],
                          "id": 91432,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4938:7:371",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 91431,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4938:7:371",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 91434,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4938:13:371",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 91435,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            91564
                          ],
                          "referencedDeclaration": 91564,
                          "src": "4965:10:371",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 91436,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4965:12:371",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 91437,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91402,
                        "src": "4991:7:371",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 91438,
                        "name": "nativeTokenWrapper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28192,
                        "src": "5012:18:371",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 91427,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63578,
                        "src": "4852:19:371",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$63578_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 91429,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferCurrencyWithWrapper",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63469,
                      "src": "4852:47:371",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address,uint256,address)"
                      }
                    },
                    "id": 91439,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4852:188:371",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91440,
                  "nodeType": "ExpressionStatement",
                  "src": "4852:188:371"
                },
                {
                  "assignments": [
                    91442
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 91442,
                      "mutability": "mutable",
                      "name": "_stakingToken",
                      "nameLocation": "5169:13:371",
                      "nodeType": "VariableDeclaration",
                      "scope": 91470,
                      "src": "5161:21:371",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 91441,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5161:7:371",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 91450,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 91446,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 91443,
                        "name": "stakingToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28195,
                        "src": "5185:12:371",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 91444,
                          "name": "CurrencyTransferLib",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63578,
                          "src": "5201:19:371",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$63578_$",
                            "typeString": "type(library CurrencyTransferLib)"
                          }
                        },
                        "id": 91445,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "NATIVE_TOKEN",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 63346,
                        "src": "5201:32:371",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "5185:48:371",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 91448,
                      "name": "stakingToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28195,
                      "src": "5257:12:371",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 91449,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "5185:84:371",
                    "trueExpression": {
                      "id": 91447,
                      "name": "nativeTokenWrapper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28192,
                      "src": "5236:18:371",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5161:108:371"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 91462,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 91458,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "5340:4:371",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TokenStake_$91576",
                                    "typeString": "contract TokenStake"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TokenStake_$91576",
                                    "typeString": "contract TokenStake"
                                  }
                                ],
                                "id": 91457,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5332:7:371",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 91456,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5332:7:371",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 91459,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5332:13:371",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 91453,
                                  "name": "_stakingToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 91442,
                                  "src": "5307:13:371",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 91452,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 164086,
                                "src": "5300:6:371",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$164086_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 91454,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5300:21:371",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$164086",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 91455,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 164043,
                            "src": "5300:31:371",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 91460,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5300:46:371",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 91461,
                          "name": "stakingTokenBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28207,
                          "src": "5350:19:371",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5300:69:371",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374616b696e6720746f6b656e2062616c616e636520726564756365642e",
                        "id": 91463,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5383:32:371",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8d8abe09a27ba91bde5120f467ce94c1760c9d13c295338fa77006f5ceaa9372",
                          "typeString": "literal_string \"Staking token balance reduced.\""
                        },
                        "value": "Staking token balance reduced."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8d8abe09a27ba91bde5120f467ce94c1760c9d13c295338fa77006f5ceaa9372",
                          "typeString": "literal_string \"Staking token balance reduced.\""
                        }
                      ],
                      "id": 91451,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5279:7:371",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 91464,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5279:146:371",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91465,
                  "nodeType": "ExpressionStatement",
                  "src": "5279:146:371"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 91467,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91402,
                        "src": "5470:7:371",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 91466,
                      "name": "RewardTokensWithdrawnByAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76294,
                      "src": "5441:28:371",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 91468,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5441:37:371",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91469,
                  "nodeType": "EmitStatement",
                  "src": "5436:42:371"
                }
              ]
            },
            "baseFunctions": [
              76311
            ],
            "documentation": {
              "id": 91400,
              "nodeType": "StructuredDocumentation",
              "src": "4486:49:371",
              "text": "@dev Admin can withdraw excess reward tokens."
            },
            "functionSelector": "cb43b2dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 91405,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 91404,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 150379,
                  "src": "4596:12:371"
                },
                "nodeType": "ModifierInvocation",
                "src": "4596:12:371"
              }
            ],
            "name": "withdrawRewardTokens",
            "nameLocation": "4549:20:371",
            "parameters": {
              "id": 91403,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 91402,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "4578:7:371",
                  "nodeType": "VariableDeclaration",
                  "scope": 91471,
                  "src": "4570:15:371",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 91401,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4570:7:371",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4569:17:371"
            },
            "returnParameters": {
              "id": 91406,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4609:0:371"
            },
            "scope": 91576,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 91481,
            "nodeType": "FunctionDefinition",
            "src": "5561:116:371",
            "nodes": [],
            "body": {
              "id": 91480,
              "nodeType": "Block",
              "src": "5635:42:371",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 91478,
                    "name": "rewardTokenBalance",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 91190,
                    "src": "5652:18:371",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 91477,
                  "id": 91479,
                  "nodeType": "Return",
                  "src": "5645:25:371"
                }
              ]
            },
            "baseFunctions": [
              29111
            ],
            "documentation": {
              "id": 91472,
              "nodeType": "StructuredDocumentation",
              "src": "5491:65:371",
              "text": "@notice View total rewards available in the staking contract."
            },
            "functionSelector": "93ce5343",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRewardTokenBalance",
            "nameLocation": "5570:21:371",
            "overrides": {
              "id": 91474,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5608:8:371"
            },
            "parameters": {
              "id": 91473,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5591:2:371"
            },
            "returnParameters": {
              "id": 91477,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 91476,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 91481,
                  "src": "5626:7:371",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 91475,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5626:7:371",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5625:9:371"
            },
            "scope": 91576,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 91515,
            "nodeType": "FunctionDefinition",
            "src": "5928:393:371",
            "nodes": [],
            "body": {
              "id": 91514,
              "nodeType": "Block",
              "src": "6003:318:371",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 91493,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 91491,
                          "name": "_rewards",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 91486,
                          "src": "6021:8:371",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 91492,
                          "name": "rewardTokenBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 91190,
                          "src": "6033:18:371",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6021:30:371",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f7567682072657761726420746f6b656e73",
                        "id": 91494,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6053:26:371",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f9f034c0209f69095b9daea6fa2bfb48319f16f6cf36946d2a2348944ff59120",
                          "typeString": "literal_string \"Not enough reward tokens\""
                        },
                        "value": "Not enough reward tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f9f034c0209f69095b9daea6fa2bfb48319f16f6cf36946d2a2348944ff59120",
                          "typeString": "literal_string \"Not enough reward tokens\""
                        }
                      ],
                      "id": 91490,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6013:7:371",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 91495,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6013:67:371",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91496,
                  "nodeType": "ExpressionStatement",
                  "src": "6013:67:371"
                },
                {
                  "expression": {
                    "id": 91499,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 91497,
                      "name": "rewardTokenBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 91190,
                      "src": "6090:18:371",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 91498,
                      "name": "_rewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 91486,
                      "src": "6112:8:371",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6090:30:371",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 91500,
                  "nodeType": "ExpressionStatement",
                  "src": "6090:30:371"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 91504,
                        "name": "rewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91187,
                        "src": "6191:11:371",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 91507,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "6224:4:371",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenStake_$91576",
                              "typeString": "contract TokenStake"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TokenStake_$91576",
                              "typeString": "contract TokenStake"
                            }
                          ],
                          "id": 91506,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6216:7:371",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 91505,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6216:7:371",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 91508,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6216:13:371",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 91509,
                        "name": "_staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91484,
                        "src": "6243:7:371",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 91510,
                        "name": "_rewards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91486,
                        "src": "6264:8:371",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 91511,
                        "name": "nativeTokenWrapper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28192,
                        "src": "6286:18:371",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 91501,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63578,
                        "src": "6130:19:371",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$63578_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 91503,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferCurrencyWithWrapper",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63469,
                      "src": "6130:47:371",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address,uint256,address)"
                      }
                    },
                    "id": 91512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6130:184:371",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91513,
                  "nodeType": "ExpressionStatement",
                  "src": "6130:184:371"
                }
              ]
            },
            "baseFunctions": [
              29119
            ],
            "documentation": {
              "id": 91482,
              "nodeType": "StructuredDocumentation",
              "src": "5872:51:371",
              "text": "@dev Mint/Transfer ERC20 rewards to the staker."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mintRewards",
            "nameLocation": "5937:12:371",
            "overrides": {
              "id": 91488,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5994:8:371"
            },
            "parameters": {
              "id": 91487,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 91484,
                  "mutability": "mutable",
                  "name": "_staker",
                  "nameLocation": "5958:7:371",
                  "nodeType": "VariableDeclaration",
                  "scope": 91515,
                  "src": "5950:15:371",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 91483,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5950:7:371",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 91486,
                  "mutability": "mutable",
                  "name": "_rewards",
                  "nameLocation": "5975:8:371",
                  "nodeType": "VariableDeclaration",
                  "scope": 91515,
                  "src": "5967:16:371",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 91485,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5967:7:371",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5949:35:371"
            },
            "returnParameters": {
              "id": 91489,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6003:0:371"
            },
            "scope": 91576,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 91529,
            "nodeType": "FunctionDefinition",
            "src": "6611:137:371",
            "nodes": [],
            "body": {
              "id": 91528,
              "nodeType": "Block",
              "src": "6683:65:371",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 91523,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21176,
                        "src": "6708:18:371",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 91524,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            91564
                          ],
                          "referencedDeclaration": 91564,
                          "src": "6728:10:371",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 91525,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6728:12:371",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 91522,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21207,
                      "src": "6700:7:371",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 91526,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6700:41:371",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 91521,
                  "id": 91527,
                  "nodeType": "Return",
                  "src": "6693:48:371"
                }
              ]
            },
            "baseFunctions": [
              29125
            ],
            "documentation": {
              "id": 91516,
              "nodeType": "StructuredDocumentation",
              "src": "6510:96:371",
              "text": "@dev Returns whether staking related restrictions can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetStakeConditions",
            "nameLocation": "6620:22:371",
            "overrides": {
              "id": 91518,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6659:8:371"
            },
            "parameters": {
              "id": 91517,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6642:2:371"
            },
            "returnParameters": {
              "id": 91521,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 91520,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 91529,
                  "src": "6677:4:371",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 91519,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6677:4:371",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6676:6:371"
            },
            "scope": 91576,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 91543,
            "nodeType": "FunctionDefinition",
            "src": "6843:133:371",
            "nodes": [],
            "body": {
              "id": 91542,
              "nodeType": "Block",
              "src": "6911:65:371",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 91537,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21176,
                        "src": "6936:18:371",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 91538,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            91564
                          ],
                          "referencedDeclaration": 91564,
                          "src": "6956:10:371",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 91539,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6956:12:371",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 91536,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21207,
                      "src": "6928:7:371",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 91540,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6928:41:371",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 91535,
                  "id": 91541,
                  "nodeType": "Return",
                  "src": "6921:48:371"
                }
              ]
            },
            "baseFunctions": [
              17525
            ],
            "documentation": {
              "id": 91530,
              "nodeType": "StructuredDocumentation",
              "src": "6754:84:371",
              "text": "@dev Checks whether contract metadata can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetContractURI",
            "nameLocation": "6852:18:371",
            "overrides": {
              "id": 91532,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6887:8:371"
            },
            "parameters": {
              "id": 91531,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6870:2:371"
            },
            "returnParameters": {
              "id": 91535,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 91534,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 91543,
                  "src": "6905:4:371",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 91533,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6905:4:371",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6904:6:371"
            },
            "scope": 91576,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 91553,
            "nodeType": "FunctionDefinition",
            "src": "7164:112:371",
            "nodes": [],
            "body": {
              "id": 91552,
              "nodeType": "Block",
              "src": "7240:36:371",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 91549,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        91564
                      ],
                      "referencedDeclaration": 91564,
                      "src": "7257:10:371",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 91550,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7257:12:371",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 91548,
                  "id": 91551,
                  "nodeType": "Return",
                  "src": "7250:19:371"
                }
              ]
            },
            "baseFunctions": [
              29105
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_stakeMsgSender",
            "nameLocation": "7173:15:371",
            "overrides": {
              "id": 91545,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7213:8:371"
            },
            "parameters": {
              "id": 91544,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7188:2:371"
            },
            "returnParameters": {
              "id": 91548,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 91547,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 91553,
                  "src": "7231:7:371",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 91546,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7231:7:371",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7230:9:371"
            },
            "scope": 91576,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 91564,
            "nodeType": "FunctionDefinition",
            "src": "7282:140:371",
            "nodes": [],
            "body": {
              "id": 91563,
              "nodeType": "Block",
              "src": "7360:62:371",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 91559,
                        "name": "ERC2771ContextUpgradeable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45607,
                        "src": "7377:25:371",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC2771ContextUpgradeable_$45607_$",
                          "typeString": "type(contract ERC2771ContextUpgradeable)"
                        }
                      },
                      "id": 91560,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_msgSender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45575,
                      "src": "7377:36:371",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 91561,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7377:38:371",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 91558,
                  "id": 91562,
                  "nodeType": "Return",
                  "src": "7370:45:371"
                }
              ]
            },
            "baseFunctions": [
              45575
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgSender",
            "nameLocation": "7291:10:371",
            "overrides": {
              "id": 91555,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7326:8:371"
            },
            "parameters": {
              "id": 91554,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7301:2:371"
            },
            "returnParameters": {
              "id": 91558,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 91557,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "7352:6:371",
                  "nodeType": "VariableDeclaration",
                  "scope": 91564,
                  "src": "7344:14:371",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 91556,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7344:7:371",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7343:16:371"
            },
            "scope": 91576,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 91575,
            "nodeType": "FunctionDefinition",
            "src": "7428:136:371",
            "nodes": [],
            "body": {
              "id": 91574,
              "nodeType": "Block",
              "src": "7504:60:371",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 91570,
                        "name": "ERC2771ContextUpgradeable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45607,
                        "src": "7521:25:371",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC2771ContextUpgradeable_$45607_$",
                          "typeString": "type(contract ERC2771ContextUpgradeable)"
                        }
                      },
                      "id": 91571,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_msgData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45602,
                      "src": "7521:34:371",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_calldata_ptr_$",
                        "typeString": "function () view returns (bytes calldata)"
                      }
                    },
                    "id": 91572,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7521:36:371",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_calldata_ptr",
                      "typeString": "bytes calldata"
                    }
                  },
                  "functionReturnParameters": 91569,
                  "id": 91573,
                  "nodeType": "Return",
                  "src": "7514:43:371"
                }
              ]
            },
            "baseFunctions": [
              45602
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgData",
            "nameLocation": "7437:8:371",
            "overrides": {
              "id": 91566,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7470:8:371"
            },
            "parameters": {
              "id": 91565,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7445:2:371"
            },
            "returnParameters": {
              "id": 91569,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 91568,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 91575,
                  "src": "7488:14:371",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 91567,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7488:5:371",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7487:16:371"
            },
            "scope": 91576,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 91162,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 150199,
              "src": "1400:13:371"
            },
            "id": 91163,
            "nodeType": "InheritanceSpecifier",
            "src": "1400:13:371"
          },
          {
            "baseName": {
              "id": 91164,
              "name": "ContractMetadata",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 17526,
              "src": "1419:16:371"
            },
            "id": 91165,
            "nodeType": "InheritanceSpecifier",
            "src": "1419:16:371"
          },
          {
            "baseName": {
              "id": 91166,
              "name": "PermissionsEnumerable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 21799,
              "src": "1441:21:371"
            },
            "id": 91167,
            "nodeType": "InheritanceSpecifier",
            "src": "1441:21:371"
          },
          {
            "baseName": {
              "id": 91168,
              "name": "ERC2771ContextUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 45607,
              "src": "1468:25:371"
            },
            "id": 91169,
            "nodeType": "InheritanceSpecifier",
            "src": "1468:25:371"
          },
          {
            "baseName": {
              "id": 91170,
              "name": "MulticallUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 156227,
              "src": "1499:20:371"
            },
            "id": 91171,
            "nodeType": "InheritanceSpecifier",
            "src": "1499:20:371"
          },
          {
            "baseName": {
              "id": 91172,
              "name": "Staking20Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 29126,
              "src": "1525:20:371"
            },
            "id": 91173,
            "nodeType": "InheritanceSpecifier",
            "src": "1525:20:371"
          },
          {
            "baseName": {
              "id": 91174,
              "name": "ITokenStake",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 76312,
              "src": "1551:11:371"
            },
            "id": 91175,
            "nodeType": "InheritanceSpecifier",
            "src": "1551:11:371"
          }
        ],
        "canonicalName": "TokenStake",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          91576,
          76312,
          29126,
          34126,
          150385,
          156227,
          45607,
          156044,
          21799,
          21500,
          33281,
          33256,
          17526,
          150199,
          32437
        ],
        "name": "TokenStake",
        "nameLocation": "1382:10:371",
        "scope": 91577,
        "usedErrors": []
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 371
}