{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint80",
          "name": "_defaultTimeUnit",
          "type": "uint80"
        },
        {
          "internalType": "address",
          "name": "_defaultAdmin",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_defaultRewardsPerUnitTime",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_stakingToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_rewardToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_nativeTokenWrapper",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "prevURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "newURI",
          "type": "string"
        }
      ],
      "name": "ContractURIUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "prevOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnerUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rewardAmount",
          "type": "uint256"
        }
      ],
      "name": "RewardsClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokensStaked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokensWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldRewardsPerUnitTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newRewardsPerUnitTime",
          "type": "uint256"
        }
      ],
      "name": "UpdatedDefaultRewardsPerUnitTime",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldTimeUnit",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newTimeUnit",
          "type": "uint256"
        }
      ],
      "name": "UpdatedDefaultTimeUnit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldRewardsPerUnitTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newRewardsPerUnitTime",
          "type": "uint256"
        }
      ],
      "name": "UpdatedRewardsPerUnitTime",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldTimeUnit",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newTimeUnit",
          "type": "uint256"
        }
      ],
      "name": "UpdatedTimeUnit",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "claimRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "depositRewardTokens",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDefaultRewardsPerUnitTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_rewardsPerUnitTime",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDefaultTimeUnit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_timeUnit",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRewardTokenBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getRewardsPerUnitTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_rewardsPerUnitTime",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_staker",
          "type": "address"
        }
      ],
      "name": "getStakeInfo",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "_tokensStaked",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_tokenAmounts",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "_totalRewards",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_staker",
          "type": "address"
        }
      ],
      "name": "getStakeInfoForToken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_tokensStaked",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_rewards",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getTimeUnit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_timeUnit",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "indexedTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "isIndexed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "multicall",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "results",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "onERC1155BatchReceived",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "setContractURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_defaultRewardsPerUnitTime",
          "type": "uint256"
        }
      ],
      "name": "setDefaultRewardsPerUnitTime",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint80",
          "name": "_defaultTimeUnit",
          "type": "uint80"
        }
      ],
      "name": "setDefaultTimeUnit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "setOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_rewardsPerUnitTime",
          "type": "uint256"
        }
      ],
      "name": "setRewardsPerUnitTime",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint80",
          "name": "_timeUnit",
          "type": "uint80"
        }
      ],
      "name": "setTimeUnit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint64",
          "name": "_amount",
          "type": "uint64"
        }
      ],
      "name": "stake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "stakers",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "conditionIdOflastUpdate",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "amountStaked",
          "type": "uint64"
        },
        {
          "internalType": "uint128",
          "name": "timeOfLastUpdate",
          "type": "uint128"
        },
        {
          "internalType": "uint256",
          "name": "unclaimedRewards",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "stakersArray",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakingToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint64",
          "name": "_amount",
          "type": "uint64"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawRewardTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "1640:5586:17:-:0;;;744:28:86;;;-1:-1:-1;;;;744:28:86;-1:-1:-1;;;744:28:86;;;2066:464:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;202:1:218;307:7;:22;2302:13:17;-1:-1:-1;;;;;2002:36:86;::::1;1994:58;;;::::0;-1:-1:-1;;;1994:58:86;;1095:2:644;1994:58:86::1;::::0;::::1;1077:21:644::0;1134:1;1114:18;;;1107:29;-1:-1:-1;;;1152:18:644;;;1145:39;1201:18;;1994:58:86::1;;;;;;;;;2062:12;:28:::0;;-1:-1:-1;;;;;;2062:28:86::1;-1:-1:-1::0;;;;;2062:28:86;;;::::1;::::0;;;::::1;::::0;;2327:26:17::1;2339:13:::0;2327:11:::1;:26::i;:::-;2363:73;2391:16:::0;2409:26;2363:27:::1;:73::i;:::-;2447:11;:26:::0;;-1:-1:-1;;;;;;2447:26:17::1;-1:-1:-1::0;;;;;2447:26:17;;::::1;;::::0;;2483:40:::1;;::::0;-1:-1:-1;1640:5586:17;;-1:-1:-1;;;1640:5586:17;1421:172:68;1501:6;;;-1:-1:-1;;;;;1517:18:68;;;-1:-1:-1;;;;;;1517:18:68;;;;;;;1551:35;;1501:6;;;1517:18;1501:6;;1551:35;;1480:18;;1551:35;1470:123;1421:172;:::o;16319:622:86:-;-1:-1:-1;;;;;16438:14:86;;16430:47;;;;-1:-1:-1;;;16430:47:86;;1432:2:644;16430:47:86;;;1414:21:644;1471:2;1451:18;;;1444:30;1510:22;1490:18;;;1483:50;1550:18;;16430:47:86;1230:344:644;16430:47:86;16508:22;;;-1:-1:-1;;;16508:22:86;;-1:-1:-1;;;;;16508:22:86;;16566:1;;16508:22;16540:27;16566:1;16508:22;16540:27;:::i;:::-;;;-1:-1:-1;;;;;16540:27:86;;;;;;;;;;;;;;;;;;;;;;;16610:196;;;;;;;;-1:-1:-1;;;;;16610:196:86;;;;;16750:15;16610:196;;;;;;;;;-1:-1:-1;16610:196:86;;;;;;;;;;;;16578:29;;;;;;:16;:29;;;;;;:228;;;;;;;;;;-1:-1:-1;;;16578:228:86;-1:-1:-1;;;;;;;;16578:228:86;;;;;-1:-1:-1;;;;;;16578:228:86;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16578:228:86;;;;;;;;16821:15;;-1:-1:-1;16817:118:86;;16908:15;16852:16;:33;16869:15;16883:1;16869:11;:15;:::i;:::-;-1:-1:-1;;;;;16852:33:86;;;;;;;;;;;;-1:-1:-1;16852:33:86;:72;;-1:-1:-1;;;;;16852:72:86;;;;-1:-1:-1;;;16852:72:86;-1:-1:-1;;;;;;;;16852:72:86;;;;;;;;;16817:118;16420:521;16319:622;;:::o;14:177:644:-;93:13;;-1:-1:-1;;;;;135:31:644;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:692::-;310:6;318;326;334;342;350;403:3;391:9;382:7;378:23;374:33;371:53;;;420:1;417;410:12;371:53;446:16;;-1:-1:-1;;;;;491:30:644;;481:41;;471:69;;536:1;533;526:12;471:69;559:5;-1:-1:-1;583:49:644;628:2;613:18;;583:49;:::i;:::-;573:59;;672:2;661:9;657:18;651:25;641:35;;695:49;740:2;729:9;725:18;695:49;:::i;:::-;685:59;;763:50;808:3;797:9;793:19;763:50;:::i;:::-;753:60;;832:50;877:3;866:9;862:19;832:50;:::i;:::-;822:60;;196:692;;;;;;;;:::o;1579:127::-;1640:10;1635:3;1631:20;1628:1;1621:31;1671:4;1668:1;1661:15;1695:4;1692:1;1685:15;1711:236;1750:3;-1:-1:-1;;;;;1816:10:644;;;1846;;;1876:12;;;1868:21;;1865:47;;;1892:18;;:::i;:::-;1928:13;;1711:236;-1:-1:-1;;;;1711:236:644:o;1952:229::-;1991:4;-1:-1:-1;;;;;2088:10:644;;;;2058;;2110:12;;;2107:38;;;2125:18;;:::i;:::-;2162:13;;1952:229;-1:-1:-1;;;1952:229:644:o;:::-;1640:5586:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "1640:5586:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2659:10;-1:-1:-1;;;;;2673:18:17;2659:32;;2651:77;;;;-1:-1:-1;;;2651:77:17;;216:2:644;2651:77:17;;;198:21:644;;;235:18;;;228:30;294:34;274:18;;;267:62;346:18;;2651:77:17;;;;;;;;;1640:5586;;;;;4051:213;;;;;;;;;;-1:-1:-1;4051:213:17;;;;;:::i;:::-;;:::i;:::-;;;831:14:644;;824:22;806:41;;794:2;779:18;4051:213:17;;;;;;;;3302:102:86;;;;;;;;;;-1:-1:-1;3302:102:86;;;;;:::i;:::-;;:::i;1133:173:68:-;;;;;;;;;;-1:-1:-1;1133:173:68;;;;;:::i;:::-;;:::i;7494:302:86:-;;;;;;;;;;-1:-1:-1;7494:302:86;;;;;:::i;:::-;;:::i;:::-;;;;1845:25:644;;;1901:2;1886:18;;1879:34;;;;1818:18;7494:302:86;1671:248:644;2784:165:17;;;;;;:::i;:::-;;:::i;10010:152:86:-;;;;;;;;;;;;;:::i;:::-;;;2070:25:644;;;2058:2;2043:18;10010:152:86;1924:177:644;5730:540:86;;;;;;;;;;-1:-1:-1;5730:540:86;;;;;:::i;:::-;;:::i;6570:608::-;;;;;;;;;;-1:-1:-1;6570:608:86;;;;;:::i;:::-;;:::i;1516:61::-;;;;;;;;;;-1:-1:-1;1516:61:86;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1516:61:86;;;;-1:-1:-1;;;1516:61:86;;;;;;-1:-1:-1;;;1516:61:86;;;-1:-1:-1;;;;;1516:61:86;;;;;;;;-1:-1:-1;;;;;2753:15:644;;;2735:34;;2805:15;;;;2800:2;2785:18;;2778:43;-1:-1:-1;;;;;2857:32:644;;;2837:18;;;2830:60;;;;2921:2;2906:18;;2899:34;2685:3;2670:19;1516:61:86;2471:468:644;3728:650:86;;;;;;;;;;-1:-1:-1;3728:650:86;;;;;:::i;:::-;;:::i;647:27::-;;;;;;;;;;-1:-1:-1;647:27:86;;;;-1:-1:-1;;;;;647:27:86;;;;;;;;;;:::i;9654:350::-;;;;;;;;;;-1:-1:-1;9654:350:86;;;;;:::i;:::-;;:::i;4734:718::-;;;;;;;;;;-1:-1:-1;4734:718:86;;;;;:::i;:::-;;:::i;871:86:68:-;;;;;;;;;;;;;:::i;1003:188:54:-;;;;;;;;;;-1:-1:-1;1003:188:54;;;;;:::i;:::-;;:::i;3244:124:17:-;;;;;;;;;;-1:-1:-1;3343:18:17;;3244:124;;10168:192:86;;;;;;;;;;;;;:::i;2533:113::-;;;;;;;;;;-1:-1:-1;2533:113:86;;;;;:::i;:::-;;:::i;947:30::-;;;;;;;;;;-1:-1:-1;947:30:86;;;;;:::i;:::-;;:::i;698:319:63:-;;;;;;;;;;-1:-1:-1;698:319:63;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3827:218:17:-;;;;;;;;;;-1:-1:-1;3827:218:17;;;;;:::i;:::-;4035:6;3827:218;;;;;;;;;;;;;;-1:-1:-1;;;;;;8990:33:644;;;8972:52;;8960:2;8945:18;3827:218:17;8828:202:644;8146:1182:86;;;;;;;;;;-1:-1:-1;8146:1182:86;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;2904:119::-;;;;;;;;;;-1:-1:-1;2904:119:86;;;;;:::i;:::-;;:::i;9334:314::-;;;;;;;;;;-1:-1:-1;9334:314:86;;;;;:::i;:::-;;:::i;3009:159:17:-;;;;;;;;;;-1:-1:-1;3009:159:17;;;;;:::i;:::-;;:::i;565:34:54:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;3558:263:17:-;;;;;;;;;;-1:-1:-1;3558:263:17;;;;;:::i;:::-;;:::i;1817:26::-;;;;;;;;;;-1:-1:-1;1817:26:17;;;;-1:-1:-1;;;;;1817:26:17;;;1051:41:86;;;;;;;;;;-1:-1:-1;1051:41:86;;;;;:::i;:::-;;;;;;;;;;;;;;;;1875:49;;;;;;;;;;-1:-1:-1;1875:49:86;;;;;:::i;:::-;;:::i;4051:213:17:-;4145:4;-1:-1:-1;;;;;;4168:49:17;;-1:-1:-1;;;4168:49:17;;:89;;-1:-1:-1;;;;;;;;;;947:40:22;;;4221:36:17;4161:96;4051:213;-1:-1:-1;;4051:213:17:o;3302:102:86:-;245:1:218;548:7;;:19;;540:63;;;;-1:-1:-1;;;540:63:218;;;;;;;:::i;:::-;245:1;678:18;;3374:23:86::1;3388:8:::0;3374:13:::1;:23::i;:::-;-1:-1:-1::0;202:1:218;851:7;:22;3302:102:86:o;1133:173:68:-;1203:14;:12;:14::i;:::-;1198:70;;1233:24;;-1:-1:-1;;;1233:24:68;;;;;;;:::i;1198:70::-;1277:22;1289:9;1277:11;:22::i;:::-;1133:173;:::o;7494:302:86:-;7622:21;7693:17;;;:7;:17;;;;;;;;-1:-1:-1;;;;;7693:26:86;;;;;;;;;:39;-1:-1:-1;;;7693:39:86;;-1:-1:-1;;;;;7693:39:86;;7753:36;7693:17;:26;7753:17;:36::i;:::-;7742:47;;7494:302;;;;;:::o;2784:165:17:-;245:1:218;548:7;;:19;;540:63;;;;-1:-1:-1;;;540:63:218;;;;;;;:::i;:::-;245:1;678:18;;2878:29:17::1;2899:7:::0;2878:20:::1;:29::i;10010:152:86:-:0;10061:17;10102:16;:44;10144:1;10119:22;;;;;;;;;-1:-1:-1;;;;;10119:22:86;:26;;;;:::i;:::-;-1:-1:-1;;;;;10102:44:86;;;;;;;;;;;;-1:-1:-1;10102:44:86;:53;-1:-1:-1;;;;;10102:53:86;;10010:152;-1:-1:-1;10010:152:86:o;5730:540::-;5815:24;:22;:24::i;:::-;5810:80;;5855:24;;-1:-1:-1;;;5855:24:86;;;;;;;:::i;5810:80::-;5900:41;5944:16;:44;5986:1;5961:22;;;;;;;;;-1:-1:-1;;;;;5961:22:86;:26;;;;:::i;:::-;-1:-1:-1;;;;;5944:44:86;;;;;;;;;;;;;;;-1:-1:-1;5944:44:86;5900:88;;;;;;;;;-1:-1:-1;;;;;5900:88:86;;;;;;-1:-1:-1;;;5900:88:86;;;;;;;;;;;-1:-1:-1;;;5900:88:86;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6006:46:86;;;;5998:87;;;;-1:-1:-1;;;5998:87:86;;12211:2:644;5998:87:86;;;12193:21:644;12250:2;12230:18;;;12223:30;-1:-1:-1;;;12269:18:644;;;12262:58;12337:18;;5998:87:86;12009:352:644;5998:87:86;6096:83;6124:16;6142:17;:36;;;6096:27;:83::i;:::-;6218:26;;6195:68;;;;;;6246:16;;6195:68;:::i;:::-;;;;;;;;5800:470;5730:540;:::o;6570:608::-;6676:24;:22;:24::i;:::-;6671:80;;6716:24;;-1:-1:-1;;;6716:24:86;;;;;;;:::i;6671:80::-;6761:41;6805:16;:44;6847:1;6822:22;;;;;;;;;-1:-1:-1;;;;;6822:22:86;:26;;;;:::i;:::-;-1:-1:-1;;;;;6805:44:86;;;;;;;;;;;;;;;-1:-1:-1;6805:44:86;6761:88;;;;;;;;;-1:-1:-1;;;;;6761:88:86;;;;;-1:-1:-1;;;6761:88:86;;;;;;;;;;;-1:-1:-1;;;6761:88:86;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6867:66:86;;;6859:104;;;;-1:-1:-1;;;6859:104:86;;12874:2:644;6859:104:86;;;12856:21:644;12913:2;12893:18;;;12886:30;-1:-1:-1;;;12932:18:644;;;12925:55;12997:18;;6859:104:86;12672:349:644;6859:104:86;7002:26;;6974:83;;7030:26;6974:27;:83::i;:::-;7106:36;;;;7073:98;;;1845:25:644;;;1901:2;1886:18;;1879:34;;;7073:98:86;;1818:18:644;7073:98:86;1671:248:644;3728:650:86;3817:24;:22;:24::i;:::-;3812:80;;3857:24;;-1:-1:-1;;;3857:24:86;;;;;;;:::i;3812:80::-;3902:23;3928:25;;;:15;:25;;;;;;-1:-1:-1;;;;;3928:25:86;;3999:21;;:144;;4094:27;;;;:17;:27;;;;;;4122:20;4141:1;4122:16;:20;:::i;:::-;-1:-1:-1;;;;;4094:49:86;-1:-1:-1;;;;;4094:49:86;;;;;;;;;;;;3999:144;;;4052:22;;4035:16;;:44;;4052:26;;4077:1;;-1:-1:-1;;;4052:22:86;;-1:-1:-1;;;;;4052:22:86;:26;:::i;:::-;-1:-1:-1;;;;;4035:44:86;-1:-1:-1;;;;;4035:44:86;;;;;;;;;;;;3999:144;3963:180;;;;;;;;;;-1:-1:-1;;;;;3963:180:86;;;;;;-1:-1:-1;;;3963:180:86;;;;;;;;-1:-1:-1;;;3963:180:86;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4161:31:86;;;;4153:64;;;;-1:-1:-1;;;4153:64:86;;13228:2:644;4153:64:86;;;13210:21:644;13267:2;13247:18;;;13240:30;-1:-1:-1;;;13286:18:644;;;13279:50;13346:18;;4153:64:86;13026:344:644;4153:64:86;4228:71;4249:8;4259:9;4270;:28;;;4228:20;:71::i;:::-;4331:8;4315:56;4341:9;:18;;;4361:9;4315:56;;;;;;;:::i;:::-;;;;;;;;3802:576;;3728:650;;:::o;9654:350::-;9724:27;9789:25;;;:15;:25;;;;;;-1:-1:-1;;;;;9789:25:86;9832:21;9824:73;;;;-1:-1:-1;;;9824:73:86;;13577:2:644;9824:73:86;;;13559:21:644;13616:2;13596:18;;;13589:30;13655:34;13635:18;;;13628:62;-1:-1:-1;;;13706:18:644;;;13699:37;13753:19;;9824:73:86;13375:403:644;9824:73:86;9929:27;;;;:17;:27;;;;;;9957:20;9976:1;9957:16;:20;:::i;:::-;-1:-1:-1;;;;;9929:49:86;;;;;;;;;;;;-1:-1:-1;9929:49:86;:68;;;;9654:350;-1:-1:-1;;;9654:350:86:o;4734:718::-;4844:24;:22;:24::i;:::-;4839:80;;4884:24;;-1:-1:-1;;;4884:24:86;;;;;;;:::i;4839:80::-;4929:23;4955:25;;;:15;:25;;;;;;-1:-1:-1;;;;;4955:25:86;;5026:21;;:144;;5121:27;;;;:17;:27;;;;;;5149:20;5168:1;5149:16;:20;:::i;:::-;-1:-1:-1;;;;;5121:49:86;-1:-1:-1;;;;;5121:49:86;;;;;;;;;;;;5026:144;;;5079:22;;5062:16;;:44;;5079:26;;5104:1;;-1:-1:-1;;;5079:22:86;;-1:-1:-1;;;;;5079:22:86;:26;:::i;:::-;-1:-1:-1;;;;;5062:44:86;-1:-1:-1;;;;;5062:44:86;;;;;;;;;;;;5026:144;4990:180;;;;;;;;;;-1:-1:-1;;;;;4990:180:86;;;;;-1:-1:-1;;;4990:180:86;;;;;;;;-1:-1:-1;;;4990:180:86;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5188:51:86;;;5180:81;;;;-1:-1:-1;;;5180:81:86;;13985:2:644;5180:81:86;;;13967:21:644;14024:2;14004:18;;;13997:30;-1:-1:-1;;;14043:18:644;;;14036:47;14100:18;;5180:81:86;13783:341:644;5180:81:86;5272:71;5293:8;5303:9;:18;;;5323:19;5272:20;:71::i;:::-;5395:28;;;;5359:86;;;1845:25:644;;;1901:2;1886:18;;1879:34;;;5385:8:86;;5359:86;;1818:18:644;5359:86:86;1671:248:644;871:86:68;944:6;;-1:-1:-1;;;;;944:6:68;;871:86::o;1003:188:54:-;1080:20;:18;:20::i;:::-;1075:76;;1116:24;;-1:-1:-1;;;1116:24:54;;;;;;;:::i;1075:76::-;1161:23;1179:4;1161:17;:23::i;10168:192:86:-;10229:27;10290:16;:44;10332:1;10307:22;;;;;;;;;-1:-1:-1;;;;;10307:22:86;:26;;;;:::i;:::-;-1:-1:-1;;;;;10290:44:86;-1:-1:-1;;;;;10290:44:86;;;;;;;;;;;;:63;;;10268:85;;10168:192;:::o;2533:113::-;245:1:218;548:7;;:19;;540:63;;;;-1:-1:-1;;;540:63:218;;;;;;;:::i;:::-;245:1;678:18;;2614:25:86::1;2621:8:::0;2631:7;2614:6:::1;:25::i;:::-;-1:-1:-1::0;;202:1:218;851:7;:22;2533:113:86:o;947:30::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;947:30:86;:::o;698:319:63:-;775:22;831:4;-1:-1:-1;;;;;819:24:63;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;809:34;;858:9;853:134;873:15;;;853:134;;;922:54;961:4;968;;973:1;968:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;922:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;922:30:63;;-1:-1:-1;;;922:54:63:i;:::-;909:7;917:1;909:10;;;;;;;;:::i;:::-;;;;;;:67;;;;890:3;;;;;:::i;:::-;;;;853:134;;;;698:319;;;;:::o;8146:1182:86:-;8261:30;8305;8349:21;8395:31;8429:13;8395:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8452:31;8500:14;:21;-1:-1:-1;;;;;8486:36:86;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8486:36:86;-1:-1:-1;8560:21:86;;8452:70;;-1:-1:-1;8532:25:86;;8630:203;8654:17;8650:1;:21;8630:203;;;8712:7;:26;8720:14;8735:1;8720:17;;;;;;;;:::i;:::-;;;;;;;8712:26;;;;;;;;;;;:35;8739:7;-1:-1:-1;;;;;8712:35:86;-1:-1:-1;;;;;8712:35:86;;;;;;;;;;;;:48;;;;;;;;;;-1:-1:-1;;;;;8712:48:86;-1:-1:-1;;;;;8692:68:86;:14;8707:1;8692:17;;;;;;;;:::i;:::-;;;;;;:68;;;;;8798:1;8778:14;8793:1;8778:17;;;;;;;;:::i;:::-;;;;;;;:21;8774:48;;;8801:21;8821:1;8801:21;;:::i;:::-;;;8774:48;8673:3;;;;:::i;:::-;;;;8630:203;;;;8873:16;-1:-1:-1;;;;;8859:31:86;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8859:31:86;;8843:47;;8930:16;-1:-1:-1;;;;;8916:31:86;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8916:31:86;;8900:47;;8957:13;8989:9;8984:338;9008:17;9004:1;:21;8984:338;;;9070:1;9050:14;9065:1;9050:17;;;;;;;;:::i;:::-;;;;;;;:21;9046:266;;;9114:14;9129:1;9114:17;;;;;;;;:::i;:::-;;;;;;;9091:13;9105:5;9091:20;;;;;;;;:::i;:::-;;;;;;:40;;;;;9172:14;9187:1;9172:17;;;;;;;;:::i;:::-;;;;;;;9149:13;9163:5;9149:20;;;;;;;;:::i;:::-;;;;;;:40;;;;;9224:45;9242:14;9257:1;9242:17;;;;;;;;:::i;:::-;;;;;;;9261:7;9224:17;:45::i;:::-;9207:62;;;;:::i;:::-;;-1:-1:-1;9287:10:86;9296:1;9287:10;;:::i;:::-;;;9046:266;9027:3;;;;:::i;:::-;;;;8984:338;;;;8385:943;;;;;8146:1182;;;;;:::o;2904:119::-;245:1:218;548:7;;:19;;540:63;;;;-1:-1:-1;;;540:63:218;;;;;;;:::i;:::-;245:1;678:18;;2988:28:86::1;2998:8:::0;3008:7;2988:9:::1;:28::i;9334:314::-:0;9394:17;9449:25;;;:15;:25;;;;;;-1:-1:-1;;;;;9449:25:86;9492:21;9484:77;;;;-1:-1:-1;;;9484:77:86;;15262:2:644;9484:77:86;;;15244:21:644;15301:2;15281:18;;;15274:30;15340:34;15320:18;;;15313:62;-1:-1:-1;;;15391:18:644;;;15384:41;15442:19;;9484:77:86;15060:407:644;9484:77:86;9583:27;;;;:17;:27;;;;;;9611:20;9630:1;9611:16;:20;:::i;:::-;-1:-1:-1;;;;;9583:49:86;;;;;;;;;;;;-1:-1:-1;9583:49:86;:58;-1:-1:-1;;;;;9583:58:86;;9334:314;-1:-1:-1;;;9334:314:86:o;3009:159:17:-;245:1:218;548:7;;:19;;540:63;;;;-1:-1:-1;;;540:63:218;;;;;;;:::i;:::-;245:1;678:18;;3096:30:17::1;3118:7:::0;3096:21:::1;:30::i;565:34:54:-:0;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3558:263:17:-;3732:9;;3706:6;;-1:-1:-1;;;3732:9:17;;;;3745:1;3732:14;3724:42;;;;-1:-1:-1;;;3724:42:17;;16059:2:644;3724:42:17;;;16041:21:644;16098:2;16078:18;;;16071:30;-1:-1:-1;;;16117:18:644;;;16110:45;16172:18;;3724:42:17;15857:339:644;3724:42:17;-1:-1:-1;;;;3558:263:17;;;;;;;;:::o;1875:49:86:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1875:49:86;;-1:-1:-1;1875:49:86;;-1:-1:-1;1875:49:86:o;13019:782::-;13087:15;13173:46;13191:8;19596:10;13173:17;:46::i;:::-;13105:17;;;;:7;:17;;;;;;;;19596:10;13105:36;;;;;;;:53;;;:114;;;;:::i;:::-;13087:132;-1:-1:-1;13238:12:86;13230:35;;;;-1:-1:-1;;;13230:35:86;;16403:2:644;13230:35:86;;;16385:21:644;16442:2;16422:18;;;16415:30;-1:-1:-1;;;16461:18:644;;;16454:40;16511:18;;13230:35:86;16201:334:644;13230:35:86;13276:17;;;;:7;:17;;;;;;;;19596:10;13276:36;;;;;;;:79;;-1:-1:-1;;;;;13276:79:86;-1:-1:-1;;;;;;;;13339:15:86;13276:79;;;;;-1:-1:-1;13365:53:86;:57;;;13455:25;;;:15;:25;;;;;;-1:-1:-1;;;;;13455:25:86;13578:17;;:97;;13674:1;13659:12;:16;13578:97;;;13639:1;13614:22;;;;;;;;;-1:-1:-1;;;;;13614:22:86;:26;13578:97;13515:17;;;;:7;:17;;;;;;;;19596:10;13515:36;;;;;;;;:160;;-1:-1:-1;;;;;;13515:160:86;-1:-1:-1;;;;;13515:160:86;;;;;;;;;;;13696:40;;13728:7;13696:12;:40::i;:::-;13752:42;;2070:25:644;;;19596:10:86;;13752:42;;2058:2:644;2043:18;13752:42:86;;;;;;;13077:724;;13019:782;:::o;7109:115:17:-;7173:4;7210:7;:5;:7::i;:::-;-1:-1:-1;;;;;7196:21:17;:10;-1:-1:-1;;;;;7196:21:17;;7189:28;;7109:115;:::o;1421:172:68:-;1501:6;;;-1:-1:-1;;;;;1517:18:68;;;-1:-1:-1;;;;;;1517:18:68;;;;;;;1551:35;;1501:6;;;1517:18;1501:6;;1551:35;;1480:18;;1551:35;1470:123;1421:172;:::o;13855:370:86:-;13946:16;13978:17;;;:7;:17;;;;;;;;-1:-1:-1;;;;;13978:24:86;;;;;;;;;:37;-1:-1:-1;;;13978:37:86;;-1:-1:-1;;;;;13978:37:86;13974:245;;-1:-1:-1;14047:17:86;;;;:7;:17;;;;;;;;-1:-1:-1;;;;;14047:24:86;;;;;;;;;:41;;;13974:245;;;14174:34;14192:8;14202:5;14174:17;:34::i;:::-;14130:17;;;;:7;:17;;;;;;;;-1:-1:-1;;;;;14130:24:86;;;;;;;;;:41;;;:78;;;;:::i;:::-;14119:89;13855:370;-1:-1:-1;;;13855:370:86:o;5358:660:17:-;5454:7;:5;:7::i;:::-;-1:-1:-1;;;;;5440:21:17;:10;-1:-1:-1;;;;;5440:21:17;;5432:48;;;;-1:-1:-1;;;5432:48:17;;;;;;;:::i;:::-;5514:11;;5491:20;;-1:-1:-1;;;;;5514:11:17;408:42:284;5514:47:17;:82;;5585:11;;-1:-1:-1;;;;;5585:11:17;5514:82;;;5564:18;5514:82;5491:105;;5607:21;5638:12;-1:-1:-1;;;;;5631:30:17;;5670:4;5631:45;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5747:11;;5607:69;;-1:-1:-1;5686:186:17;;-1:-1:-1;;;;;5747:11:17;5772:10;5804:4;5823:7;5844:18;5686:47;:186::i;:::-;5882:20;5953:13;5912:12;-1:-1:-1;;;;;5905:30:17;;5944:4;5905:45;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:61;;;;:::i;:::-;5882:84;;5999:12;5977:18;;:34;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;5358:660:17:o;16319:622:86:-;-1:-1:-1;;;;;16438:14:86;;16430:47;;;;-1:-1:-1;;;16430:47:86;;;;;;;:::i;:::-;16508:22;;;-1:-1:-1;;;16508:22:86;;-1:-1:-1;;;;;16508:22:86;;16566:1;;16508:22;16540:27;16566:1;16508:22;16540:27;:::i;:::-;;;-1:-1:-1;;;;;16540:27:86;;;;;;;;;;;;;;;;;;;;;;;16610:196;;;;;;;;-1:-1:-1;;;;;16610:196:86;;;;;16750:15;16610:196;;;;;;;;;-1:-1:-1;16610:196:86;;;;;;;;;;;;16578:29;;;;;;:16;:29;;;;;;:228;;;;;;;;;;-1:-1:-1;;;16578:228:86;-1:-1:-1;;;;;;;;16578:228:86;;;-1:-1:-1;;;16578:228:86;-1:-1:-1;;;;;;16578:228:86;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16578:228:86;;;;;;;;16821:15;;-1:-1:-1;16817:118:86;;16908:15;16852:16;:33;16869:15;16883:1;16869:11;:15;:::i;:::-;-1:-1:-1;;;;;16852:33:86;;;;;;;;;;;;-1:-1:-1;16852:33:86;:72;;-1:-1:-1;;;;;16852:72:86;;;;-1:-1:-1;;;16852:72:86;-1:-1:-1;;;;;;;;16852:72:86;;;;;;;;;16817:118;16420:521;16319:622;;:::o;14943:1325::-;-1:-1:-1;;;;;15103:14:86;;15095:47;;;;-1:-1:-1;;;15095:47:86;;;;;;;:::i;:::-;15152:18;15173:25;;;:15;:25;;;;;;-1:-1:-1;;;;;15173:25:86;15213:16;15209:655;;15278:22;;-1:-1:-1;;;15278:22:86;;-1:-1:-1;;;;;15278:22:86;15314:540;15335:23;-1:-1:-1;;;;;15321:37:86;:11;-1:-1:-1;;;;;15321:37:86;;15314:540;;;15396:41;15440:16;:29;15457:11;-1:-1:-1;;;;;15440:29:86;-1:-1:-1;;;;;15440:29:86;;;;;;;;;;;;15396:73;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;15396:73:86;-1:-1:-1;;;;;15396:73:86;-1:-1:-1;;;;;15396:73:86;;;;;;;;;;;;;;;;-1:-1:-1;;;;;15396:73:86;-1:-1:-1;;;;;15396:73:86;-1:-1:-1;;;;;15396:73:86;;;;;;;;;;;;;;;;-1:-1:-1;;;;;15396:73:86;-1:-1:-1;;;;;15396:73:86;-1:-1:-1;;;;;15396:73:86;;;;;;;;;;;;;;;15531:308;;;;;;;;15580:17;:26;;;-1:-1:-1;;;;;15531:308:86;;;;;15722:17;:32;;;-1:-1:-1;;;;;15531:308:86;;;;;15790:17;:30;;;-1:-1:-1;;;;;15531:308:86;;;;;15648:17;:36;;;15531:308;;;15488:17;:27;15506:8;15488:27;;;;;;;;;;;:40;15516:11;-1:-1:-1;;;;;15488:40:86;-1:-1:-1;;;;;15488:40:86;;;;;;;;;;;;:351;;;;;;;;;;;;;-1:-1:-1;;;;;15488:351:86;;;;;-1:-1:-1;;;;;15488:351:86;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;15488:351:86;;;;;-1:-1:-1;;;;;15488:351:86;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;15488:351:86;;;;;-1:-1:-1;;;;;15488:351:86;;;;;;;;;;;;;;;;;15378:476;15375:1;15360:16;;;;;:::i;:::-;;;15314:540;;;15231:633;15209:655;15874:27;;;;:17;:27;;;;;15941:15;;15902;15916:1;15902:11;:15;:::i;:::-;-1:-1:-1;;;;;15874:44:86;;;;;;;;;;;;;;;;;-1:-1:-1;15874:44:86;;;:83;;-1:-1:-1;;;;;15874:83:86;;;-1:-1:-1;;;15874:83:86;;;-1:-1:-1;;;;;;;;15874:83:86;;;;;;;16011:196;;;;;;;;;;;;16151:15;16011:196;;;;;;;;;;;;;;;;;;;;15968:27;;;:17;:27;;;;;:40;;;;;;;;;;;;;:239;;;;;;;;;;;;;;;;-1:-1:-1;;;15968:239:86;-1:-1:-1;;;;;;15968:239:86;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15968:239:86;;;;16246:15;;15996:11;;16246:15;:::i;:::-;16218:25;;;;:15;:25;;;;;;:43;;-1:-1:-1;;;;;;16218:43:86;-1:-1:-1;;;;;16218:43:86;;;;;;;;;;-1:-1:-1;;;14943:1325:86:o;1273:185:54:-;1339:21;1363:11;1339:35;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1384:18:54;;1339:35;;-1:-1:-1;1384:18:54;;:11;;-1:-1:-1;1384:18:54;;;;-1:-1:-1;1384:18:54;-1:-1:-1;1384:18:54;:::i;:::-;;1418:33;1437:7;1446:4;1418:33;;;;;;;:::i;10611:1214:86:-;-1:-1:-1;;;;;10696:12:86;;10688:41;;;;-1:-1:-1;;;10688:41:86;;18037:2:644;10688:41:86;;;18019:21:644;18076:2;18056:18;;;18049:30;-1:-1:-1;;;18095:18:644;;;18088:46;18151:18;;10688:41:86;17835:340:644;10688:41:86;10796:1;10744:17;;;:7;:17;;;;;;;;19596:10;10744:36;;;;;;;:49;-1:-1:-1;;;10744:49:86;;-1:-1:-1;;;;;10744:49:86;:53;10740:601;;10813:61;10846:8;19596:10;10813:32;:61::i;:::-;10740:601;;;10905:22;;;;:12;:22;;;;;;;;:46;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;10905:46:86;19596:10;10905:46;;;;;;10965:17;;;:7;:17;;;;;:36;;;;;;;;:79;;-1:-1:-1;;;;;10965:79:86;-1:-1:-1;;;;;;;;11028:15:86;10965:79;;;;;11081:25;;;:15;:25;;;;;;-1:-1:-1;;;;;11081:25:86;11211:17;;:105;;11315:1;11300:12;:16;11211:105;;;11276:1;11251:22;;;;;;;;;-1:-1:-1;;;;;11251:22:86;:26;11211:105;11148:17;;;;:7;:17;;;;;;;;19596:10;11148:36;;;;;;;:168;;-1:-1:-1;;;;;;11148:168:86;-1:-1:-1;;;;;11148:168:86;;;;;;;;;;-1:-1:-1;10740:601:86;11351:9;:13;;-1:-1:-1;;;;11351:13:86;;-1:-1:-1;;;11351:13:86;;;;-1:-1:-1;;;;;11383:12:86;11374:39;19596:10;11441:4;11448:8;11458:7;11374:96;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11480:9:86;:13;;-1:-1:-1;;;;11480:13:86;-1:-1:-1;;;11480:13:86;;;-1:-1:-1;;;11563:17:86;;;:7;:17;;;;;11616:7;;11581:17;19596:10;;19517:96;11581:17;-1:-1:-1;;;;;11563:36:86;;;;;;;;;;;;-1:-1:-1;11563:36:86;:60;;:49;;:60;;;;-1:-1:-1;;;11563:60:86;;-1:-1:-1;;;;;11563:60:86;;:::i;:::-;;;-1:-1:-1;;;;;11563:60:86;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11639:19:86;;;:9;:19;;;;;;;;11634:119;;11674:19;;;;:9;:19;;;;;:26;;-1:-1:-1;;11674:26:86;11696:4;11674:26;;;;;;11714:13;:28;;;;;;;;;;;;;;;11634:119;11768:50;;;-1:-1:-1;;;;;18999:31:644;;18981:50;;11768::86;;11800:8;;19596:10;;11768:50;;;;;18969:2:644;11768:50:86;;;10611:1214;;:::o;6538:198:288:-;6621:12;6652:77;6673:6;6681:4;6652:77;;;;;;;;;;;;;;;;;:20;:77::i;11890:1052:86:-;11970:21;11994:17;;;:7;:17;;;;;;;;19596:10;11994:36;;;;;;;:49;-1:-1:-1;;;11994:49:86;;-1:-1:-1;;;;;11994:49:86;;;;12061:12;;12053:45;;;;-1:-1:-1;;;12053:45:86;;19244:2:644;12053:45:86;;;19226:21:644;19283:2;19263:18;;;19256:30;-1:-1:-1;;;19302:18:644;;;19295:50;19362:18;;12053:45:86;19042:344:644;12053:45:86;12133:7;-1:-1:-1;;;;;12116:24:86;:13;:24;;12108:65;;;;-1:-1:-1;;;12108:65:86;;19593:2:644;12108:65:86;;;19575:21:644;19632:2;19612:18;;;19605:30;-1:-1:-1;;;19651:18:644;;;19644:58;19719:18;;12108:65:86;19391:352:644;12108:65:86;12184:61;12217:8;19596:10;10813:32;:61::i;12184:::-;12277:7;-1:-1:-1;;;;;12260:24:86;:13;:24;12256:434;;;12300:30;12333:22;;;:12;:22;;;;;;;;12300:55;;;;;;;;;;;;;;;;;;;12333:22;;12300:55;;;12333:22;12300:55;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;12300:55:86;;;;;;;;;;;;;;;;;;;;;;;12374:9;12369:311;12393:13;:20;12389:1;:24;12369:311;;;19596:10;-1:-1:-1;;;;;12442:37:86;:13;12456:1;12442:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;12442:37:86;;12438:228;;;12531:13;12568:1;12545:13;:20;:24;;;;:::i;:::-;12531:39;;;;;;;;:::i;:::-;;;;;;;12503:12;:22;12516:8;12503:22;;;;;;;;;;;12526:1;12503:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;:67;;-1:-1:-1;;;;;;12503:67:86;-1:-1:-1;;;;;12503:67:86;;;;;;;;;;;12592:22;;;:12;:22;;;;;;:28;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;12592:28:86;;;;;-1:-1:-1;;;;;;12592:28:86;;;;;;12642:5;;12438:228;12415:3;;;:::i;:::-;;;12369:311;;;;12286:404;12256:434;12699:17;;;;:7;:17;;;;;;;;19596:10;12699:36;;;;;;;;:60;;12752:7;;12699;:60;;12752:7;;-1:-1:-1;;;12699:60:86;;-1:-1:-1;;;;;12699:60:86;;:::i;:::-;;;-1:-1:-1;;;;;12699:60:86;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12779:12:86;;-1:-1:-1;;;;;12779:12:86;12770:39;12818:4;12825:17;19596:10;;19517:96;12825:17;12844:8;12854:7;12770:96;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12917:8;12898:17;19596:10;;19517:96;12898:17;12882:53;;-1:-1:-1;;;;;18999:31:644;;18981:50;;-1:-1:-1;;;;;12882:53:86;;;;;;;18969:2:644;18954:18;12882:53:86;;;;;;;11960:982;11890:1052;;:::o;6107:481:17:-;6204:7;:5;:7::i;:::-;-1:-1:-1;;;;;6190:21:17;:10;-1:-1:-1;;;;;6190:21:17;;6182:48;;;;-1:-1:-1;;;6182:48:17;;;;;;;:::i;:::-;6331:18;;6321:7;:28;:63;;6377:7;6356:18;;:28;;;;:::i;:::-;6321:63;;;6352:1;6321:63;6300:18;:84;6456:11;;6395:186;;-1:-1:-1;;;;;6456:11:17;6489:4;6508:10;6532:7;6553:18;6395:47;:186::i;17022:2188:86:-;17115:16;17166:17;;;:7;:17;;;;;;;;-1:-1:-1;;;;;17166:26:86;;;;;;;;;17143:49;;;;;;;;;-1:-1:-1;;;;;17143:49:86;;;;;;-1:-1:-1;;;17143:49:86;;;;;;;;-1:-1:-1;;;17143:49:86;;;-1:-1:-1;;;;;17143:49:86;;;;;;;;;;;;;;17296:25;;;:15;:25;;;;;;;17143:49;;;17296:25;;17332:1872;;-1:-1:-1;17392:22:86;;-1:-1:-1;;;17392:22:86;;-1:-1:-1;;;;;17392:22:86;17445:18;17429:862;17469:16;-1:-1:-1;;;;;17465:20:86;:1;-1:-1:-1;;;;;17465:20:86;;17429:862;;;-1:-1:-1;;;;;17549:19:86;;;17513:33;17549:19;;;:16;:19;;;;;;;;17513:55;;;;;;;;;-1:-1:-1;;;;;17513:55:86;;;;;-1:-1:-1;;;17513:55:86;;;;;;;;;;;-1:-1:-1;;;17513:55:86;;;;;;;;;;;;;;;;;;;;:33;;17607:23;;;;;:76;;17660:6;:23;;;17607:76;;;17633:9;:24;;;-1:-1:-1;;;;;17607:76:86;;-1:-1:-1;;;;;17587:96:86;;;17701:15;17719:9;:22;;;-1:-1:-1;;;;;17719:27:86;17745:1;17719:27;;:70;;17774:15;17719:70;;;17749:9;:22;;;-1:-1:-1;;;;;17719:70:86;;17701:88;;17809:22;17833;17859:148;17920:6;:19;;;-1:-1:-1;;;;;17896:43:86;17907:9;17897:7;:19;;;;:::i;:::-;17896:43;;;;:::i;:::-;17961:9;:28;;;17859:15;:148::i;:::-;17808:199;;;;18026:18;18046;18068:120;18105:8;18152:9;:18;;;-1:-1:-1;;;;;18135:35:86;:14;:35;;;;:::i;:::-;18068:15;:120::i;:::-;18025:163;;;;18218:17;:34;;;;;18239:13;18218:34;:58;;18268:8;18218:58;;;18255:10;18218:58;18207:69;;17495:796;;;;;;;17492:1;17487:6;;;;;:::i;:::-;;;17429:862;;;;17332:1872;;;18337:18;18321:873;18361:16;-1:-1:-1;;;;;18357:20:86;:1;-1:-1:-1;;;;;18357:20:86;;18321:873;;;18405:33;18441:27;;;:17;:27;;;;;;;;-1:-1:-1;;;;;18441:30:86;;;;;;;;;;;;18405:66;;;;;;;;;-1:-1:-1;;;;;18405:66:86;;;;;-1:-1:-1;;;18405:66:86;;;;;;;;;;;-1:-1:-1;;;18405:66:86;;;;;;;;;;;;;;;;;;;;;;;:33;18510:23;;;;;:76;;18563:6;:23;;;18510:76;;;18536:9;:24;;;-1:-1:-1;;;;;18510:76:86;;-1:-1:-1;;;;;18490:96:86;;;18604:15;18622:9;:22;;;-1:-1:-1;;;;;18622:27:86;18648:1;18622:27;;:70;;18677:15;18622:70;;;18652:9;:22;;;-1:-1:-1;;;;;18622:70:86;;18604:88;;18712:22;18736;18762:148;18823:6;:19;;;-1:-1:-1;;;;;18799:43:86;18810:9;18800:7;:19;;;;:::i;18762:148::-;18711:199;;;;18929:18;18949;18971:120;19008:8;19055:9;:18;;;-1:-1:-1;;;;;19038:35:86;:14;:35;;;;:::i;18971:120::-;18928:163;;;;19121:17;:34;;;;;19142:13;19121:34;:58;;19171:8;19121:58;;;19158:10;19121:58;19110:69;;18387:807;;;;;;;18384:1;18379:6;;;;;:::i;:::-;;;18321:873;;;;17332:1872;17133:2077;;;17022:2188;;;;:::o;4691:401:17:-;4804:18;;4792:8;:30;;4784:67;;;;-1:-1:-1;;;4784:67:17;;20609:2:644;4784:67:17;;;20591:21:644;20648:2;20628:18;;;20621:30;-1:-1:-1;;;20667:18:644;;;20660:54;20731:18;;4784:67:17;20407:348:644;4784:67:17;4883:8;4861:18;;:30;;;;;;;:::i;:::-;;;;-1:-1:-1;;4962:11:17;;4901:184;;-1:-1:-1;;;;;4962:11:17;4995:4;5014:7;5035:8;5057:18;4901:47;:184::i;:::-;4691:401;;:::o;979:1021:284:-;1178:12;1174:49;;1206:7;;1174:49;-1:-1:-1;;;;;1237:25:284;;408:42;1237:25;1233:761;;;-1:-1:-1;;;;;1282:22:284;;1299:4;1282:22;1278:626;;;1412:44;;-1:-1:-1;;;1412:44:284;;;;;2070:25:644;;;-1:-1:-1;;;;;1412:35:284;;;;;2043:18:644;;1412:44:284;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1474:69;1509:3;1514:7;1523:19;1474:34;:69::i;:::-;1233:761;;1278:626;-1:-1:-1;;;;;1568:20:284;;1583:4;1568:20;1564:340;;;1676:9;1665:7;:20;1657:52;;;;-1:-1:-1;;;1657:52:284;;20962:2:644;1657:52:284;;;20944:21:644;21001:2;20981:18;;;20974:30;-1:-1:-1;;;21020:18:644;;;21013:49;21079:18;;1657:52:284;20760:343:644;1657:52:284;1733:19;-1:-1:-1;;;;;1727:34:284;;1770:7;1727:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1233:761;;1564:340;1820:69;1855:3;1860:7;1869:19;1820:34;:69::i;1233:761::-;1934:49;1952:9;1963:5;1970:3;1975:7;1934:17;:49::i;:::-;979:1021;;;;;:::o;14324:560:86:-;14428:15;14446:36;14464:8;14474:7;14446:17;:36::i;:::-;14492:17;;;;:7;:17;;;;;;;;-1:-1:-1;;;;;14492:26:86;;;;;;;;;:43;;:54;;14428;;-1:-1:-1;14428:54:86;;14492:43;;:17;:54;;14428;;14492;:::i;:::-;;;;-1:-1:-1;;14556:17:86;;;;:7;:17;;;;;;;;-1:-1:-1;;;;;14556:26:86;;;;;;;;;:69;;-1:-1:-1;;;;;14556:69:86;14609:15;-1:-1:-1;;;;;14556:69:86;-1:-1:-1;;;14556:69:86;;;;14658:25;;;:15;:25;;;;;;-1:-1:-1;;;;;14658:25:86;14770:17;;:97;;14866:1;14851:12;:16;14770:97;;;14831:1;14806:22;;;;;;;;;-1:-1:-1;;;;;14806:22:86;:26;14770:97;14717:17;;;;:7;:17;;;;;;;;-1:-1:-1;;;;;14717:26:86;;;;;;;;;;;;;:150;;-1:-1:-1;;;;;;14717:150:86;-1:-1:-1;;;;;14717:150:86;;;;;;;;;;-1:-1:-1;;14324:560:86:o;6922:387:288:-;7063:12;7095:18;7106:6;7095:10;:18::i;:::-;7087:69;;;;-1:-1:-1;;;7087:69:288;;21310:2:644;7087:69:288;;;21292:21:644;21349:2;21329:18;;;21322:30;21388:34;21368:18;;;21361:62;-1:-1:-1;;;21439:18:644;;;21432:36;21485:19;;7087:69:288;21108:402:644;7087:69:288;7168:12;7182:23;7209:6;-1:-1:-1;;;;;7209:19:288;7229:4;7209:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7167:67;;;;7251:51;7268:7;7277:10;7289:12;7251:16;:51::i;:::-;7244:58;6922:387;-1:-1:-1;;;;;;6922:387:288:o;1339:493:241:-;1400:4;;1683:6;1679:28;;-1:-1:-1;1699:4:241;;-1:-1:-1;1705:1:241;1691:16;;1679:28;1733:5;;;1737:1;1733;:5;:1;1756:5;;;;:::i;:::-;;:10;1752:33;;1776:5;1783:1;1768:17;;;;;;;1752:33;1807:4;;-1:-1:-1;1813:1:241;-1:-1:-1;1339:493:241;;;;;;:::o;641:216::-;702:4;;763:5;;;786;;;782:28;;;801:5;808:1;793:17;;;;;;;2916:469:284;3168:12;3186:2;-1:-1:-1;;;;;3186:7:284;3202:5;3186:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3167:46;;;3228:7;3223:156;;3257:19;-1:-1:-1;;;;;3251:34:284;;3294:5;3251:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3317:51:284;;-1:-1:-1;;;;;;;;3317:40:284;;;-1:-1:-1;3358:2:284;3362:5;3317:40;:51::i;:::-;3055:330;2916:469;;;:::o;2073:396::-;2234:3;-1:-1:-1;;;;;2225:12:284;:5;-1:-1:-1;;;;;2225:12:284;;2221:49;;;2253:7;;2221:49;-1:-1:-1;;;;;2284:22:284;;2301:4;2284:22;2280:183;;;2322:44;-1:-1:-1;;;;;2322:30:284;;2353:3;2358:7;2322:30;:44::i;:::-;2280:183;;;2397:55;-1:-1:-1;;;;;2397:34:284;;2432:5;2439:3;2444:7;2397:34;:55::i;1137:320:288:-;-1:-1:-1;;;;;1427:19:288;;:23;;;1137:320::o;7529:692::-;7675:12;7703:7;7699:516;;;-1:-1:-1;7733:10:288;7726:17;;7699:516;7844:17;;:21;7840:365;;8038:10;8032:17;8098:15;8085:10;8081:2;8077:19;8070:44;7840:365;8177:12;8170:20;;-1:-1:-1;;;8170:20:288;;;;;;;;:::i;735:205:226:-;874:58;;-1:-1:-1;;;;;22196:32:644;;874:58:226;;;22178:51:644;22245:18;;;22238:34;;;847:86:226;;867:5;;-1:-1:-1;;;897:23:226;22151:18:644;;874:58:226;;;;-1:-1:-1;;874:58:226;;;;;;;;;;;;;;-1:-1:-1;;;;;874:58:226;-1:-1:-1;;;;;;874:58:226;;;;;;;;;;847:19;:86::i;946:241::-;1111:68;;-1:-1:-1;;;;;22541:15:644;;;1111:68:226;;;22523:34:644;22593:15;;22573:18;;;22566:43;22625:18;;;22618:34;;;1084:96:226;;1104:5;;-1:-1:-1;;;1134:27:226;22458:18:644;;1111:68:226;22283:375:644;3241:706:226;3660:23;3686:69;3714:4;3686:69;;;;;;;;;;;;;;;;;3694:5;-1:-1:-1;;;;;3686:27:226;;;:69;;;;;:::i;:::-;3769:17;;3660:95;;-1:-1:-1;3769:21:226;3765:176;;3864:10;3853:30;;;;;;;;;;;;:::i;:::-;3845:85;;;;-1:-1:-1;;;3845:85:226;;23147:2:644;3845:85:226;;;23129:21:644;23186:2;23166:18;;;23159:30;23225:34;23205:18;;;23198:62;-1:-1:-1;;;23276:18:644;;;23269:40;23326:19;;3845:85:226;22945:406:644;3827:223:288;3960:12;3991:52;4013:6;4021:4;4027:1;4030:12;3991:21;:52::i;:::-;3984:59;3827:223;-1:-1:-1;;;;3827:223:288:o;4914:501::-;5079:12;5136:5;5111:21;:30;;5103:81;;;;-1:-1:-1;;;5103:81:288;;23558:2:644;5103:81:288;;;23540:21:644;23597:2;23577:18;;;23570:30;23636:34;23616:18;;;23609:62;-1:-1:-1;;;23687:18:644;;;23680:36;23733:19;;5103:81:288;23356:402:644;5103:81:288;5202:18;5213:6;5202:10;:18::i;:::-;5194:60;;;;-1:-1:-1;;;5194:60:288;;23965:2:644;5194:60:288;;;23947:21:644;24004:2;23984:18;;;23977:30;24043:31;24023:18;;;24016:59;24092:18;;5194:60:288;23763:353:644;5194:60:288;5266:12;5280:23;5307:6;-1:-1:-1;;;;;5307:11:288;5327:5;5335:4;5307:33;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5265:75;;;;5357:51;5374:7;5383:10;5395:12;5357:16;:51::i;:::-;5350:58;4914:501;-1:-1:-1;;;;;;;4914:501:288:o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;375:286:644;433:6;486:2;474:9;465:7;461:23;457:32;454:52;;;502:1;499;492:12;454:52;528:23;;-1:-1:-1;;;;;;580:32:644;;570:43;;560:71;;627:1;624;617:12;858:180;917:6;970:2;958:9;949:7;945:23;941:32;938:52;;;986:1;983;976:12;938:52;-1:-1:-1;1009:23:644;;858:180;-1:-1:-1;858:180:644:o;1043:173::-;1111:20;;-1:-1:-1;;;;;1160:31:644;;1150:42;;1140:70;;1206:1;1203;1196:12;1140:70;1043:173;;;:::o;1221:186::-;1280:6;1333:2;1321:9;1312:7;1308:23;1304:32;1301:52;;;1349:1;1346;1339:12;1301:52;1372:29;1391:9;1372:29;:::i;1412:254::-;1480:6;1488;1541:2;1529:9;1520:7;1516:23;1512:32;1509:52;;;1557:1;1554;1547:12;1509:52;1593:9;1580:23;1570:33;;1622:38;1656:2;1645:9;1641:18;1622:38;:::i;2106:171::-;2173:20;;-1:-1:-1;;;;;2222:30:644;;2212:41;;2202:69;;2267:1;2264;2257:12;2282:184;2340:6;2393:2;2381:9;2372:7;2368:23;2364:32;2361:52;;;2409:1;2406;2399:12;2361:52;2432:28;2450:9;2432:28;:::i;2944:252::-;3011:6;3019;3072:2;3060:9;3051:7;3047:23;3043:32;3040:52;;;3088:1;3085;3078:12;3040:52;3124:9;3111:23;3101:33;;3153:37;3186:2;3175:9;3171:18;3153:37;:::i;3201:203::-;-1:-1:-1;;;;;3365:32:644;;;;3347:51;;3335:2;3320:18;;3201:203::o;3409:248::-;3477:6;3485;3538:2;3526:9;3517:7;3513:23;3509:32;3506:52;;;3554:1;3551;3544:12;3506:52;-1:-1:-1;;3577:23:644;;;3647:2;3632:18;;;3619:32;;-1:-1:-1;3409:248:644:o;3662:127::-;3723:10;3718:3;3714:20;3711:1;3704:31;3754:4;3751:1;3744:15;3778:4;3775:1;3768:15;3794:922;3863:6;3916:2;3904:9;3895:7;3891:23;3887:32;3884:52;;;3932:1;3929;3922:12;3884:52;3972:9;3959:23;-1:-1:-1;;;;;4042:2:644;4034:6;4031:14;4028:34;;;4058:1;4055;4048:12;4028:34;4096:6;4085:9;4081:22;4071:32;;4141:7;4134:4;4130:2;4126:13;4122:27;4112:55;;4163:1;4160;4153:12;4112:55;4199:2;4186:16;4221:2;4217;4214:10;4211:36;;;4227:18;;:::i;:::-;4302:2;4296:9;4270:2;4356:13;;-1:-1:-1;;4352:22:644;;;4376:2;4348:31;4344:40;4332:53;;;4400:18;;;4420:22;;;4397:46;4394:72;;;4446:18;;:::i;:::-;4486:10;4482:2;4475:22;4521:2;4513:6;4506:18;4561:7;4556:2;4551;4547;4543:11;4539:20;4536:33;4533:53;;;4582:1;4579;4572:12;4533:53;4638:2;4633;4629;4625:11;4620:2;4612:6;4608:15;4595:46;4683:1;4661:15;;;4678:2;4657:24;4650:35;;;;-1:-1:-1;4665:6:644;3794:922;-1:-1:-1;;;;;3794:922:644:o;4721:352::-;4788:6;4796;4849:2;4837:9;4828:7;4824:23;4820:32;4817:52;;;4865:1;4862;4855:12;4817:52;4901:9;4888:23;4878:33;;4961:2;4950:9;4946:18;4933:32;-1:-1:-1;;;;;4998:5:644;4994:30;4987:5;4984:41;4974:69;;5039:1;5036;5029:12;4974:69;5062:5;5052:15;;;4721:352;;;;;:::o;5078:374::-;5148:8;5158:6;5212:3;5205:4;5197:6;5193:17;5189:27;5179:55;;5230:1;5227;5220:12;5179:55;-1:-1:-1;5253:20:644;;-1:-1:-1;;;;;5285:30:644;;5282:50;;;5328:1;5325;5318:12;5282:50;5365:4;5357:6;5353:17;5341:29;;5425:3;5418:4;5408:6;5405:1;5401:14;5393:6;5389:27;5385:38;5382:47;5379:67;;;5442:1;5439;5432:12;5457:455;5554:6;5562;5615:2;5603:9;5594:7;5590:23;5586:32;5583:52;;;5631:1;5628;5621:12;5583:52;5671:9;5658:23;-1:-1:-1;;;;;5696:6:644;5693:30;5690:50;;;5736:1;5733;5726:12;5690:50;5775:77;5844:7;5835:6;5824:9;5820:22;5775:77;:::i;:::-;5871:8;;5749:103;;-1:-1:-1;5457:455:644;-1:-1:-1;;;;5457:455:644:o;5917:258::-;5989:1;5999:113;6013:6;6010:1;6007:13;5999:113;;;6089:11;;;6083:18;6070:11;;;6063:39;6035:2;6028:10;5999:113;;;6130:6;6127:1;6124:13;6121:48;;;-1:-1:-1;;6165:1:644;6147:16;;6140:27;5917:258::o;6180:257::-;6221:3;6259:5;6253:12;6286:6;6281:3;6274:19;6302:63;6358:6;6351:4;6346:3;6342:14;6335:4;6328:5;6324:16;6302:63;:::i;:::-;6419:2;6398:15;-1:-1:-1;;6394:29:644;6385:39;;;;6426:4;6381:50;;6180:257;-1:-1:-1;;6180:257:644:o;6442:800::-;6602:4;6631:2;6671;6660:9;6656:18;6701:2;6690:9;6683:21;6724:6;6759;6753:13;6790:6;6782;6775:22;6828:2;6817:9;6813:18;6806:25;;6890:2;6880:6;6877:1;6873:14;6862:9;6858:30;6854:39;6840:53;;6928:2;6920:6;6916:15;6949:1;6959:254;6973:6;6970:1;6967:13;6959:254;;;7066:2;7062:7;7050:9;7042:6;7038:22;7034:36;7029:3;7022:49;7094:39;7126:6;7117;7111:13;7094:39;:::i;:::-;7084:49;-1:-1:-1;7191:12:644;;;;7156:15;;;;6995:1;6988:9;6959:254;;;-1:-1:-1;7230:6:644;;6442:800;-1:-1:-1;;;;;;;6442:800:644:o;7247:347::-;7298:8;7308:6;7362:3;7355:4;7347:6;7343:17;7339:27;7329:55;;7380:1;7377;7370:12;7329:55;-1:-1:-1;7403:20:644;;-1:-1:-1;;;;;7435:30:644;;7432:50;;;7478:1;7475;7468:12;7432:50;7515:4;7507:6;7503:17;7491:29;;7567:3;7560:4;7551:6;7543;7539:19;7535:30;7532:39;7529:59;;;7584:1;7581;7574:12;7599:1224;7759:6;7767;7775;7783;7791;7799;7807;7815;7868:3;7856:9;7847:7;7843:23;7839:33;7836:53;;;7885:1;7882;7875:12;7836:53;7908:29;7927:9;7908:29;:::i;:::-;7898:39;;7956:38;7990:2;7979:9;7975:18;7956:38;:::i;:::-;7946:48;;8045:2;8034:9;8030:18;8017:32;-1:-1:-1;;;;;8109:2:644;8101:6;8098:14;8095:34;;;8125:1;8122;8115:12;8095:34;8164:77;8233:7;8224:6;8213:9;8209:22;8164:77;:::i;:::-;8260:8;;-1:-1:-1;8138:103:644;-1:-1:-1;8348:2:644;8333:18;;8320:32;;-1:-1:-1;8364:16:644;;;8361:36;;;8393:1;8390;8383:12;8361:36;8432:79;8503:7;8492:8;8481:9;8477:24;8432:79;:::i;:::-;8530:8;;-1:-1:-1;8406:105:644;-1:-1:-1;8618:3:644;8603:19;;8590:33;;-1:-1:-1;8635:16:644;;;8632:36;;;8664:1;8661;8654:12;8632:36;;8703:60;8755:7;8744:8;8733:9;8729:24;8703:60;:::i;:::-;7599:1224;;;;-1:-1:-1;7599:1224:644;;-1:-1:-1;7599:1224:644;;;;;;8782:8;-1:-1:-1;;;7599:1224:644:o;9035:435::-;9088:3;9126:5;9120:12;9153:6;9148:3;9141:19;9179:4;9208:2;9203:3;9199:12;9192:19;;9245:2;9238:5;9234:14;9266:1;9276:169;9290:6;9287:1;9284:13;9276:169;;;9351:13;;9339:26;;9385:12;;;;9420:15;;;;9312:1;9305:9;9276:169;;;-1:-1:-1;9461:3:644;;9035:435;-1:-1:-1;;;;;9035:435:644:o;9475:536::-;9760:2;9749:9;9742:21;9723:4;9786:56;9838:2;9827:9;9823:18;9815:6;9786:56;:::i;:::-;9890:9;9882:6;9878:22;9873:2;9862:9;9858:18;9851:50;9918:44;9955:6;9947;9918:44;:::i;:::-;9910:52;;;9998:6;9993:2;9982:9;9978:18;9971:34;9475:536;;;;;;:::o;10016:219::-;10165:2;10154:9;10147:21;10128:4;10185:44;10225:2;10214:9;10210:18;10202:6;10185:44;:::i;10240:695::-;10346:6;10354;10362;10370;10378;10386;10439:3;10427:9;10418:7;10414:23;10410:33;10407:53;;;10456:1;10453;10446:12;10407:53;10479:29;10498:9;10479:29;:::i;:::-;10469:39;;10527:38;10561:2;10550:9;10546:18;10527:38;:::i;:::-;10517:48;;10612:2;10601:9;10597:18;10584:32;10574:42;;10663:2;10652:9;10648:18;10635:32;10625:42;;10718:3;10707:9;10703:19;10690:33;-1:-1:-1;;;;;10738:6:644;10735:30;10732:50;;;10778:1;10775;10768:12;10732:50;10817:58;10867:7;10858:6;10847:9;10843:22;10817:58;:::i;:::-;10240:695;;;;-1:-1:-1;10240:695:644;;-1:-1:-1;10240:695:644;;10894:8;;10240:695;-1:-1:-1;;;10240:695:644:o;10940:355::-;11142:2;11124:21;;;11181:2;11161:18;;;11154:30;11220:33;11215:2;11200:18;;11193:61;11286:2;11271:18;;10940:355::o;11300:338::-;11502:2;11484:21;;;11541:2;11521:18;;;11514:30;-1:-1:-1;;;11575:2:644;11560:18;;11553:44;11629:2;11614:18;;11300:338::o;11643:127::-;11704:10;11699:3;11695:20;11692:1;11685:31;11735:4;11732:1;11725:15;11759:4;11756:1;11749:15;11775:229;11814:4;-1:-1:-1;;;;;11911:10:644;;;;11881;;11933:12;;;11930:38;;;11948:18;;:::i;:::-;11985:13;;11775:229;-1:-1:-1;;;11775:229:644:o;12366:301::-;-1:-1:-1;;;;;12593:15:644;;;12575:34;;12645:15;;12640:2;12625:18;;12618:43;12526:2;12511:18;;12366:301::o;14129:127::-;14190:10;14185:3;14181:20;14178:1;14171:31;14221:4;14218:1;14211:15;14245:4;14242:1;14235:15;14261:521;14338:4;14344:6;14404:11;14391:25;14498:2;14494:7;14483:8;14467:14;14463:29;14459:43;14439:18;14435:68;14425:96;;14517:1;14514;14507:12;14425:96;14544:33;;14596:20;;;-1:-1:-1;;;;;;14628:30:644;;14625:50;;;14671:1;14668;14661:12;14625:50;14704:4;14692:17;;-1:-1:-1;14735:14:644;14731:27;;;14721:38;;14718:58;;;14772:1;14769;14762:12;14787:135;14826:3;-1:-1:-1;;14847:17:644;;14844:43;;;14867:18;;:::i;:::-;-1:-1:-1;14914:1:644;14903:13;;14787:135::o;14927:128::-;14967:3;14998:1;14994:6;14991:1;14988:13;14985:39;;;15004:18;;:::i;:::-;-1:-1:-1;15040:9:644;;14927:128::o;15472:380::-;15551:1;15547:12;;;;15594;;;15615:61;;15669:4;15661:6;15657:17;15647:27;;15615:61;15722:2;15714:6;15711:14;15691:18;15688:38;15685:161;;;15768:10;15763:3;15759:20;15756:1;15749:31;15803:4;15800:1;15793:15;15831:4;15828:1;15821:15;15685:161;;15472:380;;;:::o;16540:184::-;16610:6;16663:2;16651:9;16642:7;16638:23;16634:32;16631:52;;;16679:1;16676;16669:12;16631:52;-1:-1:-1;16702:16:644;;16540:184;-1:-1:-1;16540:184:644:o;16729:125::-;16769:4;16797:1;16794;16791:8;16788:34;;;16802:18;;:::i;:::-;-1:-1:-1;16839:9:644;;16729:125::o;16859:344::-;17061:2;17043:21;;;17100:2;17080:18;;;17073:30;-1:-1:-1;;;17134:2:644;17119:18;;17112:50;17194:2;17179:18;;16859:344::o;17208:236::-;17247:3;-1:-1:-1;;;;;17320:2:644;17317:1;17313:10;17350:2;17347:1;17343:10;17381:3;17377:2;17373:12;17368:3;17365:21;17362:47;;;17389:18;;:::i;:::-;17425:13;;17208:236;-1:-1:-1;;;;17208:236:644:o;17449:381::-;17646:2;17635:9;17628:21;17609:4;17672:44;17712:2;17701:9;17697:18;17689:6;17672:44;:::i;:::-;17764:9;17756:6;17752:22;17747:2;17736:9;17732:18;17725:50;17792:32;17817:6;17809;17792:32;:::i;:::-;17784:40;17449:381;-1:-1:-1;;;;;17449:381:644:o;18180:651::-;-1:-1:-1;;;;;18530:15:644;;;18512:34;;18582:15;;;;18577:2;18562:18;;18555:43;18629:2;18614:18;;18607:34;-1:-1:-1;;;;;18677:31:644;;;18672:2;18657:18;;18650:59;18492:3;18740;18725:19;;18718:32;;;-1:-1:-1;18766:19:644;;;18759:30;18821:3;18806:19;;18180:651::o;19748:127::-;19809:10;19804:3;19800:20;19797:1;19790:31;19840:4;19837:1;19830:15;19864:4;19861:1;19854:15;19880:168;19920:7;19986:1;19982;19978:6;19974:14;19971:1;19968:21;19963:1;19956:9;19949:17;19945:45;19942:71;;;19993:18;;:::i;:::-;-1:-1:-1;20033:9:644;;19880:168::o;20053:127::-;20114:10;20109:3;20105:20;20102:1;20095:31;20145:4;20142:1;20135:15;20169:4;20166:1;20159:15;20185:217;20225:1;20251;20241:132;;20295:10;20290:3;20286:20;20283:1;20276:31;20330:4;20327:1;20320:15;20358:4;20355:1;20348:15;20241:132;-1:-1:-1;20387:9:644;;20185:217::o;21515:274::-;21644:3;21682:6;21676:13;21698:53;21744:6;21739:3;21732:4;21724:6;21720:17;21698:53;:::i;:::-;21767:16;;;;;21515:274;-1:-1:-1;;21515:274:644:o;22663:277::-;22730:6;22783:2;22771:9;22762:7;22758:23;22754:32;22751:52;;;22799:1;22796;22789:12;22751:52;22831:9;22825:16;22884:5;22877:13;22870:21;22863:5;22860:32;22850:60;;22906:1;22903;22896:12",
    "linkReferences": {},
    "immutableReferences": {
      "5720": [
        {
          "start": 369,
          "length": 32
        },
        {
          "start": 6274,
          "length": 32
        },
        {
          "start": 6443,
          "length": 32
        },
        {
          "start": 9893,
          "length": 32
        },
        {
          "start": 10925,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "claimRewards(uint256)": "0962ef79",
    "contractURI()": "e8a3d485",
    "depositRewardTokens(uint256)": "16c621e0",
    "getDefaultRewardsPerUnitTime()": "94ebeac8",
    "getDefaultTimeUnit()": "17363949",
    "getRewardTokenBalance()": "93ce5343",
    "getRewardsPerUnitTime(uint256)": "7faf3baf",
    "getStakeInfo(address)": "c3453153",
    "getStakeInfoForToken(uint256,address)": "168fb5c5",
    "getTimeUnit(uint256)": "c66c90cd",
    "indexedTokens(uint256)": "961004d3",
    "isIndexed(uint256)": "fd48ba17",
    "multicall(bytes[])": "ac9650d8",
    "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
    "onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
    "owner()": "8da5cb5b",
    "rewardToken()": "f7c618c1",
    "setContractURI(string)": "938e3d7b",
    "setDefaultRewardsPerUnitTime(uint256)": "5b2238ba",
    "setDefaultTimeUnit(uint80)": "3b56dabd",
    "setOwner(address)": "13af4035",
    "setRewardsPerUnitTime(uint256,uint256)": "81f56a7c",
    "setTimeUnit(uint256,uint80)": "5fe4fac1",
    "stake(uint256,uint64)": "952e68cf",
    "stakers(uint256,address)": "5e225621",
    "stakersArray(uint256,uint256)": "ff37c06d",
    "stakingToken()": "72f702f3",
    "supportsInterface(bytes4)": "01ffc9a7",
    "withdraw(uint256,uint64)": "c434dcfe",
    "withdrawRewardTokens(uint256)": "cb43b2dd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_defaultTimeUnit\",\"type\":\"uint80\"},{\"internalType\":\"address\",\"name\":\"_defaultAdmin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_defaultRewardsPerUnitTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_stakingToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rewardToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_nativeTokenWrapper\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"prevURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newURI\",\"type\":\"string\"}],\"name\":\"ContractURIUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"prevOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"}],\"name\":\"RewardsClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensStaked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldRewardsPerUnitTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newRewardsPerUnitTime\",\"type\":\"uint256\"}],\"name\":\"UpdatedDefaultRewardsPerUnitTime\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldTimeUnit\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newTimeUnit\",\"type\":\"uint256\"}],\"name\":\"UpdatedDefaultTimeUnit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldRewardsPerUnitTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newRewardsPerUnitTime\",\"type\":\"uint256\"}],\"name\":\"UpdatedRewardsPerUnitTime\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldTimeUnit\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newTimeUnit\",\"type\":\"uint256\"}],\"name\":\"UpdatedTimeUnit\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"claimRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"depositRewardTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDefaultRewardsPerUnitTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_rewardsPerUnitTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDefaultTimeUnit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_timeUnit\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRewardTokenBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getRewardsPerUnitTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_rewardsPerUnitTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_staker\",\"type\":\"address\"}],\"name\":\"getStakeInfo\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_tokensStaked\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_tokenAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"_totalRewards\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_staker\",\"type\":\"address\"}],\"name\":\"getStakeInfoForToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokensStaked\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_rewards\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getTimeUnit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_timeUnit\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"indexedTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"isIndexed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"setContractURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_defaultRewardsPerUnitTime\",\"type\":\"uint256\"}],\"name\":\"setDefaultRewardsPerUnitTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_defaultTimeUnit\",\"type\":\"uint80\"}],\"name\":\"setDefaultTimeUnit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_rewardsPerUnitTime\",\"type\":\"uint256\"}],\"name\":\"setRewardsPerUnitTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"_timeUnit\",\"type\":\"uint80\"}],\"name\":\"setTimeUnit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"_amount\",\"type\":\"uint64\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakers\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"conditionIdOflastUpdate\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"amountStaked\",\"type\":\"uint64\"},{\"internalType\":\"uint128\",\"name\":\"timeOfLastUpdate\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"unclaimedRewards\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stakersArray\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"_amount\",\"type\":\"uint64\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawRewardTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"claimRewards(uint256)\":{\"details\":\"See {_claimRewards}. Override that to implement custom logic.             See {_calculateRewards} for reward-calculation logic.\",\"params\":{\"_tokenId\":\"Staked token Id.\"}},\"depositRewardTokens(uint256)\":{\"details\":\"Admin deposits reward tokens.\"},\"getStakeInfo(address)\":{\"params\":{\"_staker\":\"Address for which to calculated rewards.\"},\"returns\":{\"_tokenAmounts\":\"  Amount of each token-id staked.\",\"_tokensStaked\":\"  List of token-ids staked.\",\"_totalRewards\":\"  Total rewards available.\"}},\"getStakeInfoForToken(uint256,address)\":{\"params\":{\"_staker\":\"Address for which to calculated rewards.\"},\"returns\":{\"_rewards\":\"       Available reward amount.\",\"_tokensStaked\":\"  Amount of tokens staked for given token-id.\"}},\"multicall(bytes[])\":{\"details\":\"Receives and executes a batch of function calls on this contract.\",\"params\":{\"data\":\"The bytes data that makes up the batch of function calls to execute.\"},\"returns\":{\"results\":\"The bytes data that makes up the result of the batch of function calls executed.\"}},\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"setContractURI(string)\":{\"details\":\"Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.\",\"params\":{\"_uri\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"setDefaultRewardsPerUnitTime(uint256)\":{\"details\":\"Only admin/authorized-account can call it.\",\"params\":{\"_defaultRewardsPerUnitTime\":\"New rewards per unit time.\"}},\"setDefaultTimeUnit(uint80)\":{\"details\":\"Only admin/authorized-account can call it.\",\"params\":{\"_defaultTimeUnit\":\"New time unit.\"}},\"setOwner(address)\":{\"params\":{\"_newOwner\":\"The address to set as the new owner of the contract.\"}},\"setRewardsPerUnitTime(uint256,uint256)\":{\"details\":\"Only admin/authorized-account can call it.\",\"params\":{\"_rewardsPerUnitTime\":\"New rewards per unit time.\",\"_tokenId\":\"ERC1155 token Id.\"}},\"setTimeUnit(uint256,uint80)\":{\"details\":\"Only admin/authorized-account can call it.\",\"params\":{\"_timeUnit\":\"New time unit.\",\"_tokenId\":\"ERC1155 token Id.\"}},\"stake(uint256,uint64)\":{\"details\":\"See {_stake}. Override that to implement custom logic.\",\"params\":{\"_amount\":\"Amount to stake.\",\"_tokenId\":\"ERC1155 token-id to stake.\"}},\"withdraw(uint256,uint64)\":{\"details\":\"See {_withdraw}. Override that to implement custom logic.\",\"params\":{\"_amount\":\"Amount to withdraw.\",\"_tokenId\":\"ERC1155 token-id to withdraw.\"}},\"withdrawRewardTokens(uint256)\":{\"details\":\"Admin can withdraw excess reward tokens.\"}},\"stateVariables\":{\"nativeTokenWrapper\":{\"details\":\"The address of the native token wrapper contract.\"},\"rewardToken\":{\"details\":\"ERC20 Reward Token address. See {_mintRewards} below.\"},\"rewardTokenBalance\":{\"details\":\"Total amount of reward tokens in the contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"claimRewards(uint256)\":{\"notice\":\"Claim accumulated rewards.\"},\"contractURI()\":{\"notice\":\"Returns the contract metadata URI.\"},\"getRewardTokenBalance()\":{\"notice\":\"View total rewards available in the staking contract.\"},\"getStakeInfo(address)\":{\"notice\":\"View all tokens staked and total rewards for a user.\"},\"getStakeInfoForToken(uint256,address)\":{\"notice\":\"View amount staked and rewards for a user, for a given token-id.\"},\"multicall(bytes[])\":{\"notice\":\"Receives and executes a batch of function calls on this contract.\"},\"owner()\":{\"notice\":\"Returns the owner of the contract.\"},\"setContractURI(string)\":{\"notice\":\"Lets a contract admin set the URI for contract-level metadata.\"},\"setDefaultRewardsPerUnitTime(uint256)\":{\"notice\":\"Set rewards per unit of time.           Interpreted as x rewards per second/per day/etc based on time-unit.\"},\"setDefaultTimeUnit(uint80)\":{\"notice\":\"Set time unit. Set as a number of seconds.           Could be specified as -- x * 1 hours, x * 1 days, etc.\"},\"setOwner(address)\":{\"notice\":\"Lets an authorized wallet set a new owner for the contract.\"},\"setRewardsPerUnitTime(uint256,uint256)\":{\"notice\":\"Set rewards per unit of time.           Interpreted as x rewards per second/per day/etc based on time-unit.\"},\"setTimeUnit(uint256,uint80)\":{\"notice\":\"Set time unit. Set as a number of seconds.           Could be specified as -- x * 1 hours, x * 1 days, etc.\"},\"stake(uint256,uint64)\":{\"notice\":\"Stake ERC721 Tokens.\"},\"withdraw(uint256,uint64)\":{\"notice\":\"Withdraw staked tokens.\"}},\"notice\":\"note: This contract is provided as a base contract.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/base/Staking1155Base.sol\":\"Staking1155Base\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@std/=lib/forge-std/src/\",\":@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/\",\":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/\",\":contracts/=contracts/\",\":ds-test/=lib/ds-test/src/\",\":dynamic-contracts/=lib/dynamic-contracts/src/\",\":erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/ERC721A-Upgradeable/\",\":erc721a/=lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/\"]},\"sources\":{\"contracts/base/Staking1155Base.sol\":{\"keccak256\":\"0x8483be16050cc507a9c9c31ffc5bf56b69a7cff763462d1edeaab9e11954a9d2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://62a3d3c29799b95296fd130392b2a917e0ec467cade96a60f0352cbb16dea49a\",\"dweb:/ipfs/QmXNmdSJVqCK6yz996B5BCHd4xLY37i3fm3A7qo2gmfaWL\"]},\"contracts/eip/ERC165.sol\":{\"keccak256\":\"0x0ea604ea6ebe99809a2f620009c8dead82d7fb17ab12b734e1e29c8ceb85938b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d9d109154c913e34d107db2cec5608dd8a55075dee35ae77aa78ebb9ff7d856c\",\"dweb:/ipfs/QmW8QKw4kag1Bv68FjSZiGvPP8WDocjdhLSd3ssUXZ5Kgr\"]},\"contracts/eip/interface/IERC1155.sol\":{\"keccak256\":\"0x17c265f3f47161c9d2f6c7f7f4040440df9ad4cd7eb74eb411bf25a94b542f9e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c4f468eb184f2a08909834b51e33e854741647f9798aa1e6746f3f1b69525552\",\"dweb:/ipfs/QmbCMy9vJLga2dCxGG6nXW7VKGqsMrzU8phPhcd58xkapq\"]},\"contracts/eip/interface/IERC1155Receiver.sol\":{\"keccak256\":\"0xfef511c703e7ebdb193d35a67e0d9b70728789b2ac45cc5cf5ee56c4ad034f00\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f838e560ba0caddc54ad4ba082e0ff3bf27a721c15bc0cf19791fef7940837a5\",\"dweb:/ipfs/QmTwfwYYK4Ky9PPhdDoVVmZJaJ7y2hZDH8YnBQRfiA8Baz\"]},\"contracts/eip/interface/IERC165.sol\":{\"keccak256\":\"0x35d0a916f70344a5fcc6c67cb531b6150d2fce43e72a6282385eab02020f2f49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75ccd8b9a8b52a93b8097fcb8181b7afb6d72bbe6eaabf434f0481a7a207cc8a\",\"dweb:/ipfs/QmPUZAEE4nwkijcE2amAXAWEVGVG5XaKWGhpgnRwpAf93R\"]},\"contracts/eip/interface/IERC20.sol\":{\"keccak256\":\"0x5bdd9dd97ba7d9d7c9a2953db287e4d9d7fa93a27a96bc2e72a8da4919b6f7ff\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://45527c265ee5de6bbb3ecfc052e7b1175531a82c2ac16172020aee855f7dd592\",\"dweb:/ipfs/QmVZthqbG916qUQSwv1LE8bB58ZGQ1VfQbLbbRV5urfEYA\"]},\"contracts/extension/ContractMetadata.sol\":{\"keccak256\":\"0xf53ab08ec3057056872c15e35a5610f7a43426bd2829786aed006d527177adfe\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ee132ae5efdd372152febfcd8fd3a7cb82c7019367d92c886f5096003a79f392\",\"dweb:/ipfs/QmRW1cGWmZAu57huZpTUwsWB8AxUFrBp6g4NqozXpbWsR6\"]},\"contracts/extension/Multicall.sol\":{\"keccak256\":\"0x737a71c74307fa360863550d64bbaef599bbcb47829b19c3743ed1ff22b9af55\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://7e82a79ee183dffa3ec01faac0907e04d72a185e55b7c24bff8e8e952b05f4c2\",\"dweb:/ipfs/QmQ9neZqpcgJtGgm84FBzMqFntZ1Sk1KFTWhjCMq8vnKDg\"]},\"contracts/extension/Ownable.sol\":{\"keccak256\":\"0x45447691686861237d5e1acb9d723d861a3fb3d561335e4f385d1547f25e27a5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5142293e36c736f744c73aaecab5f7be8e2d5ac70acc67851e0cea5171fd6782\",\"dweb:/ipfs/QmVJT5B84o5vFc5E2VteZdBhrT1HMutc7Ax72UKD1aZatJ\"]},\"contracts/extension/Staking1155.sol\":{\"keccak256\":\"0x590c17de4fe40bdcad7d6913a8a4c60e7549f2c3b13fe28660a1390042663ab0\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://07bf368ab445a6e3df81a13a9954753c9533551ea7f6c91a00b2a20d0e7f4446\",\"dweb:/ipfs/Qmf3MarCTJfZKCt3SB2u5u1j4XuEp2qF7KsuybAGKajtZs\"]},\"contracts/extension/interface/IContractMetadata.sol\":{\"keccak256\":\"0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a\",\"dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr\"]},\"contracts/extension/interface/IMulticall.sol\":{\"keccak256\":\"0xe2bbd37b8fdb9cc8b933e598512a068ebb214b3f5abc2bc634916def55be4ef3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://012352099c262348ac755a53b082af520babc6c66dc5f1251fc23609728340ca\",\"dweb:/ipfs/QmcXEgzQ53jdJX5ZNy8zivvUjDq7J8WTnR1yAiwTpkQ2ar\"]},\"contracts/extension/interface/IOwnable.sol\":{\"keccak256\":\"0xd659a64da6264fdd50ee379be032fea4917eba4fadfd6d366107fb17e46907f3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c15940c4a3d229f4fdd1226fe297a58fde10b07b86a34de1ed11a8802dd5dea9\",\"dweb:/ipfs/QmS8p8CxWiahLkYsCWNhFjCnmQzuc4ck3kjYYuCFj8LsmC\"]},\"contracts/extension/interface/IStaking1155.sol\":{\"keccak256\":\"0xbf6404179cfafde7cf1793aed3f8e411eec97704acf4f044c391f7106668ed31\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d084197f72e502f94c9ffb282bac4a09934cf36b2b2cae930148447c57e58741\",\"dweb:/ipfs/QmWev5rs2ZsBirj1kc3VJWdtqASoZmF2RGrY9yB8n22Xjw\"]},\"contracts/external-deps/openzeppelin/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x2030bba0e41fb3daead24cdba39cd9d8ce2748de68e57f1c811420419a739afb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a64e19e10d66555abcf0b5392bb27f9e65f674d7688761f02f2c8b508490623\",\"dweb:/ipfs/QmNhMchAD6kuHFAAgdwCwuNUS3uaUD2gwofT5kxQAQeWH6\"]},\"contracts/external-deps/openzeppelin/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xa6149938a7c7c8af4244743aeaafcfb1fd9ce15ad45de58fa9576f0ed5599b2c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://839aa4ea6ef6d1972881bfd7420a9ddcd2f37139e3f0bf25310f93f48410702d\",\"dweb:/ipfs/QmSH65kStfbgMbfjFdfJqV412omPy6nB1JMvMt9q7SsytW\"]},\"contracts/external-deps/openzeppelin/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"contracts/infra/interface/IWETH.sol\":{\"keccak256\":\"0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1\",\"dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU\"]},\"contracts/lib/CurrencyTransferLib.sol\":{\"keccak256\":\"0x4a30bc9a8cd6cc8b855621fb1a651e2c3a1639b0ad153f1139c3ba463605672d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://417cc64ec6393f3cc89981ca9c32bbcc444a5f91363d69f84dd8ace888b2b859\",\"dweb:/ipfs/QmZeaQsYGx4VNoP8e1fcwC87PwvyakheWYeuwEwhFSJnvB\"]},\"contracts/lib/TWAddress.sol\":{\"keccak256\":\"0x460f032cf3bf43d586e126ab2ec8be4335767f497ccb699741546a1cfba94a7e\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://28fcbf6dde6c2eeb9864f6ec6f21dcc81ec426877debf4b912f2f3bc5b0fc91e\",\"dweb:/ipfs/QmS1SHrZDfefX8EE7DdvszTY6VPCHydf4HM7NKJ2gP72e6\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.12+commit.f00d7308"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint80",
              "name": "_defaultTimeUnit",
              "type": "uint80"
            },
            {
              "internalType": "address",
              "name": "_defaultAdmin",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_defaultRewardsPerUnitTime",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_stakingToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_rewardToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_nativeTokenWrapper",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "prevURI",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "newURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ContractURIUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "prevOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnerUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "rewardAmount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RewardsClaimed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensStaked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensWithdrawn",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "oldRewardsPerUnitTime",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newRewardsPerUnitTime",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "UpdatedDefaultRewardsPerUnitTime",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "oldTimeUnit",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newTimeUnit",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "UpdatedDefaultTimeUnit",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "oldRewardsPerUnitTime",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newRewardsPerUnitTime",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "UpdatedRewardsPerUnitTime",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "oldTimeUnit",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newTimeUnit",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "UpdatedTimeUnit",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimRewards"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "contractURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "depositRewardTokens"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getDefaultRewardsPerUnitTime",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "_rewardsPerUnitTime",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getDefaultTimeUnit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "_timeUnit",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getRewardTokenBalance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRewardsPerUnitTime",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "_rewardsPerUnitTime",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_staker",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getStakeInfo",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "_tokensStaked",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "_tokenAmounts",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256",
              "name": "_totalRewards",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_staker",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getStakeInfoForToken",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "_tokensStaked",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_rewards",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getTimeUnit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "_timeUnit",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "indexedTokens",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isIndexed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes[]",
              "name": "data",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "multicall",
          "outputs": [
            {
              "internalType": "bytes[]",
              "name": "results",
              "type": "bytes[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "values",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onERC1155BatchReceived",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "onERC1155Received",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "rewardToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_uri",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setContractURI"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_defaultRewardsPerUnitTime",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDefaultRewardsPerUnitTime"
        },
        {
          "inputs": [
            {
              "internalType": "uint80",
              "name": "_defaultTimeUnit",
              "type": "uint80"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDefaultTimeUnit"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOwner"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_rewardsPerUnitTime",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRewardsPerUnitTime"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint80",
              "name": "_timeUnit",
              "type": "uint80"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setTimeUnit"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint64",
              "name": "_amount",
              "type": "uint64"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "stake"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "stakers",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "conditionIdOflastUpdate",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "amountStaked",
              "type": "uint64"
            },
            {
              "internalType": "uint128",
              "name": "timeOfLastUpdate",
              "type": "uint128"
            },
            {
              "internalType": "uint256",
              "name": "unclaimedRewards",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "stakersArray",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "stakingToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint64",
              "name": "_amount",
              "type": "uint64"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawRewardTokens"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "claimRewards(uint256)": {
            "details": "See {_claimRewards}. Override that to implement custom logic.             See {_calculateRewards} for reward-calculation logic.",
            "params": {
              "_tokenId": "Staked token Id."
            }
          },
          "depositRewardTokens(uint256)": {
            "details": "Admin deposits reward tokens."
          },
          "getStakeInfo(address)": {
            "params": {
              "_staker": "Address for which to calculated rewards."
            },
            "returns": {
              "_tokenAmounts": "  Amount of each token-id staked.",
              "_tokensStaked": "  List of token-ids staked.",
              "_totalRewards": "  Total rewards available."
            }
          },
          "getStakeInfoForToken(uint256,address)": {
            "params": {
              "_staker": "Address for which to calculated rewards."
            },
            "returns": {
              "_rewards": "       Available reward amount.",
              "_tokensStaked": "  Amount of tokens staked for given token-id."
            }
          },
          "multicall(bytes[])": {
            "details": "Receives and executes a batch of function calls on this contract.",
            "params": {
              "data": "The bytes data that makes up the batch of function calls to execute."
            },
            "returns": {
              "results": "The bytes data that makes up the result of the batch of function calls executed."
            }
          },
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
            "details": "Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
            "params": {
              "data": "Additional data with no specified format",
              "from": "The address which previously owned the token",
              "ids": "An array containing ids of each token being transferred (order and length must match values array)",
              "operator": "The address which initiated the batch transfer (i.e. msg.sender)",
              "values": "An array containing amounts of each token being transferred (order and length must match ids array)"
            },
            "returns": {
              "_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
            }
          },
          "setContractURI(string)": {
            "details": "Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.",
            "params": {
              "_uri": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "setDefaultRewardsPerUnitTime(uint256)": {
            "details": "Only admin/authorized-account can call it.",
            "params": {
              "_defaultRewardsPerUnitTime": "New rewards per unit time."
            }
          },
          "setDefaultTimeUnit(uint80)": {
            "details": "Only admin/authorized-account can call it.",
            "params": {
              "_defaultTimeUnit": "New time unit."
            }
          },
          "setOwner(address)": {
            "params": {
              "_newOwner": "The address to set as the new owner of the contract."
            }
          },
          "setRewardsPerUnitTime(uint256,uint256)": {
            "details": "Only admin/authorized-account can call it.",
            "params": {
              "_rewardsPerUnitTime": "New rewards per unit time.",
              "_tokenId": "ERC1155 token Id."
            }
          },
          "setTimeUnit(uint256,uint80)": {
            "details": "Only admin/authorized-account can call it.",
            "params": {
              "_timeUnit": "New time unit.",
              "_tokenId": "ERC1155 token Id."
            }
          },
          "stake(uint256,uint64)": {
            "details": "See {_stake}. Override that to implement custom logic.",
            "params": {
              "_amount": "Amount to stake.",
              "_tokenId": "ERC1155 token-id to stake."
            }
          },
          "withdraw(uint256,uint64)": {
            "details": "See {_withdraw}. Override that to implement custom logic.",
            "params": {
              "_amount": "Amount to withdraw.",
              "_tokenId": "ERC1155 token-id to withdraw."
            }
          },
          "withdrawRewardTokens(uint256)": {
            "details": "Admin can withdraw excess reward tokens."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "claimRewards(uint256)": {
            "notice": "Claim accumulated rewards."
          },
          "contractURI()": {
            "notice": "Returns the contract metadata URI."
          },
          "getRewardTokenBalance()": {
            "notice": "View total rewards available in the staking contract."
          },
          "getStakeInfo(address)": {
            "notice": "View all tokens staked and total rewards for a user."
          },
          "getStakeInfoForToken(uint256,address)": {
            "notice": "View amount staked and rewards for a user, for a given token-id."
          },
          "multicall(bytes[])": {
            "notice": "Receives and executes a batch of function calls on this contract."
          },
          "owner()": {
            "notice": "Returns the owner of the contract."
          },
          "setContractURI(string)": {
            "notice": "Lets a contract admin set the URI for contract-level metadata."
          },
          "setDefaultRewardsPerUnitTime(uint256)": {
            "notice": "Set rewards per unit of time.           Interpreted as x rewards per second/per day/etc based on time-unit."
          },
          "setDefaultTimeUnit(uint80)": {
            "notice": "Set time unit. Set as a number of seconds.           Could be specified as -- x * 1 hours, x * 1 days, etc."
          },
          "setOwner(address)": {
            "notice": "Lets an authorized wallet set a new owner for the contract."
          },
          "setRewardsPerUnitTime(uint256,uint256)": {
            "notice": "Set rewards per unit of time.           Interpreted as x rewards per second/per day/etc based on time-unit."
          },
          "setTimeUnit(uint256,uint80)": {
            "notice": "Set time unit. Set as a number of seconds.           Could be specified as -- x * 1 hours, x * 1 days, etc."
          },
          "stake(uint256,uint64)": {
            "notice": "Stake ERC721 Tokens."
          },
          "withdraw(uint256,uint64)": {
            "notice": "Withdraw staked tokens."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=lib/chainlink/",
        "@ds-test/=lib/ds-test/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@std/=lib/forge-std/src/",
        "@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/",
        "ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/",
        "ERC721A/=lib/ERC721A/contracts/",
        "chainlink/=lib/chainlink/",
        "contracts/=contracts/",
        "ds-test/=lib/ds-test/src/",
        "dynamic-contracts/=lib/dynamic-contracts/src/",
        "erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/",
        "erc721a-upgradeable/=lib/ERC721A-Upgradeable/",
        "erc721a/=lib/ERC721A/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/base/Staking1155Base.sol": "Staking1155Base"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/base/Staking1155Base.sol": {
        "keccak256": "0x8483be16050cc507a9c9c31ffc5bf56b69a7cff763462d1edeaab9e11954a9d2",
        "urls": [
          "bzz-raw://62a3d3c29799b95296fd130392b2a917e0ec467cade96a60f0352cbb16dea49a",
          "dweb:/ipfs/QmXNmdSJVqCK6yz996B5BCHd4xLY37i3fm3A7qo2gmfaWL"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/ERC165.sol": {
        "keccak256": "0x0ea604ea6ebe99809a2f620009c8dead82d7fb17ab12b734e1e29c8ceb85938b",
        "urls": [
          "bzz-raw://d9d109154c913e34d107db2cec5608dd8a55075dee35ae77aa78ebb9ff7d856c",
          "dweb:/ipfs/QmW8QKw4kag1Bv68FjSZiGvPP8WDocjdhLSd3ssUXZ5Kgr"
        ],
        "license": "MIT"
      },
      "contracts/eip/interface/IERC1155.sol": {
        "keccak256": "0x17c265f3f47161c9d2f6c7f7f4040440df9ad4cd7eb74eb411bf25a94b542f9e",
        "urls": [
          "bzz-raw://c4f468eb184f2a08909834b51e33e854741647f9798aa1e6746f3f1b69525552",
          "dweb:/ipfs/QmbCMy9vJLga2dCxGG6nXW7VKGqsMrzU8phPhcd58xkapq"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC1155Receiver.sol": {
        "keccak256": "0xfef511c703e7ebdb193d35a67e0d9b70728789b2ac45cc5cf5ee56c4ad034f00",
        "urls": [
          "bzz-raw://f838e560ba0caddc54ad4ba082e0ff3bf27a721c15bc0cf19791fef7940837a5",
          "dweb:/ipfs/QmTwfwYYK4Ky9PPhdDoVVmZJaJ7y2hZDH8YnBQRfiA8Baz"
        ],
        "license": "MIT"
      },
      "contracts/eip/interface/IERC165.sol": {
        "keccak256": "0x35d0a916f70344a5fcc6c67cb531b6150d2fce43e72a6282385eab02020f2f49",
        "urls": [
          "bzz-raw://75ccd8b9a8b52a93b8097fcb8181b7afb6d72bbe6eaabf434f0481a7a207cc8a",
          "dweb:/ipfs/QmPUZAEE4nwkijcE2amAXAWEVGVG5XaKWGhpgnRwpAf93R"
        ],
        "license": "MIT"
      },
      "contracts/eip/interface/IERC20.sol": {
        "keccak256": "0x5bdd9dd97ba7d9d7c9a2953db287e4d9d7fa93a27a96bc2e72a8da4919b6f7ff",
        "urls": [
          "bzz-raw://45527c265ee5de6bbb3ecfc052e7b1175531a82c2ac16172020aee855f7dd592",
          "dweb:/ipfs/QmVZthqbG916qUQSwv1LE8bB58ZGQ1VfQbLbbRV5urfEYA"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/ContractMetadata.sol": {
        "keccak256": "0xf53ab08ec3057056872c15e35a5610f7a43426bd2829786aed006d527177adfe",
        "urls": [
          "bzz-raw://ee132ae5efdd372152febfcd8fd3a7cb82c7019367d92c886f5096003a79f392",
          "dweb:/ipfs/QmRW1cGWmZAu57huZpTUwsWB8AxUFrBp6g4NqozXpbWsR6"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Multicall.sol": {
        "keccak256": "0x737a71c74307fa360863550d64bbaef599bbcb47829b19c3743ed1ff22b9af55",
        "urls": [
          "bzz-raw://7e82a79ee183dffa3ec01faac0907e04d72a185e55b7c24bff8e8e952b05f4c2",
          "dweb:/ipfs/QmQ9neZqpcgJtGgm84FBzMqFntZ1Sk1KFTWhjCMq8vnKDg"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/Ownable.sol": {
        "keccak256": "0x45447691686861237d5e1acb9d723d861a3fb3d561335e4f385d1547f25e27a5",
        "urls": [
          "bzz-raw://5142293e36c736f744c73aaecab5f7be8e2d5ac70acc67851e0cea5171fd6782",
          "dweb:/ipfs/QmVJT5B84o5vFc5E2VteZdBhrT1HMutc7Ax72UKD1aZatJ"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Staking1155.sol": {
        "keccak256": "0x590c17de4fe40bdcad7d6913a8a4c60e7549f2c3b13fe28660a1390042663ab0",
        "urls": [
          "bzz-raw://07bf368ab445a6e3df81a13a9954753c9533551ea7f6c91a00b2a20d0e7f4446",
          "dweb:/ipfs/Qmf3MarCTJfZKCt3SB2u5u1j4XuEp2qF7KsuybAGKajtZs"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IContractMetadata.sol": {
        "keccak256": "0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2",
        "urls": [
          "bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a",
          "dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IMulticall.sol": {
        "keccak256": "0xe2bbd37b8fdb9cc8b933e598512a068ebb214b3f5abc2bc634916def55be4ef3",
        "urls": [
          "bzz-raw://012352099c262348ac755a53b082af520babc6c66dc5f1251fc23609728340ca",
          "dweb:/ipfs/QmcXEgzQ53jdJX5ZNy8zivvUjDq7J8WTnR1yAiwTpkQ2ar"
        ],
        "license": "MIT"
      },
      "contracts/extension/interface/IOwnable.sol": {
        "keccak256": "0xd659a64da6264fdd50ee379be032fea4917eba4fadfd6d366107fb17e46907f3",
        "urls": [
          "bzz-raw://c15940c4a3d229f4fdd1226fe297a58fde10b07b86a34de1ed11a8802dd5dea9",
          "dweb:/ipfs/QmS8p8CxWiahLkYsCWNhFjCnmQzuc4ck3kjYYuCFj8LsmC"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IStaking1155.sol": {
        "keccak256": "0xbf6404179cfafde7cf1793aed3f8e411eec97704acf4f044c391f7106668ed31",
        "urls": [
          "bzz-raw://d084197f72e502f94c9ffb282bac4a09934cf36b2b2cae930148447c57e58741",
          "dweb:/ipfs/QmWev5rs2ZsBirj1kc3VJWdtqASoZmF2RGrY9yB8n22Xjw"
        ],
        "license": "Apache-2.0"
      },
      "contracts/external-deps/openzeppelin/security/ReentrancyGuard.sol": {
        "keccak256": "0x2030bba0e41fb3daead24cdba39cd9d8ce2748de68e57f1c811420419a739afb",
        "urls": [
          "bzz-raw://1a64e19e10d66555abcf0b5392bb27f9e65f674d7688761f02f2c8b508490623",
          "dweb:/ipfs/QmNhMchAD6kuHFAAgdwCwuNUS3uaUD2gwofT5kxQAQeWH6"
        ],
        "license": "MIT"
      },
      "contracts/external-deps/openzeppelin/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xa6149938a7c7c8af4244743aeaafcfb1fd9ce15ad45de58fa9576f0ed5599b2c",
        "urls": [
          "bzz-raw://839aa4ea6ef6d1972881bfd7420a9ddcd2f37139e3f0bf25310f93f48410702d",
          "dweb:/ipfs/QmSH65kStfbgMbfjFdfJqV412omPy6nB1JMvMt9q7SsytW"
        ],
        "license": "MIT"
      },
      "contracts/external-deps/openzeppelin/utils/math/SafeMath.sol": {
        "keccak256": "0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e",
        "urls": [
          "bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65",
          "dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN"
        ],
        "license": "MIT"
      },
      "contracts/infra/interface/IWETH.sol": {
        "keccak256": "0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b",
        "urls": [
          "bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1",
          "dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/CurrencyTransferLib.sol": {
        "keccak256": "0x4a30bc9a8cd6cc8b855621fb1a651e2c3a1639b0ad153f1139c3ba463605672d",
        "urls": [
          "bzz-raw://417cc64ec6393f3cc89981ca9c32bbcc444a5f91363d69f84dd8ace888b2b859",
          "dweb:/ipfs/QmZeaQsYGx4VNoP8e1fcwC87PwvyakheWYeuwEwhFSJnvB"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/TWAddress.sol": {
        "keccak256": "0x460f032cf3bf43d586e126ab2ec8be4335767f497ccb699741546a1cfba94a7e",
        "urls": [
          "bzz-raw://28fcbf6dde6c2eeb9864f6ec6f21dcc81ec426877debf4b912f2f3bc5b0fc91e",
          "dweb:/ipfs/QmS1SHrZDfefX8EE7DdvszTY6VPCHydf4HM7NKJ2gP72e6"
        ],
        "license": "Apache 2.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/base/Staking1155Base.sol",
    "id": 6065,
    "exportedSymbols": {
      "ContractMetadata": [
        17526
      ],
      "CurrencyTransferLib": [
        63578
      ],
      "ERC165": [
        7823
      ],
      "IContractMetadata": [
        32437
      ],
      "IERC1155": [
        13742
      ],
      "IERC1155Receiver": [
        13805
      ],
      "IERC165": [
        13829
      ],
      "IERC20": [
        13899
      ],
      "IMulticall": [
        32926
      ],
      "IOwnable": [
        33183
      ],
      "IStaking1155": [
        34030
      ],
      "Multicall": [
        20595
      ],
      "Ownable": [
        21153
      ],
      "ReentrancyGuard": [
        46484
      ],
      "SafeMath": [
        50692
      ],
      "Staking1155": [
        25751
      ],
      "Staking1155Base": [
        6064
      ],
      "TWAddress": [
        64152
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:7188:17",
    "nodes": [
      {
        "id": 5692,
        "nodeType": "PragmaDirective",
        "src": "39:23:17",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 5693,
        "nodeType": "ImportDirective",
        "src": "86:43:17",
        "nodes": [],
        "absolutePath": "contracts/extension/ContractMetadata.sol",
        "file": "../extension/ContractMetadata.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6065,
        "sourceUnit": 17527,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 5694,
        "nodeType": "ImportDirective",
        "src": "130:36:17",
        "nodes": [],
        "absolutePath": "contracts/extension/Multicall.sol",
        "file": "../extension/Multicall.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6065,
        "sourceUnit": 20596,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 5695,
        "nodeType": "ImportDirective",
        "src": "167:34:17",
        "nodes": [],
        "absolutePath": "contracts/extension/Ownable.sol",
        "file": "../extension/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6065,
        "sourceUnit": 21154,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 5696,
        "nodeType": "ImportDirective",
        "src": "202:38:17",
        "nodes": [],
        "absolutePath": "contracts/extension/Staking1155.sol",
        "file": "../extension/Staking1155.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6065,
        "sourceUnit": 25752,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 5697,
        "nodeType": "ImportDirective",
        "src": "242:27:17",
        "nodes": [],
        "absolutePath": "contracts/eip/ERC165.sol",
        "file": "../eip/ERC165.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6065,
        "sourceUnit": 7824,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 5698,
        "nodeType": "ImportDirective",
        "src": "270:37:17",
        "nodes": [],
        "absolutePath": "contracts/eip/interface/IERC20.sol",
        "file": "../eip/interface/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6065,
        "sourceUnit": 13900,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 5699,
        "nodeType": "ImportDirective",
        "src": "308:47:17",
        "nodes": [],
        "absolutePath": "contracts/eip/interface/IERC1155Receiver.sol",
        "file": "../eip/interface/IERC1155Receiver.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6065,
        "sourceUnit": 13806,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 5701,
        "nodeType": "ImportDirective",
        "src": "357:69:17",
        "nodes": [],
        "absolutePath": "contracts/lib/CurrencyTransferLib.sol",
        "file": "../lib/CurrencyTransferLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6065,
        "sourceUnit": 63579,
        "symbolAliases": [
          {
            "foreign": {
              "id": 5700,
              "name": "CurrencyTransferLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 63578,
              "src": "366:19:17",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$63578_$",
                "typeString": "type(library CurrencyTransferLib)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 6064,
        "nodeType": "ContractDefinition",
        "src": "1640:5586:17",
        "nodes": [
          {
            "id": 5717,
            "nodeType": "VariableDeclaration",
            "src": "1817:26:17",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 5715,
              "nodeType": "StructuredDocumentation",
              "src": "1750:62:17",
              "text": "@dev ERC20 Reward Token address. See {_mintRewards} below."
            },
            "functionSelector": "f7c618c1",
            "mutability": "mutable",
            "name": "rewardToken",
            "nameLocation": "1832:11:17",
            "scope": 6064,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 5716,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1817:7:17",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 5720,
            "nodeType": "VariableDeclaration",
            "src": "1913:45:17",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 5718,
              "nodeType": "StructuredDocumentation",
              "src": "1850:58:17",
              "text": "@dev The address of the native token wrapper contract."
            },
            "mutability": "immutable",
            "name": "nativeTokenWrapper",
            "nameLocation": "1940:18:17",
            "scope": 6064,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 5719,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1913:7:17",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 5723,
            "nodeType": "VariableDeclaration",
            "src": "2025:34:17",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 5721,
              "nodeType": "StructuredDocumentation",
              "src": "1965:55:17",
              "text": "@dev Total amount of reward tokens in the contract."
            },
            "mutability": "mutable",
            "name": "rewardTokenBalance",
            "nameLocation": "2041:18:17",
            "scope": 6064,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5722,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2025:7:17",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "id": 5759,
            "nodeType": "FunctionDefinition",
            "src": "2066:464:17",
            "nodes": [],
            "body": {
              "id": 5758,
              "nodeType": "Block",
              "src": "2317:213:17",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5742,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5727,
                        "src": "2339:13:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 5741,
                      "name": "_setupOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21146,
                      "src": "2327:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 5743,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2327:26:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5744,
                  "nodeType": "ExpressionStatement",
                  "src": "2327:26:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5746,
                        "name": "_defaultTimeUnit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5725,
                        "src": "2391:16:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        }
                      },
                      {
                        "id": 5747,
                        "name": "_defaultRewardsPerUnitTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5729,
                        "src": "2409:26:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5745,
                      "name": "_setDefaultStakingCondition",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25513,
                      "src": "2363:27:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint80_$_t_uint256_$returns$__$",
                        "typeString": "function (uint80,uint256)"
                      }
                    },
                    "id": 5748,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2363:73:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5749,
                  "nodeType": "ExpressionStatement",
                  "src": "2363:73:17"
                },
                {
                  "expression": {
                    "id": 5752,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5750,
                      "name": "rewardToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5717,
                      "src": "2447:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5751,
                      "name": "_rewardToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5733,
                      "src": "2461:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2447:26:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 5753,
                  "nodeType": "ExpressionStatement",
                  "src": "2447:26:17"
                },
                {
                  "expression": {
                    "id": 5756,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5754,
                      "name": "nativeTokenWrapper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5720,
                      "src": "2483:18:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5755,
                      "name": "_nativeTokenWrapper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5735,
                      "src": "2504:19:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2483:40:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 5757,
                  "nodeType": "ExpressionStatement",
                  "src": "2483:40:17"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 5738,
                    "name": "_stakingToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5731,
                    "src": "2302:13:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 5739,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 5737,
                  "name": "Staking1155",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 25751,
                  "src": "2290:11:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "2290:26:17"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 5736,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5725,
                  "mutability": "mutable",
                  "name": "_defaultTimeUnit",
                  "nameLocation": "2094:16:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 5759,
                  "src": "2087:23:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint80",
                    "typeString": "uint80"
                  },
                  "typeName": {
                    "id": 5724,
                    "name": "uint80",
                    "nodeType": "ElementaryTypeName",
                    "src": "2087:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint80",
                      "typeString": "uint80"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5727,
                  "mutability": "mutable",
                  "name": "_defaultAdmin",
                  "nameLocation": "2128:13:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 5759,
                  "src": "2120:21:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5726,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2120:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5729,
                  "mutability": "mutable",
                  "name": "_defaultRewardsPerUnitTime",
                  "nameLocation": "2159:26:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 5759,
                  "src": "2151:34:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5728,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2151:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5731,
                  "mutability": "mutable",
                  "name": "_stakingToken",
                  "nameLocation": "2203:13:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 5759,
                  "src": "2195:21:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5730,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2195:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5733,
                  "mutability": "mutable",
                  "name": "_rewardToken",
                  "nameLocation": "2234:12:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 5759,
                  "src": "2226:20:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5732,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2226:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5735,
                  "mutability": "mutable",
                  "name": "_nativeTokenWrapper",
                  "nameLocation": "2264:19:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 5759,
                  "src": "2256:27:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5734,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2256:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2077:212:17"
            },
            "returnParameters": {
              "id": 5740,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2317:0:17"
            },
            "scope": 6064,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 5772,
            "nodeType": "FunctionDefinition",
            "src": "2606:129:17",
            "nodes": [],
            "body": {
              "id": 5771,
              "nodeType": "Block",
              "src": "2641:94:17",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 5767,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 5764,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2659:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 5765,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2659:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 5766,
                          "name": "nativeTokenWrapper",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5720,
                          "src": "2673:18:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2659:32:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63616c6c6572206e6f74206e617469766520746f6b656e20777261707065722e",
                        "id": 5768,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2693:34:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fff6f4088a14dc9fb6c418ac7dfb6aa2cb5091cf5954b1f93aeb20616b356a54",
                          "typeString": "literal_string \"caller not native token wrapper.\""
                        },
                        "value": "caller not native token wrapper."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fff6f4088a14dc9fb6c418ac7dfb6aa2cb5091cf5954b1f93aeb20616b356a54",
                          "typeString": "literal_string \"caller not native token wrapper.\""
                        }
                      ],
                      "id": 5763,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2651:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5769,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2651:77:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5770,
                  "nodeType": "ExpressionStatement",
                  "src": "2651:77:17"
                }
              ]
            },
            "documentation": {
              "id": 5760,
              "nodeType": "StructuredDocumentation",
              "src": "2536:65:17",
              "text": "@dev Lets the contract receive ether to unwrap native tokens."
            },
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 5761,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2613:2:17"
            },
            "returnParameters": {
              "id": 5762,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2641:0:17"
            },
            "scope": 6064,
            "stateMutability": "payable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 5785,
            "nodeType": "FunctionDefinition",
            "src": "2784:165:17",
            "nodes": [],
            "body": {
              "id": 5784,
              "nodeType": "Block",
              "src": "2868:81:17",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5781,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5775,
                        "src": "2899:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5780,
                      "name": "_depositRewardTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5980,
                      "src": "2878:20:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 5782,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2878:29:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5783,
                  "nodeType": "ExpressionStatement",
                  "src": "2878:29:17"
                }
              ]
            },
            "documentation": {
              "id": 5773,
              "nodeType": "StructuredDocumentation",
              "src": "2741:38:17",
              "text": "@dev Admin deposits reward tokens."
            },
            "functionSelector": "16c621e0",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 5778,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5777,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46483,
                  "src": "2855:12:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "2855:12:17"
              }
            ],
            "name": "depositRewardTokens",
            "nameLocation": "2793:19:17",
            "parameters": {
              "id": 5776,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5775,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2821:7:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 5785,
                  "src": "2813:15:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5774,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2813:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2812:17:17"
            },
            "returnParameters": {
              "id": 5779,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2868:0:17"
            },
            "scope": 6064,
            "stateMutability": "payable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 5798,
            "nodeType": "FunctionDefinition",
            "src": "3009:159:17",
            "nodes": [],
            "body": {
              "id": 5797,
              "nodeType": "Block",
              "src": "3086:82:17",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5794,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5788,
                        "src": "3118:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5793,
                      "name": "_withdrawRewardTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6021,
                      "src": "3096:21:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 5795,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3096:30:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5796,
                  "nodeType": "ExpressionStatement",
                  "src": "3096:30:17"
                }
              ]
            },
            "documentation": {
              "id": 5786,
              "nodeType": "StructuredDocumentation",
              "src": "2955:49:17",
              "text": "@dev Admin can withdraw excess reward tokens."
            },
            "functionSelector": "cb43b2dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 5791,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5790,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46483,
                  "src": "3073:12:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "3073:12:17"
              }
            ],
            "name": "withdrawRewardTokens",
            "nameLocation": "3018:20:17",
            "parameters": {
              "id": 5789,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5788,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "3047:7:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 5798,
                  "src": "3039:15:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5787,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3039:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3038:17:17"
            },
            "returnParameters": {
              "id": 5792,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3086:0:17"
            },
            "scope": 6064,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 5808,
            "nodeType": "FunctionDefinition",
            "src": "3244:124:17",
            "nodes": [],
            "body": {
              "id": 5807,
              "nodeType": "Block",
              "src": "3326:42:17",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 5805,
                    "name": "rewardTokenBalance",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5723,
                    "src": "3343:18:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 5804,
                  "id": 5806,
                  "nodeType": "Return",
                  "src": "3336:25:17"
                }
              ]
            },
            "baseFunctions": [
              25736
            ],
            "documentation": {
              "id": 5799,
              "nodeType": "StructuredDocumentation",
              "src": "3174:65:17",
              "text": "@notice View total rewards available in the staking contract."
            },
            "functionSelector": "93ce5343",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRewardTokenBalance",
            "nameLocation": "3253:21:17",
            "overrides": {
              "id": 5801,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3299:8:17"
            },
            "parameters": {
              "id": 5800,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3274:2:17"
            },
            "returnParameters": {
              "id": 5804,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5803,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5808,
                  "src": "3317:7:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5802,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3317:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3316:9:17"
            },
            "scope": 6064,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 5835,
            "nodeType": "FunctionDefinition",
            "src": "3558:263:17",
            "nodes": [],
            "body": {
              "id": 5834,
              "nodeType": "Block",
              "src": "3714:107:17",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 5826,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5824,
                          "name": "isStaking",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24278,
                          "src": "3732:9:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 5825,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3745:1:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "3732:14:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "446972656374207472616e73666572",
                        "id": 5827,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3748:17:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1535664c0eb3bd430bcee25184abb0c36f1be46b8c14441f80835d2db87cf6ba",
                          "typeString": "literal_string \"Direct transfer\""
                        },
                        "value": "Direct transfer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1535664c0eb3bd430bcee25184abb0c36f1be46b8c14441f80835d2db87cf6ba",
                          "typeString": "literal_string \"Direct transfer\""
                        }
                      ],
                      "id": 5823,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3724:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5828,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3724:42:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5829,
                  "nodeType": "ExpressionStatement",
                  "src": "3724:42:17"
                },
                {
                  "expression": {
                    "expression": {
                      "expression": {
                        "id": 5830,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
                        "src": "3783:4:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Staking1155Base_$6064",
                          "typeString": "contract Staking1155Base"
                        }
                      },
                      "id": 5831,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "onERC1155Received",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5835,
                      "src": "3783:22:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                        "typeString": "function (address,address,uint256,uint256,bytes memory) view external returns (bytes4)"
                      }
                    },
                    "id": 5832,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "selector",
                    "nodeType": "MemberAccess",
                    "src": "3783:31:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "functionReturnParameters": 5822,
                  "id": 5833,
                  "nodeType": "Return",
                  "src": "3776:38:17"
                }
              ]
            },
            "baseFunctions": [
              13786
            ],
            "functionSelector": "f23a6e61",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "onERC1155Received",
            "nameLocation": "3567:17:17",
            "parameters": {
              "id": 5819,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5810,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5835,
                  "src": "3594:7:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5809,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3594:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5812,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5835,
                  "src": "3611:7:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5811,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3611:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5814,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5835,
                  "src": "3628:7:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5813,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3628:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5816,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5835,
                  "src": "3645:7:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5815,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3645:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5818,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5835,
                  "src": "3662:14:17",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 5817,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3662:5:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3584:98:17"
            },
            "returnParameters": {
              "id": 5822,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5821,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5835,
                  "src": "3706:6:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 5820,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "3706:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3705:8:17"
            },
            "scope": 6064,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 5853,
            "nodeType": "FunctionDefinition",
            "src": "3827:218:17",
            "nodes": [],
            "body": {
              "id": 5852,
              "nodeType": "Block",
              "src": "4043:2:17",
              "nodes": [],
              "statements": []
            },
            "baseFunctions": [
              13804
            ],
            "functionSelector": "bc197c81",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "onERC1155BatchReceived",
            "nameLocation": "3836:22:17",
            "parameters": {
              "id": 5848,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5837,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "3876:8:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 5853,
                  "src": "3868:16:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5836,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3868:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5839,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "3902:4:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 5853,
                  "src": "3894:12:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5838,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3894:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5842,
                  "mutability": "mutable",
                  "name": "ids",
                  "nameLocation": "3935:3:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 5853,
                  "src": "3916:22:17",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 5840,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3916:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 5841,
                    "nodeType": "ArrayTypeName",
                    "src": "3916:9:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5845,
                  "mutability": "mutable",
                  "name": "values",
                  "nameLocation": "3967:6:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 5853,
                  "src": "3948:25:17",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 5843,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3948:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 5844,
                    "nodeType": "ArrayTypeName",
                    "src": "3948:9:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5847,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "3998:4:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 5853,
                  "src": "3983:19:17",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 5846,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3983:5:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3858:150:17"
            },
            "returnParameters": {
              "id": 5851,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5850,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5853,
                  "src": "4035:6:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 5849,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "4035:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4034:8:17"
            },
            "scope": 6064,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 5876,
            "nodeType": "FunctionDefinition",
            "src": "4051:213:17",
            "nodes": [],
            "body": {
              "id": 5875,
              "nodeType": "Block",
              "src": "4151:113:17",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 5873,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 5868,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 5863,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5855,
                        "src": "4168:11:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 5865,
                              "name": "IERC1155Receiver",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13805,
                              "src": "4188:16:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$13805_$",
                                "typeString": "type(contract IERC1155Receiver)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$13805_$",
                                "typeString": "type(contract IERC1155Receiver)"
                              }
                            ],
                            "id": 5864,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "4183:4:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 5866,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4183:22:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155Receiver_$13805",
                            "typeString": "type(contract IERC1155Receiver)"
                          }
                        },
                        "id": 5867,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "interfaceId",
                        "nodeType": "MemberAccess",
                        "src": "4183:34:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "src": "4168:49:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 5871,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5855,
                          "src": "4245:11:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 5869,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -25,
                          "src": "4221:5:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_Staking1155Base_$6064_$",
                            "typeString": "type(contract super Staking1155Base)"
                          }
                        },
                        "id": 5870,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7822,
                        "src": "4221:23:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view returns (bool)"
                        }
                      },
                      "id": 5872,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4221:36:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4168:89:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 5862,
                  "id": 5874,
                  "nodeType": "Return",
                  "src": "4161:96:17"
                }
              ]
            },
            "baseFunctions": [
              7822,
              13828
            ],
            "functionSelector": "01ffc9a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "4060:17:17",
            "overrides": {
              "id": 5859,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 5857,
                  "name": "ERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7823,
                  "src": "4119:6:17"
                },
                {
                  "id": 5858,
                  "name": "IERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 13829,
                  "src": "4127:7:17"
                }
              ],
              "src": "4110:25:17"
            },
            "parameters": {
              "id": 5856,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5855,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "4085:11:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 5876,
                  "src": "4078:18:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 5854,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "4078:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4077:20:17"
            },
            "returnParameters": {
              "id": 5862,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5861,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5876,
                  "src": "4145:4:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5860,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4145:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4144:6:17"
            },
            "scope": 6064,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 5910,
            "nodeType": "FunctionDefinition",
            "src": "4691:401:17",
            "nodes": [],
            "body": {
              "id": 5909,
              "nodeType": "Block",
              "src": "4774:318:17",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5888,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5886,
                          "name": "_rewards",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5881,
                          "src": "4792:8:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 5887,
                          "name": "rewardTokenBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5723,
                          "src": "4804:18:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4792:30:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f7567682072657761726420746f6b656e73",
                        "id": 5889,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4824:26:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f9f034c0209f69095b9daea6fa2bfb48319f16f6cf36946d2a2348944ff59120",
                          "typeString": "literal_string \"Not enough reward tokens\""
                        },
                        "value": "Not enough reward tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f9f034c0209f69095b9daea6fa2bfb48319f16f6cf36946d2a2348944ff59120",
                          "typeString": "literal_string \"Not enough reward tokens\""
                        }
                      ],
                      "id": 5885,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4784:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5890,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4784:67:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5891,
                  "nodeType": "ExpressionStatement",
                  "src": "4784:67:17"
                },
                {
                  "expression": {
                    "id": 5894,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5892,
                      "name": "rewardTokenBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5723,
                      "src": "4861:18:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 5893,
                      "name": "_rewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5881,
                      "src": "4883:8:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4861:30:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5895,
                  "nodeType": "ExpressionStatement",
                  "src": "4861:30:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5899,
                        "name": "rewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5717,
                        "src": "4962:11:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 5902,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4995:4:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Staking1155Base_$6064",
                              "typeString": "contract Staking1155Base"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Staking1155Base_$6064",
                              "typeString": "contract Staking1155Base"
                            }
                          ],
                          "id": 5901,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4987:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 5900,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4987:7:17",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 5903,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4987:13:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5904,
                        "name": "_staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5879,
                        "src": "5014:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5905,
                        "name": "_rewards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5881,
                        "src": "5035:8:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 5906,
                        "name": "nativeTokenWrapper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5720,
                        "src": "5057:18:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 5896,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63578,
                        "src": "4901:19:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$63578_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 5898,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferCurrencyWithWrapper",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63469,
                      "src": "4901:47:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address,uint256,address)"
                      }
                    },
                    "id": 5907,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4901:184:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5908,
                  "nodeType": "ExpressionStatement",
                  "src": "4901:184:17"
                }
              ]
            },
            "baseFunctions": [
              25744
            ],
            "documentation": {
              "id": 5877,
              "nodeType": "StructuredDocumentation",
              "src": "4447:239:17",
              "text": "  @dev    Mint ERC20 rewards to the staker. Override for custom logic.\n  @param _staker    Address for which to calculated rewards.\n  @param _rewards   Amount of tokens to be given out as reward."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mintRewards",
            "nameLocation": "4700:12:17",
            "overrides": {
              "id": 5883,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4765:8:17"
            },
            "parameters": {
              "id": 5882,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5879,
                  "mutability": "mutable",
                  "name": "_staker",
                  "nameLocation": "4721:7:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 5910,
                  "src": "4713:15:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5878,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4713:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5881,
                  "mutability": "mutable",
                  "name": "_rewards",
                  "nameLocation": "4738:8:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 5910,
                  "src": "4730:16:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5880,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4730:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4712:35:17"
            },
            "returnParameters": {
              "id": 5884,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4774:0:17"
            },
            "scope": 6064,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 5980,
            "nodeType": "FunctionDefinition",
            "src": "5358:660:17",
            "nodes": [],
            "body": {
              "id": 5979,
              "nodeType": "Block",
              "src": "5422:596:17",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 5921,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 5917,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5440:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 5918,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5440:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 5919,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21105,
                            "src": "5454:5:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 5920,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5454:7:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5440:21:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420617574686f72697a6564",
                        "id": 5922,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5463:16:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
                          "typeString": "literal_string \"Not authorized\""
                        },
                        "value": "Not authorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
                          "typeString": "literal_string \"Not authorized\""
                        }
                      ],
                      "id": 5916,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5432:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5923,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5432:48:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5924,
                  "nodeType": "ExpressionStatement",
                  "src": "5432:48:17"
                },
                {
                  "assignments": [
                    5926
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5926,
                      "mutability": "mutable",
                      "name": "_rewardToken",
                      "nameLocation": "5499:12:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 5979,
                      "src": "5491:20:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 5925,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5491:7:17",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5934,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 5930,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 5927,
                        "name": "rewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5717,
                        "src": "5514:11:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 5928,
                          "name": "CurrencyTransferLib",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63578,
                          "src": "5529:19:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$63578_$",
                            "typeString": "type(library CurrencyTransferLib)"
                          }
                        },
                        "id": 5929,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "NATIVE_TOKEN",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 63346,
                        "src": "5529:32:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "5514:47:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 5932,
                      "name": "rewardToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5717,
                      "src": "5585:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 5933,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "5514:82:17",
                    "trueExpression": {
                      "id": 5931,
                      "name": "nativeTokenWrapper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5720,
                      "src": "5564:18:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5491:105:17"
                },
                {
                  "assignments": [
                    5936
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5936,
                      "mutability": "mutable",
                      "name": "balanceBefore",
                      "nameLocation": "5615:13:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 5979,
                      "src": "5607:21:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5935,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5607:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5946,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 5943,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5670:4:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Staking1155Base_$6064",
                              "typeString": "contract Staking1155Base"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Staking1155Base_$6064",
                              "typeString": "contract Staking1155Base"
                            }
                          ],
                          "id": 5942,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5662:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 5941,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5662:7:17",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 5944,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5662:13:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 5938,
                            "name": "_rewardToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5926,
                            "src": "5638:12:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 5937,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13899,
                          "src": "5631:6:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$13899_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 5939,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5631:20:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$13899",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 5940,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13844,
                      "src": "5631:30:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 5945,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5631:45:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5607:69:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5950,
                        "name": "rewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5717,
                        "src": "5747:11:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 5951,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5772:3:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 5952,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5772:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 5955,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5804:4:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Staking1155Base_$6064",
                              "typeString": "contract Staking1155Base"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Staking1155Base_$6064",
                              "typeString": "contract Staking1155Base"
                            }
                          ],
                          "id": 5954,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5796:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 5953,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5796:7:17",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 5956,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5796:13:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5957,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5913,
                        "src": "5823:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 5958,
                        "name": "nativeTokenWrapper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5720,
                        "src": "5844:18:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 5947,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63578,
                        "src": "5686:19:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$63578_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 5949,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferCurrencyWithWrapper",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63469,
                      "src": "5686:47:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address,uint256,address)"
                      }
                    },
                    "id": 5959,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5686:186:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5960,
                  "nodeType": "ExpressionStatement",
                  "src": "5686:186:17"
                },
                {
                  "assignments": [
                    5962
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5962,
                      "mutability": "mutable",
                      "name": "actualAmount",
                      "nameLocation": "5890:12:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 5979,
                      "src": "5882:20:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5961,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5882:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5974,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5973,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 5969,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "5944:4:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Staking1155Base_$6064",
                                "typeString": "contract Staking1155Base"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Staking1155Base_$6064",
                                "typeString": "contract Staking1155Base"
                              }
                            ],
                            "id": 5968,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5936:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 5967,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5936:7:17",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 5970,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5936:13:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 5964,
                              "name": "_rewardToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5926,
                              "src": "5912:12:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 5963,
                            "name": "IERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13899,
                            "src": "5905:6:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC20_$13899_$",
                              "typeString": "type(contract IERC20)"
                            }
                          },
                          "id": 5965,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5905:20:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$13899",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 5966,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 13844,
                        "src": "5905:30:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 5971,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5905:45:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 5972,
                      "name": "balanceBefore",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5936,
                      "src": "5953:13:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5905:61:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5882:84:17"
                },
                {
                  "expression": {
                    "id": 5977,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5975,
                      "name": "rewardTokenBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5723,
                      "src": "5977:18:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 5976,
                      "name": "actualAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5962,
                      "src": "5999:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5977:34:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5978,
                  "nodeType": "ExpressionStatement",
                  "src": "5977:34:17"
                }
              ]
            },
            "documentation": {
              "id": 5911,
              "nodeType": "StructuredDocumentation",
              "src": "5286:67:17",
              "text": "@dev Admin deposits reward tokens -- override for custom logic."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_depositRewardTokens",
            "nameLocation": "5367:20:17",
            "parameters": {
              "id": 5914,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5913,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "5396:7:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 5980,
                  "src": "5388:15:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5912,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5388:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5387:17:17"
            },
            "returnParameters": {
              "id": 5915,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5422:0:17"
            },
            "scope": 6064,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 6021,
            "nodeType": "FunctionDefinition",
            "src": "6107:481:17",
            "nodes": [],
            "body": {
              "id": 6020,
              "nodeType": "Block",
              "src": "6172:416:17",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 5991,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 5987,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "6190:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 5988,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6190:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 5989,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21105,
                            "src": "6204:5:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 5990,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6204:7:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6190:21:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420617574686f72697a6564",
                        "id": 5992,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6213:16:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
                          "typeString": "literal_string \"Not authorized\""
                        },
                        "value": "Not authorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
                          "typeString": "literal_string \"Not authorized\""
                        }
                      ],
                      "id": 5986,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6182:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5993,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6182:48:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5994,
                  "nodeType": "ExpressionStatement",
                  "src": "6182:48:17"
                },
                {
                  "expression": {
                    "id": 6004,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5995,
                      "name": "rewardTokenBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5723,
                      "src": "6300:18:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5998,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5996,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5983,
                          "src": "6321:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "id": 5997,
                          "name": "rewardTokenBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5723,
                          "src": "6331:18:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6321:28:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 6002,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 6000,
                          "name": "rewardTokenBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5723,
                          "src": "6356:18:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 6001,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5983,
                          "src": "6377:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6356:28:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 6003,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "Conditional",
                      "src": "6321:63:17",
                      "trueExpression": {
                        "hexValue": "30",
                        "id": 5999,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6352:1:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6300:84:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6005,
                  "nodeType": "ExpressionStatement",
                  "src": "6300:84:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6009,
                        "name": "rewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5717,
                        "src": "6456:11:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 6012,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "6489:4:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Staking1155Base_$6064",
                              "typeString": "contract Staking1155Base"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Staking1155Base_$6064",
                              "typeString": "contract Staking1155Base"
                            }
                          ],
                          "id": 6011,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6481:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 6010,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6481:7:17",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 6013,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6481:13:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 6014,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6508:3:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 6015,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6508:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6016,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5983,
                        "src": "6532:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 6017,
                        "name": "nativeTokenWrapper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5720,
                        "src": "6553:18:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 6006,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63578,
                        "src": "6395:19:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$63578_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 6008,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferCurrencyWithWrapper",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63469,
                      "src": "6395:47:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address,uint256,address)"
                      }
                    },
                    "id": 6018,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6395:186:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6019,
                  "nodeType": "ExpressionStatement",
                  "src": "6395:186:17"
                }
              ]
            },
            "documentation": {
              "id": 5981,
              "nodeType": "StructuredDocumentation",
              "src": "6024:78:17",
              "text": "@dev Admin can withdraw excess reward tokens -- override for custom logic."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_withdrawRewardTokens",
            "nameLocation": "6116:21:17",
            "parameters": {
              "id": 5984,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5983,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "6146:7:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6021,
                  "src": "6138:15:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5982,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6138:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6137:17:17"
            },
            "returnParameters": {
              "id": 5985,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6172:0:17"
            },
            "scope": 6064,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 6035,
            "nodeType": "FunctionDefinition",
            "src": "6683:125:17",
            "nodes": [],
            "body": {
              "id": 6034,
              "nodeType": "Block",
              "src": "6763:45:17",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 6032,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 6028,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "6780:3:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 6029,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "6780:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 6030,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21105,
                        "src": "6794:5:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 6031,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6794:7:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6780:21:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 6027,
                  "id": 6033,
                  "nodeType": "Return",
                  "src": "6773:28:17"
                }
              ]
            },
            "baseFunctions": [
              25750
            ],
            "documentation": {
              "id": 6022,
              "nodeType": "StructuredDocumentation",
              "src": "6594:84:17",
              "text": "@dev Returns whether staking restrictions can be set in given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetStakeConditions",
            "nameLocation": "6692:22:17",
            "overrides": {
              "id": 6024,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6739:8:17"
            },
            "parameters": {
              "id": 6023,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6714:2:17"
            },
            "returnParameters": {
              "id": 6027,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6026,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6035,
                  "src": "6757:4:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6025,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6757:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6756:6:17"
            },
            "scope": 6064,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 6049,
            "nodeType": "FunctionDefinition",
            "src": "6904:121:17",
            "nodes": [],
            "body": {
              "id": 6048,
              "nodeType": "Block",
              "src": "6980:45:17",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 6046,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 6042,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "6997:3:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 6043,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "6997:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 6044,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21105,
                        "src": "7011:5:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 6045,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7011:7:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6997:21:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 6041,
                  "id": 6047,
                  "nodeType": "Return",
                  "src": "6990:28:17"
                }
              ]
            },
            "baseFunctions": [
              17525
            ],
            "documentation": {
              "id": 6036,
              "nodeType": "StructuredDocumentation",
              "src": "6814:85:17",
              "text": "@dev Returns whether contract metadata can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetContractURI",
            "nameLocation": "6913:18:17",
            "overrides": {
              "id": 6038,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6956:8:17"
            },
            "parameters": {
              "id": 6037,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6931:2:17"
            },
            "returnParameters": {
              "id": 6041,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6040,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6049,
                  "src": "6974:4:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6039,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6974:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6973:6:17"
            },
            "scope": 6064,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 6063,
            "nodeType": "FunctionDefinition",
            "src": "7109:115:17",
            "nodes": [],
            "body": {
              "id": 6062,
              "nodeType": "Block",
              "src": "7179:45:17",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 6060,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 6056,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "7196:3:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 6057,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "7196:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 6058,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21105,
                        "src": "7210:5:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 6059,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7210:7:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7196:21:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 6055,
                  "id": 6061,
                  "nodeType": "Return",
                  "src": "7189:28:17"
                }
              ]
            },
            "baseFunctions": [
              21152
            ],
            "documentation": {
              "id": 6050,
              "nodeType": "StructuredDocumentation",
              "src": "7031:73:17",
              "text": "@dev Returns whether owner can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetOwner",
            "nameLocation": "7118:12:17",
            "overrides": {
              "id": 6052,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7155:8:17"
            },
            "parameters": {
              "id": 6051,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7130:2:17"
            },
            "returnParameters": {
              "id": 6055,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6054,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6063,
                  "src": "7173:4:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6053,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7173:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7172:6:17"
            },
            "scope": 6064,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 5703,
              "name": "ContractMetadata",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 17526,
              "src": "1668:16:17"
            },
            "id": 5704,
            "nodeType": "InheritanceSpecifier",
            "src": "1668:16:17"
          },
          {
            "baseName": {
              "id": 5705,
              "name": "Multicall",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 20595,
              "src": "1686:9:17"
            },
            "id": 5706,
            "nodeType": "InheritanceSpecifier",
            "src": "1686:9:17"
          },
          {
            "baseName": {
              "id": 5707,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 21153,
              "src": "1697:7:17"
            },
            "id": 5708,
            "nodeType": "InheritanceSpecifier",
            "src": "1697:7:17"
          },
          {
            "baseName": {
              "id": 5709,
              "name": "Staking1155",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 25751,
              "src": "1706:11:17"
            },
            "id": 5710,
            "nodeType": "InheritanceSpecifier",
            "src": "1706:11:17"
          },
          {
            "baseName": {
              "id": 5711,
              "name": "ERC165",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7823,
              "src": "1719:6:17"
            },
            "id": 5712,
            "nodeType": "InheritanceSpecifier",
            "src": "1719:6:17"
          },
          {
            "baseName": {
              "id": 5713,
              "name": "IERC1155Receiver",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 13805,
              "src": "1727:16:17"
            },
            "id": 5714,
            "nodeType": "InheritanceSpecifier",
            "src": "1727:16:17"
          }
        ],
        "canonicalName": "Staking1155Base",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 5702,
          "nodeType": "StructuredDocumentation",
          "src": "1312:56:17",
          "text": "note: This contract is provided as a base contract."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          6064,
          13805,
          7823,
          13829,
          25751,
          34030,
          46484,
          21153,
          33183,
          20595,
          32926,
          17526,
          32437
        ],
        "name": "Staking1155Base",
        "nameLocation": "1649:15:17",
        "scope": 6065,
        "usedErrors": []
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 17
}