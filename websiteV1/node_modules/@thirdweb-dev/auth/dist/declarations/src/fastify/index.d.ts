import { FastifyInstance, FastifyPluginOptions, FastifyRequest } from "fastify";
import { Json } from "../core";
import { FastifyCookie } from "@fastify/cookie";
import { ThirdwebAuthConfig, ThirdwebAuthUser } from "./types";
export * from "./types";
export { getToken } from "./helpers/user";
type ThirdwebAuthReturnType<TData extends Json = Json, TSession extends Json = Json> = {
    authRouter: (fastify: FastifyInstance, opts: FastifyPluginOptions, done: (err?: Error | undefined) => void) => void;
    authMiddleware: FastifyCookie;
    getUser: (req: FastifyRequest) => Promise<ThirdwebAuthUser<TData, TSession> | null>;
};
export declare function ThirdwebAuth<TData extends Json = Json, TSession extends Json = Json>(cfg: ThirdwebAuthConfig<TData, TSession>): ThirdwebAuthReturnType<TData, TSession>;
//# sourceMappingURL=index.d.ts.map