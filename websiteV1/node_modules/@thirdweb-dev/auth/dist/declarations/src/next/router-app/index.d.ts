import type { NextRequest } from "next/server";
import type { Json } from "../../core";
import type { ThirdwebAuthConfig, ThirdwebAuthContext } from "./types";
import type { ThirdwebNextContext } from "../common/types";
export type { ThirdwebAuthConfig, ThirdwebAuthContext, } from "./types";
export declare function ThirdwebAuthRouter(req: NextRequest, ctx: ThirdwebNextContext, authCtx: ThirdwebAuthContext): Promise<Response>;
export declare function ThirdwebAuth<TData extends Json = Json, TSession extends Json = Json>(cfg: ThirdwebAuthConfig<TData, TSession>): {
    ThirdwebAuthHandler: (req: NextRequest, ctx: ThirdwebNextContext) => Promise<Response>;
    getUser: () => Promise<import("../common/types").ThirdwebAuthUser<TData, TSession> | null>;
};
//# sourceMappingURL=index.d.ts.map