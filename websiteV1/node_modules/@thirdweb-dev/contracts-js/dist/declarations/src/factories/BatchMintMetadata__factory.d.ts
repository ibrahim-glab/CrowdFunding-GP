import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { BatchMintMetadata, BatchMintMetadataInterface } from "../BatchMintMetadata.js";
type BatchMintMetadataConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class BatchMintMetadata__factory extends ContractFactory {
    constructor(...args: BatchMintMetadataConstructorParams);
    deploy(overrides?: Overrides & {
        from?: string | Promise<string>;
    }): Promise<BatchMintMetadata>;
    getDeployTransaction(overrides?: Overrides & {
        from?: string | Promise<string>;
    }): TransactionRequest;
    attach(address: string): BatchMintMetadata;
    connect(signer: Signer): BatchMintMetadata__factory;
    static readonly bytecode = "0x608060405234801561001057600080fd5b50610177806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80632419f51b1461004657806363b45e2d1461006c5780638304053214610074575b600080fd5b610059610054366004610112565b6100a7565b6040519081526020015b60405180910390f35b600054610059565b610097610082366004610112565b60026020526000908152604090205460ff1681565b6040519015158152602001610063565b6000805482106100ed5760405162461bcd60e51b815260206004820152600d60248201526c092dcecc2d8d2c840d2dcc8caf609b1b604482015260640160405180910390fd5b600082815481106101005761010061012b565b90600052602060002001549050919050565b60006020828403121561012457600080fd5b5035919050565b634e487b7160e01b600052603260045260246000fdfea2646970667358221220205be64d4c9d135234f0a9bfca72f368c6bf2fd13bab88b2fdc9e7fa5bc937d764736f6c634300080c0033";
    static readonly abi: ({
        anonymous: boolean;
        inputs: {
            indexed: boolean;
            internalType: string;
            name: string;
            type: string;
        }[];
        name: string;
        type: string;
        outputs?: undefined;
        stateMutability?: undefined;
    } | {
        inputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        name: string;
        outputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        stateMutability: string;
        type: string;
        anonymous?: undefined;
    })[];
    static createInterface(): BatchMintMetadataInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): BatchMintMetadata;
}
export {};
//# sourceMappingURL=BatchMintMetadata__factory.d.ts.map