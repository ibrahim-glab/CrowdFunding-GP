import { _ as _classPrivateFieldInitSpec, a as _classPrivateFieldSet, b as _classPrivateFieldGet } from '../../../../dist/classPrivateFieldSet-a5db7c83.browser.esm.js';
import { AbstractWallet } from '../../abstract/dist/thirdweb-dev-wallets-evm-wallets-abstract.browser.esm.js';
import { ethers } from 'ethers';
import '../../../../dist/defineProperty-d7c057bf.browser.esm.js';
import 'eventemitter3';
import '@thirdweb-dev/sdk';

var _signer = /*#__PURE__*/new WeakMap();
var _options = /*#__PURE__*/new WeakMap();
/**
 * Connect to a custodial wallet with a signing key in [AWS Key Management Service](https://aws.amazon.com/kms/).
 *
 * In order to instantiate an AWS KMS wallet, you need to get the relevant credentials for the AWS KMS key that you want to use.
 *
 * @example
 * ```js
 * import { AwsKmsWallet } from "@thirdweb-dev/wallets/evm/wallets/aws-kms";
 *
 * const wallet = new AwsKmsWallet({
 *   region: "us-east-1",
 *   accessKeyId: process.env.AWS_ACCESS_KEY_ID,
 *   secretAccessKey: process.env.AWS_SECRET_ACCESS_KEY,
 *   sessionToken: process.env.AWS_SESSION_TOKEN,
 *   keyId: process.env.AWS_KEY_ID,
 * });
 * ```
 *
 * @wallet
 */
class AwsKmsWallet extends AbstractWallet {
  /**
   * Create instance of `AwsKmsWallet`
   * @param options -
   * The `options` object of type `AwsKmsSignerCredentials` from `ethers-aws-kms-signer` package
   */
  constructor(options) {
    super();
    _classPrivateFieldInitSpec(this, _signer, {
      writable: true,
      value: void 0
    });
    _classPrivateFieldInitSpec(this, _options, {
      writable: true,
      value: void 0
    });
    _classPrivateFieldSet(this, _options, options);
  }

  /**
   * Get [ethers signer](https://docs.ethers.io/v5/api/signer/) of the connected wallet
   */
  async getSigner() {
    if (!_classPrivateFieldGet(this, _signer)) {
      _classPrivateFieldSet(this, _signer, new Promise(async (resolve, reject) => {
        try {
          const {
            AwsKmsSigner
          } = await import('ethers-aws-kms-signer');
          const signer = new AwsKmsSigner(_classPrivateFieldGet(this, _options));

          // Need to add this because ethers-aws-kms-signer doesn't support
          signer._signTypedData = async function (domain, types, value) {
            const hash = ethers.utils._TypedDataEncoder.hash(domain, types, value);
            return signer._signDigest(hash);
          };
          resolve(signer);
        } catch (err) {
          // remove the cached promise so we can try again
          _classPrivateFieldSet(this, _signer, undefined);
          reject(err);
        }
      }));
    }
    return _classPrivateFieldGet(this, _signer);
  }
}

export { AwsKmsWallet };
