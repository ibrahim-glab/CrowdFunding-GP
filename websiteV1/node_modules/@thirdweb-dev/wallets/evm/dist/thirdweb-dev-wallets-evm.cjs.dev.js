'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var wc = require('../../dist/wc-6f95118d.cjs.dev.js');
var walletIds = require('../../dist/walletIds-d2cd7be8.cjs.dev.js');
var WagmiConnector = require('../../dist/WagmiConnector-6ff7d562.cjs.dev.js');
var errors = require('../../dist/errors-e4b137ea.cjs.dev.js');
var normalizeChainId = require('../../dist/normalizeChainId-5da85f42.cjs.dev.js');
var evm_wallets_base_dist_thirdwebDevWalletsEvmWalletsBase = require('../../dist/base-94547c89.cjs.dev.js');
var connector = require('../../dist/connector-a63dd9e7.cjs.dev.js');
var evm_wallets_paperWallet_dist_thirdwebDevWalletsEvmWalletsPaperWallet = require('../wallets/paper-wallet/dist/thirdweb-dev-wallets-evm-wallets-paper-wallet.cjs.dev.js');
var evm_wallets_blocto_dist_thirdwebDevWalletsEvmWalletsBlocto = require('../wallets/blocto/dist/thirdweb-dev-wallets-evm-wallets-blocto.cjs.dev.js');
var evm_wallets_coinbaseWallet_dist_thirdwebDevWalletsEvmWalletsCoinbaseWallet = require('../wallets/coinbase-wallet/dist/thirdweb-dev-wallets-evm-wallets-coinbase-wallet.cjs.dev.js');
var evm_wallets_embeddedWallet_dist_thirdwebDevWalletsEvmWalletsEmbeddedWallet = require('../wallets/embedded-wallet/dist/thirdweb-dev-wallets-evm-wallets-embedded-wallet.cjs.dev.js');
var evm_wallets_ethers_dist_thirdwebDevWalletsEvmWalletsEthers = require('../wallets/ethers/dist/thirdweb-dev-wallets-evm-wallets-ethers.cjs.dev.js');
var evm_wallets_frame_dist_thirdwebDevWalletsEvmWalletsFrame = require('../wallets/frame/dist/thirdweb-dev-wallets-evm-wallets-frame.cjs.dev.js');
var evm_wallets_injected_dist_thirdwebDevWalletsEvmWalletsInjected = require('../wallets/injected/dist/thirdweb-dev-wallets-evm-wallets-injected.cjs.dev.js');
var evm_wallets_localWallet_dist_thirdwebDevWalletsEvmWalletsLocalWallet = require('../wallets/local-wallet/dist/thirdweb-dev-wallets-evm-wallets-local-wallet.cjs.dev.js');
var evm_wallets_signer_dist_thirdwebDevWalletsEvmWalletsSigner = require('../wallets/signer/dist/thirdweb-dev-wallets-evm-wallets-signer.cjs.dev.js');
var evm_wallets_magic_dist_thirdwebDevWalletsEvmWalletsMagic = require('../wallets/magic/dist/thirdweb-dev-wallets-evm-wallets-magic.cjs.dev.js');
var evm_wallets_metamask_dist_thirdwebDevWalletsEvmWalletsMetamask = require('../wallets/metamask/dist/thirdweb-dev-wallets-evm-wallets-metamask.cjs.dev.js');
var evm_wallets_xdefi_dist_thirdwebDevWalletsEvmWalletsXdefi = require('../wallets/xdefi/dist/thirdweb-dev-wallets-evm-wallets-xdefi.cjs.dev.js');
var getInjectedXDEFIProvider = require('../../dist/getInjectedXDEFIProvider-c2cf0aa1.cjs.dev.js');
var evm_wallets_phantom_dist_thirdwebDevWalletsEvmWalletsPhantom = require('../wallets/phantom/dist/thirdweb-dev-wallets-evm-wallets-phantom.cjs.dev.js');
var evm_wallets_privateKey_dist_thirdwebDevWalletsEvmWalletsPrivateKey = require('../wallets/private-key/dist/thirdweb-dev-wallets-evm-wallets-private-key.cjs.dev.js');
var evm_wallets_rainbowWallet_dist_thirdwebDevWalletsEvmWalletsRainbowWallet = require('../wallets/rainbow-wallet/dist/thirdweb-dev-wallets-evm-wallets-rainbow-wallet.cjs.dev.js');
var evm_wallets_safe_dist_thirdwebDevWalletsEvmWalletsSafe = require('../wallets/safe/dist/thirdweb-dev-wallets-evm-wallets-safe.cjs.dev.js');
var evm_wallets_smartWallet_dist_thirdwebDevWalletsEvmWalletsSmartWallet = require('../wallets/smart-wallet/dist/thirdweb-dev-wallets-evm-wallets-smart-wallet.cjs.dev.js');
var evm_wallets_trust_dist_thirdwebDevWalletsEvmWalletsTrust = require('../wallets/trust/dist/thirdweb-dev-wallets-evm-wallets-trust.cjs.dev.js');
var evm_wallets_walletConnect_dist_thirdwebDevWalletsEvmWalletsWalletConnect = require('../wallets/wallet-connect/dist/thirdweb-dev-wallets-evm-wallets-wallet-connect.cjs.dev.js');
var evm_wallets_walletConnectV1_dist_thirdwebDevWalletsEvmWalletsWalletConnectV1 = require('../wallets/wallet-connect-v1/dist/thirdweb-dev-wallets-evm-wallets-wallet-connect-v1.cjs.dev.js');
var evm_wallets_zerion_dist_thirdwebDevWalletsEvmWalletsZerion = require('../wallets/zerion/dist/thirdweb-dev-wallets-evm-wallets-zerion.cjs.dev.js');
var evm_wallets_tokenBoundSmartWallet_dist_thirdwebDevWalletsEvmWalletsTokenBoundSmartWallet = require('../wallets/token-bound-smart-wallet/dist/thirdweb-dev-wallets-evm-wallets-token-bound-smart-wallet.cjs.dev.js');
var evm_wallets_engine_dist_thirdwebDevWalletsEvmWalletsEngine = require('../../dist/engine-e6b722c0.cjs.dev.js');
var evm_wallets_okx_dist_thirdwebDevWalletsEvmWalletsOkx = require('../wallets/okx/dist/thirdweb-dev-wallets-evm-wallets-okx.cjs.dev.js');
var getInjectedOKXProvider = require('../../dist/getInjectedOKXProvider-061eeec5.cjs.dev.js');
var evm_wallets_coreWallet_dist_thirdwebDevWalletsEvmWalletsCoreWallet = require('../wallets/core-wallet/dist/thirdweb-dev-wallets-evm-wallets-core-wallet.cjs.dev.js');
var getInjectedCoreWalletProvider = require('../../dist/getInjectedCoreWalletProvider-40994347.cjs.dev.js');
var evm_wallets_onekey_dist_thirdwebDevWalletsEvmWalletsOnekey = require('../wallets/onekey/dist/thirdweb-dev-wallets-evm-wallets-onekey.cjs.dev.js');
var getInjectedOneKeyProvider = require('../../dist/getInjectedOneKeyProvider-0a528a5e.cjs.dev.js');
var evm_wallets_cryptoDefiWallet_dist_thirdwebDevWalletsEvmWalletsCryptoDefiWallet = require('../wallets/crypto-defi-wallet/dist/thirdweb-dev-wallets-evm-wallets-crypto-defi-wallet.cjs.dev.js');
var getInjectedCryptoDefiWalletProvider = require('../../dist/getInjectedCryptoDefiWalletProvider-0c32c7a6.cjs.dev.js');
var evm_wallets_rabby_dist_thirdwebDevWalletsEvmWalletsRabby = require('../wallets/rabby/dist/thirdweb-dev-wallets-evm-wallets-rabby.cjs.dev.js');
var getInjectedRabbyProvider = require('../../dist/getInjectedRabbyProvider-6848be5c.cjs.dev.js');
var evm_wallets_coin98_dist_thirdwebDevWalletsEvmWalletsCoin98 = require('../wallets/coin98/dist/thirdweb-dev-wallets-evm-wallets-coin98.cjs.dev.js');
var getInjectedCoin98Provider = require('../../dist/getInjectedCoin98Provider-8ce651ee.cjs.dev.js');
var getInjectedMetamaskProvider = require('../../dist/getInjectedMetamaskProvider-9bda81bb.cjs.dev.js');
var getInjectedPhantomProvider = require('../../dist/getInjectedPhantomProvider-231d1eba.cjs.dev.js');
var getInjectedRainbowProvider = require('../../dist/getInjectedRainbowProvider-c2c5c73f.cjs.dev.js');
var getInjectedCoinbaseProvider = require('../../dist/getInjectedCoinbaseProvider-4b26612d.cjs.dev.js');
var assertWindowEthereum = require('../../dist/assertWindowEthereum-0709ee9e.cjs.dev.js');
var embeddedWallet = require('../../dist/embedded-wallet-87d38047.cjs.dev.js');
require('@thirdweb-dev/chains');
require('eventemitter3');
require('../../dist/defineProperty-982e7acf.cjs.dev.js');
require('../../dist/classPrivateMethodGet-8801ecd5.cjs.dev.js');
require('../../dist/classPrivateFieldSet-f0dc2a42.cjs.dev.js');
require('../wallets/abstract/dist/thirdweb-dev-wallets-evm-wallets-abstract.cjs.dev.js');
require('ethers');
require('@thirdweb-dev/sdk');
require('../../dist/headers-3cc7b8c1.cjs.dev.js');
require('buffer');
require('@thirdweb-dev/crypto');
require('../../dist/constants-300b7df5.cjs.dev.js');
require('@account-abstraction/contracts');
require('@paperxyz/sdk-common-utilities');
require('ethers/lib/utils');



exports.EIP155_SIGNING_METHODS = wc.EIP155_SIGNING_METHODS;
exports.walletIds = walletIds.walletIds;
exports.WagmiConnector = WagmiConnector.WagmiConnector;
exports.AddChainError = errors.AddChainError;
exports.ChainNotConfiguredError = errors.ChainNotConfiguredError;
exports.ProviderRpcError = errors.ProviderRpcError;
exports.SwitchChainError = errors.SwitchChainError;
exports.UserRejectedRequestError = errors.UserRejectedRequestError;
exports.normalizeChainId = normalizeChainId.normalizeChainId;
exports.AbstractClientWallet = evm_wallets_base_dist_thirdwebDevWalletsEvmWalletsBase.AbstractClientWallet;
exports.DEFAULT_DAPP_META = evm_wallets_base_dist_thirdwebDevWalletsEvmWalletsBase.DEFAULT_DAPP_META;
exports.isWalletAnalyticsEnabled = evm_wallets_base_dist_thirdwebDevWalletsEvmWalletsBase.isWalletAnalyticsEnabled;
exports.setWalletAnalyticsEnabled = evm_wallets_base_dist_thirdwebDevWalletsEvmWalletsBase.setWalletAnalyticsEnabled;
exports.Connector = connector.Connector;
exports.WagmiAdapter = connector.WagmiAdapter;
exports.PaperWallet = evm_wallets_paperWallet_dist_thirdwebDevWalletsEvmWalletsPaperWallet.PaperWallet;
exports.BloctoWallet = evm_wallets_blocto_dist_thirdwebDevWalletsEvmWalletsBlocto.BloctoWallet;
exports.CoinbaseWallet = evm_wallets_coinbaseWallet_dist_thirdwebDevWalletsEvmWalletsCoinbaseWallet.CoinbaseWallet;
exports.EmbeddedWallet = evm_wallets_embeddedWallet_dist_thirdwebDevWalletsEvmWalletsEmbeddedWallet.EmbeddedWallet;
exports.EthersWallet = evm_wallets_ethers_dist_thirdwebDevWalletsEvmWalletsEthers.EthersWallet;
exports.FrameWallet = evm_wallets_frame_dist_thirdwebDevWalletsEvmWalletsFrame.FrameWallet;
exports.InjectedWallet = evm_wallets_injected_dist_thirdwebDevWalletsEvmWalletsInjected.InjectedWallet;
exports.LocalWallet = evm_wallets_localWallet_dist_thirdwebDevWalletsEvmWalletsLocalWallet.LocalWallet;
exports.isValidPrivateKey = evm_wallets_localWallet_dist_thirdwebDevWalletsEvmWalletsLocalWallet.isValidPrivateKey;
exports.SignerWallet = evm_wallets_signer_dist_thirdwebDevWalletsEvmWalletsSigner.SignerWallet;
exports.MagicLink = evm_wallets_magic_dist_thirdwebDevWalletsEvmWalletsMagic.MagicLink;
exports.MetaMaskWallet = evm_wallets_metamask_dist_thirdwebDevWalletsEvmWalletsMetamask.MetaMaskWallet;
exports.XDEFIWallet = evm_wallets_xdefi_dist_thirdwebDevWalletsEvmWalletsXdefi.XDEFIWallet;
exports.getInjectedXDEFIProvider = getInjectedXDEFIProvider.getInjectedXDEFIProvider;
exports.PhantomWallet = evm_wallets_phantom_dist_thirdwebDevWalletsEvmWalletsPhantom.PhantomWallet;
exports.PrivateKeyWallet = evm_wallets_privateKey_dist_thirdwebDevWalletsEvmWalletsPrivateKey.PrivateKeyWallet;
exports.RainbowWallet = evm_wallets_rainbowWallet_dist_thirdwebDevWalletsEvmWalletsRainbowWallet.RainbowWallet;
exports.SafeWallet = evm_wallets_safe_dist_thirdwebDevWalletsEvmWalletsSafe.SafeWallet;
exports.SmartWallet = evm_wallets_smartWallet_dist_thirdwebDevWalletsEvmWalletsSmartWallet.SmartWallet;
exports.getAllSigners = evm_wallets_smartWallet_dist_thirdwebDevWalletsEvmWalletsSmartWallet.getAllSigners;
exports.getAllSmartWallets = evm_wallets_smartWallet_dist_thirdwebDevWalletsEvmWalletsSmartWallet.getAllSmartWallets;
exports.getSmartWalletAddress = evm_wallets_smartWallet_dist_thirdwebDevWalletsEvmWalletsSmartWallet.getSmartWalletAddress;
exports.getUserOpReceipt = evm_wallets_smartWallet_dist_thirdwebDevWalletsEvmWalletsSmartWallet.getUserOpReceipt;
exports.isSmartWalletDeployed = evm_wallets_smartWallet_dist_thirdwebDevWalletsEvmWalletsSmartWallet.isSmartWalletDeployed;
exports.TrustWallet = evm_wallets_trust_dist_thirdwebDevWalletsEvmWalletsTrust.TrustWallet;
exports.WalletConnect = evm_wallets_walletConnect_dist_thirdwebDevWalletsEvmWalletsWalletConnect.WalletConnect;
exports.WalletConnectV1 = evm_wallets_walletConnectV1_dist_thirdwebDevWalletsEvmWalletsWalletConnectV1.WalletConnectV1;
exports.ZerionWallet = evm_wallets_zerion_dist_thirdwebDevWalletsEvmWalletsZerion.ZerionWallet;
exports.TokenBoundSmartWallet = evm_wallets_tokenBoundSmartWallet_dist_thirdwebDevWalletsEvmWalletsTokenBoundSmartWallet.TokenBoundSmartWallet;
exports.EngineSigner = evm_wallets_engine_dist_thirdwebDevWalletsEvmWalletsEngine.EngineSigner;
exports.EngineWallet = evm_wallets_engine_dist_thirdwebDevWalletsEvmWalletsEngine.EngineWallet;
exports.OKXWallet = evm_wallets_okx_dist_thirdwebDevWalletsEvmWalletsOkx.OKXWallet;
exports.getInjectedOKXProvider = getInjectedOKXProvider.getInjectedOKXProvider;
exports.CoreWallet = evm_wallets_coreWallet_dist_thirdwebDevWalletsEvmWalletsCoreWallet.CoreWallet;
exports.getInjectedCoreWalletProvider = getInjectedCoreWalletProvider.getInjectedCoreWalletProvider;
exports.OneKeyWallet = evm_wallets_onekey_dist_thirdwebDevWalletsEvmWalletsOnekey.OneKeyWallet;
exports.getInjectedOneKeyProvider = getInjectedOneKeyProvider.getInjectedOneKeyProvider;
exports.CryptoDefiWallet = evm_wallets_cryptoDefiWallet_dist_thirdwebDevWalletsEvmWalletsCryptoDefiWallet.CryptoDefiWallet;
exports.getInjectedCryptoDefiWalletProvider = getInjectedCryptoDefiWalletProvider.getInjectedCryptoDefiWalletProvider;
exports.RabbyWallet = evm_wallets_rabby_dist_thirdwebDevWalletsEvmWalletsRabby.RabbyWallet;
exports.getInjectedRabbyProvider = getInjectedRabbyProvider.getInjectedRabbyProvider;
exports.Coin98Wallet = evm_wallets_coin98_dist_thirdwebDevWalletsEvmWalletsCoin98.Coin98Wallet;
exports.getInjectedCoin98Provider = getInjectedCoin98Provider.getInjectedCoin98Provider;
exports.getInjectedMetamaskProvider = getInjectedMetamaskProvider.getInjectedMetamaskProvider;
exports.getInjectedPhantomProvider = getInjectedPhantomProvider.getInjectedPhantomProvider;
exports.getInjectedRainbowProvider = getInjectedRainbowProvider.getInjectedRainbowProvider;
exports.getInjectedCoinbaseProvider = getInjectedCoinbaseProvider.getInjectedCoinbaseProvider;
exports.assertWindowEthereum = assertWindowEthereum.assertWindowEthereum;
exports.AUTH_TOKEN_LOCAL_STORAGE_NAME = embeddedWallet.AUTH_TOKEN_LOCAL_STORAGE_NAME;
exports.AuthProvider = embeddedWallet.AuthProvider;
exports.DEVICE_SHARE_LOCAL_STORAGE_NAME = embeddedWallet.DEVICE_SHARE_LOCAL_STORAGE_NAME;
exports.DEVICE_SHARE_LOCAL_STORAGE_NAME_DEPRECATED = embeddedWallet.DEVICE_SHARE_LOCAL_STORAGE_NAME_DEPRECATED;
exports.EmbeddedWalletSdk = embeddedWallet.EmbeddedWalletSdk;
exports.RecoveryShareManagement = embeddedWallet.RecoveryShareManagement;
exports.UserWalletStatus = embeddedWallet.UserWalletStatus;
exports.WALLET_USER_DETAILS_LOCAL_STORAGE_NAME = embeddedWallet.WALLET_USER_DETAILS_LOCAL_STORAGE_NAME;
exports.WALLET_USER_ID_LOCAL_STORAGE_NAME = embeddedWallet.WALLET_USER_ID_LOCAL_STORAGE_NAME;
