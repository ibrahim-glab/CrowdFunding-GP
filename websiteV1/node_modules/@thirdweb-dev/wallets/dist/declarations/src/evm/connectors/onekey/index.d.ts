import { AsyncStorage } from "../../../core/AsyncStorage";
import { InjectedConnector, InjectedConnectorOptions } from "../injected";
import type { Chain } from "@thirdweb-dev/chains";
export type OneKeyConnectorOptions = InjectedConnectorOptions;
type OneKeyWalletConnectorConstructorArg = {
    chains?: Chain[];
    connectorStorage: AsyncStorage;
    options?: OneKeyConnectorOptions;
};
export declare class OneKeyConnector extends InjectedConnector {
    readonly id: "oneKey";
    constructor(arg: OneKeyWalletConnectorConstructorArg);
    /**
     * Connect to injected OneKeyWallet provider
     */
    connect(options?: {
        chainId?: number;
    }): Promise<{
        chain: {
            id: number;
            unsupported: boolean;
        };
        provider: import("../injected/types").Ethereum;
        account: string;
    }>;
}
export {};
//# sourceMappingURL=index.d.ts.map