import { Bytes, Signer, providers, TypedDataDomain, TypedDataField, Wallet } from "ethers";
import { Deferrable } from "ethers/lib/utils";
export declare class WrappedSigner extends Signer {
    private signer;
    constructor(signer: Wallet);
    getAddress(): Promise<string>;
    signMessage(message: Bytes | string): Promise<string>;
    signTransaction(transaction: providers.TransactionRequest): Promise<string>;
    connect(provider: providers.Provider): Signer;
    _signTypedData(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): Promise<string>;
    sendTransaction(transaction: Deferrable<providers.TransactionRequest>): Promise<providers.TransactionResponse>;
}
//# sourceMappingURL=wrapped-signer.d.ts.map