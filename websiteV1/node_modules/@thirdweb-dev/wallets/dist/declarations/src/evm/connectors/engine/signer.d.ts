import { ethers } from "ethers";
export interface EngineSignerConfiguration {
    engineUrl: string;
    accessToken: string;
    backendWalletAddress: string;
}
export declare class EngineSigner extends ethers.Signer {
    config: EngineSignerConfiguration;
    constructor(config: EngineSignerConfiguration, provider?: ethers.providers.Provider);
    getAddress(): Promise<string>;
    signMessage(message: string): Promise<string>;
    signTransaction(transaction: ethers.utils.Deferrable<ethers.providers.TransactionRequest>): Promise<string>;
    sendTransaction(transaction: ethers.providers.TransactionRequest): Promise<ethers.providers.TransactionResponse>;
    connect(provider: ethers.providers.Provider): EngineSigner;
    private fetch;
}
//# sourceMappingURL=signer.d.ts.map