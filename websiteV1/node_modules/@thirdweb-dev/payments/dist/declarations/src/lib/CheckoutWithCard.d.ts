import type { ICustomizationOptions, Locale } from "../constants/style";
import type { ICheckoutWithCardConfigs, KycModal, ReviewResult } from "../interfaces/CheckoutWithCard";
import type { PaymentsSDKError } from "../interfaces/PaymentsSdkError";
import type { PriceSummary } from "../interfaces/PriceSummary";
import type { PaperPaymentElementConstructorArgs } from "./CreatePaymentElement";
export interface CheckoutWithCardLinkArgs {
    clientId?: string;
    sdkClientSecret?: string;
    appName?: string;
    options?: ICustomizationOptions;
    locale?: Locale;
    configs?: ICheckoutWithCardConfigs;
    /**
     * @deprecated: No longer used. Domain is set to "withpaper.com".
     */
    useAltDomain?: boolean;
}
export declare function createCheckoutWithCardLink({ clientId, sdkClientSecret, appName, options, locale, configs, }: CheckoutWithCardLinkArgs): URL;
export interface CheckoutWithCardMessageHandlerArgs {
    iframe: HTMLIFrameElement;
    onPaymentSuccess?: (props: {
        transactionId: string;
        /** @deprecated */
        id: string;
    }) => void;
    onReview?: (result: ReviewResult) => void;
    onError?: (error: PaymentsSDKError) => void;
    onOpenKycModal?: (props: KycModal) => void;
    onCloseKycModal?: () => void;
    onBeforeModalOpen?: (props: {
        url: string;
    }) => void;
    onPriceUpdate?: (props: PriceSummary) => void;
    useAltDomain?: boolean;
}
export declare function createCheckoutWithCardMessageHandler({ iframe, onError, onReview, onPaymentSuccess, onBeforeModalOpen, onPriceUpdate, }: CheckoutWithCardMessageHandlerArgs): (event: MessageEvent) => void;
export type CheckoutWithCardElementArgs = Omit<CheckoutWithCardMessageHandlerArgs, "iframe"> & CheckoutWithCardLinkArgs & PaperPaymentElementConstructorArgs;
export declare function createCheckoutWithCardElement({ clientId, onCloseKycModal, onOpenKycModal, sdkClientSecret, appName, elementOrId, onLoad, onError, locale, options, onPaymentSuccess, onReview, onBeforeModalOpen, onPriceUpdate, useAltDomain, configs, }: CheckoutWithCardElementArgs): HTMLIFrameElement;
//# sourceMappingURL=CheckoutWithCard.d.ts.map