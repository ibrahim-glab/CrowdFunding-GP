{
  "version": 3,
  "sources": ["../../fast-safe-stringify/index.js"],
  "sourcesContent": ["module.exports = stringify\r\nstringify.default = stringify\r\nstringify.stable = deterministicStringify\r\nstringify.stableStringify = deterministicStringify\r\n\r\nvar LIMIT_REPLACE_NODE = '[...]'\r\nvar CIRCULAR_REPLACE_NODE = '[Circular]'\r\n\r\nvar arr = []\r\nvar replacerStack = []\r\n\r\nfunction defaultOptions () {\r\n  return {\r\n    depthLimit: Number.MAX_SAFE_INTEGER,\r\n    edgesLimit: Number.MAX_SAFE_INTEGER\r\n  }\r\n}\r\n\r\n// Regular stringify\r\nfunction stringify (obj, replacer, spacer, options) {\r\n  if (typeof options === 'undefined') {\r\n    options = defaultOptions()\r\n  }\r\n\r\n  decirc(obj, '', 0, [], undefined, 0, options)\r\n  var res\r\n  try {\r\n    if (replacerStack.length === 0) {\r\n      res = JSON.stringify(obj, replacer, spacer)\r\n    } else {\r\n      res = JSON.stringify(obj, replaceGetterValues(replacer), spacer)\r\n    }\r\n  } catch (_) {\r\n    return JSON.stringify('[unable to serialize, circular reference is too complex to analyze]')\r\n  } finally {\r\n    while (arr.length !== 0) {\r\n      var part = arr.pop()\r\n      if (part.length === 4) {\r\n        Object.defineProperty(part[0], part[1], part[3])\r\n      } else {\r\n        part[0][part[1]] = part[2]\r\n      }\r\n    }\r\n  }\r\n  return res\r\n}\r\n\r\nfunction setReplace (replace, val, k, parent) {\r\n  var propertyDescriptor = Object.getOwnPropertyDescriptor(parent, k)\r\n  if (propertyDescriptor.get !== undefined) {\r\n    if (propertyDescriptor.configurable) {\r\n      Object.defineProperty(parent, k, { value: replace })\r\n      arr.push([parent, k, val, propertyDescriptor])\r\n    } else {\r\n      replacerStack.push([val, k, replace])\r\n    }\r\n  } else {\r\n    parent[k] = replace\r\n    arr.push([parent, k, val])\r\n  }\r\n}\r\n\r\nfunction decirc (val, k, edgeIndex, stack, parent, depth, options) {\r\n  depth += 1\r\n  var i\r\n  if (typeof val === 'object' && val !== null) {\r\n    for (i = 0; i < stack.length; i++) {\r\n      if (stack[i] === val) {\r\n        setReplace(CIRCULAR_REPLACE_NODE, val, k, parent)\r\n        return\r\n      }\r\n    }\r\n\r\n    if (\r\n      typeof options.depthLimit !== 'undefined' &&\r\n      depth > options.depthLimit\r\n    ) {\r\n      setReplace(LIMIT_REPLACE_NODE, val, k, parent)\r\n      return\r\n    }\r\n\r\n    if (\r\n      typeof options.edgesLimit !== 'undefined' &&\r\n      edgeIndex + 1 > options.edgesLimit\r\n    ) {\r\n      setReplace(LIMIT_REPLACE_NODE, val, k, parent)\r\n      return\r\n    }\r\n\r\n    stack.push(val)\r\n    // Optimize for Arrays. Big arrays could kill the performance otherwise!\r\n    if (Array.isArray(val)) {\r\n      for (i = 0; i < val.length; i++) {\r\n        decirc(val[i], i, i, stack, val, depth, options)\r\n      }\r\n    } else {\r\n      var keys = Object.keys(val)\r\n      for (i = 0; i < keys.length; i++) {\r\n        var key = keys[i]\r\n        decirc(val[key], key, i, stack, val, depth, options)\r\n      }\r\n    }\r\n    stack.pop()\r\n  }\r\n}\r\n\r\n// Stable-stringify\r\nfunction compareFunction (a, b) {\r\n  if (a < b) {\r\n    return -1\r\n  }\r\n  if (a > b) {\r\n    return 1\r\n  }\r\n  return 0\r\n}\r\n\r\nfunction deterministicStringify (obj, replacer, spacer, options) {\r\n  if (typeof options === 'undefined') {\r\n    options = defaultOptions()\r\n  }\r\n\r\n  var tmp = deterministicDecirc(obj, '', 0, [], undefined, 0, options) || obj\r\n  var res\r\n  try {\r\n    if (replacerStack.length === 0) {\r\n      res = JSON.stringify(tmp, replacer, spacer)\r\n    } else {\r\n      res = JSON.stringify(tmp, replaceGetterValues(replacer), spacer)\r\n    }\r\n  } catch (_) {\r\n    return JSON.stringify('[unable to serialize, circular reference is too complex to analyze]')\r\n  } finally {\r\n    // Ensure that we restore the object as it was.\r\n    while (arr.length !== 0) {\r\n      var part = arr.pop()\r\n      if (part.length === 4) {\r\n        Object.defineProperty(part[0], part[1], part[3])\r\n      } else {\r\n        part[0][part[1]] = part[2]\r\n      }\r\n    }\r\n  }\r\n  return res\r\n}\r\n\r\nfunction deterministicDecirc (val, k, edgeIndex, stack, parent, depth, options) {\r\n  depth += 1\r\n  var i\r\n  if (typeof val === 'object' && val !== null) {\r\n    for (i = 0; i < stack.length; i++) {\r\n      if (stack[i] === val) {\r\n        setReplace(CIRCULAR_REPLACE_NODE, val, k, parent)\r\n        return\r\n      }\r\n    }\r\n    try {\r\n      if (typeof val.toJSON === 'function') {\r\n        return\r\n      }\r\n    } catch (_) {\r\n      return\r\n    }\r\n\r\n    if (\r\n      typeof options.depthLimit !== 'undefined' &&\r\n      depth > options.depthLimit\r\n    ) {\r\n      setReplace(LIMIT_REPLACE_NODE, val, k, parent)\r\n      return\r\n    }\r\n\r\n    if (\r\n      typeof options.edgesLimit !== 'undefined' &&\r\n      edgeIndex + 1 > options.edgesLimit\r\n    ) {\r\n      setReplace(LIMIT_REPLACE_NODE, val, k, parent)\r\n      return\r\n    }\r\n\r\n    stack.push(val)\r\n    // Optimize for Arrays. Big arrays could kill the performance otherwise!\r\n    if (Array.isArray(val)) {\r\n      for (i = 0; i < val.length; i++) {\r\n        deterministicDecirc(val[i], i, i, stack, val, depth, options)\r\n      }\r\n    } else {\r\n      // Create a temporary object in the required way\r\n      var tmp = {}\r\n      var keys = Object.keys(val).sort(compareFunction)\r\n      for (i = 0; i < keys.length; i++) {\r\n        var key = keys[i]\r\n        deterministicDecirc(val[key], key, i, stack, val, depth, options)\r\n        tmp[key] = val[key]\r\n      }\r\n      if (typeof parent !== 'undefined') {\r\n        arr.push([parent, k, val])\r\n        parent[k] = tmp\r\n      } else {\r\n        return tmp\r\n      }\r\n    }\r\n    stack.pop()\r\n  }\r\n}\r\n\r\n// wraps replacer function to handle values we couldn't replace\r\n// and mark them as replaced value\r\nfunction replaceGetterValues (replacer) {\r\n  replacer =\r\n    typeof replacer !== 'undefined'\r\n      ? replacer\r\n      : function (k, v) {\r\n        return v\r\n      }\r\n  return function (key, val) {\r\n    if (replacerStack.length > 0) {\r\n      for (var i = 0; i < replacerStack.length; i++) {\r\n        var part = replacerStack[i]\r\n        if (part[1] === key && part[0] === val) {\r\n          val = part[2]\r\n          replacerStack.splice(i, 1)\r\n          break\r\n        }\r\n      }\r\n    }\r\n    return replacer.call(this, key, val)\r\n  }\r\n}\r\n"],
  "mappings": "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",
  "names": []
}
