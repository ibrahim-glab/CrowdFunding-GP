{
  "version": 3,
  "sources": ["../../@thirdweb-dev/wallets/evm/connectors/trust/dist/thirdweb-dev-wallets-evm-connectors-trust.browser.esm.js"],
  "sourcesContent": ["import { InjectedConnector } from '../../injected/dist/thirdweb-dev-wallets-evm-connectors-injected.browser.esm.js';\r\nimport { a as assertWindowEthereum } from '../../../../dist/assertWindowEthereum-88295886.browser.esm.js';\r\nimport '../../../../dist/defineProperty-d7c057bf.browser.esm.js';\r\nimport '../../../../dist/classPrivateFieldSet-a5db7c83.browser.esm.js';\r\nimport '../../../../dist/WagmiConnector-2f14002d.browser.esm.js';\r\nimport '@thirdweb-dev/chains';\r\nimport 'eventemitter3';\r\nimport '../../../../dist/errors-9f6736cb.browser.esm.js';\r\nimport '../../../../dist/url-a45219bd.browser.esm.js';\r\nimport 'ethers';\r\nimport '../../../../dist/normalizeChainId-1fb9aedf.browser.esm.js';\r\n\r\nclass TrustConnector extends InjectedConnector {\r\n  constructor(arg) {\r\n    const defaultOptions = {\r\n      name: \"Trust\",\r\n      getProvider() {\r\n        function getReady(ethereum) {\r\n          const isTrust = !!ethereum?.isTrust;\r\n          if (!isTrust) {\r\n            return;\r\n          }\r\n          return ethereum;\r\n        }\r\n        if (assertWindowEthereum(globalThis.window)) {\r\n          if (globalThis.window.ethereum?.providers) {\r\n            return globalThis.window.ethereum.providers.find(getReady);\r\n          }\r\n          return getReady(globalThis.window.ethereum);\r\n        }\r\n      }\r\n    };\r\n    const options = {\r\n      ...defaultOptions,\r\n      ...arg.options\r\n    };\r\n    super({\r\n      chains: arg.chains,\r\n      options,\r\n      connectorStorage: arg.connectorStorage\r\n    });\r\n  }\r\n}\r\n\r\nexport { TrustConnector };\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AASA;AAGA,IAAM,iBAAN,cAA6B,kBAAkB;AAAA,EAC7C,YAAY,KAAK;AACf,UAAM,iBAAiB;AAAA,MACrB,MAAM;AAAA,MACN,cAAc;AAhBpB;AAiBQ,iBAAS,SAAS,UAAU;AAC1B,gBAAM,UAAU,CAAC,EAAC,qCAAU;AAC5B,cAAI,CAAC,SAAS;AACZ;AAAA,UACF;AACA,iBAAO;AAAA,QACT;AACA,YAAI,qBAAqB,WAAW,MAAM,GAAG;AAC3C,eAAI,gBAAW,OAAO,aAAlB,mBAA4B,WAAW;AACzC,mBAAO,WAAW,OAAO,SAAS,UAAU,KAAK,QAAQ;AAAA,UAC3D;AACA,iBAAO,SAAS,WAAW,OAAO,QAAQ;AAAA,QAC5C;AAAA,MACF;AAAA,IACF;AACA,UAAM,UAAU;AAAA,MACd,GAAG;AAAA,MACH,GAAG,IAAI;AAAA,IACT;AACA,UAAM;AAAA,MACJ,QAAQ,IAAI;AAAA,MACZ;AAAA,MACA,kBAAkB,IAAI;AAAA,IACxB,CAAC;AAAA,EACH;AACF;",
  "names": []
}
