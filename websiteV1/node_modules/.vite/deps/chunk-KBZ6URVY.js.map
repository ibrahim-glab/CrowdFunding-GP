{
  "version": 3,
  "sources": ["../../@thirdweb-dev/react/dist/magicLink-e4040478.browser.esm.js"],
  "sourcesContent": ["import { MagicLink } from '@thirdweb-dev/wallets';\r\nimport { useWalletContext } from '@thirdweb-dev/react-core';\r\nimport { useRef, useEffect, useCallback } from 'react';\r\nimport { C as Container, d as Spinner, b as useTWLocale, M as ModalHeader, S as Spacer, q as useScreenContext, D as reservedScreens, I as Img, i as iconSize, p as TextDivider, B as Button, u as useCustomTheme, s as spacing, g as fontSize, z as IconButton } from './formElements-9484d253.browser.esm.js';\r\nimport { b as emailAndPhoneIcon, e as emailIcon, p as phoneIcon, T as ToolTip, I as InputSelectionUI, g as googleIconUri, f as facebookIconUri, t as twitterIconUri, c as githubIconUri, a as appleIconUri, l as linkedinIconUri, d as bitbucketIconUri, h as gitlabIconUri, i as twitchIconUri, j as discordIconUri, m as microsoftIconUri } from './Tooltip-633e9bd5.browser.esm.js';\r\nimport styled from '@emotion/styled';\r\nimport { jsx, jsxs, Fragment } from 'react/jsx-runtime';\r\nimport '@radix-ui/react-icons';\r\nimport '@emotion/react';\r\nimport '@radix-ui/colors';\r\nimport '@radix-ui/react-tooltip';\r\n\r\n/**\r\n * A wallet configurator for [Magic Link](https://magic.link/) which allows integrating the wallet with React.\r\n *\r\n * It returns a [`WalletConfig`](https://portal.thirdweb.com/references/react/v4/WalletConfig) object which can be used to connect the wallet to via [`ConnectWallet`](https://portal.thirdweb.com/react/v4/components/ConnectWallet) component or [`useConnect`](https://portal.thirdweb.com/references/react/v4/useConnect) hook as mentioned in [Connecting Wallets](https://portal.thirdweb.com/react/v4/connecting-wallets) guide\r\n *\r\n * @example\r\n * ```ts\r\n * magicLink({\r\n *   apiKey: \"pk_test_123\",\r\n *   emailLogin: true,\r\n *   smsLogin: true,\r\n *   oauthOptions: {\r\n *     providers: [\"google\", \"facebook\"],\r\n *     redirectURI: \"https://example.com/foo/bar\",\r\n *   },\r\n *   type: \"auth\", // or 'connect'\r\n * });\r\n * ```\r\n *\r\n * @param config -\r\n * Object containing the following properties to configure the wallet\r\n *\r\n * ### apiKey\r\n * Your Magic Link apiKey\r\n *\r\n * You can get an API key by signing up for an account on [Magic Link's website](https://magic.link/).\r\n *\r\n * Must be a `string`\r\n *\r\n * ### magicSdkConfiguration (optional)\r\n * Configuration for [Magic Auth](https://magic.link/docs/auth/overview) SDK\r\n *\r\n * This is only relevant if you are using `type: 'auth'` in your config\r\n *\r\n * ```ts\r\n * {\r\n *   locale?: string;\r\n *   endpoint?: string;\r\n *   testMode?: boolean;\r\n * }\r\n * ```\r\n *\r\n * * `locale` - Customize the language of Magic's modal, email and confirmation screen. See [Localization](https://magic.link/docs/auth/more/customization/localization) for more.\r\n *\r\n * * `endpoint` - A URL pointing to the Magic iframe application\r\n *\r\n * * `testMode` - Enable [testMode](https://magic.link/docs/auth/introduction/test-mode) to assert the desired behavior through the email address you provide to `loginWithMagicLink` without having to go through the auth flow.\r\n *\r\n * ### smsLogin (optional)\r\n * Specify whether you want to allow users to login with their phone number or not. It is `true` by default\r\n *\r\n * This is only relevant if you are using `type: 'auth'`\r\n *\r\n * Must be a `boolean`\r\n *\r\n * ### emailLogin (optional)\r\n * Specify whether you want to allow users to login with their email or not. It is `true` by default\r\n *\r\n * This is only relevant if you are using `type: 'auth'`\r\n *\r\n * Must be a `boolean`\r\n *\r\n * ### oauthOptions (optional)\r\n * Specify which oauth providers you support in `providers` array.\r\n *\r\n * Specify which URI to redirect to after the oauth flow is complete in `redirectURI` option. If no `redirectURI` is specified, the user will be redirected to the current page.\r\n *\r\n * You must pass full URL and not just a relative path. For example, `\"https://example.com/foo\"` is valid but `\"/foo\"` is not.\r\n * You can use `new URL(\"/foo\", window.location.origin).href` to get the full URL from a relative path based on the current origin.\r\n *\r\n * This is only relevant if you are using `type: 'auth'`\r\n *\r\n * You also need to enable the oauth providers for your apiKey from [Magic dashboard](https://dashboard.magic.link/).\r\n *\r\n * ```ts\r\n * type OauthOptions = {\r\n *   redirectURI?: string;\r\n *   providers: OauthProvider[];\r\n * };\r\n *\r\n * type OauthProvider =\r\n *   | \"google\"\r\n *   | \"facebook\"\r\n *   | \"apple\"\r\n *   | \"github\"\r\n *   | \"bitbucket\"\r\n *   | \"gitlab\"\r\n *   | \"linkedin\"\r\n *   | \"twitter\"\r\n *   | \"discord\"\r\n *   | \"twitch\"\r\n *   | \"microsoft\";\r\n * ```\r\n *\r\n * ### recommended (optional)\r\n * Show this wallet as \"recommended\" in the [`ConnectWallet`](https://portal.thirdweb.com/react/v4/components/ConnectWallet) Modal UI\r\n *\r\n * @wallet\r\n */\r\nfunction magicLink(config) {\r\n  const emailLoginEnabled = config.emailLogin !== false;\r\n  const smsLoginEnabled = config.smsLogin !== false;\r\n  const oauthProviders = config.oauthOptions?.providers;\r\n  const type = config.type || \"auth\";\r\n  let icon = emailAndPhoneIcon;\r\n  let iconText = \"Email or phone\";\r\n  if (emailLoginEnabled && !smsLoginEnabled) {\r\n    icon = emailIcon;\r\n    iconText = \"Email\";\r\n  }\r\n  if (!emailLoginEnabled && smsLoginEnabled) {\r\n    icon = phoneIcon;\r\n    iconText = \"Phone number\";\r\n  }\r\n  if (!emailLoginEnabled && !smsLoginEnabled) {\r\n    iconText = \"Social login\";\r\n  }\r\n  return {\r\n    id: MagicLink.id,\r\n    recommended: config?.recommended,\r\n    isHeadless: true,\r\n    meta: {\r\n      ...MagicLink.meta,\r\n      name: iconText,\r\n      iconURL: icon\r\n    },\r\n    create: options => new MagicLink({\r\n      ...options,\r\n      ...config\r\n    }),\r\n    connectUI(props) {\r\n      if (props.modalSize === \"wide\") {\r\n        return /*#__PURE__*/jsx(MagicConnectionUIScreen, {\r\n          ...props,\r\n          type: type,\r\n          emailLogin: emailLoginEnabled,\r\n          smsLogin: smsLoginEnabled,\r\n          oauthProviders: oauthProviders\r\n        });\r\n      }\r\n      if (props.selectionData === undefined) {\r\n        return /*#__PURE__*/jsx(MagicConnectionUIScreen, {\r\n          ...props,\r\n          type: type,\r\n          emailLogin: emailLoginEnabled,\r\n          smsLogin: smsLoginEnabled,\r\n          oauthProviders: oauthProviders\r\n        });\r\n      }\r\n      return /*#__PURE__*/jsx(MagicConnectingUI, {\r\n        ...props,\r\n        type: type\r\n      });\r\n    },\r\n    isInstalled() {\r\n      return false;\r\n    }\r\n  };\r\n}\r\nconst MagicUI = props => {\r\n  const cwLocale = useTWLocale().connectWallet;\r\n  const locale = useTWLocale().wallets.magicLink;\r\n  const isEmailEnabled = props.emailLogin !== false;\r\n  const isSMSEnabled = props.smsLogin !== false;\r\n  let placeholder = locale.loginWithEmailOrPhone;\r\n  let type = \"text\";\r\n  let emptyErrorMessage = locale.emailOrPhoneRequired;\r\n  if (isEmailEnabled && !isSMSEnabled) {\r\n    placeholder = locale.emailPlaceholder;\r\n    emptyErrorMessage = locale.emailRequired;\r\n    type = \"email\";\r\n  } else if (!isEmailEnabled && isSMSEnabled) {\r\n    placeholder = locale.loginWithPhone;\r\n    emptyErrorMessage = locale.phoneRequired;\r\n    type = \"tel\";\r\n  }\r\n  if (!isEmailEnabled && !isSMSEnabled && !props.oauthProviders) {\r\n    throw new Error('MagicLink must have either \"emailLogin\" or \"smsLogin\" or social login enabled');\r\n  }\r\n  const showInputUI = isEmailEnabled || isSMSEnabled;\r\n  const {\r\n    screen\r\n  } = useScreenContext();\r\n  const showSeparator = props.modalSize === \"wide\" || screen !== reservedScreens.main && props.modalSize === \"compact\";\r\n  return /*#__PURE__*/jsxs(Container, {\r\n    flex: \"column\",\r\n    animate: \"fadein\",\r\n    gap: props.modalSize === \"compact\" ? \"lg\" : \"xl\",\r\n    style: {\r\n      width: \"100%\"\r\n    },\r\n    children: [props.oauthProviders && /*#__PURE__*/jsx(Fragment, {\r\n      children: props.oauthProviders.length > 1 ? /*#__PURE__*/jsx(Container, {\r\n        gap: \"md\",\r\n        flex: \"row\",\r\n        style: {\r\n          justifyContent: \"space-between\"\r\n        },\r\n        center: \"x\",\r\n        children: props.oauthProviders.map(provider => {\r\n          return /*#__PURE__*/jsx(SocialIconButton, {\r\n            onClick: () => {\r\n              props.onSelect({\r\n                provider\r\n              });\r\n            },\r\n            children: /*#__PURE__*/jsx(ToolTip, {\r\n              tip: `${locale.loginWith} ${upperCaseFirstLetter(provider)}`,\r\n              sideOffset: 15,\r\n              children: /*#__PURE__*/jsx(Container, {\r\n                flex: \"row\",\r\n                center: \"both\",\r\n                children: /*#__PURE__*/jsx(Img, {\r\n                  src: providerImages[provider],\r\n                  width: iconSize.lg,\r\n                  height: iconSize.lg,\r\n                  alt: \"\"\r\n                })\r\n              })\r\n            })\r\n          }, provider);\r\n        })\r\n      }) : /*#__PURE__*/jsx(Container, {\r\n        gap: \"xs\",\r\n        flex: \"column\",\r\n        children: props.oauthProviders.map(provider => {\r\n          return /*#__PURE__*/jsxs(SocialButtonLarge, {\r\n            variant: \"secondary\",\r\n            onClick: () => {\r\n              props.onSelect({\r\n                provider\r\n              });\r\n            },\r\n            children: [/*#__PURE__*/jsx(Img, {\r\n              src: providerImages[provider],\r\n              width: iconSize.md,\r\n              height: iconSize.md,\r\n              alt: \"\"\r\n            }), /*#__PURE__*/jsxs(\"span\", {\r\n              children: [locale.loginWith, \" \", upperCaseFirstLetter(provider)]\r\n            })]\r\n          }, provider);\r\n        })\r\n      })\r\n    }), showInputUI && /*#__PURE__*/jsxs(Fragment, {\r\n      children: [showSeparator && /*#__PURE__*/jsx(TextDivider, {\r\n        text: cwLocale.or\r\n      }), /*#__PURE__*/jsx(InputSelectionUI, {\r\n        submitButtonText: locale.submitEmail,\r\n        onSelect: props.onSelect,\r\n        placeholder: placeholder,\r\n        name: \"magic-input\",\r\n        type: type,\r\n        emptyErrorMessage: emptyErrorMessage,\r\n        errorMessage: _input => {\r\n          const input = _input.toLowerCase();\r\n          const isEmail = input.includes(\"@\");\r\n          const isPhone = Number.isInteger(Number(input[input.length - 1]));\r\n          if (isEmail && isEmailEnabled) {\r\n            const emailRegex = /^([a-z0-9_\\.-]+)@([\\da-z\\.-]+)\\.([a-z\\.]{2,})$/g;\r\n            const isValidEmail = emailRegex.test(input.replace(/\\+/g, \"\"));\r\n            if (!isValidEmail) {\r\n              return locale.invalidEmail;\r\n            }\r\n          } else if (isPhone && isSMSEnabled) {\r\n            if (!input.startsWith(\"+\")) {\r\n              return locale.countryCodeMissing;\r\n            }\r\n          } else {\r\n            if (isEmailEnabled && isSMSEnabled) {\r\n              return locale.invalidEmailOrPhone;\r\n            }\r\n            if (isEmailEnabled) {\r\n              return locale.invalidEmail;\r\n            }\r\n            if (isSMSEnabled) {\r\n              return locale.invalidPhone;\r\n            }\r\n          }\r\n        }\r\n      })]\r\n    })]\r\n  });\r\n};\r\nfunction useConnectMagic() {\r\n  const {\r\n    activeChain\r\n  } = useWalletContext();\r\n  const connector = useCallback(async data => {\r\n    const {\r\n      selectionData,\r\n      connected,\r\n      show,\r\n      hide,\r\n      connect\r\n    } = data;\r\n\r\n    // oauth\r\n    if (typeof selectionData === \"object\") {\r\n      try {\r\n        hide();\r\n        (async () => {\r\n          await connect({\r\n            oauthProvider: selectionData.provider,\r\n            chainId: activeChain.chainId\r\n          });\r\n        })();\r\n        connected();\r\n      } catch (e) {\r\n        console.error(e);\r\n      }\r\n      show();\r\n    }\r\n\r\n    // email or phone\r\n    else {\r\n      const isEmail = selectionData ? selectionData.includes(\"@\") : false;\r\n      hide();\r\n      try {\r\n        await connect(data.type === \"connect\" ? {} : isEmail ? {\r\n          email: selectionData,\r\n          chainId: activeChain.chainId\r\n        } : {\r\n          phoneNumber: selectionData,\r\n          chainId: activeChain.chainId\r\n        });\r\n        connected();\r\n      } catch (e) {\r\n        console.error(e);\r\n      }\r\n      show();\r\n    }\r\n  }, [activeChain.chainId]);\r\n  return connector;\r\n}\r\nconst MagicConnectingUI = _ref => {\r\n  let {\r\n    connected,\r\n    walletConfig,\r\n    show,\r\n    selectionData,\r\n    supportedWallets,\r\n    type,\r\n    hide,\r\n    connect\r\n  } = _ref;\r\n  const connectPrompted = useRef(false);\r\n  const singleWallet = supportedWallets.length === 1;\r\n  const connectMagic = useConnectMagic();\r\n  useEffect(() => {\r\n    if (connectPrompted.current) {\r\n      return;\r\n    }\r\n    connectPrompted.current = true;\r\n    connectMagic({\r\n      selectionData: selectionData,\r\n      singleWallet,\r\n      type,\r\n      connect,\r\n      show,\r\n      connected,\r\n      hide\r\n    });\r\n  }, [connectMagic, connected, selectionData, show, singleWallet, type, walletConfig, hide, connect]);\r\n  return /*#__PURE__*/jsx(Container, {\r\n    flex: \"row\",\r\n    center: \"both\",\r\n    style: {\r\n      minHeight: \"350px\"\r\n    },\r\n    children: /*#__PURE__*/jsx(Spinner, {\r\n      size: \"xl\",\r\n      color: \"accentText\"\r\n    })\r\n  });\r\n};\r\nconst MagicConnectionUIScreen = props => {\r\n  const locale = useTWLocale().wallets.magicLink;\r\n  const connectMagic = useConnectMagic();\r\n  return /*#__PURE__*/jsxs(Container, {\r\n    p: \"lg\",\r\n    fullHeight: true,\r\n    flex: \"column\",\r\n    style: {\r\n      minHeight: \"300px\"\r\n    },\r\n    children: [/*#__PURE__*/jsx(ModalHeader, {\r\n      onBack: props.goBack,\r\n      title: locale.signIn\r\n    }), /*#__PURE__*/jsx(Spacer, {\r\n      y: \"xl\"\r\n    }), /*#__PURE__*/jsx(Container, {\r\n      expand: true,\r\n      flex: \"column\",\r\n      center: \"both\",\r\n      px: props.modalSize === \"wide\" ? \"lg\" : undefined,\r\n      children: /*#__PURE__*/jsx(MagicUI, {\r\n        ...props,\r\n        onSelect: data => {\r\n          connectMagic({\r\n            selectionData: data,\r\n            connected: props.connected,\r\n            show: props.show,\r\n            singleWallet: props.supportedWallets.length === 1,\r\n            type: props.type,\r\n            connect: props.connect,\r\n            hide: props.hide\r\n          });\r\n        }\r\n      })\r\n    })]\r\n  });\r\n};\r\nconst providerImages = {\r\n  google: googleIconUri,\r\n  facebook: facebookIconUri,\r\n  twitter: twitterIconUri,\r\n  github: githubIconUri,\r\n  apple: appleIconUri,\r\n  linkedin: linkedinIconUri,\r\n  bitbucket: bitbucketIconUri,\r\n  gitlab: gitlabIconUri,\r\n  twitch: twitchIconUri,\r\n  discord: discordIconUri,\r\n  microsoft: microsoftIconUri\r\n};\r\nfunction upperCaseFirstLetter(string) {\r\n  return string.charAt(0).toUpperCase() + string.slice(1);\r\n}\r\nconst SocialButtonLarge = /* @__PURE__ */styled(Button)(() => {\r\n  const theme = useCustomTheme();\r\n  return {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    gap: spacing.md,\r\n    fontSize: fontSize.md,\r\n    transition: \"background-color 0.2s ease\",\r\n    \"&:hover\": {\r\n      backgroundColor: theme.colors.secondaryButtonBg\r\n    },\r\n    \"&:active\": {\r\n      boxShadow: \"none\"\r\n    }\r\n  };\r\n});\r\nconst SocialIconButton = /* @__PURE__ */styled(IconButton)(() => {\r\n  const theme = useCustomTheme();\r\n  return {\r\n    border: `1px solid ${theme.colors.borderColor}`,\r\n    padding: spacing.sm,\r\n    transition: \"border-color 0.2s ease\",\r\n    \"&:hover\": {\r\n      borderColor: theme.colors.accentText,\r\n      background: \"transparent\"\r\n    },\r\n    flexGrow: 1\r\n  };\r\n});\r\n\r\nexport { magicLink };\r\n"],
  "mappings": "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",
  "names": []
}
