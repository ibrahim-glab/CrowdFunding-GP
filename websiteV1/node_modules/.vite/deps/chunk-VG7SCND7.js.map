{
  "version": 3,
  "sources": ["../../assert/build/internal/errors.js", "../../assert/build/internal/assert/assertion_error.js", "../../object.assign/implementation.js", "../../object.assign/polyfill.js", "../../object-is/implementation.js", "../../object-is/polyfill.js", "../../define-properties/index.js", "../../object-is/shim.js", "../../object-is/index.js", "../../is-nan/implementation.js", "../../is-nan/polyfill.js", "../../is-nan/shim.js", "../../is-nan/index.js", "../../assert/build/internal/util/comparisons.js", "../../assert/build/assert.js", "../../rlp/src/index.ts", "../../ethereumjs-util/src/externals.ts", "../../ethereumjs-util/src/constants.ts", "../../secp256k1/lib/index.js", "../../secp256k1/lib/elliptic.js", "../../secp256k1/elliptic.js", "../../ethereum-cryptography/src/random.ts", "../../ethereum-cryptography/src/secp256k1.ts", "../../ethereumjs-util/src/internal.ts", "../../ethereumjs-util/src/helpers.ts", "../../ethereumjs-util/src/bytes.ts", "../../ethereum-cryptography/src/hash-utils.ts", "../../ethereum-cryptography/src/keccak.ts", "../../ethereumjs-util/src/hash.ts", "../../ethereumjs-util/src/types.ts", "../../ethereumjs-util/src/account.ts", "../../ethereumjs-util/src/address.ts", "../../ethereumjs-util/src/signature.ts", "../../ethereumjs-util/src/object.ts", "../../ethereumjs-util/src/index.ts", "../../is-hex-prefixed/src/index.js", "../../strip-hex-prefix/src/index.js"],
  "sourcesContent": ["// Currently in sync with Node.js lib/internal/errors.js\n// https://github.com/nodejs/node/commit/3b044962c48fe313905877a96b5d0894a5404f6f\n\n/* eslint node-core/documented-errors: \"error\" */\n/* eslint node-core/alphabetize-errors: \"error\" */\n/* eslint node-core/prefer-util-format-errors: \"error\" */\n\n'use strict';\n\n// The whole point behind this internal module is to allow Node.js to no\n// longer be forced to treat every error message change as a semver-major\n// change. The NodeError classes here all expose a `code` property whose\n// value statically and permanently identifies the error. While the error\n// message may change, the code should not.\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\nvar codes = {};\n\n// Lazy loaded\nvar assert;\nvar util;\nfunction createErrorType(code, message, Base) {\n  if (!Base) {\n    Base = Error;\n  }\n  function getMessage(arg1, arg2, arg3) {\n    if (typeof message === 'string') {\n      return message;\n    } else {\n      return message(arg1, arg2, arg3);\n    }\n  }\n  var NodeError = /*#__PURE__*/function (_Base) {\n    _inherits(NodeError, _Base);\n    var _super = _createSuper(NodeError);\n    function NodeError(arg1, arg2, arg3) {\n      var _this;\n      _classCallCheck(this, NodeError);\n      _this = _super.call(this, getMessage(arg1, arg2, arg3));\n      _this.code = code;\n      return _this;\n    }\n    return _createClass(NodeError);\n  }(Base);\n  codes[code] = NodeError;\n}\n\n// https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js\nfunction oneOf(expected, thing) {\n  if (Array.isArray(expected)) {\n    var len = expected.length;\n    expected = expected.map(function (i) {\n      return String(i);\n    });\n    if (len > 2) {\n      return \"one of \".concat(thing, \" \").concat(expected.slice(0, len - 1).join(', '), \", or \") + expected[len - 1];\n    } else if (len === 2) {\n      return \"one of \".concat(thing, \" \").concat(expected[0], \" or \").concat(expected[1]);\n    } else {\n      return \"of \".concat(thing, \" \").concat(expected[0]);\n    }\n  } else {\n    return \"of \".concat(thing, \" \").concat(String(expected));\n  }\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith\nfunction startsWith(str, search, pos) {\n  return str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\nfunction endsWith(str, search, this_len) {\n  if (this_len === undefined || this_len > str.length) {\n    this_len = str.length;\n  }\n  return str.substring(this_len - search.length, this_len) === search;\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes\nfunction includes(str, search, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n  if (start + search.length > str.length) {\n    return false;\n  } else {\n    return str.indexOf(search, start) !== -1;\n  }\n}\ncreateErrorType('ERR_AMBIGUOUS_ARGUMENT', 'The \"%s\" argument is ambiguous. %s', TypeError);\ncreateErrorType('ERR_INVALID_ARG_TYPE', function (name, expected, actual) {\n  if (assert === undefined) assert = require('../assert');\n  assert(typeof name === 'string', \"'name' must be a string\");\n\n  // determiner: 'must be' or 'must not be'\n  var determiner;\n  if (typeof expected === 'string' && startsWith(expected, 'not ')) {\n    determiner = 'must not be';\n    expected = expected.replace(/^not /, '');\n  } else {\n    determiner = 'must be';\n  }\n  var msg;\n  if (endsWith(name, ' argument')) {\n    // For cases like 'first argument'\n    msg = \"The \".concat(name, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  } else {\n    var type = includes(name, '.') ? 'property' : 'argument';\n    msg = \"The \\\"\".concat(name, \"\\\" \").concat(type, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  }\n\n  // TODO(BridgeAR): Improve the output by showing `null` and similar.\n  msg += \". Received type \".concat(_typeof(actual));\n  return msg;\n}, TypeError);\ncreateErrorType('ERR_INVALID_ARG_VALUE', function (name, value) {\n  var reason = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'is invalid';\n  if (util === undefined) util = require('util/');\n  var inspected = util.inspect(value);\n  if (inspected.length > 128) {\n    inspected = \"\".concat(inspected.slice(0, 128), \"...\");\n  }\n  return \"The argument '\".concat(name, \"' \").concat(reason, \". Received \").concat(inspected);\n}, TypeError, RangeError);\ncreateErrorType('ERR_INVALID_RETURN_VALUE', function (input, name, value) {\n  var type;\n  if (value && value.constructor && value.constructor.name) {\n    type = \"instance of \".concat(value.constructor.name);\n  } else {\n    type = \"type \".concat(_typeof(value));\n  }\n  return \"Expected \".concat(input, \" to be returned from the \\\"\").concat(name, \"\\\"\") + \" function but got \".concat(type, \".\");\n}, TypeError);\ncreateErrorType('ERR_MISSING_ARGS', function () {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n  if (assert === undefined) assert = require('../assert');\n  assert(args.length > 0, 'At least one arg needs to be specified');\n  var msg = 'The ';\n  var len = args.length;\n  args = args.map(function (a) {\n    return \"\\\"\".concat(a, \"\\\"\");\n  });\n  switch (len) {\n    case 1:\n      msg += \"\".concat(args[0], \" argument\");\n      break;\n    case 2:\n      msg += \"\".concat(args[0], \" and \").concat(args[1], \" arguments\");\n      break;\n    default:\n      msg += args.slice(0, len - 1).join(', ');\n      msg += \", and \".concat(args[len - 1], \" arguments\");\n      break;\n  }\n  return \"\".concat(msg, \" must be specified\");\n}, TypeError);\nmodule.exports.codes = codes;", "// Currently in sync with Node.js lib/internal/assert/assertion_error.js\n// https://github.com/nodejs/node/commit/0817840f775032169ddd70c85ac059f18ffcc81c\n\n'use strict';\n\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _wrapNativeSuper(Class) { var _cache = typeof Map === \"function\" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== \"function\") { throw new TypeError(\"Super expression must either be null or a function\"); } if (typeof _cache !== \"undefined\") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\nfunction _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct.bind(); } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _isNativeFunction(fn) { return Function.toString.call(fn).indexOf(\"[native code]\") !== -1; }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nvar _require = require('util/'),\n  inspect = _require.inspect;\nvar _require2 = require('../errors'),\n  ERR_INVALID_ARG_TYPE = _require2.codes.ERR_INVALID_ARG_TYPE;\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\nfunction endsWith(str, search, this_len) {\n  if (this_len === undefined || this_len > str.length) {\n    this_len = str.length;\n  }\n  return str.substring(this_len - search.length, this_len) === search;\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/repeat\nfunction repeat(str, count) {\n  count = Math.floor(count);\n  if (str.length == 0 || count == 0) return '';\n  var maxCount = str.length * count;\n  count = Math.floor(Math.log(count) / Math.log(2));\n  while (count) {\n    str += str;\n    count--;\n  }\n  str += str.substring(0, maxCount - str.length);\n  return str;\n}\nvar blue = '';\nvar green = '';\nvar red = '';\nvar white = '';\nvar kReadableOperator = {\n  deepStrictEqual: 'Expected values to be strictly deep-equal:',\n  strictEqual: 'Expected values to be strictly equal:',\n  strictEqualObject: 'Expected \"actual\" to be reference-equal to \"expected\":',\n  deepEqual: 'Expected values to be loosely deep-equal:',\n  equal: 'Expected values to be loosely equal:',\n  notDeepStrictEqual: 'Expected \"actual\" not to be strictly deep-equal to:',\n  notStrictEqual: 'Expected \"actual\" to be strictly unequal to:',\n  notStrictEqualObject: 'Expected \"actual\" not to be reference-equal to \"expected\":',\n  notDeepEqual: 'Expected \"actual\" not to be loosely deep-equal to:',\n  notEqual: 'Expected \"actual\" to be loosely unequal to:',\n  notIdentical: 'Values identical but not reference-equal:'\n};\n\n// Comparing short primitives should just show === / !== instead of using the\n// diff.\nvar kMaxShortLength = 10;\nfunction copyError(source) {\n  var keys = Object.keys(source);\n  var target = Object.create(Object.getPrototypeOf(source));\n  keys.forEach(function (key) {\n    target[key] = source[key];\n  });\n  Object.defineProperty(target, 'message', {\n    value: source.message\n  });\n  return target;\n}\nfunction inspectValue(val) {\n  // The util.inspect default values could be changed. This makes sure the\n  // error messages contain the necessary information nevertheless.\n  return inspect(val, {\n    compact: false,\n    customInspect: false,\n    depth: 1000,\n    maxArrayLength: Infinity,\n    // Assert compares only enumerable properties (with a few exceptions).\n    showHidden: false,\n    // Having a long line as error is better than wrapping the line for\n    // comparison for now.\n    // TODO(BridgeAR): `breakLength` should be limited as soon as soon as we\n    // have meta information about the inspected properties (i.e., know where\n    // in what line the property starts and ends).\n    breakLength: Infinity,\n    // Assert does not detect proxies currently.\n    showProxy: false,\n    sorted: true,\n    // Inspect getters as we also check them when comparing entries.\n    getters: true\n  });\n}\nfunction createErrDiff(actual, expected, operator) {\n  var other = '';\n  var res = '';\n  var lastPos = 0;\n  var end = '';\n  var skipped = false;\n  var actualInspected = inspectValue(actual);\n  var actualLines = actualInspected.split('\\n');\n  var expectedLines = inspectValue(expected).split('\\n');\n  var i = 0;\n  var indicator = '';\n\n  // In case both values are objects explicitly mark them as not reference equal\n  // for the `strictEqual` operator.\n  if (operator === 'strictEqual' && _typeof(actual) === 'object' && _typeof(expected) === 'object' && actual !== null && expected !== null) {\n    operator = 'strictEqualObject';\n  }\n\n  // If \"actual\" and \"expected\" fit on a single line and they are not strictly\n  // equal, check further special handling.\n  if (actualLines.length === 1 && expectedLines.length === 1 && actualLines[0] !== expectedLines[0]) {\n    var inputLength = actualLines[0].length + expectedLines[0].length;\n    // If the character length of \"actual\" and \"expected\" together is less than\n    // kMaxShortLength and if neither is an object and at least one of them is\n    // not `zero`, use the strict equal comparison to visualize the output.\n    if (inputLength <= kMaxShortLength) {\n      if ((_typeof(actual) !== 'object' || actual === null) && (_typeof(expected) !== 'object' || expected === null) && (actual !== 0 || expected !== 0)) {\n        // -0 === +0\n        return \"\".concat(kReadableOperator[operator], \"\\n\\n\") + \"\".concat(actualLines[0], \" !== \").concat(expectedLines[0], \"\\n\");\n      }\n    } else if (operator !== 'strictEqualObject') {\n      // If the stderr is a tty and the input length is lower than the current\n      // columns per line, add a mismatch indicator below the output. If it is\n      // not a tty, use a default value of 80 characters.\n      var maxLength = process.stderr && process.stderr.isTTY ? process.stderr.columns : 80;\n      if (inputLength < maxLength) {\n        while (actualLines[0][i] === expectedLines[0][i]) {\n          i++;\n        }\n        // Ignore the first characters.\n        if (i > 2) {\n          // Add position indicator for the first mismatch in case it is a\n          // single line and the input length is less than the column length.\n          indicator = \"\\n  \".concat(repeat(' ', i), \"^\");\n          i = 0;\n        }\n      }\n    }\n  }\n\n  // Remove all ending lines that match (this optimizes the output for\n  // readability by reducing the number of total changed lines).\n  var a = actualLines[actualLines.length - 1];\n  var b = expectedLines[expectedLines.length - 1];\n  while (a === b) {\n    if (i++ < 2) {\n      end = \"\\n  \".concat(a).concat(end);\n    } else {\n      other = a;\n    }\n    actualLines.pop();\n    expectedLines.pop();\n    if (actualLines.length === 0 || expectedLines.length === 0) break;\n    a = actualLines[actualLines.length - 1];\n    b = expectedLines[expectedLines.length - 1];\n  }\n  var maxLines = Math.max(actualLines.length, expectedLines.length);\n  // Strict equal with identical objects that are not identical by reference.\n  // E.g., assert.deepStrictEqual({ a: Symbol() }, { a: Symbol() })\n  if (maxLines === 0) {\n    // We have to get the result again. The lines were all removed before.\n    var _actualLines = actualInspected.split('\\n');\n\n    // Only remove lines in case it makes sense to collapse those.\n    // TODO: Accept env to always show the full error.\n    if (_actualLines.length > 30) {\n      _actualLines[26] = \"\".concat(blue, \"...\").concat(white);\n      while (_actualLines.length > 27) {\n        _actualLines.pop();\n      }\n    }\n    return \"\".concat(kReadableOperator.notIdentical, \"\\n\\n\").concat(_actualLines.join('\\n'), \"\\n\");\n  }\n  if (i > 3) {\n    end = \"\\n\".concat(blue, \"...\").concat(white).concat(end);\n    skipped = true;\n  }\n  if (other !== '') {\n    end = \"\\n  \".concat(other).concat(end);\n    other = '';\n  }\n  var printedLines = 0;\n  var msg = kReadableOperator[operator] + \"\\n\".concat(green, \"+ actual\").concat(white, \" \").concat(red, \"- expected\").concat(white);\n  var skippedMsg = \" \".concat(blue, \"...\").concat(white, \" Lines skipped\");\n  for (i = 0; i < maxLines; i++) {\n    // Only extra expected lines exist\n    var cur = i - lastPos;\n    if (actualLines.length < i + 1) {\n      // If the last diverging line is more than one line above and the\n      // current line is at least line three, add some of the former lines and\n      // also add dots to indicate skipped entries.\n      if (cur > 1 && i > 2) {\n        if (cur > 4) {\n          res += \"\\n\".concat(blue, \"...\").concat(white);\n          skipped = true;\n        } else if (cur > 3) {\n          res += \"\\n  \".concat(expectedLines[i - 2]);\n          printedLines++;\n        }\n        res += \"\\n  \".concat(expectedLines[i - 1]);\n        printedLines++;\n      }\n      // Mark the current line as the last diverging one.\n      lastPos = i;\n      // Add the expected line to the cache.\n      other += \"\\n\".concat(red, \"-\").concat(white, \" \").concat(expectedLines[i]);\n      printedLines++;\n      // Only extra actual lines exist\n    } else if (expectedLines.length < i + 1) {\n      // If the last diverging line is more than one line above and the\n      // current line is at least line three, add some of the former lines and\n      // also add dots to indicate skipped entries.\n      if (cur > 1 && i > 2) {\n        if (cur > 4) {\n          res += \"\\n\".concat(blue, \"...\").concat(white);\n          skipped = true;\n        } else if (cur > 3) {\n          res += \"\\n  \".concat(actualLines[i - 2]);\n          printedLines++;\n        }\n        res += \"\\n  \".concat(actualLines[i - 1]);\n        printedLines++;\n      }\n      // Mark the current line as the last diverging one.\n      lastPos = i;\n      // Add the actual line to the result.\n      res += \"\\n\".concat(green, \"+\").concat(white, \" \").concat(actualLines[i]);\n      printedLines++;\n      // Lines diverge\n    } else {\n      var expectedLine = expectedLines[i];\n      var actualLine = actualLines[i];\n      // If the lines diverge, specifically check for lines that only diverge by\n      // a trailing comma. In that case it is actually identical and we should\n      // mark it as such.\n      var divergingLines = actualLine !== expectedLine && (!endsWith(actualLine, ',') || actualLine.slice(0, -1) !== expectedLine);\n      // If the expected line has a trailing comma but is otherwise identical,\n      // add a comma at the end of the actual line. Otherwise the output could\n      // look weird as in:\n      //\n      //   [\n      //     1         // No comma at the end!\n      // +   2\n      //   ]\n      //\n      if (divergingLines && endsWith(expectedLine, ',') && expectedLine.slice(0, -1) === actualLine) {\n        divergingLines = false;\n        actualLine += ',';\n      }\n      if (divergingLines) {\n        // If the last diverging line is more than one line above and the\n        // current line is at least line three, add some of the former lines and\n        // also add dots to indicate skipped entries.\n        if (cur > 1 && i > 2) {\n          if (cur > 4) {\n            res += \"\\n\".concat(blue, \"...\").concat(white);\n            skipped = true;\n          } else if (cur > 3) {\n            res += \"\\n  \".concat(actualLines[i - 2]);\n            printedLines++;\n          }\n          res += \"\\n  \".concat(actualLines[i - 1]);\n          printedLines++;\n        }\n        // Mark the current line as the last diverging one.\n        lastPos = i;\n        // Add the actual line to the result and cache the expected diverging\n        // line so consecutive diverging lines show up as +++--- and not +-+-+-.\n        res += \"\\n\".concat(green, \"+\").concat(white, \" \").concat(actualLine);\n        other += \"\\n\".concat(red, \"-\").concat(white, \" \").concat(expectedLine);\n        printedLines += 2;\n        // Lines are identical\n      } else {\n        // Add all cached information to the result before adding other things\n        // and reset the cache.\n        res += other;\n        other = '';\n        // If the last diverging line is exactly one line above or if it is the\n        // very first line, add the line to the result.\n        if (cur === 1 || i === 0) {\n          res += \"\\n  \".concat(actualLine);\n          printedLines++;\n        }\n      }\n    }\n    // Inspected object to big (Show ~20 rows max)\n    if (printedLines > 20 && i < maxLines - 2) {\n      return \"\".concat(msg).concat(skippedMsg, \"\\n\").concat(res, \"\\n\").concat(blue, \"...\").concat(white).concat(other, \"\\n\") + \"\".concat(blue, \"...\").concat(white);\n    }\n  }\n  return \"\".concat(msg).concat(skipped ? skippedMsg : '', \"\\n\").concat(res).concat(other).concat(end).concat(indicator);\n}\nvar AssertionError = /*#__PURE__*/function (_Error, _inspect$custom) {\n  _inherits(AssertionError, _Error);\n  var _super = _createSuper(AssertionError);\n  function AssertionError(options) {\n    var _this;\n    _classCallCheck(this, AssertionError);\n    if (_typeof(options) !== 'object' || options === null) {\n      throw new ERR_INVALID_ARG_TYPE('options', 'Object', options);\n    }\n    var message = options.message,\n      operator = options.operator,\n      stackStartFn = options.stackStartFn;\n    var actual = options.actual,\n      expected = options.expected;\n    var limit = Error.stackTraceLimit;\n    Error.stackTraceLimit = 0;\n    if (message != null) {\n      _this = _super.call(this, String(message));\n    } else {\n      if (process.stderr && process.stderr.isTTY) {\n        // Reset on each call to make sure we handle dynamically set environment\n        // variables correct.\n        if (process.stderr && process.stderr.getColorDepth && process.stderr.getColorDepth() !== 1) {\n          blue = \"\\x1B[34m\";\n          green = \"\\x1B[32m\";\n          white = \"\\x1B[39m\";\n          red = \"\\x1B[31m\";\n        } else {\n          blue = '';\n          green = '';\n          white = '';\n          red = '';\n        }\n      }\n      // Prevent the error stack from being visible by duplicating the error\n      // in a very close way to the original in case both sides are actually\n      // instances of Error.\n      if (_typeof(actual) === 'object' && actual !== null && _typeof(expected) === 'object' && expected !== null && 'stack' in actual && actual instanceof Error && 'stack' in expected && expected instanceof Error) {\n        actual = copyError(actual);\n        expected = copyError(expected);\n      }\n      if (operator === 'deepStrictEqual' || operator === 'strictEqual') {\n        _this = _super.call(this, createErrDiff(actual, expected, operator));\n      } else if (operator === 'notDeepStrictEqual' || operator === 'notStrictEqual') {\n        // In case the objects are equal but the operator requires unequal, show\n        // the first object and say A equals B\n        var base = kReadableOperator[operator];\n        var res = inspectValue(actual).split('\\n');\n\n        // In case \"actual\" is an object, it should not be reference equal.\n        if (operator === 'notStrictEqual' && _typeof(actual) === 'object' && actual !== null) {\n          base = kReadableOperator.notStrictEqualObject;\n        }\n\n        // Only remove lines in case it makes sense to collapse those.\n        // TODO: Accept env to always show the full error.\n        if (res.length > 30) {\n          res[26] = \"\".concat(blue, \"...\").concat(white);\n          while (res.length > 27) {\n            res.pop();\n          }\n        }\n\n        // Only print a single input.\n        if (res.length === 1) {\n          _this = _super.call(this, \"\".concat(base, \" \").concat(res[0]));\n        } else {\n          _this = _super.call(this, \"\".concat(base, \"\\n\\n\").concat(res.join('\\n'), \"\\n\"));\n        }\n      } else {\n        var _res = inspectValue(actual);\n        var other = '';\n        var knownOperators = kReadableOperator[operator];\n        if (operator === 'notDeepEqual' || operator === 'notEqual') {\n          _res = \"\".concat(kReadableOperator[operator], \"\\n\\n\").concat(_res);\n          if (_res.length > 1024) {\n            _res = \"\".concat(_res.slice(0, 1021), \"...\");\n          }\n        } else {\n          other = \"\".concat(inspectValue(expected));\n          if (_res.length > 512) {\n            _res = \"\".concat(_res.slice(0, 509), \"...\");\n          }\n          if (other.length > 512) {\n            other = \"\".concat(other.slice(0, 509), \"...\");\n          }\n          if (operator === 'deepEqual' || operator === 'equal') {\n            _res = \"\".concat(knownOperators, \"\\n\\n\").concat(_res, \"\\n\\nshould equal\\n\\n\");\n          } else {\n            other = \" \".concat(operator, \" \").concat(other);\n          }\n        }\n        _this = _super.call(this, \"\".concat(_res).concat(other));\n      }\n    }\n    Error.stackTraceLimit = limit;\n    _this.generatedMessage = !message;\n    Object.defineProperty(_assertThisInitialized(_this), 'name', {\n      value: 'AssertionError [ERR_ASSERTION]',\n      enumerable: false,\n      writable: true,\n      configurable: true\n    });\n    _this.code = 'ERR_ASSERTION';\n    _this.actual = actual;\n    _this.expected = expected;\n    _this.operator = operator;\n    if (Error.captureStackTrace) {\n      // eslint-disable-next-line no-restricted-syntax\n      Error.captureStackTrace(_assertThisInitialized(_this), stackStartFn);\n    }\n    // Create error message including the error code in the name.\n    _this.stack;\n    // Reset the name.\n    _this.name = 'AssertionError';\n    return _possibleConstructorReturn(_this);\n  }\n  _createClass(AssertionError, [{\n    key: \"toString\",\n    value: function toString() {\n      return \"\".concat(this.name, \" [\").concat(this.code, \"]: \").concat(this.message);\n    }\n  }, {\n    key: _inspect$custom,\n    value: function value(recurseTimes, ctx) {\n      // This limits the `actual` and `expected` property default inspection to\n      // the minimum depth. Otherwise those values would be too verbose compared\n      // to the actual error message which contains a combined view of these two\n      // input values.\n      return inspect(this, _objectSpread(_objectSpread({}, ctx), {}, {\n        customInspect: false,\n        depth: 0\n      }));\n    }\n  }]);\n  return AssertionError;\n}( /*#__PURE__*/_wrapNativeSuper(Error), inspect.custom);\nmodule.exports = AssertionError;", "'use strict';\n\n// modified from https://github.com/es-shims/es6-shim\nvar objectKeys = require('object-keys');\nvar hasSymbols = require('has-symbols/shams')();\nvar callBound = require('call-bind/callBound');\nvar toObject = Object;\nvar $push = callBound('Array.prototype.push');\nvar $propIsEnumerable = callBound('Object.prototype.propertyIsEnumerable');\nvar originalGetSymbols = hasSymbols ? Object.getOwnPropertySymbols : null;\n\n// eslint-disable-next-line no-unused-vars\nmodule.exports = function assign(target, source1) {\n\tif (target == null) { throw new TypeError('target must be an object'); }\n\tvar to = toObject(target); // step 1\n\tif (arguments.length === 1) {\n\t\treturn to; // step 2\n\t}\n\tfor (var s = 1; s < arguments.length; ++s) {\n\t\tvar from = toObject(arguments[s]); // step 3.a.i\n\n\t\t// step 3.a.ii:\n\t\tvar keys = objectKeys(from);\n\t\tvar getSymbols = hasSymbols && (Object.getOwnPropertySymbols || originalGetSymbols);\n\t\tif (getSymbols) {\n\t\t\tvar syms = getSymbols(from);\n\t\t\tfor (var j = 0; j < syms.length; ++j) {\n\t\t\t\tvar key = syms[j];\n\t\t\t\tif ($propIsEnumerable(from, key)) {\n\t\t\t\t\t$push(keys, key);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// step 3.a.iii:\n\t\tfor (var i = 0; i < keys.length; ++i) {\n\t\t\tvar nextKey = keys[i];\n\t\t\tif ($propIsEnumerable(from, nextKey)) { // step 3.a.iii.2\n\t\t\t\tvar propValue = from[nextKey]; // step 3.a.iii.2.a\n\t\t\t\tto[nextKey] = propValue; // step 3.a.iii.2.b\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to; // step 4\n};\n", "'use strict';\n\nvar implementation = require('./implementation');\n\nvar lacksProperEnumerationOrder = function () {\n\tif (!Object.assign) {\n\t\treturn false;\n\t}\n\t/*\n\t * v8, specifically in node 4.x, has a bug with incorrect property enumeration order\n\t * note: this does not detect the bug unless there's 20 characters\n\t */\n\tvar str = 'abcdefghijklmnopqrst';\n\tvar letters = str.split('');\n\tvar map = {};\n\tfor (var i = 0; i < letters.length; ++i) {\n\t\tmap[letters[i]] = letters[i];\n\t}\n\tvar obj = Object.assign({}, map);\n\tvar actual = '';\n\tfor (var k in obj) {\n\t\tactual += k;\n\t}\n\treturn str !== actual;\n};\n\nvar assignHasPendingExceptions = function () {\n\tif (!Object.assign || !Object.preventExtensions) {\n\t\treturn false;\n\t}\n\t/*\n\t * Firefox 37 still has \"pending exception\" logic in its Object.assign implementation,\n\t * which is 72% slower than our shim, and Firefox 40's native implementation.\n\t */\n\tvar thrower = Object.preventExtensions({ 1: 2 });\n\ttry {\n\t\tObject.assign(thrower, 'xy');\n\t} catch (e) {\n\t\treturn thrower[1] === 'y';\n\t}\n\treturn false;\n};\n\nmodule.exports = function getPolyfill() {\n\tif (!Object.assign) {\n\t\treturn implementation;\n\t}\n\tif (lacksProperEnumerationOrder()) {\n\t\treturn implementation;\n\t}\n\tif (assignHasPendingExceptions()) {\n\t\treturn implementation;\n\t}\n\treturn Object.assign;\n};\n", "'use strict';\n\nvar numberIsNaN = function (value) {\n\treturn value !== value;\n};\n\nmodule.exports = function is(a, b) {\n\tif (a === 0 && b === 0) {\n\t\treturn 1 / a === 1 / b;\n\t}\n\tif (a === b) {\n\t\treturn true;\n\t}\n\tif (numberIsNaN(a) && numberIsNaN(b)) {\n\t\treturn true;\n\t}\n\treturn false;\n};\n\n", "'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = function getPolyfill() {\n\treturn typeof Object.is === 'function' ? Object.is : implementation;\n};\n", "'use strict';\n\nvar keys = require('object-keys');\nvar hasSymbols = typeof Symbol === 'function' && typeof Symbol('foo') === 'symbol';\n\nvar toStr = Object.prototype.toString;\nvar concat = Array.prototype.concat;\nvar defineDataProperty = require('define-data-property');\n\nvar isFunction = function (fn) {\n\treturn typeof fn === 'function' && toStr.call(fn) === '[object Function]';\n};\n\nvar supportsDescriptors = require('has-property-descriptors')();\n\nvar defineProperty = function (object, name, value, predicate) {\n\tif (name in object) {\n\t\tif (predicate === true) {\n\t\t\tif (object[name] === value) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else if (!isFunction(predicate) || !predicate()) {\n\t\t\treturn;\n\t\t}\n\t}\n\n\tif (supportsDescriptors) {\n\t\tdefineDataProperty(object, name, value, true);\n\t} else {\n\t\tdefineDataProperty(object, name, value);\n\t}\n};\n\nvar defineProperties = function (object, map) {\n\tvar predicates = arguments.length > 2 ? arguments[2] : {};\n\tvar props = keys(map);\n\tif (hasSymbols) {\n\t\tprops = concat.call(props, Object.getOwnPropertySymbols(map));\n\t}\n\tfor (var i = 0; i < props.length; i += 1) {\n\t\tdefineProperty(object, props[i], map[props[i]], predicates[props[i]]);\n\t}\n};\n\ndefineProperties.supportsDescriptors = !!supportsDescriptors;\n\nmodule.exports = defineProperties;\n", "'use strict';\n\nvar getPolyfill = require('./polyfill');\nvar define = require('define-properties');\n\nmodule.exports = function shimObjectIs() {\n\tvar polyfill = getPolyfill();\n\tdefine(Object, { is: polyfill }, {\n\t\tis: function testObjectIs() {\n\t\t\treturn Object.is !== polyfill;\n\t\t}\n\t});\n\treturn polyfill;\n};\n", "'use strict';\n\nvar define = require('define-properties');\nvar callBind = require('call-bind');\n\nvar implementation = require('./implementation');\nvar getPolyfill = require('./polyfill');\nvar shim = require('./shim');\n\nvar polyfill = callBind(getPolyfill(), Object);\n\ndefine(polyfill, {\n\tgetPolyfill: getPolyfill,\n\timplementation: implementation,\n\tshim: shim\n});\n\nmodule.exports = polyfill;\n", "'use strict';\n\n/* http://www.ecma-international.org/ecma-262/6.0/#sec-number.isnan */\n\nmodule.exports = function isNaN(value) {\n\treturn value !== value;\n};\n", "'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = function getPolyfill() {\n\tif (Number.isNaN && Number.isNaN(NaN) && !Number.isNaN('a')) {\n\t\treturn Number.isNaN;\n\t}\n\treturn implementation;\n};\n", "'use strict';\n\nvar define = require('define-properties');\nvar getPolyfill = require('./polyfill');\n\n/* http://www.ecma-international.org/ecma-262/6.0/#sec-number.isnan */\n\nmodule.exports = function shimNumberIsNaN() {\n\tvar polyfill = getPolyfill();\n\tdefine(Number, { isNaN: polyfill }, {\n\t\tisNaN: function testIsNaN() {\n\t\t\treturn Number.isNaN !== polyfill;\n\t\t}\n\t});\n\treturn polyfill;\n};\n", "'use strict';\n\nvar callBind = require('call-bind');\nvar define = require('define-properties');\n\nvar implementation = require('./implementation');\nvar getPolyfill = require('./polyfill');\nvar shim = require('./shim');\n\nvar polyfill = callBind(getPolyfill(), Number);\n\n/* http://www.ecma-international.org/ecma-262/6.0/#sec-number.isnan */\n\ndefine(polyfill, {\n\tgetPolyfill: getPolyfill,\n\timplementation: implementation,\n\tshim: shim\n});\n\nmodule.exports = polyfill;\n", "// Currently in sync with Node.js lib/internal/util/comparisons.js\n// https://github.com/nodejs/node/commit/112cc7c27551254aa2b17098fb774867f05ed0d9\n\n'use strict';\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nvar regexFlagsSupported = /a/g.flags !== undefined;\nvar arrayFromSet = function arrayFromSet(set) {\n  var array = [];\n  set.forEach(function (value) {\n    return array.push(value);\n  });\n  return array;\n};\nvar arrayFromMap = function arrayFromMap(map) {\n  var array = [];\n  map.forEach(function (value, key) {\n    return array.push([key, value]);\n  });\n  return array;\n};\nvar objectIs = Object.is ? Object.is : require('object-is');\nvar objectGetOwnPropertySymbols = Object.getOwnPropertySymbols ? Object.getOwnPropertySymbols : function () {\n  return [];\n};\nvar numberIsNaN = Number.isNaN ? Number.isNaN : require('is-nan');\nfunction uncurryThis(f) {\n  return f.call.bind(f);\n}\nvar hasOwnProperty = uncurryThis(Object.prototype.hasOwnProperty);\nvar propertyIsEnumerable = uncurryThis(Object.prototype.propertyIsEnumerable);\nvar objectToString = uncurryThis(Object.prototype.toString);\nvar _require$types = require('util/').types,\n  isAnyArrayBuffer = _require$types.isAnyArrayBuffer,\n  isArrayBufferView = _require$types.isArrayBufferView,\n  isDate = _require$types.isDate,\n  isMap = _require$types.isMap,\n  isRegExp = _require$types.isRegExp,\n  isSet = _require$types.isSet,\n  isNativeError = _require$types.isNativeError,\n  isBoxedPrimitive = _require$types.isBoxedPrimitive,\n  isNumberObject = _require$types.isNumberObject,\n  isStringObject = _require$types.isStringObject,\n  isBooleanObject = _require$types.isBooleanObject,\n  isBigIntObject = _require$types.isBigIntObject,\n  isSymbolObject = _require$types.isSymbolObject,\n  isFloat32Array = _require$types.isFloat32Array,\n  isFloat64Array = _require$types.isFloat64Array;\nfunction isNonIndex(key) {\n  if (key.length === 0 || key.length > 10) return true;\n  for (var i = 0; i < key.length; i++) {\n    var code = key.charCodeAt(i);\n    if (code < 48 || code > 57) return true;\n  }\n  // The maximum size for an array is 2 ** 32 -1.\n  return key.length === 10 && key >= Math.pow(2, 32);\n}\nfunction getOwnNonIndexProperties(value) {\n  return Object.keys(value).filter(isNonIndex).concat(objectGetOwnPropertySymbols(value).filter(Object.prototype.propertyIsEnumerable.bind(value)));\n}\n\n// Taken from https://github.com/feross/buffer/blob/680e9e5e488f22aac27599a57dc844a6315928dd/index.js\n// original notice:\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\nfunction compare(a, b) {\n  if (a === b) {\n    return 0;\n  }\n  var x = a.length;\n  var y = b.length;\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n  if (x < y) {\n    return -1;\n  }\n  if (y < x) {\n    return 1;\n  }\n  return 0;\n}\nvar ONLY_ENUMERABLE = undefined;\nvar kStrict = true;\nvar kLoose = false;\nvar kNoIterator = 0;\nvar kIsArray = 1;\nvar kIsSet = 2;\nvar kIsMap = 3;\n\n// Check if they have the same source and flags\nfunction areSimilarRegExps(a, b) {\n  return regexFlagsSupported ? a.source === b.source && a.flags === b.flags : RegExp.prototype.toString.call(a) === RegExp.prototype.toString.call(b);\n}\nfunction areSimilarFloatArrays(a, b) {\n  if (a.byteLength !== b.byteLength) {\n    return false;\n  }\n  for (var offset = 0; offset < a.byteLength; offset++) {\n    if (a[offset] !== b[offset]) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction areSimilarTypedArrays(a, b) {\n  if (a.byteLength !== b.byteLength) {\n    return false;\n  }\n  return compare(new Uint8Array(a.buffer, a.byteOffset, a.byteLength), new Uint8Array(b.buffer, b.byteOffset, b.byteLength)) === 0;\n}\nfunction areEqualArrayBuffers(buf1, buf2) {\n  return buf1.byteLength === buf2.byteLength && compare(new Uint8Array(buf1), new Uint8Array(buf2)) === 0;\n}\nfunction isEqualBoxedPrimitive(val1, val2) {\n  if (isNumberObject(val1)) {\n    return isNumberObject(val2) && objectIs(Number.prototype.valueOf.call(val1), Number.prototype.valueOf.call(val2));\n  }\n  if (isStringObject(val1)) {\n    return isStringObject(val2) && String.prototype.valueOf.call(val1) === String.prototype.valueOf.call(val2);\n  }\n  if (isBooleanObject(val1)) {\n    return isBooleanObject(val2) && Boolean.prototype.valueOf.call(val1) === Boolean.prototype.valueOf.call(val2);\n  }\n  if (isBigIntObject(val1)) {\n    return isBigIntObject(val2) && BigInt.prototype.valueOf.call(val1) === BigInt.prototype.valueOf.call(val2);\n  }\n  return isSymbolObject(val2) && Symbol.prototype.valueOf.call(val1) === Symbol.prototype.valueOf.call(val2);\n}\n\n// Notes: Type tags are historical [[Class]] properties that can be set by\n// FunctionTemplate::SetClassName() in C++ or Symbol.toStringTag in JS\n// and retrieved using Object.prototype.toString.call(obj) in JS\n// See https://tc39.github.io/ecma262/#sec-object.prototype.tostring\n// for a list of tags pre-defined in the spec.\n// There are some unspecified tags in the wild too (e.g. typed array tags).\n// Since tags can be altered, they only serve fast failures\n//\n// Typed arrays and buffers are checked by comparing the content in their\n// underlying ArrayBuffer. This optimization requires that it's\n// reasonable to interpret their underlying memory in the same way,\n// which is checked by comparing their type tags.\n// (e.g. a Uint8Array and a Uint16Array with the same memory content\n// could still be different because they will be interpreted differently).\n//\n// For strict comparison, objects should have\n// a) The same built-in type tags\n// b) The same prototypes.\n\nfunction innerDeepEqual(val1, val2, strict, memos) {\n  // All identical values are equivalent, as determined by ===.\n  if (val1 === val2) {\n    if (val1 !== 0) return true;\n    return strict ? objectIs(val1, val2) : true;\n  }\n\n  // Check more closely if val1 and val2 are equal.\n  if (strict) {\n    if (_typeof(val1) !== 'object') {\n      return typeof val1 === 'number' && numberIsNaN(val1) && numberIsNaN(val2);\n    }\n    if (_typeof(val2) !== 'object' || val1 === null || val2 === null) {\n      return false;\n    }\n    if (Object.getPrototypeOf(val1) !== Object.getPrototypeOf(val2)) {\n      return false;\n    }\n  } else {\n    if (val1 === null || _typeof(val1) !== 'object') {\n      if (val2 === null || _typeof(val2) !== 'object') {\n        // eslint-disable-next-line eqeqeq\n        return val1 == val2;\n      }\n      return false;\n    }\n    if (val2 === null || _typeof(val2) !== 'object') {\n      return false;\n    }\n  }\n  var val1Tag = objectToString(val1);\n  var val2Tag = objectToString(val2);\n  if (val1Tag !== val2Tag) {\n    return false;\n  }\n  if (Array.isArray(val1)) {\n    // Check for sparse arrays and general fast path\n    if (val1.length !== val2.length) {\n      return false;\n    }\n    var keys1 = getOwnNonIndexProperties(val1, ONLY_ENUMERABLE);\n    var keys2 = getOwnNonIndexProperties(val2, ONLY_ENUMERABLE);\n    if (keys1.length !== keys2.length) {\n      return false;\n    }\n    return keyCheck(val1, val2, strict, memos, kIsArray, keys1);\n  }\n  // [browserify] This triggers on certain types in IE (Map/Set) so we don't\n  // wan't to early return out of the rest of the checks. However we can check\n  // if the second value is one of these values and the first isn't.\n  if (val1Tag === '[object Object]') {\n    // return keyCheck(val1, val2, strict, memos, kNoIterator);\n    if (!isMap(val1) && isMap(val2) || !isSet(val1) && isSet(val2)) {\n      return false;\n    }\n  }\n  if (isDate(val1)) {\n    if (!isDate(val2) || Date.prototype.getTime.call(val1) !== Date.prototype.getTime.call(val2)) {\n      return false;\n    }\n  } else if (isRegExp(val1)) {\n    if (!isRegExp(val2) || !areSimilarRegExps(val1, val2)) {\n      return false;\n    }\n  } else if (isNativeError(val1) || val1 instanceof Error) {\n    // Do not compare the stack as it might differ even though the error itself\n    // is otherwise identical.\n    if (val1.message !== val2.message || val1.name !== val2.name) {\n      return false;\n    }\n  } else if (isArrayBufferView(val1)) {\n    if (!strict && (isFloat32Array(val1) || isFloat64Array(val1))) {\n      if (!areSimilarFloatArrays(val1, val2)) {\n        return false;\n      }\n    } else if (!areSimilarTypedArrays(val1, val2)) {\n      return false;\n    }\n    // Buffer.compare returns true, so val1.length === val2.length. If they both\n    // only contain numeric keys, we don't need to exam further than checking\n    // the symbols.\n    var _keys = getOwnNonIndexProperties(val1, ONLY_ENUMERABLE);\n    var _keys2 = getOwnNonIndexProperties(val2, ONLY_ENUMERABLE);\n    if (_keys.length !== _keys2.length) {\n      return false;\n    }\n    return keyCheck(val1, val2, strict, memos, kNoIterator, _keys);\n  } else if (isSet(val1)) {\n    if (!isSet(val2) || val1.size !== val2.size) {\n      return false;\n    }\n    return keyCheck(val1, val2, strict, memos, kIsSet);\n  } else if (isMap(val1)) {\n    if (!isMap(val2) || val1.size !== val2.size) {\n      return false;\n    }\n    return keyCheck(val1, val2, strict, memos, kIsMap);\n  } else if (isAnyArrayBuffer(val1)) {\n    if (!areEqualArrayBuffers(val1, val2)) {\n      return false;\n    }\n  } else if (isBoxedPrimitive(val1) && !isEqualBoxedPrimitive(val1, val2)) {\n    return false;\n  }\n  return keyCheck(val1, val2, strict, memos, kNoIterator);\n}\nfunction getEnumerables(val, keys) {\n  return keys.filter(function (k) {\n    return propertyIsEnumerable(val, k);\n  });\n}\nfunction keyCheck(val1, val2, strict, memos, iterationType, aKeys) {\n  // For all remaining Object pairs, including Array, objects and Maps,\n  // equivalence is determined by having:\n  // a) The same number of owned enumerable properties\n  // b) The same set of keys/indexes (although not necessarily the same order)\n  // c) Equivalent values for every corresponding key/index\n  // d) For Sets and Maps, equal contents\n  // Note: this accounts for both named and indexed properties on Arrays.\n  if (arguments.length === 5) {\n    aKeys = Object.keys(val1);\n    var bKeys = Object.keys(val2);\n\n    // The pair must have the same number of owned properties.\n    if (aKeys.length !== bKeys.length) {\n      return false;\n    }\n  }\n\n  // Cheap key test\n  var i = 0;\n  for (; i < aKeys.length; i++) {\n    if (!hasOwnProperty(val2, aKeys[i])) {\n      return false;\n    }\n  }\n  if (strict && arguments.length === 5) {\n    var symbolKeysA = objectGetOwnPropertySymbols(val1);\n    if (symbolKeysA.length !== 0) {\n      var count = 0;\n      for (i = 0; i < symbolKeysA.length; i++) {\n        var key = symbolKeysA[i];\n        if (propertyIsEnumerable(val1, key)) {\n          if (!propertyIsEnumerable(val2, key)) {\n            return false;\n          }\n          aKeys.push(key);\n          count++;\n        } else if (propertyIsEnumerable(val2, key)) {\n          return false;\n        }\n      }\n      var symbolKeysB = objectGetOwnPropertySymbols(val2);\n      if (symbolKeysA.length !== symbolKeysB.length && getEnumerables(val2, symbolKeysB).length !== count) {\n        return false;\n      }\n    } else {\n      var _symbolKeysB = objectGetOwnPropertySymbols(val2);\n      if (_symbolKeysB.length !== 0 && getEnumerables(val2, _symbolKeysB).length !== 0) {\n        return false;\n      }\n    }\n  }\n  if (aKeys.length === 0 && (iterationType === kNoIterator || iterationType === kIsArray && val1.length === 0 || val1.size === 0)) {\n    return true;\n  }\n\n  // Use memos to handle cycles.\n  if (memos === undefined) {\n    memos = {\n      val1: new Map(),\n      val2: new Map(),\n      position: 0\n    };\n  } else {\n    // We prevent up to two map.has(x) calls by directly retrieving the value\n    // and checking for undefined. The map can only contain numbers, so it is\n    // safe to check for undefined only.\n    var val2MemoA = memos.val1.get(val1);\n    if (val2MemoA !== undefined) {\n      var val2MemoB = memos.val2.get(val2);\n      if (val2MemoB !== undefined) {\n        return val2MemoA === val2MemoB;\n      }\n    }\n    memos.position++;\n  }\n  memos.val1.set(val1, memos.position);\n  memos.val2.set(val2, memos.position);\n  var areEq = objEquiv(val1, val2, strict, aKeys, memos, iterationType);\n  memos.val1.delete(val1);\n  memos.val2.delete(val2);\n  return areEq;\n}\nfunction setHasEqualElement(set, val1, strict, memo) {\n  // Go looking.\n  var setValues = arrayFromSet(set);\n  for (var i = 0; i < setValues.length; i++) {\n    var val2 = setValues[i];\n    if (innerDeepEqual(val1, val2, strict, memo)) {\n      // Remove the matching element to make sure we do not check that again.\n      set.delete(val2);\n      return true;\n    }\n  }\n  return false;\n}\n\n// See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Equality_comparisons_and_sameness#Loose_equality_using\n// Sadly it is not possible to detect corresponding values properly in case the\n// type is a string, number, bigint or boolean. The reason is that those values\n// can match lots of different string values (e.g., 1n == '+00001').\nfunction findLooseMatchingPrimitives(prim) {\n  switch (_typeof(prim)) {\n    case 'undefined':\n      return null;\n    case 'object':\n      // Only pass in null as object!\n      return undefined;\n    case 'symbol':\n      return false;\n    case 'string':\n      prim = +prim;\n    // Loose equal entries exist only if the string is possible to convert to\n    // a regular number and not NaN.\n    // Fall through\n    case 'number':\n      if (numberIsNaN(prim)) {\n        return false;\n      }\n  }\n  return true;\n}\nfunction setMightHaveLoosePrim(a, b, prim) {\n  var altValue = findLooseMatchingPrimitives(prim);\n  if (altValue != null) return altValue;\n  return b.has(altValue) && !a.has(altValue);\n}\nfunction mapMightHaveLoosePrim(a, b, prim, item, memo) {\n  var altValue = findLooseMatchingPrimitives(prim);\n  if (altValue != null) {\n    return altValue;\n  }\n  var curB = b.get(altValue);\n  if (curB === undefined && !b.has(altValue) || !innerDeepEqual(item, curB, false, memo)) {\n    return false;\n  }\n  return !a.has(altValue) && innerDeepEqual(item, curB, false, memo);\n}\nfunction setEquiv(a, b, strict, memo) {\n  // This is a lazily initiated Set of entries which have to be compared\n  // pairwise.\n  var set = null;\n  var aValues = arrayFromSet(a);\n  for (var i = 0; i < aValues.length; i++) {\n    var val = aValues[i];\n    // Note: Checking for the objects first improves the performance for object\n    // heavy sets but it is a minor slow down for primitives. As they are fast\n    // to check this improves the worst case scenario instead.\n    if (_typeof(val) === 'object' && val !== null) {\n      if (set === null) {\n        set = new Set();\n      }\n      // If the specified value doesn't exist in the second set its an not null\n      // object (or non strict only: a not matching primitive) we'll need to go\n      // hunting for something thats deep-(strict-)equal to it. To make this\n      // O(n log n) complexity we have to copy these values in a new set first.\n      set.add(val);\n    } else if (!b.has(val)) {\n      if (strict) return false;\n\n      // Fast path to detect missing string, symbol, undefined and null values.\n      if (!setMightHaveLoosePrim(a, b, val)) {\n        return false;\n      }\n      if (set === null) {\n        set = new Set();\n      }\n      set.add(val);\n    }\n  }\n  if (set !== null) {\n    var bValues = arrayFromSet(b);\n    for (var _i = 0; _i < bValues.length; _i++) {\n      var _val = bValues[_i];\n      // We have to check if a primitive value is already\n      // matching and only if it's not, go hunting for it.\n      if (_typeof(_val) === 'object' && _val !== null) {\n        if (!setHasEqualElement(set, _val, strict, memo)) return false;\n      } else if (!strict && !a.has(_val) && !setHasEqualElement(set, _val, strict, memo)) {\n        return false;\n      }\n    }\n    return set.size === 0;\n  }\n  return true;\n}\nfunction mapHasEqualEntry(set, map, key1, item1, strict, memo) {\n  // To be able to handle cases like:\n  //   Map([[{}, 'a'], [{}, 'b']]) vs Map([[{}, 'b'], [{}, 'a']])\n  // ... we need to consider *all* matching keys, not just the first we find.\n  var setValues = arrayFromSet(set);\n  for (var i = 0; i < setValues.length; i++) {\n    var key2 = setValues[i];\n    if (innerDeepEqual(key1, key2, strict, memo) && innerDeepEqual(item1, map.get(key2), strict, memo)) {\n      set.delete(key2);\n      return true;\n    }\n  }\n  return false;\n}\nfunction mapEquiv(a, b, strict, memo) {\n  var set = null;\n  var aEntries = arrayFromMap(a);\n  for (var i = 0; i < aEntries.length; i++) {\n    var _aEntries$i = _slicedToArray(aEntries[i], 2),\n      key = _aEntries$i[0],\n      item1 = _aEntries$i[1];\n    if (_typeof(key) === 'object' && key !== null) {\n      if (set === null) {\n        set = new Set();\n      }\n      set.add(key);\n    } else {\n      // By directly retrieving the value we prevent another b.has(key) check in\n      // almost all possible cases.\n      var item2 = b.get(key);\n      if (item2 === undefined && !b.has(key) || !innerDeepEqual(item1, item2, strict, memo)) {\n        if (strict) return false;\n        // Fast path to detect missing string, symbol, undefined and null\n        // keys.\n        if (!mapMightHaveLoosePrim(a, b, key, item1, memo)) return false;\n        if (set === null) {\n          set = new Set();\n        }\n        set.add(key);\n      }\n    }\n  }\n  if (set !== null) {\n    var bEntries = arrayFromMap(b);\n    for (var _i2 = 0; _i2 < bEntries.length; _i2++) {\n      var _bEntries$_i = _slicedToArray(bEntries[_i2], 2),\n        _key = _bEntries$_i[0],\n        item = _bEntries$_i[1];\n      if (_typeof(_key) === 'object' && _key !== null) {\n        if (!mapHasEqualEntry(set, a, _key, item, strict, memo)) return false;\n      } else if (!strict && (!a.has(_key) || !innerDeepEqual(a.get(_key), item, false, memo)) && !mapHasEqualEntry(set, a, _key, item, false, memo)) {\n        return false;\n      }\n    }\n    return set.size === 0;\n  }\n  return true;\n}\nfunction objEquiv(a, b, strict, keys, memos, iterationType) {\n  // Sets and maps don't have their entries accessible via normal object\n  // properties.\n  var i = 0;\n  if (iterationType === kIsSet) {\n    if (!setEquiv(a, b, strict, memos)) {\n      return false;\n    }\n  } else if (iterationType === kIsMap) {\n    if (!mapEquiv(a, b, strict, memos)) {\n      return false;\n    }\n  } else if (iterationType === kIsArray) {\n    for (; i < a.length; i++) {\n      if (hasOwnProperty(a, i)) {\n        if (!hasOwnProperty(b, i) || !innerDeepEqual(a[i], b[i], strict, memos)) {\n          return false;\n        }\n      } else if (hasOwnProperty(b, i)) {\n        return false;\n      } else {\n        // Array is sparse.\n        var keysA = Object.keys(a);\n        for (; i < keysA.length; i++) {\n          var key = keysA[i];\n          if (!hasOwnProperty(b, key) || !innerDeepEqual(a[key], b[key], strict, memos)) {\n            return false;\n          }\n        }\n        if (keysA.length !== Object.keys(b).length) {\n          return false;\n        }\n        return true;\n      }\n    }\n  }\n\n  // The pair must have equivalent values for every corresponding key.\n  // Possibly expensive deep test:\n  for (i = 0; i < keys.length; i++) {\n    var _key2 = keys[i];\n    if (!innerDeepEqual(a[_key2], b[_key2], strict, memos)) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction isDeepEqual(val1, val2) {\n  return innerDeepEqual(val1, val2, kLoose);\n}\nfunction isDeepStrictEqual(val1, val2) {\n  return innerDeepEqual(val1, val2, kStrict);\n}\nmodule.exports = {\n  isDeepEqual: isDeepEqual,\n  isDeepStrictEqual: isDeepStrictEqual\n};", "// Currently in sync with Node.js lib/assert.js\n// https://github.com/nodejs/node/commit/2a51ae424a513ec9a6aa3466baa0cc1d55dd4f3b\n\n// Originally from narwhal.js (http://narwhaljs.org)\n// Copyright (c) 2009 Thomas Robinson <280north.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the 'Software'), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nvar _require = require('./internal/errors'),\n  _require$codes = _require.codes,\n  ERR_AMBIGUOUS_ARGUMENT = _require$codes.ERR_AMBIGUOUS_ARGUMENT,\n  ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n  ERR_INVALID_ARG_VALUE = _require$codes.ERR_INVALID_ARG_VALUE,\n  ERR_INVALID_RETURN_VALUE = _require$codes.ERR_INVALID_RETURN_VALUE,\n  ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS;\nvar AssertionError = require('./internal/assert/assertion_error');\nvar _require2 = require('util/'),\n  inspect = _require2.inspect;\nvar _require$types = require('util/').types,\n  isPromise = _require$types.isPromise,\n  isRegExp = _require$types.isRegExp;\nvar objectAssign = require('object.assign/polyfill')();\nvar objectIs = require('object-is/polyfill')();\nvar RegExpPrototypeTest = require('call-bind/callBound')('RegExp.prototype.test');\nvar errorCache = new Map();\nvar isDeepEqual;\nvar isDeepStrictEqual;\nvar parseExpressionAt;\nvar findNodeAround;\nvar decoder;\nfunction lazyLoadComparison() {\n  var comparison = require('./internal/util/comparisons');\n  isDeepEqual = comparison.isDeepEqual;\n  isDeepStrictEqual = comparison.isDeepStrictEqual;\n}\n\n// Escape control characters but not \\n and \\t to keep the line breaks and\n// indentation intact.\n// eslint-disable-next-line no-control-regex\nvar escapeSequencesRegExp = /[\\x00-\\x08\\x0b\\x0c\\x0e-\\x1f]/g;\nvar meta = [\"\\\\u0000\", \"\\\\u0001\", \"\\\\u0002\", \"\\\\u0003\", \"\\\\u0004\", \"\\\\u0005\", \"\\\\u0006\", \"\\\\u0007\", '\\\\b', '', '', \"\\\\u000b\", '\\\\f', '', \"\\\\u000e\", \"\\\\u000f\", \"\\\\u0010\", \"\\\\u0011\", \"\\\\u0012\", \"\\\\u0013\", \"\\\\u0014\", \"\\\\u0015\", \"\\\\u0016\", \"\\\\u0017\", \"\\\\u0018\", \"\\\\u0019\", \"\\\\u001a\", \"\\\\u001b\", \"\\\\u001c\", \"\\\\u001d\", \"\\\\u001e\", \"\\\\u001f\"];\nvar escapeFn = function escapeFn(str) {\n  return meta[str.charCodeAt(0)];\n};\nvar warned = false;\n\n// The assert module provides functions that throw\n// AssertionError's when particular conditions are not met. The\n// assert module must conform to the following interface.\n\nvar assert = module.exports = ok;\nvar NO_EXCEPTION_SENTINEL = {};\n\n// All of the following functions must throw an AssertionError\n// when a corresponding condition is not met, with a message that\n// may be undefined if not provided. All assertion methods provide\n// both the actual and expected values to the assertion error for\n// display purposes.\n\nfunction innerFail(obj) {\n  if (obj.message instanceof Error) throw obj.message;\n  throw new AssertionError(obj);\n}\nfunction fail(actual, expected, message, operator, stackStartFn) {\n  var argsLen = arguments.length;\n  var internalMessage;\n  if (argsLen === 0) {\n    internalMessage = 'Failed';\n  } else if (argsLen === 1) {\n    message = actual;\n    actual = undefined;\n  } else {\n    if (warned === false) {\n      warned = true;\n      var warn = process.emitWarning ? process.emitWarning : console.warn.bind(console);\n      warn('assert.fail() with more than one argument is deprecated. ' + 'Please use assert.strictEqual() instead or only pass a message.', 'DeprecationWarning', 'DEP0094');\n    }\n    if (argsLen === 2) operator = '!=';\n  }\n  if (message instanceof Error) throw message;\n  var errArgs = {\n    actual: actual,\n    expected: expected,\n    operator: operator === undefined ? 'fail' : operator,\n    stackStartFn: stackStartFn || fail\n  };\n  if (message !== undefined) {\n    errArgs.message = message;\n  }\n  var err = new AssertionError(errArgs);\n  if (internalMessage) {\n    err.message = internalMessage;\n    err.generatedMessage = true;\n  }\n  throw err;\n}\nassert.fail = fail;\n\n// The AssertionError is defined in internal/error.\nassert.AssertionError = AssertionError;\nfunction innerOk(fn, argLen, value, message) {\n  if (!value) {\n    var generatedMessage = false;\n    if (argLen === 0) {\n      generatedMessage = true;\n      message = 'No value argument passed to `assert.ok()`';\n    } else if (message instanceof Error) {\n      throw message;\n    }\n    var err = new AssertionError({\n      actual: value,\n      expected: true,\n      message: message,\n      operator: '==',\n      stackStartFn: fn\n    });\n    err.generatedMessage = generatedMessage;\n    throw err;\n  }\n}\n\n// Pure assertion tests whether a value is truthy, as determined\n// by !!value.\nfunction ok() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n  innerOk.apply(void 0, [ok, args.length].concat(args));\n}\nassert.ok = ok;\n\n// The equality assertion tests shallow, coercive equality with ==.\n/* eslint-disable no-restricted-properties */\nassert.equal = function equal(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n  // eslint-disable-next-line eqeqeq\n  if (actual != expected) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: '==',\n      stackStartFn: equal\n    });\n  }\n};\n\n// The non-equality assertion tests for whether two objects are not\n// equal with !=.\nassert.notEqual = function notEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n  // eslint-disable-next-line eqeqeq\n  if (actual == expected) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: '!=',\n      stackStartFn: notEqual\n    });\n  }\n};\n\n// The equivalence assertion tests a deep equality relation.\nassert.deepEqual = function deepEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n  if (isDeepEqual === undefined) lazyLoadComparison();\n  if (!isDeepEqual(actual, expected)) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: 'deepEqual',\n      stackStartFn: deepEqual\n    });\n  }\n};\n\n// The non-equivalence assertion tests for any deep inequality.\nassert.notDeepEqual = function notDeepEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n  if (isDeepEqual === undefined) lazyLoadComparison();\n  if (isDeepEqual(actual, expected)) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: 'notDeepEqual',\n      stackStartFn: notDeepEqual\n    });\n  }\n};\n/* eslint-enable */\n\nassert.deepStrictEqual = function deepStrictEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n  if (isDeepEqual === undefined) lazyLoadComparison();\n  if (!isDeepStrictEqual(actual, expected)) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: 'deepStrictEqual',\n      stackStartFn: deepStrictEqual\n    });\n  }\n};\nassert.notDeepStrictEqual = notDeepStrictEqual;\nfunction notDeepStrictEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n  if (isDeepEqual === undefined) lazyLoadComparison();\n  if (isDeepStrictEqual(actual, expected)) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: 'notDeepStrictEqual',\n      stackStartFn: notDeepStrictEqual\n    });\n  }\n}\nassert.strictEqual = function strictEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n  if (!objectIs(actual, expected)) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: 'strictEqual',\n      stackStartFn: strictEqual\n    });\n  }\n};\nassert.notStrictEqual = function notStrictEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n  if (objectIs(actual, expected)) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: 'notStrictEqual',\n      stackStartFn: notStrictEqual\n    });\n  }\n};\nvar Comparison = /*#__PURE__*/_createClass(function Comparison(obj, keys, actual) {\n  var _this = this;\n  _classCallCheck(this, Comparison);\n  keys.forEach(function (key) {\n    if (key in obj) {\n      if (actual !== undefined && typeof actual[key] === 'string' && isRegExp(obj[key]) && RegExpPrototypeTest(obj[key], actual[key])) {\n        _this[key] = actual[key];\n      } else {\n        _this[key] = obj[key];\n      }\n    }\n  });\n});\nfunction compareExceptionKey(actual, expected, key, message, keys, fn) {\n  if (!(key in actual) || !isDeepStrictEqual(actual[key], expected[key])) {\n    if (!message) {\n      // Create placeholder objects to create a nice output.\n      var a = new Comparison(actual, keys);\n      var b = new Comparison(expected, keys, actual);\n      var err = new AssertionError({\n        actual: a,\n        expected: b,\n        operator: 'deepStrictEqual',\n        stackStartFn: fn\n      });\n      err.actual = actual;\n      err.expected = expected;\n      err.operator = fn.name;\n      throw err;\n    }\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: fn.name,\n      stackStartFn: fn\n    });\n  }\n}\nfunction expectedException(actual, expected, msg, fn) {\n  if (typeof expected !== 'function') {\n    if (isRegExp(expected)) return RegExpPrototypeTest(expected, actual);\n    // assert.doesNotThrow does not accept objects.\n    if (arguments.length === 2) {\n      throw new ERR_INVALID_ARG_TYPE('expected', ['Function', 'RegExp'], expected);\n    }\n\n    // Handle primitives properly.\n    if (_typeof(actual) !== 'object' || actual === null) {\n      var err = new AssertionError({\n        actual: actual,\n        expected: expected,\n        message: msg,\n        operator: 'deepStrictEqual',\n        stackStartFn: fn\n      });\n      err.operator = fn.name;\n      throw err;\n    }\n    var keys = Object.keys(expected);\n    // Special handle errors to make sure the name and the message are compared\n    // as well.\n    if (expected instanceof Error) {\n      keys.push('name', 'message');\n    } else if (keys.length === 0) {\n      throw new ERR_INVALID_ARG_VALUE('error', expected, 'may not be an empty object');\n    }\n    if (isDeepEqual === undefined) lazyLoadComparison();\n    keys.forEach(function (key) {\n      if (typeof actual[key] === 'string' && isRegExp(expected[key]) && RegExpPrototypeTest(expected[key], actual[key])) {\n        return;\n      }\n      compareExceptionKey(actual, expected, key, msg, keys, fn);\n    });\n    return true;\n  }\n  // Guard instanceof against arrow functions as they don't have a prototype.\n  if (expected.prototype !== undefined && actual instanceof expected) {\n    return true;\n  }\n  if (Error.isPrototypeOf(expected)) {\n    return false;\n  }\n  return expected.call({}, actual) === true;\n}\nfunction getActual(fn) {\n  if (typeof fn !== 'function') {\n    throw new ERR_INVALID_ARG_TYPE('fn', 'Function', fn);\n  }\n  try {\n    fn();\n  } catch (e) {\n    return e;\n  }\n  return NO_EXCEPTION_SENTINEL;\n}\nfunction checkIsPromise(obj) {\n  // Accept native ES6 promises and promises that are implemented in a similar\n  // way. Do not accept thenables that use a function as `obj` and that have no\n  // `catch` handler.\n\n  // TODO: thenables are checked up until they have the correct methods,\n  // but according to documentation, the `then` method should receive\n  // the `fulfill` and `reject` arguments as well or it may be never resolved.\n\n  return isPromise(obj) || obj !== null && _typeof(obj) === 'object' && typeof obj.then === 'function' && typeof obj.catch === 'function';\n}\nfunction waitForActual(promiseFn) {\n  return Promise.resolve().then(function () {\n    var resultPromise;\n    if (typeof promiseFn === 'function') {\n      // Return a rejected promise if `promiseFn` throws synchronously.\n      resultPromise = promiseFn();\n      // Fail in case no promise is returned.\n      if (!checkIsPromise(resultPromise)) {\n        throw new ERR_INVALID_RETURN_VALUE('instance of Promise', 'promiseFn', resultPromise);\n      }\n    } else if (checkIsPromise(promiseFn)) {\n      resultPromise = promiseFn;\n    } else {\n      throw new ERR_INVALID_ARG_TYPE('promiseFn', ['Function', 'Promise'], promiseFn);\n    }\n    return Promise.resolve().then(function () {\n      return resultPromise;\n    }).then(function () {\n      return NO_EXCEPTION_SENTINEL;\n    }).catch(function (e) {\n      return e;\n    });\n  });\n}\nfunction expectsError(stackStartFn, actual, error, message) {\n  if (typeof error === 'string') {\n    if (arguments.length === 4) {\n      throw new ERR_INVALID_ARG_TYPE('error', ['Object', 'Error', 'Function', 'RegExp'], error);\n    }\n    if (_typeof(actual) === 'object' && actual !== null) {\n      if (actual.message === error) {\n        throw new ERR_AMBIGUOUS_ARGUMENT('error/message', \"The error message \\\"\".concat(actual.message, \"\\\" is identical to the message.\"));\n      }\n    } else if (actual === error) {\n      throw new ERR_AMBIGUOUS_ARGUMENT('error/message', \"The error \\\"\".concat(actual, \"\\\" is identical to the message.\"));\n    }\n    message = error;\n    error = undefined;\n  } else if (error != null && _typeof(error) !== 'object' && typeof error !== 'function') {\n    throw new ERR_INVALID_ARG_TYPE('error', ['Object', 'Error', 'Function', 'RegExp'], error);\n  }\n  if (actual === NO_EXCEPTION_SENTINEL) {\n    var details = '';\n    if (error && error.name) {\n      details += \" (\".concat(error.name, \")\");\n    }\n    details += message ? \": \".concat(message) : '.';\n    var fnType = stackStartFn.name === 'rejects' ? 'rejection' : 'exception';\n    innerFail({\n      actual: undefined,\n      expected: error,\n      operator: stackStartFn.name,\n      message: \"Missing expected \".concat(fnType).concat(details),\n      stackStartFn: stackStartFn\n    });\n  }\n  if (error && !expectedException(actual, error, message, stackStartFn)) {\n    throw actual;\n  }\n}\nfunction expectsNoError(stackStartFn, actual, error, message) {\n  if (actual === NO_EXCEPTION_SENTINEL) return;\n  if (typeof error === 'string') {\n    message = error;\n    error = undefined;\n  }\n  if (!error || expectedException(actual, error)) {\n    var details = message ? \": \".concat(message) : '.';\n    var fnType = stackStartFn.name === 'doesNotReject' ? 'rejection' : 'exception';\n    innerFail({\n      actual: actual,\n      expected: error,\n      operator: stackStartFn.name,\n      message: \"Got unwanted \".concat(fnType).concat(details, \"\\n\") + \"Actual message: \\\"\".concat(actual && actual.message, \"\\\"\"),\n      stackStartFn: stackStartFn\n    });\n  }\n  throw actual;\n}\nassert.throws = function throws(promiseFn) {\n  for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n    args[_key2 - 1] = arguments[_key2];\n  }\n  expectsError.apply(void 0, [throws, getActual(promiseFn)].concat(args));\n};\nassert.rejects = function rejects(promiseFn) {\n  for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n    args[_key3 - 1] = arguments[_key3];\n  }\n  return waitForActual(promiseFn).then(function (result) {\n    return expectsError.apply(void 0, [rejects, result].concat(args));\n  });\n};\nassert.doesNotThrow = function doesNotThrow(fn) {\n  for (var _len4 = arguments.length, args = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n    args[_key4 - 1] = arguments[_key4];\n  }\n  expectsNoError.apply(void 0, [doesNotThrow, getActual(fn)].concat(args));\n};\nassert.doesNotReject = function doesNotReject(fn) {\n  for (var _len5 = arguments.length, args = new Array(_len5 > 1 ? _len5 - 1 : 0), _key5 = 1; _key5 < _len5; _key5++) {\n    args[_key5 - 1] = arguments[_key5];\n  }\n  return waitForActual(fn).then(function (result) {\n    return expectsNoError.apply(void 0, [doesNotReject, result].concat(args));\n  });\n};\nassert.ifError = function ifError(err) {\n  if (err !== null && err !== undefined) {\n    var message = 'ifError got unwanted exception: ';\n    if (_typeof(err) === 'object' && typeof err.message === 'string') {\n      if (err.message.length === 0 && err.constructor) {\n        message += err.constructor.name;\n      } else {\n        message += err.message;\n      }\n    } else {\n      message += inspect(err);\n    }\n    var newErr = new AssertionError({\n      actual: err,\n      expected: null,\n      operator: 'ifError',\n      message: message,\n      stackStartFn: ifError\n    });\n\n    // Make sure we actually have a stack trace!\n    var origStack = err.stack;\n    if (typeof origStack === 'string') {\n      // This will remove any duplicated frames from the error frames taken\n      // from within `ifError` and add the original error frames to the newly\n      // created ones.\n      var tmp2 = origStack.split('\\n');\n      tmp2.shift();\n      // Filter all frames existing in err.stack.\n      var tmp1 = newErr.stack.split('\\n');\n      for (var i = 0; i < tmp2.length; i++) {\n        // Find the first occurrence of the frame.\n        var pos = tmp1.indexOf(tmp2[i]);\n        if (pos !== -1) {\n          // Only keep new frames.\n          tmp1 = tmp1.slice(0, pos);\n          break;\n        }\n      }\n      newErr.stack = \"\".concat(tmp1.join('\\n'), \"\\n\").concat(tmp2.join('\\n'));\n    }\n    throw newErr;\n  }\n};\n\n// Currently in sync with Node.js lib/assert.js\n// https://github.com/nodejs/node/commit/2a871df3dfb8ea663ef5e1f8f62701ec51384ecb\nfunction internalMatch(string, regexp, message, fn, fnName) {\n  if (!isRegExp(regexp)) {\n    throw new ERR_INVALID_ARG_TYPE('regexp', 'RegExp', regexp);\n  }\n  var match = fnName === 'match';\n  if (typeof string !== 'string' || RegExpPrototypeTest(regexp, string) !== match) {\n    if (message instanceof Error) {\n      throw message;\n    }\n    var generatedMessage = !message;\n\n    // 'The input was expected to not match the regular expression ' +\n    message = message || (typeof string !== 'string' ? 'The \"string\" argument must be of type string. Received type ' + \"\".concat(_typeof(string), \" (\").concat(inspect(string), \")\") : (match ? 'The input did not match the regular expression ' : 'The input was expected to not match the regular expression ') + \"\".concat(inspect(regexp), \". Input:\\n\\n\").concat(inspect(string), \"\\n\"));\n    var err = new AssertionError({\n      actual: string,\n      expected: regexp,\n      message: message,\n      operator: fnName,\n      stackStartFn: fn\n    });\n    err.generatedMessage = generatedMessage;\n    throw err;\n  }\n}\nassert.match = function match(string, regexp, message) {\n  internalMatch(string, regexp, message, match, 'match');\n};\nassert.doesNotMatch = function doesNotMatch(string, regexp, message) {\n  internalMatch(string, regexp, message, doesNotMatch, 'doesNotMatch');\n};\n\n// Expose a strict only variant of assert\nfunction strict() {\n  for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n    args[_key6] = arguments[_key6];\n  }\n  innerOk.apply(void 0, [strict, args.length].concat(args));\n}\nassert.strict = objectAssign(strict, assert, {\n  equal: assert.strictEqual,\n  deepEqual: assert.deepStrictEqual,\n  notEqual: assert.notStrictEqual,\n  notDeepEqual: assert.notDeepStrictEqual\n});\nassert.strict.strict = assert.strict;", "import BN from 'bn.js'\n\nimport { Decoded, Input, List } from './types'\n\n// Types exported outside of this package\nexport { Decoded, Input, List }\n\n/**\n * RLP Encoding based on: https://github.com/ethereum/wiki/wiki/%5BEnglish%5D-RLP\n * This function takes in a data, convert it to buffer if not, and a length for recursion\n * @param input - will be converted to buffer\n * @returns returns buffer of encoded data\n **/\nexport function encode(input: Input): Buffer {\n  if (Array.isArray(input)) {\n    const output: Buffer[] = []\n    for (let i = 0; i < input.length; i++) {\n      output.push(encode(input[i]))\n    }\n    const buf = Buffer.concat(output)\n    return Buffer.concat([encodeLength(buf.length, 192), buf])\n  } else {\n    const inputBuf = toBuffer(input)\n    return inputBuf.length === 1 && inputBuf[0] < 128\n      ? inputBuf\n      : Buffer.concat([encodeLength(inputBuf.length, 128), inputBuf])\n  }\n}\n\n/**\n * Parse integers. Check if there is no leading zeros\n * @param v The value to parse\n * @param base The base to parse the integer into\n */\nfunction safeParseInt(v: string, base: number): number {\n  if (v[0] === '0' && v[1] === '0') {\n    throw new Error('invalid RLP: extra zeros')\n  }\n\n  return parseInt(v, base)\n}\n\nfunction encodeLength(len: number, offset: number): Buffer {\n  if (len < 56) {\n    return Buffer.from([len + offset])\n  } else {\n    const hexLength = intToHex(len)\n    const lLength = hexLength.length / 2\n    const firstByte = intToHex(offset + 55 + lLength)\n    return Buffer.from(firstByte + hexLength, 'hex')\n  }\n}\n\n/**\n * RLP Decoding based on: {@link https://github.com/ethereum/wiki/wiki/%5BEnglish%5D-RLP|RLP}\n * @param input - will be converted to buffer\n * @param stream - Is the input a stream (false by default)\n * @returns - returns decode Array of Buffers containg the original message\n **/\nexport function decode(input: Buffer, stream?: boolean): Buffer\nexport function decode(input: Buffer[], stream?: boolean): Buffer[]\nexport function decode(input: Input, stream?: boolean): Buffer[] | Buffer | Decoded\nexport function decode(input: Input, stream: boolean = false): Buffer[] | Buffer | Decoded {\n  if (!input || (input as any).length === 0) {\n    return Buffer.from([])\n  }\n\n  const inputBuffer = toBuffer(input)\n  const decoded = _decode(inputBuffer)\n\n  if (stream) {\n    return decoded\n  }\n  if (decoded.remainder.length !== 0) {\n    throw new Error('invalid remainder')\n  }\n\n  return decoded.data\n}\n\n/**\n * Get the length of the RLP input\n * @param input\n * @returns The length of the input or an empty Buffer if no input\n */\nexport function getLength(input: Input): Buffer | number {\n  if (!input || (input as any).length === 0) {\n    return Buffer.from([])\n  }\n\n  const inputBuffer = toBuffer(input)\n  const firstByte = inputBuffer[0]\n\n  if (firstByte <= 0x7f) {\n    return inputBuffer.length\n  } else if (firstByte <= 0xb7) {\n    return firstByte - 0x7f\n  } else if (firstByte <= 0xbf) {\n    return firstByte - 0xb6\n  } else if (firstByte <= 0xf7) {\n    // a list between  0-55 bytes long\n    return firstByte - 0xbf\n  } else {\n    // a list  over 55 bytes long\n    const llength = firstByte - 0xf6\n    const length = safeParseInt(inputBuffer.slice(1, llength).toString('hex'), 16)\n    return llength + length\n  }\n}\n\n/** Decode an input with RLP */\nfunction _decode(input: Buffer): Decoded {\n  let length, llength, data, innerRemainder, d\n  const decoded = []\n  const firstByte = input[0]\n\n  if (firstByte <= 0x7f) {\n    // a single byte whose value is in the [0x00, 0x7f] range, that byte is its own RLP encoding.\n    return {\n      data: input.slice(0, 1),\n      remainder: input.slice(1),\n    }\n  } else if (firstByte <= 0xb7) {\n    // string is 0-55 bytes long. A single byte with value 0x80 plus the length of the string followed by the string\n    // The range of the first byte is [0x80, 0xb7]\n    length = firstByte - 0x7f\n\n    // set 0x80 null to 0\n    if (firstByte === 0x80) {\n      data = Buffer.from([])\n    } else {\n      data = input.slice(1, length)\n    }\n\n    if (length === 2 && data[0] < 0x80) {\n      throw new Error('invalid rlp encoding: byte must be less 0x80')\n    }\n\n    return {\n      data: data,\n      remainder: input.slice(length),\n    }\n  } else if (firstByte <= 0xbf) {\n    // string is greater than 55 bytes long. A single byte with the value (0xb7 plus the length of the length),\n    // followed by the length, followed by the string\n    llength = firstByte - 0xb6\n    if (input.length - 1 < llength) {\n      throw new Error('invalid RLP: not enough bytes for string length')\n    }\n    length = safeParseInt(input.slice(1, llength).toString('hex'), 16)\n    if (length <= 55) {\n      throw new Error('invalid RLP: expected string length to be greater than 55')\n    }\n    data = input.slice(llength, length + llength)\n    if (data.length < length) {\n      throw new Error('invalid RLP: not enough bytes for string')\n    }\n\n    return {\n      data: data,\n      remainder: input.slice(length + llength),\n    }\n  } else if (firstByte <= 0xf7) {\n    // a list between  0-55 bytes long\n    length = firstByte - 0xbf\n    innerRemainder = input.slice(1, length)\n    while (innerRemainder.length) {\n      d = _decode(innerRemainder)\n      decoded.push(d.data as Buffer)\n      innerRemainder = d.remainder\n    }\n\n    return {\n      data: decoded,\n      remainder: input.slice(length),\n    }\n  } else {\n    // a list  over 55 bytes long\n    llength = firstByte - 0xf6\n    length = safeParseInt(input.slice(1, llength).toString('hex'), 16)\n    const totalLength = llength + length\n    if (totalLength > input.length) {\n      throw new Error('invalid rlp: total length is larger than the data')\n    }\n\n    innerRemainder = input.slice(llength, totalLength)\n    if (innerRemainder.length === 0) {\n      throw new Error('invalid rlp, List has a invalid length')\n    }\n\n    while (innerRemainder.length) {\n      d = _decode(innerRemainder)\n      decoded.push(d.data as Buffer)\n      innerRemainder = d.remainder\n    }\n    return {\n      data: decoded,\n      remainder: input.slice(totalLength),\n    }\n  }\n}\n\n/** Check if a string is prefixed by 0x */\nfunction isHexPrefixed(str: string): boolean {\n  return str.slice(0, 2) === '0x'\n}\n\n/** Removes 0x from a given String */\nfunction stripHexPrefix(str: string): string {\n  if (typeof str !== 'string') {\n    return str\n  }\n  return isHexPrefixed(str) ? str.slice(2) : str\n}\n\n/** Transform an integer into its hexadecimal value */\nfunction intToHex(integer: number | bigint): string {\n  if (integer < 0) {\n    throw new Error('Invalid integer as argument, must be unsigned!')\n  }\n  const hex = integer.toString(16)\n  return hex.length % 2 ? `0${hex}` : hex\n}\n\n/** Pad a string to be even */\nfunction padToEven(a: string): string {\n  return a.length % 2 ? `0${a}` : a\n}\n\n/** Transform an integer into a Buffer */\nfunction intToBuffer(integer: number | bigint): Buffer {\n  const hex = intToHex(integer)\n  return Buffer.from(hex, 'hex')\n}\n\n/** Transform anything into a Buffer */\nfunction toBuffer(v: Input): Buffer {\n  if (!Buffer.isBuffer(v)) {\n    if (typeof v === 'string') {\n      if (isHexPrefixed(v)) {\n        return Buffer.from(padToEven(stripHexPrefix(v)), 'hex')\n      } else {\n        return Buffer.from(v)\n      }\n    } else if (typeof v === 'number' || typeof v === 'bigint') {\n      if (!v) {\n        return Buffer.from([])\n      } else {\n        return intToBuffer(v)\n      }\n    } else if (v === null || v === undefined) {\n      return Buffer.from([])\n    } else if (v instanceof Uint8Array) {\n      return Buffer.from(v as any)\n    } else if (BN.isBN(v)) {\n      // converts a BN to a Buffer\n      return Buffer.from(v.toArray())\n    } else {\n      throw new Error('invalid type')\n    }\n  }\n  return v\n}\n", "/**\n * Re-exports commonly used modules:\n * * Exports [`BN`](https://github.com/indutny/bn.js), [`rlp`](https://github.com/ethereumjs/rlp).\n * @packageDocumentation\n */\n\nimport BN from 'bn.js'\nimport * as rlp from 'rlp'\n\n/**\n * [`BN`](https://github.com/indutny/bn.js)\n */\nexport { BN }\n\n/**\n * [`rlp`](https://github.com/ethereumjs/rlp)\n */\nexport { rlp }\n", "import { Buffer } from 'buffer'\nimport { BN } from './externals'\n\n/**\n * 2^64-1\n */\nexport const MAX_UINT64 = new BN('ffffffffffffffff', 16)\n\n/**\n * The max integer that the evm can handle (2^256-1)\n */\nexport const MAX_INTEGER = new BN(\n  'ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff',\n  16\n)\n\n/**\n * 2^256\n */\nexport const TWO_POW256 = new BN(\n  '10000000000000000000000000000000000000000000000000000000000000000',\n  16\n)\n\n/**\n * Keccak-256 hash of null\n */\nexport const KECCAK256_NULL_S = 'c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470'\n\n/**\n * Keccak-256 hash of null\n */\nexport const KECCAK256_NULL = Buffer.from(KECCAK256_NULL_S, 'hex')\n\n/**\n * Keccak-256 of an RLP of an empty array\n */\nexport const KECCAK256_RLP_ARRAY_S =\n  '1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347'\n\n/**\n * Keccak-256 of an RLP of an empty array\n */\nexport const KECCAK256_RLP_ARRAY = Buffer.from(KECCAK256_RLP_ARRAY_S, 'hex')\n\n/**\n * Keccak-256 hash of the RLP of null\n */\nexport const KECCAK256_RLP_S = '56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421'\n\n/**\n * Keccak-256 hash of the RLP of null\n */\nexport const KECCAK256_RLP = Buffer.from(KECCAK256_RLP_S, 'hex')\n", "const errors = {\n  IMPOSSIBLE_CASE: 'Impossible case. Please create issue.',\n  TWEAK_ADD:\n    'The tweak was out of range or the resulted private key is invalid',\n  TWEAK_MUL: 'The tweak was out of range or equal to zero',\n  CONTEXT_RANDOMIZE_UNKNOW: 'Unknow error on context randomization',\n  SECKEY_INVALID: 'Private Key is invalid',\n  PUBKEY_PARSE: 'Public Key could not be parsed',\n  PUBKEY_SERIALIZE: 'Public Key serialization error',\n  PUBKEY_COMBINE: 'The sum of the public keys is not valid',\n  SIG_PARSE: 'Signature could not be parsed',\n  SIGN: 'The nonce generation function failed, or the private key was invalid',\n  RECOVER: 'Public key could not be recover',\n  ECDH: 'Scalar was invalid (zero or overflow)'\n}\n\nfunction assert (cond, msg) {\n  if (!cond) throw new Error(msg)\n}\n\nfunction isUint8Array (name, value, length) {\n  assert(value instanceof Uint8Array, `Expected ${name} to be an Uint8Array`)\n\n  if (length !== undefined) {\n    if (Array.isArray(length)) {\n      const numbers = length.join(', ')\n      const msg = `Expected ${name} to be an Uint8Array with length [${numbers}]`\n      assert(length.includes(value.length), msg)\n    } else {\n      const msg = `Expected ${name} to be an Uint8Array with length ${length}`\n      assert(value.length === length, msg)\n    }\n  }\n}\n\nfunction isCompressed (value) {\n  assert(toTypeString(value) === 'Boolean', 'Expected compressed to be a Boolean')\n}\n\nfunction getAssertedOutput (output = (len) => new Uint8Array(len), length) {\n  if (typeof output === 'function') output = output(length)\n  isUint8Array('output', output, length)\n  return output\n}\n\nfunction toTypeString (value) {\n  return Object.prototype.toString.call(value).slice(8, -1)\n}\n\nmodule.exports = (secp256k1) => {\n  return {\n    contextRandomize (seed) {\n      assert(\n        seed === null || seed instanceof Uint8Array,\n        'Expected seed to be an Uint8Array or null'\n      )\n      if (seed !== null) isUint8Array('seed', seed, 32)\n\n      switch (secp256k1.contextRandomize(seed)) {\n        case 1:\n          throw new Error(errors.CONTEXT_RANDOMIZE_UNKNOW)\n      }\n    },\n\n    privateKeyVerify (seckey) {\n      isUint8Array('private key', seckey, 32)\n\n      return secp256k1.privateKeyVerify(seckey) === 0\n    },\n\n    privateKeyNegate (seckey) {\n      isUint8Array('private key', seckey, 32)\n\n      switch (secp256k1.privateKeyNegate(seckey)) {\n        case 0:\n          return seckey\n        case 1:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    privateKeyTweakAdd (seckey, tweak) {\n      isUint8Array('private key', seckey, 32)\n      isUint8Array('tweak', tweak, 32)\n\n      switch (secp256k1.privateKeyTweakAdd(seckey, tweak)) {\n        case 0:\n          return seckey\n        case 1:\n          throw new Error(errors.TWEAK_ADD)\n      }\n    },\n\n    privateKeyTweakMul (seckey, tweak) {\n      isUint8Array('private key', seckey, 32)\n      isUint8Array('tweak', tweak, 32)\n\n      switch (secp256k1.privateKeyTweakMul(seckey, tweak)) {\n        case 0:\n          return seckey\n        case 1:\n          throw new Error(errors.TWEAK_MUL)\n      }\n    },\n\n    publicKeyVerify (pubkey) {\n      isUint8Array('public key', pubkey, [33, 65])\n\n      return secp256k1.publicKeyVerify(pubkey) === 0\n    },\n\n    publicKeyCreate (seckey, compressed = true, output) {\n      isUint8Array('private key', seckey, 32)\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyCreate(output, seckey)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.SECKEY_INVALID)\n        case 2:\n          throw new Error(errors.PUBKEY_SERIALIZE)\n      }\n    },\n\n    publicKeyConvert (pubkey, compressed = true, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyConvert(output, pubkey)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.PUBKEY_SERIALIZE)\n      }\n    },\n\n    publicKeyNegate (pubkey, compressed = true, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyNegate(output, pubkey)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n        case 3:\n          throw new Error(errors.PUBKEY_SERIALIZE)\n      }\n    },\n\n    publicKeyCombine (pubkeys, compressed = true, output) {\n      assert(Array.isArray(pubkeys), 'Expected public keys to be an Array')\n      assert(pubkeys.length > 0, 'Expected public keys array will have more than zero items')\n      for (const pubkey of pubkeys) {\n        isUint8Array('public key', pubkey, [33, 65])\n      }\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyCombine(output, pubkeys)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.PUBKEY_COMBINE)\n        case 3:\n          throw new Error(errors.PUBKEY_SERIALIZE)\n      }\n    },\n\n    publicKeyTweakAdd (pubkey, tweak, compressed = true, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isUint8Array('tweak', tweak, 32)\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyTweakAdd(output, pubkey, tweak)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.TWEAK_ADD)\n      }\n    },\n\n    publicKeyTweakMul (pubkey, tweak, compressed = true, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isUint8Array('tweak', tweak, 32)\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyTweakMul(output, pubkey, tweak)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.TWEAK_MUL)\n      }\n    },\n\n    signatureNormalize (sig) {\n      isUint8Array('signature', sig, 64)\n\n      switch (secp256k1.signatureNormalize(sig)) {\n        case 0:\n          return sig\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n      }\n    },\n\n    signatureExport (sig, output) {\n      isUint8Array('signature', sig, 64)\n      output = getAssertedOutput(output, 72)\n\n      const obj = { output, outputlen: 72 }\n      switch (secp256k1.signatureExport(obj, sig)) {\n        case 0:\n          return output.slice(0, obj.outputlen)\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    signatureImport (sig, output) {\n      isUint8Array('signature', sig)\n      output = getAssertedOutput(output, 64)\n\n      switch (secp256k1.signatureImport(output, sig)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    ecdsaSign (msg32, seckey, options = {}, output) {\n      isUint8Array('message', msg32, 32)\n      isUint8Array('private key', seckey, 32)\n      assert(toTypeString(options) === 'Object', 'Expected options to be an Object')\n      if (options.data !== undefined) isUint8Array('options.data', options.data)\n      if (options.noncefn !== undefined) assert(toTypeString(options.noncefn) === 'Function', 'Expected options.noncefn to be a Function')\n      output = getAssertedOutput(output, 64)\n\n      const obj = { signature: output, recid: null }\n      switch (secp256k1.ecdsaSign(obj, msg32, seckey, options.data, options.noncefn)) {\n        case 0:\n          return obj\n        case 1:\n          throw new Error(errors.SIGN)\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    ecdsaVerify (sig, msg32, pubkey) {\n      isUint8Array('signature', sig, 64)\n      isUint8Array('message', msg32, 32)\n      isUint8Array('public key', pubkey, [33, 65])\n\n      switch (secp256k1.ecdsaVerify(sig, msg32, pubkey)) {\n        case 0:\n          return true\n        case 3:\n          return false\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n        case 2:\n          throw new Error(errors.PUBKEY_PARSE)\n      }\n    },\n\n    ecdsaRecover (sig, recid, msg32, compressed = true, output) {\n      isUint8Array('signature', sig, 64)\n      assert(\n        toTypeString(recid) === 'Number' &&\n          recid >= 0 &&\n          recid <= 3,\n        'Expected recovery id to be a Number within interval [0, 3]'\n      )\n      isUint8Array('message', msg32, 32)\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.ecdsaRecover(output, sig, recid, msg32)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n        case 2:\n          throw new Error(errors.RECOVER)\n        case 3:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    ecdh (pubkey, seckey, options = {}, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isUint8Array('private key', seckey, 32)\n      assert(toTypeString(options) === 'Object', 'Expected options to be an Object')\n      if (options.data !== undefined) isUint8Array('options.data', options.data)\n      if (options.hashfn !== undefined) {\n        assert(toTypeString(options.hashfn) === 'Function', 'Expected options.hashfn to be a Function')\n        if (options.xbuf !== undefined) isUint8Array('options.xbuf', options.xbuf, 32)\n        if (options.ybuf !== undefined) isUint8Array('options.ybuf', options.ybuf, 32)\n        isUint8Array('output', output)\n      } else {\n        output = getAssertedOutput(output, 32)\n      }\n\n      switch (secp256k1.ecdh(output, pubkey, seckey, options.data, options.hashfn, options.xbuf, options.ybuf)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.ECDH)\n      }\n    }\n  }\n}\n", "const EC = require('elliptic').ec\n\nconst ec = new EC('secp256k1')\nconst ecparams = ec.curve\n\n// Hack, we can not use bn.js@5, while elliptic uses bn.js@4\n// See https://github.com/indutny/elliptic/issues/191#issuecomment-569888758\nconst BN = ecparams.n.constructor\n\nfunction loadCompressedPublicKey (first, xbuf) {\n  let x = new BN(xbuf)\n\n  // overflow\n  if (x.cmp(ecparams.p) >= 0) return null\n  x = x.toRed(ecparams.red)\n\n  // compute corresponding Y\n  let y = x.redSqr().redIMul(x).redIAdd(ecparams.b).redSqrt()\n  if ((first === 0x03) !== y.isOdd()) y = y.redNeg()\n\n  return ec.keyPair({ pub: { x: x, y: y } })\n}\n\nfunction loadUncompressedPublicKey (first, xbuf, ybuf) {\n  let x = new BN(xbuf)\n  let y = new BN(ybuf)\n\n  // overflow\n  if (x.cmp(ecparams.p) >= 0 || y.cmp(ecparams.p) >= 0) return null\n\n  x = x.toRed(ecparams.red)\n  y = y.toRed(ecparams.red)\n\n  // is odd flag\n  if ((first === 0x06 || first === 0x07) && y.isOdd() !== (first === 0x07)) return null\n\n  // x*x*x + b = y*y\n  const x3 = x.redSqr().redIMul(x)\n  if (!y.redSqr().redISub(x3.redIAdd(ecparams.b)).isZero()) return null\n\n  return ec.keyPair({ pub: { x: x, y: y } })\n}\n\nfunction loadPublicKey (pubkey) {\n  // length should be validated in interface\n  const first = pubkey[0]\n  switch (first) {\n    case 0x02:\n    case 0x03:\n      if (pubkey.length !== 33) return null\n      return loadCompressedPublicKey(first, pubkey.subarray(1, 33))\n    case 0x04:\n    case 0x06:\n    case 0x07:\n      if (pubkey.length !== 65) return null\n      return loadUncompressedPublicKey(first, pubkey.subarray(1, 33), pubkey.subarray(33, 65))\n    default:\n      return null\n  }\n}\n\nfunction savePublicKey (output, point) {\n  const pubkey = point.encode(null, output.length === 33)\n  // Loop should be faster because we do not need create extra Uint8Array\n  // output.set(new Uint8Array(pubkey))\n  for (let i = 0; i < output.length; ++i) output[i] = pubkey[i]\n}\n\nmodule.exports = {\n  contextRandomize () {\n    return 0\n  },\n\n  privateKeyVerify (seckey) {\n    const bn = new BN(seckey)\n    return bn.cmp(ecparams.n) < 0 && !bn.isZero() ? 0 : 1\n  },\n\n  privateKeyNegate (seckey) {\n    const bn = new BN(seckey)\n    const negate = ecparams.n.sub(bn).umod(ecparams.n).toArrayLike(Uint8Array, 'be', 32)\n    seckey.set(negate)\n    return 0\n  },\n\n  privateKeyTweakAdd (seckey, tweak) {\n    const bn = new BN(tweak)\n    if (bn.cmp(ecparams.n) >= 0) return 1\n\n    bn.iadd(new BN(seckey))\n    if (bn.cmp(ecparams.n) >= 0) bn.isub(ecparams.n)\n    if (bn.isZero()) return 1\n\n    const tweaked = bn.toArrayLike(Uint8Array, 'be', 32)\n    seckey.set(tweaked)\n\n    return 0\n  },\n\n  privateKeyTweakMul (seckey, tweak) {\n    let bn = new BN(tweak)\n    if (bn.cmp(ecparams.n) >= 0 || bn.isZero()) return 1\n\n    bn.imul(new BN(seckey))\n    if (bn.cmp(ecparams.n) >= 0) bn = bn.umod(ecparams.n)\n\n    const tweaked = bn.toArrayLike(Uint8Array, 'be', 32)\n    seckey.set(tweaked)\n\n    return 0\n  },\n\n  publicKeyVerify (pubkey) {\n    const pair = loadPublicKey(pubkey)\n    return pair === null ? 1 : 0\n  },\n\n  publicKeyCreate (output, seckey) {\n    const bn = new BN(seckey)\n    if (bn.cmp(ecparams.n) >= 0 || bn.isZero()) return 1\n\n    const point = ec.keyFromPrivate(seckey).getPublic()\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyConvert (output, pubkey) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    const point = pair.getPublic()\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyNegate (output, pubkey) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    const point = pair.getPublic()\n    point.y = point.y.redNeg()\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyCombine (output, pubkeys) {\n    const pairs = new Array(pubkeys.length)\n    for (let i = 0; i < pubkeys.length; ++i) {\n      pairs[i] = loadPublicKey(pubkeys[i])\n      if (pairs[i] === null) return 1\n    }\n\n    let point = pairs[0].getPublic()\n    for (let i = 1; i < pairs.length; ++i) point = point.add(pairs[i].pub)\n    if (point.isInfinity()) return 2\n\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyTweakAdd (output, pubkey, tweak) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    tweak = new BN(tweak)\n    if (tweak.cmp(ecparams.n) >= 0) return 2\n\n    const point = pair.getPublic().add(ecparams.g.mul(tweak))\n    if (point.isInfinity()) return 2\n\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyTweakMul (output, pubkey, tweak) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    tweak = new BN(tweak)\n    if (tweak.cmp(ecparams.n) >= 0 || tweak.isZero()) return 2\n\n    const point = pair.getPublic().mul(tweak)\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  signatureNormalize (sig) {\n    const r = new BN(sig.subarray(0, 32))\n    const s = new BN(sig.subarray(32, 64))\n    if (r.cmp(ecparams.n) >= 0 || s.cmp(ecparams.n) >= 0) return 1\n\n    if (s.cmp(ec.nh) === 1) {\n      sig.set(ecparams.n.sub(s).toArrayLike(Uint8Array, 'be', 32), 32)\n    }\n\n    return 0\n  },\n\n  // Copied 1-to-1 from https://github.com/bitcoinjs/bip66/blob/master/index.js\n  // Adapted for Uint8Array instead Buffer\n  signatureExport (obj, sig) {\n    const sigR = sig.subarray(0, 32)\n    const sigS = sig.subarray(32, 64)\n    if (new BN(sigR).cmp(ecparams.n) >= 0) return 1\n    if (new BN(sigS).cmp(ecparams.n) >= 0) return 1\n\n    const { output } = obj\n\n    // Prepare R\n    let r = output.subarray(4, 4 + 33)\n    r[0] = 0x00\n    r.set(sigR, 1)\n\n    let lenR = 33\n    let posR = 0\n    for (; lenR > 1 && r[posR] === 0x00 && !(r[posR + 1] & 0x80); --lenR, ++posR);\n\n    r = r.subarray(posR)\n    if (r[0] & 0x80) return 1\n    if (lenR > 1 && (r[0] === 0x00) && !(r[1] & 0x80)) return 1\n\n    // Prepare S\n    let s = output.subarray(6 + 33, 6 + 33 + 33)\n    s[0] = 0x00\n    s.set(sigS, 1)\n\n    let lenS = 33\n    let posS = 0\n    for (; lenS > 1 && s[posS] === 0x00 && !(s[posS + 1] & 0x80); --lenS, ++posS);\n\n    s = s.subarray(posS)\n    if (s[0] & 0x80) return 1\n    if (lenS > 1 && (s[0] === 0x00) && !(s[1] & 0x80)) return 1\n\n    // Set output length for return\n    obj.outputlen = 6 + lenR + lenS\n\n    // Output in specified format\n    // 0x30 [total-length] 0x02 [R-length] [R] 0x02 [S-length] [S]\n    output[0] = 0x30\n    output[1] = obj.outputlen - 2\n    output[2] = 0x02\n    output[3] = r.length\n    output.set(r, 4)\n    output[4 + lenR] = 0x02\n    output[5 + lenR] = s.length\n    output.set(s, 6 + lenR)\n\n    return 0\n  },\n\n  // Copied 1-to-1 from https://github.com/bitcoinjs/bip66/blob/master/index.js\n  // Adapted for Uint8Array instead Buffer\n  signatureImport (output, sig) {\n    if (sig.length < 8) return 1\n    if (sig.length > 72) return 1\n    if (sig[0] !== 0x30) return 1\n    if (sig[1] !== sig.length - 2) return 1\n    if (sig[2] !== 0x02) return 1\n\n    const lenR = sig[3]\n    if (lenR === 0) return 1\n    if (5 + lenR >= sig.length) return 1\n    if (sig[4 + lenR] !== 0x02) return 1\n\n    const lenS = sig[5 + lenR]\n    if (lenS === 0) return 1\n    if ((6 + lenR + lenS) !== sig.length) return 1\n\n    if (sig[4] & 0x80) return 1\n    if (lenR > 1 && (sig[4] === 0x00) && !(sig[5] & 0x80)) return 1\n\n    if (sig[lenR + 6] & 0x80) return 1\n    if (lenS > 1 && (sig[lenR + 6] === 0x00) && !(sig[lenR + 7] & 0x80)) return 1\n\n    let sigR = sig.subarray(4, 4 + lenR)\n    if (sigR.length === 33 && sigR[0] === 0x00) sigR = sigR.subarray(1)\n    if (sigR.length > 32) return 1\n\n    let sigS = sig.subarray(6 + lenR)\n    if (sigS.length === 33 && sigS[0] === 0x00) sigS = sigS.slice(1)\n    if (sigS.length > 32) throw new Error('S length is too long')\n\n    let r = new BN(sigR)\n    if (r.cmp(ecparams.n) >= 0) r = new BN(0)\n\n    let s = new BN(sig.subarray(6 + lenR))\n    if (s.cmp(ecparams.n) >= 0) s = new BN(0)\n\n    output.set(r.toArrayLike(Uint8Array, 'be', 32), 0)\n    output.set(s.toArrayLike(Uint8Array, 'be', 32), 32)\n\n    return 0\n  },\n\n  ecdsaSign (obj, message, seckey, data, noncefn) {\n    if (noncefn) {\n      const _noncefn = noncefn\n      noncefn = (counter) => {\n        const nonce = _noncefn(message, seckey, null, data, counter)\n\n        const isValid = nonce instanceof Uint8Array && nonce.length === 32\n        if (!isValid) throw new Error('This is the way')\n\n        return new BN(nonce)\n      }\n    }\n\n    const d = new BN(seckey)\n    if (d.cmp(ecparams.n) >= 0 || d.isZero()) return 1\n\n    let sig\n    try {\n      sig = ec.sign(message, seckey, { canonical: true, k: noncefn, pers: data })\n    } catch (err) {\n      return 1\n    }\n\n    obj.signature.set(sig.r.toArrayLike(Uint8Array, 'be', 32), 0)\n    obj.signature.set(sig.s.toArrayLike(Uint8Array, 'be', 32), 32)\n    obj.recid = sig.recoveryParam\n\n    return 0\n  },\n\n  ecdsaVerify (sig, msg32, pubkey) {\n    const sigObj = { r: sig.subarray(0, 32), s: sig.subarray(32, 64) }\n\n    const sigr = new BN(sigObj.r)\n    const sigs = new BN(sigObj.s)\n    if (sigr.cmp(ecparams.n) >= 0 || sigs.cmp(ecparams.n) >= 0) return 1\n    if (sigs.cmp(ec.nh) === 1 || sigr.isZero() || sigs.isZero()) return 3\n\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 2\n\n    const point = pair.getPublic()\n    const isValid = ec.verify(msg32, sigObj, point)\n    return isValid ? 0 : 3\n  },\n\n  ecdsaRecover (output, sig, recid, msg32) {\n    const sigObj = { r: sig.slice(0, 32), s: sig.slice(32, 64) }\n\n    const sigr = new BN(sigObj.r)\n    const sigs = new BN(sigObj.s)\n    if (sigr.cmp(ecparams.n) >= 0 || sigs.cmp(ecparams.n) >= 0) return 1\n\n    if (sigr.isZero() || sigs.isZero()) return 2\n\n    // Can throw `throw new Error('Unable to find sencond key candinate');`\n    let point\n    try {\n      point = ec.recoverPubKey(msg32, sigObj, recid)\n    } catch (err) {\n      return 2\n    }\n\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  ecdh (output, pubkey, seckey, data, hashfn, xbuf, ybuf) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    const scalar = new BN(seckey)\n    if (scalar.cmp(ecparams.n) >= 0 || scalar.isZero()) return 2\n\n    const point = pair.getPublic().mul(scalar)\n\n    if (hashfn === undefined) {\n      const data = point.encode(null, true)\n      const sha256 = ec.hash().update(data).digest()\n      for (let i = 0; i < 32; ++i) output[i] = sha256[i]\n    } else {\n      if (!xbuf) xbuf = new Uint8Array(32)\n      const x = point.getX().toArray('be', 32)\n      for (let i = 0; i < 32; ++i) xbuf[i] = x[i]\n\n      if (!ybuf) ybuf = new Uint8Array(32)\n      const y = point.getY().toArray('be', 32)\n      for (let i = 0; i < 32; ++i) ybuf[i] = y[i]\n\n      const hash = hashfn(xbuf, ybuf, data)\n\n      const isValid = hash instanceof Uint8Array && hash.length === output.length\n      if (!isValid) return 2\n\n      output.set(hash)\n    }\n\n    return 0\n  }\n}\n", "module.exports = require('./lib')(require('./lib/elliptic'))\n", "const randombytes = require(\"randombytes\");\n\nexport function getRandomBytes(bytes: number): Promise<Buffer> {\n  return new Promise((resolve, reject) => {\n    randombytes(bytes, function(err: any, resp: Buffer) {\n      if (err) {\n        reject(err);\n        return;\n      }\n\n      resolve(resp);\n    });\n  });\n}\n\nexport function getRandomBytesSync(bytes: number): Buffer {\n  return randombytes(bytes);\n}\n", "import { privateKeyVerify } from \"secp256k1\";\nimport { getRandomBytes, getRandomBytesSync } from \"./random\";\n\nconst SECP256K1_PRIVATE_KEY_SIZE = 32;\n\nexport async function createPrivateKey(): Promise<Uint8Array> {\n  while (true) {\n    const pk = await getRandomBytes(SECP256K1_PRIVATE_KEY_SIZE);\n    if (privateKeyVerify(pk)) {\n      return pk;\n    }\n  }\n}\n\nexport function createPrivateKeySync(): Uint8Array {\n  while (true) {\n    const pk = getRandomBytesSync(SECP256K1_PRIVATE_KEY_SIZE);\n    if (privateKeyVerify(pk)) {\n      return pk;\n    }\n  }\n}\n\nexport * from \"secp256k1\";\n", "/*\nThe MIT License\n\nCopyright (c) 2016 Nick Dodson. nickdodson.com\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE\n */\n\n/**\n * Returns a `Boolean` on whether or not the a `String` starts with '0x'\n * @param str the string input value\n * @return a boolean if it is or is not hex prefixed\n * @throws if the str input is not a string\n */\nexport function isHexPrefixed(str: string): boolean {\n  if (typeof str !== 'string') {\n    throw new Error(`[isHexPrefixed] input must be type 'string', received type ${typeof str}`)\n  }\n\n  return str[0] === '0' && str[1] === 'x'\n}\n\n/**\n * Removes '0x' from a given `String` if present\n * @param str the string value\n * @returns the string without 0x prefix\n */\nexport const stripHexPrefix = (str: string): string => {\n  if (typeof str !== 'string')\n    throw new Error(`[stripHexPrefix] input must be type 'string', received ${typeof str}`)\n\n  return isHexPrefixed(str) ? str.slice(2) : str\n}\n\n/**\n * Pads a `String` to have an even length\n * @param value\n * @return output\n */\nexport function padToEven(value: string): string {\n  let a = value\n\n  if (typeof a !== 'string') {\n    throw new Error(`[padToEven] value must be type 'string', received ${typeof a}`)\n  }\n\n  if (a.length % 2) a = `0${a}`\n\n  return a\n}\n\n/**\n * Get the binary size of a string\n * @param str\n * @returns the number of bytes contained within the string\n */\nexport function getBinarySize(str: string) {\n  if (typeof str !== 'string') {\n    throw new Error(`[getBinarySize] method requires input type 'string', recieved ${typeof str}`)\n  }\n\n  return Buffer.byteLength(str, 'utf8')\n}\n\n/**\n * Returns TRUE if the first specified array contains all elements\n * from the second one. FALSE otherwise.\n *\n * @param superset\n * @param subset\n *\n */\nexport function arrayContainsArray(\n  superset: unknown[],\n  subset: unknown[],\n  some?: boolean\n): boolean {\n  if (Array.isArray(superset) !== true) {\n    throw new Error(\n      `[arrayContainsArray] method requires input 'superset' to be an array, got type '${typeof superset}'`\n    )\n  }\n  if (Array.isArray(subset) !== true) {\n    throw new Error(\n      `[arrayContainsArray] method requires input 'subset' to be an array, got type '${typeof subset}'`\n    )\n  }\n\n  return subset[some ? 'some' : 'every']((value) => superset.indexOf(value) >= 0)\n}\n\n/**\n * Should be called to get ascii from its hex representation\n *\n * @param string in hex\n * @returns ascii string representation of hex value\n */\nexport function toAscii(hex: string): string {\n  let str = ''\n  let i = 0\n  const l = hex.length\n\n  if (hex.substring(0, 2) === '0x') i = 2\n\n  for (; i < l; i += 2) {\n    const code = parseInt(hex.substr(i, 2), 16)\n    str += String.fromCharCode(code)\n  }\n\n  return str\n}\n\n/**\n * Should be called to get hex representation (prefixed by 0x) of utf8 string\n *\n * @param string\n * @param optional padding\n * @returns hex representation of input string\n */\nexport function fromUtf8(stringValue: string) {\n  const str = Buffer.from(stringValue, 'utf8')\n\n  return `0x${padToEven(str.toString('hex')).replace(/^0+|0+$/g, '')}`\n}\n\n/**\n * Should be called to get hex representation (prefixed by 0x) of ascii string\n *\n * @param  string\n * @param  optional padding\n * @returns  hex representation of input string\n */\nexport function fromAscii(stringValue: string) {\n  let hex = ''\n  for (let i = 0; i < stringValue.length; i++) {\n    const code = stringValue.charCodeAt(i)\n    const n = code.toString(16)\n    hex += n.length < 2 ? `0${n}` : n\n  }\n\n  return `0x${hex}`\n}\n\n/**\n * Returns the keys from an array of objects.\n * @example\n * ```js\n * getKeys([{a: '1', b: '2'}, {a: '3', b: '4'}], 'a') => ['1', '3']\n *````\n * @param  params\n * @param  key\n * @param  allowEmpty\n * @returns output just a simple array of output keys\n */\nexport function getKeys(params: Record<string, string>[], key: string, allowEmpty?: boolean) {\n  if (!Array.isArray(params)) {\n    throw new Error(`[getKeys] method expects input 'params' to be an array, got ${typeof params}`)\n  }\n  if (typeof key !== 'string') {\n    throw new Error(\n      `[getKeys] method expects input 'key' to be type 'string', got ${typeof params}`\n    )\n  }\n\n  const result = []\n\n  for (let i = 0; i < params.length; i++) {\n    let value = params[i][key]\n    if (allowEmpty && !value) {\n      value = ''\n    } else if (typeof value !== 'string') {\n      throw new Error(`invalid abi - expected type 'string', received ${typeof value}`)\n    }\n    result.push(value)\n  }\n\n  return result\n}\n\n/**\n * Is the string a hex string.\n *\n * @param  value\n * @param  length\n * @returns  output the string is a hex string\n */\nexport function isHexString(value: string, length?: number): boolean {\n  if (typeof value !== 'string' || !value.match(/^0x[0-9A-Fa-f]*$/)) return false\n\n  if (length && value.length !== 2 + 2 * length) return false\n\n  return true\n}\n", "import { isHexString } from './internal'\n\n/**\n * Throws if a string is not hex prefixed\n * @param {string} input string to check hex prefix of\n */\nexport const assertIsHexString = function (input: string): void {\n  if (!isHexString(input)) {\n    const msg = `This method only supports 0x-prefixed hex strings but input was: ${input}`\n    throw new Error(msg)\n  }\n}\n\n/**\n * Throws if input is not a buffer\n * @param {Buffer} input value to check\n */\nexport const assertIsBuffer = function (input: Buffer): void {\n  if (!Buffer.isBuffer(input)) {\n    const msg = `This method only supports Buffer but input was: ${input}`\n    throw new Error(msg)\n  }\n}\n\n/**\n * Throws if input is not an array\n * @param {number[]} input value to check\n */\nexport const assertIsArray = function (input: number[]): void {\n  if (!Array.isArray(input)) {\n    const msg = `This method only supports number arrays but input was: ${input}`\n    throw new Error(msg)\n  }\n}\n\n/**\n * Throws if input is not a string\n * @param {string} input value to check\n */\nexport const assertIsString = function (input: string): void {\n  if (typeof input !== 'string') {\n    const msg = `This method only supports strings but input was: ${input}`\n    throw new Error(msg)\n  }\n}\n", "import { BN } from './externals'\nimport { stripHexPrefix, padToEven, isHexString, isHexPrefixed } from './internal'\nimport {\n  PrefixedHexString,\n  TransformableToArray,\n  TransformableToBuffer,\n  NestedBufferArray,\n  NestedUint8Array,\n} from './types'\nimport { assertIsBuffer, assertIsArray, assertIsHexString } from './helpers'\n\n/**\n * Converts a `Number` into a hex `String`\n * @param {Number} i\n * @return {String}\n */\nexport const intToHex = function (i: number) {\n  if (!Number.isSafeInteger(i) || i < 0) {\n    throw new Error(`Received an invalid integer type: ${i}`)\n  }\n  return `0x${i.toString(16)}`\n}\n\n/**\n * Converts an `Number` to a `Buffer`\n * @param {Number} i\n * @return {Buffer}\n */\nexport const intToBuffer = function (i: number) {\n  const hex = intToHex(i)\n  return Buffer.from(padToEven(hex.slice(2)), 'hex')\n}\n\n/**\n * Returns a buffer filled with 0s.\n * @param bytes the number of bytes the buffer should be\n */\nexport const zeros = function (bytes: number): Buffer {\n  return Buffer.allocUnsafe(bytes).fill(0)\n}\n\n/**\n * Pads a `Buffer` with zeros till it has `length` bytes.\n * Truncates the beginning or end of input if its length exceeds `length`.\n * @param msg the value to pad (Buffer)\n * @param length the number of bytes the output should be\n * @param right whether to start padding form the left or right\n * @return (Buffer)\n */\nconst setLength = function (msg: Buffer, length: number, right: boolean) {\n  const buf = zeros(length)\n  if (right) {\n    if (msg.length < length) {\n      msg.copy(buf)\n      return buf\n    }\n    return msg.slice(0, length)\n  } else {\n    if (msg.length < length) {\n      msg.copy(buf, length - msg.length)\n      return buf\n    }\n    return msg.slice(-length)\n  }\n}\n\n/**\n * Left Pads a `Buffer` with leading zeros till it has `length` bytes.\n * Or it truncates the beginning if it exceeds.\n * @param msg the value to pad (Buffer)\n * @param length the number of bytes the output should be\n * @return (Buffer)\n */\nexport const setLengthLeft = function (msg: Buffer, length: number) {\n  assertIsBuffer(msg)\n  return setLength(msg, length, false)\n}\n\n/**\n * Right Pads a `Buffer` with trailing zeros till it has `length` bytes.\n * it truncates the end if it exceeds.\n * @param msg the value to pad (Buffer)\n * @param length the number of bytes the output should be\n * @return (Buffer)\n */\nexport const setLengthRight = function (msg: Buffer, length: number) {\n  assertIsBuffer(msg)\n  return setLength(msg, length, true)\n}\n\n/**\n * Trims leading zeros from a `Buffer`, `String` or `Number[]`.\n * @param a (Buffer|Array|String)\n * @return (Buffer|Array|String)\n */\nconst stripZeros = function (a: any): Buffer | number[] | string {\n  let first = a[0]\n  while (a.length > 0 && first.toString() === '0') {\n    a = a.slice(1)\n    first = a[0]\n  }\n  return a\n}\n\n/**\n * Trims leading zeros from a `Buffer`.\n * @param a (Buffer)\n * @return (Buffer)\n */\nexport const unpadBuffer = function (a: Buffer): Buffer {\n  assertIsBuffer(a)\n  return stripZeros(a) as Buffer\n}\n\n/**\n * Trims leading zeros from an `Array` (of numbers).\n * @param a (number[])\n * @return (number[])\n */\nexport const unpadArray = function (a: number[]): number[] {\n  assertIsArray(a)\n  return stripZeros(a) as number[]\n}\n\n/**\n * Trims leading zeros from a hex-prefixed `String`.\n * @param a (String)\n * @return (String)\n */\nexport const unpadHexString = function (a: string): string {\n  assertIsHexString(a)\n  a = stripHexPrefix(a)\n  return stripZeros(a) as string\n}\n\nexport type ToBufferInputTypes =\n  | PrefixedHexString\n  | number\n  | BN\n  | Buffer\n  | Uint8Array\n  | number[]\n  | TransformableToArray\n  | TransformableToBuffer\n  | null\n  | undefined\n\n/**\n * Attempts to turn a value into a `Buffer`.\n * Inputs supported: `Buffer`, `String` (hex-prefixed), `Number`, null/undefined, `BN` and other objects\n * with a `toArray()` or `toBuffer()` method.\n * @param v the value\n */\nexport const toBuffer = function (v: ToBufferInputTypes): Buffer {\n  if (v === null || v === undefined) {\n    return Buffer.allocUnsafe(0)\n  }\n\n  if (Buffer.isBuffer(v)) {\n    return Buffer.from(v)\n  }\n\n  if (Array.isArray(v) || v instanceof Uint8Array) {\n    return Buffer.from(v as Uint8Array)\n  }\n\n  if (typeof v === 'string') {\n    if (!isHexString(v)) {\n      throw new Error(\n        `Cannot convert string to buffer. toBuffer only supports 0x-prefixed hex strings and this string was given: ${v}`\n      )\n    }\n    return Buffer.from(padToEven(stripHexPrefix(v)), 'hex')\n  }\n\n  if (typeof v === 'number') {\n    return intToBuffer(v)\n  }\n\n  if (BN.isBN(v)) {\n    if (v.isNeg()) {\n      throw new Error(`Cannot convert negative BN to buffer. Given: ${v}`)\n    }\n    return v.toArrayLike(Buffer)\n  }\n\n  if (v.toArray) {\n    // converts a BN to a Buffer\n    return Buffer.from(v.toArray())\n  }\n\n  if (v.toBuffer) {\n    return Buffer.from(v.toBuffer())\n  }\n\n  throw new Error('invalid type')\n}\n\n/**\n * Converts a `Buffer` to a `Number`.\n * @param buf `Buffer` object to convert\n * @throws If the input number exceeds 53 bits.\n */\nexport const bufferToInt = function (buf: Buffer): number {\n  return new BN(toBuffer(buf)).toNumber()\n}\n\n/**\n * Converts a `Buffer` into a `0x`-prefixed hex `String`.\n * @param buf `Buffer` object to convert\n */\nexport const bufferToHex = function (buf: Buffer): string {\n  buf = toBuffer(buf)\n  return '0x' + buf.toString('hex')\n}\n\n/**\n * Interprets a `Buffer` as a signed integer and returns a `BN`. Assumes 256-bit numbers.\n * @param num Signed integer value\n */\nexport const fromSigned = function (num: Buffer): BN {\n  return new BN(num).fromTwos(256)\n}\n\n/**\n * Converts a `BN` to an unsigned integer and returns it as a `Buffer`. Assumes 256-bit numbers.\n * @param num\n */\nexport const toUnsigned = function (num: BN): Buffer {\n  return Buffer.from(num.toTwos(256).toArray())\n}\n\n/**\n * Adds \"0x\" to a given `String` if it does not already start with \"0x\".\n */\nexport const addHexPrefix = function (str: string): string {\n  if (typeof str !== 'string') {\n    return str\n  }\n\n  return isHexPrefixed(str) ? str : '0x' + str\n}\n\n/**\n * Returns the utf8 string representation from a hex string.\n *\n * Examples:\n *\n * Input 1: '657468657265756d000000000000000000000000000000000000000000000000'\n * Input 2: '657468657265756d'\n * Input 3: '000000000000000000000000000000000000000000000000657468657265756d'\n *\n * Output (all 3 input variants): 'ethereum'\n *\n * Note that this method is not intended to be used with hex strings\n * representing quantities in both big endian or little endian notation.\n *\n * @param string Hex string, should be `0x` prefixed\n * @return Utf8 string\n */\nexport const toUtf8 = function (hex: string): string {\n  const zerosRegexp = /^(00)+|(00)+$/g\n  hex = stripHexPrefix(hex)\n  if (hex.length % 2 !== 0) {\n    throw new Error('Invalid non-even hex string input for toUtf8() provided')\n  }\n  const bufferVal = Buffer.from(hex.replace(zerosRegexp, ''), 'hex')\n\n  return bufferVal.toString('utf8')\n}\n\n/**\n * Converts a `Buffer` or `Array` to JSON.\n * @param ba (Buffer|Array)\n * @return (Array|String|null)\n */\nexport const baToJSON = function (ba: any): any {\n  if (Buffer.isBuffer(ba)) {\n    return `0x${ba.toString('hex')}`\n  } else if (ba instanceof Array) {\n    const array = []\n    for (let i = 0; i < ba.length; i++) {\n      array.push(baToJSON(ba[i]))\n    }\n    return array\n  }\n}\n\n/**\n * Checks provided Buffers for leading zeroes and throws if found.\n *\n * Examples:\n *\n * Valid values: 0x1, 0x, 0x01, 0x1234\n * Invalid values: 0x0, 0x00, 0x001, 0x0001\n *\n * Note: This method is useful for validating that RLP encoded integers comply with the rule that all\n * integer values encoded to RLP must be in the most compact form and contain no leading zero bytes\n * @param values An object containing string keys and Buffer values\n * @throws if any provided value is found to have leading zero bytes\n */\nexport const validateNoLeadingZeroes = function (values: { [key: string]: Buffer | undefined }) {\n  for (const [k, v] of Object.entries(values)) {\n    if (v !== undefined && v.length > 0 && v[0] === 0) {\n      throw new Error(`${k} cannot have leading zeroes, received: ${v.toString('hex')}`)\n    }\n  }\n}\n\n/**\n * Converts a {@link Uint8Array} or {@link NestedUint8Array} to {@link Buffer} or {@link NestedBufferArray}\n */\nexport function arrToBufArr(arr: Uint8Array): Buffer\nexport function arrToBufArr(arr: NestedUint8Array): NestedBufferArray\nexport function arrToBufArr(arr: Uint8Array | NestedUint8Array): Buffer | NestedBufferArray\nexport function arrToBufArr(arr: Uint8Array | NestedUint8Array): Buffer | NestedBufferArray {\n  if (!Array.isArray(arr)) {\n    return Buffer.from(arr)\n  }\n  return arr.map((a) => arrToBufArr(a))\n}\n\n/**\n * Converts a {@link Buffer} or {@link NestedBufferArray} to {@link Uint8Array} or {@link NestedUint8Array}\n */\nexport function bufArrToArr(arr: Buffer): Uint8Array\nexport function bufArrToArr(arr: NestedBufferArray): NestedUint8Array\nexport function bufArrToArr(arr: Buffer | NestedBufferArray): Uint8Array | NestedUint8Array\nexport function bufArrToArr(arr: Buffer | NestedBufferArray): Uint8Array | NestedUint8Array {\n  if (!Array.isArray(arr)) {\n    return Uint8Array.from(arr ?? [])\n  }\n  return arr.map((a) => bufArrToArr(a))\n}\n", "import { Hash } from \"crypto\";\n\nexport function createHashFunction(\n  hashConstructor: () => Hash\n): (msg: Buffer) => Buffer {\n  return msg => {\n    const hash = hashConstructor();\n    hash.update(msg);\n    return Buffer.from(hash.digest());\n  };\n}\n", "import { createHashFunction } from \"./hash-utils\";\n\nconst createKeccakHash = require(\"keccak\");\n\nexport const keccak224 = createHashFunction(() =>\n  createKeccakHash(\"keccak224\")\n);\n\nexport const keccak256 = createHashFunction(() =>\n  createKeccakHash(\"keccak256\")\n);\n\nexport const keccak384 = createHashFunction(() =>\n  createKeccakHash(\"keccak384\")\n);\n\nexport const keccak512 = createHashFunction(() =>\n  createKeccakHash(\"keccak512\")\n);\n", "import { keccak224, keccak384, keccak256 as k256, keccak512 } from 'ethereum-cryptography/keccak'\nconst createHash = require('create-hash')\nimport { rlp } from './externals'\nimport { toBuffer, setLengthLeft } from './bytes'\nimport { assertIsString, assertIsBuffer, assertIsArray, assertIsHexString } from './helpers'\n\n/**\n * Creates Keccak hash of a Buffer input\n * @param a The input data (Buffer)\n * @param bits (number = 256) The Keccak width\n */\nexport const keccak = function (a: Buffer, bits: number = 256): Buffer {\n  assertIsBuffer(a)\n  switch (bits) {\n    case 224: {\n      return keccak224(a)\n    }\n    case 256: {\n      return k256(a)\n    }\n    case 384: {\n      return keccak384(a)\n    }\n    case 512: {\n      return keccak512(a)\n    }\n    default: {\n      throw new Error(`Invald algorithm: keccak${bits}`)\n    }\n  }\n}\n\n/**\n * Creates Keccak-256 hash of the input, alias for keccak(a, 256).\n * @param a The input data (Buffer)\n */\nexport const keccak256 = function (a: Buffer): Buffer {\n  return keccak(a)\n}\n\n/**\n * Creates Keccak hash of a utf-8 string input\n * @param a The input data (String)\n * @param bits (number = 256) The Keccak width\n */\nexport const keccakFromString = function (a: string, bits: number = 256) {\n  assertIsString(a)\n  const buf = Buffer.from(a, 'utf8')\n  return keccak(buf, bits)\n}\n\n/**\n * Creates Keccak hash of an 0x-prefixed string input\n * @param a The input data (String)\n * @param bits (number = 256) The Keccak width\n */\nexport const keccakFromHexString = function (a: string, bits: number = 256) {\n  assertIsHexString(a)\n  return keccak(toBuffer(a), bits)\n}\n\n/**\n * Creates Keccak hash of a number array input\n * @param a The input data (number[])\n * @param bits (number = 256) The Keccak width\n */\nexport const keccakFromArray = function (a: number[], bits: number = 256) {\n  assertIsArray(a)\n  return keccak(toBuffer(a), bits)\n}\n\n/**\n * Creates SHA256 hash of an input.\n * @param  a The input data (Buffer|Array|String)\n */\nconst _sha256 = function (a: any): Buffer {\n  a = toBuffer(a)\n  return createHash('sha256').update(a).digest()\n}\n\n/**\n * Creates SHA256 hash of a Buffer input.\n * @param a The input data (Buffer)\n */\nexport const sha256 = function (a: Buffer): Buffer {\n  assertIsBuffer(a)\n  return _sha256(a)\n}\n\n/**\n * Creates SHA256 hash of a string input.\n * @param a The input data (string)\n */\nexport const sha256FromString = function (a: string): Buffer {\n  assertIsString(a)\n  return _sha256(a)\n}\n\n/**\n * Creates SHA256 hash of a number[] input.\n * @param a The input data (number[])\n */\nexport const sha256FromArray = function (a: number[]): Buffer {\n  assertIsArray(a)\n  return _sha256(a)\n}\n\n/**\n * Creates RIPEMD160 hash of the input.\n * @param a The input data (Buffer|Array|String|Number)\n * @param padded Whether it should be padded to 256 bits or not\n */\nconst _ripemd160 = function (a: any, padded: boolean): Buffer {\n  a = toBuffer(a)\n  const hash = createHash('rmd160').update(a).digest()\n  if (padded === true) {\n    return setLengthLeft(hash, 32)\n  } else {\n    return hash\n  }\n}\n\n/**\n * Creates RIPEMD160 hash of a Buffer input.\n * @param a The input data (Buffer)\n * @param padded Whether it should be padded to 256 bits or not\n */\nexport const ripemd160 = function (a: Buffer, padded: boolean): Buffer {\n  assertIsBuffer(a)\n  return _ripemd160(a, padded)\n}\n\n/**\n * Creates RIPEMD160 hash of a string input.\n * @param a The input data (String)\n * @param padded Whether it should be padded to 256 bits or not\n */\nexport const ripemd160FromString = function (a: string, padded: boolean): Buffer {\n  assertIsString(a)\n  return _ripemd160(a, padded)\n}\n\n/**\n * Creates RIPEMD160 hash of a number[] input.\n * @param a The input data (number[])\n * @param padded Whether it should be padded to 256 bits or not\n */\nexport const ripemd160FromArray = function (a: number[], padded: boolean): Buffer {\n  assertIsArray(a)\n  return _ripemd160(a, padded)\n}\n\n/**\n * Creates SHA-3 hash of the RLP encoded version of the input.\n * @param a The input data\n */\nexport const rlphash = function (a: rlp.Input): Buffer {\n  return keccak(rlp.encode(a))\n}\n", "import { BN } from './externals'\nimport { isHexString } from './internal'\nimport { Address } from './address'\nimport { unpadBuffer, toBuffer, ToBufferInputTypes } from './bytes'\n\n/*\n * A type that represents a BNLike input that can be converted to a BN.\n */\nexport type BNLike = BN | PrefixedHexString | number | Buffer\n\n/*\n * A type that represents a BufferLike input that can be converted to a Buffer.\n */\nexport type BufferLike =\n  | Buffer\n  | Uint8Array\n  | number[]\n  | number\n  | BN\n  | TransformableToBuffer\n  | PrefixedHexString\n\n/*\n * A type that represents a `0x`-prefixed hex string.\n */\nexport type PrefixedHexString = string\n\n/**\n * A type that represents an Address-like value.\n * To convert to address, use `new Address(toBuffer(value))`\n */\nexport type AddressLike = Address | Buffer | PrefixedHexString\n\n/*\n * A type that represents an object that has a `toArray()` method.\n */\nexport interface TransformableToArray {\n  toArray(): Uint8Array\n  toBuffer?(): Buffer\n}\n\n/*\n * A type that represents an object that has a `toBuffer()` method.\n */\nexport interface TransformableToBuffer {\n  toBuffer(): Buffer\n  toArray?(): Uint8Array\n}\n\nexport type NestedUint8Array = Array<Uint8Array | NestedUint8Array>\nexport type NestedBufferArray = Array<Buffer | NestedBufferArray>\n\n/**\n * Convert BN to 0x-prefixed hex string.\n */\nexport function bnToHex(value: BN): PrefixedHexString {\n  return `0x${value.toString(16)}`\n}\n\n/**\n * Convert value from BN to an unpadded Buffer\n * (useful for RLP transport)\n * @param value value to convert\n */\nexport function bnToUnpaddedBuffer(value: BN): Buffer {\n  // Using `bn.toArrayLike(Buffer)` instead of `bn.toBuffer()`\n  // for compatibility with browserify and similar tools\n  return unpadBuffer(value.toArrayLike(Buffer))\n}\n\n/**\n * Deprecated alias for {@link bnToUnpaddedBuffer}\n * @deprecated\n */\nexport function bnToRlp(value: BN): Buffer {\n  return bnToUnpaddedBuffer(value)\n}\n\n/**\n * Type output options\n */\nexport enum TypeOutput {\n  Number,\n  BN,\n  Buffer,\n  PrefixedHexString,\n}\n\nexport type TypeOutputReturnType = {\n  [TypeOutput.Number]: number\n  [TypeOutput.BN]: BN\n  [TypeOutput.Buffer]: Buffer\n  [TypeOutput.PrefixedHexString]: PrefixedHexString\n}\n\n/**\n * Convert an input to a specified type.\n * Input of null/undefined returns null/undefined regardless of the output type.\n * @param input value to convert\n * @param outputType type to output\n */\nexport function toType<T extends TypeOutput>(input: null, outputType: T): null\nexport function toType<T extends TypeOutput>(input: undefined, outputType: T): undefined\nexport function toType<T extends TypeOutput>(\n  input: ToBufferInputTypes,\n  outputType: T\n): TypeOutputReturnType[T]\nexport function toType<T extends TypeOutput>(\n  input: ToBufferInputTypes,\n  outputType: T\n): TypeOutputReturnType[T] | undefined | null {\n  if (input === null) {\n    return null\n  }\n  if (input === undefined) {\n    return undefined\n  }\n\n  if (typeof input === 'string' && !isHexString(input)) {\n    throw new Error(`A string must be provided with a 0x-prefix, given: ${input}`)\n  } else if (typeof input === 'number' && !Number.isSafeInteger(input)) {\n    throw new Error(\n      'The provided number is greater than MAX_SAFE_INTEGER (please use an alternative input type)'\n    )\n  }\n\n  const output = toBuffer(input)\n\n  if (outputType === TypeOutput.Buffer) {\n    return output as TypeOutputReturnType[T]\n  } else if (outputType === TypeOutput.BN) {\n    return new BN(output) as TypeOutputReturnType[T]\n  } else if (outputType === TypeOutput.Number) {\n    const bn = new BN(output)\n    const max = new BN(Number.MAX_SAFE_INTEGER.toString())\n    if (bn.gt(max)) {\n      throw new Error(\n        'The provided number is greater than MAX_SAFE_INTEGER (please use an alternative output type)'\n      )\n    }\n    return bn.toNumber() as TypeOutputReturnType[T]\n  } else {\n    // outputType === TypeOutput.PrefixedHexString\n    return `0x${output.toString('hex')}` as TypeOutputReturnType[T]\n  }\n}\n", "import assert from 'assert'\nimport { BN, rlp } from './externals'\nimport {\n  privateKeyVerify,\n  publicKeyCreate,\n  publicKeyVerify,\n  publicKeyConvert,\n} from 'ethereum-cryptography/secp256k1'\nimport { stripHexPrefix } from './internal'\nimport { KECCAK256_RLP, KECCAK256_NULL } from './constants'\nimport { zeros, bufferToHex, toBuffer } from './bytes'\nimport { keccak, keccak256, keccakFromString, rlphash } from './hash'\nimport { assertIsString, assertIsHexString, assertIsBuffer } from './helpers'\nimport { BNLike, BufferLike, bnToUnpaddedBuffer, toType, TypeOutput } from './types'\n\nexport interface AccountData {\n  nonce?: BNLike\n  balance?: BNLike\n  stateRoot?: BufferLike\n  codeHash?: BufferLike\n}\n\nexport class Account {\n  nonce: BN\n  balance: BN\n  stateRoot: Buffer\n  codeHash: Buffer\n\n  static fromAccountData(accountData: AccountData) {\n    const { nonce, balance, stateRoot, codeHash } = accountData\n\n    return new Account(\n      nonce ? new BN(toBuffer(nonce)) : undefined,\n      balance ? new BN(toBuffer(balance)) : undefined,\n      stateRoot ? toBuffer(stateRoot) : undefined,\n      codeHash ? toBuffer(codeHash) : undefined\n    )\n  }\n\n  public static fromRlpSerializedAccount(serialized: Buffer) {\n    const values = rlp.decode(serialized)\n\n    if (!Array.isArray(values)) {\n      throw new Error('Invalid serialized account input. Must be array')\n    }\n\n    return this.fromValuesArray(values)\n  }\n\n  public static fromValuesArray(values: Buffer[]) {\n    const [nonce, balance, stateRoot, codeHash] = values\n\n    return new Account(new BN(nonce), new BN(balance), stateRoot, codeHash)\n  }\n\n  /**\n   * This constructor assigns and validates the values.\n   * Use the static factory methods to assist in creating an Account from varying data types.\n   */\n  constructor(\n    nonce = new BN(0),\n    balance = new BN(0),\n    stateRoot = KECCAK256_RLP,\n    codeHash = KECCAK256_NULL\n  ) {\n    this.nonce = nonce\n    this.balance = balance\n    this.stateRoot = stateRoot\n    this.codeHash = codeHash\n\n    this._validate()\n  }\n\n  private _validate() {\n    if (this.nonce.lt(new BN(0))) {\n      throw new Error('nonce must be greater than zero')\n    }\n    if (this.balance.lt(new BN(0))) {\n      throw new Error('balance must be greater than zero')\n    }\n    if (this.stateRoot.length !== 32) {\n      throw new Error('stateRoot must have a length of 32')\n    }\n    if (this.codeHash.length !== 32) {\n      throw new Error('codeHash must have a length of 32')\n    }\n  }\n\n  /**\n   * Returns a Buffer Array of the raw Buffers for the account, in order.\n   */\n  raw(): Buffer[] {\n    return [\n      bnToUnpaddedBuffer(this.nonce),\n      bnToUnpaddedBuffer(this.balance),\n      this.stateRoot,\n      this.codeHash,\n    ]\n  }\n\n  /**\n   * Returns the RLP serialization of the account as a `Buffer`.\n   */\n  serialize(): Buffer {\n    return rlp.encode(this.raw())\n  }\n\n  /**\n   * Returns a `Boolean` determining if the account is a contract.\n   */\n  isContract(): boolean {\n    return !this.codeHash.equals(KECCAK256_NULL)\n  }\n\n  /**\n   * Returns a `Boolean` determining if the account is empty complying to the definition of\n   * account emptiness in [EIP-161](https://eips.ethereum.org/EIPS/eip-161):\n   * \"An account is considered empty when it has no code and zero nonce and zero balance.\"\n   */\n  isEmpty(): boolean {\n    return this.balance.isZero() && this.nonce.isZero() && this.codeHash.equals(KECCAK256_NULL)\n  }\n}\n\n/**\n * Checks if the address is a valid. Accepts checksummed addresses too.\n */\nexport const isValidAddress = function (hexAddress: string): boolean {\n  try {\n    assertIsString(hexAddress)\n  } catch (e: any) {\n    return false\n  }\n\n  return /^0x[0-9a-fA-F]{40}$/.test(hexAddress)\n}\n\n/**\n * Returns a checksummed address.\n *\n * If an eip1191ChainId is provided, the chainId will be included in the checksum calculation. This\n * has the effect of checksummed addresses for one chain having invalid checksums for others.\n * For more details see [EIP-1191](https://eips.ethereum.org/EIPS/eip-1191).\n *\n * WARNING: Checksums with and without the chainId will differ and the EIP-1191 checksum is not\n * backwards compatible to the original widely adopted checksum format standard introduced in\n * [EIP-55](https://eips.ethereum.org/EIPS/eip-55), so this will break in existing applications.\n * Usage of this EIP is therefore discouraged unless you have a very targeted use case.\n */\nexport const toChecksumAddress = function (hexAddress: string, eip1191ChainId?: BNLike): string {\n  assertIsHexString(hexAddress)\n  const address = stripHexPrefix(hexAddress).toLowerCase()\n\n  let prefix = ''\n  if (eip1191ChainId) {\n    const chainId = toType(eip1191ChainId, TypeOutput.BN)\n    prefix = chainId.toString() + '0x'\n  }\n\n  const hash = keccakFromString(prefix + address).toString('hex')\n  let ret = '0x'\n\n  for (let i = 0; i < address.length; i++) {\n    if (parseInt(hash[i], 16) >= 8) {\n      ret += address[i].toUpperCase()\n    } else {\n      ret += address[i]\n    }\n  }\n\n  return ret\n}\n\n/**\n * Checks if the address is a valid checksummed address.\n *\n * See toChecksumAddress' documentation for details about the eip1191ChainId parameter.\n */\nexport const isValidChecksumAddress = function (\n  hexAddress: string,\n  eip1191ChainId?: BNLike\n): boolean {\n  return isValidAddress(hexAddress) && toChecksumAddress(hexAddress, eip1191ChainId) === hexAddress\n}\n\n/**\n * Generates an address of a newly created contract.\n * @param from The address which is creating this new address\n * @param nonce The nonce of the from account\n */\nexport const generateAddress = function (from: Buffer, nonce: Buffer): Buffer {\n  assertIsBuffer(from)\n  assertIsBuffer(nonce)\n  const nonceBN = new BN(nonce)\n\n  if (nonceBN.isZero()) {\n    // in RLP we want to encode null in the case of zero nonce\n    // read the RLP documentation for an answer if you dare\n    return rlphash([from, null]).slice(-20)\n  }\n\n  // Only take the lower 160bits of the hash\n  return rlphash([from, Buffer.from(nonceBN.toArray())]).slice(-20)\n}\n\n/**\n * Generates an address for a contract created using CREATE2.\n * @param from The address which is creating this new address\n * @param salt A salt\n * @param initCode The init code of the contract being created\n */\nexport const generateAddress2 = function (from: Buffer, salt: Buffer, initCode: Buffer): Buffer {\n  assertIsBuffer(from)\n  assertIsBuffer(salt)\n  assertIsBuffer(initCode)\n\n  assert(from.length === 20)\n  assert(salt.length === 32)\n\n  const address = keccak256(\n    Buffer.concat([Buffer.from('ff', 'hex'), from, salt, keccak256(initCode)])\n  )\n\n  return address.slice(-20)\n}\n\n/**\n * Checks if the private key satisfies the rules of the curve secp256k1.\n */\nexport const isValidPrivate = function (privateKey: Buffer): boolean {\n  return privateKeyVerify(privateKey)\n}\n\n/**\n * Checks if the public key satisfies the rules of the curve secp256k1\n * and the requirements of Ethereum.\n * @param publicKey The two points of an uncompressed key, unless sanitize is enabled\n * @param sanitize Accept public keys in other formats\n */\nexport const isValidPublic = function (publicKey: Buffer, sanitize: boolean = false): boolean {\n  assertIsBuffer(publicKey)\n  if (publicKey.length === 64) {\n    // Convert to SEC1 for secp256k1\n    return publicKeyVerify(Buffer.concat([Buffer.from([4]), publicKey]))\n  }\n\n  if (!sanitize) {\n    return false\n  }\n\n  return publicKeyVerify(publicKey)\n}\n\n/**\n * Returns the ethereum address of a given public key.\n * Accepts \"Ethereum public keys\" and SEC1 encoded keys.\n * @param pubKey The two points of an uncompressed key, unless sanitize is enabled\n * @param sanitize Accept public keys in other formats\n */\nexport const pubToAddress = function (pubKey: Buffer, sanitize: boolean = false): Buffer {\n  assertIsBuffer(pubKey)\n  if (sanitize && pubKey.length !== 64) {\n    pubKey = Buffer.from(publicKeyConvert(pubKey, false).slice(1))\n  }\n  assert(pubKey.length === 64)\n  // Only take the lower 160bits of the hash\n  return keccak(pubKey).slice(-20)\n}\nexport const publicToAddress = pubToAddress\n\n/**\n * Returns the ethereum public key of a given private key.\n * @param privateKey A private key must be 256 bits wide\n */\nexport const privateToPublic = function (privateKey: Buffer): Buffer {\n  assertIsBuffer(privateKey)\n  // skip the type flag and use the X, Y points\n  return Buffer.from(publicKeyCreate(privateKey, false)).slice(1)\n}\n\n/**\n * Returns the ethereum address of a given private key.\n * @param privateKey A private key must be 256 bits wide\n */\nexport const privateToAddress = function (privateKey: Buffer): Buffer {\n  return publicToAddress(privateToPublic(privateKey))\n}\n\n/**\n * Converts a public key to the Ethereum format.\n */\nexport const importPublic = function (publicKey: Buffer): Buffer {\n  assertIsBuffer(publicKey)\n  if (publicKey.length !== 64) {\n    publicKey = Buffer.from(publicKeyConvert(publicKey, false).slice(1))\n  }\n  return publicKey\n}\n\n/**\n * Returns the zero address.\n */\nexport const zeroAddress = function (): string {\n  const addressLength = 20\n  const addr = zeros(addressLength)\n  return bufferToHex(addr)\n}\n\n/**\n * Checks if a given address is the zero address.\n */\nexport const isZeroAddress = function (hexAddress: string): boolean {\n  try {\n    assertIsString(hexAddress)\n  } catch (e: any) {\n    return false\n  }\n\n  const zeroAddr = zeroAddress()\n  return zeroAddr === hexAddress\n}\n", "import assert from 'assert'\nimport { BN } from './externals'\nimport { toBuffer, zeros } from './bytes'\nimport {\n  isValidAddress,\n  pubToAddress,\n  privateToAddress,\n  generateAddress,\n  generateAddress2,\n} from './account'\n\nexport class Address {\n  public readonly buf: Buffer\n\n  constructor(buf: Buffer) {\n    assert(buf.length === 20, 'Invalid address length')\n    this.buf = buf\n  }\n\n  /**\n   * Returns the zero address.\n   */\n  static zero(): Address {\n    return new Address(zeros(20))\n  }\n\n  /**\n   * Returns an Address object from a hex-encoded string.\n   * @param str - Hex-encoded address\n   */\n  static fromString(str: string): Address {\n    assert(isValidAddress(str), 'Invalid address')\n    return new Address(toBuffer(str))\n  }\n\n  /**\n   * Returns an address for a given public key.\n   * @param pubKey The two points of an uncompressed key\n   */\n  static fromPublicKey(pubKey: Buffer): Address {\n    assert(Buffer.isBuffer(pubKey), 'Public key should be Buffer')\n    const buf = pubToAddress(pubKey)\n    return new Address(buf)\n  }\n\n  /**\n   * Returns an address for a given private key.\n   * @param privateKey A private key must be 256 bits wide\n   */\n  static fromPrivateKey(privateKey: Buffer): Address {\n    assert(Buffer.isBuffer(privateKey), 'Private key should be Buffer')\n    const buf = privateToAddress(privateKey)\n    return new Address(buf)\n  }\n\n  /**\n   * Generates an address for a newly created contract.\n   * @param from The address which is creating this new address\n   * @param nonce The nonce of the from account\n   */\n  static generate(from: Address, nonce: BN): Address {\n    assert(BN.isBN(nonce))\n    return new Address(generateAddress(from.buf, nonce.toArrayLike(Buffer)))\n  }\n\n  /**\n   * Generates an address for a contract created using CREATE2.\n   * @param from The address which is creating this new address\n   * @param salt A salt\n   * @param initCode The init code of the contract being created\n   */\n  static generate2(from: Address, salt: Buffer, initCode: Buffer): Address {\n    assert(Buffer.isBuffer(salt))\n    assert(Buffer.isBuffer(initCode))\n    return new Address(generateAddress2(from.buf, salt, initCode))\n  }\n\n  /**\n   * Is address equal to another.\n   */\n  equals(address: Address): boolean {\n    return this.buf.equals(address.buf)\n  }\n\n  /**\n   * Is address zero.\n   */\n  isZero(): boolean {\n    return this.equals(Address.zero())\n  }\n\n  /**\n   * True if address is in the address range defined\n   * by EIP-1352\n   */\n  isPrecompileOrSystemAddress(): boolean {\n    const addressBN = new BN(this.buf)\n    const rangeMin = new BN(0)\n    const rangeMax = new BN('ffff', 'hex')\n\n    return addressBN.gte(rangeMin) && addressBN.lte(rangeMax)\n  }\n\n  /**\n   * Returns hex encoding of address.\n   */\n  toString(): string {\n    return '0x' + this.buf.toString('hex')\n  }\n\n  /**\n   * Returns Buffer representation of address.\n   */\n  toBuffer(): Buffer {\n    return Buffer.from(this.buf)\n  }\n}\n", "import { ecdsaSign, ecdsaRecover, publicKeyConvert } from 'ethereum-cryptography/secp256k1'\nimport { BN } from './externals'\nimport { toBuffer, setLengthLeft, bufferToHex, bufferToInt } from './bytes'\nimport { keccak } from './hash'\nimport { assertIsBuffer } from './helpers'\nimport { BNLike, toType, TypeOutput } from './types'\n\nexport interface ECDSASignature {\n  v: number\n  r: Buffer\n  s: Buffer\n}\n\nexport interface ECDSASignatureBuffer {\n  v: Buffer\n  r: Buffer\n  s: Buffer\n}\n\n/**\n * Returns the ECDSA signature of a message hash.\n */\nexport function ecsign(msgHash: Buffer, privateKey: Buffer, chainId?: number): ECDSASignature\nexport function ecsign(msgHash: Buffer, privateKey: Buffer, chainId: BNLike): ECDSASignatureBuffer\nexport function ecsign(msgHash: Buffer, privateKey: Buffer, chainId: any): any {\n  const { signature, recid: recovery } = ecdsaSign(msgHash, privateKey)\n\n  const r = Buffer.from(signature.slice(0, 32))\n  const s = Buffer.from(signature.slice(32, 64))\n\n  if (!chainId || typeof chainId === 'number') {\n    // return legacy type ECDSASignature (deprecated in favor of ECDSASignatureBuffer to handle large chainIds)\n    if (chainId && !Number.isSafeInteger(chainId)) {\n      throw new Error(\n        'The provided number is greater than MAX_SAFE_INTEGER (please use an alternative input type)'\n      )\n    }\n    const v = chainId ? recovery + (chainId * 2 + 35) : recovery + 27\n    return { r, s, v }\n  }\n\n  const chainIdBN = toType(chainId as BNLike, TypeOutput.BN)\n  const v = chainIdBN.muln(2).addn(35).addn(recovery).toArrayLike(Buffer)\n  return { r, s, v }\n}\n\nfunction calculateSigRecovery(v: BNLike, chainId?: BNLike): BN {\n  const vBN = toType(v, TypeOutput.BN)\n\n  if (vBN.eqn(0) || vBN.eqn(1)) return toType(v, TypeOutput.BN)\n\n  if (!chainId) {\n    return vBN.subn(27)\n  }\n  const chainIdBN = toType(chainId, TypeOutput.BN)\n  return vBN.sub(chainIdBN.muln(2).addn(35))\n}\n\nfunction isValidSigRecovery(recovery: number | BN): boolean {\n  const rec = new BN(recovery)\n  return rec.eqn(0) || rec.eqn(1)\n}\n\n/**\n * ECDSA public key recovery from signature.\n * NOTE: Accepts `v == 0 | v == 1` for EIP1559 transactions\n * @returns Recovered public key\n */\nexport const ecrecover = function (\n  msgHash: Buffer,\n  v: BNLike,\n  r: Buffer,\n  s: Buffer,\n  chainId?: BNLike\n): Buffer {\n  const signature = Buffer.concat([setLengthLeft(r, 32), setLengthLeft(s, 32)], 64)\n  const recovery = calculateSigRecovery(v, chainId)\n  if (!isValidSigRecovery(recovery)) {\n    throw new Error('Invalid signature v value')\n  }\n  const senderPubKey = ecdsaRecover(signature, recovery.toNumber(), msgHash)\n  return Buffer.from(publicKeyConvert(senderPubKey, false).slice(1))\n}\n\n/**\n * Convert signature parameters into the format of `eth_sign` RPC method.\n * NOTE: Accepts `v == 0 | v == 1` for EIP1559 transactions\n * @returns Signature\n */\nexport const toRpcSig = function (v: BNLike, r: Buffer, s: Buffer, chainId?: BNLike): string {\n  const recovery = calculateSigRecovery(v, chainId)\n  if (!isValidSigRecovery(recovery)) {\n    throw new Error('Invalid signature v value')\n  }\n\n  // geth (and the RPC eth_sign method) uses the 65 byte format used by Bitcoin\n  return bufferToHex(Buffer.concat([setLengthLeft(r, 32), setLengthLeft(s, 32), toBuffer(v)]))\n}\n\n/**\n * Convert signature parameters into the format of Compact Signature Representation (EIP-2098).\n * NOTE: Accepts `v == 0 | v == 1` for EIP1559 transactions\n * @returns Signature\n */\nexport const toCompactSig = function (v: BNLike, r: Buffer, s: Buffer, chainId?: BNLike): string {\n  const recovery = calculateSigRecovery(v, chainId)\n  if (!isValidSigRecovery(recovery)) {\n    throw new Error('Invalid signature v value')\n  }\n\n  const vn = toType(v, TypeOutput.Number)\n  let ss = s\n  if ((vn > 28 && vn % 2 === 1) || vn === 1 || vn === 28) {\n    ss = Buffer.from(s)\n    ss[0] |= 0x80\n  }\n\n  return bufferToHex(Buffer.concat([setLengthLeft(r, 32), setLengthLeft(ss, 32)]))\n}\n\n/**\n * Convert signature format of the `eth_sign` RPC method to signature parameters\n * NOTE: all because of a bug in geth: https://github.com/ethereum/go-ethereum/issues/2053\n * NOTE: After EIP1559, `v` could be `0` or `1` but this function assumes\n * it's a signed message (EIP-191 or EIP-712) adding `27` at the end. Remove if needed.\n */\nexport const fromRpcSig = function (sig: string): ECDSASignature {\n  const buf: Buffer = toBuffer(sig)\n\n  let r: Buffer\n  let s: Buffer\n  let v: number\n  if (buf.length >= 65) {\n    r = buf.slice(0, 32)\n    s = buf.slice(32, 64)\n    v = bufferToInt(buf.slice(64))\n  } else if (buf.length === 64) {\n    // Compact Signature Representation (https://eips.ethereum.org/EIPS/eip-2098)\n    r = buf.slice(0, 32)\n    s = buf.slice(32, 64)\n    v = bufferToInt(buf.slice(32, 33)) >> 7\n    s[0] &= 0x7f\n  } else {\n    throw new Error('Invalid signature length')\n  }\n\n  // support both versions of `eth_sign` responses\n  if (v < 27) {\n    v += 27\n  }\n\n  return {\n    v,\n    r,\n    s,\n  }\n}\n\n/**\n * Validate a ECDSA signature.\n * NOTE: Accepts `v == 0 | v == 1` for EIP1559 transactions\n * @param homesteadOrLater Indicates whether this is being used on either the homestead hardfork or a later one\n */\nexport const isValidSignature = function (\n  v: BNLike,\n  r: Buffer,\n  s: Buffer,\n  homesteadOrLater: boolean = true,\n  chainId?: BNLike\n): boolean {\n  const SECP256K1_N_DIV_2 = new BN(\n    '7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0',\n    16\n  )\n  const SECP256K1_N = new BN('fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141', 16)\n\n  if (r.length !== 32 || s.length !== 32) {\n    return false\n  }\n\n  if (!isValidSigRecovery(calculateSigRecovery(v, chainId))) {\n    return false\n  }\n\n  const rBN = new BN(r)\n  const sBN = new BN(s)\n\n  if (rBN.isZero() || rBN.gt(SECP256K1_N) || sBN.isZero() || sBN.gt(SECP256K1_N)) {\n    return false\n  }\n\n  if (homesteadOrLater && sBN.cmp(SECP256K1_N_DIV_2) === 1) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * Returns the keccak-256 hash of `message`, prefixed with the header used by the `eth_sign` RPC call.\n * The output of this function can be fed into `ecsign` to produce the same signature as the `eth_sign`\n * call for a given `message`, or fed to `ecrecover` along with a signature to recover the public key\n * used to produce the signature.\n */\nexport const hashPersonalMessage = function (message: Buffer): Buffer {\n  assertIsBuffer(message)\n  const prefix = Buffer.from(`\\u0019Ethereum Signed Message:\\n${message.length}`, 'utf-8')\n  return keccak(Buffer.concat([prefix, message]))\n}\n", "import assert from 'assert'\nimport { stripHexPrefix } from './internal'\nimport { rlp } from './externals'\nimport { toBuffer, baToJSON, unpadBuffer } from './bytes'\n\n/**\n * Defines properties on a `Object`. It make the assumption that underlying data is binary.\n * @param self the `Object` to define properties on\n * @param fields an array fields to define. Fields can contain:\n * * `name` - the name of the properties\n * * `length` - the number of bytes the field can have\n * * `allowLess` - if the field can be less than the length\n * * `allowEmpty`\n * @param data data to be validated against the definitions\n * @deprecated\n */\nexport const defineProperties = function (self: any, fields: any, data?: any) {\n  self.raw = []\n  self._fields = []\n\n  // attach the `toJSON`\n  self.toJSON = function (label: boolean = false) {\n    if (label) {\n      type Dict = { [key: string]: string }\n      const obj: Dict = {}\n      self._fields.forEach((field: string) => {\n        obj[field] = `0x${self[field].toString('hex')}`\n      })\n      return obj\n    }\n    return baToJSON(self.raw)\n  }\n\n  self.serialize = function serialize() {\n    return rlp.encode(self.raw)\n  }\n\n  fields.forEach((field: any, i: number) => {\n    self._fields.push(field.name)\n    function getter() {\n      return self.raw[i]\n    }\n    function setter(v: any) {\n      v = toBuffer(v)\n\n      if (v.toString('hex') === '00' && !field.allowZero) {\n        v = Buffer.allocUnsafe(0)\n      }\n\n      if (field.allowLess && field.length) {\n        v = unpadBuffer(v)\n        assert(\n          field.length >= v.length,\n          `The field ${field.name} must not have more ${field.length} bytes`\n        )\n      } else if (!(field.allowZero && v.length === 0) && field.length) {\n        assert(\n          field.length === v.length,\n          `The field ${field.name} must have byte length of ${field.length}`\n        )\n      }\n\n      self.raw[i] = v\n    }\n\n    Object.defineProperty(self, field.name, {\n      enumerable: true,\n      configurable: true,\n      get: getter,\n      set: setter,\n    })\n\n    if (field.default) {\n      self[field.name] = field.default\n    }\n\n    // attach alias\n    if (field.alias) {\n      Object.defineProperty(self, field.alias, {\n        enumerable: false,\n        configurable: true,\n        set: setter,\n        get: getter,\n      })\n    }\n  })\n\n  // if the constuctor is passed data\n  if (data) {\n    if (typeof data === 'string') {\n      data = Buffer.from(stripHexPrefix(data), 'hex')\n    }\n\n    if (Buffer.isBuffer(data)) {\n      data = rlp.decode(data)\n    }\n\n    if (Array.isArray(data)) {\n      if (data.length > self._fields.length) {\n        throw new Error('wrong number of fields in data')\n      }\n\n      // make sure all the items are buffers\n      data.forEach((d, i) => {\n        self[self._fields[i]] = toBuffer(d)\n      })\n    } else if (typeof data === 'object') {\n      const keys = Object.keys(data)\n      fields.forEach((field: any) => {\n        if (keys.indexOf(field.name) !== -1) self[field.name] = data[field.name]\n        if (keys.indexOf(field.alias) !== -1) self[field.alias] = data[field.alias]\n      })\n    } else {\n      throw new Error('invalid data')\n    }\n  }\n}\n", "/**\n * Constants\n */\nexport * from './constants'\n\n/**\n * Account class and helper functions\n */\nexport * from './account'\n\n/**\n * Address type\n */\nexport * from './address'\n\n/**\n * Hash functions\n */\nexport * from './hash'\n\n/**\n * ECDSA signature\n */\nexport * from './signature'\n\n/**\n * Utilities for manipulating Buffers, byte arrays, etc.\n */\nexport * from './bytes'\n\n/**\n * Function for definining properties on an object\n */\nexport * from './object'\n\n/**\n * External exports (BN, rlp)\n */\nexport * from './externals'\n\n/**\n * Helpful TypeScript types\n */\nexport * from './types'\n\n/**\n * Export ethjs-util methods\n */\nexport {\n  isHexPrefixed,\n  stripHexPrefix,\n  padToEven,\n  getBinarySize,\n  arrayContainsArray,\n  toAscii,\n  fromUtf8,\n  fromAscii,\n  getKeys,\n  isHexString,\n} from './internal'\n", "/**\n * Returns a `Boolean` on whether or not the a `String` starts with '0x'\n * @param {String} str the string input value\n * @return {Boolean} a boolean if it is or is not hex prefixed\n * @throws if the str input is not a string\n */\nmodule.exports = function isHexPrefixed(str) {\n  if (typeof str !== 'string') {\n    throw new Error(\"[is-hex-prefixed] value must be type 'string', is currently type \" + (typeof str) + \", while checking isHexPrefixed.\");\n  }\n\n  return str.slice(0, 2) === '0x';\n}\n", "var isHexPrefixed = require('is-hex-prefixed');\n\n/**\n * Removes '0x' from a given `String` is present\n * @param {String} str the string value\n * @return {String|Optional} a string by pass if necessary\n */\nmodule.exports = function stripHexPrefix(str) {\n  if (typeof str !== 'string') {\n    return str;\n  }\n\n  return isHexPrefixed(str) ? str.slice(2) : str;\n}\n"],
  "mappings": "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",
  "names": ["o", "_setPrototypeOf", "p", "_getPrototypeOf", "NodeError", "r", "_wrapNativeSuper", "Class", "_construct", "Parent", "args", "_setPrototypeOf", "o", "p", "_getPrototypeOf", "AssertionError", "require_implementation", "require_polyfill", "require_implementation", "require_polyfill", "require_shim", "r", "o", "arrayFromSet", "arrayFromMap", "o", "Comparison", "require_elliptic", "data", "require_elliptic", "TypeOutput", "Account", "Address", "require_src"]
}
