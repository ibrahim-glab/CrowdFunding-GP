{
  "version": 3,
  "sources": ["../../@thirdweb-dev/wallets/evm/connectors/frame/dist/thirdweb-dev-wallets-evm-connectors-frame.browser.esm.js"],
  "sourcesContent": ["import { _ as _classPrivateFieldInitSpec, a as _classPrivateFieldSet, b as _classPrivateFieldGet } from '../../../../dist/classPrivateFieldSet-a5db7c83.browser.esm.js';\r\nimport { _ as _defineProperty } from '../../../../dist/defineProperty-d7c057bf.browser.esm.js';\r\nimport { utils, providers } from 'ethers';\r\nimport { W as WagmiConnector } from '../../../../dist/WagmiConnector-2f14002d.browser.esm.js';\r\nimport { a as ConnectorNotFoundError, U as UserRejectedRequestError, R as ResourceUnavailableError, C as ChainNotConfiguredError, A as AddChainError, S as SwitchChainError } from '../../../../dist/errors-9f6736cb.browser.esm.js';\r\nimport { g as getValidPublicRPCUrl } from '../../../../dist/url-a45219bd.browser.esm.js';\r\nimport { n as normalizeChainId } from '../../../../dist/normalizeChainId-1fb9aedf.browser.esm.js';\r\nimport '@thirdweb-dev/chains';\r\nimport 'eventemitter3';\r\n\r\nvar _provider = /*#__PURE__*/new WeakMap();\r\nclass FrameConnector extends WagmiConnector {\r\n  constructor(_ref) {\r\n    let {\r\n      chains,\r\n      options: suppliedOptions,\r\n      connectorStorage\r\n    } = _ref;\r\n    const options = {\r\n      shimDisconnect: true,\r\n      ...suppliedOptions\r\n    };\r\n    super({\r\n      chains,\r\n      options\r\n    });\r\n    _defineProperty(this, \"id\", \"frame\");\r\n    _defineProperty(this, \"name\", \"Frame\");\r\n    _defineProperty(this, \"ready\", true);\r\n    _defineProperty(this, \"shimDisconnectKey\", `${this.id}.shimDisconnect`);\r\n    _classPrivateFieldInitSpec(this, _provider, {\r\n      writable: true,\r\n      value: void 0\r\n    });\r\n    _defineProperty(this, \"onAccountsChanged\", accounts => {\r\n      if (accounts.length === 0) {\r\n        this.emit(\"disconnect\");\r\n      } else {\r\n        this.emit(\"change\", {\r\n          account: utils.getAddress(accounts[0])\r\n        });\r\n      }\r\n    });\r\n    _defineProperty(this, \"onChainChanged\", chainId => {\r\n      const id = normalizeChainId(chainId);\r\n      const unsupported = this.isChainUnsupported(id);\r\n      this.emit(\"change\", {\r\n        chain: {\r\n          id,\r\n          unsupported\r\n        }\r\n      });\r\n    });\r\n    _defineProperty(this, \"onDisconnect\", () => {\r\n      this.emit(\"disconnect\");\r\n      // Remove shim signalling wallet is disconnected\r\n      if (this.options.shimDisconnect) {\r\n        this.connectorStorage.removeItem(this.shimDisconnectKey);\r\n      }\r\n    });\r\n    this.connectorStorage = connectorStorage;\r\n  }\r\n  async connect(config) {\r\n    try {\r\n      const provider = await this.getProvider();\r\n      if (!provider) {\r\n        throw new ConnectorNotFoundError();\r\n      }\r\n      this.setupListeners();\r\n      this.emit(\"message\", {\r\n        type: \"connecting\"\r\n      });\r\n      const accounts = await provider.request({\r\n        method: \"eth_requestAccounts\"\r\n      });\r\n      const account = utils.getAddress(accounts[0]);\r\n      // Switch to chain if provided\r\n      let id = await this.getChainId();\r\n      let unsupported = this.isChainUnsupported(id);\r\n      if (config?.chainId && id !== config?.chainId) {\r\n        const chain = await this.switchChain(config?.chainId);\r\n        id = chain.chainId;\r\n        unsupported = this.isChainUnsupported(id);\r\n      }\r\n\r\n      // Add shim to storage signalling wallet is connected\r\n      if (this.options.shimDisconnect) {\r\n        this.connectorStorage.setItem(this.shimDisconnectKey, \"true\");\r\n      }\r\n      return {\r\n        account,\r\n        provider,\r\n        chain: {\r\n          id,\r\n          unsupported\r\n        }\r\n      };\r\n    } catch (error) {\r\n      if (this.isUserRejectedRequestError(error)) {\r\n        throw new UserRejectedRequestError(error);\r\n      }\r\n      if (error.code === -32002) {\r\n        throw new ResourceUnavailableError(error);\r\n      }\r\n      throw error;\r\n    }\r\n  }\r\n  async disconnect() {\r\n    const provider = await this.getProvider();\r\n    if (!provider?.removeListener) {\r\n      return;\r\n    }\r\n    provider.removeListener(\"accountsChanged\", this.onAccountsChanged);\r\n    provider.removeListener(\"chainChanged\", this.onChainChanged);\r\n    provider.removeListener(\"disconnect\", this.onDisconnect);\r\n    if (!this.isInjected()) {\r\n      provider.close();\r\n    }\r\n\r\n    // Remove shim signalling wallet is disconnected\r\n    if (this.options.shimDisconnect) {\r\n      this.connectorStorage.removeItem(this.shimDisconnectKey);\r\n    }\r\n  }\r\n  async getAccount() {\r\n    const provider = await this.getProvider();\r\n    if (!provider) {\r\n      throw new ConnectorNotFoundError();\r\n    }\r\n    const accounts = await provider.request({\r\n      method: \"eth_accounts\"\r\n    });\r\n    // return checksum address\r\n    return utils.getAddress(accounts[0]);\r\n  }\r\n  async getChainId() {\r\n    const provider = await this.getProvider();\r\n    if (!provider) {\r\n      throw new ConnectorNotFoundError();\r\n    }\r\n    const chainId = await provider.request({\r\n      method: \"eth_chainId\"\r\n    });\r\n    return normalizeChainId(chainId);\r\n  }\r\n  async getProvider() {\r\n    _classPrivateFieldSet(this, _provider, this.isInjected() ? this.injectedProvider() : await this.createProvider());\r\n    return _classPrivateFieldGet(this, _provider);\r\n  }\r\n\r\n  /**\r\n   * get a `signer` for given `chainId`\r\n   */\r\n  async getSigner() {\r\n    let {\r\n      chainId\r\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\r\n    const [provider, account] = await Promise.all([this.getProvider(), this.getAccount()]);\r\n\r\n    // ethers.providers.Web3Provider\r\n    return new providers.Web3Provider(provider, chainId).getSigner(account);\r\n  }\r\n  async isAuthorized() {\r\n    try {\r\n      if (this.options.shimDisconnect &&\r\n      // If shim does not exist in storage, wallet is disconnected\r\n      !this.connectorStorage.getItem(this.shimDisconnectKey)) {\r\n        return false;\r\n      }\r\n      const provider = await this.getProvider();\r\n      if (!provider) {\r\n        throw new ConnectorNotFoundError();\r\n      }\r\n      const account = await this.getAccount();\r\n      return !!account;\r\n    } catch {\r\n      return false;\r\n    }\r\n  }\r\n  async switchChain(chainId) {\r\n    const provider = await this.getProvider();\r\n    if (!provider) {\r\n      throw new ConnectorNotFoundError();\r\n    }\r\n    const chainIdHex = utils.hexValue(chainId);\r\n    try {\r\n      await Promise.all([provider.request({\r\n        method: \"wallet_switchEthereumChain\",\r\n        params: [{\r\n          chainId: chainIdHex\r\n        }]\r\n      }), new Promise(res => this.on(\"change\", _ref2 => {\r\n        let {\r\n          chain\r\n        } = _ref2;\r\n        if (chain?.id === chainId) {\r\n          res();\r\n        }\r\n      }))]);\r\n      return this.chains.find(x => x.chainId === chainId) ?? {\r\n        chainId: chainId,\r\n        name: `Chain ${chainIdHex}`,\r\n        slug: `${chainIdHex}`,\r\n        nativeCurrency: {\r\n          name: \"Ether\",\r\n          decimals: 18,\r\n          symbol: \"ETH\"\r\n        },\r\n        rpc: [\"\"],\r\n        chain: \"\",\r\n        shortName: \"\",\r\n        testnet: true\r\n      };\r\n    } catch (switchChainError) {\r\n      const chain = this.chains.find(x => x.chainId === chainId);\r\n      if (!chain) {\r\n        throw new ChainNotConfiguredError({\r\n          chainId,\r\n          connectorId: this.id\r\n        });\r\n      }\r\n\r\n      // Indicates chain is not added to provider\r\n      if (switchChainError.code === 4902) {\r\n        try {\r\n          await provider.request({\r\n            method: \"wallet_addEthereumChain\",\r\n            params: [{\r\n              chainId: chainIdHex,\r\n              chainName: chain.name,\r\n              nativeCurrency: chain.nativeCurrency,\r\n              rpcUrls: getValidPublicRPCUrl(chain),\r\n              // no client id on purpose here\r\n              blockExplorerUrls: this.getBlockExplorerUrls(chain)\r\n            }]\r\n          });\r\n          const currentChainId = await this.getChainId();\r\n          if (currentChainId !== chainId) {\r\n            throw new UserRejectedRequestError(new Error(\"User rejected switch after adding network.\"));\r\n          }\r\n          return chain;\r\n        } catch (addChainError) {\r\n          // if user rejects request to add chain\r\n          if (this.isUserRejectedRequestError(addChainError)) {\r\n            throw new UserRejectedRequestError(addChainError);\r\n          }\r\n\r\n          // else other error\r\n          throw new AddChainError(addChainError.message);\r\n        }\r\n      }\r\n\r\n      // if user rejects request to switch chain\r\n      if (this.isUserRejectedRequestError(switchChainError)) {\r\n        throw new UserRejectedRequestError(switchChainError);\r\n      }\r\n\r\n      // else other error\r\n      throw new SwitchChainError(switchChainError);\r\n    }\r\n  }\r\n  async watchAsset(_ref3) {\r\n    let {\r\n      address,\r\n      decimals = 18,\r\n      image,\r\n      symbol\r\n    } = _ref3;\r\n    const provider = await this.getProvider();\r\n    if (!provider) {\r\n      throw new ConnectorNotFoundError();\r\n    }\r\n    return provider.request({\r\n      method: \"wallet_watchAsset\",\r\n      params: {\r\n        type: \"ERC20\",\r\n        options: {\r\n          address,\r\n          decimals,\r\n          image,\r\n          symbol\r\n        }\r\n      }\r\n    });\r\n  }\r\n  async setupListeners() {\r\n    const provider = await this.getProvider();\r\n    if (provider.on) {\r\n      provider.on(\"accountsChanged\", this.onAccountsChanged);\r\n      provider.on(\"chainChanged\", this.onChainChanged);\r\n      provider.on(\"disconnect\", this.onDisconnect);\r\n    }\r\n  }\r\n  isUserRejectedRequestError(error) {\r\n    return error.code === 4001;\r\n  }\r\n  injectedProvider() {\r\n    return window?.ethereum;\r\n  }\r\n  isInjected() {\r\n    return !!this.injectedProvider()?.isFrame;\r\n  }\r\n  async createProvider() {\r\n    const ethProvider = (await import('eth-provider')).default;\r\n    return ethProvider(\"frame\");\r\n  }\r\n}\r\n\r\nexport { FrameConnector };\r\n"],
  "mappings": "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",
  "names": []
}
