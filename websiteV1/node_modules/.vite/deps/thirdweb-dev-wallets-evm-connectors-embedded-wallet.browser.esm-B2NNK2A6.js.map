{
  "version": 3,
  "sources": ["../../@thirdweb-dev/wallets/evm/connectors/embedded-wallet/dist/thirdweb-dev-wallets-evm-connectors-embedded-wallet.browser.esm.js"],
  "sourcesContent": ["import { _ as _classPrivateFieldInitSpec, b as _classPrivateFieldGet, a as _classPrivateFieldSet } from '../../../../dist/classPrivateFieldSet-a5db7c83.browser.esm.js';\r\nimport { _ as _defineProperty } from '../../../../dist/defineProperty-d7c057bf.browser.esm.js';\r\nimport { utils } from 'ethers';\r\nimport { n as normalizeChainId } from '../../../../dist/normalizeChainId-1fb9aedf.browser.esm.js';\r\nimport { w as walletIds } from '../../../../dist/walletIds-8e17ffe6.browser.esm.js';\r\nimport { C as Connector } from '../../../../dist/connector-05689d68.browser.esm.js';\r\nimport { E as EmbeddedWalletSdk, U as UserWalletStatus, c as AuthProvider } from '../../../../dist/embedded-wallet-46af4c3a.browser.esm.js';\r\nimport 'eventemitter3';\r\nimport '@paperxyz/sdk-common-utilities';\r\nimport 'ethers/lib/utils';\r\nimport '@thirdweb-dev/sdk';\r\n\r\nvar _embeddedWalletSdk = /*#__PURE__*/new WeakMap();\r\nvar _signer = /*#__PURE__*/new WeakMap();\r\nclass EmbeddedWalletConnector extends Connector {\r\n  constructor(options) {\r\n    super();\r\n    _defineProperty(this, \"id\", walletIds.paper);\r\n    _defineProperty(this, \"name\", \"Embedded Wallet\");\r\n    _defineProperty(this, \"ready\", true);\r\n    _defineProperty(this, \"user\", null);\r\n    _classPrivateFieldInitSpec(this, _embeddedWalletSdk, {\r\n      writable: true,\r\n      value: void 0\r\n    });\r\n    _classPrivateFieldInitSpec(this, _signer, {\r\n      writable: true,\r\n      value: void 0\r\n    });\r\n    _defineProperty(this, \"onAccountsChanged\", async accounts => {\r\n      if (accounts.length === 0) {\r\n        await this.onDisconnect();\r\n      } else {\r\n        this.emit(\"change\", {\r\n          account: utils.getAddress(accounts[0])\r\n        });\r\n      }\r\n    });\r\n    _defineProperty(this, \"onChainChanged\", chainId => {\r\n      const id = normalizeChainId(chainId);\r\n      const unsupported = this.options.chains.findIndex(c => c.chainId === id) === -1;\r\n      this.emit(\"change\", {\r\n        chain: {\r\n          id,\r\n          unsupported\r\n        }\r\n      });\r\n    });\r\n    _defineProperty(this, \"onDisconnect\", async () => {\r\n      this.emit(\"disconnect\");\r\n    });\r\n    this.options = options;\r\n  }\r\n  getEmbeddedWalletSDK() {\r\n    if (!_classPrivateFieldGet(this, _embeddedWalletSdk)) {\r\n      _classPrivateFieldSet(this, _embeddedWalletSdk, new EmbeddedWalletSdk({\r\n        clientId: this.options.clientId,\r\n        chain: \"Ethereum\",\r\n        onAuthSuccess: this.options.onAuthSuccess\r\n      }));\r\n    }\r\n    return _classPrivateFieldGet(this, _embeddedWalletSdk);\r\n  }\r\n  async connect(args) {\r\n    // backwards compatibility - options should really be required here\r\n    if (!args) {\r\n      // default to iframe flow\r\n      const result = await this.authenticate({\r\n        strategy: \"iframe\"\r\n      });\r\n      if (!result.user) {\r\n        throw new Error(\"Error connecting User\");\r\n      }\r\n      this.user = result.user;\r\n    } else {\r\n      if (!args.authResult) {\r\n        throw new Error(\"Missing authData - call authenticate() first with your authentication strategy\");\r\n      }\r\n      if (!args.authResult.user) {\r\n        throw new Error(\"Missing authData.user - call authenticate() first with your authentication strategy\");\r\n      }\r\n      this.user = args.authResult.user;\r\n    }\r\n    if (args?.chainId) {\r\n      this.switchChain(args.chainId);\r\n    }\r\n    return this.getAddress();\r\n  }\r\n  async disconnect() {\r\n    const paper = _classPrivateFieldGet(this, _embeddedWalletSdk);\r\n    await paper?.auth.logout();\r\n    _classPrivateFieldSet(this, _signer, undefined);\r\n    _classPrivateFieldSet(this, _embeddedWalletSdk, undefined);\r\n    this.user = null;\r\n  }\r\n  async getAddress() {\r\n    if (!this.user) {\r\n      throw new Error(\"Embedded Wallet is not connected\");\r\n    }\r\n    return await this.getSigner().then(signer => signer.getAddress());\r\n  }\r\n  async isConnected() {\r\n    try {\r\n      const addr = await this.getAddress();\r\n      return !!addr;\r\n    } catch (e) {\r\n      return false;\r\n    }\r\n  }\r\n  async getProvider() {\r\n    const signer = await this.getSigner();\r\n    if (!signer.provider) {\r\n      throw new Error(\"Provider not found\");\r\n    }\r\n    return signer.provider;\r\n  }\r\n  async getSigner() {\r\n    if (_classPrivateFieldGet(this, _signer)) {\r\n      return _classPrivateFieldGet(this, _signer);\r\n    }\r\n    const user = await this.getUser();\r\n    const signer = await user.wallet.getEthersJsSigner({\r\n      rpcEndpoint: this.options.chain.rpc[0] || \"\" // TODO: handle chain.rpc being empty array\r\n    });\r\n    if (!signer) {\r\n      throw new Error(\"Signer not found\");\r\n    }\r\n    _classPrivateFieldSet(this, _signer, signer);\r\n    return signer;\r\n  }\r\n  async isAuthorized() {\r\n    return false;\r\n  }\r\n  async switchChain(chainId) {\r\n    const chain = this.options.chains.find(c => c.chainId === chainId);\r\n    if (!chain) {\r\n      throw new Error(\"Chain not configured\");\r\n    }\r\n    try {\r\n      // update chain in wallet\r\n      await this.user?.wallet.setChain({\r\n        chain: \"Ethereum\"\r\n      }); // just pass Ethereum no matter what chain we are going to connect\r\n      // update signer\r\n      _classPrivateFieldSet(this, _signer, await this.user?.wallet.getEthersJsSigner({\r\n        rpcEndpoint: chain.rpc[0] || \"\"\r\n      }));\r\n      this.emit(\"change\", {\r\n        chain: {\r\n          id: chainId,\r\n          unsupported: false\r\n        }\r\n      });\r\n    } catch (e) {\r\n      console.warn(\"Failed to switch chain\", e);\r\n    }\r\n  }\r\n  async setupListeners() {\r\n    return Promise.resolve();\r\n  }\r\n  updateChains(chains) {\r\n    this.options.chains = chains;\r\n  }\r\n  async getUser() {\r\n    if (!this.user || !this.user.wallet || !this.user.wallet.getEthersJsSigner // when serializing, functions are lost, need to rehydrate\r\n    ) {\r\n      const embeddedWalletSdk = this.getEmbeddedWalletSDK();\r\n      const user = await embeddedWalletSdk.getUser();\r\n      switch (user.status) {\r\n        case UserWalletStatus.LOGGED_IN_WALLET_INITIALIZED:\r\n          {\r\n            this.user = user;\r\n            break;\r\n          }\r\n        default:\r\n          {\r\n            // if logged out or unitialized, we can't get a signer, so throw an error\r\n            throw new Error(\"Embedded Wallet is not authenticated, please authenticate first\");\r\n          }\r\n      }\r\n    }\r\n    return this.user;\r\n  }\r\n  async getEmail() {\r\n    const user = await this.getUser();\r\n    return user.authDetails.email;\r\n  }\r\n  async getRecoveryInformation() {\r\n    const user = await this.getUser();\r\n    return user.authDetails;\r\n  }\r\n  async sendVerificationEmail(_ref) {\r\n    let {\r\n      email\r\n    } = _ref;\r\n    const ewSDK = this.getEmbeddedWalletSDK();\r\n    return ewSDK.auth.sendEmailLoginOtp({\r\n      email\r\n    });\r\n  }\r\n  async authenticate(params) {\r\n    const ewSDK = this.getEmbeddedWalletSDK();\r\n    const strategy = params.strategy;\r\n    switch (strategy) {\r\n      case \"email_verification\":\r\n        {\r\n          return await ewSDK.auth.verifyEmailLoginOtp({\r\n            email: params.email,\r\n            otp: params.verificationCode,\r\n            recoveryCode: params.recoveryCode\r\n          });\r\n        }\r\n      case \"apple\":\r\n      case \"facebook\":\r\n      case \"google\":\r\n        {\r\n          const oauthProvider = oauthStrategyToAuthProvider[strategy];\r\n          return ewSDK.auth.loginWithOauth({\r\n            oauthProvider,\r\n            closeOpenedWindow: params.closeOpenedWindow,\r\n            openedWindow: params.openedWindow\r\n          });\r\n        }\r\n      case \"jwt\":\r\n        {\r\n          return ewSDK.auth.loginWithCustomJwt({\r\n            jwt: params.jwt,\r\n            encryptionKey: params.encryptionKey\r\n          });\r\n        }\r\n      case \"auth_endpoint\":\r\n        {\r\n          return ewSDK.auth.loginWithCustomAuthEndpoint({\r\n            payload: params.payload,\r\n            encryptionKey: params.encryptionKey\r\n          });\r\n        }\r\n      case \"iframe_email_verification\":\r\n        {\r\n          return ewSDK.auth.loginWithEmailOtp({\r\n            email: params.email\r\n          });\r\n        }\r\n      case \"iframe\":\r\n        {\r\n          return ewSDK.auth.loginWithModal();\r\n        }\r\n      default:\r\n        assertUnreachable(strategy);\r\n    }\r\n  }\r\n}\r\nfunction assertUnreachable(x) {\r\n  throw new Error(\"Invalid param: \" + x);\r\n}\r\nconst oauthStrategyToAuthProvider = {\r\n  google: AuthProvider.GOOGLE,\r\n  facebook: AuthProvider.FACEBOOK,\r\n  apple: AuthProvider.APPLE\r\n};\r\n\r\nexport { EmbeddedWalletConnector };\r\n"],
  "mappings": "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",
  "names": []
}
