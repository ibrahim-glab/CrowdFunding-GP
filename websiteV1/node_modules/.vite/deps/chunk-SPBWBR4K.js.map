{
  "version": 3,
  "sources": ["../../@ethersproject/logger/src.ts/_version.ts", "../../@ethersproject/logger/src.ts/index.ts", "../../@ethersproject/bytes/src.ts/_version.ts", "../../@ethersproject/bytes/src.ts/index.ts", "../../@ethersproject/bignumber/src.ts/_version.ts", "../../@ethersproject/bignumber/src.ts/bignumber.ts", "../../@ethersproject/bignumber/src.ts/fixednumber.ts", "../../@ethersproject/bignumber/src.ts/index.ts", "../../@ethersproject/properties/src.ts/_version.ts", "../../@ethersproject/properties/src.ts/index.ts", "../../@ethersproject/constants/src.ts/addresses.ts", "../../@ethersproject/constants/src.ts/bignumbers.ts", "../../@ethersproject/constants/src.ts/hashes.ts", "../../@ethersproject/constants/src.ts/strings.ts", "../../@ethersproject/constants/src.ts/index.ts", "../../@ethersproject/abstract-signer/src.ts/_version.ts", "../../@ethersproject/abstract-signer/src.ts/index.ts", "../../@ethersproject/abstract-provider/src.ts/_version.ts", "../../@ethersproject/abstract-provider/src.ts/index.ts", "../../@ethersproject/networks/src.ts/_version.ts", "../../@ethersproject/networks/src.ts/index.ts", "../../@ethersproject/base64/src.ts/browser-base64.ts", "../../@ethersproject/base64/src.ts/index.ts", "../../@ethersproject/basex/src.ts/index.ts", "../../@ethersproject/keccak256/src.ts/index.ts", "../../@ethersproject/strings/src.ts/_version.ts", "../../@ethersproject/strings/src.ts/utf8.ts", "../../@ethersproject/strings/src.ts/bytes32.ts", "../../@ethersproject/strings/src.ts/idna.ts", "../../@ethersproject/strings/src.ts/index.ts", "../../@ethersproject/hash/src.ts/id.ts", "../../@ethersproject/hash/src.ts/_version.ts", "../../@ethersproject/hash/src.ts/ens-normalize/decoder.ts", "../../@ethersproject/hash/src.ts/ens-normalize/include.ts", "../../@ethersproject/hash/src.ts/ens-normalize/lib.ts", "../../@ethersproject/hash/src.ts/namehash.ts", "../../@ethersproject/hash/src.ts/message.ts", "../../@ethersproject/rlp/src.ts/_version.ts", "../../@ethersproject/rlp/src.ts/index.ts", "../../@ethersproject/address/src.ts/_version.ts", "../../@ethersproject/address/src.ts/index.ts", "../../@ethersproject/hash/src.ts/typed-data.ts", "../../@ethersproject/hash/src.ts/index.ts", "../../@ethersproject/sha2/src.ts/types.ts", "../../@ethersproject/sha2/src.ts/_version.ts", "../../@ethersproject/sha2/src.ts/browser-sha2.ts", "../../@ethersproject/sha2/src.ts/index.ts", "../../@ethersproject/web/src.ts/_version.ts", "../../@ethersproject/web/src.ts/browser-geturl.ts", "../../@ethersproject/web/src.ts/index.ts", "../../@ethersproject/providers/src.ts/_version.ts", "../../node_modules/minimalistic-assert/index.js", "../../node_modules/minimalistic-crypto-utils/lib/utils.js", "../../node_modules/elliptic/lib/elliptic/utils.js", "../../node_modules/elliptic/lib/elliptic/curve/base.js", "../../node_modules/inherits/inherits_browser.js", "../../node_modules/elliptic/lib/elliptic/curve/short.js", "../../node_modules/elliptic/lib/elliptic/curve/index.js", "../../node_modules/elliptic/lib/elliptic/curves.js", "../../node_modules/hmac-drbg/lib/hmac-drbg.js", "../../node_modules/elliptic/lib/elliptic/ec/key.js", "../../node_modules/elliptic/lib/elliptic/ec/signature.js", "../../node_modules/elliptic/lib/elliptic/ec/index.js", "../../node_modules/elliptic/lib/elliptic.js", "../../@ethersproject/signing-key/lib.esm/elliptic.js", "../../@ethersproject/signing-key/src.ts/_version.ts", "../../@ethersproject/signing-key/src.ts/index.ts", "../../@ethersproject/transactions/src.ts/_version.ts", "../../@ethersproject/transactions/src.ts/index.ts", "../../@ethersproject/providers/src.ts/formatter.ts", "../../@ethersproject/providers/src.ts/base-provider.ts", "../../@ethersproject/providers/src.ts/json-rpc-provider.ts", "../../@ethersproject/providers/src.ts/browser-ws.ts", "../../@ethersproject/providers/src.ts/websocket-provider.ts", "../../@ethersproject/providers/src.ts/url-json-rpc-provider.ts", "../../@ethersproject/providers/src.ts/alchemy-provider.ts", "../../@ethersproject/providers/src.ts/ankr-provider.ts", "../../@ethersproject/providers/src.ts/cloudflare-provider.ts", "../../@ethersproject/providers/src.ts/etherscan-provider.ts", "../../@ethersproject/random/src.ts/_version.ts", "../../@ethersproject/random/src.ts/browser-random.ts", "../../@ethersproject/random/src.ts/shuffle.ts", "../../@ethersproject/random/src.ts/index.ts", "../../@ethersproject/providers/src.ts/fallback-provider.ts", "../../@ethersproject/providers/src.ts/browser-ipc-provider.ts", "../../@ethersproject/providers/src.ts/infura-provider.ts", "../../@ethersproject/providers/src.ts/json-rpc-batch-provider.ts", "../../@ethersproject/providers/src.ts/nodesmith-provider.ts", "../../@ethersproject/providers/src.ts/pocket-provider.ts", "../../@ethersproject/providers/src.ts/web3-provider.ts", "../../@ethersproject/providers/src.ts/index.ts"],
  "sourcesContent": ["export const version = \"logger/5.7.0\";\n", "\"use strict\";\n\nlet _permanentCensorErrors = false;\nlet _censorErrors = false;\n\nconst LogLevels: { [ name: string ]: number } = { debug: 1, \"default\": 2, info: 2, warning: 3, error: 4, off: 5 };\nlet _logLevel = LogLevels[\"default\"];\n\nimport { version } from \"./_version\";\n\nlet _globalLogger: Logger = null;\n\nfunction _checkNormalize(): string {\n    try {\n        const missing: Array<string> = [ ];\n\n        // Make sure all forms of normalization are supported\n        [\"NFD\", \"NFC\", \"NFKD\", \"NFKC\"].forEach((form) => {\n            try {\n                if (\"test\".normalize(form) !== \"test\") {\n                    throw new Error(\"bad normalize\");\n                };\n            } catch(error) {\n                missing.push(form);\n            }\n        });\n\n        if (missing.length) {\n            throw new Error(\"missing \" + missing.join(\", \"));\n        }\n\n        if (String.fromCharCode(0xe9).normalize(\"NFD\") !== String.fromCharCode(0x65, 0x0301)) {\n            throw new Error(\"broken implementation\")\n        }\n    } catch (error) {\n        return error.message;\n    }\n\n    return null;\n}\n\nconst _normalizeError = _checkNormalize();\n\nexport enum LogLevel {\n    DEBUG    = \"DEBUG\",\n    INFO     = \"INFO\",\n    WARNING  = \"WARNING\",\n    ERROR    = \"ERROR\",\n    OFF      = \"OFF\"\n}\n\n\nexport enum ErrorCode {\n\n    ///////////////////\n    // Generic Errors\n\n    // Unknown Error\n    UNKNOWN_ERROR = \"UNKNOWN_ERROR\",\n\n    // Not Implemented\n    NOT_IMPLEMENTED = \"NOT_IMPLEMENTED\",\n\n    // Unsupported Operation\n    //   - operation\n    UNSUPPORTED_OPERATION = \"UNSUPPORTED_OPERATION\",\n\n    // Network Error (i.e. Ethereum Network, such as an invalid chain ID)\n    //   - event (\"noNetwork\" is not re-thrown in provider.ready; otherwise thrown)\n    NETWORK_ERROR = \"NETWORK_ERROR\",\n\n    // Some sort of bad response from the server\n    SERVER_ERROR = \"SERVER_ERROR\",\n\n    // Timeout\n    TIMEOUT = \"TIMEOUT\",\n\n    ///////////////////\n    // Operational  Errors\n\n    // Buffer Overrun\n    BUFFER_OVERRUN = \"BUFFER_OVERRUN\",\n\n    // Numeric Fault\n    //   - operation: the operation being executed\n    //   - fault: the reason this faulted\n    NUMERIC_FAULT = \"NUMERIC_FAULT\",\n\n\n    ///////////////////\n    // Argument Errors\n\n    // Missing new operator to an object\n    //  - name: The name of the class\n    MISSING_NEW = \"MISSING_NEW\",\n\n    // Invalid argument (e.g. value is incompatible with type) to a function:\n    //   - argument: The argument name that was invalid\n    //   - value: The value of the argument\n    INVALID_ARGUMENT = \"INVALID_ARGUMENT\",\n\n    // Missing argument to a function:\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    MISSING_ARGUMENT = \"MISSING_ARGUMENT\",\n\n    // Too many arguments\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    UNEXPECTED_ARGUMENT = \"UNEXPECTED_ARGUMENT\",\n\n\n    ///////////////////\n    // Blockchain Errors\n\n    // Call exception\n    //  - transaction: the transaction\n    //  - address?: the contract address\n    //  - args?: The arguments passed into the function\n    //  - method?: The Solidity method signature\n    //  - errorSignature?: The EIP848 error signature\n    //  - errorArgs?: The EIP848 error parameters\n    //  - reason: The reason (only for EIP848 \"Error(string)\")\n    CALL_EXCEPTION = \"CALL_EXCEPTION\",\n\n    // Insufficient funds (< value + gasLimit * gasPrice)\n    //   - transaction: the transaction attempted\n    INSUFFICIENT_FUNDS = \"INSUFFICIENT_FUNDS\",\n\n    // Nonce has already been used\n    //   - transaction: the transaction attempted\n    NONCE_EXPIRED = \"NONCE_EXPIRED\",\n\n    // The replacement fee for the transaction is too low\n    //   - transaction: the transaction attempted\n    REPLACEMENT_UNDERPRICED = \"REPLACEMENT_UNDERPRICED\",\n\n    // The gas limit could not be estimated\n    //   - transaction: the transaction passed to estimateGas\n    UNPREDICTABLE_GAS_LIMIT = \"UNPREDICTABLE_GAS_LIMIT\",\n\n    // The transaction was replaced by one with a higher gas price\n    //   - reason: \"cancelled\", \"replaced\" or \"repriced\"\n    //   - cancelled: true if reason == \"cancelled\" or reason == \"replaced\")\n    //   - hash: original transaction hash\n    //   - replacement: the full TransactionsResponse for the replacement\n    //   - receipt: the receipt of the replacement\n    TRANSACTION_REPLACED = \"TRANSACTION_REPLACED\",\n\n\n    ///////////////////\n    // Interaction Errors\n\n    // The user rejected the action, such as signing a message or sending\n    // a transaction\n    ACTION_REJECTED = \"ACTION_REJECTED\",\n};\n\nconst HEX = \"0123456789abcdef\";\n\nexport class Logger {\n    readonly version: string;\n\n    static errors = ErrorCode;\n\n    static levels = LogLevel;\n\n    constructor(version: string) {\n        Object.defineProperty(this, \"version\", {\n            enumerable: true,\n            value: version,\n            writable: false\n        });\n    }\n\n    _log(logLevel: LogLevel, args: Array<any>): void {\n        const level = logLevel.toLowerCase();\n        if (LogLevels[level] == null) {\n            this.throwArgumentError(\"invalid log level name\", \"logLevel\", logLevel);\n        }\n        if (_logLevel > LogLevels[level]) { return; }\n        console.log.apply(console, args);\n    }\n\n    debug(...args: Array<any>): void {\n        this._log(Logger.levels.DEBUG, args);\n    }\n\n    info(...args: Array<any>): void {\n        this._log(Logger.levels.INFO, args);\n    }\n\n    warn(...args: Array<any>): void {\n        this._log(Logger.levels.WARNING, args);\n    }\n\n    makeError(message: string, code?: ErrorCode, params?: any): Error {\n        // Errors are being censored\n        if (_censorErrors) {\n            return this.makeError(\"censored error\", code, { });\n        }\n\n        if (!code) { code = Logger.errors.UNKNOWN_ERROR; }\n        if (!params) { params = {}; }\n\n        const messageDetails: Array<string> = [];\n        Object.keys(params).forEach((key) => {\n            const value = params[key];\n            try {\n                if (value instanceof Uint8Array) {\n                    let hex = \"\";\n                    for (let i = 0; i < value.length; i++) {\n                      hex += HEX[value[i] >> 4];\n                      hex += HEX[value[i] & 0x0f];\n                    }\n                    messageDetails.push(key + \"=Uint8Array(0x\" + hex + \")\");\n                } else {\n                    messageDetails.push(key + \"=\" + JSON.stringify(value));\n                }\n            } catch (error) {\n                messageDetails.push(key + \"=\" + JSON.stringify(params[key].toString()));\n            }\n        });\n        messageDetails.push(`code=${ code }`);\n        messageDetails.push(`version=${ this.version }`);\n\n        const reason = message;\n\n        let url = \"\";\n\n        switch (code) {\n            case ErrorCode.NUMERIC_FAULT: {\n                url = \"NUMERIC_FAULT\";\n                const fault = message;\n\n                switch (fault) {\n                    case \"overflow\": case \"underflow\": case \"division-by-zero\":\n                        url += \"-\" + fault;\n                        break;\n                    case \"negative-power\": case \"negative-width\":\n                        url += \"-unsupported\";\n                        break;\n                    case \"unbound-bitwise-result\":\n                        url += \"-unbound-result\";\n                        break;\n                }\n                break;\n            }\n            case ErrorCode.CALL_EXCEPTION:\n            case ErrorCode.INSUFFICIENT_FUNDS:\n            case ErrorCode.MISSING_NEW:\n            case ErrorCode.NONCE_EXPIRED:\n            case ErrorCode.REPLACEMENT_UNDERPRICED:\n            case ErrorCode.TRANSACTION_REPLACED:\n            case ErrorCode.UNPREDICTABLE_GAS_LIMIT:\n                url = code;\n                break;\n        }\n\n        if (url) {\n            message += \" [ See: https:/\\/links.ethers.org/v5-errors-\" + url + \" ]\";\n        }\n\n        if (messageDetails.length) {\n            message += \" (\" + messageDetails.join(\", \") + \")\";\n        }\n\n        // @TODO: Any??\n        const error: any = new Error(message);\n        error.reason = reason;\n        error.code = code\n\n        Object.keys(params).forEach(function(key) {\n            error[key] = params[key];\n        });\n\n        return error;\n    }\n\n    throwError(message: string, code?: ErrorCode, params?: any): never {\n        throw this.makeError(message, code, params);\n    }\n\n    throwArgumentError(message: string, name: string, value: any): never {\n        return this.throwError(message, Logger.errors.INVALID_ARGUMENT, {\n            argument: name,\n            value: value\n        });\n    }\n\n    assert(condition: any, message: string, code?: ErrorCode, params?: any): void {\n        if (!!condition) { return; }\n        this.throwError(message, code, params);\n    }\n\n    assertArgument(condition: any, message: string, name: string, value: any): void {\n        if (!!condition) { return; }\n        this.throwArgumentError(message, name, value);\n    }\n\n    checkNormalize(message?: string): void {\n        if (message == null) { message = \"platform missing String.prototype.normalize\"; }\n        if (_normalizeError) {\n            this.throwError(\"platform missing String.prototype.normalize\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"String.prototype.normalize\", form: _normalizeError\n            });\n        }\n    }\n\n    checkSafeUint53(value: number, message?: string): void {\n        if (typeof(value) !== \"number\") { return; }\n\n        if (message == null) { message = \"value not safe\"; }\n\n        if (value < 0 || value >= 0x1fffffffffffff) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"out-of-safe-range\",\n                value: value\n            });\n        }\n\n        if (value % 1) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"non-integer\",\n                value: value\n            });\n        }\n    }\n\n    checkArgumentCount(count: number, expectedCount: number, message?: string): void {\n        if (message) {\n            message = \": \" + message;\n        } else {\n            message = \"\";\n        }\n\n        if (count < expectedCount) {\n            this.throwError(\"missing argument\" + message, Logger.errors.MISSING_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n\n        if (count > expectedCount) {\n            this.throwError(\"too many arguments\" + message, Logger.errors.UNEXPECTED_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n    }\n\n    checkNew(target: any, kind: any): void {\n        if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n\n    checkAbstract(target: any, kind: any): void {\n        if (target === kind) {\n            this.throwError(\n                \"cannot instantiate abstract class \" + JSON.stringify(kind.name) + \" directly; use a sub-class\",\n                Logger.errors.UNSUPPORTED_OPERATION,\n                { name: target.name, operation: \"new\" }\n            );\n        } else if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n\n    static globalLogger(): Logger {\n        if (!_globalLogger) { _globalLogger = new Logger(version); }\n        return _globalLogger;\n    }\n\n    static setCensorship(censorship: boolean, permanent?: boolean): void {\n        if (!censorship && permanent) {\n            this.globalLogger().throwError(\"cannot permanently disable censorship\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n\n        if (_permanentCensorErrors) {\n            if (!censorship) { return; }\n            this.globalLogger().throwError(\"error censorship permanent\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n\n        _censorErrors = !!censorship;\n        _permanentCensorErrors = !!permanent;\n    }\n\n    static setLogLevel(logLevel: LogLevel): void {\n        const level = LogLevels[logLevel.toLowerCase()];\n        if (level == null) {\n            Logger.globalLogger().warn(\"invalid log level - \" + logLevel);\n            return;\n        }\n        _logLevel = level;\n    }\n\n    static from(version: string): Logger {\n        return new Logger(version);\n    }\n}\n", "export const version = \"bytes/5.7.0\";\n", "\"use strict\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n///////////////////////////////\n// Exported Types\n\nexport type Bytes = ArrayLike<number>;\n\nexport type BytesLike = Bytes | string;\n\nexport type DataOptions = {\n    allowMissingPrefix?: boolean;\n    hexPad?: \"left\" | \"right\" | null;\n};\n\nexport interface Hexable {\n    toHexString(): string;\n}\n\n\n/*\nexport interface HexString {\n    length: number;\n    substring: (start: number, end?: number) => string;\n\n    [index: number]: string;\n}\n*/\n\nexport type SignatureLike  = {\n    r: string;\n    s?: string;\n    _vs?: string,\n    recoveryParam?: number;\n    v?: number;\n} | BytesLike;\n\nexport interface Signature {\n    r: string;\n\n    s: string;\n    _vs: string,\n\n    recoveryParam: number;\n    v: number;\n\n    yParityAndS: string\n    compact: string;\n}\n\n///////////////////////////////\n\n\nfunction isHexable(value: any): value is Hexable {\n    return !!(value.toHexString);\n}\n\nfunction addSlice(array: Uint8Array): Uint8Array {\n    if (array.slice) { return array; }\n\n    array.slice = function() {\n        const args = Array.prototype.slice.call(arguments);\n        return addSlice(new Uint8Array(Array.prototype.slice.apply(array, args)));\n    }\n\n    return array;\n}\n\nexport function isBytesLike(value: any): value is BytesLike {\n    return ((isHexString(value) && !(value.length % 2)) || isBytes(value));\n}\n\nfunction isInteger(value: number) {\n    return (typeof(value) === \"number\" && value == value && (value % 1) === 0);\n}\n\nexport function isBytes(value: any): value is Bytes {\n    if (value == null) { return false; }\n\n    if (value.constructor === Uint8Array) { return true; }\n    if (typeof(value) === \"string\") { return false; }\n    if (!isInteger(value.length) || value.length < 0) { return false; }\n\n    for (let i = 0; i < value.length; i++) {\n        const v = value[i];\n        if (!isInteger(v) || v < 0 || v >= 256) { return false; }\n    }\n    return true;\n}\n\n\nexport function arrayify(value: BytesLike | Hexable | number, options?: DataOptions): Uint8Array {\n    if (!options) { options = { }; }\n\n    if (typeof(value) === \"number\") {\n        logger.checkSafeUint53(value, \"invalid arrayify value\");\n\n        const result = [];\n        while (value) {\n            result.unshift(value & 0xff);\n            value = parseInt(String(value / 256));\n        }\n        if (result.length === 0) { result.push(0); }\n\n        return addSlice(new Uint8Array(result));\n    }\n\n    if (options.allowMissingPrefix && typeof(value) === \"string\" && value.substring(0, 2) !== \"0x\") {\n         value = \"0x\" + value;\n    }\n\n    if (isHexable(value)) { value = value.toHexString(); }\n\n    if (isHexString(value)) {\n        let hex = (<string>value).substring(2);\n        if (hex.length % 2) {\n            if (options.hexPad === \"left\") {\n                hex = \"0\" + hex;\n            } else if (options.hexPad === \"right\") {\n                hex += \"0\";\n            } else {\n                logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n            }\n        }\n\n        const result = [];\n        for (let i = 0; i < hex.length; i += 2) {\n            result.push(parseInt(hex.substring(i, i + 2), 16));\n        }\n\n        return addSlice(new Uint8Array(result));\n    }\n\n    if (isBytes(value)) {\n        return addSlice(new Uint8Array(value));\n    }\n\n    return logger.throwArgumentError(\"invalid arrayify value\", \"value\", value);\n}\n\nexport function concat(items: ReadonlyArray<BytesLike>): Uint8Array {\n    const objects = items.map(item => arrayify(item));\n    const length = objects.reduce((accum, item) => (accum + item.length), 0);\n\n    const result = new Uint8Array(length);\n\n    objects.reduce((offset, object) => {\n        result.set(object, offset);\n        return offset + object.length;\n    }, 0);\n\n    return addSlice(result);\n}\n\nexport function stripZeros(value: BytesLike): Uint8Array {\n    let result: Uint8Array = arrayify(value);\n\n    if (result.length === 0) { return result; }\n\n    // Find the first non-zero entry\n    let start = 0;\n    while (start < result.length && result[start] === 0) { start++ }\n\n    // If we started with zeros, strip them\n    if (start) {\n        result = result.slice(start);\n    }\n\n    return result;\n}\n\nexport function zeroPad(value: BytesLike, length: number): Uint8Array {\n    value = arrayify(value);\n\n    if (value.length > length) {\n        logger.throwArgumentError(\"value out of range\", \"value\", arguments[0]);\n    }\n\n    const result = new Uint8Array(length);\n    result.set(value, length - value.length);\n    return addSlice(result);\n}\n\n\nexport function isHexString(value: any, length?: number): boolean {\n    if (typeof(value) !== \"string\" || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n        return false\n    }\n    if (length && value.length !== 2 + 2 * length) { return false; }\n    return true;\n}\n\nconst HexCharacters: string = \"0123456789abcdef\";\n\nexport function hexlify(value: BytesLike | Hexable | number | bigint, options?: DataOptions): string {\n    if (!options) { options = { }; }\n\n    if (typeof(value) === \"number\") {\n        logger.checkSafeUint53(value, \"invalid hexlify value\");\n\n        let hex = \"\";\n        while (value) {\n            hex = HexCharacters[value & 0xf] + hex;\n            value = Math.floor(value / 16);\n        }\n\n        if (hex.length) {\n            if (hex.length % 2) { hex = \"0\" + hex; }\n            return \"0x\" + hex;\n        }\n\n        return \"0x00\";\n    }\n\n    if (typeof(value) === \"bigint\") {\n        value = value.toString(16);\n        if (value.length % 2) { return (\"0x0\" + value); }\n        return \"0x\" + value;\n    }\n\n    if (options.allowMissingPrefix && typeof(value) === \"string\" && value.substring(0, 2) !== \"0x\") {\n         value = \"0x\" + value;\n    }\n\n    if (isHexable(value)) { return value.toHexString(); }\n\n    if (isHexString(value)) {\n        if ((<string>value).length % 2) {\n            if (options.hexPad === \"left\") {\n                value = \"0x0\" + (<string>value).substring(2);\n            } else if (options.hexPad === \"right\") {\n                value += \"0\";\n            } else {\n                logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n            }\n        }\n        return (<string>value).toLowerCase();\n    }\n\n    if (isBytes(value)) {\n        let result = \"0x\";\n        for (let i = 0; i < value.length; i++) {\n             let v = value[i];\n             result += HexCharacters[(v & 0xf0) >> 4] + HexCharacters[v & 0x0f];\n        }\n        return result;\n    }\n\n    return logger.throwArgumentError(\"invalid hexlify value\", \"value\", value);\n}\n\n/*\nfunction unoddify(value: BytesLike | Hexable | number): BytesLike | Hexable | number {\n    if (typeof(value) === \"string\" && value.length % 2 && value.substring(0, 2) === \"0x\") {\n        return \"0x0\" + value.substring(2);\n    }\n    return value;\n}\n*/\nexport function hexDataLength(data: BytesLike) {\n    if (typeof(data) !== \"string\") {\n        data = hexlify(data);\n    } else if (!isHexString(data) || (data.length % 2)) {\n        return null;\n    }\n\n    return (data.length - 2) / 2;\n}\n\nexport function hexDataSlice(data: BytesLike, offset: number, endOffset?: number): string {\n    if (typeof(data) !== \"string\") {\n        data = hexlify(data);\n    } else if (!isHexString(data) || (data.length % 2)) {\n        logger.throwArgumentError(\"invalid hexData\", \"value\", data );\n    }\n\n    offset = 2 + 2 * offset;\n\n    if (endOffset != null) {\n        return \"0x\" + data.substring(offset, 2 + 2 * endOffset);\n    }\n\n    return \"0x\" + data.substring(offset);\n}\n\nexport function hexConcat(items: ReadonlyArray<BytesLike>): string {\n    let result = \"0x\";\n    items.forEach((item) => {\n        result += hexlify(item).substring(2);\n    });\n    return result;\n}\n\nexport function hexValue(value: BytesLike | Hexable | number | bigint): string {\n    const trimmed = hexStripZeros(hexlify(value, { hexPad: \"left\" }));\n    if (trimmed === \"0x\") { return \"0x0\"; }\n    return trimmed;\n}\n\nexport function hexStripZeros(value: BytesLike): string {\n    if (typeof(value) !== \"string\") { value = hexlify(value); }\n\n    if (!isHexString(value)) {\n        logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n    }\n    value = value.substring(2);\n    let offset = 0;\n    while (offset < value.length && value[offset] === \"0\") { offset++; }\n    return \"0x\" + value.substring(offset);\n}\n\nexport function hexZeroPad(value: BytesLike, length: number): string {\n    if (typeof(value) !== \"string\") {\n        value = hexlify(value);\n    } else if (!isHexString(value)) {\n        logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n    }\n\n    if (value.length > 2 * length + 2) {\n        logger.throwArgumentError(\"value out of range\", \"value\", arguments[1]);\n    }\n\n    while (value.length < 2 * length + 2) {\n        value = \"0x0\" + value.substring(2);\n    }\n\n    return value;\n}\n\nexport function splitSignature(signature: SignatureLike): Signature {\n\n    const result = {\n        r: \"0x\",\n        s: \"0x\",\n        _vs: \"0x\",\n        recoveryParam: 0,\n        v: 0,\n        yParityAndS: \"0x\",\n        compact: \"0x\"\n    };\n\n    if (isBytesLike(signature)) {\n        let bytes: Uint8Array = arrayify(signature);\n\n        // Get the r, s and v\n        if (bytes.length === 64) {\n            // EIP-2098; pull the v from the top bit of s and clear it\n            result.v = 27 + (bytes[32] >> 7);\n            bytes[32] &= 0x7f;\n\n            result.r = hexlify(bytes.slice(0, 32));\n            result.s = hexlify(bytes.slice(32, 64));\n\n        } else if (bytes.length === 65) {\n            result.r = hexlify(bytes.slice(0, 32));\n            result.s = hexlify(bytes.slice(32, 64));\n            result.v = bytes[64];\n        } else {\n\n            logger.throwArgumentError(\"invalid signature string\", \"signature\", signature);\n        }\n\n\n        // Allow a recid to be used as the v\n        if (result.v < 27) {\n            if (result.v === 0 || result.v === 1) {\n                result.v += 27;\n            } else {\n                logger.throwArgumentError(\"signature invalid v byte\", \"signature\", signature);\n            }\n        }\n\n        // Compute recoveryParam from v\n        result.recoveryParam = 1 - (result.v % 2);\n\n        // Compute _vs from recoveryParam and s\n        if (result.recoveryParam) { bytes[32] |= 0x80; }\n        result._vs = hexlify(bytes.slice(32, 64))\n\n    } else {\n        result.r = signature.r;\n        result.s = signature.s;\n        result.v = signature.v;\n        result.recoveryParam = signature.recoveryParam;\n        result._vs = signature._vs;\n\n        // If the _vs is available, use it to populate missing s, v and recoveryParam\n        // and verify non-missing s, v and recoveryParam\n        if (result._vs != null) {\n            const vs = zeroPad(arrayify(result._vs), 32);\n            result._vs = hexlify(vs);\n\n            // Set or check the recid\n            const recoveryParam = ((vs[0] >= 128) ? 1: 0);\n            if (result.recoveryParam == null) {\n                result.recoveryParam = recoveryParam;\n            } else if (result.recoveryParam !== recoveryParam) {\n                logger.throwArgumentError(\"signature recoveryParam mismatch _vs\", \"signature\", signature);\n            }\n\n            // Set or check the s\n            vs[0] &= 0x7f;\n            const s = hexlify(vs);\n            if (result.s == null) {\n                result.s = s;\n            } else if (result.s !== s) {\n                logger.throwArgumentError(\"signature v mismatch _vs\", \"signature\", signature);\n            }\n        }\n\n        // Use recid and v to populate each other\n        if (result.recoveryParam == null) {\n            if (result.v == null) {\n                logger.throwArgumentError(\"signature missing v and recoveryParam\", \"signature\", signature);\n            } else if (result.v === 0 || result.v === 1) {\n                result.recoveryParam = result.v;\n            } else {\n                result.recoveryParam = 1 - (result.v % 2);\n            }\n        } else {\n            if (result.v == null) {\n                result.v = 27 + result.recoveryParam;\n            } else {\n                const recId = (result.v === 0 || result.v === 1) ? result.v :(1 - (result.v % 2));\n                if (result.recoveryParam !== recId) {\n                    logger.throwArgumentError(\"signature recoveryParam mismatch v\", \"signature\", signature);\n                }\n            }\n        }\n\n        if (result.r == null || !isHexString(result.r)) {\n            logger.throwArgumentError(\"signature missing or invalid r\", \"signature\", signature);\n        } else {\n            result.r = hexZeroPad(result.r, 32);\n        }\n\n        if (result.s == null || !isHexString(result.s)) {\n            logger.throwArgumentError(\"signature missing or invalid s\", \"signature\", signature);\n        } else {\n            result.s = hexZeroPad(result.s, 32);\n        }\n\n        const vs = arrayify(result.s);\n        if (vs[0] >= 128) {\n            logger.throwArgumentError(\"signature s out of range\", \"signature\", signature);\n        }\n        if (result.recoveryParam) { vs[0] |= 0x80; }\n        const _vs = hexlify(vs);\n\n        if (result._vs) {\n            if (!isHexString(result._vs)) {\n                logger.throwArgumentError(\"signature invalid _vs\", \"signature\", signature);\n            }\n            result._vs = hexZeroPad(result._vs, 32);\n        }\n\n        // Set or check the _vs\n        if (result._vs == null) {\n            result._vs = _vs;\n        } else if (result._vs !== _vs) {\n            logger.throwArgumentError(\"signature _vs mismatch v and s\", \"signature\", signature);\n        }\n    }\n\n    result.yParityAndS = result._vs;\n    result.compact = result.r + result.yParityAndS.substring(2);\n\n    return result;\n}\n\nexport function joinSignature(signature: SignatureLike): string {\n    signature = splitSignature(signature);\n\n    return hexlify(concat([\n         signature.r,\n         signature.s,\n         (signature.recoveryParam ? \"0x1c\": \"0x1b\")\n    ]));\n}\n\n", "export const version = \"bignumber/5.7.0\";\n", "\"use strict\";\n\n/**\n *  BigNumber\n *\n *  A wrapper around the BN.js object. We use the BN.js library\n *  because it is used by elliptic, so it is required regardless.\n *\n */\n\nimport _BN from \"bn.js\";\nimport BN = _BN.BN;\n\nimport { Bytes, Hexable, hexlify, isBytes, isHexString } from \"@ethersproject/bytes\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nconst _constructorGuard = { };\n\nconst MAX_SAFE = 0x1fffffffffffff;\n\n\nexport type BigNumberish = BigNumber | Bytes | bigint | string | number;\n\nexport function isBigNumberish(value: any): value is BigNumberish {\n    return (value != null) && (\n        BigNumber.isBigNumber(value) ||\n        (typeof(value) === \"number\" && (value % 1) === 0) ||\n        (typeof(value) === \"string\" && !!value.match(/^-?[0-9]+$/)) ||\n        isHexString(value) ||\n        (typeof(value) === \"bigint\") ||\n        isBytes(value)\n    );\n}\n\n// Only warn about passing 10 into radix once\nlet _warnedToStringRadix = false;\n\nexport class BigNumber implements Hexable {\n    readonly _hex: string;\n    readonly _isBigNumber: boolean;\n\n    constructor(constructorGuard: any, hex: string) {\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"cannot call constructor directly; use BigNumber.from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new (BigNumber)\"\n            });\n        }\n\n        this._hex = hex;\n        this._isBigNumber = true;\n\n        Object.freeze(this);\n    }\n\n    fromTwos(value: number): BigNumber {\n        return toBigNumber(toBN(this).fromTwos(value));\n    }\n\n    toTwos(value: number): BigNumber {\n        return toBigNumber(toBN(this).toTwos(value));\n    }\n\n    abs(): BigNumber {\n        if (this._hex[0] === \"-\") {\n            return BigNumber.from(this._hex.substring(1));\n        }\n        return this;\n    }\n\n    add(other: BigNumberish): BigNumber {\n        return toBigNumber(toBN(this).add(toBN(other)));\n    }\n\n    sub(other: BigNumberish): BigNumber {\n        return toBigNumber(toBN(this).sub(toBN(other)));\n    }\n\n    div(other: BigNumberish): BigNumber {\n        const o = BigNumber.from(other);\n        if (o.isZero()) {\n            throwFault(\"division-by-zero\", \"div\");\n        }\n        return toBigNumber(toBN(this).div(toBN(other)));\n    }\n\n    mul(other: BigNumberish): BigNumber {\n        return toBigNumber(toBN(this).mul(toBN(other)));\n    }\n\n    mod(other: BigNumberish): BigNumber {\n        const value = toBN(other);\n        if (value.isNeg()) {\n            throwFault(\"division-by-zero\", \"mod\");\n        }\n        return toBigNumber(toBN(this).umod(value));\n    }\n\n    pow(other: BigNumberish): BigNumber {\n        const value = toBN(other);\n        if (value.isNeg()) {\n            throwFault(\"negative-power\", \"pow\");\n        }\n        return toBigNumber(toBN(this).pow(value));\n    }\n\n    and(other: BigNumberish): BigNumber {\n        const value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"unbound-bitwise-result\", \"and\");\n        }\n        return toBigNumber(toBN(this).and(value));\n    }\n\n    or(other: BigNumberish): BigNumber {\n        const value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"unbound-bitwise-result\", \"or\");\n        }\n        return toBigNumber(toBN(this).or(value));\n    }\n\n    xor(other: BigNumberish): BigNumber {\n        const value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"unbound-bitwise-result\", \"xor\");\n        }\n        return toBigNumber(toBN(this).xor(value));\n    }\n\n    mask(value: number): BigNumber {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"negative-width\", \"mask\");\n        }\n        return toBigNumber(toBN(this).maskn(value));\n    }\n\n    shl(value: number): BigNumber {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"negative-width\", \"shl\");\n        }\n        return toBigNumber(toBN(this).shln(value));\n    }\n\n    shr(value: number): BigNumber {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"negative-width\", \"shr\");\n        }\n        return toBigNumber(toBN(this).shrn(value));\n    }\n\n    eq(other: BigNumberish): boolean {\n        return toBN(this).eq(toBN(other));\n    }\n\n    lt(other: BigNumberish): boolean {\n        return toBN(this).lt(toBN(other));\n    }\n\n    lte(other: BigNumberish): boolean {\n        return toBN(this).lte(toBN(other));\n    }\n\n    gt(other: BigNumberish): boolean {\n        return toBN(this).gt(toBN(other));\n   }\n\n    gte(other: BigNumberish): boolean {\n        return toBN(this).gte(toBN(other));\n    }\n\n    isNegative(): boolean {\n        return (this._hex[0] === \"-\");\n    }\n\n    isZero(): boolean {\n        return toBN(this).isZero();\n    }\n\n    toNumber(): number {\n        try {\n            return toBN(this).toNumber();\n        } catch (error) {\n            throwFault(\"overflow\", \"toNumber\", this.toString());\n        }\n        return null;\n    }\n\n    toBigInt(): bigint {\n        try {\n            return BigInt(this.toString());\n        } catch (e) { }\n\n        return logger.throwError(\"this platform does not support BigInt\", Logger.errors.UNSUPPORTED_OPERATION, {\n            value: this.toString()\n        });\n    }\n\n    toString(): string {\n        // Lots of people expect this, which we do not support, so check (See: #889)\n        if (arguments.length > 0) {\n            if (arguments[0] === 10) {\n                if (!_warnedToStringRadix) {\n                    _warnedToStringRadix = true;\n                    logger.warn(\"BigNumber.toString does not accept any parameters; base-10 is assumed\");\n                }\n            } else if (arguments[0] === 16) {\n                logger.throwError(\"BigNumber.toString does not accept any parameters; use bigNumber.toHexString()\", Logger.errors.UNEXPECTED_ARGUMENT, { });\n            } else {\n                logger.throwError(\"BigNumber.toString does not accept parameters\", Logger.errors.UNEXPECTED_ARGUMENT, { });\n            }\n        }\n        return toBN(this).toString(10);\n    }\n\n    toHexString(): string {\n        return this._hex;\n    }\n\n    toJSON(key?: string): any {\n        return { type: \"BigNumber\", hex: this.toHexString() };\n    }\n\n    static from(value: any): BigNumber {\n        if (value instanceof BigNumber) { return value; }\n\n        if (typeof(value) === \"string\") {\n            if (value.match(/^-?0x[0-9a-f]+$/i)) {\n                return new BigNumber(_constructorGuard, toHex(value));\n            }\n\n            if (value.match(/^-?[0-9]+$/)) {\n                return new BigNumber(_constructorGuard, toHex(new BN(value)));\n            }\n\n            return logger.throwArgumentError(\"invalid BigNumber string\", \"value\", value);\n        }\n\n        if (typeof(value) === \"number\") {\n            if (value % 1) {\n                throwFault(\"underflow\", \"BigNumber.from\", value);\n            }\n\n            if (value >= MAX_SAFE || value <= -MAX_SAFE) {\n                throwFault(\"overflow\", \"BigNumber.from\", value);\n            }\n\n            return BigNumber.from(String(value));\n        }\n\n        const anyValue = <any>value;\n\n        if (typeof(anyValue) === \"bigint\") {\n            return BigNumber.from(anyValue.toString());\n        }\n\n        if (isBytes(anyValue)) {\n            return BigNumber.from(hexlify(anyValue));\n        }\n\n        if (anyValue) {\n\n            // Hexable interface (takes priority)\n            if (anyValue.toHexString) {\n                const hex = anyValue.toHexString();\n                if (typeof(hex) === \"string\") {\n                    return BigNumber.from(hex);\n                }\n\n            } else {\n                // For now, handle legacy JSON-ified values (goes away in v6)\n                let hex = anyValue._hex;\n\n                // New-form JSON\n                if (hex == null && anyValue.type === \"BigNumber\") {\n                    hex = anyValue.hex;\n                }\n\n                if (typeof(hex) === \"string\") {\n                    if (isHexString(hex) || (hex[0] === \"-\" && isHexString(hex.substring(1)))) {\n                        return BigNumber.from(hex);\n                    }\n                }\n            }\n        }\n\n        return logger.throwArgumentError(\"invalid BigNumber value\", \"value\", value);\n    }\n\n    static isBigNumber(value: any): value is BigNumber {\n        return !!(value && value._isBigNumber);\n    }\n}\n\n// Normalize the hex string\nfunction toHex(value: string | BN): string {\n\n    // For BN, call on the hex string\n    if (typeof(value) !== \"string\") {\n        return toHex(value.toString(16));\n    }\n\n    // If negative, prepend the negative sign to the normalized positive value\n    if (value[0] === \"-\") {\n        // Strip off the negative sign\n        value = value.substring(1);\n\n        // Cannot have multiple negative signs (e.g. \"--0x04\")\n        if (value[0] === \"-\") { logger.throwArgumentError(\"invalid hex\", \"value\", value); }\n\n        // Call toHex on the positive component\n        value = toHex(value);\n\n        // Do not allow \"-0x00\"\n        if (value === \"0x00\") { return value; }\n\n        // Negate the value\n        return \"-\" + value;\n    }\n\n    // Add a \"0x\" prefix if missing\n    if (value.substring(0, 2) !== \"0x\") { value = \"0x\" + value; }\n\n    // Normalize zero\n    if (value === \"0x\") { return \"0x00\"; }\n\n    // Make the string even length\n    if (value.length % 2) { value = \"0x0\" + value.substring(2); }\n\n    // Trim to smallest even-length string\n    while (value.length > 4 && value.substring(0, 4) === \"0x00\") {\n        value = \"0x\" + value.substring(4);\n    }\n\n    return value;\n}\n\nfunction toBigNumber(value: BN): BigNumber {\n    return BigNumber.from(toHex(value));\n}\n\nfunction toBN(value: BigNumberish): BN {\n    const hex = BigNumber.from(value).toHexString();\n    if (hex[0] === \"-\") {\n        return (new BN(\"-\" + hex.substring(3), 16));\n    }\n    return new BN(hex.substring(2), 16);\n}\n\nfunction throwFault(fault: string, operation: string, value?: any): never {\n    const params: any = { fault: fault, operation: operation };\n    if (value != null) { params.value = value; }\n\n    return logger.throwError(fault, Logger.errors.NUMERIC_FAULT, params);\n}\n\n// value should have no prefix\nexport function _base36To16(value: string): string {\n    return (new BN(value, 36)).toString(16);\n}\n\n// value should have no prefix\nexport function _base16To36(value: string): string {\n    return (new BN(value, 16)).toString(36);\n}\n", "\"use strict\";\n\nimport { arrayify, BytesLike, hexZeroPad, isBytes } from \"@ethersproject/bytes\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { BigNumber, BigNumberish, isBigNumberish } from \"./bignumber\";\n\nconst _constructorGuard = { };\n\nconst Zero = BigNumber.from(0);\nconst NegativeOne = BigNumber.from(-1);\n\nfunction throwFault(message: string, fault: string, operation: string, value?: any): never {\n    const params: any = { fault: fault, operation: operation };\n    if (value !== undefined) { params.value = value; }\n    return logger.throwError(message, Logger.errors.NUMERIC_FAULT, params);\n}\n\n// Constant to pull zeros from for multipliers\nlet zeros = \"0\";\nwhile (zeros.length < 256) { zeros += zeros; }\n\n// Returns a string \"1\" followed by decimal \"0\"s\nfunction getMultiplier(decimals: BigNumberish): string {\n\n    if (typeof(decimals) !== \"number\") {\n        try {\n            decimals = BigNumber.from(decimals).toNumber();\n        } catch (e) { }\n    }\n\n    if (typeof(decimals) === \"number\" && decimals >= 0 && decimals <= 256 && !(decimals % 1)) {\n        return (\"1\" + zeros.substring(0, decimals));\n    }\n\n    return logger.throwArgumentError(\"invalid decimal size\", \"decimals\", decimals);\n}\n\nexport function formatFixed(value: BigNumberish, decimals?: string | BigNumberish): string {\n    if (decimals == null) { decimals = 0; }\n    const multiplier = getMultiplier(decimals);\n\n    // Make sure wei is a big number (convert as necessary)\n    value = BigNumber.from(value);\n\n    const negative = value.lt(Zero);\n    if (negative) { value = value.mul(NegativeOne); }\n\n    let fraction = value.mod(multiplier).toString();\n    while (fraction.length < multiplier.length - 1) { fraction = \"0\" + fraction; }\n\n    // Strip training 0\n    fraction = fraction.match(/^([0-9]*[1-9]|0)(0*)/)[1];\n\n    const whole = value.div(multiplier).toString();\n    if (multiplier.length === 1) {\n        value = whole;\n    } else {\n        value = whole + \".\" + fraction;\n    }\n\n    if (negative) { value = \"-\" + value; }\n\n    return value;\n}\n\nexport function parseFixed(value: string, decimals?: BigNumberish): BigNumber {\n\n    if (decimals == null) { decimals = 0; }\n    const multiplier = getMultiplier(decimals);\n\n    if (typeof(value) !== \"string\" || !value.match(/^-?[0-9.]+$/)) {\n        logger.throwArgumentError(\"invalid decimal value\", \"value\", value);\n    }\n\n    // Is it negative?\n    const negative = (value.substring(0, 1) === \"-\");\n    if (negative) { value = value.substring(1); }\n\n    if (value === \".\") {\n        logger.throwArgumentError(\"missing value\", \"value\", value);\n    }\n\n    // Split it into a whole and fractional part\n    const comps = value.split(\".\");\n    if (comps.length > 2) {\n        logger.throwArgumentError(\"too many decimal points\", \"value\", value);\n    }\n\n    let whole = comps[0], fraction = comps[1];\n    if (!whole) { whole = \"0\"; }\n    if (!fraction) { fraction = \"0\"; }\n\n    // Trim trailing zeros\n    while (fraction[fraction.length - 1] === \"0\") {\n        fraction = fraction.substring(0, fraction.length - 1);\n    }\n\n    // Check the fraction doesn't exceed our decimals size\n    if (fraction.length > multiplier.length - 1) {\n        throwFault(\"fractional component exceeds decimals\", \"underflow\", \"parseFixed\");\n    }\n\n    // If decimals is 0, we have an empty string for fraction\n    if (fraction === \"\") { fraction = \"0\"; }\n\n    // Fully pad the string with zeros to get to wei\n    while (fraction.length < multiplier.length - 1) { fraction += \"0\"; }\n\n    const wholeValue = BigNumber.from(whole);\n    const fractionValue = BigNumber.from(fraction);\n\n    let wei = (wholeValue.mul(multiplier)).add(fractionValue);\n\n    if (negative) { wei = wei.mul(NegativeOne); }\n\n    return wei;\n}\n\n\nexport class FixedFormat {\n    readonly signed: boolean;\n    readonly width: number;\n    readonly decimals: number;\n    readonly name: string;\n    readonly _multiplier: string;\n\n    constructor(constructorGuard: any, signed: boolean, width: number, decimals: number) {\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"cannot use FixedFormat constructor; use FixedFormat.from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new FixedFormat\"\n            });\n        }\n\n        this.signed = signed;\n        this.width = width;\n        this.decimals = decimals;\n\n        this.name = (signed ? \"\": \"u\") + \"fixed\" + String(width) + \"x\" + String(decimals);\n\n        this._multiplier = getMultiplier(decimals);\n\n        Object.freeze(this);\n    }\n\n    static from(value: any): FixedFormat {\n        if (value instanceof FixedFormat) { return value; }\n\n        if (typeof(value) === \"number\") {\n            value = `fixed128x${value}`\n        }\n\n        let signed = true;\n        let width = 128;\n        let decimals = 18;\n\n        if (typeof(value) === \"string\") {\n            if (value === \"fixed\") {\n                // defaults...\n            } else if (value === \"ufixed\") {\n                signed = false;\n            } else {\n                const match = value.match(/^(u?)fixed([0-9]+)x([0-9]+)$/);\n                if (!match) { logger.throwArgumentError(\"invalid fixed format\", \"format\", value); }\n                signed = (match[1] !== \"u\");\n                width = parseInt(match[2]);\n                decimals = parseInt(match[3]);\n            }\n        } else if (value) {\n            const check = (key: string, type: string, defaultValue: any): any => {\n                if (value[key] == null) { return defaultValue; }\n                if (typeof(value[key]) !== type) {\n                    logger.throwArgumentError(\"invalid fixed format (\" + key + \" not \" + type +\")\", \"format.\" + key, value[key]);\n                }\n                return value[key];\n            }\n            signed = check(\"signed\", \"boolean\", signed);\n            width = check(\"width\", \"number\", width);\n            decimals = check(\"decimals\", \"number\", decimals);\n        }\n\n        if (width % 8) {\n            logger.throwArgumentError(\"invalid fixed format width (not byte aligned)\", \"format.width\", width);\n        }\n\n        if (decimals > 80) {\n            logger.throwArgumentError(\"invalid fixed format (decimals too large)\", \"format.decimals\", decimals);\n        }\n\n        return new FixedFormat(_constructorGuard, signed, width, decimals);\n    }\n}\n\nexport class FixedNumber {\n    readonly format: FixedFormat;\n    readonly _hex: string;\n    readonly _value: string;\n\n    readonly _isFixedNumber: boolean;\n\n    constructor(constructorGuard: any, hex: string, value: string, format?: FixedFormat) {\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"cannot use FixedNumber constructor; use FixedNumber.from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new FixedFormat\"\n            });\n        }\n\n        this.format = format;\n        this._hex = hex;\n        this._value = value;\n\n        this._isFixedNumber = true;\n\n        Object.freeze(this);\n    }\n\n    _checkFormat(other: FixedNumber): void {\n        if (this.format.name !== other.format.name) {\n            logger.throwArgumentError(\"incompatible format; use fixedNumber.toFormat\", \"other\", other);\n        }\n    }\n\n    addUnsafe(other: FixedNumber): FixedNumber {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.add(b), this.format.decimals, this.format);\n    }\n\n    subUnsafe(other: FixedNumber): FixedNumber {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.sub(b), this.format.decimals, this.format);\n    }\n\n    mulUnsafe(other: FixedNumber): FixedNumber {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.mul(b).div(this.format._multiplier), this.format.decimals, this.format);\n    }\n\n    divUnsafe(other: FixedNumber): FixedNumber {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.mul(this.format._multiplier).div(b), this.format.decimals, this.format);\n    }\n\n    floor(): FixedNumber {\n        const comps = this.toString().split(\".\");\n        if (comps.length === 1) { comps.push(\"0\"); }\n\n        let result = FixedNumber.from(comps[0], this.format);\n\n        const hasFraction = !comps[1].match(/^(0*)$/);\n        if (this.isNegative() && hasFraction) {\n            result = result.subUnsafe(ONE.toFormat(result.format));\n        }\n\n        return result;\n    }\n\n    ceiling(): FixedNumber {\n        const comps = this.toString().split(\".\");\n        if (comps.length === 1) { comps.push(\"0\"); }\n\n        let result = FixedNumber.from(comps[0], this.format);\n\n        const hasFraction = !comps[1].match(/^(0*)$/);\n        if (!this.isNegative() && hasFraction) {\n            result = result.addUnsafe(ONE.toFormat(result.format));\n        }\n\n        return result;\n    }\n\n    // @TODO: Support other rounding algorithms\n    round(decimals?: number): FixedNumber {\n        if (decimals == null) { decimals = 0; }\n\n        // If we are already in range, we're done\n        const comps = this.toString().split(\".\");\n        if (comps.length === 1) { comps.push(\"0\"); }\n\n        if (decimals < 0 || decimals > 80 || (decimals % 1)) {\n            logger.throwArgumentError(\"invalid decimal count\", \"decimals\", decimals);\n        }\n\n        if (comps[1].length <= decimals) { return this; }\n\n        const factor = FixedNumber.from(\"1\" + zeros.substring(0, decimals), this.format);\n        const bump = BUMP.toFormat(this.format);\n\n        return this.mulUnsafe(factor).addUnsafe(bump).floor().divUnsafe(factor);\n    }\n\n    isZero(): boolean {\n        return (this._value === \"0.0\" || this._value === \"0\");\n    }\n\n    isNegative(): boolean {\n        return (this._value[0] === \"-\");\n    }\n\n    toString(): string { return this._value; }\n\n    toHexString(width?: number): string {\n        if (width == null) { return this._hex; }\n        if (width % 8) { logger.throwArgumentError(\"invalid byte width\", \"width\", width); }\n        const hex = BigNumber.from(this._hex).fromTwos(this.format.width).toTwos(width).toHexString();\n        return hexZeroPad(hex, width / 8);\n    }\n\n    toUnsafeFloat(): number { return parseFloat(this.toString()); }\n\n    toFormat(format: FixedFormat | string): FixedNumber {\n        return FixedNumber.fromString(this._value, format);\n    }\n\n\n    static fromValue(value: BigNumber, decimals?: BigNumberish, format?: FixedFormat | string | number): FixedNumber {\n        // If decimals looks more like a format, and there is no format, shift the parameters\n        if (format == null && decimals != null && !isBigNumberish(decimals)) {\n            format = decimals;\n            decimals = null;\n        }\n\n        if (decimals == null) { decimals = 0; }\n        if (format == null) { format = \"fixed\"; }\n\n        return FixedNumber.fromString(formatFixed(value, decimals), FixedFormat.from(format));\n    }\n\n\n    static fromString(value: string, format?: FixedFormat | string | number): FixedNumber {\n        if (format == null) { format = \"fixed\"; }\n\n        const fixedFormat = FixedFormat.from(format);\n\n        const numeric = parseFixed(value, fixedFormat.decimals);\n\n        if (!fixedFormat.signed && numeric.lt(Zero)) {\n            throwFault(\"unsigned value cannot be negative\", \"overflow\", \"value\", value);\n        }\n\n        let hex: string = null;\n        if (fixedFormat.signed) {\n            hex = numeric.toTwos(fixedFormat.width).toHexString();\n        } else {\n            hex = numeric.toHexString();\n            hex = hexZeroPad(hex, fixedFormat.width / 8);\n        }\n\n        const decimal = formatFixed(numeric, fixedFormat.decimals);\n\n        return new FixedNumber(_constructorGuard, hex, decimal, fixedFormat);\n    }\n\n    static fromBytes(value: BytesLike, format?: FixedFormat | string | number): FixedNumber {\n        if (format == null) { format = \"fixed\"; }\n\n        const fixedFormat = FixedFormat.from(format);\n\n        if (arrayify(value).length > fixedFormat.width / 8) {\n            throw new Error(\"overflow\");\n        }\n\n        let numeric = BigNumber.from(value);\n        if (fixedFormat.signed) { numeric = numeric.fromTwos(fixedFormat.width); }\n\n        const hex = numeric.toTwos((fixedFormat.signed ? 0: 1) + fixedFormat.width).toHexString();\n        const decimal = formatFixed(numeric, fixedFormat.decimals);\n\n        return new FixedNumber(_constructorGuard, hex, decimal, fixedFormat);\n    }\n\n    static from(value: any, format?: FixedFormat | string | number) {\n        if (typeof(value) === \"string\") {\n            return FixedNumber.fromString(value, format);\n        }\n\n        if (isBytes(value)) {\n            return FixedNumber.fromBytes(value, format);\n        }\n\n        try {\n            return FixedNumber.fromValue(value, 0, format);\n        } catch (error) {\n            // Allow NUMERIC_FAULT to bubble up\n            if (error.code !== Logger.errors.INVALID_ARGUMENT) {\n                throw error;\n            }\n        }\n\n        return logger.throwArgumentError(\"invalid FixedNumber value\", \"value\", value);\n    }\n\n    static isFixedNumber(value: any): value is FixedNumber {\n        return !!(value && value._isFixedNumber);\n    }\n}\n\nconst ONE = FixedNumber.from(1);\nconst BUMP = FixedNumber.from(\"0.5\");\n", "export { BigNumber, BigNumberish } from \"./bignumber\";\nexport { formatFixed, FixedFormat, FixedNumber, parseFixed } from \"./fixednumber\";\n\n// Internal methods used by address\nexport { _base16To36, _base36To16 } from \"./bignumber\";\n", "export const version = \"properties/5.7.0\";\n", "\"use strict\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nexport function defineReadOnly<T, K extends keyof T>(object: T, name: K, value: T[K]): void {\n    Object.defineProperty(object, name, {\n        enumerable: true,\n        value: value,\n        writable: false,\n    });\n}\n\n// Crawl up the constructor chain to find a static method\nexport function getStatic<T>(ctor: any, key: string): T {\n    for (let i = 0; i < 32; i++) {\n        if (ctor[key]) { return ctor[key]; }\n        if (!ctor.prototype || typeof(ctor.prototype) !== \"object\") { break; }\n        ctor = Object.getPrototypeOf(ctor.prototype).constructor;\n    }\n    return null;\n}\n\nexport type Deferrable<T> = {\n    [ K in keyof T ]: T[K] | Promise<T[K]>;\n}\n\n\ntype Result = { key: string, value: any};\n\nexport async function resolveProperties<T>(object: Readonly<Deferrable<T>>): Promise<T> {\n    const promises: Array<Promise<Result>> = Object.keys(object).map((key) => {\n        const value = object[<keyof Deferrable<T>>key];\n        return Promise.resolve(value).then((v) => ({ key: key, value: v }));\n    });\n\n    const results = await Promise.all(promises);\n\n    return results.reduce((accum, result) => {\n        accum[<keyof T>(result.key)] = result.value;\n        return accum;\n    }, <T>{ });\n}\n\nexport function checkProperties(object: any, properties: { [ name: string ]: boolean }): void {\n    if (!object || typeof(object) !== \"object\") {\n        logger.throwArgumentError(\"invalid object\", \"object\", object);\n    }\n\n    Object.keys(object).forEach((key) => {\n        if (!properties[key]) {\n            logger.throwArgumentError(\"invalid object key - \" + key, \"transaction:\" + key, object);\n        }\n    });\n}\n\nexport function shallowCopy<T>(object: T): T {\n    const result: any = {};\n    for (const key in object) { result[key] = object[key]; }\n    return result;\n}\n\nconst opaque: { [key: string]: boolean } = { bigint: true, boolean: true, \"function\": true, number: true, string: true };\n\nfunction _isFrozen(object: any): boolean {\n\n    // Opaque objects are not mutable, so safe to copy by assignment\n    if (object === undefined || object === null || opaque[typeof(object)]) { return true; }\n\n    if (Array.isArray(object) || typeof(object) === \"object\") {\n        if (!Object.isFrozen(object)) { return false; }\n\n        const keys = Object.keys(object);\n        for (let i = 0; i < keys.length; i++) {\n            let value: any = null;\n            try {\n                value = object[keys[i]];\n            } catch (error) {\n                // If accessing a value triggers an error, it is a getter\n                // designed to do so (e.g. Result) and is therefore \"frozen\"\n                continue;\n            }\n\n            if (!_isFrozen(value)) { return false; }\n        }\n\n        return true;\n    }\n\n    return logger.throwArgumentError(`Cannot deepCopy ${ typeof(object) }`, \"object\", object);\n}\n\n// Returns a new copy of object, such that no properties may be replaced.\n// New properties may be added only to objects.\nfunction _deepCopy(object: any): any {\n\n    if (_isFrozen(object)) { return object; }\n\n    // Arrays are mutable, so we need to create a copy\n    if (Array.isArray(object)) {\n        return Object.freeze(object.map((item) => deepCopy(item)));\n    }\n\n    if (typeof(object) === \"object\") {\n        const result: { [ key: string ]: any } = {};\n        for (const key in object) {\n            const value = object[key];\n            if (value === undefined) { continue; }\n            defineReadOnly(result, key, deepCopy(value));\n        }\n\n        return result;\n    }\n\n    return logger.throwArgumentError(`Cannot deepCopy ${ typeof(object) }`, \"object\", object);\n}\n\nexport function deepCopy<T>(object: T): T {\n    return _deepCopy(object);\n}\n\nexport class Description<T = any> {\n    constructor(info: { [ K in keyof T ]: T[K] }) {\n        for (const key in info) {\n            (<any>this)[key] = deepCopy(info[key]);\n        }\n    }\n}\n", "export const AddressZero = \"0x0000000000000000000000000000000000000000\";\n\n", "import { BigNumber } from \"@ethersproject/bignumber\";\n\nconst NegativeOne: BigNumber = (/*#__PURE__*/BigNumber.from(-1));\nconst Zero: BigNumber = (/*#__PURE__*/BigNumber.from(0));\nconst One: BigNumber = (/*#__PURE__*/BigNumber.from(1));\nconst Two: BigNumber = (/*#__PURE__*/BigNumber.from(2));\nconst WeiPerEther: BigNumber = (/*#__PURE__*/BigNumber.from(\"1000000000000000000\"));\nconst MaxUint256: BigNumber = (/*#__PURE__*/BigNumber.from(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\"));\n\nconst MinInt256: BigNumber = (/*#__PURE__*/BigNumber.from(\"-0x8000000000000000000000000000000000000000000000000000000000000000\"));\nconst MaxInt256: BigNumber = (/*#__PURE__*/BigNumber.from(\"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\"));\n\nexport {\n    NegativeOne,\n    Zero,\n    One,\n    Two,\n    WeiPerEther,\n    MaxUint256,\n    MinInt256,\n    MaxInt256,\n};\n", "export const HashZero = \"0x0000000000000000000000000000000000000000000000000000000000000000\";\n\n", "// NFKC (composed)             // (decomposed)\nexport const EtherSymbol = \"\\u039e\";  // \"\\uD835\\uDF63\";\n", "\"use strict\";\n\nexport { AddressZero } from \"./addresses\";\nexport {\n    NegativeOne,\n    Zero,\n    One,\n    Two,\n    WeiPerEther,\n    MaxUint256,\n    MinInt256,\n    MaxInt256\n} from \"./bignumbers\";\nexport { HashZero } from \"./hashes\";\nexport { EtherSymbol } from \"./strings\";\n\n", "export const version = \"abstract-signer/5.7.0\";\n", "\"use strict\";\n\nimport { BlockTag, FeeData, Provider, TransactionRequest, TransactionResponse } from \"@ethersproject/abstract-provider\";\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { Bytes, BytesLike } from \"@ethersproject/bytes\";\nimport { Deferrable, defineReadOnly, resolveProperties, shallowCopy } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nconst allowedTransactionKeys: Array<string> = [\n    \"accessList\", \"ccipReadEnabled\", \"chainId\", \"customData\", \"data\", \"from\", \"gasLimit\", \"gasPrice\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"nonce\", \"to\", \"type\", \"value\"\n];\n\nconst forwardErrors = [\n    Logger.errors.INSUFFICIENT_FUNDS,\n    Logger.errors.NONCE_EXPIRED,\n    Logger.errors.REPLACEMENT_UNDERPRICED,\n];\n\n// EIP-712 Typed Data\n// See: https://eips.ethereum.org/EIPS/eip-712\n\nexport interface TypedDataDomain {\n    name?: string;\n    version?: string;\n    chainId?: BigNumberish;\n    verifyingContract?: string;\n    salt?: BytesLike;\n};\n\nexport interface TypedDataField {\n    name: string;\n    type: string;\n};\n\n// Sub-classes of Signer may optionally extend this interface to indicate\n// they have a private key available synchronously\nexport interface ExternallyOwnedAccount {\n    readonly address: string;\n    readonly privateKey: string;\n}\n\n// Sub-Class Notes:\n//  - A Signer MUST always make sure, that if present, the \"from\" field\n//    matches the Signer, before sending or signing a transaction\n//  - A Signer SHOULD always wrap private information (such as a private\n//    key or mnemonic) in a function, so that console.log does not leak\n//    the data\n\n// @TODO: This is a temporary measure to preserve backwards compatibility\n//        In v6, the method on TypedDataSigner will be added to Signer\nexport interface TypedDataSigner {\n    _signTypedData(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): Promise<string>;\n}\n\nexport abstract class Signer {\n    readonly provider?: Provider;\n\n    ///////////////////\n    // Sub-classes MUST implement these\n\n    // Returns the checksum address\n    abstract getAddress(): Promise<string>\n\n    // Returns the signed prefixed-message. This MUST treat:\n    // - Bytes as a binary message\n    // - string as a UTF8-message\n    // i.e. \"0x1234\" is a SIX (6) byte string, NOT 2 bytes of data\n    abstract signMessage(message: Bytes | string): Promise<string>;\n\n    // Signs a transaction and returns the fully serialized, signed transaction.\n    // The EXACT transaction MUST be signed, and NO additional properties to be added.\n    // - This MAY throw if signing transactions is not supports, but if\n    //   it does, sentTransaction MUST be overridden.\n    abstract signTransaction(transaction: Deferrable<TransactionRequest>): Promise<string>;\n\n    // Returns a new instance of the Signer, connected to provider.\n    // This MAY throw if changing providers is not supported.\n    abstract connect(provider: Provider): Signer;\n\n    readonly _isSigner: boolean;\n\n\n    ///////////////////\n    // Sub-classes MUST call super\n    constructor() {\n        logger.checkAbstract(new.target, Signer);\n        defineReadOnly(this, \"_isSigner\", true);\n    }\n\n\n    ///////////////////\n    // Sub-classes MAY override these\n\n    async getBalance(blockTag?: BlockTag): Promise<BigNumber> {\n        this._checkProvider(\"getBalance\");\n        return await this.provider.getBalance(this.getAddress(), blockTag);\n    }\n\n    async getTransactionCount(blockTag?: BlockTag): Promise<number> {\n        this._checkProvider(\"getTransactionCount\");\n        return await this.provider.getTransactionCount(this.getAddress(), blockTag);\n    }\n\n    // Populates \"from\" if unspecified, and estimates the gas for the transaction\n    async estimateGas(transaction: Deferrable<TransactionRequest>): Promise<BigNumber> {\n        this._checkProvider(\"estimateGas\");\n        const tx = await resolveProperties(this.checkTransaction(transaction));\n        return await this.provider.estimateGas(tx);\n    }\n\n    // Populates \"from\" if unspecified, and calls with the transaction\n    async call(transaction: Deferrable<TransactionRequest>, blockTag?: BlockTag): Promise<string> {\n        this._checkProvider(\"call\");\n        const tx = await resolveProperties(this.checkTransaction(transaction));\n        return await this.provider.call(tx, blockTag);\n    }\n\n    // Populates all fields in a transaction, signs it and sends it to the network\n    async sendTransaction(transaction: Deferrable<TransactionRequest>): Promise<TransactionResponse> {\n        this._checkProvider(\"sendTransaction\");\n        const tx = await this.populateTransaction(transaction);\n        const signedTx = await this.signTransaction(tx);\n        return await this.provider.sendTransaction(signedTx);\n    }\n\n    async getChainId(): Promise<number> {\n        this._checkProvider(\"getChainId\");\n        const network = await this.provider.getNetwork();\n        return network.chainId;\n    }\n\n    async getGasPrice(): Promise<BigNumber> {\n        this._checkProvider(\"getGasPrice\");\n        return await this.provider.getGasPrice();\n    }\n\n    async getFeeData(): Promise<FeeData> {\n        this._checkProvider(\"getFeeData\");\n        return await this.provider.getFeeData();\n    }\n\n\n    async resolveName(name: string): Promise<string> {\n        this._checkProvider(\"resolveName\");\n        return await this.provider.resolveName(name);\n    }\n\n\n\n    // Checks a transaction does not contain invalid keys and if\n    // no \"from\" is provided, populates it.\n    // - does NOT require a provider\n    // - adds \"from\" is not present\n    // - returns a COPY (safe to mutate the result)\n    // By default called from: (overriding these prevents it)\n    //   - call\n    //   - estimateGas\n    //   - populateTransaction (and therefor sendTransaction)\n    checkTransaction(transaction: Deferrable<TransactionRequest>): Deferrable<TransactionRequest> {\n        for (const key in transaction) {\n            if (allowedTransactionKeys.indexOf(key) === -1) {\n                logger.throwArgumentError(\"invalid transaction key: \" + key, \"transaction\", transaction);\n            }\n        }\n\n        const tx = shallowCopy(transaction);\n\n        if (tx.from == null) {\n            tx.from = this.getAddress();\n\n        } else {\n            // Make sure any provided address matches this signer\n            tx.from = Promise.all([\n                Promise.resolve(tx.from),\n                this.getAddress()\n            ]).then((result) => {\n                if (result[0].toLowerCase() !== result[1].toLowerCase()) {\n                    logger.throwArgumentError(\"from address mismatch\", \"transaction\", transaction);\n                }\n                return result[0];\n            });\n        }\n\n        return tx;\n    }\n\n    // Populates ALL keys for a transaction and checks that \"from\" matches\n    // this Signer. Should be used by sendTransaction but NOT by signTransaction.\n    // By default called from: (overriding these prevents it)\n    //   - sendTransaction\n    //\n    // Notes:\n    //  - We allow gasPrice for EIP-1559 as long as it matches maxFeePerGas\n    async populateTransaction(transaction: Deferrable<TransactionRequest>): Promise<TransactionRequest> {\n\n        const tx: Deferrable<TransactionRequest> = await resolveProperties(this.checkTransaction(transaction))\n\n        if (tx.to != null) {\n            tx.to = Promise.resolve(tx.to).then(async (to) => {\n                if (to == null) { return null; }\n                const address = await this.resolveName(to);\n                if (address == null) {\n                    logger.throwArgumentError(\"provided ENS name resolves to null\", \"tx.to\", to);\n                }\n                return address;\n            });\n\n            // Prevent this error from causing an UnhandledPromiseException\n            tx.to.catch((error) => {  });\n        }\n\n        // Do not allow mixing pre-eip-1559 and eip-1559 properties\n        const hasEip1559 = (tx.maxFeePerGas != null || tx.maxPriorityFeePerGas != null);\n        if (tx.gasPrice != null && (tx.type === 2 || hasEip1559)) {\n            logger.throwArgumentError(\"eip-1559 transaction do not support gasPrice\", \"transaction\", transaction);\n        } else if ((tx.type === 0 || tx.type === 1) && hasEip1559) {\n            logger.throwArgumentError(\"pre-eip-1559 transaction do not support maxFeePerGas/maxPriorityFeePerGas\", \"transaction\", transaction);\n        }\n\n        if ((tx.type === 2 || tx.type == null) && (tx.maxFeePerGas != null && tx.maxPriorityFeePerGas != null)) {\n            // Fully-formed EIP-1559 transaction (skip getFeeData)\n            tx.type = 2;\n\n        } else if (tx.type === 0 || tx.type === 1) {\n            // Explicit Legacy or EIP-2930 transaction\n\n            // Populate missing gasPrice\n            if (tx.gasPrice == null) { tx.gasPrice = this.getGasPrice(); }\n\n        } else {\n\n            // We need to get fee data to determine things\n            const feeData = await this.getFeeData();\n\n            if (tx.type == null) {\n                // We need to auto-detect the intended type of this transaction...\n\n                if (feeData.maxFeePerGas != null && feeData.maxPriorityFeePerGas != null) {\n                    // The network supports EIP-1559!\n\n                    // Upgrade transaction from null to eip-1559\n                    tx.type = 2;\n\n                    if (tx.gasPrice != null) {\n                        // Using legacy gasPrice property on an eip-1559 network,\n                        // so use gasPrice as both fee properties\n                        const gasPrice = tx.gasPrice;\n                        delete tx.gasPrice;\n                        tx.maxFeePerGas = gasPrice;\n                        tx.maxPriorityFeePerGas = gasPrice;\n\n                    } else {\n                        // Populate missing fee data\n                        if (tx.maxFeePerGas == null) { tx.maxFeePerGas = feeData.maxFeePerGas; }\n                        if (tx.maxPriorityFeePerGas == null) { tx.maxPriorityFeePerGas = feeData.maxPriorityFeePerGas; }\n                    }\n\n                } else if (feeData.gasPrice != null) {\n                    // Network doesn't support EIP-1559...\n\n                    // ...but they are trying to use EIP-1559 properties\n                    if (hasEip1559) {\n                        logger.throwError(\"network does not support EIP-1559\", Logger.errors.UNSUPPORTED_OPERATION, {\n                            operation: \"populateTransaction\"\n                        });\n                    }\n\n                    // Populate missing fee data\n                    if (tx.gasPrice == null) { tx.gasPrice = feeData.gasPrice; }\n\n                    // Explicitly set untyped transaction to legacy\n                    tx.type = 0;\n\n                } else {\n                    // getFeeData has failed us.\n                    logger.throwError(\"failed to get consistent fee data\", Logger.errors.UNSUPPORTED_OPERATION, {\n                        operation: \"signer.getFeeData\"\n                    });\n                }\n\n            } else if (tx.type === 2) {\n                // Explicitly using EIP-1559\n\n                // Populate missing fee data\n                if (tx.maxFeePerGas == null) { tx.maxFeePerGas = feeData.maxFeePerGas; }\n                if (tx.maxPriorityFeePerGas == null) { tx.maxPriorityFeePerGas = feeData.maxPriorityFeePerGas; }\n            }\n        }\n\n        if (tx.nonce == null) { tx.nonce = this.getTransactionCount(\"pending\"); }\n\n        if (tx.gasLimit == null) {\n            tx.gasLimit = this.estimateGas(tx).catch((error) => {\n                if (forwardErrors.indexOf(error.code) >= 0) {\n                    throw error;\n                }\n\n                return logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n                    error: error,\n                    tx: tx\n                });\n            });\n        }\n\n        if (tx.chainId == null) {\n            tx.chainId = this.getChainId();\n        } else {\n            tx.chainId = Promise.all([\n                Promise.resolve(tx.chainId),\n                this.getChainId()\n            ]).then((results) => {\n                if (results[1] !== 0 && results[0] !== results[1]) {\n                    logger.throwArgumentError(\"chainId address mismatch\", \"transaction\", transaction);\n                }\n                return results[0];\n            });\n        }\n\n        return await resolveProperties(tx);\n    }\n\n\n    ///////////////////\n    // Sub-classes SHOULD leave these alone\n\n    _checkProvider(operation?: string): void {\n        if (!this.provider) { logger.throwError(\"missing provider\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: (operation || \"_checkProvider\") });\n        }\n    }\n\n    static isSigner(value: any): value is Signer {\n        return !!(value && value._isSigner);\n    }\n}\n\nexport class VoidSigner extends Signer implements TypedDataSigner {\n    readonly address: string;\n\n    constructor(address: string, provider?: Provider) {\n        super();\n        defineReadOnly(this, \"address\", address);\n        defineReadOnly(this, \"provider\", provider || null);\n    }\n\n    getAddress(): Promise<string> {\n        return Promise.resolve(this.address);\n    }\n\n    _fail(message: string, operation: string): Promise<any> {\n        return Promise.resolve().then(() => {\n            logger.throwError(message, Logger.errors.UNSUPPORTED_OPERATION, { operation: operation });\n        });\n    }\n\n    signMessage(message: Bytes | string): Promise<string> {\n        return this._fail(\"VoidSigner cannot sign messages\", \"signMessage\");\n    }\n\n    signTransaction(transaction: Deferrable<TransactionRequest>): Promise<string> {\n        return this._fail(\"VoidSigner cannot sign transactions\", \"signTransaction\");\n    }\n\n    _signTypedData(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): Promise<string> {\n        return this._fail(\"VoidSigner cannot sign typed data\", \"signTypedData\");\n    }\n\n    connect(provider: Provider): VoidSigner {\n        return new VoidSigner(this.address, provider);\n    }\n}\n\n", "export const version = \"abstract-provider/5.7.0\";\n", "\"use strict\";\n\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { BytesLike, isHexString } from \"@ethersproject/bytes\";\nimport { Network } from \"@ethersproject/networks\";\nimport { Deferrable, Description, defineReadOnly, resolveProperties } from \"@ethersproject/properties\";\nimport { AccessListish, Transaction } from \"@ethersproject/transactions\";\nimport { OnceBlockable } from \"@ethersproject/web\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n///////////////////////////////\n// Exported Types\n\n\nexport type TransactionRequest = {\n    to?: string,\n    from?: string,\n    nonce?: BigNumberish,\n\n    gasLimit?: BigNumberish,\n    gasPrice?: BigNumberish,\n\n    data?: BytesLike,\n    value?: BigNumberish,\n    chainId?: number\n\n    type?: number;\n    accessList?: AccessListish;\n\n    maxPriorityFeePerGas?: BigNumberish;\n    maxFeePerGas?: BigNumberish;\n\n    customData?: Record<string, any>;\n    ccipReadEnabled?: boolean;\n}\n\nexport interface TransactionResponse extends Transaction {\n    hash: string;\n\n    // Only if a transaction has been mined\n    blockNumber?: number,\n    blockHash?: string,\n    timestamp?: number,\n\n    confirmations: number,\n\n    // Not optional (as it is in Transaction)\n    from: string;\n\n    // The raw transaction\n    raw?: string,\n\n    // This function waits until the transaction has been mined\n    wait: (confirmations?: number) => Promise<TransactionReceipt>\n};\n\nexport type BlockTag = string | number;\n\nexport interface _Block {\n    hash: string;\n    parentHash: string;\n    number: number;\n\n    timestamp: number;\n    nonce: string;\n    difficulty: number;\n    _difficulty: BigNumber;\n\n    gasLimit: BigNumber;\n    gasUsed: BigNumber;\n\n    miner: string;\n    extraData: string;\n\n    baseFeePerGas?: null | BigNumber;\n}\n\nexport interface Block extends _Block {\n    transactions: Array<string>;\n}\n\nexport interface BlockWithTransactions extends _Block {\n    transactions: Array<TransactionResponse>;\n}\n\n\nexport interface Log {\n    blockNumber: number;\n    blockHash: string;\n    transactionIndex: number;\n\n    removed: boolean;\n\n    address: string;\n    data: string;\n\n    topics: Array<string>;\n\n    transactionHash: string;\n    logIndex: number;\n}\n\nexport interface TransactionReceipt {\n    to: string;\n    from: string;\n    contractAddress: string,\n    transactionIndex: number,\n    root?: string,\n    gasUsed: BigNumber,\n    logsBloom: string,\n    blockHash: string,\n    transactionHash: string,\n    logs: Array<Log>,\n    blockNumber: number,\n    confirmations: number,\n    cumulativeGasUsed: BigNumber,\n    effectiveGasPrice: BigNumber,\n    byzantium: boolean,\n    type: number;\n    status?: number\n};\n\nexport interface FeeData {\n    lastBaseFeePerGas: null | BigNumber;\n    maxFeePerGas: null | BigNumber;\n    maxPriorityFeePerGas: null | BigNumber;\n    gasPrice: null | BigNumber;\n}\n\nexport interface EventFilter {\n    address?: string;\n    topics?: Array<string | Array<string> | null>;\n}\n\nexport interface Filter extends EventFilter {\n    fromBlock?: BlockTag,\n    toBlock?: BlockTag,\n}\n\nexport interface FilterByBlockHash extends EventFilter {\n    blockHash?: string;\n}\n\n//export type CallTransactionable = {\n//    call(transaction: TransactionRequest): Promise<TransactionResponse>;\n//};\n\nexport abstract class ForkEvent extends Description {\n    readonly expiry: number;\n\n    readonly _isForkEvent?: boolean;\n\n    static isForkEvent(value: any): value is ForkEvent {\n        return !!(value && value._isForkEvent);\n    }\n}\n\nexport class BlockForkEvent extends ForkEvent {\n    readonly blockHash: string;\n\n    readonly _isBlockForkEvent?: boolean;\n\n    constructor(blockHash: string, expiry?: number) {\n        if (!isHexString(blockHash, 32)) {\n            logger.throwArgumentError(\"invalid blockHash\", \"blockHash\", blockHash);\n        }\n\n        super({\n            _isForkEvent: true,\n            _isBlockForkEvent: true,\n            expiry: (expiry || 0),\n            blockHash: blockHash\n        });\n    }\n}\n\nexport class TransactionForkEvent extends ForkEvent {\n    readonly hash: string;\n\n    readonly _isTransactionOrderForkEvent?: boolean;\n\n    constructor(hash: string, expiry?: number) {\n        if (!isHexString(hash, 32)) {\n            logger.throwArgumentError(\"invalid transaction hash\", \"hash\", hash);\n        }\n\n        super({\n            _isForkEvent: true,\n            _isTransactionForkEvent: true,\n            expiry: (expiry || 0),\n            hash: hash\n        });\n    }\n}\n\nexport class TransactionOrderForkEvent extends ForkEvent {\n    readonly beforeHash: string;\n    readonly afterHash: string;\n\n    constructor(beforeHash: string, afterHash: string, expiry?: number) {\n        if (!isHexString(beforeHash, 32)) {\n            logger.throwArgumentError(\"invalid transaction hash\", \"beforeHash\", beforeHash);\n        }\n        if (!isHexString(afterHash, 32)) {\n            logger.throwArgumentError(\"invalid transaction hash\", \"afterHash\", afterHash);\n        }\n\n        super({\n            _isForkEvent: true,\n            _isTransactionOrderForkEvent: true,\n            expiry: (expiry || 0),\n            beforeHash: beforeHash,\n            afterHash: afterHash\n        });\n    }\n}\n\nexport type EventType = string | Array<string | Array<string>> | EventFilter | ForkEvent;\n\nexport type Listener = (...args: Array<any>) => void;\n\n///////////////////////////////\n// Exported Abstracts\nexport abstract class Provider implements OnceBlockable {\n\n    // Network\n    abstract getNetwork(): Promise<Network>;\n\n    // Latest State\n    abstract getBlockNumber(): Promise<number>;\n    abstract getGasPrice(): Promise<BigNumber>;\n    async getFeeData(): Promise<FeeData> {\n        const { block, gasPrice } = await resolveProperties({\n            block: this.getBlock(\"latest\"),\n            gasPrice: this.getGasPrice().catch((error) => {\n                // @TODO: Why is this now failing on Calaveras?\n                //console.log(error);\n                return null;\n            })\n        });\n\n        let lastBaseFeePerGas = null, maxFeePerGas = null, maxPriorityFeePerGas = null;\n\n        if (block && block.baseFeePerGas) {\n            // We may want to compute this more accurately in the future,\n            // using the formula \"check if the base fee is correct\".\n            // See: https://eips.ethereum.org/EIPS/eip-1559\n            lastBaseFeePerGas = block.baseFeePerGas;\n            maxPriorityFeePerGas = BigNumber.from(\"1500000000\");\n            maxFeePerGas = block.baseFeePerGas.mul(2).add(maxPriorityFeePerGas);\n        }\n\n        return { lastBaseFeePerGas, maxFeePerGas, maxPriorityFeePerGas, gasPrice };\n    }\n\n    // Account\n    abstract getBalance(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<BigNumber>;\n    abstract getTransactionCount(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<number>;\n    abstract getCode(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string> ;\n    abstract getStorageAt(addressOrName: string | Promise<string>, position: BigNumberish | Promise<BigNumberish>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string>;\n\n    // Execution\n    abstract sendTransaction(signedTransaction: string | Promise<string>): Promise<TransactionResponse>;\n    abstract call(transaction: Deferrable<TransactionRequest>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string>;\n    abstract estimateGas(transaction: Deferrable<TransactionRequest>): Promise<BigNumber>;\n\n    // Queries\n    abstract getBlock(blockHashOrBlockTag: BlockTag | string | Promise<BlockTag | string>): Promise<Block>;\n    abstract getBlockWithTransactions(blockHashOrBlockTag: BlockTag | string | Promise<BlockTag | string>): Promise<BlockWithTransactions>;\n    abstract getTransaction(transactionHash: string): Promise<TransactionResponse>;\n    abstract getTransactionReceipt(transactionHash: string): Promise<TransactionReceipt>;\n\n    // Bloom-filter Queries\n    abstract getLogs(filter: Filter): Promise<Array<Log>>;\n\n    // ENS\n    abstract resolveName(name: string | Promise<string>): Promise<null | string>;\n    abstract lookupAddress(address: string | Promise<string>): Promise<null | string>;\n\n    // Event Emitter (ish)\n    abstract on(eventName: EventType, listener: Listener): Provider;\n    abstract once(eventName: EventType, listener: Listener): Provider;\n    abstract emit(eventName: EventType, ...args: Array<any>): boolean\n    abstract listenerCount(eventName?: EventType): number;\n    abstract listeners(eventName?: EventType): Array<Listener>;\n    abstract off(eventName: EventType, listener?: Listener): Provider;\n    abstract removeAllListeners(eventName?: EventType): Provider;\n\n    // Alias for \"on\"\n    addListener(eventName: EventType, listener: Listener): Provider {\n        return this.on(eventName, listener);\n    }\n\n    // Alias for \"off\"\n    removeListener(eventName: EventType, listener: Listener): Provider {\n        return this.off(eventName, listener);\n    }\n\n    // @TODO: This *could* be implemented here, but would pull in events...\n    abstract waitForTransaction(transactionHash: string, confirmations?: number, timeout?: number): Promise<TransactionReceipt>;\n\n    readonly _isProvider: boolean;\n\n    constructor() {\n        logger.checkAbstract(new.target, Provider);\n        defineReadOnly(this, \"_isProvider\", true);\n    }\n\n    static isProvider(value: any): value is Provider {\n        return !!(value && value._isProvider);\n    }\n\n/*\n    static getResolver(network: Network, callable: CallTransactionable, namehash: string): string {\n        // No ENS...\n        if (!network.ensAddress) {\n            errors.throwError(\n                \"network does support ENS\",\n                errors.UNSUPPORTED_OPERATION,\n                { operation: \"ENS\", network: network.name }\n            );\n        }\n\n        // Not a namehash\n        if (!isHexString(namehash, 32)) {\n            errors.throwArgumentError(\"invalid name hash\", \"namehash\", namehash);\n        }\n\n        // keccak256(\"resolver(bytes32)\")\n        let data = \"0x0178b8bf\" + namehash.substring(2);\n        let transaction = { to: network.ensAddress, data: data };\n\n        return provider.call(transaction).then((data) => {\n            return provider.formatter.callAddress(data);\n        });\n    }\n\n    static resolveNamehash(network: Network, callable: CallTransactionable, namehash: string): string {\n        return this.getResolver(network, callable, namehash).then((resolverAddress) => {\n            if (!resolverAddress) { return null; }\n\n            // keccak256(\"addr(bytes32)\")\n            let data = \"0x3b3b57de\" + namehash(name).substring(2);\n            let transaction = { to: resolverAddress, data: data };\n            return callable.call(transaction).then((data) => {\n                return this.formatter.callAddress(data);\n            });\n\n        })\n    }\n*/\n}\n", "export const version = \"networks/5.7.1\";\n", "\"use strict\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { Network, Networkish } from \"./types\";\n\nexport {\n    Network,\n    Networkish\n};\n\ntype DefaultProviderFunc = (providers: any, options?: any) => any;\n\ninterface Renetworkable extends DefaultProviderFunc {\n    renetwork: (network: Network) => DefaultProviderFunc;\n};\n\nfunction isRenetworkable(value: any): value is Renetworkable {\n    return (value && typeof(value.renetwork) === \"function\");\n}\n\nfunction ethDefaultProvider(network: string | Network): Renetworkable {\n    const func = function(providers: any, options?: any): any {\n        if (options == null) { options = { }; }\n        const providerList: Array<any> = [];\n\n        if (providers.InfuraProvider && options.infura !== \"-\") {\n            try {\n                providerList.push(new providers.InfuraProvider(network, options.infura));\n            } catch(error) { }\n        }\n\n        if (providers.EtherscanProvider && options.etherscan !== \"-\") {\n            try {\n                providerList.push(new providers.EtherscanProvider(network, options.etherscan));\n            } catch(error) { }\n        }\n\n        if (providers.AlchemyProvider && options.alchemy !== \"-\") {\n            try {\n                providerList.push(new providers.AlchemyProvider(network, options.alchemy));\n            } catch(error) { }\n        }\n\n        if (providers.PocketProvider && options.pocket !== \"-\") {\n            // These networks are currently faulty on Pocket as their\n            // network does not handle the Berlin hardfork, which is\n            // live on these ones.\n            // @TODO: This goes away once Pocket has upgraded their nodes\n            const skip = [ \"goerli\", \"ropsten\", \"rinkeby\", \"sepolia\" ];\n            try {\n                const provider = new providers.PocketProvider(network, options.pocket);\n                if (provider.network && skip.indexOf(provider.network.name) === -1) {\n                    providerList.push(provider);\n                }\n            } catch(error) { }\n        }\n\n        if (providers.CloudflareProvider && options.cloudflare !== \"-\") {\n            try {\n                providerList.push(new providers.CloudflareProvider(network));\n            } catch(error) { }\n        }\n\n        if (providers.AnkrProvider && options.ankr !== \"-\") {\n            try {\n                const skip = [ \"ropsten\" ];\n                const provider = new providers.AnkrProvider(network, options.ankr);\n                if (provider.network && skip.indexOf(provider.network.name) === -1) {\n                    providerList.push(provider);\n                }\n            } catch(error) { }\n        }\n\n        if (providerList.length === 0) { return null; }\n\n        if (providers.FallbackProvider) {\n            let quorum = 1;\n            if (options.quorum != null) {\n                quorum = options.quorum;\n            } else if (network === \"homestead\") {\n                quorum = 2;\n            }\n            return new providers.FallbackProvider(providerList, quorum);\n        }\n\n        return providerList[0];\n    };\n\n    func.renetwork = function(network: Network) {\n        return ethDefaultProvider(network);\n    };\n\n    return func;\n}\n\nfunction etcDefaultProvider(url: string, network: string | Network): Renetworkable {\n    const func = function(providers: any, options?: any): any {\n        if (providers.JsonRpcProvider) {\n            return new providers.JsonRpcProvider(url, network);\n        }\n\n        return null;\n    };\n\n    func.renetwork = function(network: Network) {\n        return etcDefaultProvider(url, network);\n    };\n\n    return func;\n}\n\nconst homestead: Network = {\n    chainId: 1,\n    ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n    name: \"homestead\",\n    _defaultProvider: ethDefaultProvider(\"homestead\")\n};\n\nconst ropsten: Network = {\n    chainId: 3,\n    ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n    name: \"ropsten\",\n    _defaultProvider: ethDefaultProvider(\"ropsten\")\n};\n\nconst classicMordor: Network = {\n    chainId: 63,\n    name: \"classicMordor\",\n    _defaultProvider: etcDefaultProvider(\"https://www.ethercluster.com/mordor\", \"classicMordor\")\n};\n\n// See: https://chainlist.org\nconst networks: { [name: string]: Network } = {\n    unspecified: { chainId: 0, name: \"unspecified\" },\n\n    homestead: homestead,\n    mainnet: homestead,\n\n    morden: { chainId: 2, name: \"morden\" },\n\n    ropsten: ropsten,\n    testnet: ropsten,\n\n    rinkeby: {\n        chainId: 4,\n        ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n        name: \"rinkeby\",\n        _defaultProvider: ethDefaultProvider(\"rinkeby\")\n    },\n\n    kovan: {\n        chainId: 42,\n        name: \"kovan\",\n        _defaultProvider: ethDefaultProvider(\"kovan\")\n    },\n\n    goerli: {\n        chainId: 5,\n        ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n        name: \"goerli\",\n        _defaultProvider: ethDefaultProvider(\"goerli\")\n    },\n\n    kintsugi: { chainId: 1337702, name: \"kintsugi\" },\n\n    sepolia: {\n        chainId: 11155111,\n        name: \"sepolia\",\n        _defaultProvider: ethDefaultProvider(\"sepolia\")\n    },\n\n\n    // ETC (See: #351)\n    classic: {\n        chainId: 61,\n        name: \"classic\",\n        _defaultProvider: etcDefaultProvider(\"https:/\\/www.ethercluster.com/etc\", \"classic\")\n    },\n\n    classicMorden: { chainId: 62, name: \"classicMorden\" },\n\n    classicMordor: classicMordor,\n    classicTestnet: classicMordor,\n\n    classicKotti: {\n        chainId: 6,\n        name: \"classicKotti\",\n        _defaultProvider: etcDefaultProvider(\"https:/\\/www.ethercluster.com/kotti\", \"classicKotti\")\n    },\n\n    xdai: { chainId: 100, name: \"xdai\" },\n\n    matic: {\n        chainId: 137,\n        name: \"matic\",\n        _defaultProvider: ethDefaultProvider(\"matic\")\n    },\n    maticmum: { chainId: 80001, name: \"maticmum\" },\n\n    optimism: {\n        chainId: 10,\n        name: \"optimism\",\n        _defaultProvider: ethDefaultProvider(\"optimism\")\n    },\n    \"optimism-kovan\": { chainId: 69, name: \"optimism-kovan\" },\n    \"optimism-goerli\": { chainId: 420, name: \"optimism-goerli\" },\n\n    arbitrum: { chainId: 42161, name: \"arbitrum\" },\n    \"arbitrum-rinkeby\": { chainId: 421611, name: \"arbitrum-rinkeby\" },\n    \"arbitrum-goerli\": { chainId: 421613, name: \"arbitrum-goerli\" },\n\n    bnb: { chainId: 56, name: \"bnb\" },\n    bnbt: { chainId: 97, name: \"bnbt\" },\n}\n\n/**\n *  getNetwork\n *\n *  Converts a named common networks or chain ID (network ID) to a Network\n *  and verifies a network is a valid Network..\n */\nexport function getNetwork(network: Networkish): Network {\n    // No network (null)\n    if (network == null) { return null; }\n\n    if (typeof(network) === \"number\") {\n        for (const name in networks) {\n            const standard = networks[name];\n            if (standard.chainId === network) {\n                return {\n                    name: standard.name,\n                    chainId: standard.chainId,\n                    ensAddress: (standard.ensAddress || null),\n                    _defaultProvider: (standard._defaultProvider || null)\n                };\n            }\n        }\n\n        return {\n            chainId: network,\n            name: \"unknown\"\n        };\n    }\n\n    if (typeof(network) === \"string\") {\n        const standard = networks[network];\n        if (standard == null) { return null; }\n        return {\n            name: standard.name,\n            chainId: standard.chainId,\n            ensAddress: standard.ensAddress,\n            _defaultProvider: (standard._defaultProvider || null)\n        };\n    }\n\n    const standard  = networks[network.name];\n\n    // Not a standard network; check that it is a valid network in general\n    if (!standard) {\n        if (typeof(network.chainId) !== \"number\") {\n            logger.throwArgumentError(\"invalid network chainId\", \"network\", network);\n        }\n        return network;\n    }\n\n    // Make sure the chainId matches the expected network chainId (or is 0; disable EIP-155)\n    if (network.chainId !== 0 && network.chainId !== standard.chainId) {\n        logger.throwArgumentError(\"network chainId mismatch\", \"network\", network);\n    }\n\n    // @TODO: In the next major version add an attach function to a defaultProvider\n    // class and move the _defaultProvider internal to this file (extend Network)\n    let defaultProvider: DefaultProviderFunc = network._defaultProvider || null;\n    if (defaultProvider == null && standard._defaultProvider) {\n        if (isRenetworkable(standard._defaultProvider)) {\n            defaultProvider = standard._defaultProvider.renetwork(network);\n        } else {\n            defaultProvider = standard._defaultProvider;\n        }\n    }\n\n    // Standard Network (allow overriding the ENS address)\n    return {\n        name: network.name,\n        chainId: standard.chainId,\n        ensAddress: (network.ensAddress || standard.ensAddress || null),\n        _defaultProvider: defaultProvider\n    };\n}\n", "\"use strict\";\n\nimport { arrayify, BytesLike } from \"@ethersproject/bytes\";\n\nexport function decode(textData: string): Uint8Array {\n    textData = atob(textData);\n    const data = [];\n    for (let i = 0; i < textData.length; i++) {\n        data.push(textData.charCodeAt(i));\n    }\n    return arrayify(data);\n}\n\nexport function encode(data: BytesLike): string {\n    data = arrayify(data);\n    let textData = \"\";\n    for (let i = 0; i < data.length; i++) {\n        textData += String.fromCharCode(data[i]);\n    }\n    return btoa(textData);\n}\n\n\n", "\"use strict\";\n\nexport { decode, encode } from \"./base64\";\n", "/**\n * var basex = require(\"base-x\");\n *\n * This implementation is heavily based on base-x. The main reason to\n * deviate was to prevent the dependency of Buffer.\n *\n * Contributors:\n *\n * base-x encoding\n * Forked from https://github.com/cryptocoinjs/bs58\n * Originally written by Mike Hearn for BitcoinJ\n * Copyright (c) 2011 Google Inc\n * Ported to JavaScript by Stefan Thomas\n * Merged Buffer refactorings from base58-native by Stephen Pair\n * Copyright (c) 2013 BitPay Inc\n *\n * The MIT License (MIT)\n *\n * Copyright base-x contributors (c) 2016\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n * IN THE SOFTWARE.\n *\n */\n\nimport { arrayify, BytesLike } from \"@ethersproject/bytes\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\n\nexport class BaseX {\n    readonly alphabet: string;\n    readonly base: number;\n\n    _alphabetMap: { [ character: string ]: number };\n    _leader: string;\n\n    constructor(alphabet: string) {\n        defineReadOnly(this, \"alphabet\", alphabet);\n        defineReadOnly(this, \"base\", alphabet.length);\n\n        defineReadOnly(this, \"_alphabetMap\", { });\n        defineReadOnly(this, \"_leader\", alphabet.charAt(0));\n\n        // pre-compute lookup table\n        for (let i = 0; i < alphabet.length; i++) {\n            this._alphabetMap[alphabet.charAt(i)] = i;\n        }\n    }\n\n    encode(value: BytesLike): string {\n        let source = arrayify(value);\n\n        if (source.length === 0) { return \"\"; }\n\n        let digits = [ 0 ]\n        for (let i = 0; i < source.length; ++i) {\n            let carry = source[i];\n            for (let j = 0; j < digits.length; ++j) {\n                carry += digits[j] << 8;\n                digits[j] = carry % this.base;\n                carry = (carry / this.base) | 0;\n            }\n\n            while (carry > 0) {\n                digits.push(carry % this.base);\n                carry = (carry / this.base) | 0;\n            }\n        }\n\n        let string = \"\"\n\n        // deal with leading zeros\n        for (let k = 0; source[k] === 0 && k < source.length - 1; ++k) {\n            string += this._leader;\n        }\n\n        // convert digits to a string\n        for (let q = digits.length - 1; q >= 0; --q) {\n            string += this.alphabet[digits[q]];\n        }\n\n        return string;\n    }\n\n    decode(value: string): Uint8Array {\n        if (typeof(value) !== \"string\") {\n            throw new TypeError(\"Expected String\");\n        }\n\n        let bytes: Array<number> = [];\n        if (value.length === 0) { return new Uint8Array(bytes); }\n\n        bytes.push(0);\n        for (let i = 0; i < value.length; i++) {\n            let byte = this._alphabetMap[value[i]];\n\n            if (byte === undefined) {\n                throw new Error(\"Non-base\" + this.base + \" character\");\n            }\n\n            let carry = byte;\n            for (let j = 0; j < bytes.length; ++j) {\n                carry += bytes[j] * this.base;\n                bytes[j] = carry & 0xff;\n                carry >>= 8;\n            }\n\n            while (carry > 0) {\n                bytes.push(carry & 0xff);\n                carry >>= 8;\n            }\n        }\n\n        // deal with leading zeros\n        for (let k = 0; value[k] === this._leader && k < value.length - 1; ++k) {\n            bytes.push(0)\n        }\n\n        return arrayify(new Uint8Array(bytes.reverse()))\n    }\n}\n\nconst Base32 = new BaseX(\"abcdefghijklmnopqrstuvwxyz234567\");\nconst Base58 = new BaseX(\"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\");\n\nexport { Base32, Base58 };\n\n//console.log(Base58.decode(\"Qmd2V777o5XvJbYMeMb8k2nU5f8d3ciUQ5YpYuWhzv8iDj\"))\n//console.log(Base58.encode(Base58.decode(\"Qmd2V777o5XvJbYMeMb8k2nU5f8d3ciUQ5YpYuWhzv8iDj\")))\n", "\"use strict\";\n\nimport sha3 from \"js-sha3\";\n\nimport { arrayify, BytesLike } from \"@ethersproject/bytes\";\n\nexport function keccak256(data: BytesLike): string {\n    return '0x' + sha3.keccak_256(arrayify(data));\n}\n", "export const version = \"strings/5.7.0\";\n", "\"use strict\";\n\nimport { arrayify, BytesLike } from \"@ethersproject/bytes\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n///////////////////////////////\n\nexport enum UnicodeNormalizationForm {\n    current  = \"\",\n    NFC      = \"NFC\",\n    NFD      = \"NFD\",\n    NFKC     = \"NFKC\",\n    NFKD     = \"NFKD\"\n};\n\nexport enum Utf8ErrorReason {\n    // A continuation byte was present where there was nothing to continue\n    // - offset = the index the codepoint began in\n    UNEXPECTED_CONTINUE   = \"unexpected continuation byte\",\n\n    // An invalid (non-continuation) byte to start a UTF-8 codepoint was found\n    // - offset = the index the codepoint began in\n    BAD_PREFIX            = \"bad codepoint prefix\",\n\n    // The string is too short to process the expected codepoint\n    // - offset = the index the codepoint began in\n    OVERRUN               = \"string overrun\",\n\n    // A missing continuation byte was expected but not found\n    // - offset = the index the continuation byte was expected at\n    MISSING_CONTINUE      = \"missing continuation byte\",\n\n    // The computed code point is outside the range for UTF-8\n    // - offset       = start of this codepoint\n    // - badCodepoint = the computed codepoint; outside the UTF-8 range\n    OUT_OF_RANGE          = \"out of UTF-8 range\",\n\n    // UTF-8 strings may not contain UTF-16 surrogate pairs\n    // - offset       = start of this codepoint\n    // - badCodepoint = the computed codepoint; inside the UTF-16 surrogate range\n    UTF16_SURROGATE       = \"UTF-16 surrogate\",\n\n    // The string is an overlong representation\n    // - offset       = start of this codepoint\n    // - badCodepoint = the computed codepoint; already bounds checked\n    OVERLONG              = \"overlong representation\",\n};\n\n\nexport type Utf8ErrorFunc = (reason: Utf8ErrorReason, offset: number, bytes: ArrayLike<number>, output: Array<number>, badCodepoint?: number) => number;\n\nfunction errorFunc(reason: Utf8ErrorReason, offset: number, bytes: ArrayLike<number>, output: Array<number>, badCodepoint?: number): number {\n    return logger.throwArgumentError(`invalid codepoint at offset ${ offset }; ${ reason }`, \"bytes\", bytes);\n}\n\nfunction ignoreFunc(reason: Utf8ErrorReason, offset: number, bytes: ArrayLike<number>, output: Array<number>, badCodepoint?: number): number {\n\n    // If there is an invalid prefix (including stray continuation), skip any additional continuation bytes\n    if (reason === Utf8ErrorReason.BAD_PREFIX || reason === Utf8ErrorReason.UNEXPECTED_CONTINUE) {\n        let i = 0;\n        for (let o = offset + 1; o < bytes.length; o++) {\n            if (bytes[o] >> 6 !== 0x02) { break; }\n            i++;\n        }\n        return i;\n    }\n\n    // This byte runs us past the end of the string, so just jump to the end\n    // (but the first byte was read already read and therefore skipped)\n    if (reason === Utf8ErrorReason.OVERRUN) {\n        return bytes.length - offset - 1;\n    }\n\n    // Nothing to skip\n    return 0;\n}\n\nfunction replaceFunc(reason: Utf8ErrorReason, offset: number, bytes: ArrayLike<number>, output: Array<number>, badCodepoint?: number): number {\n\n    // Overlong representations are otherwise \"valid\" code points; just non-deistingtished\n    if (reason === Utf8ErrorReason.OVERLONG) {\n        output.push(badCodepoint);\n        return 0;\n    }\n\n    // Put the replacement character into the output\n    output.push(0xfffd);\n\n    // Otherwise, process as if ignoring errors\n    return ignoreFunc(reason, offset, bytes, output, badCodepoint);\n}\n\n// Common error handing strategies\nexport const Utf8ErrorFuncs: { [ name: string ]: Utf8ErrorFunc } = Object.freeze({\n    error: errorFunc,\n    ignore: ignoreFunc,\n    replace: replaceFunc\n});\n\n// http://stackoverflow.com/questions/13356493/decode-utf-8-with-javascript#13691499\nfunction getUtf8CodePoints(bytes: BytesLike, onError?: Utf8ErrorFunc): Array<number> {\n    if (onError == null) { onError = Utf8ErrorFuncs.error; }\n\n    bytes = arrayify(bytes);\n\n    const result: Array<number> = [];\n    let i = 0;\n\n    // Invalid bytes are ignored\n    while(i < bytes.length) {\n\n        const c = bytes[i++];\n\n        // 0xxx xxxx\n        if (c >> 7 === 0) {\n            result.push(c);\n            continue;\n        }\n\n        // Multibyte; how many bytes left for this character?\n        let extraLength = null;\n        let overlongMask = null;\n\n        // 110x xxxx 10xx xxxx\n        if ((c & 0xe0) === 0xc0) {\n            extraLength = 1;\n            overlongMask = 0x7f;\n\n        // 1110 xxxx 10xx xxxx 10xx xxxx\n        } else if ((c & 0xf0) === 0xe0) {\n            extraLength = 2;\n            overlongMask = 0x7ff;\n\n        // 1111 0xxx 10xx xxxx 10xx xxxx 10xx xxxx\n        } else if ((c & 0xf8) === 0xf0) {\n            extraLength = 3;\n            overlongMask = 0xffff;\n\n        } else {\n            if ((c & 0xc0) === 0x80) {\n                i += onError(Utf8ErrorReason.UNEXPECTED_CONTINUE, i - 1, bytes, result);\n            } else {\n                i += onError(Utf8ErrorReason.BAD_PREFIX, i - 1, bytes, result);\n            }\n            continue;\n        }\n\n        // Do we have enough bytes in our data?\n        if (i - 1 + extraLength >= bytes.length) {\n            i += onError(Utf8ErrorReason.OVERRUN, i - 1, bytes, result);\n            continue;\n        }\n\n        // Remove the length prefix from the char\n        let res = c & ((1 << (8 - extraLength - 1)) - 1);\n\n        for (let j = 0; j < extraLength; j++) {\n            let nextChar = bytes[i];\n\n            // Invalid continuation byte\n            if ((nextChar & 0xc0) != 0x80) {\n                i += onError(Utf8ErrorReason.MISSING_CONTINUE, i, bytes, result);\n                res = null;\n                break;\n            };\n\n            res = (res << 6) | (nextChar & 0x3f);\n            i++;\n        }\n\n        // See above loop for invalid continuation byte\n        if (res === null) { continue; }\n\n        // Maximum code point\n        if (res > 0x10ffff) {\n            i += onError(Utf8ErrorReason.OUT_OF_RANGE, i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n\n        // Reserved for UTF-16 surrogate halves\n        if (res >= 0xd800 && res <= 0xdfff) {\n            i += onError(Utf8ErrorReason.UTF16_SURROGATE, i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n\n        // Check for overlong sequences (more bytes than needed)\n        if (res <= overlongMask) {\n            i += onError(Utf8ErrorReason.OVERLONG, i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n\n        result.push(res);\n    }\n\n    return result;\n}\n\n// http://stackoverflow.com/questions/18729405/how-to-convert-utf8-string-to-byte-array\nexport function toUtf8Bytes(str: string, form: UnicodeNormalizationForm = UnicodeNormalizationForm.current): Uint8Array {\n\n    if (form != UnicodeNormalizationForm.current) {\n        logger.checkNormalize();\n        str = str.normalize(form);\n    }\n\n    let result = [];\n    for (let i = 0; i < str.length; i++) {\n        const c = str.charCodeAt(i);\n\n        if (c < 0x80) {\n            result.push(c);\n\n        } else if (c < 0x800) {\n            result.push((c >> 6) | 0xc0);\n            result.push((c & 0x3f) | 0x80);\n\n        } else if ((c & 0xfc00) == 0xd800) {\n            i++;\n            const c2 = str.charCodeAt(i);\n\n            if (i >= str.length || (c2 & 0xfc00) !== 0xdc00) {\n                throw new Error(\"invalid utf-8 string\");\n            }\n\n            // Surrogate Pair\n            const pair = 0x10000 + ((c & 0x03ff) << 10) + (c2 & 0x03ff);\n            result.push((pair >> 18) | 0xf0);\n            result.push(((pair >> 12) & 0x3f) | 0x80);\n            result.push(((pair >> 6) & 0x3f) | 0x80);\n            result.push((pair & 0x3f) | 0x80);\n\n        } else {\n            result.push((c >> 12) | 0xe0);\n            result.push(((c >> 6) & 0x3f) | 0x80);\n            result.push((c & 0x3f) | 0x80);\n        }\n    }\n\n    return arrayify(result);\n};\n\nfunction escapeChar(value: number) {\n    const hex = (\"0000\" + value.toString(16));\n    return \"\\\\u\" + hex.substring(hex.length - 4);\n}\n\nexport function _toEscapedUtf8String(bytes: BytesLike, onError?: Utf8ErrorFunc): string {\n    return '\"' + getUtf8CodePoints(bytes, onError).map((codePoint) => {\n        if (codePoint < 256) {\n            switch (codePoint) {\n                case 8:  return \"\\\\b\";\n                case 9:  return \"\\\\t\";\n                case 10: return \"\\\\n\"\n                case 13: return \"\\\\r\";\n                case 34: return \"\\\\\\\"\";\n                case 92: return \"\\\\\\\\\";\n            }\n\n            if (codePoint >= 32 && codePoint < 127) {\n                return String.fromCharCode(codePoint);\n            }\n        }\n\n        if (codePoint <= 0xffff) {\n            return escapeChar(codePoint);\n        }\n\n        codePoint -= 0x10000;\n        return escapeChar(((codePoint >> 10) & 0x3ff) + 0xd800) + escapeChar((codePoint & 0x3ff) + 0xdc00);\n    }).join(\"\") + '\"';\n}\n\nexport function _toUtf8String(codePoints: Array<number>): string {\n    return codePoints.map((codePoint) => {\n        if (codePoint <= 0xffff) {\n            return String.fromCharCode(codePoint);\n        }\n        codePoint -= 0x10000;\n        return String.fromCharCode(\n            (((codePoint >> 10) & 0x3ff) + 0xd800),\n            ((codePoint & 0x3ff) + 0xdc00)\n        );\n    }).join(\"\");\n}\n\nexport function toUtf8String(bytes: BytesLike, onError?: Utf8ErrorFunc): string {\n    return _toUtf8String(getUtf8CodePoints(bytes, onError));\n}\n\nexport function toUtf8CodePoints(str: string, form: UnicodeNormalizationForm = UnicodeNormalizationForm.current): Array<number> {\n    return getUtf8CodePoints(toUtf8Bytes(str, form));\n}\n", "\"use strict\";\n\nimport { HashZero } from \"@ethersproject/constants\";\nimport { arrayify, BytesLike, concat, hexlify } from \"@ethersproject/bytes\";\n\nimport { toUtf8Bytes, toUtf8String } from \"./utf8\";\n\n\nexport function formatBytes32String(text: string): string {\n\n    // Get the bytes\n    const bytes = toUtf8Bytes(text);\n\n    // Check we have room for null-termination\n    if (bytes.length > 31) { throw new Error(\"bytes32 string must be less than 32 bytes\"); }\n\n    // Zero-pad (implicitly null-terminates)\n    return hexlify(concat([ bytes, HashZero ]).slice(0, 32));\n}\n\nexport function parseBytes32String(bytes: BytesLike): string {\n    const data = arrayify(bytes);\n\n    // Must be 32 bytes with a null-termination\n    if (data.length !== 32) { throw new Error(\"invalid bytes32 - not 32 bytes long\"); }\n    if (data[31] !== 0) { throw new Error(\"invalid bytes32 string - no null terminator\"); }\n\n    // Find the null termination\n    let length = 31;\n    while (data[length - 1] === 0) { length--; }\n\n    // Determine the string value\n    return toUtf8String(data.slice(0, length));\n}\n\n", "\"use strict\";\n\nimport { toUtf8CodePoints, _toUtf8String, UnicodeNormalizationForm } from \"./utf8\";\n\ntype Ranged = {\n    l: number,          // Lo value\n    h: number,          // High value (less the lo)\n    d?: number,         // Delta/stride (default: 1)\n    s?: number,         // Shift (default: 1)\n    e?: Array<number>   // Exceptions to skip\n};\n\ntype Table = { [ src: number ]: Array<number> };\n\nfunction bytes2(data: string): Array<number> {\n    if ((data.length % 4) !== 0) { throw new Error(\"bad data\"); }\n    let result = [];\n    for (let i = 0; i < data.length; i += 4) {\n        result.push(parseInt(data.substring(i, i + 4), 16));\n    }\n    return result;\n}\n\nfunction createTable(data: string, func?: (value: string) => Array<number>): Table {\n    if (!func) {\n        func = function(value: string) { return [ parseInt(value, 16) ]; }\n    }\n\n    let lo = 0;\n\n    let result: Table = { };\n    data.split(\",\").forEach((pair) => {\n        let comps = pair.split(\":\");\n        lo += parseInt(comps[0], 16);\n        result[lo] = func(comps[1]);\n    });\n\n    return result;\n}\n\nfunction createRangeTable(data: string): Array<Ranged> {\n    let hi = 0;\n    return data.split(\",\").map((v) => {\n        let comps = v.split(\"-\");\n        if (comps.length === 1) {\n            comps[1] = \"0\";\n        } else if (comps[1] === \"\") {\n            comps[1] = \"1\";\n        }\n\n        let lo = hi + parseInt(comps[0], 16);\n        hi = parseInt(comps[1], 16);\n        return { l: lo, h: hi };\n    });\n}\n\nfunction matchMap(value: number, ranges: Array<Ranged>): Ranged {\n    let lo = 0;\n    for (let i = 0; i < ranges.length; i++) {\n        let range = ranges[i];\n        lo += range.l;\n        if (value >= lo && value <= lo + range.h && ((value - lo) % (range.d || 1)) === 0) {\n            if (range.e && range.e.indexOf(value - lo) !== -1) { continue; }\n            return range;\n        }\n    }\n    return null;\n}\n\nconst Table_A_1_ranges = createRangeTable(\"221,13-1b,5f-,40-10,51-f,11-3,3-3,2-2,2-4,8,2,15,2d,28-8,88,48,27-,3-5,11-20,27-,8,28,3-5,12,18,b-a,1c-4,6-16,2-d,2-2,2,1b-4,17-9,8f-,10,f,1f-2,1c-34,33-14e,4,36-,13-,6-2,1a-f,4,9-,3-,17,8,2-2,5-,2,8-,3-,4-8,2-3,3,6-,16-6,2-,7-3,3-,17,8,3,3,3-,2,6-3,3-,4-a,5,2-6,10-b,4,8,2,4,17,8,3,6-,b,4,4-,2-e,2-4,b-10,4,9-,3-,17,8,3-,5-,9-2,3-,4-7,3-3,3,4-3,c-10,3,7-2,4,5-2,3,2,3-2,3-2,4-2,9,4-3,6-2,4,5-8,2-e,d-d,4,9,4,18,b,6-3,8,4,5-6,3-8,3-3,b-11,3,9,4,18,b,6-3,8,4,5-6,3-6,2,3-3,b-11,3,9,4,18,11-3,7-,4,5-8,2-7,3-3,b-11,3,13-2,19,a,2-,8-2,2-3,7,2,9-11,4-b,3b-3,1e-24,3,2-,3,2-,2-5,5,8,4,2,2-,3,e,4-,6,2,7-,b-,3-21,49,23-5,1c-3,9,25,10-,2-2f,23,6,3,8-2,5-5,1b-45,27-9,2a-,2-3,5b-4,45-4,53-5,8,40,2,5-,8,2,5-,28,2,5-,20,2,5-,8,2,5-,8,8,18,20,2,5-,8,28,14-5,1d-22,56-b,277-8,1e-2,52-e,e,8-a,18-8,15-b,e,4,3-b,5e-2,b-15,10,b-5,59-7,2b-555,9d-3,5b-5,17-,7-,27-,7-,9,2,2,2,20-,36,10,f-,7,14-,4,a,54-3,2-6,6-5,9-,1c-10,13-1d,1c-14,3c-,10-6,32-b,240-30,28-18,c-14,a0,115-,3,66-,b-76,5,5-,1d,24,2,5-2,2,8-,35-2,19,f-10,1d-3,311-37f,1b,5a-b,d7-19,d-3,41,57-,68-4,29-3,5f,29-37,2e-2,25-c,2c-2,4e-3,30,78-3,64-,20,19b7-49,51a7-59,48e-2,38-738,2ba5-5b,222f-,3c-94,8-b,6-4,1b,6,2,3,3,6d-20,16e-f,41-,37-7,2e-2,11-f,5-b,18-,b,14,5-3,6,88-,2,bf-2,7-,7-,7-,4-2,8,8-9,8-2ff,20,5-b,1c-b4,27-,27-cbb1,f7-9,28-2,b5-221,56,48,3-,2-,3-,5,d,2,5,3,42,5-,9,8,1d,5,6,2-2,8,153-3,123-3,33-27fd,a6da-5128,21f-5df,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3,2-1d,61-ff7d\");\n\n// @TODO: Make this relative...\nconst Table_B_1_flags = \"ad,34f,1806,180b,180c,180d,200b,200c,200d,2060,feff\".split(\",\").map((v) => parseInt(v, 16));\n\nconst Table_B_2_ranges: Array<Ranged> = [\n    { h: 25, s: 32, l: 65 },\n    { h: 30, s: 32, e: [ 23 ], l: 127 },\n    { h: 54, s: 1, e: [ 48 ], l: 64, d: 2 },\n    { h: 14, s: 1, l: 57, d: 2 },\n    { h: 44, s: 1, l: 17, d: 2 },\n    { h: 10, s: 1, e: [ 2, 6, 8 ], l: 61, d: 2 },\n    { h: 16, s: 1, l: 68, d: 2 },\n    { h: 84, s: 1, e: [ 18, 24, 66 ], l: 19, d: 2 },\n    { h: 26, s: 32, e: [ 17 ], l: 435 },\n    { h: 22, s: 1, l: 71, d: 2 },\n    { h: 15, s: 80, l: 40 },\n    { h: 31, s: 32, l: 16 },\n    { h: 32, s: 1, l: 80, d: 2 },\n    { h: 52, s: 1, l: 42, d: 2 },\n    { h: 12, s: 1, l: 55, d: 2 },\n    { h: 40, s: 1, e: [ 38 ], l: 15, d: 2 },\n    { h: 14, s: 1, l: 48, d: 2 },\n    { h: 37, s: 48, l: 49 },\n    { h: 148, s: 1, l: 6351, d: 2 },\n    { h: 88, s: 1, l: 160, d: 2 },\n    { h: 15, s: 16, l: 704 },\n    { h: 25, s: 26, l: 854 },\n    { h: 25, s: 32, l: 55915 },\n    { h: 37, s: 40, l: 1247 },\n    { h: 25, s: -119711, l: 53248 },\n    { h: 25, s: -119763, l: 52 },\n    { h: 25, s: -119815, l: 52 },\n    { h: 25, s: -119867, e: [ 1, 4, 5, 7, 8, 11, 12, 17 ], l: 52 },\n    { h: 25, s: -119919, l: 52 },\n    { h: 24, s: -119971, e: [ 2, 7, 8, 17 ], l: 52 },\n    { h: 24, s: -120023, e: [ 2, 7, 13, 15, 16, 17 ], l: 52 },\n    { h: 25, s: -120075, l: 52 },\n    { h: 25, s: -120127, l: 52 },\n    { h: 25, s: -120179, l: 52 },\n    { h: 25, s: -120231, l: 52 },\n    { h: 25, s: -120283, l: 52 },\n    { h: 25, s: -120335, l: 52 },\n    { h: 24, s: -119543, e: [ 17 ], l: 56 },\n    { h: 24, s: -119601, e: [ 17 ], l: 58 },\n    { h: 24, s: -119659, e: [ 17 ], l: 58 },\n    { h: 24, s: -119717, e: [ 17 ], l: 58 },\n    { h: 24, s: -119775, e: [ 17 ], l: 58 }\n];\nconst Table_B_2_lut_abs = createTable(\"b5:3bc,c3:ff,7:73,2:253,5:254,3:256,1:257,5:259,1:25b,3:260,1:263,2:269,1:268,5:26f,1:272,2:275,7:280,3:283,5:288,3:28a,1:28b,5:292,3f:195,1:1bf,29:19e,125:3b9,8b:3b2,1:3b8,1:3c5,3:3c6,1:3c0,1a:3ba,1:3c1,1:3c3,2:3b8,1:3b5,1bc9:3b9,1c:1f76,1:1f77,f:1f7a,1:1f7b,d:1f78,1:1f79,1:1f7c,1:1f7d,107:63,5:25b,4:68,1:68,1:68,3:69,1:69,1:6c,3:6e,4:70,1:71,1:72,1:72,1:72,7:7a,2:3c9,2:7a,2:6b,1:e5,1:62,1:63,3:65,1:66,2:6d,b:3b3,1:3c0,6:64,1b574:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3\");\nconst Table_B_2_lut_rel = createTable(\"179:1,2:1,2:1,5:1,2:1,a:4f,a:1,8:1,2:1,2:1,3:1,5:1,3:1,4:1,2:1,3:1,4:1,8:2,1:1,2:2,1:1,2:2,27:2,195:26,2:25,1:25,1:25,2:40,2:3f,1:3f,33:1,11:-6,1:-9,1ac7:-3a,6d:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,b:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,c:-8,2:-8,2:-8,2:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,49:-8,1:-8,1:-4a,1:-4a,d:-56,1:-56,1:-56,1:-56,d:-8,1:-8,f:-8,1:-8,3:-7\");\nconst Table_B_2_complex = createTable(\"df:00730073,51:00690307,19:02BC006E,a7:006A030C,18a:002003B9,16:03B903080301,20:03C503080301,1d7:05650582,190f:00680331,1:00740308,1:0077030A,1:0079030A,1:006102BE,b6:03C50313,2:03C503130300,2:03C503130301,2:03C503130342,2a:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,3:1F7003B9,1:03B103B9,1:03AC03B9,2:03B10342,1:03B1034203B9,5:03B103B9,6:1F7403B9,1:03B703B9,1:03AE03B9,2:03B70342,1:03B7034203B9,5:03B703B9,6:03B903080300,1:03B903080301,3:03B90342,1:03B903080342,b:03C503080300,1:03C503080301,1:03C10313,2:03C50342,1:03C503080342,b:1F7C03B9,1:03C903B9,1:03CE03B9,2:03C90342,1:03C9034203B9,5:03C903B9,ac:00720073,5b:00B00063,6:00B00066,d:006E006F,a:0073006D,1:00740065006C,1:0074006D,124f:006800700061,2:00610075,2:006F0076,b:00700061,1:006E0061,1:03BC0061,1:006D0061,1:006B0061,1:006B0062,1:006D0062,1:00670062,3:00700066,1:006E0066,1:03BC0066,4:0068007A,1:006B0068007A,1:006D0068007A,1:00670068007A,1:00740068007A,15:00700061,1:006B00700061,1:006D00700061,1:006700700061,8:00700076,1:006E0076,1:03BC0076,1:006D0076,1:006B0076,1:006D0076,1:00700077,1:006E0077,1:03BC0077,1:006D0077,1:006B0077,1:006D0077,1:006B03C9,1:006D03C9,2:00620071,3:00632215006B0067,1:0063006F002E,1:00640062,1:00670079,2:00680070,2:006B006B,1:006B006D,9:00700068,2:00700070006D,1:00700072,2:00730076,1:00770062,c723:00660066,1:00660069,1:0066006C,1:006600660069,1:00660066006C,1:00730074,1:00730074,d:05740576,1:05740565,1:0574056B,1:057E0576,1:0574056D\", bytes2);\n\nconst Table_C_ranges = createRangeTable(\"80-20,2a0-,39c,32,f71,18e,7f2-f,19-7,30-4,7-5,f81-b,5,a800-20ff,4d1-1f,110,fa-6,d174-7,2e84-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,2,1f-5f,ff7f-20001\");\n\n\nfunction flatten(values: Array<Array<number>>): Array<number> {\n    return values.reduce((accum, value) => {\n        value.forEach((value) => { accum.push(value); });\n        return accum;\n    }, [ ]);\n}\n\nexport function _nameprepTableA1(codepoint: number): boolean {\n    return !!matchMap(codepoint, Table_A_1_ranges);\n}\n\nexport function _nameprepTableB2(codepoint: number): Array<number> {\n    let range = matchMap(codepoint, Table_B_2_ranges);\n    if (range) { return [ codepoint + range.s ]; }\n\n    let codes = Table_B_2_lut_abs[codepoint];\n    if (codes) { return codes; }\n\n    let shift = Table_B_2_lut_rel[codepoint];\n    if (shift) { return [ codepoint + shift[0] ]; }\n\n    let complex = Table_B_2_complex[codepoint];\n    if (complex) { return complex; }\n\n    return null;\n}\n\nexport function _nameprepTableC(codepoint: number): boolean {\n    return !!matchMap(codepoint, Table_C_ranges);\n}\n\nexport function nameprep(value: string): string {\n\n    // This allows platforms with incomplete normalize to bypass\n    // it for very basic names which the built-in toLowerCase\n    // will certainly handle correctly\n    if (value.match(/^[a-z0-9-]*$/i) && value.length <= 59) { return value.toLowerCase(); }\n\n    // Get the code points (keeping the current normalization)\n    let codes = toUtf8CodePoints(value);\n\n    codes = flatten(codes.map((code) => {\n        // Substitute Table B.1 (Maps to Nothing)\n        if (Table_B_1_flags.indexOf(code) >= 0) { return [ ]; }\n        if (code >= 0xfe00 && code <= 0xfe0f) { return [ ]; }\n\n        // Substitute Table B.2 (Case Folding)\n        let codesTableB2 = _nameprepTableB2(code);\n        if (codesTableB2) { return codesTableB2; }\n\n        // No Substitution\n        return [ code ];\n    }));\n\n    // Normalize using form KC\n    codes = toUtf8CodePoints(_toUtf8String(codes), UnicodeNormalizationForm.NFKC);\n\n    // Prohibit Tables C.1.2, C.2.2, C.3, C.4, C.5, C.6, C.7, C.8, C.9\n    codes.forEach((code) => {\n        if (_nameprepTableC(code)) {\n            throw new Error(\"STRINGPREP_CONTAINS_PROHIBITED\");\n        }\n    });\n\n    // Prohibit Unassigned Code Points (Table A.1)\n    codes.forEach((code) => {\n        if (_nameprepTableA1(code)) {\n            throw new Error(\"STRINGPREP_CONTAINS_UNASSIGNED\");\n        }\n    });\n\n    // IDNA extras\n    let name = _toUtf8String(codes);\n\n    // IDNA: 4.2.3.1\n    if (name.substring(0, 1) === \"-\" || name.substring(2, 4) === \"--\" || name.substring(name.length - 1) === \"-\") {\n        throw new Error(\"invalid hyphen\");\n    }\n\n    return name;\n}\n\n", "\"use strict\";\n\nimport { formatBytes32String, parseBytes32String } from \"./bytes32\";\nimport { nameprep } from \"./idna\";\nimport { _toEscapedUtf8String, toUtf8Bytes, toUtf8CodePoints, toUtf8String, UnicodeNormalizationForm, Utf8ErrorFunc, Utf8ErrorFuncs, Utf8ErrorReason } from \"./utf8\";\n\nexport {\n    _toEscapedUtf8String,\n    toUtf8Bytes,\n    toUtf8CodePoints,\n    toUtf8String,\n\n    Utf8ErrorFunc,\n    Utf8ErrorFuncs,\n    Utf8ErrorReason,\n\n    UnicodeNormalizationForm,\n\n    formatBytes32String,\n    parseBytes32String,\n\n    nameprep\n}\n", "import { keccak256 } from \"@ethersproject/keccak256\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\n\nexport function id(text: string): string {\n    return keccak256(toUtf8Bytes(text));\n}\n", "export const version = \"hash/5.7.0\";\n", "/**\n * MIT License\n *\n * Copyright (c) 2021 Andrew Raffensperger\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n * This is a near carbon-copy of the original source (link below) with the\n * TypeScript typings added and a few tweaks to make it ES3-compatible.\n *\n * See: https://github.com/adraffy/ens-normalize.js\n */\n\nexport type Numbers = Uint8Array | Array<number>;\nexport type NextFunc = (...args: Array<any>) => number;\n\n// https://github.com/behnammodi/polyfill/blob/master/array.polyfill.js\nfunction flat(array: Array<any>, depth?: number): Array<any> {\n    if (depth == null) { depth = 1; }\n    const result: Array<any> = [];\n\n    const forEach = result.forEach;\n\n    const flatDeep = function (arr: Array<any>, depth: number) {\n        forEach.call(arr, function (val: any) {\n            if (depth > 0 && Array.isArray(val)) {\n                flatDeep(val, depth - 1);\n            } else {\n               result.push(val);\n            }\n        });\n    };\n\n    flatDeep(array, depth);\n    return result;\n}\n\nfunction fromEntries<T extends string | number | symbol = string | number | symbol, U = any>(array: Array<[T, U]>): Record<T, U> {\n    const result: Record<T, U> = <Record<T, U>>{ };\n    for (let i = 0; i < array.length; i++) {\n        const value = array[i];\n        result[value[0]] = value[1];\n    }\n    return result;\n}\n\nexport function decode_arithmetic(bytes: Numbers): Array<number> {\n\tlet pos = 0;\n\tfunction u16() { return (bytes[pos++] << 8) | bytes[pos++]; }\n\t\n\t// decode the frequency table\n\tlet symbol_count = u16();\n\tlet total = 1;\n\tlet acc = [0, 1]; // first symbol has frequency 1\n\tfor (let i = 1; i < symbol_count; i++) {\n\t\tacc.push(total += u16());\n\t}\n\n\t// skip the sized-payload that the last 3 symbols index into\n\tlet skip = u16();\n\tlet pos_payload = pos;\n\tpos += skip;\n\n\tlet read_width = 0;\n\tlet read_buffer = 0; \n\tfunction read_bit() {\n\t\tif (read_width == 0) {\n\t\t\t// this will read beyond end of buffer\n\t\t\t// but (undefined|0) => zero pad\n\t\t\tread_buffer = (read_buffer << 8) | bytes[pos++];\n\t\t\tread_width = 8;\n\t\t}\n\t\treturn (read_buffer >> --read_width) & 1;\n\t}\n\n\tconst N = 31;\n\tconst FULL = 2**N;\n\tconst HALF = FULL >>> 1;\n\tconst QRTR = HALF >> 1;\n\tconst MASK = FULL - 1;\n\n\t// fill register\n\tlet register = 0;\n\tfor (let i = 0; i < N; i++) register = (register << 1) | read_bit();\n\n\tlet symbols = [];\n\tlet low = 0;\n\tlet range = FULL; // treat like a float\n\twhile (true) {\n\t\tlet value = Math.floor((((register - low + 1) * total) - 1) / range);\n\t\tlet start = 0;\n\t\tlet end = symbol_count;\n\t\twhile (end - start > 1) { // binary search\n\t\t\tlet mid = (start + end) >>> 1;\n\t\t\tif (value < acc[mid]) {\n\t\t\t\tend = mid;\n\t\t\t} else {\n\t\t\t\tstart = mid;\n\t\t\t}\n\t\t}\n\t\tif (start == 0) break; // first symbol is end mark\n\t\tsymbols.push(start);\n\t\tlet a = low + Math.floor(range * acc[start]   / total);\n\t\tlet b = low + Math.floor(range * acc[start+1] / total) - 1\n\t\twhile (((a ^ b) & HALF) == 0) {\n\t\t\tregister = (register << 1) & MASK | read_bit();\n\t\t\ta = (a << 1) & MASK;\n\t\t\tb = (b << 1) & MASK | 1;\n\t\t}\n\t\twhile (a & ~b & QRTR) {\n\t\t\tregister = (register & HALF) | ((register << 1) & (MASK >>> 1)) | read_bit();\n\t\t\ta = (a << 1) ^ HALF;\n\t\t\tb = ((b ^ HALF) << 1) | HALF | 1;\n\t\t}\n\t\tlow = a;\n\t\trange = 1 + b - a;\n\t}\n\tlet offset = symbol_count - 4;\n\treturn symbols.map(x => { // index into payload\n\t\tswitch (x - offset) {\n\t\t\tcase 3: return offset + 0x10100 + ((bytes[pos_payload++] << 16) | (bytes[pos_payload++] << 8) | bytes[pos_payload++]);\n\t\t\tcase 2: return offset + 0x100 + ((bytes[pos_payload++] << 8) | bytes[pos_payload++]);\n\t\t\tcase 1: return offset + bytes[pos_payload++];\n\t\t\tdefault: return x - 1;\n\t\t}\n\t});\n}\t\n\n\n// returns an iterator which returns the next symbol\nexport function read_payload(v: Numbers): NextFunc {\n\tlet pos = 0;\n\treturn () => v[pos++];\n}\nexport function read_compressed_payload(bytes: Numbers): NextFunc {\n\treturn read_payload(decode_arithmetic(bytes));\n}\n\n// eg. [0,1,2,3...] => [0,-1,1,-2,...]\nexport function signed(i: number): number { \n\treturn (i & 1) ? (~i >> 1) : (i >> 1);\n}\n\nfunction read_counts(n: number, next: NextFunc): Array<number> {\n\tlet v = Array(n);\n\tfor (let i = 0; i < n; i++) v[i] = 1 + next();\n\treturn v;\n}\n\nfunction read_ascending(n: number, next: NextFunc): Array<number> {\n\tlet v = Array(n);\n\tfor (let i = 0, x = -1; i < n; i++) v[i] = x += 1 + next();\n\treturn v;\n}\n\nfunction read_deltas(n: number, next: NextFunc): Array<number> {\n\tlet v = Array(n);\n\tfor (let i = 0, x = 0; i < n; i++) v[i] = x += signed(next());\n\treturn v;\n}\n\nexport function read_member_array(next: NextFunc, lookup?: Record<number, number>) {\n    let v = read_ascending(next(), next);\n    let n = next();\n    let vX = read_ascending(n, next);\n    let vN = read_counts(n, next);\n    for (let i = 0; i < n; i++) {\n        for (let j = 0; j < vN[i]; j++) {\n            v.push(vX[i] + j);\n        }\n    }\n    return lookup ? v.map(x => lookup[x]) : v;\n}\n\n// returns array of \n// [x, ys] => single replacement rule\n// [x, ys, n, dx, dx] => linear map\nexport function read_mapped_map(next: NextFunc): Record<number, Array<number>> {\n\tlet ret = [];\n\twhile (true) {\n\t\tlet w = next();\n\t\tif (w == 0) break;\n\t\tret.push(read_linear_table(w, next));\n\t}\n\twhile (true) {\n\t\tlet w = next() - 1;\n\t\tif (w < 0) break;\n\t\tret.push(read_replacement_table(w, next));\n\t}\n\treturn fromEntries<number, Array<number>>(flat(ret));\n}\n\nexport function read_zero_terminated_array(next: NextFunc): Array<number> {\n\tlet v = [];\n\twhile (true) {\n\t\tlet i = next();\n\t\tif (i == 0) break;\n\t\tv.push(i);\n\t}\n\treturn v;\n}\n\nfunction read_transposed(n: number, w: number, next: NextFunc): Array<Array<number>> {\n    let m = Array(n).fill(undefined).map(() => []);\n    for (let i = 0; i < w; i++) {\n        read_deltas(n, next).forEach((x, j) => m[j].push(x));\n    }\n    return m;\n}\n\n\nfunction read_linear_table(w: number, next: NextFunc): Array<Array<number | Array<number>>> {\n\tlet dx = 1 + next();\n\tlet dy = next();\n\tlet vN = read_zero_terminated_array(next);\n\tlet m = read_transposed(vN.length, 1+w, next);\n\treturn flat(m.map((v, i) => {\n\t  const x = v[0], ys = v.slice(1);\n\t\t//let [x, ...ys] = v;\n\t\t//return Array(vN[i]).fill().map((_, j) => {\n\t\treturn Array(vN[i]).fill(undefined).map((_, j) => {\n\t\t\tlet j_dy = j * dy;\n\t\t\treturn [x + j * dx, ys.map(y => y + j_dy)];\n\t\t});\n\t}));\n}\n\nfunction read_replacement_table(w: number, next: NextFunc): Array<[ number, Array<number> ]> {\n\tlet n = 1 + next();\n\tlet m = read_transposed(n, 1+w, next);\n\treturn m.map(v => [v[0], v.slice(1)]);\n}\n\nexport type Branch = {\n    set: Set<number>;\n    node: Node;\n};\n\nexport type Node = {\n    branches: Array<Branch>;\n    valid: number;\n    fe0f: boolean;\n    save: boolean;\n    check: boolean;\n};\n\nexport function read_emoji_trie(next: NextFunc): Node {\n\tlet sorted = read_member_array(next).sort((a, b) => a - b);\n\treturn read();\n\tfunction read(): Node {\n\t\tlet branches = [];\n\t\twhile (true) {\n\t\t\tlet keys = read_member_array(next, sorted);\n\t\t\tif (keys.length == 0) break;\n\t\t\tbranches.push({set: new Set(keys), node: read()});\n\t\t}\n    branches.sort((a, b) => b.set.size - a.set.size); // sort by likelihood\n \t\tlet temp = next();\n \t\tlet valid = temp % 3;\n \t\ttemp = (temp / 3)|0;\n \t\tlet fe0f = !!(temp & 1);\n \t\ttemp >>= 1;\n \t\tlet save = temp == 1;\n \t\tlet check = temp == 2;\n \t\treturn {branches, valid, fe0f, save, check};\n\t}\n}\n", "/**\n * MIT License\n *\n * Copyright (c) 2021 Andrew Raffensperger\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n * This is a near carbon-copy of the original source (link below) with the\n * TypeScript typings added and a few tweaks to make it ES3-compatible.\n *\n * See: https://github.com/adraffy/ens-normalize.js\n */\n\nimport { decode } from \"@ethersproject/base64\";\n\nimport {read_compressed_payload} from './decoder.js';\n\nexport function getData(): () => number {\n    return read_compressed_payload(decode(''));\n}\n\n", "/**\n * MIT License\n *\n * Copyright (c) 2021 Andrew Raffensperger\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n * This is a near carbon-copy of the original source (link below) with the\n * TypeScript typings added and a few tweaks to make it ES3-compatible.\n *\n * See: https://github.com/adraffy/ens-normalize.js\n */\n\nimport { toUtf8CodePoints } from \"@ethersproject/strings\";\n\nimport { getData } from './include.js';\nconst r = getData();\n\nimport {read_member_array, read_mapped_map, read_emoji_trie} from './decoder.js';\n\n// @TODO: This should be lazily loaded\n\nconst VALID = new Set(read_member_array(r));\nconst IGNORED = new Set(read_member_array(r));\nconst MAPPED = read_mapped_map(r);\nconst EMOJI_ROOT = read_emoji_trie(r);\n//const NFC_CHECK = new Set(read_member_array(r, Array.from(VALID.values()).sort((a, b) => a - b)));\n\n//const STOP = 0x2E;\nconst HYPHEN = 0x2D;\nconst UNDERSCORE = 0x5F;\n\nfunction explode_cp(name: string): Array<number> {\n    return toUtf8CodePoints(name);\n}\n\nfunction filter_fe0f(cps: Array<number>): Array<number> {\n    return cps.filter(cp => cp != 0xFE0F);\n}\n\nexport function ens_normalize_post_check(name: string): string {\n\tfor (let label of name.split('.')) {\n\t\tlet cps = explode_cp(label);\n\t\ttry {\n\t\t\tfor (let i = cps.lastIndexOf(UNDERSCORE) - 1; i >= 0; i--) {\n\t\t\t\tif (cps[i] !== UNDERSCORE) {\n\t\t\t\t\tthrow new Error(`underscore only allowed at start`);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (cps.length >= 4 && cps.every(cp => cp < 0x80) && cps[2] === HYPHEN && cps[3] === HYPHEN) {\n\t\t\t\tthrow new Error(`invalid label extension`);\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tthrow new Error(`Invalid label \"${label}\": ${err.message}`);\n\t\t}\n\t}\n\treturn name;\n}\n\nexport function ens_normalize(name: string): string {\n\treturn ens_normalize_post_check(normalize(name, filter_fe0f));\n}\n\nfunction normalize(name: string, emoji_filter: (a: Array<number>) => Array<number>): string {\n\tlet input = explode_cp(name).reverse(); // flip for pop\n\tlet output = [];\n\twhile (input.length) {\t\t\n\t\tlet emoji = consume_emoji_reversed(input);\n\t\tif (emoji) {\n\t\t\toutput.push(...emoji_filter(emoji));\n\t\t\tcontinue;\n\t\t}\n\t\tlet cp = input.pop();\n\t\tif (VALID.has(cp)) {\n\t\t\toutput.push(cp);\n\t\t\tcontinue;\n\t\t} \n\t\tif (IGNORED.has(cp)) {\n\t\t\tcontinue;\n\t\t}\n\t\tlet cps = MAPPED[cp];\n\t\tif (cps) {\n\t\t\toutput.push(...cps);\n\t\t\tcontinue;\n\t\t}\n\t\tthrow new Error(`Disallowed codepoint: 0x${cp.toString(16).toUpperCase()}`);\n\t}\n\treturn ens_normalize_post_check(nfc(String.fromCodePoint(...output)));\n}\n\nfunction nfc(s: string): string {\n    return s.normalize('NFC');\n}\n\nfunction consume_emoji_reversed(cps: Array<number>, eaten?: Array<number>) {\n\tlet node = EMOJI_ROOT;\n\tlet emoji;\n\tlet saved;\n\tlet stack = [];\n\tlet pos = cps.length;\n\tif (eaten) eaten.length = 0; // clear input buffer (if needed)\n\twhile (pos) {\n\t\tlet cp = cps[--pos];\n\t\tnode = node.branches.find(x => x.set.has(cp))?.node;\n\t\tif (!node) break;\n\t\tif (node.save) { // remember\n\t\t\tsaved = cp;\n\t\t} else if (node.check) { // check exclusion\n\t\t\tif (cp === saved) break;\n\t\t}\n\t\tstack.push(cp);\n\t\tif (node.fe0f) {\n\t\t\tstack.push(0xFE0F);\n\t\t\tif (pos > 0 && cps[pos - 1] == 0xFE0F) pos--; // consume optional FE0F\n\t\t}\n\t\tif (node.valid) { // this is a valid emoji (so far)\n\t\t\temoji = stack.slice(); // copy stack\n\t\t\tif (node.valid == 2) emoji.splice(1, 1); // delete FE0F at position 1 (RGI ZWJ don't follow spec!)\n\t\t\tif (eaten) eaten.push(...cps.slice(pos).reverse()); // copy input (if needed)\n\t\t\tcps.length = pos; // truncate\n\t\t}\n\t}\n\treturn emoji;\n}\n", "import { concat, hexlify } from \"@ethersproject/bytes\";\nimport { toUtf8Bytes, toUtf8String } from \"@ethersproject/strings\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { ens_normalize } from \"./ens-normalize/lib\";\n\nconst Zeros = new Uint8Array(32);\nZeros.fill(0);\n\nfunction checkComponent(comp: Uint8Array): Uint8Array {\n    if (comp.length === 0) { throw new Error(\"invalid ENS name; empty component\"); }\n    return comp;\n}\n\nfunction ensNameSplit(name: string): Array<Uint8Array> {\n    const bytes = toUtf8Bytes(ens_normalize(name));\n    const comps: Array<Uint8Array> = [ ];\n\n    if (name.length === 0) { return comps; }\n\n    let last = 0;\n    for (let i = 0; i < bytes.length; i++) {\n        const d = bytes[i];\n\n        // A separator (i.e. \".\"); copy this component\n        if (d === 0x2e) {\n            comps.push(checkComponent(bytes.slice(last, i)));\n            last = i + 1;\n        }\n    }\n\n    // There was a stray separator at the end of the name\n    if (last >= bytes.length) { throw new Error(\"invalid ENS name; empty component\"); }\n\n    comps.push(checkComponent(bytes.slice(last)));\n    return comps;\n}\n\nexport function ensNormalize(name: string): string {\n    return ensNameSplit(name).map((comp) => toUtf8String(comp)).join(\".\");\n}\n\nexport function isValidName(name: string): boolean {\n    try {\n        return (ensNameSplit(name).length !== 0);\n    } catch (error) { }\n    return false;\n}\n\nexport function namehash(name: string): string {\n    /* istanbul ignore if */\n    if (typeof(name) !== \"string\") {\n        logger.throwArgumentError(\"invalid ENS name; not a string\", \"name\", name);\n    }\n\n    let result: string | Uint8Array = Zeros;\n\n    const comps = ensNameSplit(name);\n    while (comps.length) {\n        result = keccak256(concat([result, keccak256(comps.pop())]));\n    }\n\n    return hexlify(result);\n}\n\nexport function dnsEncode(name: string): string {\n    return hexlify(concat(ensNameSplit(name).map((comp) => {\n        // DNS does not allow components over 63 bytes in length\n        if (comp.length > 63) {\n            throw new Error(\"invalid DNS encoded entry; length exceeds 63 bytes\");\n        }\n\n        const bytes = new Uint8Array(comp.length + 1);\n        bytes.set(comp, 1);\n        bytes[0] = bytes.length - 1;\n        return bytes;\n\n    }))) + \"00\";\n}\n", "import { Bytes, concat } from \"@ethersproject/bytes\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\n\nexport const messagePrefix = \"\\x19Ethereum Signed Message:\\n\";\n\nexport function hashMessage(message: Bytes | string): string {\n    if (typeof(message) === \"string\") { message = toUtf8Bytes(message); }\n    return keccak256(concat([\n        toUtf8Bytes(messagePrefix),\n        toUtf8Bytes(String(message.length)),\n        message\n    ]));\n}\n\n", "export const version = \"rlp/5.7.0\";\n", "\"use strict\";\n\n//See: https://github.com/ethereum/wiki/wiki/RLP\n\nimport { arrayify, BytesLike, hexlify, isBytesLike } from \"@ethersproject/bytes\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nfunction arrayifyInteger(value: number): Array<number> {\n    const result = [];\n    while (value) {\n        result.unshift(value & 0xff);\n        value >>= 8;\n    }\n    return result;\n}\n\nfunction unarrayifyInteger(data: Uint8Array, offset: number, length: number): number {\n    let result = 0;\n    for (let i = 0; i < length; i++) {\n        result = (result * 256) + data[offset + i];\n    }\n    return result;\n}\n\nfunction _encode(object: Array<any> | string): Array<number> {\n    if (Array.isArray(object)) {\n        let payload: Array<number> = [];\n        object.forEach(function(child) {\n            payload = payload.concat(_encode(child));\n        });\n\n        if (payload.length <= 55) {\n            payload.unshift(0xc0 + payload.length)\n            return payload;\n        }\n\n        const length = arrayifyInteger(payload.length);\n        length.unshift(0xf7 + length.length);\n\n        return length.concat(payload);\n\n    }\n\n    if (!isBytesLike(object)) {\n        logger.throwArgumentError(\"RLP object must be BytesLike\", \"object\", object);\n    }\n\n    const data: Array<number> = Array.prototype.slice.call(arrayify(object));\n\n    if (data.length === 1 && data[0] <= 0x7f) {\n        return data;\n\n    } else if (data.length <= 55) {\n        data.unshift(0x80 + data.length);\n        return data;\n    }\n\n    const length = arrayifyInteger(data.length);\n    length.unshift(0xb7 + length.length);\n\n    return length.concat(data);\n}\n\nexport function encode(object: any): string {\n    return hexlify(_encode(object));\n}\n\ntype Decoded = {\n    result: any;\n    consumed: number;\n};\n\nfunction _decodeChildren(data: Uint8Array, offset: number, childOffset: number, length: number): Decoded {\n    const result = [];\n\n    while (childOffset < offset + 1 + length) {\n        const decoded = _decode(data, childOffset);\n\n        result.push(decoded.result);\n\n        childOffset += decoded.consumed;\n        if (childOffset > offset + 1 + length) {\n            logger.throwError(\"child data too short\", Logger.errors.BUFFER_OVERRUN, { });\n        }\n    }\n\n    return {consumed: (1 + length), result: result};\n}\n\n// returns { consumed: number, result: Object }\nfunction _decode(data: Uint8Array, offset: number): { consumed: number, result: any } {\n    if (data.length === 0) {\n        logger.throwError(\"data too short\", Logger.errors.BUFFER_OVERRUN, { });\n    }\n\n    // Array with extra length prefix\n    if (data[offset] >= 0xf8) {\n        const lengthLength = data[offset] - 0xf7;\n        if (offset + 1 + lengthLength > data.length) {\n            logger.throwError(\"data short segment too short\", Logger.errors.BUFFER_OVERRUN, { });\n        }\n\n        const length = unarrayifyInteger(data, offset + 1, lengthLength);\n        if (offset + 1 + lengthLength + length > data.length) {\n            logger.throwError(\"data long segment too short\", Logger.errors.BUFFER_OVERRUN, { });\n        }\n\n        return _decodeChildren(data, offset, offset + 1 + lengthLength, lengthLength + length);\n\n    } else if (data[offset] >= 0xc0) {\n        const length = data[offset] - 0xc0;\n        if (offset + 1 + length > data.length) {\n            logger.throwError(\"data array too short\", Logger.errors.BUFFER_OVERRUN, { });\n        }\n\n        return _decodeChildren(data, offset, offset + 1, length);\n\n    } else if (data[offset] >= 0xb8) {\n        const lengthLength = data[offset] - 0xb7;\n        if (offset + 1 + lengthLength > data.length) {\n            logger.throwError(\"data array too short\", Logger.errors.BUFFER_OVERRUN, { });\n        }\n\n        const length = unarrayifyInteger(data, offset + 1, lengthLength);\n        if (offset + 1 + lengthLength + length > data.length) {\n            logger.throwError(\"data array too short\", Logger.errors.BUFFER_OVERRUN, { });\n        }\n\n        const result = hexlify(data.slice(offset + 1 + lengthLength, offset + 1 + lengthLength + length));\n        return { consumed: (1 + lengthLength + length), result: result }\n\n    } else if (data[offset] >= 0x80) {\n        const length = data[offset] - 0x80;\n        if (offset + 1 + length > data.length) {\n            logger.throwError(\"data too short\", Logger.errors.BUFFER_OVERRUN, { });\n        }\n\n        const result = hexlify(data.slice(offset + 1, offset + 1 + length));\n        return { consumed: (1 + length), result: result }\n    }\n    return { consumed: 1, result: hexlify(data[offset]) };\n}\n\nexport function decode(data: BytesLike): any {\n    const bytes = arrayify(data);\n    const decoded = _decode(bytes, 0);\n    if (decoded.consumed !== bytes.length) {\n        logger.throwArgumentError(\"invalid rlp data\", \"data\", data);\n    }\n    return decoded.result;\n}\n\n", "export const version = \"address/5.7.0\";\n", "\"use strict\";\n\nimport { arrayify, BytesLike, concat, hexDataLength, hexDataSlice, isHexString, stripZeros } from \"@ethersproject/bytes\";\nimport { BigNumber, BigNumberish, _base16To36, _base36To16 } from \"@ethersproject/bignumber\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { encode } from \"@ethersproject/rlp\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nfunction getChecksumAddress(address: string): string {\n    if (!isHexString(address, 20)) {\n        logger.throwArgumentError(\"invalid address\", \"address\", address);\n    }\n\n    address = address.toLowerCase();\n\n    const chars = address.substring(2).split(\"\");\n\n    const expanded = new Uint8Array(40);\n    for (let i = 0; i < 40; i++) {\n        expanded[i] = chars[i].charCodeAt(0);\n    }\n\n    const hashed = arrayify(keccak256(expanded));\n\n    for (let i = 0; i < 40; i += 2) {\n        if ((hashed[i >> 1] >> 4) >= 8) {\n            chars[i] = chars[i].toUpperCase();\n        }\n        if ((hashed[i >> 1] & 0x0f) >= 8) {\n            chars[i + 1] = chars[i + 1].toUpperCase();\n        }\n    }\n\n    return \"0x\" + chars.join(\"\");\n}\n\n// Shims for environments that are missing some required constants and functions\nconst MAX_SAFE_INTEGER: number = 0x1fffffffffffff;\n\nfunction log10(x: number): number {\n    if (Math.log10) { return Math.log10(x); }\n    return Math.log(x) / Math.LN10;\n}\n\n\n// See: https://en.wikipedia.org/wiki/International_Bank_Account_Number\n\n// Create lookup table\nconst ibanLookup: { [character: string]: string } = { };\nfor (let i = 0; i < 10; i++) { ibanLookup[String(i)] = String(i); }\nfor (let i = 0; i < 26; i++) { ibanLookup[String.fromCharCode(65 + i)] = String(10 + i); }\n\n// How many decimal digits can we process? (for 64-bit float, this is 15)\nconst safeDigits = Math.floor(log10(MAX_SAFE_INTEGER));\n\nfunction ibanChecksum(address: string): string {\n    address = address.toUpperCase();\n    address = address.substring(4) + address.substring(0, 2) + \"00\";\n\n    let expanded = address.split(\"\").map((c) => { return ibanLookup[c]; }).join(\"\");\n\n    // Javascript can handle integers safely up to 15 (decimal) digits\n    while (expanded.length >= safeDigits){\n        let block = expanded.substring(0, safeDigits);\n        expanded = parseInt(block, 10) % 97 + expanded.substring(block.length);\n    }\n\n    let checksum = String(98 - (parseInt(expanded, 10) % 97));\n    while (checksum.length < 2) { checksum = \"0\" + checksum; }\n\n    return checksum;\n};\n\nexport function getAddress(address: string): string {\n    let result = null;\n\n    if (typeof(address) !== \"string\") {\n        logger.throwArgumentError(\"invalid address\", \"address\", address);\n    }\n\n    if (address.match(/^(0x)?[0-9a-fA-F]{40}$/)) {\n\n        // Missing the 0x prefix\n        if (address.substring(0, 2) !== \"0x\") { address = \"0x\" + address; }\n\n        result = getChecksumAddress(address);\n\n        // It is a checksummed address with a bad checksum\n        if (address.match(/([A-F].*[a-f])|([a-f].*[A-F])/) && result !== address) {\n            logger.throwArgumentError(\"bad address checksum\", \"address\", address);\n        }\n\n    // Maybe ICAP? (we only support direct mode)\n    } else if (address.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {\n\n        // It is an ICAP address with a bad checksum\n        if (address.substring(2, 4) !== ibanChecksum(address)) {\n            logger.throwArgumentError(\"bad icap checksum\", \"address\", address);\n        }\n\n        result = _base36To16(address.substring(4));\n        while (result.length < 40) { result = \"0\" + result; }\n        result = getChecksumAddress(\"0x\" + result);\n\n    } else {\n        logger.throwArgumentError(\"invalid address\", \"address\", address);\n    }\n\n    return result;\n}\n\nexport function isAddress(address: string): boolean {\n    try {\n        getAddress(address);\n        return true;\n    } catch (error) { }\n    return false;\n}\n\nexport function getIcapAddress(address: string): string {\n    let base36 = _base16To36(getAddress(address).substring(2)).toUpperCase();\n    while (base36.length < 30) { base36 = \"0\" + base36; }\n    return \"XE\" + ibanChecksum(\"XE00\" + base36) + base36;\n}\n\n// http://ethereum.stackexchange.com/questions/760/how-is-the-address-of-an-ethereum-contract-computed\nexport function getContractAddress(transaction: { from: string, nonce: BigNumberish }) {\n    let from: string = null;\n    try {\n        from = getAddress(transaction.from);\n    } catch (error) {\n        logger.throwArgumentError(\"missing from address\", \"transaction\", transaction);\n    }\n\n    const nonce = stripZeros(arrayify(BigNumber.from(transaction.nonce).toHexString()));\n\n    return getAddress(hexDataSlice(keccak256(encode([ from, nonce ])), 12));\n}\n\nexport function getCreate2Address(from: string, salt: BytesLike, initCodeHash: BytesLike): string {\n    if (hexDataLength(salt) !== 32) {\n        logger.throwArgumentError(\"salt must be 32 bytes\", \"salt\", salt);\n    }\n    if (hexDataLength(initCodeHash) !== 32) {\n        logger.throwArgumentError(\"initCodeHash must be 32 bytes\", \"initCodeHash\", initCodeHash);\n    }\n    return getAddress(hexDataSlice(keccak256(concat([ \"0xff\", getAddress(from), salt, initCodeHash ])), 12))\n}\n", "import { TypedDataDomain, TypedDataField } from \"@ethersproject/abstract-signer\";\nimport { getAddress } from \"@ethersproject/address\";\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { arrayify, BytesLike, hexConcat, hexlify, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { deepCopy, defineReadOnly, shallowCopy } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { id } from \"./id\";\n\nconst padding = new Uint8Array(32);\npadding.fill(0);\n\nconst NegativeOne: BigNumber = BigNumber.from(-1);\nconst Zero: BigNumber = BigNumber.from(0);\nconst One: BigNumber = BigNumber.from(1);\nconst MaxUint256: BigNumber = BigNumber.from(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n\nfunction hexPadRight(value: BytesLike) {\n    const bytes = arrayify(value);\n    const padOffset = bytes.length % 32\n    if (padOffset) {\n        return hexConcat([ bytes, padding.slice(padOffset) ]);\n    }\n    return hexlify(bytes);\n}\n\nconst hexTrue = hexZeroPad(One.toHexString(), 32);\nconst hexFalse = hexZeroPad(Zero.toHexString(), 32);\n\nconst domainFieldTypes: Record<string, string> = {\n    name: \"string\",\n    version: \"string\",\n    chainId: \"uint256\",\n    verifyingContract: \"address\",\n    salt: \"bytes32\"\n};\n\nconst domainFieldNames: Array<string> = [\n    \"name\", \"version\", \"chainId\", \"verifyingContract\", \"salt\"\n];\n\nfunction checkString(key: string): (value: any) => string {\n    return function (value: any){\n        if (typeof(value) !== \"string\") {\n            logger.throwArgumentError(`invalid domain value for ${ JSON.stringify(key) }`, `domain.${ key }`, value);\n        }\n        return value;\n    }\n}\n\nconst domainChecks: Record<string, (value: any) => any> = {\n    name: checkString(\"name\"),\n    version: checkString(\"version\"),\n    chainId: function(value: any) {\n        try {\n            return BigNumber.from(value).toString()\n        } catch (error) { }\n        return logger.throwArgumentError(`invalid domain value for \"chainId\"`, \"domain.chainId\", value);\n    },\n    verifyingContract: function(value: any) {\n        try {\n            return getAddress(value).toLowerCase();\n        } catch (error) { }\n        return logger.throwArgumentError(`invalid domain value \"verifyingContract\"`, \"domain.verifyingContract\", value);\n    },\n    salt: function(value: any) {\n        try {\n            const bytes = arrayify(value);\n            if (bytes.length !== 32) { throw new Error(\"bad length\"); }\n            return hexlify(bytes);\n        } catch (error) { }\n        return logger.throwArgumentError(`invalid domain value \"salt\"`, \"domain.salt\", value);\n    }\n}\n\nfunction getBaseEncoder(type: string): (value: any) => string {\n    // intXX and uintXX\n    {\n        const match = type.match(/^(u?)int(\\d*)$/);\n        if (match) {\n            const signed = (match[1] === \"\");\n\n            const width = parseInt(match[2] || \"256\");\n            if (width % 8 !== 0 || width > 256 || (match[2] && match[2] !== String(width))) {\n                logger.throwArgumentError(\"invalid numeric width\", \"type\", type);\n            }\n\n            const boundsUpper = MaxUint256.mask(signed ? (width - 1): width);\n            const boundsLower = signed ? boundsUpper.add(One).mul(NegativeOne): Zero;\n\n            return function(value: BigNumberish) {\n                const v = BigNumber.from(value);\n\n                if (v.lt(boundsLower) || v.gt(boundsUpper)) {\n                    logger.throwArgumentError(`value out-of-bounds for ${ type }`, \"value\", value);\n                }\n\n                return hexZeroPad(v.toTwos(256).toHexString(), 32);\n            };\n        }\n    }\n\n    // bytesXX\n    {\n        const match = type.match(/^bytes(\\d+)$/);\n        if (match) {\n            const width = parseInt(match[1]);\n            if (width === 0 || width > 32 || match[1] !== String(width)) {\n                logger.throwArgumentError(\"invalid bytes width\", \"type\", type);\n            }\n\n            return function(value: BytesLike) {\n                const bytes = arrayify(value);\n                if (bytes.length !== width) {\n                    logger.throwArgumentError(`invalid length for ${ type }`, \"value\", value);\n                }\n                return hexPadRight(value);\n            };\n        }\n    }\n\n    switch (type) {\n        case \"address\": return function(value: string) {\n            return hexZeroPad(getAddress(value), 32);\n        };\n        case \"bool\": return function(value: boolean) {\n            return ((!value) ? hexFalse: hexTrue);\n        };\n        case \"bytes\": return function(value: BytesLike) {\n            return keccak256(value);\n        };\n        case \"string\": return function(value: string) {\n            return id(value);\n        };\n    }\n\n    return null;\n}\n\nfunction encodeType(name: string, fields: Array<TypedDataField>): string {\n    return `${ name }(${ fields.map(({ name, type }) => (type + \" \" + name)).join(\",\") })`;\n}\n\nexport class TypedDataEncoder {\n    readonly primaryType: string;\n    readonly types: Record<string, Array<TypedDataField>>;\n\n    readonly _encoderCache: Record<string, (value: any) => string>;\n    readonly _types: Record<string, string>;\n\n    constructor(types: Record<string, Array<TypedDataField>>) {\n        defineReadOnly(this, \"types\", Object.freeze(deepCopy(types)));\n\n        defineReadOnly(this, \"_encoderCache\", { });\n        defineReadOnly(this, \"_types\", { });\n\n        // Link struct types to their direct child structs\n        const links: Record<string, Record<string, boolean>> = { };\n\n        // Link structs to structs which contain them as a child\n        const parents: Record<string, Array<string>> = { };\n\n        // Link all subtypes within a given struct\n        const subtypes: Record<string, Record<string, boolean>> = { };\n\n        Object.keys(types).forEach((type) => {\n            links[type] = { };\n            parents[type] = [ ];\n            subtypes[type] = { }\n        });\n\n        for (const name in types) {\n\n            const uniqueNames: Record<string, boolean> = { };\n\n            types[name].forEach((field) => {\n\n                // Check each field has a unique name\n                if (uniqueNames[field.name]) {\n                    logger.throwArgumentError(`duplicate variable name ${ JSON.stringify(field.name) } in ${ JSON.stringify(name) }`, \"types\", types);\n                }\n                uniqueNames[field.name] = true;\n\n                // Get the base type (drop any array specifiers)\n                const baseType = field.type.match(/^([^\\x5b]*)(\\x5b|$)/)[1];\n                if (baseType === name) {\n                    logger.throwArgumentError(`circular type reference to ${ JSON.stringify(baseType) }`, \"types\", types);\n                }\n\n                // Is this a base encoding type?\n                const encoder = getBaseEncoder(baseType);\n                if (encoder) { return ;}\n\n                if (!parents[baseType]) {\n                    logger.throwArgumentError(`unknown type ${ JSON.stringify(baseType) }`, \"types\", types);\n                }\n\n                // Add linkage\n                parents[baseType].push(name);\n                links[name][baseType] = true;\n            });\n        }\n\n        // Deduce the primary type\n        const primaryTypes = Object.keys(parents).filter((n) => (parents[n].length === 0));\n\n        if (primaryTypes.length === 0) {\n            logger.throwArgumentError(\"missing primary type\", \"types\", types);\n        } else if (primaryTypes.length > 1) {\n            logger.throwArgumentError(`ambiguous primary types or unused types: ${ primaryTypes.map((t) => (JSON.stringify(t))).join(\", \") }`, \"types\", types);\n        }\n\n        defineReadOnly(this, \"primaryType\", primaryTypes[0]);\n\n        // Check for circular type references\n        function checkCircular(type: string, found: Record<string, boolean>) {\n            if (found[type]) {\n                logger.throwArgumentError(`circular type reference to ${ JSON.stringify(type) }`, \"types\", types);\n            }\n\n            found[type] = true;\n\n            Object.keys(links[type]).forEach((child) => {\n                if (!parents[child]) { return; }\n\n                // Recursively check children\n                checkCircular(child, found);\n\n                // Mark all ancestors as having this decendant\n                Object.keys(found).forEach((subtype) => {\n                    subtypes[subtype][child] = true;\n                });\n            });\n\n            delete found[type];\n        }\n        checkCircular(this.primaryType, { });\n\n        // Compute each fully describe type\n        for (const name in subtypes) {\n            const st = Object.keys(subtypes[name]);\n            st.sort();\n            this._types[name] = encodeType(name, types[name]) + st.map((t) => encodeType(t, types[t])).join(\"\");\n        }\n    }\n\n    getEncoder(type: string): (value: any) => string {\n        let encoder = this._encoderCache[type];\n        if (!encoder) {\n            encoder = this._encoderCache[type] = this._getEncoder(type);\n        }\n        return encoder;\n    }\n\n    _getEncoder(type: string): (value: any) => string {\n\n        // Basic encoder type (address, bool, uint256, etc)\n        {\n            const encoder = getBaseEncoder(type);\n            if (encoder) { return encoder; }\n        }\n\n        // Array\n        const match = type.match(/^(.*)(\\x5b(\\d*)\\x5d)$/);\n        if (match) {\n            const subtype = match[1];\n            const subEncoder = this.getEncoder(subtype);\n            const length = parseInt(match[3]);\n            return (value: Array<any>) => {\n                if (length >= 0 && value.length !== length) {\n                    logger.throwArgumentError(\"array length mismatch; expected length ${ arrayLength }\", \"value\", value);\n                }\n\n                let result = value.map(subEncoder);\n                if (this._types[subtype]) {\n                    result = result.map(keccak256);\n                }\n\n                return keccak256(hexConcat(result));\n            };\n        }\n\n        // Struct\n        const fields = this.types[type];\n        if (fields) {\n            const encodedType = id(this._types[type]);\n            return (value: Record<string, any>) => {\n                const values = fields.map(({ name, type }) => {\n                    const result = this.getEncoder(type)(value[name]);\n                    if (this._types[type]) { return keccak256(result); }\n                    return result;\n                });\n                values.unshift(encodedType);\n                return hexConcat(values);\n            }\n        }\n\n        return logger.throwArgumentError(`unknown type: ${ type }`, \"type\", type);\n    }\n\n    encodeType(name: string): string {\n        const result = this._types[name];\n        if (!result) {\n            logger.throwArgumentError(`unknown type: ${ JSON.stringify(name) }`, \"name\", name);\n        }\n        return result;\n    }\n\n    encodeData(type: string, value: any): string {\n        return this.getEncoder(type)(value);\n    }\n\n    hashStruct(name: string, value: Record<string, any>): string {\n        return keccak256(this.encodeData(name, value));\n    }\n\n    encode(value: Record<string, any>): string {\n        return this.encodeData(this.primaryType, value);\n    }\n\n    hash(value: Record<string, any>): string {\n        return this.hashStruct(this.primaryType, value);\n    }\n\n    _visit(type: string, value: any, callback: (type: string, data: any) => any): any {\n        // Basic encoder type (address, bool, uint256, etc)\n        {\n            const encoder = getBaseEncoder(type);\n            if (encoder) { return callback(type, value); }\n        }\n\n        // Array\n        const match = type.match(/^(.*)(\\x5b(\\d*)\\x5d)$/);\n        if (match) {\n            const subtype = match[1];\n            const length = parseInt(match[3]);\n            if (length >= 0 && value.length !== length) {\n                logger.throwArgumentError(\"array length mismatch; expected length ${ arrayLength }\", \"value\", value);\n            }\n            return value.map((v: any) => this._visit(subtype, v, callback));\n        }\n\n        // Struct\n        const fields = this.types[type];\n        if (fields) {\n            return fields.reduce((accum, { name, type }) => {\n                accum[name] = this._visit(type, value[name], callback);\n                return accum;\n            }, <Record<string, any>>{});\n        }\n\n        return logger.throwArgumentError(`unknown type: ${ type }`, \"type\", type);\n    }\n\n    visit(value: Record<string, any>, callback: (type: string, data: any) => any): any {\n        return this._visit(this.primaryType, value, callback);\n    }\n\n    static from(types: Record<string, Array<TypedDataField>>): TypedDataEncoder {\n        return new TypedDataEncoder(types);\n    }\n\n    static getPrimaryType(types: Record<string, Array<TypedDataField>>): string {\n        return TypedDataEncoder.from(types).primaryType;\n    }\n\n    static hashStruct(name: string, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): string {\n        return TypedDataEncoder.from(types).hashStruct(name, value);\n    }\n\n    static hashDomain(domain: TypedDataDomain): string {\n        const domainFields: Array<TypedDataField> = [ ];\n        for (const name in domain) {\n            const type = domainFieldTypes[name];\n            if (!type) {\n                logger.throwArgumentError(`invalid typed-data domain key: ${ JSON.stringify(name) }`, \"domain\", domain);\n            }\n            domainFields.push({ name, type });\n        }\n\n        domainFields.sort((a, b) => {\n            return domainFieldNames.indexOf(a.name) - domainFieldNames.indexOf(b.name);\n        });\n\n        return TypedDataEncoder.hashStruct(\"EIP712Domain\", { EIP712Domain: domainFields }, domain);\n    }\n\n    static encode(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): string {\n        return hexConcat([\n            \"0x1901\",\n            TypedDataEncoder.hashDomain(domain),\n            TypedDataEncoder.from(types).hash(value)\n        ]);\n    }\n\n    static hash(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): string {\n        return keccak256(TypedDataEncoder.encode(domain, types, value));\n    }\n\n    // Replaces all address types with ENS names with their looked up address\n    static async resolveNames(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>, resolveName: (name: string) => Promise<string>): Promise<{ domain: TypedDataDomain, value: any }> {\n        // Make a copy to isolate it from the object passed in\n        domain = shallowCopy(domain);\n\n        // Look up all ENS names\n        const ensCache: Record<string, string> = { };\n\n        // Do we need to look up the domain's verifyingContract?\n        if (domain.verifyingContract && !isHexString(domain.verifyingContract, 20)) {\n            ensCache[domain.verifyingContract] = \"0x\";\n        }\n\n        // We are going to use the encoder to visit all the base values\n        const encoder = TypedDataEncoder.from(types);\n\n        // Get a list of all the addresses\n        encoder.visit(value, (type: string, value: any) => {\n            if (type === \"address\" && !isHexString(value, 20)) {\n                ensCache[value] = \"0x\";\n            }\n            return value;\n        });\n\n        // Lookup each name\n        for (const name in ensCache) {\n            ensCache[name] = await resolveName(name);\n        }\n\n        // Replace the domain verifyingContract if needed\n        if (domain.verifyingContract && ensCache[domain.verifyingContract]) {\n            domain.verifyingContract = ensCache[domain.verifyingContract];\n        }\n\n        // Replace all ENS names with their address\n        value = encoder.visit(value, (type: string, value: any) => {\n            if (type === \"address\" && ensCache[value]) { return ensCache[value]; }\n            return value;\n        });\n\n        return { domain, value };\n    }\n\n    static getPayload(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): any {\n        // Validate the domain fields\n        TypedDataEncoder.hashDomain(domain);\n\n        // Derive the EIP712Domain Struct reference type\n        const domainValues: Record<string, any> = { };\n        const domainTypes: Array<{ name: string, type:string }> = [ ];\n\n        domainFieldNames.forEach((name) => {\n            const value = (<any>domain)[name];\n            if (value == null) { return; }\n            domainValues[name] = domainChecks[name](value);\n            domainTypes.push({ name, type: domainFieldTypes[name] });\n        });\n\n        const encoder = TypedDataEncoder.from(types);\n\n        const typesWithDomain = shallowCopy(types);\n        if (typesWithDomain.EIP712Domain) {\n            logger.throwArgumentError(\"types must not contain EIP712Domain type\", \"types.EIP712Domain\", types);\n        } else {\n            typesWithDomain.EIP712Domain = domainTypes;\n        }\n\n        // Validate the data structures and types\n        encoder.encode(value);\n\n        return {\n            types: typesWithDomain,\n            domain: domainValues,\n            primaryType: encoder.primaryType,\n            message: encoder.visit(value, (type: string, value: any) => {\n\n                // bytes\n                if (type.match(/^bytes(\\d*)/)) {\n                    return hexlify(arrayify(value));\n                }\n\n                // uint or int\n                if (type.match(/^u?int/)) {\n                    return BigNumber.from(value).toString();\n                }\n\n                switch (type) {\n                    case \"address\":\n                        return value.toLowerCase();\n                    case \"bool\":\n                        return !!value;\n                    case \"string\":\n                        if (typeof(value) !== \"string\") {\n                            logger.throwArgumentError(`invalid string`, \"value\", value);\n                        }\n                        return value;\n                }\n\n                return logger.throwArgumentError(\"unsupported type\", \"type\", type);\n            })\n        };\n    }\n}\n\n", "\"use strict\";\n\nimport { id } from \"./id\";\nimport { dnsEncode, isValidName, namehash } from \"./namehash\";\nimport { hashMessage, messagePrefix } from \"./message\";\n\nimport { ensNormalize } from \"./namehash\";\n\nimport { TypedDataEncoder as _TypedDataEncoder } from \"./typed-data\";\n\nexport {\n    id,\n\n    dnsEncode,\n    namehash,\n    isValidName,\n\n    ensNormalize,\n\n    messagePrefix,\n    hashMessage,\n\n    _TypedDataEncoder,\n}\n", "export enum SupportedAlgorithm { sha256 = \"sha256\", sha512 = \"sha512\" };\n\n", "export const version = \"sha2/5.7.0\";\n", "\"use strict\";\n\nimport hash from \"hash.js\";\n//const _ripemd160 = _hash.ripemd160;\n\nimport { arrayify, BytesLike } from \"@ethersproject/bytes\";\n\nimport { SupportedAlgorithm } from \"./types\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nexport function ripemd160(data: BytesLike): string {\n    return \"0x\" + (hash.ripemd160().update(arrayify(data)).digest(\"hex\"));\n}\n\nexport function sha256(data: BytesLike): string {\n    return \"0x\" + (hash.sha256().update(arrayify(data)).digest(\"hex\"));\n}\n\nexport function sha512(data: BytesLike): string {\n    return \"0x\" + (hash.sha512().update(arrayify(data)).digest(\"hex\"));\n}\n\nexport function computeHmac(algorithm: SupportedAlgorithm, key: BytesLike, data: BytesLike): string {\n    if (!SupportedAlgorithm[algorithm]) {\n        logger.throwError(\"unsupported algorithm \" + algorithm, Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"hmac\",\n            algorithm: algorithm\n        });\n    }\n\n    return \"0x\" + hash.hmac((<any>hash)[algorithm], arrayify(key)).update(arrayify(data)).digest(\"hex\");\n}\n\n", "import { computeHmac, ripemd160, sha256, sha512 } from \"./sha2\";\n\nimport { SupportedAlgorithm } from \"./types\";\n\nexport {\n    computeHmac,\n\n    ripemd160,\n\n    sha256,\n    sha512,\n\n    SupportedAlgorithm\n}\n", "export const version = \"web/5.7.1\";\n", "\"use strict\";\n\nimport { arrayify } from \"@ethersproject/bytes\";\n\nimport type { GetUrlResponse, Options } from \"./types\";\n\nexport { GetUrlResponse, Options };\n\nexport async function getUrl(href: string, options?: Options): Promise<GetUrlResponse> {\n    if (options == null) { options = { }; }\n\n    const request: RequestInit = {\n        method: (options.method || \"GET\"),\n        headers: (options.headers || { }),\n        body: (options.body || undefined),\n    };\n\n    if (options.skipFetchSetup !== true) {\n        request.mode = <RequestMode>\"cors\";              // no-cors, cors, *same-origin\n        request.cache = <RequestCache>\"no-cache\";        // *default, no-cache, reload, force-cache, only-if-cached\n        request.credentials = <RequestCredentials>\"same-origin\";  // include, *same-origin, omit\n        request.redirect = <RequestRedirect>\"follow\";    // manual, *follow, error\n        request.referrer = \"client\";                     // no-referrer, *client\n    };\n\n    if (options.fetchOptions != null) {\n        const opts = options.fetchOptions;\n        if (opts.mode) { request.mode = <RequestMode>(opts.mode); }\n        if (opts.cache) { request.cache = <RequestCache>(opts.cache); }\n        if (opts.credentials) { request.credentials = <RequestCredentials>(opts.credentials); }\n        if (opts.redirect) { request.redirect = <RequestRedirect>(opts.redirect); }\n        if (opts.referrer) { request.referrer = opts.referrer; }\n    }\n\n    const response = await fetch(href, request);\n    const body = await response.arrayBuffer();\n\n    const headers: { [ name: string ]: string } = { };\n    if (response.headers.forEach) {\n        response.headers.forEach((value, key) => {\n            headers[key.toLowerCase()] = value;\n        });\n    } else {\n        (<() => Array<string>>((<any>(response.headers)).keys))().forEach((key) => {\n            headers[key.toLowerCase()] = response.headers.get(key);\n        });\n    }\n\n    return {\n        headers: headers,\n        statusCode: response.status,\n        statusMessage: response.statusText,\n        body: arrayify(new Uint8Array(body)),\n    }\n}\n", "\"use strict\";\n\nimport { decode as base64Decode, encode as base64Encode } from \"@ethersproject/base64\";\nimport { hexlify, isBytesLike } from \"@ethersproject/bytes\";\nimport { shallowCopy } from \"@ethersproject/properties\";\nimport { toUtf8Bytes, toUtf8String } from \"@ethersproject/strings\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { getUrl, GetUrlResponse, Options } from \"./geturl\";\n\nfunction staller(duration: number): Promise<void> {\n    return new Promise((resolve) => {\n        setTimeout(resolve, duration);\n    });\n}\n\nfunction bodyify(value: any, type: string): string {\n    if (value == null) { return null; }\n\n    if (typeof(value) === \"string\") { return value; }\n\n    if (isBytesLike(value)) {\n        if (type && (type.split(\"/\")[0] === \"text\" || type.split(\";\")[0].trim() === \"application/json\")) {\n            try {\n                return toUtf8String(value);\n            } catch (error) { };\n        }\n        return hexlify(value);\n    }\n\n    return value;\n}\n\n// Exported Types\nexport type ConnectionInfo = {\n    url: string,\n    headers?: { [key: string]: string | number }\n\n    user?: string,\n    password?: string,\n\n    allowInsecureAuthentication?: boolean,\n    allowGzip?: boolean,\n\n    throttleLimit?: number,\n    throttleSlotInterval?: number;\n    throttleCallback?: (attempt: number, url: string) => Promise<boolean>,\n\n    skipFetchSetup?: boolean;\n    fetchOptions?: Record<string, string>;\n    errorPassThrough?: boolean;\n\n    timeout?: number,\n};\n\nexport interface OnceBlockable {\n    once(eventName: \"block\", handler: () => void): void;\n}\n\nexport interface OncePollable {\n    once(eventName: \"poll\", handler: () => void): void;\n}\n\nexport type PollOptions = {\n    timeout?: number,\n    floor?: number,\n    ceiling?: number,\n    interval?: number,\n    retryLimit?: number,\n    onceBlock?: OnceBlockable\n    oncePoll?: OncePollable\n};\n\nexport type FetchJsonResponse = {\n    statusCode: number;\n    headers: { [ header: string ]: string };\n};\n\n\ntype Header = { key: string, value: string };\n\nfunction unpercent(value: string): Uint8Array {\n    return toUtf8Bytes(value.replace(/%([0-9a-f][0-9a-f])/gi, (all, code) => {\n        return String.fromCharCode(parseInt(code, 16));\n    }));\n}\n\n// This API is still a work in progress; the future changes will likely be:\n// - ConnectionInfo => FetchDataRequest<T = any>\n// - FetchDataRequest.body? = string | Uint8Array | { contentType: string, data: string | Uint8Array }\n//   - If string => text/plain, Uint8Array => application/octet-stream (if content-type unspecified)\n// - FetchDataRequest.processFunc = (body: Uint8Array, response: FetchDataResponse) => T\n// For this reason, it should be considered internal until the API is finalized\nexport function _fetchData<T = Uint8Array>(connection: string | ConnectionInfo, body?: Uint8Array, processFunc?: (value: Uint8Array, response: FetchJsonResponse) => T): Promise<T> {\n\n    // How many times to retry in the event of a throttle\n    const attemptLimit = (typeof(connection) === \"object\" && connection.throttleLimit != null) ? connection.throttleLimit: 12;\n    logger.assertArgument((attemptLimit > 0 && (attemptLimit % 1) === 0),\n        \"invalid connection throttle limit\", \"connection.throttleLimit\", attemptLimit);\n\n    const throttleCallback = ((typeof(connection) === \"object\") ? connection.throttleCallback: null);\n    const throttleSlotInterval = ((typeof(connection) === \"object\" && typeof(connection.throttleSlotInterval) === \"number\") ? connection.throttleSlotInterval: 100);\n    logger.assertArgument((throttleSlotInterval > 0 && (throttleSlotInterval % 1) === 0),\n        \"invalid connection throttle slot interval\", \"connection.throttleSlotInterval\", throttleSlotInterval);\n\n    const errorPassThrough = ((typeof(connection) === \"object\") ? !!(connection.errorPassThrough): false);\n\n    const headers: { [key: string]: Header } = { };\n\n    let url: string = null;\n\n    // @TODO: Allow ConnectionInfo to override some of these values\n    const options: Options = {\n        method: \"GET\",\n    };\n\n    let allow304 = false;\n\n    let timeout = 2 * 60 * 1000;\n\n    if (typeof(connection) === \"string\") {\n        url = connection;\n\n    } else if (typeof(connection) === \"object\") {\n        if (connection == null || connection.url == null) {\n            logger.throwArgumentError(\"missing URL\", \"connection.url\", connection);\n        }\n\n        url = connection.url;\n\n        if (typeof(connection.timeout) === \"number\" && connection.timeout > 0) {\n            timeout = connection.timeout;\n        }\n\n        if (connection.headers) {\n            for (const key in connection.headers) {\n                headers[key.toLowerCase()] = { key: key, value: String(connection.headers[key]) };\n                if ([\"if-none-match\", \"if-modified-since\"].indexOf(key.toLowerCase()) >= 0) {\n                    allow304 = true;\n                }\n            }\n        }\n\n        options.allowGzip = !!connection.allowGzip;\n\n        if (connection.user != null && connection.password != null) {\n            if (url.substring(0, 6) !== \"https:\" && connection.allowInsecureAuthentication !== true) {\n                logger.throwError(\n                    \"basic authentication requires a secure https url\",\n                    Logger.errors.INVALID_ARGUMENT,\n                    { argument: \"url\", url: url, user: connection.user, password: \"[REDACTED]\" }\n                );\n            }\n\n            const authorization = connection.user + \":\" + connection.password;\n            headers[\"authorization\"] = {\n                key: \"Authorization\",\n                value: \"Basic \" + base64Encode(toUtf8Bytes(authorization))\n            };\n        }\n\n        if (connection.skipFetchSetup != null) {\n            options.skipFetchSetup = !!connection.skipFetchSetup;\n        }\n\n        if (connection.fetchOptions != null) {\n            options.fetchOptions = shallowCopy(connection.fetchOptions);\n        }\n    }\n\n    const reData = new RegExp(\"^data:([^;:]*)?(;base64)?,(.*)$\", \"i\");\n    const dataMatch = ((url) ? url.match(reData): null);\n    if (dataMatch) {\n        try {\n            const response = {\n                statusCode: 200,\n                statusMessage: \"OK\",\n                headers: { \"content-type\": (dataMatch[1] || \"text/plain\")},\n                body: (dataMatch[2] ? base64Decode(dataMatch[3]): unpercent(dataMatch[3]))\n            };\n\n            let result: T = <T><unknown>response.body;\n            if (processFunc) {\n                result = processFunc(response.body, response);\n            }\n            return Promise.resolve(<T><unknown>result);\n\n        } catch (error) {\n            logger.throwError(\"processing response error\", Logger.errors.SERVER_ERROR, {\n                body: bodyify(dataMatch[1], dataMatch[2]),\n                error: error,\n                requestBody: null,\n                requestMethod: \"GET\",\n                url: url\n            });\n        }\n    }\n\n    if (body) {\n        options.method = \"POST\";\n        options.body = body;\n        if (headers[\"content-type\"] == null) {\n            headers[\"content-type\"] = { key: \"Content-Type\", value: \"application/octet-stream\" };\n        }\n        if (headers[\"content-length\"] == null) {\n            headers[\"content-length\"] = { key: \"Content-Length\", value: String(body.length) };\n        }\n    }\n\n    const flatHeaders: { [ key: string ]: string } = { };\n    Object.keys(headers).forEach((key) => {\n        const header = headers[key];\n        flatHeaders[header.key] = header.value;\n    });\n    options.headers = flatHeaders;\n\n    const runningTimeout = (function() {\n        let timer: NodeJS.Timer = null;\n        const promise: Promise<never> = new Promise(function(resolve, reject) {\n            if (timeout) {\n                timer = setTimeout(() => {\n                    if (timer == null) { return; }\n                    timer = null;\n\n                    reject(logger.makeError(\"timeout\", Logger.errors.TIMEOUT, {\n                        requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                        requestMethod: options.method,\n                        timeout: timeout,\n                        url: url\n                    }));\n                }, timeout);\n            }\n        });\n\n        const cancel = function() {\n            if (timer == null) { return; }\n            clearTimeout(timer);\n            timer = null;\n        }\n\n        return { promise, cancel };\n    })();\n\n    const runningFetch = (async function() {\n\n        for (let attempt = 0; attempt < attemptLimit; attempt++) {\n            let response: GetUrlResponse = null;\n\n            try {\n                response = await getUrl(url, options);\n\n                if (attempt < attemptLimit) {\n                    if (response.statusCode === 301 || response.statusCode === 302) {\n                        // Redirection; for now we only support absolute locataions\n                        const location = response.headers.location || \"\";\n                        if (options.method === \"GET\" && location.match(/^https:/)) {\n                            url = response.headers.location;\n                            continue;\n                        }\n\n                    } else if (response.statusCode === 429) {\n                        // Exponential back-off throttling\n                        let tryAgain = true;\n                        if (throttleCallback) {\n                            tryAgain = await throttleCallback(attempt, url);\n                        }\n\n                        if (tryAgain) {\n                            let stall = 0;\n\n                            const retryAfter = response.headers[\"retry-after\"];\n                            if (typeof(retryAfter) === \"string\" && retryAfter.match(/^[1-9][0-9]*$/)) {\n                                stall = parseInt(retryAfter) * 1000;\n                            } else {\n                                stall = throttleSlotInterval * parseInt(String(Math.random() * Math.pow(2, attempt)));\n                            }\n\n                            //console.log(\"Stalling 429\");\n                            await staller(stall);\n                            continue;\n                        }\n                    }\n                }\n\n            } catch (error) {\n                response = (<any>error).response;\n                if (response == null) {\n                    runningTimeout.cancel();\n                    logger.throwError(\"missing response\", Logger.errors.SERVER_ERROR, {\n                        requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                        requestMethod: options.method,\n                        serverError: error,\n                        url: url\n                    });\n                }\n            }\n\n\n            let body = response.body;\n\n            if (allow304 && response.statusCode === 304) {\n                body = null;\n            } else if (!errorPassThrough && (response.statusCode < 200 || response.statusCode >= 300)) {\n                runningTimeout.cancel();\n                logger.throwError(\"bad response\", Logger.errors.SERVER_ERROR, {\n                    status: response.statusCode,\n                    headers: response.headers,\n                    body: bodyify(body, ((response.headers) ? response.headers[\"content-type\"]: null)),\n                    requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                    requestMethod: options.method,\n                    url: url\n                });\n            }\n\n            if (processFunc) {\n                try {\n                    const result = await processFunc(body, response);\n                    runningTimeout.cancel();\n                    return result;\n\n                } catch (error) {\n                    // Allow the processFunc to trigger a throttle\n                    if (error.throttleRetry && attempt < attemptLimit) {\n                        let tryAgain = true;\n                        if (throttleCallback) {\n                            tryAgain = await throttleCallback(attempt, url);\n                        }\n\n                        if (tryAgain) {\n                            const timeout = throttleSlotInterval * parseInt(String(Math.random() * Math.pow(2, attempt)));\n                            //console.log(\"Stalling callback\");\n                            await staller(timeout);\n                            continue;\n                        }\n                    }\n\n                    runningTimeout.cancel();\n                    logger.throwError(\"processing response error\", Logger.errors.SERVER_ERROR, {\n                        body: bodyify(body, ((response.headers) ? response.headers[\"content-type\"]: null)),\n                        error: error,\n                        requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                        requestMethod: options.method,\n                        url: url\n                    });\n                }\n            }\n\n            runningTimeout.cancel();\n\n            // If we had a processFunc, it either returned a T or threw above.\n            // The \"body\" is now a Uint8Array.\n            return <T>(<unknown>body);\n        }\n\n        return logger.throwError(\"failed response\", Logger.errors.SERVER_ERROR, {\n            requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n            requestMethod: options.method,\n            url: url\n        });\n    })();\n\n    return Promise.race([ runningTimeout.promise, runningFetch ]);\n}\n\nexport function fetchJson(connection: string | ConnectionInfo, json?: string, processFunc?: (value: any, response: FetchJsonResponse) => any): Promise<any> {\n    let processJsonFunc = (value: Uint8Array, response: FetchJsonResponse) => {\n        let result: any = null;\n        if (value != null) {\n            try {\n                result = JSON.parse(toUtf8String(value));\n            } catch (error) {\n                logger.throwError(\"invalid JSON\", Logger.errors.SERVER_ERROR, {\n                    body: value,\n                    error: error\n                });\n            }\n        }\n\n        if (processFunc) {\n            result = processFunc(result, response);\n        }\n\n        return result;\n    }\n\n    // If we have json to send, we must\n    // - add content-type of application/json (unless already overridden)\n    // - convert the json to bytes\n    let body: Uint8Array = null;\n    if (json != null) {\n        body = toUtf8Bytes(json);\n\n        // Create a connection with the content-type set for JSON\n        const updated: ConnectionInfo = (typeof(connection) === \"string\") ? ({ url: connection }): shallowCopy(connection);\n        if (updated.headers) {\n            const hasContentType = (Object.keys(updated.headers).filter((k) => (k.toLowerCase() === \"content-type\")).length) !== 0;\n            if (!hasContentType) {\n                updated.headers = shallowCopy(updated.headers);\n                updated.headers[\"content-type\"] = \"application/json\";\n            }\n        } else {\n            updated.headers = { \"content-type\": \"application/json\" };\n        }\n        connection = updated;\n    }\n\n    return _fetchData<any>(connection, body, processJsonFunc);\n}\n\nexport function poll<T>(func: () => Promise<T>, options?: PollOptions): Promise<T> {\n    if (!options) { options = {}; }\n    options = shallowCopy(options);\n    if (options.floor == null) { options.floor = 0; }\n    if (options.ceiling == null) { options.ceiling = 10000; }\n    if (options.interval == null) { options.interval = 250; }\n\n    return new Promise(function(resolve, reject) {\n\n        let timer: NodeJS.Timer = null;\n        let done: boolean = false;\n\n        // Returns true if cancel was successful. Unsuccessful cancel means we're already done.\n        const cancel = (): boolean => {\n            if (done) { return false; }\n            done = true;\n            if (timer) { clearTimeout(timer); }\n            return true;\n        };\n\n        if (options.timeout) {\n            timer = setTimeout(() => {\n                if (cancel()) { reject(new Error(\"timeout\")); }\n            }, options.timeout)\n        }\n\n        const retryLimit = options.retryLimit;\n\n        let attempt = 0;\n        function check() {\n            return func().then(function(result) {\n\n                // If we have a result, or are allowed null then we're done\n                if (result !== undefined) {\n                    if (cancel()) { resolve(result); }\n\n                } else if (options.oncePoll) {\n                    options.oncePoll.once(\"poll\", check);\n\n                } else if (options.onceBlock) {\n                    options.onceBlock.once(\"block\", check);\n\n                // Otherwise, exponential back-off (up to 10s) our next request\n                } else if (!done) {\n                    attempt++;\n                    if (attempt > retryLimit) {\n                        if (cancel()) { reject(new Error(\"retry limit reached\")); }\n                        return;\n                    }\n\n                    let timeout = options.interval * parseInt(String(Math.random() * Math.pow(2, attempt)));\n                    if (timeout < options.floor) { timeout = options.floor; }\n                    if (timeout > options.ceiling) { timeout = options.ceiling; }\n\n                    setTimeout(check, timeout);\n                }\n\n                return null;\n            }, function(error) {\n                if (cancel()) { reject(error); }\n            });\n        }\n        check();\n    });\n}\n\n", "export const version = \"providers/5.7.2\";\n", "module.exports = assert;\n\nfunction assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r)\n    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));\n};\n", "'use strict';\n\nvar utils = exports;\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg !== 'string') {\n    for (var i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n    return res;\n  }\n  if (enc === 'hex') {\n    msg = msg.replace(/[^a-z0-9]+/ig, '');\n    if (msg.length % 2 !== 0)\n      msg = '0' + msg;\n    for (var i = 0; i < msg.length; i += 2)\n      res.push(parseInt(msg[i] + msg[i + 1], 16));\n  } else {\n    for (var i = 0; i < msg.length; i++) {\n      var c = msg.charCodeAt(i);\n      var hi = c >> 8;\n      var lo = c & 0xff;\n      if (hi)\n        res.push(hi, lo);\n      else\n        res.push(lo);\n    }\n  }\n  return res;\n}\nutils.toArray = toArray;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nutils.zero2 = zero2;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nutils.toHex = toHex;\n\nutils.encode = function encode(arr, enc) {\n  if (enc === 'hex')\n    return toHex(arr);\n  else\n    return arr;\n};\n", "'use strict';\n\nvar utils = exports;\nvar BN = require('bn.js');\nvar minAssert = require('minimalistic-assert');\nvar minUtils = require('minimalistic-crypto-utils');\n\nutils.assert = minAssert;\nutils.toArray = minUtils.toArray;\nutils.zero2 = minUtils.zero2;\nutils.toHex = minUtils.toHex;\nutils.encode = minUtils.encode;\n\n// Represent num in a w-NAF form\nfunction getNAF(num, w, bits) {\n  var naf = new Array(Math.max(num.bitLength(), bits) + 1);\n  naf.fill(0);\n\n  var ws = 1 << (w + 1);\n  var k = num.clone();\n\n  for (var i = 0; i < naf.length; i++) {\n    var z;\n    var mod = k.andln(ws - 1);\n    if (k.isOdd()) {\n      if (mod > (ws >> 1) - 1)\n        z = (ws >> 1) - mod;\n      else\n        z = mod;\n      k.isubn(z);\n    } else {\n      z = 0;\n    }\n\n    naf[i] = z;\n    k.iushrn(1);\n  }\n\n  return naf;\n}\nutils.getNAF = getNAF;\n\n// Represent k1, k2 in a Joint Sparse Form\nfunction getJSF(k1, k2) {\n  var jsf = [\n    [],\n    [],\n  ];\n\n  k1 = k1.clone();\n  k2 = k2.clone();\n  var d1 = 0;\n  var d2 = 0;\n  var m8;\n  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {\n    // First phase\n    var m14 = (k1.andln(3) + d1) & 3;\n    var m24 = (k2.andln(3) + d2) & 3;\n    if (m14 === 3)\n      m14 = -1;\n    if (m24 === 3)\n      m24 = -1;\n    var u1;\n    if ((m14 & 1) === 0) {\n      u1 = 0;\n    } else {\n      m8 = (k1.andln(7) + d1) & 7;\n      if ((m8 === 3 || m8 === 5) && m24 === 2)\n        u1 = -m14;\n      else\n        u1 = m14;\n    }\n    jsf[0].push(u1);\n\n    var u2;\n    if ((m24 & 1) === 0) {\n      u2 = 0;\n    } else {\n      m8 = (k2.andln(7) + d2) & 7;\n      if ((m8 === 3 || m8 === 5) && m14 === 2)\n        u2 = -m24;\n      else\n        u2 = m24;\n    }\n    jsf[1].push(u2);\n\n    // Second phase\n    if (2 * d1 === u1 + 1)\n      d1 = 1 - d1;\n    if (2 * d2 === u2 + 1)\n      d2 = 1 - d2;\n    k1.iushrn(1);\n    k2.iushrn(1);\n  }\n\n  return jsf;\n}\nutils.getJSF = getJSF;\n\nfunction cachedProperty(obj, name, computer) {\n  var key = '_' + name;\n  obj.prototype[name] = function cachedProperty() {\n    return this[key] !== undefined ? this[key] :\n      this[key] = computer.call(this);\n  };\n}\nutils.cachedProperty = cachedProperty;\n\nfunction parseBytes(bytes) {\n  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') :\n    bytes;\n}\nutils.parseBytes = parseBytes;\n\nfunction intFromLE(bytes) {\n  return new BN(bytes, 'hex', 'le');\n}\nutils.intFromLE = intFromLE;\n\n", "'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar getNAF = utils.getNAF;\nvar getJSF = utils.getJSF;\nvar assert = utils.assert;\n\nfunction BaseCurve(type, conf) {\n  this.type = type;\n  this.p = new BN(conf.p, 16);\n\n  // Use Montgomery, when there is no fast reduction for the prime\n  this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);\n\n  // Useful for many curves\n  this.zero = new BN(0).toRed(this.red);\n  this.one = new BN(1).toRed(this.red);\n  this.two = new BN(2).toRed(this.red);\n\n  // Curve configuration, optional\n  this.n = conf.n && new BN(conf.n, 16);\n  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);\n\n  // Temporary arrays\n  this._wnafT1 = new Array(4);\n  this._wnafT2 = new Array(4);\n  this._wnafT3 = new Array(4);\n  this._wnafT4 = new Array(4);\n\n  this._bitLength = this.n ? this.n.bitLength() : 0;\n\n  // Generalized Greg Maxwell's trick\n  var adjustCount = this.n && this.p.div(this.n);\n  if (!adjustCount || adjustCount.cmpn(100) > 0) {\n    this.redN = null;\n  } else {\n    this._maxwellTrick = true;\n    this.redN = this.n.toRed(this.red);\n  }\n}\nmodule.exports = BaseCurve;\n\nBaseCurve.prototype.point = function point() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype.validate = function validate() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {\n  assert(p.precomputed);\n  var doubles = p._getDoubles();\n\n  var naf = getNAF(k, 1, this._bitLength);\n  var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);\n  I /= 3;\n\n  // Translate into more windowed form\n  var repr = [];\n  var j;\n  var nafW;\n  for (j = 0; j < naf.length; j += doubles.step) {\n    nafW = 0;\n    for (var l = j + doubles.step - 1; l >= j; l--)\n      nafW = (nafW << 1) + naf[l];\n    repr.push(nafW);\n  }\n\n  var a = this.jpoint(null, null, null);\n  var b = this.jpoint(null, null, null);\n  for (var i = I; i > 0; i--) {\n    for (j = 0; j < repr.length; j++) {\n      nafW = repr[j];\n      if (nafW === i)\n        b = b.mixedAdd(doubles.points[j]);\n      else if (nafW === -i)\n        b = b.mixedAdd(doubles.points[j].neg());\n    }\n    a = a.add(b);\n  }\n  return a.toP();\n};\n\nBaseCurve.prototype._wnafMul = function _wnafMul(p, k) {\n  var w = 4;\n\n  // Precompute window\n  var nafPoints = p._getNAFPoints(w);\n  w = nafPoints.wnd;\n  var wnd = nafPoints.points;\n\n  // Get NAF form\n  var naf = getNAF(k, w, this._bitLength);\n\n  // Add `this`*(N+1) for every w-NAF index\n  var acc = this.jpoint(null, null, null);\n  for (var i = naf.length - 1; i >= 0; i--) {\n    // Count zeroes\n    for (var l = 0; i >= 0 && naf[i] === 0; i--)\n      l++;\n    if (i >= 0)\n      l++;\n    acc = acc.dblp(l);\n\n    if (i < 0)\n      break;\n    var z = naf[i];\n    assert(z !== 0);\n    if (p.type === 'affine') {\n      // J +- P\n      if (z > 0)\n        acc = acc.mixedAdd(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());\n    } else {\n      // J +- J\n      if (z > 0)\n        acc = acc.add(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.add(wnd[(-z - 1) >> 1].neg());\n    }\n  }\n  return p.type === 'affine' ? acc.toP() : acc;\n};\n\nBaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,\n  points,\n  coeffs,\n  len,\n  jacobianResult) {\n  var wndWidth = this._wnafT1;\n  var wnd = this._wnafT2;\n  var naf = this._wnafT3;\n\n  // Fill all arrays\n  var max = 0;\n  var i;\n  var j;\n  var p;\n  for (i = 0; i < len; i++) {\n    p = points[i];\n    var nafPoints = p._getNAFPoints(defW);\n    wndWidth[i] = nafPoints.wnd;\n    wnd[i] = nafPoints.points;\n  }\n\n  // Comb small window NAFs\n  for (i = len - 1; i >= 1; i -= 2) {\n    var a = i - 1;\n    var b = i;\n    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {\n      naf[a] = getNAF(coeffs[a], wndWidth[a], this._bitLength);\n      naf[b] = getNAF(coeffs[b], wndWidth[b], this._bitLength);\n      max = Math.max(naf[a].length, max);\n      max = Math.max(naf[b].length, max);\n      continue;\n    }\n\n    var comb = [\n      points[a], /* 1 */\n      null, /* 3 */\n      null, /* 5 */\n      points[b], /* 7 */\n    ];\n\n    // Try to avoid Projective points, if possible\n    if (points[a].y.cmp(points[b].y) === 0) {\n      comb[1] = points[a].add(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].add(points[b].neg());\n    } else {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    }\n\n    var index = [\n      -3, /* -1 -1 */\n      -1, /* -1 0 */\n      -5, /* -1 1 */\n      -7, /* 0 -1 */\n      0, /* 0 0 */\n      7, /* 0 1 */\n      5, /* 1 -1 */\n      1, /* 1 0 */\n      3,  /* 1 1 */\n    ];\n\n    var jsf = getJSF(coeffs[a], coeffs[b]);\n    max = Math.max(jsf[0].length, max);\n    naf[a] = new Array(max);\n    naf[b] = new Array(max);\n    for (j = 0; j < max; j++) {\n      var ja = jsf[0][j] | 0;\n      var jb = jsf[1][j] | 0;\n\n      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];\n      naf[b][j] = 0;\n      wnd[a] = comb;\n    }\n  }\n\n  var acc = this.jpoint(null, null, null);\n  var tmp = this._wnafT4;\n  for (i = max; i >= 0; i--) {\n    var k = 0;\n\n    while (i >= 0) {\n      var zero = true;\n      for (j = 0; j < len; j++) {\n        tmp[j] = naf[j][i] | 0;\n        if (tmp[j] !== 0)\n          zero = false;\n      }\n      if (!zero)\n        break;\n      k++;\n      i--;\n    }\n    if (i >= 0)\n      k++;\n    acc = acc.dblp(k);\n    if (i < 0)\n      break;\n\n    for (j = 0; j < len; j++) {\n      var z = tmp[j];\n      p;\n      if (z === 0)\n        continue;\n      else if (z > 0)\n        p = wnd[j][(z - 1) >> 1];\n      else if (z < 0)\n        p = wnd[j][(-z - 1) >> 1].neg();\n\n      if (p.type === 'affine')\n        acc = acc.mixedAdd(p);\n      else\n        acc = acc.add(p);\n    }\n  }\n  // Zeroify references\n  for (i = 0; i < len; i++)\n    wnd[i] = null;\n\n  if (jacobianResult)\n    return acc;\n  else\n    return acc.toP();\n};\n\nfunction BasePoint(curve, type) {\n  this.curve = curve;\n  this.type = type;\n  this.precomputed = null;\n}\nBaseCurve.BasePoint = BasePoint;\n\nBasePoint.prototype.eq = function eq(/*other*/) {\n  throw new Error('Not implemented');\n};\n\nBasePoint.prototype.validate = function validate() {\n  return this.curve.validate(this);\n};\n\nBaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  bytes = utils.toArray(bytes, enc);\n\n  var len = this.p.byteLength();\n\n  // uncompressed, hybrid-odd, hybrid-even\n  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) &&\n      bytes.length - 1 === 2 * len) {\n    if (bytes[0] === 0x06)\n      assert(bytes[bytes.length - 1] % 2 === 0);\n    else if (bytes[0] === 0x07)\n      assert(bytes[bytes.length - 1] % 2 === 1);\n\n    var res =  this.point(bytes.slice(1, 1 + len),\n      bytes.slice(1 + len, 1 + 2 * len));\n\n    return res;\n  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&\n              bytes.length - 1 === len) {\n    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);\n  }\n  throw new Error('Unknown point format');\n};\n\nBasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {\n  return this.encode(enc, true);\n};\n\nBasePoint.prototype._encode = function _encode(compact) {\n  var len = this.curve.p.byteLength();\n  var x = this.getX().toArray('be', len);\n\n  if (compact)\n    return [ this.getY().isEven() ? 0x02 : 0x03 ].concat(x);\n\n  return [ 0x04 ].concat(x, this.getY().toArray('be', len));\n};\n\nBasePoint.prototype.encode = function encode(enc, compact) {\n  return utils.encode(this._encode(compact), enc);\n};\n\nBasePoint.prototype.precompute = function precompute(power) {\n  if (this.precomputed)\n    return this;\n\n  var precomputed = {\n    doubles: null,\n    naf: null,\n    beta: null,\n  };\n  precomputed.naf = this._getNAFPoints(8);\n  precomputed.doubles = this._getDoubles(4, power);\n  precomputed.beta = this._getBeta();\n  this.precomputed = precomputed;\n\n  return this;\n};\n\nBasePoint.prototype._hasDoubles = function _hasDoubles(k) {\n  if (!this.precomputed)\n    return false;\n\n  var doubles = this.precomputed.doubles;\n  if (!doubles)\n    return false;\n\n  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);\n};\n\nBasePoint.prototype._getDoubles = function _getDoubles(step, power) {\n  if (this.precomputed && this.precomputed.doubles)\n    return this.precomputed.doubles;\n\n  var doubles = [ this ];\n  var acc = this;\n  for (var i = 0; i < power; i += step) {\n    for (var j = 0; j < step; j++)\n      acc = acc.dbl();\n    doubles.push(acc);\n  }\n  return {\n    step: step,\n    points: doubles,\n  };\n};\n\nBasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {\n  if (this.precomputed && this.precomputed.naf)\n    return this.precomputed.naf;\n\n  var res = [ this ];\n  var max = (1 << wnd) - 1;\n  var dbl = max === 1 ? null : this.dbl();\n  for (var i = 1; i < max; i++)\n    res[i] = res[i - 1].add(dbl);\n  return {\n    wnd: wnd,\n    points: res,\n  };\n};\n\nBasePoint.prototype._getBeta = function _getBeta() {\n  return null;\n};\n\nBasePoint.prototype.dblp = function dblp(k) {\n  var r = this;\n  for (var i = 0; i < k; i++)\n    r = r.dbl();\n  return r;\n};\n", "if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n", "'use strict';\n\nvar utils = require('../utils');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar assert = utils.assert;\n\nfunction ShortCurve(conf) {\n  Base.call(this, 'short', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.tinv = this.two.redInvm();\n\n  this.zeroA = this.a.fromRed().cmpn(0) === 0;\n  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;\n\n  // If the curve is endomorphic, precalculate beta and lambda\n  this.endo = this._getEndomorphism(conf);\n  this._endoWnafT1 = new Array(4);\n  this._endoWnafT2 = new Array(4);\n}\ninherits(ShortCurve, Base);\nmodule.exports = ShortCurve;\n\nShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {\n  // No efficient endomorphism\n  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)\n    return;\n\n  // Compute beta and lambda, that lambda * P = (beta * Px; Py)\n  var beta;\n  var lambda;\n  if (conf.beta) {\n    beta = new BN(conf.beta, 16).toRed(this.red);\n  } else {\n    var betas = this._getEndoRoots(this.p);\n    // Choose the smallest beta\n    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];\n    beta = beta.toRed(this.red);\n  }\n  if (conf.lambda) {\n    lambda = new BN(conf.lambda, 16);\n  } else {\n    // Choose the lambda that is matching selected beta\n    var lambdas = this._getEndoRoots(this.n);\n    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {\n      lambda = lambdas[0];\n    } else {\n      lambda = lambdas[1];\n      assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);\n    }\n  }\n\n  // Get basis vectors, used for balanced length-two representation\n  var basis;\n  if (conf.basis) {\n    basis = conf.basis.map(function(vec) {\n      return {\n        a: new BN(vec.a, 16),\n        b: new BN(vec.b, 16),\n      };\n    });\n  } else {\n    basis = this._getEndoBasis(lambda);\n  }\n\n  return {\n    beta: beta,\n    lambda: lambda,\n    basis: basis,\n  };\n};\n\nShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {\n  // Find roots of for x^2 + x + 1 in F\n  // Root = (-1 +- Sqrt(-3)) / 2\n  //\n  var red = num === this.p ? this.red : BN.mont(num);\n  var tinv = new BN(2).toRed(red).redInvm();\n  var ntinv = tinv.redNeg();\n\n  var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);\n\n  var l1 = ntinv.redAdd(s).fromRed();\n  var l2 = ntinv.redSub(s).fromRed();\n  return [ l1, l2 ];\n};\n\nShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {\n  // aprxSqrt >= sqrt(this.n)\n  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));\n\n  // 3.74\n  // Run EGCD, until r(L + 1) < aprxSqrt\n  var u = lambda;\n  var v = this.n.clone();\n  var x1 = new BN(1);\n  var y1 = new BN(0);\n  var x2 = new BN(0);\n  var y2 = new BN(1);\n\n  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)\n  var a0;\n  var b0;\n  // First vector\n  var a1;\n  var b1;\n  // Second vector\n  var a2;\n  var b2;\n\n  var prevR;\n  var i = 0;\n  var r;\n  var x;\n  while (u.cmpn(0) !== 0) {\n    var q = v.div(u);\n    r = v.sub(q.mul(u));\n    x = x2.sub(q.mul(x1));\n    var y = y2.sub(q.mul(y1));\n\n    if (!a1 && r.cmp(aprxSqrt) < 0) {\n      a0 = prevR.neg();\n      b0 = x1;\n      a1 = r.neg();\n      b1 = x;\n    } else if (a1 && ++i === 2) {\n      break;\n    }\n    prevR = r;\n\n    v = u;\n    u = r;\n    x2 = x1;\n    x1 = x;\n    y2 = y1;\n    y1 = y;\n  }\n  a2 = r.neg();\n  b2 = x;\n\n  var len1 = a1.sqr().add(b1.sqr());\n  var len2 = a2.sqr().add(b2.sqr());\n  if (len2.cmp(len1) >= 0) {\n    a2 = a0;\n    b2 = b0;\n  }\n\n  // Normalize signs\n  if (a1.negative) {\n    a1 = a1.neg();\n    b1 = b1.neg();\n  }\n  if (a2.negative) {\n    a2 = a2.neg();\n    b2 = b2.neg();\n  }\n\n  return [\n    { a: a1, b: b1 },\n    { a: a2, b: b2 },\n  ];\n};\n\nShortCurve.prototype._endoSplit = function _endoSplit(k) {\n  var basis = this.endo.basis;\n  var v1 = basis[0];\n  var v2 = basis[1];\n\n  var c1 = v2.b.mul(k).divRound(this.n);\n  var c2 = v1.b.neg().mul(k).divRound(this.n);\n\n  var p1 = c1.mul(v1.a);\n  var p2 = c2.mul(v2.a);\n  var q1 = c1.mul(v1.b);\n  var q2 = c2.mul(v2.b);\n\n  // Calculate answer\n  var k1 = k.sub(p1).sub(p2);\n  var k2 = q1.add(q2).neg();\n  return { k1: k1, k2: k2 };\n};\n\nShortCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  // XXX Is there any way to tell if the number is odd without converting it\n  // to non-red form?\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nShortCurve.prototype.validate = function validate(point) {\n  if (point.inf)\n    return true;\n\n  var x = point.x;\n  var y = point.y;\n\n  var ax = this.a.redMul(x);\n  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);\n  return y.redSqr().redISub(rhs).cmpn(0) === 0;\n};\n\nShortCurve.prototype._endoWnafMulAdd =\n    function _endoWnafMulAdd(points, coeffs, jacobianResult) {\n      var npoints = this._endoWnafT1;\n      var ncoeffs = this._endoWnafT2;\n      for (var i = 0; i < points.length; i++) {\n        var split = this._endoSplit(coeffs[i]);\n        var p = points[i];\n        var beta = p._getBeta();\n\n        if (split.k1.negative) {\n          split.k1.ineg();\n          p = p.neg(true);\n        }\n        if (split.k2.negative) {\n          split.k2.ineg();\n          beta = beta.neg(true);\n        }\n\n        npoints[i * 2] = p;\n        npoints[i * 2 + 1] = beta;\n        ncoeffs[i * 2] = split.k1;\n        ncoeffs[i * 2 + 1] = split.k2;\n      }\n      var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);\n\n      // Clean-up references to points and coefficients\n      for (var j = 0; j < i * 2; j++) {\n        npoints[j] = null;\n        ncoeffs[j] = null;\n      }\n      return res;\n    };\n\nfunction Point(curve, x, y, isRed) {\n  Base.BasePoint.call(this, curve, 'affine');\n  if (x === null && y === null) {\n    this.x = null;\n    this.y = null;\n    this.inf = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    // Force redgomery representation when loading from JSON\n    if (isRed) {\n      this.x.forceRed(this.curve.red);\n      this.y.forceRed(this.curve.red);\n    }\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    this.inf = false;\n  }\n}\ninherits(Point, Base.BasePoint);\n\nShortCurve.prototype.point = function point(x, y, isRed) {\n  return new Point(this, x, y, isRed);\n};\n\nShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {\n  return Point.fromJSON(this, obj, red);\n};\n\nPoint.prototype._getBeta = function _getBeta() {\n  if (!this.curve.endo)\n    return;\n\n  var pre = this.precomputed;\n  if (pre && pre.beta)\n    return pre.beta;\n\n  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);\n  if (pre) {\n    var curve = this.curve;\n    var endoMul = function(p) {\n      return curve.point(p.x.redMul(curve.endo.beta), p.y);\n    };\n    pre.beta = beta;\n    beta.precomputed = {\n      beta: null,\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(endoMul),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(endoMul),\n      },\n    };\n  }\n  return beta;\n};\n\nPoint.prototype.toJSON = function toJSON() {\n  if (!this.precomputed)\n    return [ this.x, this.y ];\n\n  return [ this.x, this.y, this.precomputed && {\n    doubles: this.precomputed.doubles && {\n      step: this.precomputed.doubles.step,\n      points: this.precomputed.doubles.points.slice(1),\n    },\n    naf: this.precomputed.naf && {\n      wnd: this.precomputed.naf.wnd,\n      points: this.precomputed.naf.points.slice(1),\n    },\n  } ];\n};\n\nPoint.fromJSON = function fromJSON(curve, obj, red) {\n  if (typeof obj === 'string')\n    obj = JSON.parse(obj);\n  var res = curve.point(obj[0], obj[1], red);\n  if (!obj[2])\n    return res;\n\n  function obj2point(obj) {\n    return curve.point(obj[0], obj[1], red);\n  }\n\n  var pre = obj[2];\n  res.precomputed = {\n    beta: null,\n    doubles: pre.doubles && {\n      step: pre.doubles.step,\n      points: [ res ].concat(pre.doubles.points.map(obj2point)),\n    },\n    naf: pre.naf && {\n      wnd: pre.naf.wnd,\n      points: [ res ].concat(pre.naf.points.map(obj2point)),\n    },\n  };\n  return res;\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  return this.inf;\n};\n\nPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.inf)\n    return p;\n\n  // P + O = P\n  if (p.inf)\n    return this;\n\n  // P + P = 2P\n  if (this.eq(p))\n    return this.dbl();\n\n  // P + (-P) = O\n  if (this.neg().eq(p))\n    return this.curve.point(null, null);\n\n  // P + Q = O\n  if (this.x.cmp(p.x) === 0)\n    return this.curve.point(null, null);\n\n  var c = this.y.redSub(p.y);\n  if (c.cmpn(0) !== 0)\n    c = c.redMul(this.x.redSub(p.x).redInvm());\n  var nx = c.redSqr().redISub(this.x).redISub(p.x);\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.inf)\n    return this;\n\n  // 2P = O\n  var ys1 = this.y.redAdd(this.y);\n  if (ys1.cmpn(0) === 0)\n    return this.curve.point(null, null);\n\n  var a = this.curve.a;\n\n  var x2 = this.x.redSqr();\n  var dyinv = ys1.redInvm();\n  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);\n\n  var nx = c.redSqr().redISub(this.x.redAdd(this.x));\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.getX = function getX() {\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  return this.y.fromRed();\n};\n\nPoint.prototype.mul = function mul(k) {\n  k = new BN(k, 16);\n  if (this.isInfinity())\n    return this;\n  else if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else if (this.curve.endo)\n    return this.curve._endoWnafMulAdd([ this ], [ k ]);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs, true);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2, true);\n};\n\nPoint.prototype.eq = function eq(p) {\n  return this === p ||\n         this.inf === p.inf &&\n             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);\n};\n\nPoint.prototype.neg = function neg(_precompute) {\n  if (this.inf)\n    return this;\n\n  var res = this.curve.point(this.x, this.y.redNeg());\n  if (_precompute && this.precomputed) {\n    var pre = this.precomputed;\n    var negate = function(p) {\n      return p.neg();\n    };\n    res.precomputed = {\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(negate),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(negate),\n      },\n    };\n  }\n  return res;\n};\n\nPoint.prototype.toJ = function toJ() {\n  if (this.inf)\n    return this.curve.jpoint(null, null, null);\n\n  var res = this.curve.jpoint(this.x, this.y, this.curve.one);\n  return res;\n};\n\nfunction JPoint(curve, x, y, z) {\n  Base.BasePoint.call(this, curve, 'jacobian');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.one;\n    this.y = this.curve.one;\n    this.z = new BN(0);\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = new BN(z, 16);\n  }\n  if (!this.x.red)\n    this.x = this.x.toRed(this.curve.red);\n  if (!this.y.red)\n    this.y = this.y.toRed(this.curve.red);\n  if (!this.z.red)\n    this.z = this.z.toRed(this.curve.red);\n\n  this.zOne = this.z === this.curve.one;\n}\ninherits(JPoint, Base.BasePoint);\n\nShortCurve.prototype.jpoint = function jpoint(x, y, z) {\n  return new JPoint(this, x, y, z);\n};\n\nJPoint.prototype.toP = function toP() {\n  if (this.isInfinity())\n    return this.curve.point(null, null);\n\n  var zinv = this.z.redInvm();\n  var zinv2 = zinv.redSqr();\n  var ax = this.x.redMul(zinv2);\n  var ay = this.y.redMul(zinv2).redMul(zinv);\n\n  return this.curve.point(ax, ay);\n};\n\nJPoint.prototype.neg = function neg() {\n  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);\n};\n\nJPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p;\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 12M + 4S + 7A\n  var pz2 = p.z.redSqr();\n  var z2 = this.z.redSqr();\n  var u1 = this.x.redMul(pz2);\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y.redMul(pz2.redMul(p.z));\n  var s2 = p.y.redMul(z2.redMul(this.z));\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(p.z).redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mixedAdd = function mixedAdd(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p.toJ();\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 8M + 3S + 7A\n  var z2 = this.z.redSqr();\n  var u1 = this.x;\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y;\n  var s2 = p.y.redMul(z2).redMul(this.z);\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.dblp = function dblp(pow) {\n  if (pow === 0)\n    return this;\n  if (this.isInfinity())\n    return this;\n  if (!pow)\n    return this.dbl();\n\n  var i;\n  if (this.curve.zeroA || this.curve.threeA) {\n    var r = this;\n    for (i = 0; i < pow; i++)\n      r = r.dbl();\n    return r;\n  }\n\n  // 1M + 2S + 1A + N * (4S + 5M + 8A)\n  // N = 1 => 6M + 6S + 9A\n  var a = this.curve.a;\n  var tinv = this.curve.tinv;\n\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  // Reuse results\n  var jyd = jy.redAdd(jy);\n  for (i = 0; i < pow; i++) {\n    var jx2 = jx.redSqr();\n    var jyd2 = jyd.redSqr();\n    var jyd4 = jyd2.redSqr();\n    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n    var t1 = jx.redMul(jyd2);\n    var nx = c.redSqr().redISub(t1.redAdd(t1));\n    var t2 = t1.redISub(nx);\n    var dny = c.redMul(t2);\n    dny = dny.redIAdd(dny).redISub(jyd4);\n    var nz = jyd.redMul(jz);\n    if (i + 1 < pow)\n      jz4 = jz4.redMul(jyd4);\n\n    jx = nx;\n    jz = nz;\n    jyd = dny;\n  }\n\n  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);\n};\n\nJPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  if (this.curve.zeroA)\n    return this._zeroDbl();\n  else if (this.curve.threeA)\n    return this._threeDbl();\n  else\n    return this._dbl();\n};\n\nJPoint.prototype._zeroDbl = function _zeroDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 14A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a; a = 0\n    var m = xx.redAdd(xx).redIAdd(xx);\n    // T = M ^ 2 - 2*S\n    var t = m.redSqr().redISub(s).redISub(s);\n\n    // 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2*Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-dbl-2009-l\n    // 2M + 5S + 13A\n\n    // A = X1^2\n    var a = this.x.redSqr();\n    // B = Y1^2\n    var b = this.y.redSqr();\n    // C = B^2\n    var c = b.redSqr();\n    // D = 2 * ((X1 + B)^2 - A - C)\n    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);\n    d = d.redIAdd(d);\n    // E = 3 * A\n    var e = a.redAdd(a).redIAdd(a);\n    // F = E^2\n    var f = e.redSqr();\n\n    // 8 * C\n    var c8 = c.redIAdd(c);\n    c8 = c8.redIAdd(c8);\n    c8 = c8.redIAdd(c8);\n\n    // X3 = F - 2 * D\n    nx = f.redISub(d).redISub(d);\n    // Y3 = E * (D - X3) - 8 * C\n    ny = e.redMul(d.redISub(nx)).redISub(c8);\n    // Z3 = 2 * Y1 * Z1\n    nz = this.y.redMul(this.z);\n    nz = nz.redIAdd(nz);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._threeDbl = function _threeDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 15A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a\n    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);\n    // T = M^2 - 2 * S\n    var t = m.redSqr().redISub(s).redISub(s);\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2 * Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b\n    // 3M + 5S\n\n    // delta = Z1^2\n    var delta = this.z.redSqr();\n    // gamma = Y1^2\n    var gamma = this.y.redSqr();\n    // beta = X1 * gamma\n    var beta = this.x.redMul(gamma);\n    // alpha = 3 * (X1 - delta) * (X1 + delta)\n    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));\n    alpha = alpha.redAdd(alpha).redIAdd(alpha);\n    // X3 = alpha^2 - 8 * beta\n    var beta4 = beta.redIAdd(beta);\n    beta4 = beta4.redIAdd(beta4);\n    var beta8 = beta4.redAdd(beta4);\n    nx = alpha.redSqr().redISub(beta8);\n    // Z3 = (Y1 + Z1)^2 - gamma - delta\n    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);\n    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2\n    var ggamma8 = gamma.redSqr();\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._dbl = function _dbl() {\n  var a = this.curve.a;\n\n  // 4M + 6S + 10A\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  var jx2 = jx.redSqr();\n  var jy2 = jy.redSqr();\n\n  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n  var jxd4 = jx.redAdd(jx);\n  jxd4 = jxd4.redIAdd(jxd4);\n  var t1 = jxd4.redMul(jy2);\n  var nx = c.redSqr().redISub(t1.redAdd(t1));\n  var t2 = t1.redISub(nx);\n\n  var jyd8 = jy2.redSqr();\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  var ny = c.redMul(t2).redISub(jyd8);\n  var nz = jy.redAdd(jy).redMul(jz);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.trpl = function trpl() {\n  if (!this.curve.zeroA)\n    return this.dbl().add(this);\n\n  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl\n  // 5M + 10S + ...\n\n  // XX = X1^2\n  var xx = this.x.redSqr();\n  // YY = Y1^2\n  var yy = this.y.redSqr();\n  // ZZ = Z1^2\n  var zz = this.z.redSqr();\n  // YYYY = YY^2\n  var yyyy = yy.redSqr();\n  // M = 3 * XX + a * ZZ2; a = 0\n  var m = xx.redAdd(xx).redIAdd(xx);\n  // MM = M^2\n  var mm = m.redSqr();\n  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM\n  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n  e = e.redIAdd(e);\n  e = e.redAdd(e).redIAdd(e);\n  e = e.redISub(mm);\n  // EE = E^2\n  var ee = e.redSqr();\n  // T = 16*YYYY\n  var t = yyyy.redIAdd(yyyy);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  // U = (M + E)^2 - MM - EE - T\n  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);\n  // X3 = 4 * (X1 * EE - 4 * YY * U)\n  var yyu4 = yy.redMul(u);\n  yyu4 = yyu4.redIAdd(yyu4);\n  yyu4 = yyu4.redIAdd(yyu4);\n  var nx = this.x.redMul(ee).redISub(yyu4);\n  nx = nx.redIAdd(nx);\n  nx = nx.redIAdd(nx);\n  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)\n  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  // Z3 = (Z1 + E)^2 - ZZ - EE\n  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mul = function mul(k, kbase) {\n  k = new BN(k, kbase);\n\n  return this.curve._wnafMul(this, k);\n};\n\nJPoint.prototype.eq = function eq(p) {\n  if (p.type === 'affine')\n    return this.eq(p.toJ());\n\n  if (this === p)\n    return true;\n\n  // x1 * z2^2 == x2 * z1^2\n  var z2 = this.z.redSqr();\n  var pz2 = p.z.redSqr();\n  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)\n    return false;\n\n  // y1 * z2^3 == y2 * z1^3\n  var z3 = z2.redMul(this.z);\n  var pz3 = pz2.redMul(p.z);\n  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;\n};\n\nJPoint.prototype.eqXToP = function eqXToP(x) {\n  var zs = this.z.redSqr();\n  var rx = x.toRed(this.curve.red).redMul(zs);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(zs);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n};\n\nJPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC JPoint Infinity>';\n  return '<EC JPoint x: ' + this.x.toString(16, 2) +\n      ' y: ' + this.y.toString(16, 2) +\n      ' z: ' + this.z.toString(16, 2) + '>';\n};\n\nJPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n", "'use strict';\n\nvar curve = exports;\n\ncurve.base = require('./base');\ncurve.short = require('./short');\ncurve.mont = require('./mont');\ncurve.edwards = require('./edwards');\n", "'use strict';\n\nvar curves = exports;\n\nvar hash = require('hash.js');\nvar curve = require('./curve');\nvar utils = require('./utils');\n\nvar assert = utils.assert;\n\nfunction PresetCurve(options) {\n  if (options.type === 'short')\n    this.curve = new curve.short(options);\n  else if (options.type === 'edwards')\n    this.curve = new curve.edwards(options);\n  else\n    this.curve = new curve.mont(options);\n  this.g = this.curve.g;\n  this.n = this.curve.n;\n  this.hash = options.hash;\n\n  assert(this.g.validate(), 'Invalid curve');\n  assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');\n}\ncurves.PresetCurve = PresetCurve;\n\nfunction defineCurve(name, options) {\n  Object.defineProperty(curves, name, {\n    configurable: true,\n    enumerable: true,\n    get: function() {\n      var curve = new PresetCurve(options);\n      Object.defineProperty(curves, name, {\n        configurable: true,\n        enumerable: true,\n        value: curve,\n      });\n      return curve;\n    },\n  });\n}\n\ndefineCurve('p192', {\n  type: 'short',\n  prime: 'p192',\n  p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',\n  b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',\n  n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012',\n    '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811',\n  ],\n});\n\ndefineCurve('p224', {\n  type: 'short',\n  prime: 'p224',\n  p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',\n  b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',\n  n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    'b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21',\n    'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34',\n  ],\n});\n\ndefineCurve('p256', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',\n  a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',\n  b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',\n  n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296',\n    '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5',\n  ],\n});\n\ndefineCurve('p384', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 ffffffff',\n  a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 fffffffc',\n  b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' +\n     '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',\n  n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' +\n     'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',\n  hash: hash.sha384,\n  gRed: false,\n  g: [\n    'aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' +\n    '5502f25d bf55296c 3a545e38 72760ab7',\n    '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' +\n    '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f',\n  ],\n});\n\ndefineCurve('p521', {\n  type: 'short',\n  prime: null,\n  p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff',\n  a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff fffffffc',\n  b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' +\n     '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' +\n     '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',\n  n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' +\n     'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',\n  hash: hash.sha512,\n  gRed: false,\n  g: [\n    '000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' +\n    '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' +\n    'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66',\n    '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' +\n    '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' +\n    '3fad0761 353c7086 a272c240 88be9476 9fd16650',\n  ],\n});\n\ndefineCurve('curve25519', {\n  type: 'mont',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '76d06',\n  b: '1',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '9',\n  ],\n});\n\ndefineCurve('ed25519', {\n  type: 'edwards',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '-1',\n  c: '1',\n  // -121665 * (121666^(-1)) (mod P)\n  d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',\n\n    // 4/5\n    '6666666666666666666666666666666666666666666666666666666666666658',\n  ],\n});\n\nvar pre;\ntry {\n  pre = require('./precomputed/secp256k1');\n} catch (e) {\n  pre = undefined;\n}\n\ndefineCurve('secp256k1', {\n  type: 'short',\n  prime: 'k256',\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',\n  a: '0',\n  b: '7',\n  n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',\n  h: '1',\n  hash: hash.sha256,\n\n  // Precomputed endomorphism\n  beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',\n  lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',\n  basis: [\n    {\n      a: '3086d221a7d46bcde86c90e49284eb15',\n      b: '-e4437ed6010e88286f547fa90abfe4c3',\n    },\n    {\n      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',\n      b: '3086d221a7d46bcde86c90e49284eb15',\n    },\n  ],\n\n  gRed: false,\n  g: [\n    '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',\n    '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',\n    pre,\n  ],\n});\n", "'use strict';\n\nvar hash = require('hash.js');\nvar utils = require('minimalistic-crypto-utils');\nvar assert = require('minimalistic-assert');\n\nfunction HmacDRBG(options) {\n  if (!(this instanceof HmacDRBG))\n    return new HmacDRBG(options);\n  this.hash = options.hash;\n  this.predResist = !!options.predResist;\n\n  this.outLen = this.hash.outSize;\n  this.minEntropy = options.minEntropy || this.hash.hmacStrength;\n\n  this._reseed = null;\n  this.reseedInterval = null;\n  this.K = null;\n  this.V = null;\n\n  var entropy = utils.toArray(options.entropy, options.entropyEnc || 'hex');\n  var nonce = utils.toArray(options.nonce, options.nonceEnc || 'hex');\n  var pers = utils.toArray(options.pers, options.persEnc || 'hex');\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n  this._init(entropy, nonce, pers);\n}\nmodule.exports = HmacDRBG;\n\nHmacDRBG.prototype._init = function init(entropy, nonce, pers) {\n  var seed = entropy.concat(nonce).concat(pers);\n\n  this.K = new Array(this.outLen / 8);\n  this.V = new Array(this.outLen / 8);\n  for (var i = 0; i < this.V.length; i++) {\n    this.K[i] = 0x00;\n    this.V[i] = 0x01;\n  }\n\n  this._update(seed);\n  this._reseed = 1;\n  this.reseedInterval = 0x1000000000000;  // 2^48\n};\n\nHmacDRBG.prototype._hmac = function hmac() {\n  return new hash.hmac(this.hash, this.K);\n};\n\nHmacDRBG.prototype._update = function update(seed) {\n  var kmac = this._hmac()\n                 .update(this.V)\n                 .update([ 0x00 ]);\n  if (seed)\n    kmac = kmac.update(seed);\n  this.K = kmac.digest();\n  this.V = this._hmac().update(this.V).digest();\n  if (!seed)\n    return;\n\n  this.K = this._hmac()\n               .update(this.V)\n               .update([ 0x01 ])\n               .update(seed)\n               .digest();\n  this.V = this._hmac().update(this.V).digest();\n};\n\nHmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {\n  // Optional entropy enc\n  if (typeof entropyEnc !== 'string') {\n    addEnc = add;\n    add = entropyEnc;\n    entropyEnc = null;\n  }\n\n  entropy = utils.toArray(entropy, entropyEnc);\n  add = utils.toArray(add, addEnc);\n\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n\n  this._update(entropy.concat(add || []));\n  this._reseed = 1;\n};\n\nHmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {\n  if (this._reseed > this.reseedInterval)\n    throw new Error('Reseed is required');\n\n  // Optional encoding\n  if (typeof enc !== 'string') {\n    addEnc = add;\n    add = enc;\n    enc = null;\n  }\n\n  // Optional additional data\n  if (add) {\n    add = utils.toArray(add, addEnc || 'hex');\n    this._update(add);\n  }\n\n  var temp = [];\n  while (temp.length < len) {\n    this.V = this._hmac().update(this.V).digest();\n    temp = temp.concat(this.V);\n  }\n\n  var res = temp.slice(0, len);\n  this._update(add);\n  this._reseed++;\n  return utils.encode(res, enc);\n};\n", "'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction KeyPair(ec, options) {\n  this.ec = ec;\n  this.priv = null;\n  this.pub = null;\n\n  // KeyPair(ec, { priv: ..., pub: ... })\n  if (options.priv)\n    this._importPrivate(options.priv, options.privEnc);\n  if (options.pub)\n    this._importPublic(options.pub, options.pubEnc);\n}\nmodule.exports = KeyPair;\n\nKeyPair.fromPublic = function fromPublic(ec, pub, enc) {\n  if (pub instanceof KeyPair)\n    return pub;\n\n  return new KeyPair(ec, {\n    pub: pub,\n    pubEnc: enc,\n  });\n};\n\nKeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {\n  if (priv instanceof KeyPair)\n    return priv;\n\n  return new KeyPair(ec, {\n    priv: priv,\n    privEnc: enc,\n  });\n};\n\nKeyPair.prototype.validate = function validate() {\n  var pub = this.getPublic();\n\n  if (pub.isInfinity())\n    return { result: false, reason: 'Invalid public key' };\n  if (!pub.validate())\n    return { result: false, reason: 'Public key is not a point' };\n  if (!pub.mul(this.ec.curve.n).isInfinity())\n    return { result: false, reason: 'Public key * N != O' };\n\n  return { result: true, reason: null };\n};\n\nKeyPair.prototype.getPublic = function getPublic(compact, enc) {\n  // compact is optional argument\n  if (typeof compact === 'string') {\n    enc = compact;\n    compact = null;\n  }\n\n  if (!this.pub)\n    this.pub = this.ec.g.mul(this.priv);\n\n  if (!enc)\n    return this.pub;\n\n  return this.pub.encode(enc, compact);\n};\n\nKeyPair.prototype.getPrivate = function getPrivate(enc) {\n  if (enc === 'hex')\n    return this.priv.toString(16, 2);\n  else\n    return this.priv;\n};\n\nKeyPair.prototype._importPrivate = function _importPrivate(key, enc) {\n  this.priv = new BN(key, enc || 16);\n\n  // Ensure that the priv won't be bigger than n, otherwise we may fail\n  // in fixed multiplication method\n  this.priv = this.priv.umod(this.ec.curve.n);\n};\n\nKeyPair.prototype._importPublic = function _importPublic(key, enc) {\n  if (key.x || key.y) {\n    // Montgomery points only have an `x` coordinate.\n    // Weierstrass/Edwards points on the other hand have both `x` and\n    // `y` coordinates.\n    if (this.ec.curve.type === 'mont') {\n      assert(key.x, 'Need x coordinate');\n    } else if (this.ec.curve.type === 'short' ||\n               this.ec.curve.type === 'edwards') {\n      assert(key.x && key.y, 'Need both x and y coordinate');\n    }\n    this.pub = this.ec.curve.point(key.x, key.y);\n    return;\n  }\n  this.pub = this.ec.curve.decodePoint(key, enc);\n};\n\n// ECDH\nKeyPair.prototype.derive = function derive(pub) {\n  if(!pub.validate()) {\n    assert(pub.validate(), 'public point not validated');\n  }\n  return pub.mul(this.priv).getX();\n};\n\n// ECDSA\nKeyPair.prototype.sign = function sign(msg, enc, options) {\n  return this.ec.sign(msg, this, enc, options);\n};\n\nKeyPair.prototype.verify = function verify(msg, signature) {\n  return this.ec.verify(msg, signature, this);\n};\n\nKeyPair.prototype.inspect = function inspect() {\n  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +\n         ' pub: ' + (this.pub && this.pub.inspect()) + ' >';\n};\n", "'use strict';\n\nvar BN = require('bn.js');\n\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction Signature(options, enc) {\n  if (options instanceof Signature)\n    return options;\n\n  if (this._importDER(options, enc))\n    return;\n\n  assert(options.r && options.s, 'Signature without r or s');\n  this.r = new BN(options.r, 16);\n  this.s = new BN(options.s, 16);\n  if (options.recoveryParam === undefined)\n    this.recoveryParam = null;\n  else\n    this.recoveryParam = options.recoveryParam;\n}\nmodule.exports = Signature;\n\nfunction Position() {\n  this.place = 0;\n}\n\nfunction getLength(buf, p) {\n  var initial = buf[p.place++];\n  if (!(initial & 0x80)) {\n    return initial;\n  }\n  var octetLen = initial & 0xf;\n\n  // Indefinite length or overflow\n  if (octetLen === 0 || octetLen > 4) {\n    return false;\n  }\n\n  var val = 0;\n  for (var i = 0, off = p.place; i < octetLen; i++, off++) {\n    val <<= 8;\n    val |= buf[off];\n    val >>>= 0;\n  }\n\n  // Leading zeroes\n  if (val <= 0x7f) {\n    return false;\n  }\n\n  p.place = off;\n  return val;\n}\n\nfunction rmPadding(buf) {\n  var i = 0;\n  var len = buf.length - 1;\n  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {\n    i++;\n  }\n  if (i === 0) {\n    return buf;\n  }\n  return buf.slice(i);\n}\n\nSignature.prototype._importDER = function _importDER(data, enc) {\n  data = utils.toArray(data, enc);\n  var p = new Position();\n  if (data[p.place++] !== 0x30) {\n    return false;\n  }\n  var len = getLength(data, p);\n  if (len === false) {\n    return false;\n  }\n  if ((len + p.place) !== data.length) {\n    return false;\n  }\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var rlen = getLength(data, p);\n  if (rlen === false) {\n    return false;\n  }\n  var r = data.slice(p.place, rlen + p.place);\n  p.place += rlen;\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var slen = getLength(data, p);\n  if (slen === false) {\n    return false;\n  }\n  if (data.length !== slen + p.place) {\n    return false;\n  }\n  var s = data.slice(p.place, slen + p.place);\n  if (r[0] === 0) {\n    if (r[1] & 0x80) {\n      r = r.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n  if (s[0] === 0) {\n    if (s[1] & 0x80) {\n      s = s.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n\n  this.r = new BN(r);\n  this.s = new BN(s);\n  this.recoveryParam = null;\n\n  return true;\n};\n\nfunction constructLength(arr, len) {\n  if (len < 0x80) {\n    arr.push(len);\n    return;\n  }\n  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);\n  arr.push(octets | 0x80);\n  while (--octets) {\n    arr.push((len >>> (octets << 3)) & 0xff);\n  }\n  arr.push(len);\n}\n\nSignature.prototype.toDER = function toDER(enc) {\n  var r = this.r.toArray();\n  var s = this.s.toArray();\n\n  // Pad values\n  if (r[0] & 0x80)\n    r = [ 0 ].concat(r);\n  // Pad values\n  if (s[0] & 0x80)\n    s = [ 0 ].concat(s);\n\n  r = rmPadding(r);\n  s = rmPadding(s);\n\n  while (!s[0] && !(s[1] & 0x80)) {\n    s = s.slice(1);\n  }\n  var arr = [ 0x02 ];\n  constructLength(arr, r.length);\n  arr = arr.concat(r);\n  arr.push(0x02);\n  constructLength(arr, s.length);\n  var backHalf = arr.concat(s);\n  var res = [ 0x30 ];\n  constructLength(res, backHalf.length);\n  res = res.concat(backHalf);\n  return utils.encode(res, enc);\n};\n", "'use strict';\n\nvar BN = require('bn.js');\nvar HmacDRBG = require('hmac-drbg');\nvar utils = require('../utils');\nvar curves = require('../curves');\nvar rand = require('brorand');\nvar assert = utils.assert;\n\nvar KeyPair = require('./key');\nvar Signature = require('./signature');\n\nfunction EC(options) {\n  if (!(this instanceof EC))\n    return new EC(options);\n\n  // Shortcut `elliptic.ec(curve-name)`\n  if (typeof options === 'string') {\n    assert(Object.prototype.hasOwnProperty.call(curves, options),\n      'Unknown curve ' + options);\n\n    options = curves[options];\n  }\n\n  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`\n  if (options instanceof curves.PresetCurve)\n    options = { curve: options };\n\n  this.curve = options.curve.curve;\n  this.n = this.curve.n;\n  this.nh = this.n.ushrn(1);\n  this.g = this.curve.g;\n\n  // Point on curve\n  this.g = options.curve.g;\n  this.g.precompute(options.curve.n.bitLength() + 1);\n\n  // Hash for function for DRBG\n  this.hash = options.hash || options.curve.hash;\n}\nmodule.exports = EC;\n\nEC.prototype.keyPair = function keyPair(options) {\n  return new KeyPair(this, options);\n};\n\nEC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {\n  return KeyPair.fromPrivate(this, priv, enc);\n};\n\nEC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {\n  return KeyPair.fromPublic(this, pub, enc);\n};\n\nEC.prototype.genKeyPair = function genKeyPair(options) {\n  if (!options)\n    options = {};\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n    entropy: options.entropy || rand(this.hash.hmacStrength),\n    entropyEnc: options.entropy && options.entropyEnc || 'utf8',\n    nonce: this.n.toArray(),\n  });\n\n  var bytes = this.n.byteLength();\n  var ns2 = this.n.sub(new BN(2));\n  for (;;) {\n    var priv = new BN(drbg.generate(bytes));\n    if (priv.cmp(ns2) > 0)\n      continue;\n\n    priv.iaddn(1);\n    return this.keyFromPrivate(priv);\n  }\n};\n\nEC.prototype._truncateToN = function _truncateToN(msg, truncOnly) {\n  var delta = msg.byteLength() * 8 - this.n.bitLength();\n  if (delta > 0)\n    msg = msg.ushrn(delta);\n  if (!truncOnly && msg.cmp(this.n) >= 0)\n    return msg.sub(this.n);\n  else\n    return msg;\n};\n\nEC.prototype.sign = function sign(msg, key, enc, options) {\n  if (typeof enc === 'object') {\n    options = enc;\n    enc = null;\n  }\n  if (!options)\n    options = {};\n\n  key = this.keyFromPrivate(key, enc);\n  msg = this._truncateToN(new BN(msg, 16));\n\n  // Zero-extend key to provide enough entropy\n  var bytes = this.n.byteLength();\n  var bkey = key.getPrivate().toArray('be', bytes);\n\n  // Zero-extend nonce to have the same byte size as N\n  var nonce = msg.toArray('be', bytes);\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    entropy: bkey,\n    nonce: nonce,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n  });\n\n  // Number of bytes to generate\n  var ns1 = this.n.sub(new BN(1));\n\n  for (var iter = 0; ; iter++) {\n    var k = options.k ?\n      options.k(iter) :\n      new BN(drbg.generate(this.n.byteLength()));\n    k = this._truncateToN(k, true);\n    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)\n      continue;\n\n    var kp = this.g.mul(k);\n    if (kp.isInfinity())\n      continue;\n\n    var kpX = kp.getX();\n    var r = kpX.umod(this.n);\n    if (r.cmpn(0) === 0)\n      continue;\n\n    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));\n    s = s.umod(this.n);\n    if (s.cmpn(0) === 0)\n      continue;\n\n    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) |\n                        (kpX.cmp(r) !== 0 ? 2 : 0);\n\n    // Use complement of `s`, if it is > `n / 2`\n    if (options.canonical && s.cmp(this.nh) > 0) {\n      s = this.n.sub(s);\n      recoveryParam ^= 1;\n    }\n\n    return new Signature({ r: r, s: s, recoveryParam: recoveryParam });\n  }\n};\n\nEC.prototype.verify = function verify(msg, signature, key, enc) {\n  msg = this._truncateToN(new BN(msg, 16));\n  key = this.keyFromPublic(key, enc);\n  signature = new Signature(signature, 'hex');\n\n  // Perform primitive values validation\n  var r = signature.r;\n  var s = signature.s;\n  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)\n    return false;\n  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)\n    return false;\n\n  // Validate signature\n  var sinv = s.invm(this.n);\n  var u1 = sinv.mul(msg).umod(this.n);\n  var u2 = sinv.mul(r).umod(this.n);\n  var p;\n\n  if (!this.curve._maxwellTrick) {\n    p = this.g.mulAdd(u1, key.getPublic(), u2);\n    if (p.isInfinity())\n      return false;\n\n    return p.getX().umod(this.n).cmp(r) === 0;\n  }\n\n  // NOTE: Greg Maxwell's trick, inspired by:\n  // https://git.io/vad3K\n\n  p = this.g.jmulAdd(u1, key.getPublic(), u2);\n  if (p.isInfinity())\n    return false;\n\n  // Compare `p.x` of Jacobian point with `r`,\n  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the\n  // inverse of `p.z^2`\n  return p.eqXToP(r);\n};\n\nEC.prototype.recoverPubKey = function(msg, signature, j, enc) {\n  assert((3 & j) === j, 'The recovery param is more than two bits');\n  signature = new Signature(signature, enc);\n\n  var n = this.n;\n  var e = new BN(msg);\n  var r = signature.r;\n  var s = signature.s;\n\n  // A set LSB signifies that the y-coordinate is odd\n  var isYOdd = j & 1;\n  var isSecondKey = j >> 1;\n  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)\n    throw new Error('Unable to find sencond key candinate');\n\n  // 1.1. Let x = r + jn.\n  if (isSecondKey)\n    r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);\n  else\n    r = this.curve.pointFromX(r, isYOdd);\n\n  var rInv = signature.r.invm(n);\n  var s1 = n.sub(e).mul(rInv).umod(n);\n  var s2 = s.mul(rInv).umod(n);\n\n  // 1.6.1 Compute Q = r^-1 (sR -  eG)\n  //               Q = r^-1 (sR + -eG)\n  return this.g.mulAdd(s1, r, s2);\n};\n\nEC.prototype.getKeyRecoveryParam = function(e, signature, Q, enc) {\n  signature = new Signature(signature, enc);\n  if (signature.recoveryParam !== null)\n    return signature.recoveryParam;\n\n  for (var i = 0; i < 4; i++) {\n    var Qprime;\n    try {\n      Qprime = this.recoverPubKey(e, signature, i);\n    } catch (e) {\n      continue;\n    }\n\n    if (Qprime.eq(Q))\n      return i;\n  }\n  throw new Error('Unable to find valid recovery factor');\n};\n", "'use strict';\n\nvar elliptic = exports;\n\nelliptic.version = require('../package.json').version;\nelliptic.utils = require('./elliptic/utils');\nelliptic.rand = require('brorand');\nelliptic.curve = require('./elliptic/curve');\nelliptic.curves = require('./elliptic/curves');\n\n// Protocols\nelliptic.ec = require('./elliptic/ec');\nelliptic.eddsa = require('./elliptic/eddsa');\n", "import _ec from \"elliptic\";\nvar EC = _ec.ec;\nexport { EC };\n//# sourceMappingURL=elliptic.js.map", "export const version = \"signing-key/5.7.0\";\n", "\"use strict\";\n\nimport { EC } from \"./elliptic\";\n\nimport { arrayify, BytesLike, hexDataLength, hexlify, hexZeroPad, Signature, SignatureLike, splitSignature } from \"@ethersproject/bytes\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nlet _curve: EC = null\nfunction getCurve() {\n    if (!_curve) {\n        _curve = new EC(\"secp256k1\");\n    }\n    return _curve;\n}\n\nexport class SigningKey {\n\n    readonly curve: string;\n\n    readonly privateKey: string;\n    readonly publicKey: string;\n    readonly compressedPublicKey: string;\n\n    //readonly address: string;\n\n    readonly _isSigningKey: boolean;\n\n    constructor(privateKey: BytesLike) {\n        defineReadOnly(this, \"curve\", \"secp256k1\");\n\n        defineReadOnly(this, \"privateKey\", hexlify(privateKey));\n        if (hexDataLength(this.privateKey) !== 32) {\n            logger.throwArgumentError(\"invalid private key\", \"privateKey\", \"[[ REDACTED ]]\");\n        }\n\n        const keyPair = getCurve().keyFromPrivate(arrayify(this.privateKey));\n\n        defineReadOnly(this, \"publicKey\", \"0x\" + keyPair.getPublic(false, \"hex\"));\n        defineReadOnly(this, \"compressedPublicKey\", \"0x\" + keyPair.getPublic(true, \"hex\"));\n\n        defineReadOnly(this, \"_isSigningKey\", true);\n    }\n\n    _addPoint(other: BytesLike): string {\n        const p0 =  getCurve().keyFromPublic(arrayify(this.publicKey));\n        const p1 =  getCurve().keyFromPublic(arrayify(other));\n        return \"0x\" + p0.pub.add(p1.pub).encodeCompressed(\"hex\");\n    }\n\n    signDigest(digest: BytesLike): Signature {\n        const keyPair = getCurve().keyFromPrivate(arrayify(this.privateKey));\n        const digestBytes = arrayify(digest);\n        if (digestBytes.length !== 32) {\n            logger.throwArgumentError(\"bad digest length\", \"digest\", digest);\n        }\n        const signature = keyPair.sign(digestBytes, { canonical: true });\n        return splitSignature({\n            recoveryParam: signature.recoveryParam,\n            r: hexZeroPad(\"0x\" + signature.r.toString(16), 32),\n            s: hexZeroPad(\"0x\" + signature.s.toString(16), 32),\n        })\n    }\n\n    computeSharedSecret(otherKey: BytesLike): string {\n        const keyPair = getCurve().keyFromPrivate(arrayify(this.privateKey));\n        const otherKeyPair = getCurve().keyFromPublic(arrayify(computePublicKey(otherKey)));\n        return hexZeroPad(\"0x\" + keyPair.derive(otherKeyPair.getPublic()).toString(16), 32);\n    }\n\n    static isSigningKey(value: any): value is SigningKey {\n        return !!(value && value._isSigningKey);\n    }\n}\n\nexport function recoverPublicKey(digest: BytesLike, signature: SignatureLike): string {\n    const sig = splitSignature(signature);\n    const rs = { r: arrayify(sig.r), s: arrayify(sig.s) };\n    return \"0x\" + getCurve().recoverPubKey(arrayify(digest), rs, sig.recoveryParam).encode(\"hex\", false);\n}\n\nexport function computePublicKey(key: BytesLike, compressed?: boolean): string {\n    const bytes = arrayify(key);\n\n    if (bytes.length === 32) {\n        const signingKey = new SigningKey(bytes);\n        if (compressed) {\n            return \"0x\" + getCurve().keyFromPrivate(bytes).getPublic(true, \"hex\");\n        }\n        return signingKey.publicKey;\n\n    } else if (bytes.length === 33) {\n        if (compressed) { return hexlify(bytes); }\n        return \"0x\" + getCurve().keyFromPublic(bytes).getPublic(false, \"hex\");\n\n    } else if (bytes.length === 65) {\n        if (!compressed) { return hexlify(bytes); }\n        return \"0x\" + getCurve().keyFromPublic(bytes).getPublic(true, \"hex\");\n    }\n\n    return logger.throwArgumentError(\"invalid public or private key\", \"key\", \"[REDACTED]\");\n}\n\n", "export const version = \"transactions/5.7.0\";\n", "\"use strict\";\n\nimport { getAddress } from \"@ethersproject/address\";\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { arrayify, BytesLike, DataOptions, hexConcat, hexDataLength, hexDataSlice, hexlify, hexZeroPad, isBytesLike, SignatureLike, splitSignature, stripZeros, } from \"@ethersproject/bytes\";\nimport { Zero } from \"@ethersproject/constants\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { checkProperties } from \"@ethersproject/properties\";\nimport * as RLP from \"@ethersproject/rlp\";\nimport { computePublicKey, recoverPublicKey } from \"@ethersproject/signing-key\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n///////////////////////////////\n// Exported Types\n\nexport type AccessList = Array<{ address: string, storageKeys: Array<string> }>;\n\n// Input allows flexibility in describing an access list\nexport type AccessListish = AccessList |\n                            Array<[ string, Array<string> ]> |\n                            Record<string, Array<string>>;\n\nexport enum TransactionTypes {\n    legacy = 0,\n    eip2930 = 1,\n    eip1559 = 2,\n};\n\nexport type UnsignedTransaction = {\n    to?: string;\n    nonce?: number;\n\n    gasLimit?: BigNumberish;\n    gasPrice?: BigNumberish;\n\n    data?: BytesLike;\n    value?: BigNumberish;\n    chainId?: number;\n\n    // Typed-Transaction features\n    type?: number | null;\n\n    // EIP-2930; Type 1 & EIP-1559; Type 2\n    accessList?: AccessListish;\n\n    // EIP-1559; Type 2\n    maxPriorityFeePerGas?: BigNumberish;\n    maxFeePerGas?: BigNumberish;\n}\n\nexport interface Transaction {\n    hash?: string;\n\n    to?: string;\n    from?: string;\n    nonce: number;\n\n    gasLimit: BigNumber;\n    gasPrice?: BigNumber;\n\n    data: string;\n    value: BigNumber;\n    chainId: number;\n\n    r?: string;\n    s?: string;\n    v?: number;\n\n    // Typed-Transaction features\n    type?: number | null;\n\n    // EIP-2930; Type 1 & EIP-1559; Type 2\n    accessList?: AccessList;\n\n    // EIP-1559; Type 2\n    maxPriorityFeePerGas?: BigNumber;\n    maxFeePerGas?: BigNumber;\n}\n\n///////////////////////////////\n\nfunction handleAddress(value: string): string {\n    if (value === \"0x\") { return null; }\n    return getAddress(value);\n}\n\nfunction handleNumber(value: string): BigNumber {\n    if (value === \"0x\") { return Zero; }\n    return BigNumber.from(value);\n}\n\n// Legacy Transaction Fields\nconst transactionFields = [\n    { name: \"nonce\",    maxLength: 32, numeric: true },\n    { name: \"gasPrice\", maxLength: 32, numeric: true },\n    { name: \"gasLimit\", maxLength: 32, numeric: true },\n    { name: \"to\",          length: 20 },\n    { name: \"value\",    maxLength: 32, numeric: true },\n    { name: \"data\" },\n];\n\nconst allowedTransactionKeys: { [ key: string ]: boolean } = {\n    chainId: true, data: true, gasLimit: true, gasPrice:true, nonce: true, to: true, type: true, value: true\n}\n\nexport function computeAddress(key: BytesLike | string): string {\n    const publicKey = computePublicKey(key);\n    return getAddress(hexDataSlice(keccak256(hexDataSlice(publicKey, 1)), 12));\n}\n\nexport function recoverAddress(digest: BytesLike, signature: SignatureLike): string {\n    return computeAddress(recoverPublicKey(arrayify(digest), signature));\n}\n\nfunction formatNumber(value: BigNumberish, name: string): Uint8Array {\n    const result = stripZeros(BigNumber.from(value).toHexString());\n    if (result.length > 32) {\n        logger.throwArgumentError(\"invalid length for \" + name, (\"transaction:\" + name), value);\n    }\n    return result;\n}\n\nfunction accessSetify(addr: string, storageKeys: Array<string>): { address: string,storageKeys: Array<string> } {\n    return {\n        address: getAddress(addr),\n        storageKeys: (storageKeys || []).map((storageKey, index) => {\n            if (hexDataLength(storageKey) !== 32) {\n                logger.throwArgumentError(\"invalid access list storageKey\", `accessList[${ addr }:${ index }]`, storageKey)\n            }\n            return storageKey.toLowerCase();\n        })\n    };\n}\n\nexport function accessListify(value: AccessListish): AccessList {\n    if (Array.isArray(value)) {\n        return (<Array<[ string, Array<string>] | { address: string, storageKeys: Array<string>}>>value).map((set, index) => {\n            if (Array.isArray(set)) {\n                if (set.length > 2) {\n                    logger.throwArgumentError(\"access list expected to be [ address, storageKeys[] ]\", `value[${ index }]`, set);\n                }\n                return accessSetify(set[0], set[1])\n            }\n            return accessSetify(set.address, set.storageKeys);\n        });\n    }\n\n    const result: Array<{ address: string, storageKeys: Array<string> }> = Object.keys(value).map((addr) => {\n        const storageKeys: Record<string, true> = value[addr].reduce((accum, storageKey) => {\n            accum[storageKey] = true;\n            return accum;\n        }, <Record<string, true>>{ });\n        return accessSetify(addr, Object.keys(storageKeys).sort())\n    });\n    result.sort((a, b) => (a.address.localeCompare(b.address)));\n    return result;\n}\n\nfunction formatAccessList(value: AccessListish): Array<[ string, Array<string> ]> {\n    return accessListify(value).map((set) => [ set.address, set.storageKeys ]);\n}\n\nfunction _serializeEip1559(transaction: UnsignedTransaction, signature?: SignatureLike): string {\n    // If there is an explicit gasPrice, make sure it matches the\n    // EIP-1559 fees; otherwise they may not understand what they\n    // think they are setting in terms of fee.\n    if (transaction.gasPrice != null) {\n        const gasPrice = BigNumber.from(transaction.gasPrice);\n        const maxFeePerGas = BigNumber.from(transaction.maxFeePerGas || 0);\n        if (!gasPrice.eq(maxFeePerGas)) {\n            logger.throwArgumentError(\"mismatch EIP-1559 gasPrice != maxFeePerGas\", \"tx\", {\n                gasPrice, maxFeePerGas\n            });\n        }\n    }\n\n    const fields: any = [\n        formatNumber(transaction.chainId || 0, \"chainId\"),\n        formatNumber(transaction.nonce || 0, \"nonce\"),\n        formatNumber(transaction.maxPriorityFeePerGas || 0, \"maxPriorityFeePerGas\"),\n        formatNumber(transaction.maxFeePerGas || 0, \"maxFeePerGas\"),\n        formatNumber(transaction.gasLimit || 0, \"gasLimit\"),\n        ((transaction.to != null) ? getAddress(transaction.to): \"0x\"),\n        formatNumber(transaction.value || 0, \"value\"),\n        (transaction.data || \"0x\"),\n        (formatAccessList(transaction.accessList || []))\n    ];\n\n    if (signature) {\n        const sig = splitSignature(signature);\n        fields.push(formatNumber(sig.recoveryParam, \"recoveryParam\"));\n        fields.push(stripZeros(sig.r));\n        fields.push(stripZeros(sig.s));\n    }\n\n    return hexConcat([ \"0x02\", RLP.encode(fields)]);\n}\n\nfunction _serializeEip2930(transaction: UnsignedTransaction, signature?: SignatureLike): string {\n    const fields: any = [\n        formatNumber(transaction.chainId || 0, \"chainId\"),\n        formatNumber(transaction.nonce || 0, \"nonce\"),\n        formatNumber(transaction.gasPrice || 0, \"gasPrice\"),\n        formatNumber(transaction.gasLimit || 0, \"gasLimit\"),\n        ((transaction.to != null) ? getAddress(transaction.to): \"0x\"),\n        formatNumber(transaction.value || 0, \"value\"),\n        (transaction.data || \"0x\"),\n        (formatAccessList(transaction.accessList || []))\n    ];\n\n    if (signature) {\n        const sig = splitSignature(signature);\n        fields.push(formatNumber(sig.recoveryParam, \"recoveryParam\"));\n        fields.push(stripZeros(sig.r));\n        fields.push(stripZeros(sig.s));\n    }\n\n    return hexConcat([ \"0x01\", RLP.encode(fields)]);\n}\n\n// Legacy Transactions and EIP-155\nfunction _serialize(transaction: UnsignedTransaction, signature?: SignatureLike): string {\n    checkProperties(transaction, allowedTransactionKeys);\n\n    const raw: Array<string | Uint8Array> = [];\n\n    transactionFields.forEach(function(fieldInfo) {\n        let value = (<any>transaction)[fieldInfo.name] || ([]);\n        const options: DataOptions = { };\n        if (fieldInfo.numeric) { options.hexPad = \"left\"; }\n        value = arrayify(hexlify(value, options));\n\n        // Fixed-width field\n        if (fieldInfo.length && value.length !== fieldInfo.length && value.length > 0) {\n            logger.throwArgumentError(\"invalid length for \" + fieldInfo.name, (\"transaction:\" + fieldInfo.name), value);\n        }\n\n        // Variable-width (with a maximum)\n        if (fieldInfo.maxLength) {\n            value = stripZeros(value);\n            if (value.length > fieldInfo.maxLength) {\n                logger.throwArgumentError(\"invalid length for \" + fieldInfo.name, (\"transaction:\" + fieldInfo.name), value );\n            }\n        }\n\n        raw.push(hexlify(value));\n    });\n\n    let chainId = 0;\n    if (transaction.chainId != null) {\n        // A chainId was provided; if non-zero we'll use EIP-155\n        chainId = transaction.chainId;\n\n        if (typeof(chainId) !== \"number\") {\n            logger.throwArgumentError(\"invalid transaction.chainId\", \"transaction\", transaction);\n        }\n\n    } else if (signature && !isBytesLike(signature) && signature.v > 28) {\n        // No chainId provided, but the signature is signing with EIP-155; derive chainId\n        chainId = Math.floor((signature.v - 35) / 2);\n    }\n\n    // We have an EIP-155 transaction (chainId was specified and non-zero)\n    if (chainId !== 0) {\n        raw.push(hexlify(chainId)); // @TODO: hexValue?\n        raw.push(\"0x\");\n        raw.push(\"0x\");\n    }\n\n    // Requesting an unsigned transaction\n    if (!signature) {\n        return RLP.encode(raw);\n    }\n\n    // The splitSignature will ensure the transaction has a recoveryParam in the\n    // case that the signTransaction function only adds a v.\n    const sig = splitSignature(signature);\n\n    // We pushed a chainId and null r, s on for hashing only; remove those\n    let v = 27 + sig.recoveryParam\n    if (chainId !== 0) {\n        raw.pop();\n        raw.pop();\n        raw.pop();\n        v += chainId * 2 + 8;\n\n        // If an EIP-155 v (directly or indirectly; maybe _vs) was provided, check it!\n        if (sig.v > 28 && sig.v !== v) {\n             logger.throwArgumentError(\"transaction.chainId/signature.v mismatch\", \"signature\", signature);\n        }\n    } else if (sig.v !== v) {\n         logger.throwArgumentError(\"transaction.chainId/signature.v mismatch\", \"signature\", signature);\n    }\n\n    raw.push(hexlify(v));\n    raw.push(stripZeros(arrayify(sig.r)));\n    raw.push(stripZeros(arrayify(sig.s)));\n\n    return RLP.encode(raw);\n}\n\nexport function serialize(transaction: UnsignedTransaction, signature?: SignatureLike): string {\n    // Legacy and EIP-155 Transactions\n    if (transaction.type == null || transaction.type === 0) {\n        if (transaction.accessList != null) {\n            logger.throwArgumentError(\"untyped transactions do not support accessList; include type: 1\", \"transaction\", transaction);\n        }\n        return _serialize(transaction, signature);\n    }\n\n    // Typed Transactions (EIP-2718)\n    switch (transaction.type) {\n        case 1:\n            return _serializeEip2930(transaction, signature);\n        case 2:\n            return _serializeEip1559(transaction, signature);\n        default:\n            break;\n    }\n\n    return logger.throwError(`unsupported transaction type: ${ transaction.type }`, Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"serializeTransaction\",\n        transactionType: transaction.type\n    });\n}\n\nfunction _parseEipSignature(tx: Transaction, fields: Array<string>, serialize: (tx: UnsignedTransaction) => string): void {\n    try {\n        const recid = handleNumber(fields[0]).toNumber();\n        if (recid !== 0 && recid !== 1) { throw new Error(\"bad recid\"); }\n        tx.v = recid;\n    } catch (error) {\n        logger.throwArgumentError(\"invalid v for transaction type: 1\", \"v\", fields[0]);\n    }\n\n    tx.r = hexZeroPad(fields[1], 32);\n    tx.s = hexZeroPad(fields[2], 32);\n\n    try {\n        const digest = keccak256(serialize(tx));\n        tx.from = recoverAddress(digest, { r: tx.r, s: tx.s, recoveryParam: tx.v });\n    } catch (error) { }\n}\n\nfunction _parseEip1559(payload: Uint8Array): Transaction {\n    const transaction = RLP.decode(payload.slice(1));\n\n    if (transaction.length !== 9 && transaction.length !== 12) {\n        logger.throwArgumentError(\"invalid component count for transaction type: 2\", \"payload\", hexlify(payload));\n    }\n\n    const maxPriorityFeePerGas = handleNumber(transaction[2]);\n    const maxFeePerGas = handleNumber(transaction[3]);\n    const tx: Transaction = {\n        type:                  2,\n        chainId:               handleNumber(transaction[0]).toNumber(),\n        nonce:                 handleNumber(transaction[1]).toNumber(),\n        maxPriorityFeePerGas:  maxPriorityFeePerGas,\n        maxFeePerGas:          maxFeePerGas,\n        gasPrice:              null,\n        gasLimit:              handleNumber(transaction[4]),\n        to:                    handleAddress(transaction[5]),\n        value:                 handleNumber(transaction[6]),\n        data:                  transaction[7],\n        accessList:            accessListify(transaction[8]),\n    };\n\n    // Unsigned EIP-1559 Transaction\n    if (transaction.length === 9) { return tx; }\n\n    tx.hash = keccak256(payload);\n\n    _parseEipSignature(tx, transaction.slice(9), _serializeEip1559);\n\n    return tx;\n}\n\nfunction _parseEip2930(payload: Uint8Array): Transaction {\n    const transaction = RLP.decode(payload.slice(1));\n\n    if (transaction.length !== 8 && transaction.length !== 11) {\n        logger.throwArgumentError(\"invalid component count for transaction type: 1\", \"payload\", hexlify(payload));\n    }\n\n    const tx: Transaction = {\n        type:       1,\n        chainId:    handleNumber(transaction[0]).toNumber(),\n        nonce:      handleNumber(transaction[1]).toNumber(),\n        gasPrice:   handleNumber(transaction[2]),\n        gasLimit:   handleNumber(transaction[3]),\n        to:         handleAddress(transaction[4]),\n        value:      handleNumber(transaction[5]),\n        data:       transaction[6],\n        accessList: accessListify(transaction[7])\n    };\n\n    // Unsigned EIP-2930 Transaction\n    if (transaction.length === 8) { return tx; }\n\n    tx.hash = keccak256(payload);\n\n    _parseEipSignature(tx, transaction.slice(8), _serializeEip2930);\n\n    return tx;\n}\n\n// Legacy Transactions and EIP-155\nfunction _parse(rawTransaction: Uint8Array): Transaction {\n    const transaction = RLP.decode(rawTransaction);\n\n    if (transaction.length !== 9 && transaction.length !== 6) {\n        logger.throwArgumentError(\"invalid raw transaction\", \"rawTransaction\", rawTransaction);\n    }\n\n    const tx: Transaction = {\n        nonce:    handleNumber(transaction[0]).toNumber(),\n        gasPrice: handleNumber(transaction[1]),\n        gasLimit: handleNumber(transaction[2]),\n        to:       handleAddress(transaction[3]),\n        value:    handleNumber(transaction[4]),\n        data:     transaction[5],\n        chainId:  0\n    };\n\n    // Legacy unsigned transaction\n    if (transaction.length === 6) { return tx; }\n\n    try {\n        tx.v = BigNumber.from(transaction[6]).toNumber();\n\n    } catch (error) {\n        // @TODO: What makes snese to do? The v is too big\n        return tx;\n    }\n\n    tx.r = hexZeroPad(transaction[7], 32);\n    tx.s = hexZeroPad(transaction[8], 32);\n\n    if (BigNumber.from(tx.r).isZero() && BigNumber.from(tx.s).isZero()) {\n        // EIP-155 unsigned transaction\n        tx.chainId = tx.v;\n        tx.v = 0;\n\n    } else {\n        // Signed Transaction\n\n        tx.chainId = Math.floor((tx.v - 35) / 2);\n        if (tx.chainId < 0) { tx.chainId = 0; }\n\n        let recoveryParam = tx.v - 27;\n\n        const raw = transaction.slice(0, 6);\n\n        if (tx.chainId !== 0) {\n            raw.push(hexlify(tx.chainId));\n            raw.push(\"0x\");\n            raw.push(\"0x\");\n            recoveryParam -= tx.chainId * 2 + 8;\n        }\n\n        const digest = keccak256(RLP.encode(raw));\n        try {\n            tx.from = recoverAddress(digest, { r: hexlify(tx.r), s: hexlify(tx.s), recoveryParam: recoveryParam });\n        } catch (error) { }\n\n        tx.hash = keccak256(rawTransaction);\n    }\n\n    tx.type = null;\n\n    return tx;\n}\n\n\nexport function parse(rawTransaction: BytesLike): Transaction {\n    const payload = arrayify(rawTransaction);\n\n    // Legacy and EIP-155 Transactions\n    if (payload[0] > 0x7f) { return _parse(payload); }\n\n    // Typed Transaction (EIP-2718)\n    switch (payload[0]) {\n        case 1:\n            return _parseEip2930(payload);\n        case 2:\n            return _parseEip1559(payload);\n        default:\n            break;\n    }\n\n    return logger.throwError(`unsupported transaction type: ${ payload[0] }`, Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"parseTransaction\",\n        transactionType: payload[0]\n    });\n}\n\n", "\"use strict\";\n\nimport { Block, TransactionReceipt, TransactionResponse } from \"@ethersproject/abstract-provider\";\nimport { getAddress, getContractAddress } from \"@ethersproject/address\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { hexDataLength, hexDataSlice, hexValue, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { AddressZero } from \"@ethersproject/constants\";\nimport { shallowCopy } from \"@ethersproject/properties\";\nimport { AccessList, accessListify, parse as parseTransaction } from \"@ethersproject/transactions\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nexport type FormatFunc = (value: any) => any;\n\nexport type FormatFuncs = { [ key: string ]: FormatFunc };\n\nexport type Formats = {\n    transaction: FormatFuncs,\n    transactionRequest: FormatFuncs,\n    receipt: FormatFuncs,\n    receiptLog: FormatFuncs,\n    block: FormatFuncs,\n    blockWithTransactions: FormatFuncs,\n    filter: FormatFuncs,\n    filterLog: FormatFuncs,\n};\n\nexport class Formatter {\n    readonly formats: Formats;\n\n    constructor() {\n        this.formats = this.getDefaultFormats();\n    }\n\n    getDefaultFormats(): Formats {\n        const formats: Formats = <Formats>({ });\n\n        const address = this.address.bind(this);\n        const bigNumber = this.bigNumber.bind(this);\n        const blockTag = this.blockTag.bind(this);\n        const data = this.data.bind(this);\n        const hash = this.hash.bind(this);\n        const hex = this.hex.bind(this);\n        const number = this.number.bind(this);\n        const type = this.type.bind(this);\n\n        const strictData = (v: any) => { return this.data(v, true); };\n\n        formats.transaction = {\n            hash: hash,\n\n            type: type,\n            accessList: Formatter.allowNull(this.accessList.bind(this), null),\n\n            blockHash: Formatter.allowNull(hash, null),\n            blockNumber: Formatter.allowNull(number, null),\n            transactionIndex: Formatter.allowNull(number, null),\n\n            confirmations: Formatter.allowNull(number, null),\n\n            from: address,\n\n            // either (gasPrice) or (maxPriorityFeePerGas + maxFeePerGas)\n            // must be set\n            gasPrice: Formatter.allowNull(bigNumber),\n            maxPriorityFeePerGas: Formatter.allowNull(bigNumber),\n            maxFeePerGas: Formatter.allowNull(bigNumber),\n\n            gasLimit: bigNumber,\n            to: Formatter.allowNull(address, null),\n            value: bigNumber,\n            nonce: number,\n            data: data,\n\n            r: Formatter.allowNull(this.uint256),\n            s: Formatter.allowNull(this.uint256),\n            v: Formatter.allowNull(number),\n\n            creates: Formatter.allowNull(address, null),\n\n            raw: Formatter.allowNull(data),\n        };\n\n        formats.transactionRequest = {\n            from: Formatter.allowNull(address),\n            nonce: Formatter.allowNull(number),\n            gasLimit: Formatter.allowNull(bigNumber),\n            gasPrice: Formatter.allowNull(bigNumber),\n            maxPriorityFeePerGas: Formatter.allowNull(bigNumber),\n            maxFeePerGas: Formatter.allowNull(bigNumber),\n            to: Formatter.allowNull(address),\n            value: Formatter.allowNull(bigNumber),\n            data: Formatter.allowNull(strictData),\n            type: Formatter.allowNull(number),\n            accessList: Formatter.allowNull(this.accessList.bind(this), null),\n        };\n\n        formats.receiptLog = {\n            transactionIndex: number,\n            blockNumber: number,\n            transactionHash: hash,\n            address: address,\n            topics: Formatter.arrayOf(hash),\n            data: data,\n            logIndex: number,\n            blockHash: hash,\n        };\n\n        formats.receipt = {\n            to: Formatter.allowNull(this.address, null),\n            from: Formatter.allowNull(this.address, null),\n            contractAddress: Formatter.allowNull(address, null),\n            transactionIndex: number,\n            // should be allowNull(hash), but broken-EIP-658 support is handled in receipt\n            root: Formatter.allowNull(hex),\n            gasUsed: bigNumber,\n            logsBloom: Formatter.allowNull(data),// @TODO: should this be data?\n            blockHash: hash,\n            transactionHash: hash,\n            logs: Formatter.arrayOf(this.receiptLog.bind(this)),\n            blockNumber: number,\n            confirmations: Formatter.allowNull(number, null),\n            cumulativeGasUsed: bigNumber,\n            effectiveGasPrice: Formatter.allowNull(bigNumber),\n            status: Formatter.allowNull(number),\n            type: type\n        };\n\n        formats.block = {\n            hash: Formatter.allowNull(hash),\n            parentHash: hash,\n            number: number,\n\n            timestamp: number,\n            nonce: Formatter.allowNull(hex),\n            difficulty: this.difficulty.bind(this),\n\n            gasLimit: bigNumber,\n            gasUsed: bigNumber,\n\n            miner: Formatter.allowNull(address),\n            extraData: data,\n\n            transactions: Formatter.allowNull(Formatter.arrayOf(hash)),\n\n            baseFeePerGas: Formatter.allowNull(bigNumber)\n        };\n\n        formats.blockWithTransactions = shallowCopy(formats.block);\n        formats.blockWithTransactions.transactions = Formatter.allowNull(Formatter.arrayOf(this.transactionResponse.bind(this)));\n\n        formats.filter = {\n            fromBlock: Formatter.allowNull(blockTag, undefined),\n            toBlock: Formatter.allowNull(blockTag, undefined),\n            blockHash: Formatter.allowNull(hash, undefined),\n            address: Formatter.allowNull(address, undefined),\n            topics: Formatter.allowNull(this.topics.bind(this), undefined),\n        };\n\n        formats.filterLog = {\n            blockNumber: Formatter.allowNull(number),\n            blockHash: Formatter.allowNull(hash),\n            transactionIndex: number,\n\n            removed: Formatter.allowNull(this.boolean.bind(this)),\n\n            address: address,\n            data: Formatter.allowFalsish(data, \"0x\"),\n\n            topics: Formatter.arrayOf(hash),\n\n            transactionHash: hash,\n            logIndex: number,\n        };\n\n        return formats;\n    }\n\n    accessList(accessList: Array<any>): AccessList {\n        return accessListify(accessList || []);\n    }\n\n    // Requires a BigNumberish that is within the IEEE754 safe integer range; returns a number\n    // Strict! Used on input.\n    number(number: any): number {\n        if (number === \"0x\") { return 0; }\n        return BigNumber.from(number).toNumber();\n    }\n\n    type(number: any): number {\n        if (number === \"0x\" || number == null) { return 0; }\n        return BigNumber.from(number).toNumber();\n    }\n\n    // Strict! Used on input.\n    bigNumber(value: any): BigNumber {\n        return BigNumber.from(value);\n    }\n\n    // Requires a boolean, \"true\" or  \"false\"; returns a boolean\n    boolean(value: any): boolean {\n        if (typeof(value) === \"boolean\") { return value; }\n        if (typeof(value) === \"string\") {\n            value = value.toLowerCase();\n            if (value === \"true\") { return true; }\n            if (value === \"false\") { return false; }\n        }\n        throw new Error(\"invalid boolean - \" + value);\n    }\n\n    hex(value: any, strict?: boolean): string {\n        if (typeof(value) === \"string\") {\n            if (!strict && value.substring(0, 2) !== \"0x\") { value = \"0x\" + value; }\n            if (isHexString(value)) {\n               return value.toLowerCase();\n            }\n        }\n        return logger.throwArgumentError(\"invalid hash\", \"value\", value);\n    }\n\n    data(value: any, strict?: boolean): string {\n        const result = this.hex(value, strict);\n        if ((result.length % 2) !== 0) {\n            throw new Error(\"invalid data; odd-length - \" + value);\n        }\n        return result;\n    }\n\n    // Requires an address\n    // Strict! Used on input.\n    address(value: any): string {\n        return getAddress(value);\n    }\n\n    callAddress(value: any): string {\n        if (!isHexString(value, 32)) { return null; }\n        const address = getAddress(hexDataSlice(value, 12));\n        return (address === AddressZero) ? null: address;\n    }\n\n    contractAddress(value: any): string {\n        return getContractAddress(value);\n    }\n\n    // Strict! Used on input.\n    blockTag(blockTag: any): string {\n        if (blockTag == null) { return \"latest\"; }\n\n        if (blockTag === \"earliest\") { return \"0x0\"; }\n\n        switch (blockTag) {\n            case \"earliest\": return \"0x0\";\n            case \"latest\": case \"pending\": case \"safe\": case \"finalized\":\n                return blockTag;\n        }\n\n        if (typeof(blockTag) === \"number\" || isHexString(blockTag)) {\n            return hexValue(<number | string>blockTag);\n        }\n\n        throw new Error(\"invalid blockTag\");\n    }\n\n    // Requires a hash, optionally requires 0x prefix; returns prefixed lowercase hash.\n    hash(value: any, strict?: boolean): string {\n        const result = this.hex(value, strict);\n        if (hexDataLength(result) !== 32) {\n            return logger.throwArgumentError(\"invalid hash\", \"value\", value);\n        }\n        return result;\n    }\n\n    // Returns the difficulty as a number, or if too large (i.e. PoA network) null\n    difficulty(value: any): number {\n        if (value == null) { return null; }\n\n        const v = BigNumber.from(value);\n\n        try {\n            return v.toNumber();\n        } catch (error) { }\n\n       return null;\n    }\n\n    uint256(value: any): string {\n        if (!isHexString(value)) {\n            throw new Error(\"invalid uint256\");\n        }\n        return hexZeroPad(value, 32);\n    }\n\n    _block(value: any, format: any): Block {\n        if (value.author != null && value.miner == null) {\n            value.miner = value.author;\n        }\n        // The difficulty may need to come from _difficulty in recursed blocks\n        const difficulty = (value._difficulty != null) ? value._difficulty: value.difficulty;\n        const result = Formatter.check(format, value);\n        result._difficulty = ((difficulty == null) ? null: BigNumber.from(difficulty));\n        return result;\n    }\n\n    block(value: any): Block {\n        return this._block(value, this.formats.block);\n    }\n\n    blockWithTransactions(value: any): Block {\n        return this._block(value, this.formats.blockWithTransactions);\n    }\n\n    // Strict! Used on input.\n    transactionRequest(value: any): any {\n        return Formatter.check(this.formats.transactionRequest, value);\n    }\n\n    transactionResponse(transaction: any): TransactionResponse {\n\n        // Rename gas to gasLimit\n        if (transaction.gas != null && transaction.gasLimit == null) {\n            transaction.gasLimit = transaction.gas;\n        }\n\n        // Some clients (TestRPC) do strange things like return 0x0 for the\n        // 0 address; correct this to be a real address\n        if (transaction.to && BigNumber.from(transaction.to).isZero()) {\n            transaction.to = \"0x0000000000000000000000000000000000000000\";\n        }\n\n        // Rename input to data\n        if (transaction.input != null && transaction.data == null) {\n            transaction.data = transaction.input;\n        }\n\n        // If to and creates are empty, populate the creates from the transaction\n        if (transaction.to == null && transaction.creates == null) {\n            transaction.creates = this.contractAddress(transaction);\n        }\n\n        if ((transaction.type === 1 || transaction.type === 2)&& transaction.accessList == null) {\n            transaction.accessList = [ ];\n        }\n\n        const result: TransactionResponse = Formatter.check(this.formats.transaction, transaction);\n\n        if (transaction.chainId != null) {\n            let chainId = transaction.chainId;\n\n            if (isHexString(chainId)) {\n                chainId = BigNumber.from(chainId).toNumber();\n            }\n\n            result.chainId = chainId;\n\n        } else {\n            let chainId = transaction.networkId;\n\n            // geth-etc returns chainId\n            if (chainId == null && result.v == null) {\n                chainId = transaction.chainId;\n            }\n\n            if (isHexString(chainId)) {\n                chainId = BigNumber.from(chainId).toNumber();\n            }\n\n            if (typeof(chainId) !== \"number\" && result.v != null) {\n                chainId = (result.v - 35) / 2;\n                if (chainId < 0) { chainId = 0; }\n                chainId = parseInt(chainId);\n            }\n\n            if (typeof(chainId) !== \"number\") { chainId = 0; }\n\n            result.chainId = chainId;\n        }\n\n        // 0x0000... should actually be null\n        if (result.blockHash && result.blockHash.replace(/0/g, \"\") === \"x\") {\n            result.blockHash = null;\n        }\n\n        return result;\n    }\n\n    transaction(value: any): any {\n        return parseTransaction(value);\n    }\n\n    receiptLog(value: any): any {\n        return Formatter.check(this.formats.receiptLog, value);\n    }\n\n    receipt(value: any): TransactionReceipt {\n        const result: TransactionReceipt = Formatter.check(this.formats.receipt, value);\n\n        // RSK incorrectly implemented EIP-658, so we munge things a bit here for it\n        if (result.root != null) {\n            if (result.root.length <= 4) {\n                // Could be 0x00, 0x0, 0x01 or 0x1\n                const value = BigNumber.from(result.root).toNumber();\n                if (value === 0 || value === 1) {\n                    // Make sure if both are specified, they match\n                    if (result.status != null && (result.status !== value)) {\n                        logger.throwArgumentError(\"alt-root-status/status mismatch\", \"value\", { root: result.root, status: result.status });\n                    }\n                    result.status = value;\n                    delete result.root;\n                } else {\n                    logger.throwArgumentError(\"invalid alt-root-status\", \"value.root\", result.root);\n                }\n            } else if (result.root.length !== 66) {\n                // Must be a valid bytes32\n                logger.throwArgumentError(\"invalid root hash\", \"value.root\", result.root);\n            }\n        }\n\n        if (result.status != null) {\n            result.byzantium = true;\n        }\n\n        return result;\n    }\n\n    topics(value: any): any {\n        if (Array.isArray(value)) {\n            return value.map((v) => this.topics(v));\n\n        } else if (value != null) {\n            return this.hash(value, true);\n        }\n\n        return null;\n    }\n\n    filter(value: any): any {\n        return Formatter.check(this.formats.filter, value);\n    }\n\n    filterLog(value: any): any {\n        return Formatter.check(this.formats.filterLog, value);\n    }\n\n    static check(format: { [ name: string ]: FormatFunc }, object: any): any {\n        const result: any = {};\n        for (const key in format) {\n            try {\n                const value = format[key](object[key]);\n                if (value !== undefined) { result[key] = value; }\n            } catch (error) {\n                error.checkKey = key;\n                error.checkValue = object[key];\n                throw error;\n            }\n        }\n        return result;\n    }\n\n    // if value is null-ish, nullValue is returned\n    static allowNull(format: FormatFunc, nullValue?: any): FormatFunc {\n        return (function(value: any) {\n            if (value == null) { return nullValue; }\n            return format(value);\n        });\n    }\n\n    // If value is false-ish, replaceValue is returned\n    static allowFalsish(format: FormatFunc, replaceValue: any): FormatFunc {\n        return (function(value: any) {\n            if (!value) { return replaceValue; }\n            return format(value);\n        });\n    }\n\n    // Requires an Array satisfying check\n    static arrayOf(format: FormatFunc): FormatFunc {\n        return (function(array: any): Array<any> {\n            if (!Array.isArray(array)) { throw new Error(\"not an array\"); }\n\n            const result: any = [];\n\n            array.forEach(function(value) {\n                result.push(format(value));\n            });\n\n            return result;\n        });\n    }\n}\n\nexport interface CommunityResourcable {\n    isCommunityResource(): boolean;\n}\n\nexport function isCommunityResourcable(value: any): value is CommunityResourcable {\n    return (value && typeof(value.isCommunityResource) === \"function\");\n}\n\nexport function isCommunityResource(value: any): boolean {\n    return (isCommunityResourcable(value) && value.isCommunityResource());\n}\n\n// Show the throttle message only once\nlet throttleMessage = false;\nexport function showThrottleMessage() {\n    if (throttleMessage) { return; }\n    throttleMessage = true;\n\n    console.log(\"========= NOTICE =========\")\n    console.log(\"Request-Rate Exceeded  (this message will not be repeated)\");\n    console.log(\"\");\n    console.log(\"The default API keys for each service are provided as a highly-throttled,\");\n    console.log(\"community resource for low-traffic projects and early prototyping.\");\n    console.log(\"\");\n    console.log(\"While your application will continue to function, we highly recommended\");\n    console.log(\"signing up for your own API keys to improve performance, increase your\");\n    console.log(\"request rate/limit and enable other perks, such as metrics and advanced APIs.\");\n    console.log(\"\");\n    console.log(\"For more details: https:/\\/docs.ethers.io/api-keys/\");\n    console.log(\"==========================\");\n}\n\n", "\"use strict\";\n\nimport {\n    Block, BlockTag, BlockWithTransactions, EventType, Filter, FilterByBlockHash, ForkEvent,\n    Listener, Log, Provider, TransactionReceipt, TransactionRequest, TransactionResponse\n} from \"@ethersproject/abstract-provider\";\nimport { encode as base64Encode } from \"@ethersproject/base64\";\nimport { Base58 } from \"@ethersproject/basex\";\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { arrayify, BytesLike, concat, hexConcat, hexDataLength, hexDataSlice, hexlify, hexValue, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { HashZero } from \"@ethersproject/constants\";\nimport { dnsEncode, namehash } from \"@ethersproject/hash\";\nimport { getNetwork, Network, Networkish } from \"@ethersproject/networks\";\nimport { Deferrable, defineReadOnly, getStatic, resolveProperties } from \"@ethersproject/properties\";\nimport { Transaction } from \"@ethersproject/transactions\";\nimport { sha256 } from \"@ethersproject/sha2\";\nimport { toUtf8Bytes, toUtf8String } from \"@ethersproject/strings\";\nimport { fetchJson, poll } from \"@ethersproject/web\";\n\nimport bech32 from \"bech32\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { Formatter } from \"./formatter\";\n\nconst MAX_CCIP_REDIRECTS = 10;\n\n//////////////////////////////\n// Event Serializeing\n\nfunction checkTopic(topic: string): string {\n     if (topic == null) { return \"null\"; }\n     if (hexDataLength(topic) !== 32) {\n         logger.throwArgumentError(\"invalid topic\", \"topic\", topic);\n     }\n     return topic.toLowerCase();\n}\n\nfunction serializeTopics(topics: Array<string | Array<string>>): string {\n    // Remove trailing null AND-topics; they are redundant\n    topics = topics.slice();\n    while (topics.length > 0 && topics[topics.length - 1] == null) { topics.pop(); }\n\n    return topics.map((topic) => {\n        if (Array.isArray(topic)) {\n\n            // Only track unique OR-topics\n            const unique: { [ topic: string ]: boolean } = { }\n            topic.forEach((topic) => {\n                unique[checkTopic(topic)] = true;\n            });\n\n            // The order of OR-topics does not matter\n            const sorted = Object.keys(unique);\n            sorted.sort();\n\n            return sorted.join(\"|\");\n\n        } else {\n            return checkTopic(topic);\n        }\n    }).join(\"&\");\n}\n\nfunction deserializeTopics(data: string): Array<string | Array<string>> {\n    if (data === \"\") { return [ ]; }\n\n    return data.split(/&/g).map((topic) => {\n        if (topic === \"\") { return [ ]; }\n\n        const comps = topic.split(\"|\").map((topic) => {\n            return ((topic === \"null\") ? null: topic);\n        });\n\n        return ((comps.length === 1) ? comps[0]: comps);\n    });\n}\n\nfunction getEventTag(eventName: EventType): string {\n    if (typeof(eventName) === \"string\") {\n        eventName = eventName.toLowerCase();\n\n        if (hexDataLength(eventName) === 32) {\n            return \"tx:\" + eventName;\n        }\n\n        if (eventName.indexOf(\":\") === -1) {\n            return eventName;\n        }\n\n    } else if (Array.isArray(eventName)) {\n        return \"filter:*:\" + serializeTopics(eventName);\n\n    } else if (ForkEvent.isForkEvent(eventName)) {\n        logger.warn(\"not implemented\");\n        throw new Error(\"not implemented\");\n\n    } else if (eventName && typeof(eventName) === \"object\") {\n        return \"filter:\" + (eventName.address || \"*\") + \":\" + serializeTopics(eventName.topics || []);\n    }\n\n    throw new Error(\"invalid event - \" + eventName);\n}\n\n//////////////////////////////\n// Helper Object\n\nfunction getTime() {\n    return (new Date()).getTime();\n}\n\nfunction stall(duration: number): Promise<void> {\n    return new Promise((resolve) => {\n        setTimeout(resolve, duration);\n    });\n}\n\n//////////////////////////////\n// Provider Object\n\n\n/**\n *  EventType\n *   - \"block\"\n *   - \"poll\"\n *   - \"didPoll\"\n *   - \"pending\"\n *   - \"error\"\n *   - \"network\"\n *   - filter\n *   - topics array\n *   - transaction hash\n */\n\nconst PollableEvents = [ \"block\", \"network\", \"pending\", \"poll\" ];\n\nexport class Event {\n    readonly listener: Listener;\n    readonly once: boolean;\n    readonly tag: string;\n\n    _lastBlockNumber: number\n    _inflight: boolean;\n\n    constructor(tag: string, listener: Listener, once: boolean) {\n        defineReadOnly(this, \"tag\", tag);\n        defineReadOnly(this, \"listener\", listener);\n        defineReadOnly(this, \"once\", once);\n\n        this._lastBlockNumber = -2;\n        this._inflight = false;\n    }\n\n    get event(): EventType {\n        switch (this.type) {\n            case \"tx\":\n               return this.hash;\n            case \"filter\":\n               return this.filter;\n        }\n        return this.tag;\n    }\n\n    get type(): string {\n        return this.tag.split(\":\")[0]\n    }\n\n    get hash(): string {\n        const comps = this.tag.split(\":\");\n        if (comps[0] !== \"tx\") { return null; }\n        return comps[1];\n    }\n\n    get filter(): Filter {\n        const comps = this.tag.split(\":\");\n        if (comps[0] !== \"filter\") { return null; }\n        const address = comps[1];\n\n        const topics = deserializeTopics(comps[2]);\n        const filter: Filter = { };\n\n        if (topics.length > 0) { filter.topics = topics; }\n        if (address && address !== \"*\") { filter.address = address; }\n\n        return filter;\n    }\n\n    pollable(): boolean {\n        return (this.tag.indexOf(\":\") >= 0 || PollableEvents.indexOf(this.tag) >= 0);\n    }\n}\n\nexport interface EnsResolver {\n\n    // Name this Resolver is associated with\n    readonly name: string;\n\n    // The address of the resolver\n    readonly address: string;\n\n    // Multichain address resolution (also normal address resolution)\n    // See: https://eips.ethereum.org/EIPS/eip-2304\n    getAddress(coinType?: 60): Promise<null | string>\n\n    // Contenthash field\n    // See: https://eips.ethereum.org/EIPS/eip-1577\n    getContentHash(): Promise<null | string>;\n\n    // Storage of text records\n    // See: https://eips.ethereum.org/EIPS/eip-634\n    getText(key: string): Promise<null | string>;\n};\n\nexport interface EnsProvider {\n    resolveName(name: string): Promise<null | string>;\n    lookupAddress(address: string): Promise<null | string>;\n    getResolver(name: string): Promise<null | EnsResolver>;\n}\n\ntype CoinInfo = {\n    symbol: string,\n    ilk?: string,     // General family\n    prefix?: string,  // Bech32 prefix\n    p2pkh?: number,   // Pay-to-Public-Key-Hash Version\n    p2sh?: number,    // Pay-to-Script-Hash Version\n};\n\n// https://github.com/satoshilabs/slips/blob/master/slip-0044.md\nconst coinInfos: { [ coinType: string ]: CoinInfo } = {\n    \"0\":   { symbol: \"btc\",  p2pkh: 0x00, p2sh: 0x05, prefix: \"bc\" },\n    \"2\":   { symbol: \"ltc\",  p2pkh: 0x30, p2sh: 0x32, prefix: \"ltc\" },\n    \"3\":   { symbol: \"doge\", p2pkh: 0x1e, p2sh: 0x16 },\n    \"60\":  { symbol: \"eth\",  ilk: \"eth\" },\n    \"61\":  { symbol: \"etc\",  ilk: \"eth\" },\n    \"700\": { symbol: \"xdai\", ilk: \"eth\" },\n};\n\nfunction bytes32ify(value: number): string {\n    return hexZeroPad(BigNumber.from(value).toHexString(), 32);\n}\n\n// Compute the Base58Check encoded data (checksum is first 4 bytes of sha256d)\nfunction base58Encode(data: Uint8Array): string {\n    return Base58.encode(concat([ data, hexDataSlice(sha256(sha256(data)), 0, 4) ]));\n}\n\nexport interface Avatar {\n    url: string;\n    linkage: Array<{ type: string, content: string }>;\n}\n\nconst matcherIpfs = new RegExp(\"^(ipfs):/\\/(.*)$\", \"i\");\nconst matchers = [\n    new RegExp(\"^(https):/\\/(.*)$\", \"i\"),\n    new RegExp(\"^(data):(.*)$\", \"i\"),\n    matcherIpfs,\n    new RegExp(\"^eip155:[0-9]+/(erc[0-9]+):(.*)$\", \"i\"),\n];\n\nfunction _parseString(result: string, start: number): null | string {\n    try {\n        return toUtf8String(_parseBytes(result, start));\n    } catch(error) { }\n    return null;\n}\n\nfunction _parseBytes(result: string, start: number): null | string {\n    if (result === \"0x\") { return null; }\n\n    const offset = BigNumber.from(hexDataSlice(result, start, start + 32)).toNumber();\n    const length = BigNumber.from(hexDataSlice(result, offset, offset + 32)).toNumber();\n\n    return hexDataSlice(result, offset + 32, offset + 32 + length);\n}\n\n// Trim off the ipfs:// prefix and return the default gateway URL\nfunction getIpfsLink(link: string): string {\n    if (link.match(/^ipfs:\\/\\/ipfs\\//i)) {\n        link = link.substring(12);\n    } else if (link.match(/^ipfs:\\/\\//i)) {\n        link = link.substring(7);\n    } else {\n        logger.throwArgumentError(\"unsupported IPFS format\", \"link\", link);\n    }\n\n    return `https:/\\/gateway.ipfs.io/ipfs/${ link }`;\n}\n\nfunction numPad(value: number): Uint8Array {\n    const result = arrayify(value);\n    if (result.length > 32) { throw new Error(\"internal; should not happen\"); }\n\n    const padded = new Uint8Array(32);\n    padded.set(result, 32 - result.length);\n    return padded;\n}\n\nfunction bytesPad(value: Uint8Array): Uint8Array {\n    if ((value.length % 32) === 0) { return value; }\n\n    const result = new Uint8Array(Math.ceil(value.length / 32) * 32);\n    result.set(value);\n    return result;\n}\n\n// ABI Encodes a series of (bytes, bytes, ...)\nfunction encodeBytes(datas: Array<BytesLike>) {\n    const result: Array<Uint8Array> = [ ];\n\n    let byteCount = 0;\n\n    // Add place-holders for pointers as we add items\n    for (let i = 0; i < datas.length; i++) {\n        result.push(null);\n        byteCount += 32;\n    }\n\n    for (let i = 0; i < datas.length; i++) {\n        const data = arrayify(datas[i]);\n\n        // Update the bytes offset\n        result[i] = numPad(byteCount);\n\n        // The length and padded value of data\n        result.push(numPad(data.length));\n        result.push(bytesPad(data));\n        byteCount += 32 + Math.ceil(data.length / 32) * 32;\n    }\n\n    return hexConcat(result);\n}\n\nexport class Resolver implements EnsResolver {\n    readonly provider: BaseProvider;\n\n    readonly name: string;\n    readonly address: string;\n\n    readonly _resolvedAddress: null | string;\n\n    // For EIP-2544 names, the ancestor that provided the resolver\n    _supportsEip2544: null | Promise<boolean>;\n\n    // The resolvedAddress is only for creating a ReverseLookup resolver\n    constructor(provider: BaseProvider, address: string, name: string, resolvedAddress?: string) {\n        defineReadOnly(this, \"provider\", provider);\n        defineReadOnly(this, \"name\", name);\n        defineReadOnly(this, \"address\", provider.formatter.address(address));\n        defineReadOnly(this, \"_resolvedAddress\", resolvedAddress);\n    }\n\n    supportsWildcard(): Promise<boolean> {\n        if (!this._supportsEip2544) {\n            // supportsInterface(bytes4 = selector(\"resolve(bytes,bytes)\"))\n            this._supportsEip2544 = this.provider.call({\n                to: this.address,\n                data: \"0x01ffc9a79061b92300000000000000000000000000000000000000000000000000000000\"\n            }).then((result) => {\n                return BigNumber.from(result).eq(1);\n            }).catch((error) => {\n                if (error.code === Logger.errors.CALL_EXCEPTION) { return false; }\n                // Rethrow the error: link is down, etc. Let future attempts retry.\n                this._supportsEip2544 = null;\n                throw error;\n            });\n        }\n\n        return this._supportsEip2544;\n    }\n\n    async _fetch(selector: string, parameters?: string): Promise<null | string> {\n\n        // e.g. keccak256(\"addr(bytes32,uint256)\")\n        const tx = {\n            to: this.address,\n            ccipReadEnabled: true,\n            data: hexConcat([ selector, namehash(this.name), (parameters || \"0x\") ])\n        };\n\n        // Wildcard support; use EIP-2544 to resolve the request\n        let parseBytes = false;\n        if (await this.supportsWildcard()) {\n            parseBytes = true;\n\n            // selector(\"resolve(bytes,bytes)\")\n            tx.data = hexConcat([ \"0x9061b923\", encodeBytes([ dnsEncode(this.name), tx.data ]) ]);\n        }\n\n        try {\n            let result = await this.provider.call(tx);\n            if ((arrayify(result).length % 32) === 4) {\n                logger.throwError(\"resolver threw error\", Logger.errors.CALL_EXCEPTION, {\n                    transaction: tx, data: result\n                });\n            }\n            if (parseBytes) { result = _parseBytes(result, 0); }\n            return result;\n        } catch (error) {\n            if (error.code === Logger.errors.CALL_EXCEPTION) { return null; }\n            throw error;\n        }\n    }\n\n    async _fetchBytes(selector: string, parameters?: string): Promise<null | string> {\n        const result = await this._fetch(selector, parameters);\n        if (result != null) { return _parseBytes(result, 0); }\n        return null;\n    }\n\n    _getAddress(coinType: number, hexBytes: string): string {\n        const coinInfo = coinInfos[String(coinType)];\n\n        if (coinInfo == null) {\n            logger.throwError(`unsupported coin type: ${ coinType }`, Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: `getAddress(${ coinType })`\n            });\n        }\n\n        if (coinInfo.ilk === \"eth\") {\n            return this.provider.formatter.address(hexBytes);\n        }\n\n        const bytes = arrayify(hexBytes);\n\n        // P2PKH: OP_DUP OP_HASH160 <pubKeyHash> OP_EQUALVERIFY OP_CHECKSIG\n        if (coinInfo.p2pkh != null) {\n            const p2pkh = hexBytes.match(/^0x76a9([0-9a-f][0-9a-f])([0-9a-f]*)88ac$/);\n            if (p2pkh) {\n                const length = parseInt(p2pkh[1], 16);\n                if (p2pkh[2].length === length * 2 && length >= 1 && length <= 75) {\n                    return base58Encode(concat([ [ coinInfo.p2pkh ], (\"0x\" + p2pkh[2]) ]));\n                }\n            }\n        }\n\n        // P2SH: OP_HASH160 <scriptHash> OP_EQUAL\n        if (coinInfo.p2sh != null) {\n            const p2sh = hexBytes.match(/^0xa9([0-9a-f][0-9a-f])([0-9a-f]*)87$/);\n            if (p2sh) {\n                const length = parseInt(p2sh[1], 16);\n                if (p2sh[2].length === length * 2 && length >= 1 && length <= 75) {\n                    return base58Encode(concat([ [ coinInfo.p2sh ], (\"0x\" + p2sh[2]) ]));\n                }\n            }\n        }\n\n        // Bech32\n        if (coinInfo.prefix != null) {\n            const length = bytes[1];\n\n            // https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki#witness-program\n            let version = bytes[0];\n            if (version === 0x00) {\n                if (length !== 20 && length !== 32) {\n                    version = -1;\n                }\n            } else {\n                version = -1;\n            }\n\n            if (version >= 0 && bytes.length === 2 + length && length >= 1 && length <= 75) {\n                const words = bech32.toWords(bytes.slice(2));\n                words.unshift(version);\n                return bech32.encode(coinInfo.prefix, words);\n            }\n        }\n\n        return null;\n    }\n\n\n    async getAddress(coinType?: number): Promise<string> {\n        if (coinType == null) { coinType = 60; }\n\n        // If Ethereum, use the standard `addr(bytes32)`\n        if (coinType === 60) {\n            try {\n                // keccak256(\"addr(bytes32)\")\n                const result = await this._fetch(\"0x3b3b57de\");\n\n                // No address\n                if (result === \"0x\" || result === HashZero) { return null; }\n\n                return this.provider.formatter.callAddress(result);\n            } catch (error) {\n                if (error.code === Logger.errors.CALL_EXCEPTION) { return null; }\n                throw error;\n            }\n        }\n\n        // keccak256(\"addr(bytes32,uint256\")\n        const hexBytes = await this._fetchBytes(\"0xf1cb7e06\", bytes32ify(coinType));\n\n        // No address\n        if (hexBytes == null || hexBytes === \"0x\") { return null; }\n\n        // Compute the address\n        const address = this._getAddress(coinType, hexBytes);\n\n        if (address == null) {\n            logger.throwError(`invalid or unsupported coin data`, Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: `getAddress(${ coinType })`,\n                coinType: coinType,\n                data: hexBytes\n            });\n        }\n\n        return address;\n    }\n\n    async getAvatar(): Promise<null | Avatar> {\n        const linkage: Array<{ type: string, content: string }> = [ { type: \"name\", content: this.name } ];\n        try {\n            // test data for ricmoo.eth\n            //const avatar = \"eip155:1/erc721:0x265385c7f4132228A0d54EB1A9e7460b91c0cC68/29233\";\n            const avatar = await this.getText(\"avatar\");\n            if (avatar == null) { return null; }\n\n            for (let i = 0; i < matchers.length; i++) {\n                const match = avatar.match(matchers[i]);\n                if (match == null) { continue; }\n\n                const scheme = match[1].toLowerCase();\n\n                switch (scheme) {\n                    case \"https\":\n                        linkage.push({ type: \"url\", content: avatar });\n                        return { linkage, url: avatar };\n\n                    case \"data\":\n                        linkage.push({ type: \"data\", content: avatar });\n                        return { linkage, url: avatar };\n\n                    case \"ipfs\":\n                        linkage.push({ type: \"ipfs\", content: avatar });\n                        return { linkage, url: getIpfsLink(avatar) };\n\n                    case \"erc721\":\n                    case \"erc1155\": {\n                        // Depending on the ERC type, use tokenURI(uint256) or url(uint256)\n                        const selector = (scheme === \"erc721\") ? \"0xc87b56dd\": \"0x0e89341c\";\n                        linkage.push({ type: scheme, content: avatar });\n\n                        // The owner of this name\n                        const owner = (this._resolvedAddress || await this.getAddress());\n\n                        const comps = (match[2] || \"\").split(\"/\");\n                        if (comps.length !== 2) { return null; }\n\n                        const addr = await this.provider.formatter.address(comps[0]);\n                        const tokenId = hexZeroPad(BigNumber.from(comps[1]).toHexString(), 32);\n\n                        // Check that this account owns the token\n                        if (scheme === \"erc721\") {\n                            // ownerOf(uint256 tokenId)\n                            const tokenOwner = this.provider.formatter.callAddress(await this.provider.call({\n                                to: addr, data: hexConcat([ \"0x6352211e\", tokenId ])\n                            }));\n                            if (owner !== tokenOwner) { return null; }\n                            linkage.push({ type: \"owner\", content: tokenOwner });\n\n                        } else if (scheme === \"erc1155\") {\n                            // balanceOf(address owner, uint256 tokenId)\n                            const balance = BigNumber.from(await this.provider.call({\n                                to: addr, data: hexConcat([ \"0x00fdd58e\", hexZeroPad(owner, 32), tokenId ])\n                            }));\n                            if (balance.isZero()) { return null; }\n                            linkage.push({ type: \"balance\", content: balance.toString() });\n                        }\n\n                        // Call the token contract for the metadata URL\n                        const tx = {\n                            to: this.provider.formatter.address(comps[0]),\n                            data: hexConcat([ selector, tokenId ])\n                        };\n\n                        let metadataUrl = _parseString(await this.provider.call(tx), 0);\n                        if (metadataUrl == null) { return null; }\n                        linkage.push({ type: \"metadata-url-base\", content: metadataUrl });\n\n                        // ERC-1155 allows a generic {id} in the URL\n                        if (scheme === \"erc1155\") {\n                            metadataUrl = metadataUrl.replace(\"{id}\", tokenId.substring(2));\n                            linkage.push({ type: \"metadata-url-expanded\", content: metadataUrl });\n                        }\n\n                        // Transform IPFS metadata links\n                        if (metadataUrl.match(/^ipfs:/i)) {\n                            metadataUrl = getIpfsLink(metadataUrl);\n                        }\n\n                        linkage.push({ type: \"metadata-url\", content: metadataUrl });\n\n                        // Get the token metadata\n                        const metadata = await fetchJson(metadataUrl);\n                        if (!metadata) { return null; }\n                        linkage.push({ type: \"metadata\", content: JSON.stringify(metadata) });\n\n                        // Pull the image URL out\n                        let imageUrl = metadata.image;\n                        if (typeof(imageUrl) !== \"string\") { return null; }\n\n                        if (imageUrl.match(/^(https:\\/\\/|data:)/i)) {\n                            // Allow\n                        } else {\n                            // Transform IPFS link to gateway\n                            const ipfs = imageUrl.match(matcherIpfs);\n                            if (ipfs == null) { return null; }\n\n                            linkage.push({ type: \"url-ipfs\", content: imageUrl });\n                            imageUrl = getIpfsLink(imageUrl);\n                        }\n\n                        linkage.push({ type: \"url\", content: imageUrl });\n\n                        return { linkage, url: imageUrl };\n                    }\n                }\n            }\n        } catch (error) { }\n\n        return null;\n    }\n\n    async getContentHash(): Promise<string> {\n\n        // keccak256(\"contenthash()\")\n        const hexBytes = await this._fetchBytes(\"0xbc1c58d1\");\n\n        // No contenthash\n        if (hexBytes == null || hexBytes === \"0x\") { return null; }\n\n        // IPFS (CID: 1, Type: DAG-PB)\n        const ipfs = hexBytes.match(/^0xe3010170(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);\n        if (ipfs) {\n            const length = parseInt(ipfs[3], 16);\n            if (ipfs[4].length === length * 2) {\n                return \"ipfs:/\\/\" + Base58.encode(\"0x\" + ipfs[1]);\n            }\n        }\n\n        // IPNS (CID: 1, Type: libp2p-key)\n        const ipns = hexBytes.match(/^0xe5010172(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);\n        if (ipns) {\n            const length = parseInt(ipns[3], 16);\n            if (ipns[4].length === length * 2) {\n                return \"ipns:/\\/\" + Base58.encode(\"0x\" + ipns[1]);\n            }\n        }\n\n        // Swarm (CID: 1, Type: swarm-manifest; hash/length hard-coded to keccak256/32)\n        const swarm = hexBytes.match(/^0xe40101fa011b20([0-9a-f]*)$/)\n        if (swarm) {\n            if (swarm[1].length === (32 * 2)) {\n                return \"bzz:/\\/\" + swarm[1]\n            }\n        }\n\n        const skynet = hexBytes.match(/^0x90b2c605([0-9a-f]*)$/);\n        if (skynet) {\n            if (skynet[1].length === (34 * 2)) {\n                // URL Safe base64; https://datatracker.ietf.org/doc/html/rfc4648#section-5\n                const urlSafe: Record<string, string> = { \"=\": \"\", \"+\": \"-\", \"/\": \"_\" };\n                const hash = base64Encode(\"0x\" + skynet[1]).replace(/[=+\\/]/g, (a) => (urlSafe[a]));\n                return \"sia:/\\/\" + hash;\n            }\n        }\n\n        return logger.throwError(`invalid or unsupported content hash data`, Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"getContentHash()\",\n            data: hexBytes\n        });\n    }\n\n    async getText(key: string): Promise<string> {\n\n        // The key encoded as parameter to fetchBytes\n        let keyBytes = toUtf8Bytes(key);\n\n        // The nodehash consumes the first slot, so the string pointer targets\n        // offset 64, with the length at offset 64 and data starting at offset 96\n        keyBytes = concat([ bytes32ify(64), bytes32ify(keyBytes.length), keyBytes ]);\n\n        // Pad to word-size (32 bytes)\n        if ((keyBytes.length % 32) !== 0) {\n            keyBytes = concat([ keyBytes, hexZeroPad(\"0x\", 32 - (key.length % 32)) ])\n        }\n\n        const hexBytes = await this._fetchBytes(\"0x59d1d43c\", hexlify(keyBytes));\n        if (hexBytes == null || hexBytes === \"0x\") { return null; }\n\n        return toUtf8String(hexBytes);\n    }\n}\n\nlet defaultFormatter: Formatter = null;\n\nlet nextPollId = 1;\n\nexport class BaseProvider extends Provider implements EnsProvider {\n    _networkPromise: Promise<Network>;\n    _network: Network;\n\n    _events: Array<Event>;\n\n    formatter: Formatter;\n\n    // To help mitigate the eventually consistent nature of the blockchain\n    // we keep a mapping of events we emit. If we emit an event X, we expect\n    // that a user should be able to query for that event in the callback,\n    // if the node returns null, we stall the response until we get back a\n    // meaningful value, since we may be hitting a re-org, or a node that\n    // has not indexed the event yet.\n    // Events:\n    //   - t:{hash}    - Transaction hash\n    //   - b:{hash}    - BlockHash\n    //   - block       - The most recent emitted block\n    _emitted: { [ eventName: string ]: number | \"pending\" };\n\n    _pollingInterval: number;\n    _poller: NodeJS.Timer;\n    _bootstrapPoll: NodeJS.Timer;\n\n    _lastBlockNumber: number;\n    _maxFilterBlockRange: number;\n\n    _fastBlockNumber: number;\n    _fastBlockNumberPromise: Promise<number>;\n    _fastQueryDate: number;\n\n    _maxInternalBlockNumber: number;\n    _internalBlockNumber: Promise<{ blockNumber: number, reqTime: number, respTime: number }>;\n\n    readonly anyNetwork: boolean;\n\n    disableCcipRead: boolean;\n\n\n    /**\n     *  ready\n     *\n     *  A Promise<Network> that resolves only once the provider is ready.\n     *\n     *  Sub-classes that call the super with a network without a chainId\n     *  MUST set this. Standard named networks have a known chainId.\n     *\n     */\n\n    constructor(network: Networkish | Promise<Network>) {\n        super();\n\n        // Events being listened to\n        this._events = [];\n\n        this._emitted = { block: -2 };\n\n        this.disableCcipRead = false;\n\n        this.formatter = new.target.getFormatter();\n\n        // If network is any, this Provider allows the underlying\n        // network to change dynamically, and we auto-detect the\n        // current network\n        defineReadOnly(this, \"anyNetwork\", (network === \"any\"));\n        if (this.anyNetwork) { network = this.detectNetwork(); }\n\n        if (network instanceof Promise) {\n            this._networkPromise = network;\n\n            // Squash any \"unhandled promise\" errors; that do not need to be handled\n            network.catch((error) => { });\n\n            // Trigger initial network setting (async)\n            this._ready().catch((error) => { });\n\n        } else {\n            const knownNetwork = getStatic<(network: Networkish) => Network>(new.target, \"getNetwork\")(network);\n            if (knownNetwork) {\n                defineReadOnly(this, \"_network\", knownNetwork);\n                this.emit(\"network\", knownNetwork, null);\n\n            } else {\n                logger.throwArgumentError(\"invalid network\", \"network\", network);\n            }\n        }\n\n        this._maxInternalBlockNumber = -1024;\n\n        this._lastBlockNumber = -2;\n        this._maxFilterBlockRange = 10;\n\n        this._pollingInterval = 4000;\n\n        this._fastQueryDate = 0;\n    }\n\n    async _ready(): Promise<Network> {\n        if (this._network == null) {\n            let network: Network = null;\n            if (this._networkPromise) {\n                try {\n                    network = await this._networkPromise;\n                } catch (error) { }\n            }\n\n            // Try the Provider's network detection (this MUST throw if it cannot)\n            if (network == null) {\n                network = await this.detectNetwork();\n            }\n\n            // This should never happen; every Provider sub-class should have\n            // suggested a network by here (or have thrown).\n            if (!network) {\n                logger.throwError(\"no network detected\", Logger.errors.UNKNOWN_ERROR, { });\n            }\n\n            // Possible this call stacked so do not call defineReadOnly again\n            if (this._network == null) {\n                if (this.anyNetwork) {\n                    this._network = network;\n                } else {\n                    defineReadOnly(this, \"_network\", network);\n                }\n                this.emit(\"network\", network, null);\n            }\n        }\n\n        return this._network;\n    }\n\n    // This will always return the most recently established network.\n    // For \"any\", this can change (a \"network\" event is emitted before\n    // any change is reflected); otherwise this cannot change\n    get ready(): Promise<Network> {\n        return poll(() => {\n            return this._ready().then((network) => {\n                return network;\n            }, (error) => {\n                // If the network isn't running yet, we will wait\n                if (error.code === Logger.errors.NETWORK_ERROR && error.event === \"noNetwork\") {\n                    return undefined;\n                }\n                throw error;\n            });\n        });\n    }\n\n    // @TODO: Remove this and just create a singleton formatter\n    static getFormatter(): Formatter {\n        if (defaultFormatter == null) {\n            defaultFormatter = new Formatter();\n        }\n        return defaultFormatter;\n    }\n\n    // @TODO: Remove this and just use getNetwork\n    static getNetwork(network: Networkish): Network {\n        return getNetwork((network == null) ? \"homestead\": network);\n    }\n\n    async ccipReadFetch(tx: Transaction, calldata: string, urls: Array<string>): Promise<null | string> {\n        if (this.disableCcipRead || urls.length === 0) { return null; }\n\n        const sender = tx.to.toLowerCase();\n        const data = calldata.toLowerCase();\n\n        const errorMessages: Array<string> = [ ];\n\n        for (let i = 0; i < urls.length; i++) {\n            const url = urls[i];\n\n            // URL expansion\n            const href = url.replace(\"{sender}\", sender).replace(\"{data}\", data);\n\n            // If no {data} is present, use POST; otherwise GET\n            const json: string | null = (url.indexOf(\"{data}\") >= 0) ? null: JSON.stringify({ data, sender });\n\n            const result = await fetchJson({ url: href, errorPassThrough: true }, json, (value, response) => {\n                value.status = response.statusCode;\n                return value;\n            });\n\n            if (result.data) { return result.data; }\n\n            const errorMessage = (result.message || \"unknown error\");\n\n            // 4xx indicates the result is not present; stop\n            if (result.status >= 400 && result.status < 500) {\n                return logger.throwError(`response not found during CCIP fetch: ${ errorMessage }`, Logger.errors.SERVER_ERROR, { url, errorMessage });\n            }\n\n            // 5xx indicates server issue; try the next url\n            errorMessages.push(errorMessage);\n        }\n\n        return logger.throwError(`error encountered during CCIP fetch: ${ errorMessages.map((m) => JSON.stringify(m)).join(\", \") }`, Logger.errors.SERVER_ERROR, {\n            urls, errorMessages\n        });\n    }\n\n    // Fetches the blockNumber, but will reuse any result that is less\n    // than maxAge old or has been requested since the last request\n    async _getInternalBlockNumber(maxAge: number): Promise<number> {\n        await this._ready();\n\n        // Allowing stale data up to maxAge old\n        if (maxAge > 0) {\n\n            // While there are pending internal block requests...\n            while (this._internalBlockNumber) {\n\n                // ...\"remember\" which fetch we started with\n                const internalBlockNumber = this._internalBlockNumber;\n\n                try {\n                    // Check the result is not too stale\n                    const result = await internalBlockNumber;\n                    if ((getTime() - result.respTime) <= maxAge) {\n                        return result.blockNumber;\n                    }\n\n                    // Too old; fetch a new value\n                    break;\n\n                } catch(error) {\n\n                    // The fetch rejected; if we are the first to get the\n                    // rejection, drop through so we replace it with a new\n                    // fetch; all others blocked will then get that fetch\n                    // which won't match the one they \"remembered\" and loop\n                    if (this._internalBlockNumber === internalBlockNumber) {\n                        break;\n                    }\n                }\n            }\n        }\n\n        const reqTime = getTime();\n\n        const checkInternalBlockNumber = resolveProperties({\n            blockNumber: this.perform(\"getBlockNumber\", { }),\n            networkError: this.getNetwork().then((network) => (null), (error) => (error))\n        }).then(({ blockNumber, networkError }) => {\n            if (networkError) {\n                // Unremember this bad internal block number\n                if (this._internalBlockNumber === checkInternalBlockNumber) {\n                    this._internalBlockNumber = null;\n                }\n                throw networkError;\n            }\n\n            const respTime = getTime();\n\n            blockNumber = BigNumber.from(blockNumber).toNumber();\n            if (blockNumber < this._maxInternalBlockNumber) { blockNumber = this._maxInternalBlockNumber; }\n\n            this._maxInternalBlockNumber = blockNumber;\n            this._setFastBlockNumber(blockNumber); // @TODO: Still need this?\n            return { blockNumber, reqTime, respTime };\n        });\n\n        this._internalBlockNumber = checkInternalBlockNumber;\n\n        // Swallow unhandled exceptions; if needed they are handled else where\n        checkInternalBlockNumber.catch((error) => {\n            // Don't null the dead (rejected) fetch, if it has already been updated\n            if (this._internalBlockNumber === checkInternalBlockNumber) {\n                this._internalBlockNumber = null;\n            }\n        });\n\n        return (await checkInternalBlockNumber).blockNumber;\n    }\n\n    async poll(): Promise<void> {\n        const pollId = nextPollId++;\n\n        // Track all running promises, so we can trigger a post-poll once they are complete\n        const runners: Array<Promise<void>> = [];\n\n        let blockNumber: number = null;\n        try {\n            blockNumber = await this._getInternalBlockNumber(100 + this.pollingInterval / 2);\n        } catch (error) {\n            this.emit(\"error\", error);\n            return;\n        }\n        this._setFastBlockNumber(blockNumber);\n\n        // Emit a poll event after we have the latest (fast) block number\n        this.emit(\"poll\", pollId, blockNumber);\n\n        // If the block has not changed, meh.\n        if (blockNumber === this._lastBlockNumber) {\n            this.emit(\"didPoll\", pollId);\n            return;\n        }\n\n        // First polling cycle, trigger a \"block\" events\n        if (this._emitted.block === -2) {\n            this._emitted.block = blockNumber - 1;\n        }\n\n        if (Math.abs((<number>(this._emitted.block)) - blockNumber) > 1000) {\n            logger.warn(`network block skew detected; skipping block events (emitted=${ this._emitted.block } blockNumber${ blockNumber })`);\n            this.emit(\"error\", logger.makeError(\"network block skew detected\", Logger.errors.NETWORK_ERROR, {\n                blockNumber: blockNumber,\n                event: \"blockSkew\",\n                previousBlockNumber: this._emitted.block\n            }));\n            this.emit(\"block\", blockNumber);\n\n        } else {\n            // Notify all listener for each block that has passed\n            for (let i = (<number>this._emitted.block) + 1; i <= blockNumber; i++) {\n                this.emit(\"block\", i);\n            }\n        }\n\n        // The emitted block was updated, check for obsolete events\n        if ((<number>this._emitted.block) !== blockNumber) {\n            this._emitted.block = blockNumber;\n\n            Object.keys(this._emitted).forEach((key) => {\n                // The block event does not expire\n                if (key === \"block\") { return; }\n\n                // The block we were at when we emitted this event\n                const eventBlockNumber = this._emitted[key];\n\n                // We cannot garbage collect pending transactions or blocks here\n                // They should be garbage collected by the Provider when setting\n                // \"pending\" events\n                if (eventBlockNumber === \"pending\") { return; }\n\n                // Evict any transaction hashes or block hashes over 12 blocks\n                // old, since they should not return null anyways\n                if (blockNumber - eventBlockNumber > 12) {\n                    delete this._emitted[key];\n                }\n            });\n        }\n\n        // First polling cycle\n        if (this._lastBlockNumber === -2) {\n            this._lastBlockNumber = blockNumber - 1;\n        }\n        // Find all transaction hashes we are waiting on\n        this._events.forEach((event) => {\n            switch (event.type) {\n                case \"tx\": {\n                    const hash = event.hash;\n                    let runner = this.getTransactionReceipt(hash).then((receipt) => {\n                        if (!receipt || receipt.blockNumber == null) { return null; }\n                        this._emitted[\"t:\" + hash] = receipt.blockNumber;\n                        this.emit(hash, receipt);\n                        return null;\n                    }).catch((error: Error) => { this.emit(\"error\", error); });\n\n                    runners.push(runner);\n\n                    break;\n                }\n\n                case \"filter\": {\n                    // We only allow a single getLogs to be in-flight at a time\n                    if (!event._inflight) {\n                        event._inflight = true;\n\n                        // This is the first filter for this event, so we want to\n                        // restrict events to events that happened no earlier than now\n                        if (event._lastBlockNumber === -2) {\n                            event._lastBlockNumber = blockNumber - 1;\n                        }\n\n                        // Filter from the last *known* event; due to load-balancing\n                        // and some nodes returning updated block numbers before\n                        // indexing events, a logs result with 0 entries cannot be\n                        // trusted and we must retry a range which includes it again\n                        const filter = event.filter;\n                        filter.fromBlock = event._lastBlockNumber + 1;\n                        filter.toBlock = blockNumber;\n\n                        // Prevent fitler ranges from growing too wild, since it is quite\n                        // likely there just haven't been any events to move the lastBlockNumber.\n                        const minFromBlock = filter.toBlock - this._maxFilterBlockRange;\n                        if (minFromBlock > filter.fromBlock) { filter.fromBlock = minFromBlock; }\n\n                        if (filter.fromBlock < 0) { filter.fromBlock = 0; }\n\n                        const runner = this.getLogs(filter).then((logs) => {\n                            // Allow the next getLogs\n                            event._inflight = false;\n\n                            if (logs.length === 0) { return; }\n\n                            logs.forEach((log: Log) => {\n                                // Only when we get an event for a given block number\n                                // can we trust the events are indexed\n                                if (log.blockNumber > event._lastBlockNumber) {\n                                    event._lastBlockNumber = log.blockNumber;\n                                }\n\n                                // Make sure we stall requests to fetch blocks and txs\n                                this._emitted[\"b:\" + log.blockHash] = log.blockNumber;\n                                this._emitted[\"t:\" + log.transactionHash] = log.blockNumber;\n\n                                this.emit(filter, log);\n                            });\n                        }).catch((error: Error) => {\n                            this.emit(\"error\", error);\n\n                            // Allow another getLogs (the range was not updated)\n                            event._inflight = false;\n                        });\n                        runners.push(runner);\n                    }\n\n                    break;\n                }\n            }\n        });\n\n        this._lastBlockNumber = blockNumber;\n\n        // Once all events for this loop have been processed, emit \"didPoll\"\n        Promise.all(runners).then(() => {\n            this.emit(\"didPoll\", pollId);\n        }).catch((error) => { this.emit(\"error\", error); });\n\n        return;\n    }\n\n    // Deprecated; do not use this\n    resetEventsBlock(blockNumber: number): void {\n        this._lastBlockNumber = blockNumber - 1;\n        if (this.polling) { this.poll(); }\n    }\n\n    get network(): Network {\n        return this._network;\n    }\n\n    // This method should query the network if the underlying network\n    // can change, such as when connected to a JSON-RPC backend\n    async detectNetwork(): Promise<Network> {\n        return logger.throwError(\"provider does not support network detection\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"provider.detectNetwork\"\n        });\n    }\n\n    async getNetwork(): Promise<Network> {\n        const network = await this._ready();\n\n        // Make sure we are still connected to the same network; this is\n        // only an external call for backends which can have the underlying\n        // network change spontaneously\n        const currentNetwork = await this.detectNetwork();\n        if (network.chainId !== currentNetwork.chainId) {\n\n            // We are allowing network changes, things can get complex fast;\n            // make sure you know what you are doing if you use \"any\"\n            if (this.anyNetwork) {\n                this._network = currentNetwork;\n\n                // Reset all internal block number guards and caches\n                this._lastBlockNumber = -2;\n                this._fastBlockNumber = null;\n                this._fastBlockNumberPromise = null;\n                this._fastQueryDate = 0;\n                this._emitted.block = -2;\n                this._maxInternalBlockNumber = -1024;\n                this._internalBlockNumber = null;\n\n                // The \"network\" event MUST happen before this method resolves\n                // so any events have a chance to unregister, so we stall an\n                // additional event loop before returning from /this/ call\n                this.emit(\"network\", currentNetwork, network);\n                await stall(0);\n\n                return this._network;\n            }\n\n            const error = logger.makeError(\"underlying network changed\", Logger.errors.NETWORK_ERROR, {\n                event: \"changed\",\n                network: network,\n                detectedNetwork: currentNetwork\n            });\n\n            this.emit(\"error\", error);\n            throw error;\n        }\n\n        return network;\n    }\n\n    get blockNumber(): number {\n        this._getInternalBlockNumber(100 + this.pollingInterval / 2).then((blockNumber) => {\n            this._setFastBlockNumber(blockNumber);\n        }, (error) => { });\n\n        return (this._fastBlockNumber != null) ? this._fastBlockNumber: -1;\n    }\n\n    get polling(): boolean {\n        return (this._poller != null);\n    }\n\n    set polling(value: boolean) {\n        if (value && !this._poller) {\n            this._poller = setInterval(() => { this.poll(); }, this.pollingInterval);\n\n            if (!this._bootstrapPoll) {\n                this._bootstrapPoll = setTimeout(() => {\n                    this.poll();\n\n                    // We block additional polls until the polling interval\n                    // is done, to prevent overwhelming the poll function\n                    this._bootstrapPoll = setTimeout(() => {\n                        // If polling was disabled, something may require a poke\n                        // since starting the bootstrap poll and it was disabled\n                        if (!this._poller) { this.poll(); }\n\n                        // Clear out the bootstrap so we can do another\n                        this._bootstrapPoll = null;\n                    }, this.pollingInterval);\n                }, 0);\n            }\n\n        } else if (!value && this._poller) {\n            clearInterval(this._poller);\n            this._poller = null;\n        }\n    }\n\n    get pollingInterval(): number {\n        return this._pollingInterval;\n    }\n\n    set pollingInterval(value: number) {\n        if (typeof(value) !== \"number\" || value <= 0 || parseInt(String(value)) != value) {\n            throw new Error(\"invalid polling interval\");\n        }\n\n        this._pollingInterval = value;\n\n        if (this._poller) {\n            clearInterval(this._poller);\n            this._poller = setInterval(() => { this.poll(); }, this._pollingInterval);\n        }\n    }\n\n    _getFastBlockNumber(): Promise<number> {\n        const now = getTime();\n\n        // Stale block number, request a newer value\n        if ((now - this._fastQueryDate) > 2 * this._pollingInterval) {\n            this._fastQueryDate = now;\n            this._fastBlockNumberPromise = this.getBlockNumber().then((blockNumber) => {\n                if (this._fastBlockNumber == null || blockNumber > this._fastBlockNumber) {\n                    this._fastBlockNumber = blockNumber;\n                }\n                return this._fastBlockNumber;\n            });\n        }\n\n        return this._fastBlockNumberPromise;\n    }\n\n    _setFastBlockNumber(blockNumber: number): void {\n        // Older block, maybe a stale request\n        if (this._fastBlockNumber != null && blockNumber < this._fastBlockNumber) { return; }\n\n        // Update the time we updated the blocknumber\n        this._fastQueryDate = getTime();\n\n        // Newer block number, use  it\n        if (this._fastBlockNumber == null || blockNumber > this._fastBlockNumber) {\n            this._fastBlockNumber = blockNumber;\n            this._fastBlockNumberPromise = Promise.resolve(blockNumber);\n        }\n    }\n\n    async waitForTransaction(transactionHash: string, confirmations?: number, timeout?: number): Promise<TransactionReceipt> {\n        return this._waitForTransaction(transactionHash, (confirmations == null) ? 1: confirmations, timeout || 0, null);\n    }\n\n    async _waitForTransaction(transactionHash: string, confirmations: number, timeout: number, replaceable: { data: string, from: string, nonce: number, to: string, value: BigNumber, startBlock: number }): Promise<TransactionReceipt> {\n        const receipt = await this.getTransactionReceipt(transactionHash);\n\n        // Receipt is already good\n        if ((receipt ? receipt.confirmations: 0) >= confirmations) { return receipt; }\n\n        // Poll until the receipt is good...\n        return new Promise((resolve, reject) => {\n            const cancelFuncs: Array<() => void> = [];\n\n            let done = false;\n            const alreadyDone = function() {\n                if (done) { return true; }\n                done = true;\n                cancelFuncs.forEach((func) => { func(); });\n                return false;\n            };\n\n            const minedHandler = (receipt: TransactionReceipt) => {\n                if (receipt.confirmations < confirmations) { return; }\n                if (alreadyDone()) { return; }\n                resolve(receipt);\n            }\n            this.on(transactionHash, minedHandler);\n            cancelFuncs.push(() => { this.removeListener(transactionHash, minedHandler); });\n\n            if (replaceable) {\n                let lastBlockNumber = replaceable.startBlock;\n                let scannedBlock: number = null;\n                const replaceHandler = async (blockNumber: number) => {\n                    if (done) { return; }\n\n                    // Wait 1 second; this is only used in the case of a fault, so\n                    // we will trade off a little bit of latency for more consistent\n                    // results and fewer JSON-RPC calls\n                    await stall(1000);\n\n                    this.getTransactionCount(replaceable.from).then(async (nonce) => {\n                        if (done) { return; }\n\n                        if (nonce <= replaceable.nonce) {\n                            lastBlockNumber = blockNumber;\n\n                        } else {\n                            // First check if the transaction was mined\n                            {\n                                const mined = await this.getTransaction(transactionHash);\n                                if (mined && mined.blockNumber != null) { return; }\n                            }\n\n                            // First time scanning. We start a little earlier for some\n                            // wiggle room here to handle the eventually consistent nature\n                            // of blockchain (e.g. the getTransactionCount was for a\n                            // different block)\n                            if (scannedBlock == null) {\n                                scannedBlock = lastBlockNumber - 3;\n                                if (scannedBlock < replaceable.startBlock) {\n                                    scannedBlock = replaceable.startBlock;\n                                }\n                            }\n\n                            while (scannedBlock <= blockNumber) {\n                                if (done) { return; }\n\n                                const block = await this.getBlockWithTransactions(scannedBlock);\n                                for (let ti = 0; ti < block.transactions.length; ti++) {\n                                    const tx = block.transactions[ti];\n\n                                    // Successfully mined!\n                                    if (tx.hash === transactionHash) { return; }\n\n                                    // Matches our transaction from and nonce; its a replacement\n                                    if (tx.from === replaceable.from && tx.nonce === replaceable.nonce) {\n                                        if (done) { return; }\n\n                                        // Get the receipt of the replacement\n                                        const receipt = await this.waitForTransaction(tx.hash, confirmations);\n\n                                        // Already resolved or rejected (prolly a timeout)\n                                        if (alreadyDone()) { return; }\n\n                                        // The reason we were replaced\n                                        let reason = \"replaced\";\n                                        if (tx.data === replaceable.data && tx.to === replaceable.to && tx.value.eq(replaceable.value)) {\n                                            reason = \"repriced\";\n                                        } else  if (tx.data === \"0x\" && tx.from === tx.to && tx.value.isZero()) {\n                                            reason = \"cancelled\"\n                                        }\n\n                                        // Explain why we were replaced\n                                        reject(logger.makeError(\"transaction was replaced\", Logger.errors.TRANSACTION_REPLACED, {\n                                            cancelled: (reason === \"replaced\" || reason === \"cancelled\"),\n                                            reason,\n                                            replacement: this._wrapTransaction(tx),\n                                            hash: transactionHash,\n                                            receipt\n                                        }));\n\n                                        return;\n                                    }\n                                }\n                                scannedBlock++;\n                            }\n                        }\n\n                        if (done) { return; }\n                        this.once(\"block\", replaceHandler);\n\n                    }, (error) => {\n                        if (done) { return; }\n                        this.once(\"block\", replaceHandler);\n                    });\n                };\n\n                if (done) { return; }\n                this.once(\"block\", replaceHandler);\n\n                cancelFuncs.push(() => {\n                    this.removeListener(\"block\", replaceHandler);\n                });\n            }\n\n            if (typeof(timeout) === \"number\" && timeout > 0) {\n                const timer = setTimeout(() => {\n                    if (alreadyDone()) { return; }\n                    reject(logger.makeError(\"timeout exceeded\", Logger.errors.TIMEOUT, { timeout: timeout }));\n                }, timeout);\n                if (timer.unref) { timer.unref(); }\n\n                cancelFuncs.push(() => { clearTimeout(timer); });\n            }\n        });\n    }\n\n    async getBlockNumber(): Promise<number> {\n        return this._getInternalBlockNumber(0);\n    }\n\n    async getGasPrice(): Promise<BigNumber> {\n        await this.getNetwork();\n\n        const result = await this.perform(\"getGasPrice\", { });\n        try {\n            return BigNumber.from(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"getGasPrice\",\n                result, error\n            });\n        }\n    }\n\n    async getBalance(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<BigNumber> {\n        await this.getNetwork();\n        const params = await resolveProperties({\n            address: this._getAddress(addressOrName),\n            blockTag: this._getBlockTag(blockTag)\n        });\n\n        const result = await this.perform(\"getBalance\", params);\n        try {\n            return BigNumber.from(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"getBalance\",\n                params, result, error\n            });\n        }\n    }\n\n    async getTransactionCount(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<number> {\n        await this.getNetwork();\n        const params = await resolveProperties({\n            address: this._getAddress(addressOrName),\n            blockTag: this._getBlockTag(blockTag)\n        });\n\n        const result = await this.perform(\"getTransactionCount\", params);\n        try {\n            return BigNumber.from(result).toNumber();\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"getTransactionCount\",\n                params, result, error\n            });\n        }\n    }\n\n    async getCode(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string> {\n        await this.getNetwork();\n        const params = await resolveProperties({\n            address: this._getAddress(addressOrName),\n            blockTag: this._getBlockTag(blockTag)\n        });\n\n        const result = await this.perform(\"getCode\", params);\n        try {\n            return hexlify(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"getCode\",\n                params, result, error\n            });\n        }\n    }\n\n    async getStorageAt(addressOrName: string | Promise<string>, position: BigNumberish | Promise<BigNumberish>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string> {\n        await this.getNetwork();\n        const params = await resolveProperties({\n            address: this._getAddress(addressOrName),\n            blockTag: this._getBlockTag(blockTag),\n            position: Promise.resolve(position).then((p) => hexValue(p))\n        });\n        const result = await this.perform(\"getStorageAt\", params);\n        try {\n            return hexlify(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"getStorageAt\",\n                params, result, error\n            });\n        }\n    }\n\n    // This should be called by any subclass wrapping a TransactionResponse\n    _wrapTransaction(tx: Transaction, hash?: string, startBlock?: number): TransactionResponse {\n        if (hash != null && hexDataLength(hash) !== 32) { throw new Error(\"invalid response - sendTransaction\"); }\n\n        const result = <TransactionResponse>tx;\n\n        // Check the hash we expect is the same as the hash the server reported\n        if (hash != null && tx.hash !== hash) {\n            logger.throwError(\"Transaction hash mismatch from Provider.sendTransaction.\", Logger.errors.UNKNOWN_ERROR, { expectedHash: tx.hash, returnedHash: hash });\n        }\n\n        result.wait = async (confirms?: number, timeout?: number) => {\n            if (confirms == null) { confirms = 1; }\n            if (timeout == null) { timeout = 0; }\n\n            // Get the details to detect replacement\n            let replacement = undefined;\n            if (confirms !== 0 && startBlock != null) {\n                replacement = {\n                    data: tx.data,\n                    from: tx.from,\n                    nonce: tx.nonce,\n                    to: tx.to,\n                    value: tx.value,\n                    startBlock\n                };\n            }\n\n            const receipt = await this._waitForTransaction(tx.hash, confirms, timeout, replacement);\n            if (receipt == null && confirms === 0) { return null; }\n\n            // No longer pending, allow the polling loop to garbage collect this\n            this._emitted[\"t:\" + tx.hash] = receipt.blockNumber;\n\n            if (receipt.status === 0) {\n                logger.throwError(\"transaction failed\", Logger.errors.CALL_EXCEPTION, {\n                    transactionHash: tx.hash,\n                    transaction: tx,\n                    receipt: receipt\n                });\n            }\n            return receipt;\n        };\n\n        return result;\n    }\n\n    async sendTransaction(signedTransaction: string | Promise<string>): Promise<TransactionResponse> {\n        await this.getNetwork();\n        const hexTx = await Promise.resolve(signedTransaction).then(t => hexlify(t));\n        const tx = this.formatter.transaction(signedTransaction);\n        if (tx.confirmations == null) { tx.confirmations = 0; }\n        const blockNumber = await this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n        try {\n            const hash = await this.perform(\"sendTransaction\", { signedTransaction: hexTx });\n            return this._wrapTransaction(tx, hash, blockNumber);\n        } catch (error) {\n            (<any>error).transaction = tx;\n            (<any>error).transactionHash = tx.hash;\n            throw error;\n        }\n    }\n\n    async _getTransactionRequest(transaction: Deferrable<TransactionRequest>): Promise<Transaction> {\n        const values: any = await transaction;\n\n        const tx: any = { };\n\n        [\"from\", \"to\"].forEach((key) => {\n            if (values[key] == null) { return; }\n            tx[key] = Promise.resolve(values[key]).then((v) => (v ? this._getAddress(v): null))\n        });\n\n        [\"gasLimit\", \"gasPrice\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"value\"].forEach((key) => {\n            if (values[key] == null) { return; }\n            tx[key] = Promise.resolve(values[key]).then((v) => (v ? BigNumber.from(v): null));\n        });\n\n        [\"type\"].forEach((key) => {\n            if (values[key] == null) { return; }\n            tx[key] = Promise.resolve(values[key]).then((v) => ((v != null) ? v: null));\n        });\n\n        if (values.accessList) {\n            tx.accessList = this.formatter.accessList(values.accessList);\n        }\n\n        [\"data\"].forEach((key) => {\n            if (values[key] == null) { return; }\n            tx[key] = Promise.resolve(values[key]).then((v) => (v ? hexlify(v): null));\n        });\n\n        return this.formatter.transactionRequest(await resolveProperties(tx));\n    }\n\n    async _getFilter(filter: Filter | FilterByBlockHash | Promise<Filter | FilterByBlockHash>): Promise<Filter | FilterByBlockHash> {\n        filter = await filter;\n\n        const result: any = { };\n\n        if (filter.address != null) {\n            result.address = this._getAddress(filter.address);\n        }\n\n        [\"blockHash\", \"topics\"].forEach((key) => {\n            if ((<any>filter)[key] == null) { return; }\n            result[key] = (<any>filter)[key];\n        });\n\n        [\"fromBlock\", \"toBlock\"].forEach((key) => {\n            if ((<any>filter)[key] == null) { return; }\n            result[key] = this._getBlockTag((<any>filter)[key]);\n        });\n\n        return this.formatter.filter(await resolveProperties(result));\n    }\n\n    async _call(transaction: TransactionRequest, blockTag: BlockTag, attempt: number): Promise<string> {\n        if (attempt >= MAX_CCIP_REDIRECTS) {\n            logger.throwError(\"CCIP read exceeded maximum redirections\", Logger.errors.SERVER_ERROR, {\n                redirects: attempt, transaction\n            });\n        }\n\n        const txSender = transaction.to;\n\n        const result = await this.perform(\"call\", { transaction, blockTag });\n\n        // CCIP Read request via OffchainLookup(address,string[],bytes,bytes4,bytes)\n        if (attempt >= 0 && blockTag === \"latest\" && txSender != null && result.substring(0, 10) === \"0x556f1830\" && (hexDataLength(result) % 32 === 4)) {\n            try {\n                const data = hexDataSlice(result, 4);\n\n                // Check the sender of the OffchainLookup matches the transaction\n                const sender = hexDataSlice(data, 0, 32);\n                if (!BigNumber.from(sender).eq(txSender)) {\n                    logger.throwError(\"CCIP Read sender did not match\", Logger.errors.CALL_EXCEPTION, {\n                        name: \"OffchainLookup\",\n                        signature: \"OffchainLookup(address,string[],bytes,bytes4,bytes)\",\n                        transaction, data: result\n                    });\n                }\n\n                // Read the URLs from the response\n                const urls: Array<string> = [];\n                const urlsOffset = BigNumber.from(hexDataSlice(data, 32, 64)).toNumber();\n                const urlsLength = BigNumber.from(hexDataSlice(data, urlsOffset, urlsOffset + 32)).toNumber();\n                const urlsData = hexDataSlice(data, urlsOffset + 32);\n                for (let u = 0; u < urlsLength; u++) {\n                    const url = _parseString(urlsData, u * 32);\n                    if (url == null) {\n                        logger.throwError(\"CCIP Read contained corrupt URL string\", Logger.errors.CALL_EXCEPTION, {\n                            name: \"OffchainLookup\",\n                            signature: \"OffchainLookup(address,string[],bytes,bytes4,bytes)\",\n                            transaction, data: result\n                        });\n                    }\n                    urls.push(url);\n                }\n\n                // Get the CCIP calldata to forward\n                const calldata = _parseBytes(data, 64);\n\n                // Get the callbackSelector (bytes4)\n                if (!BigNumber.from(hexDataSlice(data, 100, 128)).isZero()) {\n                    logger.throwError(\"CCIP Read callback selector included junk\", Logger.errors.CALL_EXCEPTION, {\n                        name: \"OffchainLookup\",\n                        signature: \"OffchainLookup(address,string[],bytes,bytes4,bytes)\",\n                        transaction, data: result\n                    });\n                }\n                const callbackSelector = hexDataSlice(data, 96, 100);\n\n                // Get the extra data to send back to the contract as context\n                const extraData = _parseBytes(data, 128);\n\n                const ccipResult = await this.ccipReadFetch(<Transaction>transaction, calldata, urls);\n                if (ccipResult == null) {\n                    logger.throwError(\"CCIP Read disabled or provided no URLs\", Logger.errors.CALL_EXCEPTION, {\n                        name: \"OffchainLookup\",\n                        signature: \"OffchainLookup(address,string[],bytes,bytes4,bytes)\",\n                        transaction, data: result\n                    });\n                }\n\n                const tx = {\n                    to: txSender,\n                    data: hexConcat([ callbackSelector, encodeBytes([ ccipResult, extraData ]) ])\n                };\n\n                return this._call(tx, blockTag, attempt + 1);\n\n            } catch (error) {\n                if (error.code === Logger.errors.SERVER_ERROR) { throw error; }\n            }\n        }\n\n        try {\n            return hexlify(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"call\",\n                params: { transaction, blockTag }, result, error\n            });\n        }\n\n    }\n\n    async call(transaction: Deferrable<TransactionRequest>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string> {\n        await this.getNetwork();\n        const resolved = await resolveProperties({\n            transaction: this._getTransactionRequest(transaction),\n            blockTag: this._getBlockTag(blockTag),\n            ccipReadEnabled: Promise.resolve(transaction.ccipReadEnabled)\n        });\n        return this._call(resolved.transaction, resolved.blockTag, resolved.ccipReadEnabled ? 0: -1);\n    }\n\n    async estimateGas(transaction: Deferrable<TransactionRequest>): Promise<BigNumber> {\n        await this.getNetwork();\n        const params = await resolveProperties({\n            transaction: this._getTransactionRequest(transaction)\n        });\n\n        const result = await this.perform(\"estimateGas\", params);\n        try {\n            return BigNumber.from(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"estimateGas\",\n                params, result, error\n            });\n        }\n    }\n\n    async _getAddress(addressOrName: string | Promise<string>): Promise<string> {\n        addressOrName = await addressOrName;\n        if (typeof(addressOrName) !== \"string\") {\n            logger.throwArgumentError(\"invalid address or ENS name\", \"name\", addressOrName);\n        }\n\n        const address = await this.resolveName(addressOrName);\n        if (address == null) {\n            logger.throwError(\"ENS name not configured\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: `resolveName(${ JSON.stringify(addressOrName) })`\n            });\n        }\n        return address;\n    }\n\n    async _getBlock(blockHashOrBlockTag: BlockTag | string | Promise<BlockTag | string>, includeTransactions?: boolean): Promise<Block | BlockWithTransactions> {\n        await this.getNetwork();\n\n        blockHashOrBlockTag = await blockHashOrBlockTag;\n\n        // If blockTag is a number (not \"latest\", etc), this is the block number\n        let blockNumber = -128;\n\n        const params: { [key: string]: any } = {\n            includeTransactions: !!includeTransactions\n        };\n\n        if (isHexString(blockHashOrBlockTag, 32)) {\n            params.blockHash = blockHashOrBlockTag;\n        } else {\n            try {\n                params.blockTag = await this._getBlockTag(blockHashOrBlockTag);\n                if (isHexString(params.blockTag)) {\n                    blockNumber = parseInt(params.blockTag.substring(2), 16);\n                }\n            } catch (error) {\n                logger.throwArgumentError(\"invalid block hash or block tag\", \"blockHashOrBlockTag\", blockHashOrBlockTag);\n            }\n        }\n\n        return poll(async () => {\n            const block = await this.perform(\"getBlock\", params);\n\n            // Block was not found\n            if (block == null) {\n\n                // For blockhashes, if we didn't say it existed, that blockhash may\n                // not exist. If we did see it though, perhaps from a log, we know\n                // it exists, and this node is just not caught up yet.\n                if (params.blockHash != null) {\n                    if (this._emitted[\"b:\" + params.blockHash] == null) { return null; }\n                }\n\n                // For block tags, if we are asking for a future block, we return null\n                if (params.blockTag != null) {\n                    if (blockNumber > this._emitted.block) { return null; }\n                }\n\n                // Retry on the next block\n                return undefined;\n            }\n\n            // Add transactions\n            if (includeTransactions) {\n                let blockNumber: number = null;\n                for (let i = 0; i < block.transactions.length; i++) {\n                    const tx = block.transactions[i];\n                    if (tx.blockNumber == null) {\n                        tx.confirmations = 0;\n\n                    } else if (tx.confirmations == null) {\n                        if (blockNumber == null) {\n                            blockNumber = await this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n                        }\n\n                        // Add the confirmations using the fast block number (pessimistic)\n                        let confirmations = (blockNumber - tx.blockNumber) + 1;\n                        if (confirmations <= 0) { confirmations = 1; }\n                        tx.confirmations = confirmations;\n                    }\n                }\n\n                const blockWithTxs: any = this.formatter.blockWithTransactions(block);\n                blockWithTxs.transactions = blockWithTxs.transactions.map((tx: TransactionResponse) => this._wrapTransaction(tx));\n                return blockWithTxs;\n            }\n\n            return this.formatter.block(block);\n\n        }, { oncePoll: this });\n    }\n\n    getBlock(blockHashOrBlockTag: BlockTag | string | Promise<BlockTag | string>): Promise<Block> {\n        return <Promise<Block>>(this._getBlock(blockHashOrBlockTag, false));\n    }\n\n    getBlockWithTransactions(blockHashOrBlockTag: BlockTag | string | Promise<BlockTag | string>): Promise<BlockWithTransactions> {\n        return <Promise<BlockWithTransactions>>(this._getBlock(blockHashOrBlockTag, true));\n    }\n\n    async getTransaction(transactionHash: string | Promise<string>): Promise<TransactionResponse> {\n        await this.getNetwork();\n        transactionHash = await transactionHash;\n\n        const params = { transactionHash: this.formatter.hash(transactionHash, true) };\n\n        return poll(async () => {\n            const result = await this.perform(\"getTransaction\", params);\n\n            if (result == null) {\n                if (this._emitted[\"t:\" + transactionHash] == null) {\n                    return null;\n                }\n                return undefined;\n            }\n\n            const tx = this.formatter.transactionResponse(result);\n\n            if (tx.blockNumber == null) {\n                tx.confirmations = 0;\n\n            } else if (tx.confirmations == null) {\n                const blockNumber = await this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n\n                // Add the confirmations using the fast block number (pessimistic)\n                let confirmations = (blockNumber - tx.blockNumber) + 1;\n                if (confirmations <= 0) { confirmations = 1; }\n                tx.confirmations = confirmations;\n            }\n\n            return this._wrapTransaction(tx);\n        }, { oncePoll: this });\n    }\n\n    async getTransactionReceipt(transactionHash: string | Promise<string>): Promise<TransactionReceipt> {\n        await this.getNetwork();\n\n        transactionHash = await transactionHash;\n\n        const params = { transactionHash: this.formatter.hash(transactionHash, true) };\n\n        return poll(async () => {\n            const result = await this.perform(\"getTransactionReceipt\", params);\n\n            if (result == null) {\n                if (this._emitted[\"t:\" + transactionHash] == null) {\n                    return null;\n                }\n                return undefined;\n            }\n\n            // \"geth-etc\" returns receipts before they are ready\n            if (result.blockHash == null) { return undefined; }\n\n            const receipt = this.formatter.receipt(result);\n\n            if (receipt.blockNumber == null) {\n                receipt.confirmations = 0;\n\n            } else if (receipt.confirmations == null) {\n                const blockNumber = await this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n\n                // Add the confirmations using the fast block number (pessimistic)\n                let confirmations = (blockNumber - receipt.blockNumber) + 1;\n                if (confirmations <= 0) { confirmations = 1; }\n                receipt.confirmations = confirmations;\n            }\n\n            return receipt;\n        }, { oncePoll: this });\n    }\n\n    async getLogs(filter: Filter | FilterByBlockHash | Promise<Filter | FilterByBlockHash>): Promise<Array<Log>> {\n        await this.getNetwork();\n        const params = await resolveProperties({ filter: this._getFilter(filter) });\n        const logs: Array<Log> = await this.perform(\"getLogs\", params);\n        logs.forEach((log) => {\n            if (log.removed == null) { log.removed = false; }\n        });\n        return Formatter.arrayOf(this.formatter.filterLog.bind(this.formatter))(logs);\n    }\n\n    async getEtherPrice(): Promise<number> {\n        await this.getNetwork();\n        return this.perform(\"getEtherPrice\", { });\n    }\n\n    async _getBlockTag(blockTag: BlockTag | Promise<BlockTag>): Promise<BlockTag> {\n        blockTag = await blockTag;\n\n        if (typeof(blockTag) === \"number\" && blockTag < 0) {\n            if (blockTag % 1) {\n                logger.throwArgumentError(\"invalid BlockTag\", \"blockTag\", blockTag);\n            }\n\n            let blockNumber = await this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n            blockNumber += blockTag;\n            if (blockNumber < 0) { blockNumber = 0; }\n            return this.formatter.blockTag(blockNumber)\n        }\n\n        return this.formatter.blockTag(blockTag);\n    }\n\n\n    async getResolver(name: string): Promise<null | Resolver> {\n        let currentName = name;\n        while (true) {\n            if (currentName === \"\" || currentName === \".\") { return null; }\n\n            // Optimization since the eth node cannot change and does\n            // not have a wildcard resolver\n            if (name !== \"eth\" && currentName === \"eth\") { return null; }\n\n            // Check the current node for a resolver\n            const addr = await this._getResolver(currentName, \"getResolver\");\n\n            // Found a resolver!\n            if (addr != null) {\n                const resolver = new Resolver(this, addr, name);\n\n                // Legacy resolver found, using EIP-2544 so it isn't safe to use\n                if (currentName !== name && !(await resolver.supportsWildcard())) { return null; }\n\n                return resolver;\n            }\n\n            // Get the parent node\n            currentName = currentName.split(\".\").slice(1).join(\".\");\n        }\n\n    }\n\n    async _getResolver(name: string, operation?: string): Promise<string> {\n        if (operation == null) { operation = \"ENS\"; }\n\n        const network = await this.getNetwork();\n\n        // No ENS...\n        if (!network.ensAddress) {\n            logger.throwError(\n                \"network does not support ENS\",\n                Logger.errors.UNSUPPORTED_OPERATION,\n                { operation, network: network.name }\n            );\n        }\n\n        try {\n            // keccak256(\"resolver(bytes32)\")\n            const addrData = await this.call({\n                to: network.ensAddress,\n                data: (\"0x0178b8bf\" + namehash(name).substring(2))\n            });\n            return this.formatter.callAddress(addrData);\n        } catch (error) {\n            // ENS registry cannot throw errors on resolver(bytes32)\n        }\n\n        return null;\n    }\n\n    async resolveName(name: string | Promise<string>): Promise<null | string> {\n        name = await name;\n\n        // If it is already an address, nothing to resolve\n        try {\n            return Promise.resolve(this.formatter.address(name));\n        } catch (error) {\n            // If is is a hexstring, the address is bad (See #694)\n            if (isHexString(name)) { throw error; }\n        }\n\n        if (typeof(name) !== \"string\") {\n            logger.throwArgumentError(\"invalid ENS name\", \"name\", name);\n        }\n\n        // Get the addr from the resolver\n        const resolver = await this.getResolver(name);\n        if (!resolver) { return null; }\n\n        return await resolver.getAddress();\n    }\n\n    async lookupAddress(address: string | Promise<string>): Promise<null | string> {\n        address = await address;\n        address = this.formatter.address(address);\n\n        const node = address.substring(2).toLowerCase() + \".addr.reverse\";\n\n        const resolverAddr = await this._getResolver(node, \"lookupAddress\");\n        if (resolverAddr == null) { return null; }\n\n        // keccak(\"name(bytes32)\")\n        const name = _parseString(await this.call({\n            to: resolverAddr,\n            data: (\"0x691f3431\" + namehash(node).substring(2))\n        }), 0);\n\n        const addr = await this.resolveName(name);\n        if (addr != address) { return null; }\n\n        return name;\n    }\n\n    async getAvatar(nameOrAddress: string): Promise<null | string> {\n        let resolver: Resolver = null;\n        if (isHexString(nameOrAddress)) {\n            // Address; reverse lookup\n            const address = this.formatter.address(nameOrAddress);\n\n            const node = address.substring(2).toLowerCase() + \".addr.reverse\";\n\n            const resolverAddress = await this._getResolver(node, \"getAvatar\");\n            if (!resolverAddress) { return null; }\n\n            // Try resolving the avatar against the addr.reverse resolver\n            resolver = new Resolver(this, resolverAddress, node);\n            try {\n                const avatar = await resolver.getAvatar();\n                if (avatar) { return avatar.url; }\n            } catch (error) {\n                if (error.code !== Logger.errors.CALL_EXCEPTION) { throw error; }\n            }\n\n            // Try getting the name and performing forward lookup; allowing wildcards\n            try {\n                // keccak(\"name(bytes32)\")\n                const name = _parseString(await this.call({\n                    to: resolverAddress,\n                    data: (\"0x691f3431\" + namehash(node).substring(2))\n                }), 0);\n                resolver = await this.getResolver(name);\n            } catch (error) {\n                if (error.code !== Logger.errors.CALL_EXCEPTION) { throw error; }\n                return null;\n            }\n\n        } else {\n            // ENS name; forward lookup with wildcard\n            resolver = await this.getResolver(nameOrAddress);\n            if (!resolver) { return null; }\n        }\n\n        const avatar = await resolver.getAvatar();\n        if (avatar == null) { return null; }\n\n        return avatar.url;\n    }\n\n    perform(method: string, params: any): Promise<any> {\n        return logger.throwError(method + \" not implemented\", Logger.errors.NOT_IMPLEMENTED, { operation: method });\n    }\n\n    _startEvent(event: Event): void {\n        this.polling = (this._events.filter((e) => e.pollable()).length > 0);\n    }\n\n    _stopEvent(event: Event): void {\n        this.polling = (this._events.filter((e) => e.pollable()).length > 0);\n    }\n\n    _addEventListener(eventName: EventType, listener: Listener, once: boolean): this {\n        const event = new Event(getEventTag(eventName), listener, once)\n        this._events.push(event);\n        this._startEvent(event);\n\n        return this;\n    }\n\n    on(eventName: EventType, listener: Listener): this {\n        return this._addEventListener(eventName, listener, false);\n    }\n\n    once(eventName: EventType, listener: Listener): this {\n        return this._addEventListener(eventName, listener, true);\n    }\n\n\n    emit(eventName: EventType, ...args: Array<any>): boolean {\n        let result = false;\n\n        let stopped: Array<Event> = [ ];\n\n        let eventTag = getEventTag(eventName);\n        this._events = this._events.filter((event) => {\n            if (event.tag !== eventTag) { return true; }\n\n            setTimeout(() => {\n                event.listener.apply(this, args);\n            }, 0);\n\n            result = true;\n\n            if (event.once) {\n                stopped.push(event);\n                return false;\n            }\n\n            return true;\n        });\n\n        stopped.forEach((event) => { this._stopEvent(event); });\n\n        return result;\n    }\n\n    listenerCount(eventName?: EventType): number {\n        if (!eventName) { return this._events.length; }\n\n        let eventTag = getEventTag(eventName);\n        return this._events.filter((event) => {\n            return (event.tag === eventTag);\n        }).length;\n    }\n\n    listeners(eventName?: EventType): Array<Listener> {\n        if (eventName == null) {\n            return this._events.map((event) => event.listener);\n        }\n\n        let eventTag = getEventTag(eventName);\n        return this._events\n            .filter((event) => (event.tag === eventTag))\n            .map((event) => event.listener);\n    }\n\n    off(eventName: EventType, listener?: Listener): this {\n        if (listener == null) {\n            return this.removeAllListeners(eventName);\n        }\n\n        const stopped: Array<Event> = [ ];\n\n        let found = false;\n\n        let eventTag = getEventTag(eventName);\n        this._events = this._events.filter((event) => {\n            if (event.tag !== eventTag || event.listener != listener) { return true; }\n            if (found) { return true; }\n            found = true;\n            stopped.push(event);\n            return false;\n        });\n\n        stopped.forEach((event) => { this._stopEvent(event); });\n\n        return this;\n    }\n\n    removeAllListeners(eventName?: EventType): this {\n        let stopped: Array<Event> = [ ];\n        if (eventName == null) {\n            stopped = this._events;\n\n            this._events = [ ];\n        } else {\n            const eventTag = getEventTag(eventName);\n            this._events = this._events.filter((event) => {\n                if (event.tag !== eventTag) { return true; }\n                stopped.push(event);\n                return false;\n            });\n        }\n\n        stopped.forEach((event) => { this._stopEvent(event); });\n\n        return this;\n    }\n}\n", "\"use strict\";\n\n// See: https://github.com/ethereum/wiki/wiki/JSON-RPC\n\nimport { Provider, TransactionRequest, TransactionResponse } from \"@ethersproject/abstract-provider\";\nimport { Signer, TypedDataDomain, TypedDataField, TypedDataSigner } from \"@ethersproject/abstract-signer\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { Bytes, hexlify, hexValue, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { _TypedDataEncoder } from \"@ethersproject/hash\";\nimport { Network, Networkish } from \"@ethersproject/networks\";\nimport { checkProperties, deepCopy, Deferrable, defineReadOnly, getStatic, resolveProperties, shallowCopy } from \"@ethersproject/properties\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\nimport { AccessList, accessListify } from \"@ethersproject/transactions\";\nimport { ConnectionInfo, fetchJson, poll } from \"@ethersproject/web\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { BaseProvider, Event } from \"./base-provider\";\n\n\nconst errorGas = [ \"call\", \"estimateGas\" ];\n\nfunction spelunk(value: any, requireData: boolean): null | { message: string, data: null | string } {\n    if (value == null) { return null; }\n\n    // These *are* the droids we're looking for.\n    if (typeof(value.message) === \"string\" && value.message.match(\"reverted\")) {\n        const data = isHexString(value.data) ? value.data: null;\n        if (!requireData || data) {\n            return { message: value.message, data };\n        }\n    }\n\n    // Spelunk further...\n    if (typeof(value) === \"object\") {\n        for (const key in value) {\n            const result = spelunk(value[key], requireData);\n            if (result) { return result; }\n        }\n        return null;\n    }\n\n    // Might be a JSON string we can further descend...\n    if (typeof(value) === \"string\") {\n        try {\n            return spelunk(JSON.parse(value), requireData);\n        } catch (error) { }\n    }\n\n    return null;\n}\n\nfunction checkError(method: string, error: any, params: any): any {\n\n    const transaction = params.transaction || params.signedTransaction;\n\n    // Undo the \"convenience\" some nodes are attempting to prevent backwards\n    // incompatibility; maybe for v6 consider forwarding reverts as errors\n    if (method === \"call\") {\n        const result = spelunk(error, true);\n        if (result) { return result.data; }\n\n        // Nothing descriptive..\n        logger.throwError(\"missing revert data in call exception; Transaction reverted without a reason string\", Logger.errors.CALL_EXCEPTION, {\n            data: \"0x\", transaction, error\n        });\n    }\n\n    if (method === \"estimateGas\") {\n        // Try to find something, with a preference on SERVER_ERROR body\n        let result = spelunk(error.body, false);\n        if (result == null) { result = spelunk(error, false); }\n\n        // Found \"reverted\", this is a CALL_EXCEPTION\n        if (result) {\n            logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n                reason: result.message, method, transaction, error\n            });\n        }\n    }\n\n    // @TODO: Should we spelunk for message too?\n\n    let message = error.message;\n    if (error.code === Logger.errors.SERVER_ERROR && error.error && typeof(error.error.message) === \"string\") {\n        message = error.error.message;\n    } else if (typeof(error.body) === \"string\") {\n        message = error.body;\n    } else if (typeof(error.responseText) === \"string\") {\n        message = error.responseText;\n    }\n    message = (message || \"\").toLowerCase();\n\n    // \"insufficient funds for gas * price + value + cost(data)\"\n    if (message.match(/insufficient funds|base fee exceeds gas limit|InsufficientFunds/i)) {\n        logger.throwError(\"insufficient funds for intrinsic transaction cost\", Logger.errors.INSUFFICIENT_FUNDS, {\n            error, method, transaction\n        });\n    }\n\n    // \"nonce too low\"\n    if (message.match(/nonce (is )?too low/i)) {\n        logger.throwError(\"nonce has already been used\", Logger.errors.NONCE_EXPIRED, {\n            error, method, transaction\n        });\n    }\n\n    // \"replacement transaction underpriced\"\n    if (message.match(/replacement transaction underpriced|transaction gas price.*too low/i)) {\n        logger.throwError(\"replacement fee too low\", Logger.errors.REPLACEMENT_UNDERPRICED, {\n            error, method, transaction\n        });\n    }\n\n    // \"replacement transaction underpriced\"\n    if (message.match(/only replay-protected/i)) {\n        logger.throwError(\"legacy pre-eip-155 transactions not supported\", Logger.errors.UNSUPPORTED_OPERATION, {\n            error, method, transaction\n        });\n    }\n\n    if (errorGas.indexOf(method) >= 0 && message.match(/gas required exceeds allowance|always failing transaction|execution reverted|revert/)) {\n        logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n            error, method, transaction\n        });\n    }\n\n    throw error;\n}\n\nfunction timer(timeout: number): Promise<any> {\n    return new Promise(function(resolve) {\n        setTimeout(resolve, timeout);\n    });\n}\n\nfunction getResult(payload: { error?: { code?: number, data?: any, message?: string }, result?: any }): any {\n    if (payload.error) {\n        // @TODO: not any\n        const error: any = new Error(payload.error.message);\n        error.code = payload.error.code;\n        error.data = payload.error.data;\n        throw error;\n    }\n\n    return payload.result;\n}\n\nfunction getLowerCase(value: string): string {\n    if (value) { return value.toLowerCase(); }\n    return value;\n}\n\nconst _constructorGuard = {};\n\nexport class JsonRpcSigner extends Signer implements TypedDataSigner {\n    readonly provider: JsonRpcProvider;\n    _index: number;\n    _address: string;\n\n    constructor(constructorGuard: any, provider: JsonRpcProvider, addressOrIndex?: string | number) {\n        super();\n\n        if (constructorGuard !== _constructorGuard) {\n            throw new Error(\"do not call the JsonRpcSigner constructor directly; use provider.getSigner\");\n        }\n\n        defineReadOnly(this, \"provider\", provider);\n\n        if (addressOrIndex == null) { addressOrIndex = 0; }\n\n        if (typeof(addressOrIndex) === \"string\") {\n            defineReadOnly(this, \"_address\", this.provider.formatter.address(addressOrIndex));\n            defineReadOnly(this, \"_index\", null);\n\n        } else if (typeof(addressOrIndex) === \"number\") {\n            defineReadOnly(this, \"_index\", addressOrIndex);\n            defineReadOnly(this, \"_address\", null);\n\n        } else {\n            logger.throwArgumentError(\"invalid address or index\", \"addressOrIndex\", addressOrIndex);\n        }\n    }\n\n    connect(provider: Provider): JsonRpcSigner {\n        return logger.throwError(\"cannot alter JSON-RPC Signer connection\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"connect\"\n        });\n    }\n\n    connectUnchecked(): JsonRpcSigner {\n        return new UncheckedJsonRpcSigner(_constructorGuard, this.provider, this._address || this._index);\n    }\n\n    getAddress(): Promise<string> {\n        if (this._address) {\n            return Promise.resolve(this._address);\n        }\n\n        return this.provider.send(\"eth_accounts\", []).then((accounts) => {\n            if (accounts.length <= this._index) {\n                logger.throwError(\"unknown account #\" + this._index, Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"getAddress\"\n                });\n            }\n            return this.provider.formatter.address(accounts[this._index])\n        });\n    }\n\n    sendUncheckedTransaction(transaction: Deferrable<TransactionRequest>): Promise<string> {\n        transaction = shallowCopy(transaction);\n\n        const fromAddress = this.getAddress().then((address) => {\n            if (address) { address = address.toLowerCase(); }\n            return address;\n        });\n\n        // The JSON-RPC for eth_sendTransaction uses 90000 gas; if the user\n        // wishes to use this, it is easy to specify explicitly, otherwise\n        // we look it up for them.\n        if (transaction.gasLimit == null) {\n            const estimate = shallowCopy(transaction);\n            estimate.from = fromAddress;\n            transaction.gasLimit = this.provider.estimateGas(estimate);\n        }\n\n        if (transaction.to != null) {\n            transaction.to = Promise.resolve(transaction.to).then(async (to) => {\n                if (to == null) { return null; }\n                const address = await this.provider.resolveName(to);\n                if (address == null) {\n                    logger.throwArgumentError(\"provided ENS name resolves to null\", \"tx.to\", to);\n                }\n                return address;\n            });\n        }\n\n        return resolveProperties({\n            tx: resolveProperties(transaction),\n            sender: fromAddress\n        }).then(({ tx, sender }) => {\n\n            if (tx.from != null) {\n                if (tx.from.toLowerCase() !== sender) {\n                    logger.throwArgumentError(\"from address mismatch\", \"transaction\", transaction);\n                }\n            } else {\n                tx.from = sender;\n            }\n\n            const hexTx = (<any>this.provider.constructor).hexlifyTransaction(tx, { from: true });\n\n            return this.provider.send(\"eth_sendTransaction\", [ hexTx ]).then((hash) => {\n                return hash;\n            }, (error) => {\n                if (typeof(error.message) === \"string\" && error.message.match(/user denied/i)) {\n                    logger.throwError(\"user rejected transaction\", Logger.errors.ACTION_REJECTED, {\n                        action: \"sendTransaction\",\n                        transaction: tx\n                    });\n                }\n\n                return checkError(\"sendTransaction\", error, hexTx);\n            });\n        });\n    }\n\n    signTransaction(transaction: Deferrable<TransactionRequest>): Promise<string> {\n        return logger.throwError(\"signing transactions is unsupported\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"signTransaction\"\n        });\n    }\n\n    async sendTransaction(transaction: Deferrable<TransactionRequest>): Promise<TransactionResponse> {\n        // This cannot be mined any earlier than any recent block\n        const blockNumber = await this.provider._getInternalBlockNumber(100 + 2 * this.provider.pollingInterval);\n\n        // Send the transaction\n        const hash = await this.sendUncheckedTransaction(transaction);\n\n        try {\n            // Unfortunately, JSON-RPC only provides and opaque transaction hash\n            // for a response, and we need the actual transaction, so we poll\n            // for it; it should show up very quickly\n            return await poll(async () => {\n                const tx = await this.provider.getTransaction(hash);\n                if (tx === null) { return undefined; }\n                return this.provider._wrapTransaction(tx, hash, blockNumber);\n            }, { oncePoll: this.provider });\n        } catch (error) {\n            (<any>error).transactionHash = hash;\n            throw error;\n        }\n    }\n\n    async signMessage(message: Bytes | string): Promise<string> {\n        const data = ((typeof(message) === \"string\") ? toUtf8Bytes(message): message);\n        const address = await this.getAddress();\n        try {\n            return await this.provider.send(\"personal_sign\", [ hexlify(data), address.toLowerCase() ]);\n        } catch (error) {\n            if (typeof(error.message) === \"string\" && error.message.match(/user denied/i)) {\n                logger.throwError(\"user rejected signing\", Logger.errors.ACTION_REJECTED, {\n                    action: \"signMessage\",\n                    from: address,\n                    messageData: message\n                });\n            }\n            throw error;\n        }\n    }\n\n    async _legacySignMessage(message: Bytes | string): Promise<string> {\n        const data = ((typeof(message) === \"string\") ? toUtf8Bytes(message): message);\n        const address = await this.getAddress();\n\n        try {\n            // https://github.com/ethereum/wiki/wiki/JSON-RPC#eth_sign\n            return await this.provider.send(\"eth_sign\", [ address.toLowerCase(), hexlify(data) ]);\n        } catch (error) {\n            if (typeof(error.message) === \"string\" && error.message.match(/user denied/i)) {\n                logger.throwError(\"user rejected signing\", Logger.errors.ACTION_REJECTED, {\n                    action: \"_legacySignMessage\",\n                    from: address,\n                    messageData: message\n                });\n            }\n            throw error;\n        }\n    }\n\n    async _signTypedData(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): Promise<string> {\n        // Populate any ENS names (in-place)\n        const populated = await _TypedDataEncoder.resolveNames(domain, types, value, (name: string) => {\n            return this.provider.resolveName(name);\n        });\n\n        const address = await this.getAddress();\n\n        try {\n            return await this.provider.send(\"eth_signTypedData_v4\", [\n                address.toLowerCase(),\n                JSON.stringify(_TypedDataEncoder.getPayload(populated.domain, types, populated.value))\n            ]);\n        } catch (error) {\n            if (typeof(error.message) === \"string\" && error.message.match(/user denied/i)) {\n                logger.throwError(\"user rejected signing\", Logger.errors.ACTION_REJECTED, {\n                    action: \"_signTypedData\",\n                    from: address,\n                    messageData: { domain: populated.domain, types, value: populated.value }\n                });\n            }\n            throw error;\n        }\n    }\n\n    async unlock(password: string): Promise<boolean> {\n        const provider = this.provider;\n\n        const address = await this.getAddress();\n\n        return provider.send(\"personal_unlockAccount\", [ address.toLowerCase(), password, null ]);\n    }\n}\n\nclass UncheckedJsonRpcSigner extends JsonRpcSigner {\n    sendTransaction(transaction: Deferrable<TransactionRequest>): Promise<TransactionResponse> {\n        return this.sendUncheckedTransaction(transaction).then((hash) => {\n            return <TransactionResponse>{\n                hash: hash,\n                nonce: null,\n                gasLimit: null,\n                gasPrice: null,\n                data: null,\n                value: null,\n                chainId: null,\n                confirmations: 0,\n                from: null,\n                wait: (confirmations?: number) => { return this.provider.waitForTransaction(hash, confirmations); }\n            };\n        });\n    }\n}\n\nconst allowedTransactionKeys: { [ key: string ]: boolean } = {\n    chainId: true, data: true, gasLimit: true, gasPrice:true, nonce: true, to: true, value: true,\n    type: true, accessList: true,\n    maxFeePerGas: true, maxPriorityFeePerGas: true\n}\n\nexport class JsonRpcProvider extends BaseProvider {\n    readonly connection: ConnectionInfo;\n\n    _pendingFilter: Promise<number>;\n    _nextId: number;\n\n    // During any given event loop, the results for a given call will\n    // all be the same, so we can dedup the calls to save requests and\n    // bandwidth. @TODO: Try out generalizing this against send?\n    _eventLoopCache: Record<string, Promise<any>>;\n    get _cache(): Record<string, Promise<any>> {\n        if (this._eventLoopCache == null) {\n            this._eventLoopCache = { };\n        }\n        return this._eventLoopCache;\n    }\n\n    constructor(url?: ConnectionInfo | string, network?: Networkish) {\n        let networkOrReady: Networkish | Promise<Network> = network;\n\n        // The network is unknown, query the JSON-RPC for it\n        if (networkOrReady == null) {\n            networkOrReady = new Promise((resolve, reject) => {\n                setTimeout(() => {\n                    this.detectNetwork().then((network) => {\n                        resolve(network);\n                    }, (error) => {\n                        reject(error);\n                    });\n                }, 0);\n            });\n        }\n\n        super(networkOrReady);\n\n        // Default URL\n        if (!url) { url = getStatic<() => string>(this.constructor, \"defaultUrl\")(); }\n\n        if (typeof(url) === \"string\") {\n            defineReadOnly(this, \"connection\",Object.freeze({\n                url: url\n            }));\n        } else {\n            defineReadOnly(this, \"connection\", Object.freeze(shallowCopy(url)));\n        }\n\n        this._nextId = 42;\n    }\n\n    static defaultUrl(): string {\n        return \"http:/\\/localhost:8545\";\n    }\n\n    detectNetwork(): Promise<Network> {\n        if (!this._cache[\"detectNetwork\"]) {\n            this._cache[\"detectNetwork\"] = this._uncachedDetectNetwork();\n\n            // Clear this cache at the beginning of the next event loop\n            setTimeout(() => {\n                this._cache[\"detectNetwork\"] = null;\n            }, 0);\n        }\n        return this._cache[\"detectNetwork\"];\n    }\n\n    async _uncachedDetectNetwork(): Promise<Network> {\n        await timer(0);\n\n        let chainId = null;\n        try {\n            chainId = await this.send(\"eth_chainId\", [ ]);\n        } catch (error) {\n            try {\n                chainId = await this.send(\"net_version\", [ ]);\n            } catch (error) { }\n        }\n\n        if (chainId != null) {\n            const getNetwork = getStatic<(network: Networkish) => Network>(this.constructor, \"getNetwork\");\n            try {\n                return getNetwork(BigNumber.from(chainId).toNumber());\n            } catch (error) {\n                return logger.throwError(\"could not detect network\", Logger.errors.NETWORK_ERROR, {\n                    chainId: chainId,\n                    event: \"invalidNetwork\",\n                    serverError: error\n                });\n            }\n        }\n\n        return logger.throwError(\"could not detect network\", Logger.errors.NETWORK_ERROR, {\n            event: \"noNetwork\"\n        });\n    }\n\n    getSigner(addressOrIndex?: string | number): JsonRpcSigner {\n        return new JsonRpcSigner(_constructorGuard, this, addressOrIndex);\n    }\n\n    getUncheckedSigner(addressOrIndex?: string | number): UncheckedJsonRpcSigner {\n        return this.getSigner(addressOrIndex).connectUnchecked();\n    }\n\n    listAccounts(): Promise<Array<string>> {\n        return this.send(\"eth_accounts\", []).then((accounts: Array<string>) => {\n            return accounts.map((a) => this.formatter.address(a));\n        });\n    }\n\n    send(method: string, params: Array<any>): Promise<any> {\n        const request = {\n            method: method,\n            params: params,\n            id: (this._nextId++),\n            jsonrpc: \"2.0\"\n        };\n\n        this.emit(\"debug\", {\n            action: \"request\",\n            request: deepCopy(request),\n            provider: this\n        });\n\n        // We can expand this in the future to any call, but for now these\n        // are the biggest wins and do not require any serializing parameters.\n        const cache = ([ \"eth_chainId\", \"eth_blockNumber\" ].indexOf(method) >= 0);\n        if (cache && this._cache[method]) {\n            return this._cache[method];\n        }\n\n        const result = fetchJson(this.connection, JSON.stringify(request), getResult).then((result) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                request: request,\n                response: result,\n                provider: this\n            });\n\n            return result;\n\n        }, (error) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                error: error,\n                request: request,\n                provider: this\n            });\n\n            throw error;\n        });\n\n        // Cache the fetch, but clear it on the next event loop\n        if (cache) {\n            this._cache[method] = result;\n            setTimeout(() => {\n                this._cache[method] = null;\n            }, 0);\n        }\n\n        return result;\n    }\n\n    prepareRequest(method: string, params: any): [ string, Array<any> ] {\n        switch (method) {\n            case \"getBlockNumber\":\n                return [ \"eth_blockNumber\", [] ];\n\n            case \"getGasPrice\":\n                return [ \"eth_gasPrice\", [] ];\n\n            case \"getBalance\":\n                return [ \"eth_getBalance\", [ getLowerCase(params.address), params.blockTag ] ];\n\n            case \"getTransactionCount\":\n                return [ \"eth_getTransactionCount\", [ getLowerCase(params.address), params.blockTag ] ];\n\n            case \"getCode\":\n                return [ \"eth_getCode\", [ getLowerCase(params.address), params.blockTag ] ];\n\n            case \"getStorageAt\":\n                return [ \"eth_getStorageAt\", [ getLowerCase(params.address), hexZeroPad(params.position, 32), params.blockTag ] ];\n\n            case \"sendTransaction\":\n                return [ \"eth_sendRawTransaction\", [ params.signedTransaction ] ]\n\n            case \"getBlock\":\n                if (params.blockTag) {\n                    return [ \"eth_getBlockByNumber\", [ params.blockTag, !!params.includeTransactions ] ];\n                } else if (params.blockHash) {\n                    return [ \"eth_getBlockByHash\", [ params.blockHash, !!params.includeTransactions ] ];\n                }\n                return null;\n\n            case \"getTransaction\":\n                return [ \"eth_getTransactionByHash\", [ params.transactionHash ] ];\n\n            case \"getTransactionReceipt\":\n                return [ \"eth_getTransactionReceipt\", [ params.transactionHash ] ];\n\n            case \"call\": {\n                const hexlifyTransaction = getStatic<(t: TransactionRequest, a?: { [key: string]: boolean }) => { [key: string]: string }>(this.constructor, \"hexlifyTransaction\");\n                return [ \"eth_call\", [ hexlifyTransaction(params.transaction, { from: true }), params.blockTag ] ];\n            }\n\n            case \"estimateGas\": {\n                const hexlifyTransaction = getStatic<(t: TransactionRequest, a?: { [key: string]: boolean }) => { [key: string]: string }>(this.constructor, \"hexlifyTransaction\");\n                return [ \"eth_estimateGas\", [ hexlifyTransaction(params.transaction, { from: true }) ] ];\n            }\n\n            case \"getLogs\":\n                if (params.filter && params.filter.address != null) {\n                    params.filter.address = getLowerCase(params.filter.address);\n                }\n                return [ \"eth_getLogs\", [ params.filter ] ];\n\n            default:\n                break;\n        }\n\n        return null;\n    }\n\n    async perform(method: string, params: any): Promise<any> {\n        // Legacy networks do not like the type field being passed along (which\n        // is fair), so we delete type if it is 0 and a non-EIP-1559 network\n        if (method === \"call\" || method === \"estimateGas\") {\n            const tx = params.transaction;\n            if (tx && tx.type != null && BigNumber.from(tx.type).isZero()) {\n                // If there are no EIP-1559 properties, it might be non-EIP-1559\n                if (tx.maxFeePerGas == null && tx.maxPriorityFeePerGas == null) {\n                    const feeData = await this.getFeeData();\n                    if (feeData.maxFeePerGas == null && feeData.maxPriorityFeePerGas == null) {\n                        // Network doesn't know about EIP-1559 (and hence type)\n                        params = shallowCopy(params);\n                        params.transaction = shallowCopy(tx);\n                        delete params.transaction.type;\n                    }\n                }\n            }\n        }\n\n        const args = this.prepareRequest(method,  params);\n\n        if (args == null) {\n            logger.throwError(method + \" not implemented\", Logger.errors.NOT_IMPLEMENTED, { operation: method });\n        }\n        try {\n            return await this.send(args[0], args[1])\n        } catch (error) {\n            return checkError(method, error, params);\n        }\n    }\n\n    _startEvent(event: Event): void {\n        if (event.tag === \"pending\") { this._startPending(); }\n        super._startEvent(event);\n    }\n\n    _startPending(): void {\n        if (this._pendingFilter != null) { return; }\n        const self = this;\n\n        const pendingFilter: Promise<number> = this.send(\"eth_newPendingTransactionFilter\", []);\n        this._pendingFilter = pendingFilter;\n\n        pendingFilter.then(function(filterId) {\n            function poll() {\n                self.send(\"eth_getFilterChanges\", [ filterId ]).then(function(hashes: Array<string>) {\n                    if (self._pendingFilter != pendingFilter) { return null; }\n\n                    let seq = Promise.resolve();\n                    hashes.forEach(function(hash) {\n                        // @TODO: This should be garbage collected at some point... How? When?\n                        self._emitted[\"t:\" + hash.toLowerCase()] = \"pending\";\n                        seq = seq.then(function() {\n                            return self.getTransaction(hash).then(function(tx) {\n                                self.emit(\"pending\", tx);\n                                return null;\n                            });\n                        });\n                    });\n\n                    return seq.then(function() {\n                        return timer(1000);\n                    });\n                }).then(function() {\n                    if (self._pendingFilter != pendingFilter) {\n                        self.send(\"eth_uninstallFilter\", [ filterId ]);\n                        return;\n                    }\n                    setTimeout(function() { poll(); }, 0);\n\n                    return null;\n                }).catch((error: Error) => { });\n            }\n            poll();\n\n            return filterId;\n        }).catch((error: Error) => { });\n    }\n\n    _stopEvent(event: Event): void {\n        if (event.tag === \"pending\" && this.listenerCount(\"pending\") === 0) {\n            this._pendingFilter = null;\n        }\n        super._stopEvent(event);\n    }\n\n    // Convert an ethers.js transaction into a JSON-RPC transaction\n    //  - gasLimit => gas\n    //  - All values hexlified\n    //  - All numeric values zero-striped\n    //  - All addresses are lowercased\n    // NOTE: This allows a TransactionRequest, but all values should be resolved\n    //       before this is called\n    // @TODO: This will likely be removed in future versions and prepareRequest\n    //        will be the preferred method for this.\n    static hexlifyTransaction(transaction: TransactionRequest, allowExtra?: { [key: string]: boolean }): { [key: string]: string | AccessList } {\n        // Check only allowed properties are given\n        const allowed = shallowCopy(allowedTransactionKeys);\n        if (allowExtra) {\n            for (const key in allowExtra) {\n                if (allowExtra[key]) { allowed[key] = true; }\n            }\n        }\n\n        checkProperties(transaction, allowed);\n\n        const result: { [key: string]: string | AccessList } = {};\n\n        // JSON-RPC now requires numeric values to be \"quantity\" values\n        [\"chainId\", \"gasLimit\", \"gasPrice\", \"type\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"nonce\", \"value\"].forEach(function(key) {\n            if ((<any>transaction)[key] == null) { return; }\n            const value = hexValue(BigNumber.from((<any>transaction)[key]));\n            if (key === \"gasLimit\") { key = \"gas\"; }\n            result[key] = value;\n        });\n\n        [\"from\", \"to\", \"data\"].forEach(function(key) {\n            if ((<any>transaction)[key] == null) { return; }\n            result[key] = hexlify((<any>transaction)[key]);\n        });\n\n        if ((<any>transaction).accessList) {\n            result[\"accessList\"] = accessListify((<any>transaction).accessList);\n        }\n\n        return result;\n    }\n}\n", "\"use strict\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\n\nlet WS: any = null;\n\ntry {\n    WS = (WebSocket as any);\n    if (WS == null) { throw new Error(\"inject please\"); }\n} catch (error) {\n    const logger = new Logger(version);\n    WS = function() {\n        logger.throwError(\"WebSockets not supported in this environment\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"new WebSocket()\"\n        });\n    }\n}\n//export default WS;\n//module.exports = WS;\nexport { WS as WebSocket };\n", "\"use strict\";\n\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { Network, Networkish } from \"@ethersproject/networks\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\n\nimport { Event } from \"./base-provider\";\nimport { JsonRpcProvider } from \"./json-rpc-provider\";\nimport { WebSocket } from \"./ws\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n/**\n *  Notes:\n *\n *  This provider differs a bit from the polling providers. One main\n *  difference is how it handles consistency. The polling providers\n *  will stall responses to ensure a consistent state, while this\n *  WebSocket provider assumes the connected backend will manage this.\n *\n *  For example, if a polling provider emits an event which indicates\n *  the event occurred in blockhash XXX, a call to fetch that block by\n *  its hash XXX, if not present will retry until it is present. This\n *  can occur when querying a pool of nodes that are mildly out of sync\n *  with each other.\n */\n\nlet NextId = 1;\n\nexport type InflightRequest = {\n     callback: (error: Error, result: any) => void;\n     payload: string;\n};\n\nexport type Subscription = {\n    tag: string;\n    processFunc: (payload: any) => void;\n};\n\nexport interface WebSocketLike {\n    onopen: ((...args: Array<any>) => any) | null;\n    onmessage: ((...args: Array<any>) => any) | null;\n    onerror: ((...args: Array<any>) => any) | null;\n\n    readyState: number;\n\n    send(payload: any): void;\n    close(code?: number, reason?: string): void;\n}\n\n// For more info about the Real-time Event API see:\n//   https://geth.ethereum.org/docs/rpc/pubsub\n\nexport class WebSocketProvider extends JsonRpcProvider {\n    readonly _websocket: any;\n    readonly _requests: { [ name: string ]: InflightRequest };\n    readonly _detectNetwork: Promise<Network>;\n\n    // Maps event tag to subscription ID (we dedupe identical events)\n    readonly _subIds: { [ tag: string ]: Promise<string> };\n\n    // Maps Subscription ID to Subscription\n    readonly _subs: { [ name: string ]: Subscription };\n\n    _wsReady: boolean;\n\n    constructor(url: string | WebSocketLike, network?: Networkish) {\n\n        // This will be added in the future; please open an issue to expedite\n        if (network === \"any\") {\n            logger.throwError(\"WebSocketProvider does not support 'any' network yet\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"network:any\"\n            });\n        }\n\n        if (typeof(url) === \"string\") {\n            super(url, network);\n        } else {\n            super(\"_websocket\", network);\n        }\n\n        this._pollingInterval = -1;\n\n        this._wsReady = false;\n\n        if (typeof(url) === \"string\") {\n            defineReadOnly(this, \"_websocket\", new WebSocket(this.connection.url));\n        } else {\n            defineReadOnly(this, \"_websocket\", url);\n        }\n\n        defineReadOnly(this, \"_requests\", { });\n        defineReadOnly(this, \"_subs\", { });\n        defineReadOnly(this, \"_subIds\", { });\n        defineReadOnly(this, \"_detectNetwork\", super.detectNetwork());\n\n        // Stall sending requests until the socket is open...\n        this.websocket.onopen = () => {\n            this._wsReady = true;\n            Object.keys(this._requests).forEach((id) => {\n                this.websocket.send(this._requests[id].payload);\n            });\n        };\n\n        this.websocket.onmessage = (messageEvent: { data: string }) => {\n            const data = messageEvent.data;\n            const result = JSON.parse(data);\n            if (result.id != null) {\n                const id = String(result.id);\n                const request = this._requests[id];\n                delete this._requests[id];\n\n                if (result.result !== undefined) {\n                    request.callback(null, result.result);\n\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        request: JSON.parse(request.payload),\n                        response: result.result,\n                        provider: this\n                    });\n\n                } else {\n                    let error: Error = null;\n                    if (result.error) {\n                        error = new Error(result.error.message || \"unknown error\");\n                        defineReadOnly(<any>error, \"code\", result.error.code || null);\n                        defineReadOnly(<any>error, \"response\", data);\n                    } else {\n                        error = new Error(\"unknown error\");\n                    }\n\n                    request.callback(error, undefined);\n\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        error: error,\n                        request: JSON.parse(request.payload),\n                        provider: this\n                    });\n\n                }\n\n            } else if (result.method === \"eth_subscription\") {\n                // Subscription...\n                const sub = this._subs[result.params.subscription];\n                if (sub) {\n                    //this.emit.apply(this,                  );\n                    sub.processFunc(result.params.result)\n                }\n\n            } else {\n                console.warn(\"this should not happen\");\n            }\n        };\n\n        // This Provider does not actually poll, but we want to trigger\n        // poll events for things that depend on them (like stalling for\n        // block and transaction lookups)\n        const fauxPoll = setInterval(() => {\n            this.emit(\"poll\");\n        }, 1000);\n        if (fauxPoll.unref) { fauxPoll.unref(); }\n    }\n\n    // Cannot narrow the type of _websocket, as that is not backwards compatible\n    // so we add a getter and let the WebSocket be a public API.\n    get websocket(): WebSocketLike { return this._websocket; }\n\n    detectNetwork(): Promise<Network> {\n        return this._detectNetwork;\n    }\n\n    get pollingInterval(): number {\n        return 0;\n    }\n\n    resetEventsBlock(blockNumber: number): void {\n        logger.throwError(\"cannot reset events block on WebSocketProvider\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"resetEventBlock\"\n        });\n    }\n\n    set pollingInterval(value: number) {\n        logger.throwError(\"cannot set polling interval on WebSocketProvider\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"setPollingInterval\"\n        });\n    }\n\n    async poll(): Promise<void> {\n        return null;\n    }\n\n    set polling(value: boolean) {\n        if (!value) { return; }\n\n        logger.throwError(\"cannot set polling on WebSocketProvider\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"setPolling\"\n        });\n    }\n\n    send(method: string, params?: Array<any>): Promise<any> {\n        const rid = NextId++;\n\n        return new Promise((resolve, reject) => {\n            function callback(error: Error, result: any) {\n                if (error) { return reject(error); }\n                return resolve(result);\n            }\n\n            const payload = JSON.stringify({\n                method: method,\n                params: params,\n                id: rid,\n                jsonrpc: \"2.0\"\n            });\n\n            this.emit(\"debug\", {\n                action: \"request\",\n                request: JSON.parse(payload),\n                provider: this\n            });\n\n            this._requests[String(rid)] = { callback, payload };\n\n            if (this._wsReady) { this.websocket.send(payload); }\n        });\n    }\n\n    static defaultUrl(): string {\n        return \"ws:/\\/localhost:8546\";\n    }\n\n    async _subscribe(tag: string, param: Array<any>, processFunc: (result: any) => void): Promise<void> {\n        let subIdPromise = this._subIds[tag];\n        if (subIdPromise == null) {\n            subIdPromise = Promise.all(param).then((param) => {\n                return this.send(\"eth_subscribe\", param);\n            });\n            this._subIds[tag] = subIdPromise;\n        }\n        const subId = await subIdPromise;\n        this._subs[subId] = { tag, processFunc };\n    }\n\n    _startEvent(event: Event): void {\n        switch (event.type) {\n            case \"block\":\n                this._subscribe(\"block\", [ \"newHeads\" ], (result: any) => {\n                    const blockNumber = BigNumber.from(result.number).toNumber();\n                    this._emitted.block = blockNumber;\n                    this.emit(\"block\", blockNumber);\n                });\n                break;\n\n            case \"pending\":\n                this._subscribe(\"pending\", [ \"newPendingTransactions\" ], (result: any) => {\n                    this.emit(\"pending\", result);\n                });\n                break;\n\n            case \"filter\":\n                this._subscribe(event.tag, [ \"logs\", this._getFilter(event.filter) ], (result: any) => {\n                    if (result.removed == null) { result.removed = false; }\n                    this.emit(event.filter, this.formatter.filterLog(result));\n                });\n                break;\n\n            case \"tx\": {\n                const emitReceipt = (event: Event) => {\n                    const hash = event.hash;\n                    this.getTransactionReceipt(hash).then((receipt) => {\n                        if (!receipt) { return; }\n                        this.emit(hash, receipt);\n                    });\n                };\n\n                // In case it is already mined\n                emitReceipt(event);\n\n                // To keep things simple, we start up a single newHeads subscription\n                // to keep an eye out for transactions we are watching for.\n                // Starting a subscription for an event (i.e. \"tx\") that is already\n                // running is (basically) a nop.\n                this._subscribe(\"tx\", [ \"newHeads\" ], (result: any) => {\n                    this._events.filter((e) => (e.type === \"tx\")).forEach(emitReceipt);\n                });\n                break;\n            }\n\n            // Nothing is needed\n            case \"debug\":\n            case \"poll\":\n            case \"willPoll\":\n            case \"didPoll\":\n            case \"error\":\n                break;\n\n            default:\n                console.log(\"unhandled:\", event);\n                break;\n        }\n    }\n\n    _stopEvent(event: Event): void {\n        let tag = event.tag;\n\n        if (event.type === \"tx\") {\n            // There are remaining transaction event listeners\n            if (this._events.filter((e) => (e.type === \"tx\")).length) {\n                return;\n            }\n            tag = \"tx\";\n        } else if (this.listenerCount(event.event)) {\n            // There are remaining event listeners\n            return;\n        }\n\n        const subId = this._subIds[tag];\n        if (!subId) { return; }\n\n       delete this._subIds[tag];\n       subId.then((subId) => {\n            if (!this._subs[subId]) { return; }\n            delete this._subs[subId];\n            this.send(\"eth_unsubscribe\", [ subId ]);\n        });\n    }\n\n    async destroy(): Promise<void> {\n        // Wait until we have connected before trying to disconnect\n        if (this.websocket.readyState === WebSocket.CONNECTING) {\n            await (new Promise((resolve) => {\n                this.websocket.onopen = function() {\n                    resolve(true);\n                };\n\n                this.websocket.onerror = function() {\n                    resolve(false);\n                };\n            }));\n        }\n\n        // Hangup\n        // See: https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes\n        this.websocket.close(1000);\n    }\n}\n", "\n\"use strict\";\n\nimport { Network, Networkish } from \"@ethersproject/networks\";\nimport { defineReadOnly, getStatic } from \"@ethersproject/properties\";\nimport { ConnectionInfo } from \"@ethersproject/web\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { CommunityResourcable } from \"./formatter\";\nimport { JsonRpcProvider, JsonRpcSigner } from \"./json-rpc-provider\";\n\ntype getUrlFunc = (network: Network, apiKey: string) => string | ConnectionInfo;\n\n// A StaticJsonRpcProvider is useful when you *know* for certain that\n// the backend will never change, as it never calls eth_chainId to\n// verify its backend. However, if the backend does change, the effects\n// are undefined and may include:\n// - inconsistent results\n// - locking up the UI\n// - block skew warnings\n// - wrong results\n// If the network is not explicit (i.e. auto-detection is expected), the\n// node MUST be running and available to respond to requests BEFORE this\n// is instantiated.\nexport class StaticJsonRpcProvider extends JsonRpcProvider {\n    async detectNetwork(): Promise<Network> {\n        let network = this.network;\n        if (network == null) {\n            network = await super.detectNetwork();\n\n            if (!network) {\n                logger.throwError(\"no network detected\", Logger.errors.UNKNOWN_ERROR, { });\n            }\n\n            // If still not set, set it\n            if (this._network == null) {\n                // A static network does not support \"any\"\n                defineReadOnly(this, \"_network\", network);\n\n                this.emit(\"network\", network, null);\n            }\n        }\n        return network;\n    }\n}\n\nexport abstract class UrlJsonRpcProvider extends StaticJsonRpcProvider implements CommunityResourcable {\n    readonly apiKey: any;\n\n    constructor(network?: Networkish, apiKey?: any) {\n        logger.checkAbstract(new.target, UrlJsonRpcProvider);\n\n        // Normalize the Network and API Key\n        network = getStatic<(network: Networkish) => Network>(new.target, \"getNetwork\")(network);\n        apiKey = getStatic<(apiKey: string) => string>(new.target, \"getApiKey\")(apiKey);\n\n        const connection = getStatic<getUrlFunc>(new.target, \"getUrl\")(network, apiKey);\n\n        super(connection, network);\n\n        if (typeof(apiKey) === \"string\") {\n            defineReadOnly(this, \"apiKey\", apiKey);\n        } else if (apiKey != null) {\n            Object.keys(apiKey).forEach((key) => {\n                defineReadOnly<any, any>(this, key, apiKey[key]);\n            });\n        }\n    }\n\n    _startPending(): void {\n        logger.warn(\"WARNING: API provider does not support pending filters\");\n    }\n\n    isCommunityResource(): boolean {\n        return false;\n    }\n\n    getSigner(address?: string): JsonRpcSigner {\n        return logger.throwError(\n            \"API provider does not support signing\",\n            Logger.errors.UNSUPPORTED_OPERATION,\n            { operation: \"getSigner\" }\n        );\n    }\n\n    listAccounts(): Promise<Array<string>> {\n        return Promise.resolve([]);\n    }\n\n    // Return a defaultApiKey if null, otherwise validate the API key\n    static getApiKey(apiKey: any): any {\n        return apiKey;\n    }\n\n    // Returns the url or connection for the given network and API key. The\n    // API key will have been sanitized by the getApiKey first, so any validation\n    // or transformations can be done there.\n    static getUrl(network: Network, apiKey: any): string | ConnectionInfo {\n        return logger.throwError(\"not implemented; sub-classes must override getUrl\", Logger.errors.NOT_IMPLEMENTED, {\n            operation: \"getUrl\"\n        });\n    }\n}\n", "\"use strict\";\n\nimport { Network, Networkish } from \"@ethersproject/networks\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { ConnectionInfo } from \"@ethersproject/web\";\n\nimport { CommunityResourcable, showThrottleMessage } from \"./formatter\";\nimport { WebSocketProvider } from \"./websocket-provider\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n\n// This key was provided to ethers.js by Alchemy to be used by the\n// default provider, but it is recommended that for your own\n// production environments, that you acquire your own API key at:\n//   https://dashboard.alchemyapi.io\n\nconst defaultApiKey = \"_gg7wSSi0KMBsdKnGVfHDueq6xMB9EkC\"\n\nexport class AlchemyWebSocketProvider extends WebSocketProvider implements CommunityResourcable {\n    readonly apiKey: string;\n\n    constructor(network?: Networkish, apiKey?: any) {\n        const provider = new AlchemyProvider(network, apiKey);\n\n        const url = provider.connection.url.replace(/^http/i, \"ws\")\n                                           .replace(\".alchemyapi.\", \".ws.alchemyapi.\");\n\n        super(url, provider.network);\n        defineReadOnly(this, \"apiKey\", provider.apiKey);\n    }\n\n    isCommunityResource(): boolean {\n        return (this.apiKey === defaultApiKey);\n    }\n}\n\nexport class AlchemyProvider extends UrlJsonRpcProvider {\n\n    static getWebSocketProvider(network?: Networkish, apiKey?: any): AlchemyWebSocketProvider {\n        return new AlchemyWebSocketProvider(network, apiKey);\n    }\n\n    static getApiKey(apiKey: any): any {\n        if (apiKey == null) { return defaultApiKey; }\n        if (apiKey && typeof(apiKey) !== \"string\") {\n            logger.throwArgumentError(\"invalid apiKey\", \"apiKey\", apiKey);\n        }\n        return apiKey;\n    }\n\n    static getUrl(network: Network, apiKey: string): ConnectionInfo {\n        let host = null;\n        switch (network.name) {\n            case \"homestead\":\n                host = \"eth-mainnet.alchemyapi.io/v2/\";\n                break;\n            case \"goerli\":\n                host = \"eth-goerli.g.alchemy.com/v2/\";\n                break;\n            case \"matic\":\n                host = \"polygon-mainnet.g.alchemy.com/v2/\";\n                break;\n            case \"maticmum\":\n                host = \"polygon-mumbai.g.alchemy.com/v2/\";\n                break;\n            case \"arbitrum\":\n                host = \"arb-mainnet.g.alchemy.com/v2/\";\n                break;\n            case \"arbitrum-goerli\":\n                host = \"arb-goerli.g.alchemy.com/v2/\";\n                break;\n            case \"optimism\":\n                host = \"opt-mainnet.g.alchemy.com/v2/\";\n                break;\n            case \"optimism-goerli\":\n                host = \"opt-goerli.g.alchemy.com/v2/\"\n                break;\n            default:\n               logger.throwArgumentError(\"unsupported network\", \"network\", arguments[0]);\n        }\n\n        return {\n            allowGzip: true,\n            url: (\"https:/\" + \"/\" + host + apiKey),\n            throttleCallback: (attempt: number, url: string) => {\n                if (apiKey === defaultApiKey) {\n                    showThrottleMessage();\n                }\n                return Promise.resolve(true);\n            }\n        };\n    }\n\n    isCommunityResource(): boolean {\n        return (this.apiKey === defaultApiKey);\n    }\n}\n", "\nimport { Network } from \"@ethersproject/networks\";\n\nimport { showThrottleMessage } from \"./formatter\";\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n\nimport type { ConnectionInfo } from \"@ethersproject/web\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n\nconst defaultApiKey = \"9f7d929b018cdffb338517efa06f58359e86ff1ffd350bc889738523659e7972\";\n\nfunction getHost(name: string): string {\n    switch (name) {\n        case \"homestead\":\n            return \"rpc.ankr.com/eth/\";\n        case \"ropsten\":\n            return \"rpc.ankr.com/eth_ropsten/\";\n        case \"rinkeby\":\n            return \"rpc.ankr.com/eth_rinkeby/\";\n        case \"goerli\":\n            return \"rpc.ankr.com/eth_goerli/\";\n\n        case \"matic\":\n            return \"rpc.ankr.com/polygon/\";\n\n        case \"arbitrum\":\n            return \"rpc.ankr.com/arbitrum/\";\n    }\n    return logger.throwArgumentError(\"unsupported network\", \"name\", name);\n}\n\nexport class AnkrProvider extends UrlJsonRpcProvider {\n    readonly apiKey: string;\n\n    isCommunityResource(): boolean {\n        return (this.apiKey === defaultApiKey);\n    }\n\n    static getApiKey(apiKey: any): any {\n        if (apiKey == null) { return defaultApiKey; }\n        return apiKey;\n    }\n\n    static getUrl(network: Network, apiKey: any): ConnectionInfo {\n        if (apiKey == null) { apiKey = defaultApiKey; }\n        const connection: ConnectionInfo = {\n            allowGzip: true,\n            url: (\"https:/\\/\" + getHost(network.name) + apiKey),\n            throttleCallback: (attempt: number, url: string) => {\n                if (apiKey.apiKey === defaultApiKey) {\n                    showThrottleMessage();\n                }\n                return Promise.resolve(true);\n            }\n        };\n\n        if (apiKey.projectSecret != null) {\n            connection.user = \"\";\n            connection.password = apiKey.projectSecret\n        }\n\n        return connection;\n    }\n}\n", "\"use strict\";\n\nimport { Network } from \"@ethersproject/networks\";\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nexport class CloudflareProvider extends UrlJsonRpcProvider {\n\n    static getApiKey(apiKey: any): any {\n        if (apiKey != null) {\n            logger.throwArgumentError(\"apiKey not supported for cloudflare\", \"apiKey\", apiKey);\n        }\n        return null;\n    }\n\n    static getUrl(network: Network, apiKey?: any): string {\n        let host = null;\n        switch (network.name) {\n            case \"homestead\":\n                host = \"https://cloudflare-eth.com/\";\n                break;\n            default:\n               logger.throwArgumentError(\"unsupported network\", \"network\", arguments[0]);\n        }\n\n        return host;\n    }\n\n    async perform(method: string, params: any): Promise<any> {\n        // The Cloudflare provider does not support eth_blockNumber,\n        // so we get the latest block and pull it from that\n        if (method === \"getBlockNumber\") {\n            const block = await super.perform(\"getBlock\", { blockTag: \"latest\" });\n            return block.number;\n        }\n\n        return super.perform(method, params);\n    }\n}\n", "\"use strict\";\n\nimport { BlockTag, TransactionRequest, TransactionResponse } from \"@ethersproject/abstract-provider\";\nimport { hexlify, hexValue, isHexString } from \"@ethersproject/bytes\";\nimport { Network, Networkish } from \"@ethersproject/networks\";\nimport { deepCopy, defineReadOnly } from \"@ethersproject/properties\";\nimport { accessListify } from \"@ethersproject/transactions\";\nimport { ConnectionInfo, fetchJson } from \"@ethersproject/web\";\n\nimport { showThrottleMessage } from \"./formatter\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { BaseProvider } from \"./base-provider\";\n\n\n// The transaction has already been sanitized by the calls in Provider\nfunction getTransactionPostData(transaction: TransactionRequest): Record<string, string> {\n    const result: Record<string, string> = { };\n    for (let key in transaction) {\n        if ((<any>transaction)[key] == null) { continue; }\n        let value = (<any>transaction)[key];\n        if (key === \"type\" && value === 0) { continue; }\n\n        // Quantity-types require no leading zero, unless 0\n        if ((<any>{ type: true, gasLimit: true, gasPrice: true, maxFeePerGs: true, maxPriorityFeePerGas: true, nonce: true, value: true })[key]) {\n            value = hexValue(hexlify(value));\n        } else if (key === \"accessList\") {\n            value = \"[\" + accessListify(value).map((set) => {\n                return `{address:\"${ set.address }\",storageKeys:[\"${ set.storageKeys.join('\",\"') }\"]}`;\n            }).join(\",\") + \"]\";\n        } else {\n            value = hexlify(value);\n        }\n        result[key] = value;\n    }\n    return result;\n}\n\nfunction getResult(result: { status?: number, message?: string, result?: any }): any {\n    // getLogs, getHistory have weird success responses\n    if (result.status == 0 && (result.message === \"No records found\" || result.message === \"No transactions found\")) {\n        return result.result;\n    }\n\n    if (result.status != 1 || typeof(result.message) !== \"string\" || !result.message.match(/^OK/)) {\n        const error: any = new Error(\"invalid response\");\n        error.result = JSON.stringify(result);\n        if ((result.result || \"\").toLowerCase().indexOf(\"rate limit\") >= 0) {\n            error.throttleRetry = true;\n        }\n        throw error;\n    }\n\n    return result.result;\n}\n\nfunction getJsonResult(result: { jsonrpc: string, result?: any, error?: { code?: number, data?: any, message?: string} } ): any {\n    // This response indicates we are being throttled\n    if (result && (<any>result).status == 0 && (<any>result).message == \"NOTOK\" && (result.result || \"\").toLowerCase().indexOf(\"rate limit\") >= 0) {\n        const error: any = new Error(\"throttled response\");\n        error.result = JSON.stringify(result);\n        error.throttleRetry = true;\n        throw error;\n    }\n\n    if (result.jsonrpc != \"2.0\") {\n        // @TODO: not any\n        const error: any = new Error(\"invalid response\");\n        error.result = JSON.stringify(result);\n        throw error;\n    }\n\n    if (result.error) {\n        // @TODO: not any\n        const error: any = new Error(result.error.message || \"unknown error\");\n        if (result.error.code) { error.code = result.error.code; }\n        if (result.error.data) { error.data = result.error.data; }\n        throw error;\n    }\n\n    return result.result;\n}\n\n// The blockTag was normalized as a string by the Provider pre-perform operations\nfunction checkLogTag(blockTag: string): number | \"latest\" {\n    if (blockTag === \"pending\") { throw new Error(\"pending not supported\"); }\n    if (blockTag === \"latest\") { return blockTag; }\n\n    return parseInt(blockTag.substring(2), 16);\n}\n\n\nfunction checkError(method: string, error: any, transaction: any): any {\n    // Undo the \"convenience\" some nodes are attempting to prevent backwards\n    // incompatibility; maybe for v6 consider forwarding reverts as errors\n    if (method === \"call\" && error.code === Logger.errors.SERVER_ERROR) {\n        const e = error.error;\n\n        // Etherscan keeps changing their string\n        if (e && (e.message.match(/reverted/i) || e.message.match(/VM execution error/i))) {\n            // Etherscan prefixes the data like \"Reverted 0x1234\"\n            let data = e.data;\n            if (data) { data = \"0x\" + data.replace(/^.*0x/i, \"\"); }\n\n            if (isHexString(data)) { return data; }\n\n            logger.throwError(\"missing revert data in call exception\", Logger.errors.CALL_EXCEPTION, {\n                error, data: \"0x\"\n            });\n        }\n    }\n\n    // Get the message from any nested error structure\n    let message = error.message;\n    if (error.code === Logger.errors.SERVER_ERROR) {\n        if (error.error && typeof(error.error.message) === \"string\") {\n            message = error.error.message;\n        } else if (typeof(error.body) === \"string\") {\n            message = error.body;\n        } else if (typeof(error.responseText) === \"string\") {\n            message = error.responseText;\n        }\n    }\n    message = (message || \"\").toLowerCase();\n\n    // \"Insufficient funds. The account you tried to send transaction from does not have enough funds. Required 21464000000000 and got: 0\"\n    if (message.match(/insufficient funds/)) {\n        logger.throwError(\"insufficient funds for intrinsic transaction cost\", Logger.errors.INSUFFICIENT_FUNDS, {\n           error, method, transaction\n        });\n    }\n\n    // \"Transaction with the same hash was already imported.\"\n    if (message.match(/same hash was already imported|transaction nonce is too low|nonce too low/)) {\n        logger.throwError(\"nonce has already been used\", Logger.errors.NONCE_EXPIRED, {\n           error, method, transaction\n        });\n    }\n\n    // \"Transaction gas price is too low. There is another transaction with same nonce in the queue. Try increasing the gas price or incrementing the nonce.\"\n    if (message.match(/another transaction with same nonce/)) {\n         logger.throwError(\"replacement fee too low\", Logger.errors.REPLACEMENT_UNDERPRICED, {\n            error, method, transaction\n         });\n    }\n\n    if (message.match(/execution failed due to an exception|execution reverted/)) {\n        logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n            error, method, transaction\n        });\n    }\n\n    throw error;\n}\n\nexport class EtherscanProvider extends BaseProvider{\n    readonly baseUrl: string;\n    readonly apiKey: string | null;\n\n    constructor(network?: Networkish, apiKey?: string) {\n        super(network);\n\n        defineReadOnly(this, \"baseUrl\", this.getBaseUrl());\n        defineReadOnly(this, \"apiKey\", apiKey || null);\n    }\n\n    getBaseUrl(): string {\n        switch(this.network ? this.network.name: \"invalid\") {\n            case \"homestead\":\n                return \"https:/\\/api.etherscan.io\";\n            case \"goerli\":\n                return \"https:/\\/api-goerli.etherscan.io\";\n            case \"sepolia\":\n                return \"https:/\\/api-sepolia.etherscan.io\";\n            case \"matic\":\n                return \"https:/\\/api.polygonscan.com\";\n            case \"maticmum\":\n                return \"https:/\\/api-testnet.polygonscan.com\";\n            case \"arbitrum\":\n                return \"https:/\\/api.arbiscan.io\";\n            case \"arbitrum-goerli\":\n                return \"https:/\\/api-goerli.arbiscan.io\";\n            case \"optimism\":\n                return \"https:/\\/api-optimistic.etherscan.io\";\n            case \"optimism-goerli\":\n                return \"https:/\\/api-goerli-optimistic.etherscan.io\";\n            default:\n        }\n\n        return logger.throwArgumentError(\"unsupported network\", \"network\", this.network.name);\n    }\n\n    getUrl(module: string, params: Record<string, string>): string {\n        const query = Object.keys(params).reduce((accum, key) => {\n            const value = params[key];\n            if (value != null) {\n                accum += `&${ key }=${ value }`\n            }\n            return accum\n        }, \"\");\n        const apiKey = ((this.apiKey) ? `&apikey=${ this.apiKey }`: \"\");\n        return `${ this.baseUrl }/api?module=${ module }${ query }${ apiKey }`;\n    }\n\n    getPostUrl(): string {\n        return `${ this.baseUrl }/api`;\n    }\n\n    getPostData(module: string, params: Record<string, any>): Record<string, any> {\n        params.module = module;\n        params.apikey = this.apiKey;\n        return params;\n    }\n\n    async fetch(module: string, params: Record<string, any>, post?: boolean): Promise<any> {\n        const url = (post ? this.getPostUrl(): this.getUrl(module, params));\n        const payload = (post ? this.getPostData(module, params): null);\n        const procFunc = (module === \"proxy\") ? getJsonResult: getResult;\n\n        this.emit(\"debug\", {\n            action: \"request\",\n            request: url,\n            provider: this\n        });\n\n        const connection: ConnectionInfo = {\n            url: url,\n            throttleSlotInterval: 1000,\n            throttleCallback: (attempt: number, url: string) => {\n                if (this.isCommunityResource()) {\n                    showThrottleMessage();\n                }\n                return Promise.resolve(true);\n            }\n        };\n\n        let payloadStr: string = null;\n        if (payload) {\n            connection.headers = { \"content-type\": \"application/x-www-form-urlencoded; charset=UTF-8\" };\n            payloadStr = Object.keys(payload).map((key) => {\n                return `${ key }=${ payload[key] }`\n            }).join(\"&\");\n        }\n\n        const result = await fetchJson(connection, payloadStr, procFunc || getJsonResult);\n\n        this.emit(\"debug\", {\n            action: \"response\",\n            request: url,\n            response: deepCopy(result),\n            provider: this\n        });\n\n        return result;\n    }\n\n    async detectNetwork(): Promise<Network> {\n        return this.network;\n    }\n\n    async perform(method: string, params: any): Promise<any> {\n\n        switch (method) {\n            case \"getBlockNumber\":\n                return this.fetch(\"proxy\", { action: \"eth_blockNumber\" });\n\n            case \"getGasPrice\":\n                return this.fetch(\"proxy\", { action: \"eth_gasPrice\" });\n\n            case \"getBalance\":\n                // Returns base-10 result\n                return this.fetch(\"account\", {\n                    action: \"balance\",\n                    address: params.address,\n                    tag: params.blockTag\n                });\n\n            case \"getTransactionCount\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_getTransactionCount\",\n                    address: params.address,\n                    tag: params.blockTag\n                });\n\n            case \"getCode\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_getCode\",\n                    address: params.address,\n                    tag: params.blockTag\n                });\n\n            case \"getStorageAt\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_getStorageAt\",\n                    address: params.address,\n                    position: params.position,\n                    tag: params.blockTag\n                });\n\n            case \"sendTransaction\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_sendRawTransaction\",\n                    hex: params.signedTransaction\n                }, true).catch((error) => {\n                    return checkError(\"sendTransaction\", error, params.signedTransaction);\n                });\n\n            case \"getBlock\":\n                if (params.blockTag) {\n                    return this.fetch(\"proxy\", {\n                        action: \"eth_getBlockByNumber\",\n                        tag: params.blockTag,\n                        boolean: (params.includeTransactions ? \"true\": \"false\")\n                    });\n                }\n                throw new Error(\"getBlock by blockHash not implemented\");\n\n            case \"getTransaction\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_getTransactionByHash\",\n                    txhash: params.transactionHash\n                });\n\n            case \"getTransactionReceipt\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_getTransactionReceipt\",\n                    txhash: params.transactionHash\n                });\n\n            case \"call\": {\n                if (params.blockTag !== \"latest\") {\n                    throw new Error(\"EtherscanProvider does not support blockTag for call\");\n                }\n\n                const postData = getTransactionPostData(params.transaction);\n                postData.module = \"proxy\";\n                postData.action = \"eth_call\";\n\n                try {\n                    return await this.fetch(\"proxy\", postData, true);\n                } catch (error) {\n                    return checkError(\"call\", error, params.transaction);\n                }\n            }\n\n            case \"estimateGas\": {\n                const postData = getTransactionPostData(params.transaction);\n                postData.module = \"proxy\";\n                postData.action = \"eth_estimateGas\";\n\n                try {\n                    return await this.fetch(\"proxy\", postData, true);\n                } catch (error) {\n                    return checkError(\"estimateGas\", error, params.transaction);\n                }\n            }\n\n            case \"getLogs\": {\n                const args: Record<string, any> = { action: \"getLogs\" }\n\n                if (params.filter.fromBlock) {\n                    args.fromBlock = checkLogTag(params.filter.fromBlock);\n                }\n\n                if (params.filter.toBlock) {\n                    args.toBlock = checkLogTag(params.filter.toBlock);\n                }\n\n                if (params.filter.address) {\n                    args.address = params.filter.address;\n                }\n\n                // @TODO: We can handle slightly more complicated logs using the logs API\n                if (params.filter.topics && params.filter.topics.length > 0) {\n                    if (params.filter.topics.length > 1) {\n                        logger.throwError(\"unsupported topic count\", Logger.errors.UNSUPPORTED_OPERATION, { topics: params.filter.topics });\n                    }\n\n                    if (params.filter.topics.length === 1) {\n                        const topic0 = params.filter.topics[0];\n                        if (typeof(topic0) !== \"string\" || topic0.length !== 66) {\n                            logger.throwError(\"unsupported topic format\", Logger.errors.UNSUPPORTED_OPERATION, { topic0: topic0 });\n                        }\n                        args.topic0 = topic0;\n                    }\n                }\n\n                const logs: Array<any> = await this.fetch(\"logs\", args);\n\n                // Cache txHash => blockHash\n                let blocks: { [tag: string]: string } = {};\n\n                // Add any missing blockHash to the logs\n                for (let i = 0; i < logs.length; i++) {\n                    const log = logs[i];\n                    if (log.blockHash != null) { continue; }\n                    if (blocks[log.blockNumber] == null) {\n                        const block = await this.getBlock(log.blockNumber);\n                        if (block) {\n                            blocks[log.blockNumber] = block.hash;\n                        }\n                    }\n                    log.blockHash = blocks[log.blockNumber];\n                }\n\n                return logs;\n            }\n\n            case \"getEtherPrice\":\n                if (this.network.name !== \"homestead\") { return 0.0; }\n                return parseFloat((await this.fetch(\"stats\", { action: \"ethprice\" })).ethusd);\n\n            default:\n                break;\n         }\n\n        return super.perform(method, params);\n    }\n\n    // Note: The `page` page parameter only allows pagination within the\n    //       10,000 window available without a page and offset parameter\n    //       Error: Result window is too large, PageNo x Offset size must\n    //              be less than or equal to 10000\n    async getHistory(addressOrName: string | Promise<string>, startBlock?: BlockTag, endBlock?: BlockTag): Promise<Array<TransactionResponse>> {\n        const params = {\n            action: \"txlist\",\n            address: (await this.resolveName(addressOrName)),\n            startblock: ((startBlock == null) ? 0: startBlock),\n            endblock: ((endBlock == null) ? 99999999: endBlock),\n            sort: \"asc\"\n        };\n\n        const result = await this.fetch(\"account\", params);\n\n        return result.map((tx: any) => {\n            [\"contractAddress\", \"to\"].forEach(function(key) {\n                if (tx[key] == \"\") { delete tx[key]; }\n            });\n            if (tx.creates == null && tx.contractAddress != null) {\n                tx.creates = tx.contractAddress;\n            }\n            const item = this.formatter.transactionResponse(tx);\n            if (tx.timeStamp) { item.timestamp = parseInt(tx.timeStamp); }\n            return item;\n        });\n    }\n\n    isCommunityResource(): boolean {\n        return (this.apiKey == null);\n    }\n}\n", "export const version = \"random/5.7.0\";\n", "\"use strict\";\n\nimport { arrayify } from \"@ethersproject/bytes\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n// Debugging line for testing browser lib in node\n//const window = { crypto: { getRandomValues: () => { } } };\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/globalThis\nfunction getGlobal(): any {\n  if (typeof self !== 'undefined') { return self; }\n  if (typeof window !== 'undefined') { return window; }\n  if (typeof global !== 'undefined') { return global; }\n  throw new Error('unable to locate global object');\n};\n\nconst anyGlobal = getGlobal();\n\nlet crypto: any = anyGlobal.crypto || anyGlobal.msCrypto;\nif (!crypto || !crypto.getRandomValues) {\n\n    logger.warn(\"WARNING: Missing strong random number source\");\n\n    crypto = {\n        getRandomValues: function(buffer: Uint8Array): Uint8Array {\n            return logger.throwError(\"no secure random source avaialble\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"crypto.getRandomValues\"\n            });\n        }\n    };\n}\n\nexport function randomBytes(length: number): Uint8Array {\n    if (length <= 0 || length > 1024 || (length % 1) || length != length) {\n        logger.throwArgumentError(\"invalid length\", \"length\", length);\n    }\n\n    const result = new Uint8Array(length);\n    crypto.getRandomValues(result);\n    return arrayify(result);\n};\n", "\"use strict\";\n\nexport function shuffled(array: Array<any>): Array<any> {\n    array = array.slice();\n\n    for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        const tmp = array[i];\n        array[i] = array[j];\n        array[j] = tmp;\n    }\n\n    return array;\n}\n", "\"use strict\";\n\nexport { randomBytes } from \"./random\";\nexport { shuffled } from \"./shuffle\";\n", "\"use strict\";\n\nimport { Block, BlockWithTransactions, Provider } from \"@ethersproject/abstract-provider\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { isHexString } from \"@ethersproject/bytes\";\nimport { Network } from \"@ethersproject/networks\";\nimport { deepCopy, defineReadOnly, shallowCopy } from \"@ethersproject/properties\";\nimport { shuffled } from \"@ethersproject/random\";\nimport { poll } from \"@ethersproject/web\";\n\nimport { BaseProvider } from \"./base-provider\";\nimport { isCommunityResource } from \"./formatter\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nfunction now() { return (new Date()).getTime(); }\n\n// Returns to network as long as all agree, or null if any is null.\n// Throws an error if any two networks do not match.\nfunction checkNetworks(networks: Array<Network>): Network {\n    let result = null;\n\n    for (let i = 0; i < networks.length; i++) {\n        const network = networks[i];\n\n        // Null! We do not know our network; bail.\n        if (network == null) { return null; }\n\n        if (result) {\n            // Make sure the network matches the previous networks\n            if (!(result.name === network.name && result.chainId === network.chainId &&\n                ((result.ensAddress === network.ensAddress) || (result.ensAddress == null && network.ensAddress == null)))) {\n\n                logger.throwArgumentError(\"provider mismatch\", \"networks\", networks);\n           }\n        } else {\n            result = network;\n        }\n    }\n\n    return result;\n}\n\nfunction median(values: Array<number>, maxDelta?: number): number {\n    values = values.slice().sort();\n    const middle = Math.floor(values.length / 2);\n\n    // Odd length; take the middle\n    if (values.length % 2) {\n        return values[middle];\n    }\n\n    // Even length; take the average of the two middle\n    const a = values[middle - 1], b = values[middle];\n\n    if (maxDelta != null && Math.abs(a - b) > maxDelta) {\n        return null;\n    }\n\n    return (a + b) / 2;\n}\n\nfunction serialize(value: any): string {\n    if (value === null) {\n        return \"null\";\n    } else if (typeof(value) === \"number\" || typeof(value) === \"boolean\") {\n        return JSON.stringify(value);\n    } else if (typeof(value) === \"string\") {\n        return value;\n    } else if (BigNumber.isBigNumber(value)) {\n        return value.toString();\n    } else if (Array.isArray(value)) {\n        return JSON.stringify(value.map((i) => serialize(i)));\n    } else if (typeof(value) === \"object\") {\n        const keys = Object.keys(value);\n        keys.sort();\n        return \"{\" + keys.map((key) => {\n            let v = value[key];\n            if (typeof(v) === \"function\") {\n                v = \"[function]\";\n            } else {\n                v = serialize(v);\n            }\n            return JSON.stringify(key) + \":\" + v;\n        }).join(\",\") + \"}\";\n    }\n\n    throw new Error(\"unknown value type: \" + typeof(value));\n}\n\n// Next request ID to use for emitting debug info\nlet nextRid = 1;\n\n\nexport interface FallbackProviderConfig {\n    // The Provider\n    provider: Provider;\n\n    // The priority to favour this Provider; lower values are used first (higher priority)\n    priority?: number;\n\n    // Timeout before also triggering the next provider; this does not stop\n    // this provider and if its result comes back before a quorum is reached\n    // it will be incorporated into the vote\n    // - lower values will cause more network traffic but may result in a\n    //   faster result.\n    stallTimeout?: number;\n\n    // How much this provider contributes to the quorum; sometimes a specific\n    // provider may be more reliable or trustworthy than others, but usually\n    // this should be left as the default\n    weight?: number;\n};\n\n// A Staller is used to provide a delay to give a Provider a chance to response\n// before asking the next Provider to try.\ntype Staller = {\n    wait: (func: () => void) => Promise<void>\n    getPromise: () => Promise<void>,\n    cancel: () => void\n};\n\nfunction stall(duration: number): Staller {\n    let cancel: () => void = null;\n\n    let timer: NodeJS.Timer = null;\n    let promise = <Promise<void>>(new Promise((resolve) => {\n        cancel = function() {\n            if (timer) {\n                clearTimeout(timer);\n                timer = null;\n            }\n            resolve();\n        }\n        timer = setTimeout(cancel, duration);\n    }));\n\n    const wait = (func: () => void) => {\n        promise = promise.then(func);\n        return promise;\n    }\n\n    function getPromise(): Promise<void> {\n        return promise;\n    }\n\n    return { cancel, getPromise, wait };\n}\n\nconst ForwardErrors = [\n    Logger.errors.CALL_EXCEPTION,\n    Logger.errors.INSUFFICIENT_FUNDS,\n    Logger.errors.NONCE_EXPIRED,\n    Logger.errors.REPLACEMENT_UNDERPRICED,\n    Logger.errors.UNPREDICTABLE_GAS_LIMIT\n];\n\nconst ForwardProperties = [\n    \"address\",\n    \"args\",\n    \"errorArgs\",\n    \"errorSignature\",\n    \"method\",\n    \"transaction\",\n];\n\n\n// @TODO: Make this an object with staller and cancel built-in\ninterface RunningConfig extends FallbackProviderConfig {\n    start?: number;\n    done?: boolean;\n    cancelled?: boolean;\n    runner?: Promise<any>;\n    staller?: Staller;\n    result?: any;\n    error?: Error;\n};\n\nfunction exposeDebugConfig(config: RunningConfig, now?: number): any {\n    const result: any = {\n        weight: config.weight\n    };\n    Object.defineProperty(result, \"provider\", { get: () => config.provider });\n    if (config.start) { result.start = config.start; }\n    if (now) { result.duration = (now - config.start); }\n    if (config.done) {\n        if (config.error) {\n            result.error = config.error;\n        } else {\n            result.result = config.result || null;\n        }\n    }\n    return result;\n}\n\nfunction normalizedTally(normalize: (value: any) => string, quorum: number): (configs: Array<RunningConfig>) => any {\n    return function(configs: Array<RunningConfig>): any {\n\n        // Count the votes for each result\n        const tally: { [ key: string]: { count: number, result: any } } = { };\n        configs.forEach((c) => {\n            const value = normalize(c.result);\n            if (!tally[value]) { tally[value] = { count: 0, result: c.result }; }\n            tally[value].count++;\n        });\n\n        // Check for a quorum on any given result\n        const keys = Object.keys(tally);\n        for (let i = 0; i < keys.length; i++) {\n            const check = tally[keys[i]];\n            if (check.count >= quorum) {\n                return check.result;\n            }\n        }\n\n        // No quroum\n        return undefined;\n    }\n}\nfunction getProcessFunc(provider: FallbackProvider, method: string, params: { [ key: string ]: any }): (configs: Array<RunningConfig>) => any {\n\n    let normalize = serialize;\n\n    switch (method) {\n        case \"getBlockNumber\":\n            // Return the median value, unless there is (median + 1) is also\n            // present, in which case that is probably true and the median\n            // is going to be stale soon. In the event of a malicious node,\n            // the lie will be true soon enough.\n            return function(configs: Array<RunningConfig>): number {\n                const values = configs.map((c) => c.result);\n\n                // Get the median block number\n                let blockNumber = median(configs.map((c) => c.result), 2);\n                if (blockNumber == null) { return undefined; }\n\n                blockNumber = Math.ceil(blockNumber);\n\n                // If the next block height is present, its prolly safe to use\n                if (values.indexOf(blockNumber + 1) >= 0) { blockNumber++; }\n\n                // Don't ever roll back the blockNumber\n                if (blockNumber >= provider._highestBlockNumber) {\n                    provider._highestBlockNumber = blockNumber;\n                }\n\n                return provider._highestBlockNumber;\n            };\n\n        case \"getGasPrice\":\n            // Return the middle (round index up) value, similar to median\n            // but do not average even entries and choose the higher.\n            // Malicious actors must compromise 50% of the nodes to lie.\n            return function(configs: Array<RunningConfig>): BigNumber {\n                const values = configs.map((c) => c.result);\n                values.sort();\n                return values[Math.floor(values.length / 2)];\n            }\n\n        case \"getEtherPrice\":\n            // Returns the median price. Malicious actors must compromise at\n            // least 50% of the nodes to lie (in a meaningful way).\n            return function(configs: Array<RunningConfig>): number {\n                return median(configs.map((c) => c.result));\n            }\n\n        // No additional normalizing required; serialize is enough\n        case \"getBalance\":\n        case \"getTransactionCount\":\n        case \"getCode\":\n        case \"getStorageAt\":\n        case \"call\":\n        case \"estimateGas\":\n        case \"getLogs\":\n            break;\n\n        // We drop the confirmations from transactions as it is approximate\n        case \"getTransaction\":\n        case \"getTransactionReceipt\":\n            normalize = function(tx: any): string {\n                if (tx == null) { return null; }\n\n                tx = shallowCopy(tx);\n                tx.confirmations = -1;\n                return serialize(tx);\n            }\n            break;\n\n        // We drop the confirmations from transactions as it is approximate\n        case \"getBlock\":\n            // We drop the confirmations from transactions as it is approximate\n            if (params.includeTransactions) {\n                normalize = function(block: BlockWithTransactions): string {\n                    if (block == null) { return null; }\n\n                    block = shallowCopy(block);\n                    block.transactions = block.transactions.map((tx) => {\n                        tx = shallowCopy(tx);\n                        tx.confirmations = -1;\n                        return tx;\n                    });\n                    return serialize(block);\n                };\n            } else {\n                normalize = function(block: Block): string {\n                    if (block == null) { return null; }\n                    return serialize(block);\n                }\n            }\n            break;\n\n        default:\n            throw new Error(\"unknown method: \" + method);\n    }\n\n    // Return the result if and only if the expected quorum is\n    // satisfied and agreed upon for the final result.\n    return normalizedTally(normalize, provider.quorum);\n\n}\n\n// If we are doing a blockTag query, we need to make sure the backend is\n// caught up to the FallbackProvider, before sending a request to it.\nasync function waitForSync(config: RunningConfig, blockNumber: number): Promise<BaseProvider> {\n    const provider = <BaseProvider>(config.provider);\n\n    if ((provider.blockNumber != null && provider.blockNumber >= blockNumber) || blockNumber === -1) {\n        return provider;\n    }\n\n    return poll(() => {\n        return new Promise((resolve, reject) => {\n            setTimeout(function() {\n\n                // We are synced\n                if (provider.blockNumber >= blockNumber) { return resolve(provider); }\n\n                // We're done; just quit\n                if (config.cancelled) { return resolve(null); }\n\n                // Try again, next block\n                return resolve(undefined);\n            }, 0);\n        });\n    }, { oncePoll: provider });\n}\n\nasync function getRunner(config: RunningConfig, currentBlockNumber: number, method: string, params: { [ key: string]: any }): Promise<any> {\n    let provider = config.provider;\n\n    switch (method) {\n        case \"getBlockNumber\":\n        case \"getGasPrice\":\n            return provider[method]();\n        case \"getEtherPrice\":\n            if ((<any>provider).getEtherPrice) {\n                return (<any>provider).getEtherPrice();\n            }\n            break;\n        case \"getBalance\":\n        case \"getTransactionCount\":\n        case \"getCode\":\n            if (params.blockTag && isHexString(params.blockTag)) {\n                provider = await waitForSync(config, currentBlockNumber)\n            }\n            return provider[method](params.address, params.blockTag || \"latest\");\n        case \"getStorageAt\":\n            if (params.blockTag && isHexString(params.blockTag)) {\n                provider = await waitForSync(config, currentBlockNumber)\n            }\n            return provider.getStorageAt(params.address, params.position, params.blockTag || \"latest\");\n        case \"getBlock\":\n            if (params.blockTag && isHexString(params.blockTag)) {\n                provider = await waitForSync(config, currentBlockNumber)\n            }\n            return provider[(params.includeTransactions ? \"getBlockWithTransactions\": \"getBlock\")](params.blockTag || params.blockHash);\n        case \"call\":\n        case \"estimateGas\":\n            if (params.blockTag && isHexString(params.blockTag)) {\n                provider = await waitForSync(config, currentBlockNumber)\n            }\n            if (method === \"call\" && params.blockTag) {\n                return provider[method](params.transaction, params.blockTag);\n            }\n            return provider[method](params.transaction);\n        case \"getTransaction\":\n        case \"getTransactionReceipt\":\n            return provider[method](params.transactionHash);\n        case \"getLogs\": {\n            let filter = params.filter;\n            if ((filter.fromBlock && isHexString(filter.fromBlock)) || (filter.toBlock && isHexString(filter.toBlock))) {\n                provider = await waitForSync(config, currentBlockNumber)\n            }\n            return provider.getLogs(filter);\n        }\n    }\n\n    return logger.throwError(\"unknown method error\", Logger.errors.UNKNOWN_ERROR, {\n        method: method,\n        params: params\n    });\n}\n\nexport class FallbackProvider extends BaseProvider {\n    readonly providerConfigs: ReadonlyArray<FallbackProviderConfig>;\n    readonly quorum: number;\n\n    // Due to the highly asyncronous nature of the blockchain, we need\n    // to make sure we never unroll the blockNumber due to our random\n    // sample of backends\n    _highestBlockNumber: number;\n\n    constructor(providers: Array<Provider | FallbackProviderConfig>, quorum?: number) {\n        if (providers.length === 0) {\n            logger.throwArgumentError(\"missing providers\", \"providers\", providers);\n        }\n\n        const providerConfigs: Array<FallbackProviderConfig> = providers.map((configOrProvider, index) => {\n            if (Provider.isProvider(configOrProvider)) {\n                const stallTimeout = isCommunityResource(configOrProvider) ? 2000: 750;\n                const priority = 1;\n                return Object.freeze({ provider: configOrProvider, weight: 1, stallTimeout, priority });\n            }\n\n            const config: FallbackProviderConfig = shallowCopy(configOrProvider);\n\n            if (config.priority == null) { config.priority = 1; }\n            if (config.stallTimeout == null) {\n                config.stallTimeout = isCommunityResource(configOrProvider) ? 2000: 750;\n            }\n            if (config.weight == null) { config.weight = 1; }\n\n            const weight = config.weight;\n            if (weight % 1 || weight > 512 || weight < 1) {\n                logger.throwArgumentError(\"invalid weight; must be integer in [1, 512]\", `providers[${ index }].weight`, weight);\n            }\n\n            return Object.freeze(config);\n        });\n\n        const total = providerConfigs.reduce((accum, c) => (accum + c.weight), 0);\n\n        if (quorum == null) {\n            quorum = total / 2;\n        } else if (quorum > total) {\n            logger.throwArgumentError(\"quorum will always fail; larger than total weight\", \"quorum\", quorum);\n        }\n\n        // Are all providers' networks are known\n        let networkOrReady: Network | Promise<Network> = checkNetworks(providerConfigs.map((c) => (<any>(c.provider)).network));\n\n        // Not all networks are known; we must stall\n        if (networkOrReady == null) {\n            networkOrReady = new Promise((resolve, reject) => {\n                setTimeout(() => {\n                    this.detectNetwork().then(resolve, reject);\n                }, 0);\n            });\n        }\n\n        super(networkOrReady);\n\n        // Preserve a copy, so we do not get mutated\n        defineReadOnly(this, \"providerConfigs\", Object.freeze(providerConfigs));\n        defineReadOnly(this, \"quorum\", quorum);\n\n        this._highestBlockNumber = -1;\n    }\n\n    async detectNetwork(): Promise<Network> {\n        const networks = await Promise.all(this.providerConfigs.map((c) => c.provider.getNetwork()));\n        return checkNetworks(networks);\n    }\n\n    async perform(method: string, params: { [name: string]: any }): Promise<any> {\n        // Sending transactions is special; always broadcast it to all backends\n        if (method === \"sendTransaction\") {\n            const results: Array<string | Error> = await Promise.all(this.providerConfigs.map((c) => {\n                return c.provider.sendTransaction(params.signedTransaction).then((result) => {\n                    return result.hash;\n                }, (error) => {\n                    return error;\n                });\n            }));\n\n            // Any success is good enough (other errors are likely \"already seen\" errors\n            for (let i = 0; i < results.length; i++) {\n                const result = results[i];\n                if (typeof(result) === \"string\") { return result; }\n            }\n\n            // They were all an error; pick the first error\n            throw results[0];\n        }\n\n        // We need to make sure we are in sync with our backends, so we need\n        // to know this before we can make a lot of calls\n        if (this._highestBlockNumber === -1 && method !== \"getBlockNumber\") {\n            await this.getBlockNumber();\n        }\n\n        const processFunc = getProcessFunc(this, method, params);\n\n        // Shuffle the providers and then sort them by their priority; we\n        // shallowCopy them since we will store the result in them too\n        const configs: Array<RunningConfig> = shuffled(this.providerConfigs.map(shallowCopy));\n        configs.sort((a, b) => (a.priority - b.priority));\n\n        const currentBlockNumber = this._highestBlockNumber;\n\n        let i = 0;\n        let first = true;\n        while (true) {\n            const t0 = now();\n\n            // Compute the inflight weight (exclude anything past)\n            let inflightWeight = configs.filter((c) => (c.runner && ((t0 - c.start) < c.stallTimeout)))\n                                        .reduce((accum, c) => (accum + c.weight), 0);\n\n            // Start running enough to meet quorum\n            while (inflightWeight < this.quorum && i < configs.length) {\n                const config = configs[i++];\n\n                const rid = nextRid++;\n\n                config.start = now();\n                config.staller = stall(config.stallTimeout);\n                config.staller.wait(() => { config.staller = null; });\n\n                config.runner = getRunner(config, currentBlockNumber, method, params).then((result) => {\n                    config.done = true;\n                    config.result = result;\n\n                    if (this.listenerCount(\"debug\")) {\n                        this.emit(\"debug\", {\n                            action: \"request\",\n                            rid: rid,\n                            backend: exposeDebugConfig(config, now()),\n                            request: { method: method, params: deepCopy(params) },\n                            provider: this\n                        });\n                     }\n\n                }, (error) => {\n                    config.done = true;\n                    config.error = error;\n\n                    if (this.listenerCount(\"debug\")) {\n                        this.emit(\"debug\", {\n                            action: \"request\",\n                            rid: rid,\n                            backend: exposeDebugConfig(config, now()),\n                            request: { method: method, params: deepCopy(params) },\n                            provider: this\n                        });\n                    }\n                });\n\n                if (this.listenerCount(\"debug\")) {\n                    this.emit(\"debug\", {\n                        action: \"request\",\n                        rid: rid,\n                        backend: exposeDebugConfig(config, null),\n                        request: { method: method, params: deepCopy(params) },\n                        provider: this\n                    });\n                }\n\n                inflightWeight += config.weight;\n            }\n\n            // Wait for anything meaningful to finish or stall out\n            const waiting: Array<Promise<any>> = [ ];\n            configs.forEach((c) => {\n                if (c.done || !c.runner) { return; }\n                waiting.push(c.runner);\n                if (c.staller) { waiting.push(c.staller.getPromise()); }\n            });\n\n            if (waiting.length) { await Promise.race(waiting); }\n\n            // Check the quorum and process the results; the process function\n            // may additionally decide the quorum is not met\n            const results = configs.filter((c) => (c.done && c.error == null));\n            if (results.length >= this.quorum) {\n                const result = processFunc(results);\n                if (result !== undefined) {\n                    // Shut down any stallers\n                    configs.forEach(c => {\n                        if (c.staller) { c.staller.cancel(); }\n                        c.cancelled = true;\n                    });\n                    return result;\n                }\n                if (!first) { await stall(100).getPromise(); }\n                first = false;\n            }\n\n            // No result, check for errors that should be forwarded\n            const errors = configs.reduce((accum, c) => {\n                if (!c.done || c.error == null) { return accum; }\n\n                const code = (<any>(c.error)).code;\n                if (ForwardErrors.indexOf(code) >= 0) {\n                    if (!accum[code]) { accum[code] = { error: c.error, weight: 0 }; }\n                    accum[code].weight += c.weight;\n                }\n\n                return accum;\n            }, <{ [ code: string ]: { error: Error, weight: number } }>({ }));\n\n            Object.keys(errors).forEach((errorCode: string) => {\n                const tally = errors[errorCode];\n                if (tally.weight < this.quorum) { return; }\n\n                // Shut down any stallers\n                configs.forEach(c => {\n                    if (c.staller) { c.staller.cancel(); }\n                    c.cancelled = true;\n                });\n\n                const e = <any>(tally.error);\n\n                const props: { [ name: string ]: any } = { };\n                ForwardProperties.forEach((name) => {\n                    if (e[name] == null) { return; }\n                    props[name] = e[name];\n                });\n\n                logger.throwError(e.reason || e.message, <any>errorCode, props);\n            });\n\n            // All configs have run to completion; we will never get more data\n            if (configs.filter((c) => !c.done).length === 0) { break; }\n        }\n\n        // Shut down any stallers; shouldn't be any\n        configs.forEach(c => {\n            if (c.staller) { c.staller.cancel(); }\n            c.cancelled = true;\n        });\n\n        return logger.throwError(\"failed to meet quorum\", Logger.errors.SERVER_ERROR, {\n            method: method,\n            params: params,\n            //results: configs.map((c) => c.result),\n            //errors: configs.map((c) => c.error),\n            results: configs.map((c) => exposeDebugConfig(c)),\n            provider: this\n        });\n    }\n}\n", "\"use strict\";\n\nconst IpcProvider: any = null;\n\nexport {\n    IpcProvider\n};\n", "\"use strict\";\n\nimport { Network, Networkish } from \"@ethersproject/networks\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { ConnectionInfo } from \"@ethersproject/web\";\n\nimport { WebSocketProvider } from \"./websocket-provider\";\nimport { CommunityResourcable, showThrottleMessage } from \"./formatter\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n\n\nconst defaultProjectId = \"84842078b09946638c03157f83405213\"\n\nexport class InfuraWebSocketProvider extends WebSocketProvider implements CommunityResourcable {\n    readonly apiKey: string;\n    readonly projectId: string;\n    readonly projectSecret: string;\n\n    constructor(network?: Networkish, apiKey?: any) {\n        const provider = new InfuraProvider(network, apiKey);\n        const connection = provider.connection;\n        if (connection.password) {\n            logger.throwError(\"INFURA WebSocket project secrets unsupported\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"InfuraProvider.getWebSocketProvider()\"\n            });\n        }\n\n        const url = connection.url.replace(/^http/i, \"ws\").replace(\"/v3/\", \"/ws/v3/\");\n        super(url, network);\n\n        defineReadOnly(this, \"apiKey\", provider.projectId);\n        defineReadOnly(this, \"projectId\", provider.projectId);\n        defineReadOnly(this, \"projectSecret\", provider.projectSecret);\n    }\n\n    isCommunityResource(): boolean {\n        return (this.projectId === defaultProjectId);\n    }\n}\n\nexport class InfuraProvider extends UrlJsonRpcProvider {\n    readonly projectId: string;\n    readonly projectSecret: string;\n\n    static getWebSocketProvider(network?: Networkish, apiKey?: any): InfuraWebSocketProvider {\n        return new InfuraWebSocketProvider(network, apiKey);\n    }\n\n    static getApiKey(apiKey: any): any {\n        const apiKeyObj: { apiKey: string, projectId: string, projectSecret: string } = {\n            apiKey: defaultProjectId,\n            projectId: defaultProjectId,\n            projectSecret: null\n        };\n\n        if (apiKey == null) { return apiKeyObj; }\n\n        if (typeof(apiKey) === \"string\") {\n            apiKeyObj.projectId = apiKey;\n\n        } else if (apiKey.projectSecret != null) {\n            logger.assertArgument((typeof(apiKey.projectId) === \"string\"),\n                \"projectSecret requires a projectId\", \"projectId\", apiKey.projectId);\n            logger.assertArgument((typeof(apiKey.projectSecret) === \"string\"),\n                \"invalid projectSecret\", \"projectSecret\", \"[REDACTED]\");\n\n            apiKeyObj.projectId = apiKey.projectId;\n            apiKeyObj.projectSecret = apiKey.projectSecret;\n\n        } else if (apiKey.projectId) {\n            apiKeyObj.projectId = apiKey.projectId;\n        }\n\n        apiKeyObj.apiKey = apiKeyObj.projectId;\n\n        return apiKeyObj;\n    }\n\n    static getUrl(network: Network, apiKey: any): ConnectionInfo {\n        let host: string = null;\n        switch(network ? network.name: \"unknown\") {\n            case \"homestead\":\n                host = \"mainnet.infura.io\";\n                break;\n            case \"goerli\":\n                host = \"goerli.infura.io\";\n                break;\n            case \"sepolia\":\n                host = \"sepolia.infura.io\";\n                break;\n            case \"matic\":\n                host = \"polygon-mainnet.infura.io\";\n                break;\n            case \"maticmum\":\n                host = \"polygon-mumbai.infura.io\";\n                break;\n            case \"optimism\":\n                host = \"optimism-mainnet.infura.io\";\n                break;\n            case \"optimism-goerli\":\n                host = \"optimism-goerli.infura.io\";\n                break;\n            case \"arbitrum\":\n                host = \"arbitrum-mainnet.infura.io\";\n                break;\n            case \"arbitrum-goerli\":\n                host = \"arbitrum-goerli.infura.io\";\n                break;\n            default:\n                logger.throwError(\"unsupported network\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"network\",\n                    value: network\n                });\n        }\n\n        const connection: ConnectionInfo = {\n            allowGzip: true,\n            url: (\"https:/\" + \"/\" + host + \"/v3/\" + apiKey.projectId),\n            throttleCallback: (attempt: number, url: string) => {\n                if (apiKey.projectId === defaultProjectId) {\n                    showThrottleMessage();\n                }\n                return Promise.resolve(true);\n            }\n        };\n\n        if (apiKey.projectSecret != null) {\n            connection.user = \"\";\n            connection.password = apiKey.projectSecret\n        }\n\n        return connection;\n    }\n\n    isCommunityResource(): boolean {\n        return (this.projectId === defaultProjectId);\n    }\n}\n", "\nimport { deepCopy } from \"@ethersproject/properties\";\nimport { fetchJson } from \"@ethersproject/web\";\n\nimport { JsonRpcProvider } from \"./json-rpc-provider\";\n\n// Experimental\n\nexport class JsonRpcBatchProvider extends JsonRpcProvider {\n    _pendingBatchAggregator: NodeJS.Timer;\n    _pendingBatch: Array<{\n        request: { method: string, params: Array<any>, id: number, jsonrpc: \"2.0\" },\n        resolve: (result: any) => void,\n        reject: (error: Error) => void\n    }>;\n\n    send(method: string, params: Array<any>): Promise<any> {\n        const request = {\n            method: method,\n            params: params,\n            id: (this._nextId++),\n            jsonrpc: \"2.0\"\n        };\n\n        if (this._pendingBatch == null) {\n            this._pendingBatch = [ ];\n        }\n\n        const inflightRequest: any = { request, resolve: null, reject: null };\n\n        const promise = new Promise((resolve, reject) => {\n            inflightRequest.resolve = resolve;\n            inflightRequest.reject = reject;\n        });\n\n        this._pendingBatch.push(inflightRequest);\n\n        if (!this._pendingBatchAggregator) {\n            // Schedule batch for next event loop + short duration\n            this._pendingBatchAggregator = setTimeout(() => {\n\n                // Get teh current batch and clear it, so new requests\n                // go into the next batch\n                const batch = this._pendingBatch;\n                this._pendingBatch = null;\n                this._pendingBatchAggregator = null;\n\n                // Get the request as an array of requests\n                const request = batch.map((inflight) => inflight.request);\n\n                this.emit(\"debug\", {\n                    action: \"requestBatch\",\n                    request: deepCopy(request),\n                    provider: this\n                });\n\n                return fetchJson(this.connection, JSON.stringify(request)).then((result) => {\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        request: request,\n                        response: result,\n                        provider: this\n                    });\n\n                    // For each result, feed it to the correct Promise, depending\n                    // on whether it was a success or error\n                    batch.forEach((inflightRequest, index) => {\n                        const payload = result[index];\n                        if (payload.error) {\n                            const error = new Error(payload.error.message);\n                            (<any>error).code = payload.error.code;\n                            (<any>error).data = payload.error.data;\n                            inflightRequest.reject(error);\n                        } else {\n                            inflightRequest.resolve(payload.result);\n                        }\n                    });\n\n                }, (error) => {\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        error: error,\n                        request: request,\n                        provider: this\n                    });\n\n                    batch.forEach((inflightRequest) => {\n                        inflightRequest.reject(error);\n                    });\n                });\n\n            }, 10);\n        }\n\n        return promise;\n    }\n}\n", "/* istanbul ignore file */\n\n\"use strict\";\n\nimport { Network } from \"@ethersproject/networks\";\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n// Special API key provided by Nodesmith for ethers.js\nconst defaultApiKey = \"ETHERS_JS_SHARED\";\n\nexport class NodesmithProvider extends UrlJsonRpcProvider {\n\n    static getApiKey(apiKey: any): any {\n        if (apiKey && typeof(apiKey) !== \"string\") {\n            logger.throwArgumentError(\"invalid apiKey\", \"apiKey\", apiKey);\n        }\n        return apiKey || defaultApiKey;\n    }\n\n    static getUrl(network: Network, apiKey?: any): string {\n        logger.warn(\"NodeSmith will be discontinued on 2019-12-20; please migrate to another platform.\");\n\n        let host = null;\n        switch (network.name) {\n            case \"homestead\":\n                host = \"https://ethereum.api.nodesmith.io/v1/mainnet/jsonrpc\";\n                break;\n            case \"ropsten\":\n                host = \"https://ethereum.api.nodesmith.io/v1/ropsten/jsonrpc\";\n                break;\n            case \"rinkeby\":\n                host = \"https://ethereum.api.nodesmith.io/v1/rinkeby/jsonrpc\";\n                break;\n            case \"goerli\":\n                host = \"https://ethereum.api.nodesmith.io/v1/goerli/jsonrpc\";\n                break;\n            case \"kovan\":\n                host = \"https://ethereum.api.nodesmith.io/v1/kovan/jsonrpc\";\n                break;\n            default:\n               logger.throwArgumentError(\"unsupported network\", \"network\", arguments[0]);\n        }\n\n        return (host + \"?apiKey=\" + apiKey);\n    }\n}\n", "\"use strict\";\n\nimport { Network } from \"@ethersproject/networks\";\nimport { ConnectionInfo } from \"@ethersproject/web\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n\nconst defaultApplicationId = \"62e1ad51b37b8e00394bda3b\";\n\n\nexport class PocketProvider extends UrlJsonRpcProvider {\n    readonly applicationId: string;\n    readonly applicationSecretKey: string;\n    readonly loadBalancer: boolean;\n\n    static getApiKey(apiKey: any): any {\n        const apiKeyObj: { applicationId: string, applicationSecretKey: string, loadBalancer: boolean } = {\n            applicationId: null,\n            loadBalancer: true,\n            applicationSecretKey: null\n        };\n\n        // Parse applicationId and applicationSecretKey\n        if (apiKey == null) {\n            apiKeyObj.applicationId = defaultApplicationId;\n\n        } else if (typeof (apiKey) === \"string\") {\n            apiKeyObj.applicationId = apiKey;\n\n        } else if (apiKey.applicationSecretKey != null) {\n            apiKeyObj.applicationId = apiKey.applicationId;\n            apiKeyObj.applicationSecretKey = apiKey.applicationSecretKey;\n\n        } else if (apiKey.applicationId) {\n            apiKeyObj.applicationId = apiKey.applicationId;\n\n        } else {\n            logger.throwArgumentError(\"unsupported PocketProvider apiKey\", \"apiKey\", apiKey);\n        }\n\n        return apiKeyObj;\n    }\n\n    static getUrl(network: Network, apiKey: any): ConnectionInfo {\n        let host: string = null;\n        switch (network ? network.name : \"unknown\") {\n            case \"goerli\":\n                host = \"eth-goerli.gateway.pokt.network\";\n                break;\n            case \"homestead\":\n                host = \"eth-mainnet.gateway.pokt.network\";\n                break;\n            case \"kovan\":\n                host = \"poa-kovan.gateway.pokt.network\";\n                break;\n            case \"matic\":\n                host = \"poly-mainnet.gateway.pokt.network\";\n                break;\n            case \"maticmum\":\n                host = \"polygon-mumbai-rpc.gateway.pokt.network\";\n                break;\n            case \"rinkeby\":\n                host = \"eth-rinkeby.gateway.pokt.network\";\n                break;\n            case \"ropsten\":\n                host = \"eth-ropsten.gateway.pokt.network\";\n                break;\n            default:\n                logger.throwError(\"unsupported network\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"network\",\n                    value: network\n                });\n        }\n\n        const url = `https:/\\/${ host }/v1/lb/${ apiKey.applicationId }`\n\n        const connection: ConnectionInfo = { headers: { }, url };\n        if (apiKey.applicationSecretKey != null) {\n            connection.user = \"\";\n            connection.password = apiKey.applicationSecretKey\n        }\n\n        return connection;\n    }\n\n    isCommunityResource(): boolean {\n        return (this.applicationId === defaultApplicationId);\n    }\n}\n", "\"use strict\";\n\nimport { Networkish } from \"@ethersproject/networks\";\nimport { deepCopy, defineReadOnly } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { JsonRpcProvider } from \"./json-rpc-provider\";\n\n// Exported Types\nexport type ExternalProvider = {\n    isMetaMask?: boolean;\n    isStatus?: boolean;\n    host?: string;\n    path?: string;\n    sendAsync?: (request: { method: string, params?: Array<any> }, callback: (error: any, response: any) => void) => void\n    send?: (request: { method: string, params?: Array<any> }, callback: (error: any, response: any) => void) => void\n    request?: (request: { method: string, params?: Array<any> }) => Promise<any>\n}\n\nlet _nextId = 1;\n\nexport type JsonRpcFetchFunc = (method: string, params?: Array<any>) => Promise<any>;\n\ntype Web3LegacySend = (request: any, callback: (error: Error, response: any) => void) => void;\n\nfunction buildWeb3LegacyFetcher(provider: ExternalProvider, sendFunc: Web3LegacySend) : JsonRpcFetchFunc {\n    const fetcher = \"Web3LegacyFetcher\";\n\n    return function(method: string, params: Array<any>): Promise<any> {\n        const request = {\n            method: method,\n            params: params,\n            id: (_nextId++),\n            jsonrpc: \"2.0\"\n        };\n\n        return new Promise((resolve, reject) => {\n            this.emit(\"debug\", {\n                action: \"request\",\n                fetcher,\n                request: deepCopy(request),\n                provider: this\n            });\n\n            sendFunc(request, (error, response) => {\n\n                if (error) {\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        fetcher,\n                        error,\n                        request,\n                        provider: this\n                    });\n\n                    return reject(error);\n                }\n\n                this.emit(\"debug\", {\n                    action: \"response\",\n                    fetcher,\n                    request,\n                    response,\n                    provider: this\n                });\n\n                if (response.error) {\n                    const error = new Error(response.error.message);\n                    (<any>error).code = response.error.code;\n                    (<any>error).data = response.error.data;\n                    return reject(error);\n                }\n\n                resolve(response.result);\n            });\n        });\n    }\n}\n\nfunction buildEip1193Fetcher(provider: ExternalProvider): JsonRpcFetchFunc {\n    return function(method: string, params: Array<any>): Promise<any> {\n        if (params == null) { params = [ ]; }\n\n        const request = { method, params };\n\n        this.emit(\"debug\", {\n            action: \"request\",\n            fetcher: \"Eip1193Fetcher\",\n            request: deepCopy(request),\n            provider: this\n        });\n\n        return provider.request(request).then((response) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                fetcher: \"Eip1193Fetcher\",\n                request,\n                response,\n                provider: this\n            });\n\n            return response;\n\n        }, (error) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                fetcher: \"Eip1193Fetcher\",\n                request,\n                error,\n                provider: this\n            });\n\n            throw error;\n        });\n    }\n}\n\nexport class Web3Provider extends JsonRpcProvider {\n    readonly provider: ExternalProvider;\n    readonly jsonRpcFetchFunc: JsonRpcFetchFunc;\n\n    constructor(provider: ExternalProvider | JsonRpcFetchFunc, network?: Networkish) {\n        if (provider == null) {\n            logger.throwArgumentError(\"missing provider\", \"provider\", provider);\n        }\n\n        let path: string = null;\n        let jsonRpcFetchFunc: JsonRpcFetchFunc = null;\n        let subprovider: ExternalProvider = null;\n\n        if (typeof(provider) === \"function\") {\n            path = \"unknown:\";\n            jsonRpcFetchFunc = provider;\n\n        } else {\n            path = provider.host || provider.path || \"\";\n            if (!path && provider.isMetaMask) {\n                path = \"metamask\";\n            }\n\n            subprovider = provider;\n\n            if (provider.request) {\n                if (path === \"\") { path = \"eip-1193:\"; }\n                jsonRpcFetchFunc = buildEip1193Fetcher(provider);\n            } else if (provider.sendAsync) {\n                jsonRpcFetchFunc = buildWeb3LegacyFetcher(provider, provider.sendAsync.bind(provider));\n            } else if (provider.send) {\n                jsonRpcFetchFunc = buildWeb3LegacyFetcher(provider, provider.send.bind(provider));\n            } else {\n                logger.throwArgumentError(\"unsupported provider\", \"provider\", provider);\n            }\n\n            if (!path) { path = \"unknown:\"; }\n        }\n\n        super(path, network);\n\n        defineReadOnly(this, \"jsonRpcFetchFunc\", jsonRpcFetchFunc);\n        defineReadOnly(this, \"provider\", subprovider);\n    }\n\n    send(method: string, params: Array<any>): Promise<any> {\n        return this.jsonRpcFetchFunc(method, params);\n    }\n}\n", "\"use strict\";\n\nimport {\n    Block,\n    BlockTag,\n    EventType,\n    FeeData,\n    Filter,\n    Log,\n    Listener,\n    Provider,\n    TransactionReceipt,\n    TransactionRequest,\n    TransactionResponse\n} from \"@ethersproject/abstract-provider\";\n\nimport { getNetwork } from \"@ethersproject/networks\";\nimport { Network, Networkish } from \"@ethersproject/networks\";\n\nimport { BaseProvider, EnsProvider, EnsResolver, Resolver } from \"./base-provider\";\n\nimport { AlchemyProvider, AlchemyWebSocketProvider } from \"./alchemy-provider\";\nimport { AnkrProvider } from \"./ankr-provider\";\nimport { CloudflareProvider } from \"./cloudflare-provider\";\nimport { EtherscanProvider } from \"./etherscan-provider\";\nimport { FallbackProvider, FallbackProviderConfig } from \"./fallback-provider\";\nimport { IpcProvider } from \"./ipc-provider\";\nimport { InfuraProvider, InfuraWebSocketProvider } from \"./infura-provider\";\nimport { JsonRpcProvider, JsonRpcSigner } from \"./json-rpc-provider\";\nimport { JsonRpcBatchProvider } from \"./json-rpc-batch-provider\";\nimport { NodesmithProvider } from \"./nodesmith-provider\";\nimport { PocketProvider } from \"./pocket-provider\";\nimport { StaticJsonRpcProvider, UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\nimport { Web3Provider } from \"./web3-provider\";\nimport { WebSocketProvider } from \"./websocket-provider\";\nimport { ExternalProvider, JsonRpcFetchFunc } from \"./web3-provider\";\n\nimport { CommunityResourcable, Formatter, isCommunityResourcable, isCommunityResource, showThrottleMessage } from \"./formatter\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n////////////////////////\n// Helper Functions\n\nfunction getDefaultProvider(network?: Networkish, options?: any): BaseProvider {\n    if (network == null) { network = \"homestead\"; }\n\n    // If passed a URL, figure out the right type of provider based on the scheme\n    if (typeof(network) === \"string\") {\n        // @TODO: Add support for IpcProvider; maybe if it ends in \".ipc\"?\n\n        // Handle http and ws (and their secure variants)\n        const match = network.match(/^(ws|http)s?:/i);\n        if (match) {\n            switch (match[1].toLowerCase()) {\n                case \"http\": case \"https\":\n                    return new JsonRpcProvider(network);\n                case \"ws\": case \"wss\":\n                    return new WebSocketProvider(network);\n                default:\n                    logger.throwArgumentError(\"unsupported URL scheme\", \"network\", network);\n            }\n        }\n    }\n\n    const n = getNetwork(network);\n    if (!n || !n._defaultProvider) {\n        logger.throwError(\"unsupported getDefaultProvider network\", Logger.errors.NETWORK_ERROR, {\n            operation: \"getDefaultProvider\",\n            network: network\n        });\n    }\n\n    return n._defaultProvider({\n        FallbackProvider,\n\n        AlchemyProvider,\n        AnkrProvider,\n        CloudflareProvider,\n        EtherscanProvider,\n        InfuraProvider,\n        JsonRpcProvider,\n        NodesmithProvider,\n        PocketProvider,\n        Web3Provider,\n\n        IpcProvider,\n    }, options);\n}\n\n////////////////////////\n// Exports\n\nexport {\n\n    // Abstract Providers (or Abstract-ish)\n    Provider,\n    BaseProvider,\n\n    Resolver,\n\n    UrlJsonRpcProvider,\n\n    ///////////////////////\n    // Concrete Providers\n\n    FallbackProvider,\n\n    AlchemyProvider,\n    AlchemyWebSocketProvider,\n    AnkrProvider,\n    CloudflareProvider,\n    EtherscanProvider,\n    InfuraProvider,\n    InfuraWebSocketProvider,\n    JsonRpcProvider,\n    JsonRpcBatchProvider,\n    NodesmithProvider,\n    PocketProvider,\n    StaticJsonRpcProvider,\n    Web3Provider,\n    WebSocketProvider,\n\n    IpcProvider,\n\n\n    ///////////////////////\n    // Signer\n\n    JsonRpcSigner,\n\n\n    ///////////////////////\n    // Functions\n\n    getDefaultProvider,\n    getNetwork,\n    isCommunityResource,\n    isCommunityResourcable,\n    showThrottleMessage,\n\n\n    ///////////////////////\n    // Objects\n\n    Formatter,\n\n\n    ///////////////////////\n    // Types\n\n    Block,\n    BlockTag,\n    EventType,\n    FeeData,\n    Filter,\n    Log,\n    Listener,\n    TransactionReceipt,\n    TransactionRequest,\n    TransactionResponse,\n\n    ExternalProvider,\n    JsonRpcFetchFunc,\n\n    FallbackProviderConfig,\n\n    Network,\n    Networkish,\n\n    EnsProvider,\n    EnsResolver,\n\n    CommunityResourcable\n};\n\n"],
  "mappings": "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",
  "names": ["LogLevel", "ErrorCode", "version", "key", "error", "version", "init_version", "lib_exports", "signature", "vs", "init_lib", "init_version", "version", "version", "init_version", "logger", "init_lib", "init_version", "_BN", "version", "key", "throwFault", "logger", "_constructorGuard", "init_lib", "init_version", "version", "signed", "key", "lib_exports", "init_lib", "version", "init_version", "lib_exports", "key", "logger", "init_lib", "init_version", "version", "NegativeOne", "Zero", "init_lib", "lib_exports", "NegativeOne", "Zero", "init_lib", "version", "init_version", "lib_exports", "logger", "init_lib", "init_version", "version", "key", "__awaiter", "version", "init_version", "logger", "init_lib", "init_version", "version", "version", "init_version", "network", "standard", "logger", "init_lib", "init_version", "version", "init_lib", "lib_exports", "init_lib", "lib_exports", "init_lib", "lib_exports", "sha3", "init_lib", "version", "init_version", "logger", "init_lib", "init_version", "version", "UnicodeNormalizationForm", "Utf8ErrorReason", "init_lib", "value", "lib_exports", "init_lib", "init_lib", "version", "init_version", "depth", "init_lib", "init_lib", "logger", "init_lib", "init_version", "version", "init_lib", "version", "init_version", "lib_exports", "decode", "encode", "length", "logger", "init_lib", "init_version", "version", "version", "init_version", "lib_exports", "logger", "encode", "init_lib", "init_version", "version", "key", "logger", "signed", "MaxUint256", "One", "NegativeOne", "Zero", "name", "init_lib", "init_version", "version", "type", "value", "lib_exports", "init_lib", "SupportedAlgorithm", "version", "init_version", "hash", "key", "logger", "init_lib", "init_version", "version", "lib_exports", "init_lib", "version", "init_version", "key", "init_lib", "lib_exports", "logger", "key", "timer", "stall", "body", "timeout", "init_lib", "init_version", "version", "version", "init_version", "BN", "Base", "utils", "assert", "ec", "curves", "EC", "r", "toHex", "encode", "minAssert", "minUtils", "getNAF", "getJSF", "key", "cachedProperty", "validate", "_encode", "dbl", "inherits", "point", "_getBeta", "obj", "eq", "neg", "add", "dblp", "mul", "inspect", "isInfinity", "require$$0", "require$$1", "curve", "hash", "signature", "KeyPair", "HmacDRBG", "sign", "Signature", "verify", "e", "require$$2", "require$$3", "_ec", "version", "init_version", "lib_exports", "signature", "key", "logger", "init_lib", "init_version", "version", "keyPair", "version", "init_version", "lib_exports", "Zero", "key", "signature", "logger", "encode", "allowedTransactionKeys", "serialize", "decode", "init_lib", "init_version", "version", "TransactionTypes", "logger", "init_lib", "init_version", "version", "hash", "value", "key", "logger", "topic", "init_lib", "init_version", "version", "bech32", "hash", "key", "now", "receipt", "__awaiter", "timer", "blockNumber", "avatar", "key", "logger", "_constructorGuard", "allowedTransactionKeys", "init_lib", "init_version", "version", "__awaiter", "hash", "network", "error", "getNetwork", "result", "self", "poll", "init_version", "logger", "version", "logger", "init_lib", "init_version", "version", "id", "param", "event", "hash", "subId", "logger", "init_lib", "init_version", "version", "key", "logger", "init_lib", "init_version", "version", "logger", "defaultApiKey", "init_version", "version", "logger", "init_version", "version", "key", "getResult", "checkError", "logger", "init_lib", "init_version", "version", "url", "version", "init_version", "logger", "init_lib", "init_version", "version", "lib_exports", "init_lib", "networks", "logger", "serialize", "key", "stall", "timer", "now", "normalize", "init_lib", "init_version", "version", "i", "logger", "init_lib", "init_version", "version", "init_lib", "request", "inflightRequest", "logger", "defaultApiKey", "init_version", "version", "logger", "init_version", "version", "error", "logger", "init_lib", "init_version", "version", "lib_exports", "logger", "init_lib", "init_version", "version"]
}
