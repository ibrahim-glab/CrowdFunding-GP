{
  "version": 3,
  "sources": ["../../bn.js/lib/bn.js"],
  "sourcesContent": ["(function (module, exports) {\r\n  'use strict';\r\n\r\n  // Utils\r\n  function assert (val, msg) {\r\n    if (!val) throw new Error(msg || 'Assertion failed');\r\n  }\r\n\r\n  // Could use `inherits` module, but don't want to move from single file\r\n  // architecture yet.\r\n  function inherits (ctor, superCtor) {\r\n    ctor.super_ = superCtor;\r\n    var TempCtor = function () {};\r\n    TempCtor.prototype = superCtor.prototype;\r\n    ctor.prototype = new TempCtor();\r\n    ctor.prototype.constructor = ctor;\r\n  }\r\n\r\n  // BN\r\n\r\n  function BN (number, base, endian) {\r\n    if (BN.isBN(number)) {\r\n      return number;\r\n    }\r\n\r\n    this.negative = 0;\r\n    this.words = null;\r\n    this.length = 0;\r\n\r\n    // Reduction context\r\n    this.red = null;\r\n\r\n    if (number !== null) {\r\n      if (base === 'le' || base === 'be') {\r\n        endian = base;\r\n        base = 10;\r\n      }\r\n\r\n      this._init(number || 0, base || 10, endian || 'be');\r\n    }\r\n  }\r\n  if (typeof module === 'object') {\r\n    module.exports = BN;\r\n  } else {\r\n    exports.BN = BN;\r\n  }\r\n\r\n  BN.BN = BN;\r\n  BN.wordSize = 26;\r\n\r\n  var Buffer;\r\n  try {\r\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\r\n      Buffer = window.Buffer;\r\n    } else {\r\n      Buffer = require('buffer').Buffer;\r\n    }\r\n  } catch (e) {\r\n  }\r\n\r\n  BN.isBN = function isBN (num) {\r\n    if (num instanceof BN) {\r\n      return true;\r\n    }\r\n\r\n    return num !== null && typeof num === 'object' &&\r\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\r\n  };\r\n\r\n  BN.max = function max (left, right) {\r\n    if (left.cmp(right) > 0) return left;\r\n    return right;\r\n  };\r\n\r\n  BN.min = function min (left, right) {\r\n    if (left.cmp(right) < 0) return left;\r\n    return right;\r\n  };\r\n\r\n  BN.prototype._init = function init (number, base, endian) {\r\n    if (typeof number === 'number') {\r\n      return this._initNumber(number, base, endian);\r\n    }\r\n\r\n    if (typeof number === 'object') {\r\n      return this._initArray(number, base, endian);\r\n    }\r\n\r\n    if (base === 'hex') {\r\n      base = 16;\r\n    }\r\n    assert(base === (base | 0) && base >= 2 && base <= 36);\r\n\r\n    number = number.toString().replace(/\\s+/g, '');\r\n    var start = 0;\r\n    if (number[0] === '-') {\r\n      start++;\r\n      this.negative = 1;\r\n    }\r\n\r\n    if (start < number.length) {\r\n      if (base === 16) {\r\n        this._parseHex(number, start, endian);\r\n      } else {\r\n        this._parseBase(number, base, start);\r\n        if (endian === 'le') {\r\n          this._initArray(this.toArray(), base, endian);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\r\n    if (number < 0) {\r\n      this.negative = 1;\r\n      number = -number;\r\n    }\r\n    if (number < 0x4000000) {\r\n      this.words = [number & 0x3ffffff];\r\n      this.length = 1;\r\n    } else if (number < 0x10000000000000) {\r\n      this.words = [\r\n        number & 0x3ffffff,\r\n        (number / 0x4000000) & 0x3ffffff\r\n      ];\r\n      this.length = 2;\r\n    } else {\r\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\r\n      this.words = [\r\n        number & 0x3ffffff,\r\n        (number / 0x4000000) & 0x3ffffff,\r\n        1\r\n      ];\r\n      this.length = 3;\r\n    }\r\n\r\n    if (endian !== 'le') return;\r\n\r\n    // Reverse the bytes\r\n    this._initArray(this.toArray(), base, endian);\r\n  };\r\n\r\n  BN.prototype._initArray = function _initArray (number, base, endian) {\r\n    // Perhaps a Uint8Array\r\n    assert(typeof number.length === 'number');\r\n    if (number.length <= 0) {\r\n      this.words = [0];\r\n      this.length = 1;\r\n      return this;\r\n    }\r\n\r\n    this.length = Math.ceil(number.length / 3);\r\n    this.words = new Array(this.length);\r\n    for (var i = 0; i < this.length; i++) {\r\n      this.words[i] = 0;\r\n    }\r\n\r\n    var j, w;\r\n    var off = 0;\r\n    if (endian === 'be') {\r\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\r\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\r\n        this.words[j] |= (w << off) & 0x3ffffff;\r\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\r\n        off += 24;\r\n        if (off >= 26) {\r\n          off -= 26;\r\n          j++;\r\n        }\r\n      }\r\n    } else if (endian === 'le') {\r\n      for (i = 0, j = 0; i < number.length; i += 3) {\r\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\r\n        this.words[j] |= (w << off) & 0x3ffffff;\r\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\r\n        off += 24;\r\n        if (off >= 26) {\r\n          off -= 26;\r\n          j++;\r\n        }\r\n      }\r\n    }\r\n    return this._strip();\r\n  };\r\n\r\n  function parseHex4Bits (string, index) {\r\n    var c = string.charCodeAt(index);\r\n    // '0' - '9'\r\n    if (c >= 48 && c <= 57) {\r\n      return c - 48;\r\n    // 'A' - 'F'\r\n    } else if (c >= 65 && c <= 70) {\r\n      return c - 55;\r\n    // 'a' - 'f'\r\n    } else if (c >= 97 && c <= 102) {\r\n      return c - 87;\r\n    } else {\r\n      assert(false, 'Invalid character in ' + string);\r\n    }\r\n  }\r\n\r\n  function parseHexByte (string, lowerBound, index) {\r\n    var r = parseHex4Bits(string, index);\r\n    if (index - 1 >= lowerBound) {\r\n      r |= parseHex4Bits(string, index - 1) << 4;\r\n    }\r\n    return r;\r\n  }\r\n\r\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\r\n    // Create possibly bigger array to ensure that it fits the number\r\n    this.length = Math.ceil((number.length - start) / 6);\r\n    this.words = new Array(this.length);\r\n    for (var i = 0; i < this.length; i++) {\r\n      this.words[i] = 0;\r\n    }\r\n\r\n    // 24-bits chunks\r\n    var off = 0;\r\n    var j = 0;\r\n\r\n    var w;\r\n    if (endian === 'be') {\r\n      for (i = number.length - 1; i >= start; i -= 2) {\r\n        w = parseHexByte(number, start, i) << off;\r\n        this.words[j] |= w & 0x3ffffff;\r\n        if (off >= 18) {\r\n          off -= 18;\r\n          j += 1;\r\n          this.words[j] |= w >>> 26;\r\n        } else {\r\n          off += 8;\r\n        }\r\n      }\r\n    } else {\r\n      var parseLength = number.length - start;\r\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\r\n        w = parseHexByte(number, start, i) << off;\r\n        this.words[j] |= w & 0x3ffffff;\r\n        if (off >= 18) {\r\n          off -= 18;\r\n          j += 1;\r\n          this.words[j] |= w >>> 26;\r\n        } else {\r\n          off += 8;\r\n        }\r\n      }\r\n    }\r\n\r\n    this._strip();\r\n  };\r\n\r\n  function parseBase (str, start, end, mul) {\r\n    var r = 0;\r\n    var b = 0;\r\n    var len = Math.min(str.length, end);\r\n    for (var i = start; i < len; i++) {\r\n      var c = str.charCodeAt(i) - 48;\r\n\r\n      r *= mul;\r\n\r\n      // 'a'\r\n      if (c >= 49) {\r\n        b = c - 49 + 0xa;\r\n\r\n      // 'A'\r\n      } else if (c >= 17) {\r\n        b = c - 17 + 0xa;\r\n\r\n      // '0' - '9'\r\n      } else {\r\n        b = c;\r\n      }\r\n      assert(c >= 0 && b < mul, 'Invalid character');\r\n      r += b;\r\n    }\r\n    return r;\r\n  }\r\n\r\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\r\n    // Initialize as zero\r\n    this.words = [0];\r\n    this.length = 1;\r\n\r\n    // Find length of limb in base\r\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\r\n      limbLen++;\r\n    }\r\n    limbLen--;\r\n    limbPow = (limbPow / base) | 0;\r\n\r\n    var total = number.length - start;\r\n    var mod = total % limbLen;\r\n    var end = Math.min(total, total - mod) + start;\r\n\r\n    var word = 0;\r\n    for (var i = start; i < end; i += limbLen) {\r\n      word = parseBase(number, i, i + limbLen, base);\r\n\r\n      this.imuln(limbPow);\r\n      if (this.words[0] + word < 0x4000000) {\r\n        this.words[0] += word;\r\n      } else {\r\n        this._iaddn(word);\r\n      }\r\n    }\r\n\r\n    if (mod !== 0) {\r\n      var pow = 1;\r\n      word = parseBase(number, i, number.length, base);\r\n\r\n      for (i = 0; i < mod; i++) {\r\n        pow *= base;\r\n      }\r\n\r\n      this.imuln(pow);\r\n      if (this.words[0] + word < 0x4000000) {\r\n        this.words[0] += word;\r\n      } else {\r\n        this._iaddn(word);\r\n      }\r\n    }\r\n\r\n    this._strip();\r\n  };\r\n\r\n  BN.prototype.copy = function copy (dest) {\r\n    dest.words = new Array(this.length);\r\n    for (var i = 0; i < this.length; i++) {\r\n      dest.words[i] = this.words[i];\r\n    }\r\n    dest.length = this.length;\r\n    dest.negative = this.negative;\r\n    dest.red = this.red;\r\n  };\r\n\r\n  function move (dest, src) {\r\n    dest.words = src.words;\r\n    dest.length = src.length;\r\n    dest.negative = src.negative;\r\n    dest.red = src.red;\r\n  }\r\n\r\n  BN.prototype._move = function _move (dest) {\r\n    move(dest, this);\r\n  };\r\n\r\n  BN.prototype.clone = function clone () {\r\n    var r = new BN(null);\r\n    this.copy(r);\r\n    return r;\r\n  };\r\n\r\n  BN.prototype._expand = function _expand (size) {\r\n    while (this.length < size) {\r\n      this.words[this.length++] = 0;\r\n    }\r\n    return this;\r\n  };\r\n\r\n  // Remove leading `0` from `this`\r\n  BN.prototype._strip = function strip () {\r\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\r\n      this.length--;\r\n    }\r\n    return this._normSign();\r\n  };\r\n\r\n  BN.prototype._normSign = function _normSign () {\r\n    // -0 = 0\r\n    if (this.length === 1 && this.words[0] === 0) {\r\n      this.negative = 0;\r\n    }\r\n    return this;\r\n  };\r\n\r\n  // Check Symbol.for because not everywhere where Symbol defined\r\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\r\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\r\n    try {\r\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\r\n    } catch (e) {\r\n      BN.prototype.inspect = inspect;\r\n    }\r\n  } else {\r\n    BN.prototype.inspect = inspect;\r\n  }\r\n\r\n  function inspect () {\r\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\r\n  }\r\n\r\n  /*\r\n\r\n  var zeros = [];\r\n  var groupSizes = [];\r\n  var groupBases = [];\r\n\r\n  var s = '';\r\n  var i = -1;\r\n  while (++i < BN.wordSize) {\r\n    zeros[i] = s;\r\n    s += '0';\r\n  }\r\n  groupSizes[0] = 0;\r\n  groupSizes[1] = 0;\r\n  groupBases[0] = 0;\r\n  groupBases[1] = 0;\r\n  var base = 2 - 1;\r\n  while (++base < 36 + 1) {\r\n    var groupSize = 0;\r\n    var groupBase = 1;\r\n    while (groupBase < (1 << BN.wordSize) / base) {\r\n      groupBase *= base;\r\n      groupSize += 1;\r\n    }\r\n    groupSizes[base] = groupSize;\r\n    groupBases[base] = groupBase;\r\n  }\r\n\r\n  */\r\n\r\n  var zeros = [\r\n    '',\r\n    '0',\r\n    '00',\r\n    '000',\r\n    '0000',\r\n    '00000',\r\n    '000000',\r\n    '0000000',\r\n    '00000000',\r\n    '000000000',\r\n    '0000000000',\r\n    '00000000000',\r\n    '000000000000',\r\n    '0000000000000',\r\n    '00000000000000',\r\n    '000000000000000',\r\n    '0000000000000000',\r\n    '00000000000000000',\r\n    '000000000000000000',\r\n    '0000000000000000000',\r\n    '00000000000000000000',\r\n    '000000000000000000000',\r\n    '0000000000000000000000',\r\n    '00000000000000000000000',\r\n    '000000000000000000000000',\r\n    '0000000000000000000000000'\r\n  ];\r\n\r\n  var groupSizes = [\r\n    0, 0,\r\n    25, 16, 12, 11, 10, 9, 8,\r\n    8, 7, 7, 7, 7, 6, 6,\r\n    6, 6, 6, 6, 6, 5, 5,\r\n    5, 5, 5, 5, 5, 5, 5,\r\n    5, 5, 5, 5, 5, 5, 5\r\n  ];\r\n\r\n  var groupBases = [\r\n    0, 0,\r\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\r\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\r\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\r\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\r\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\r\n  ];\r\n\r\n  BN.prototype.toString = function toString (base, padding) {\r\n    base = base || 10;\r\n    padding = padding | 0 || 1;\r\n\r\n    var out;\r\n    if (base === 16 || base === 'hex') {\r\n      out = '';\r\n      var off = 0;\r\n      var carry = 0;\r\n      for (var i = 0; i < this.length; i++) {\r\n        var w = this.words[i];\r\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\r\n        carry = (w >>> (24 - off)) & 0xffffff;\r\n        off += 2;\r\n        if (off >= 26) {\r\n          off -= 26;\r\n          i--;\r\n        }\r\n        if (carry !== 0 || i !== this.length - 1) {\r\n          out = zeros[6 - word.length] + word + out;\r\n        } else {\r\n          out = word + out;\r\n        }\r\n      }\r\n      if (carry !== 0) {\r\n        out = carry.toString(16) + out;\r\n      }\r\n      while (out.length % padding !== 0) {\r\n        out = '0' + out;\r\n      }\r\n      if (this.negative !== 0) {\r\n        out = '-' + out;\r\n      }\r\n      return out;\r\n    }\r\n\r\n    if (base === (base | 0) && base >= 2 && base <= 36) {\r\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\r\n      var groupSize = groupSizes[base];\r\n      // var groupBase = Math.pow(base, groupSize);\r\n      var groupBase = groupBases[base];\r\n      out = '';\r\n      var c = this.clone();\r\n      c.negative = 0;\r\n      while (!c.isZero()) {\r\n        var r = c.modrn(groupBase).toString(base);\r\n        c = c.idivn(groupBase);\r\n\r\n        if (!c.isZero()) {\r\n          out = zeros[groupSize - r.length] + r + out;\r\n        } else {\r\n          out = r + out;\r\n        }\r\n      }\r\n      if (this.isZero()) {\r\n        out = '0' + out;\r\n      }\r\n      while (out.length % padding !== 0) {\r\n        out = '0' + out;\r\n      }\r\n      if (this.negative !== 0) {\r\n        out = '-' + out;\r\n      }\r\n      return out;\r\n    }\r\n\r\n    assert(false, 'Base should be between 2 and 36');\r\n  };\r\n\r\n  BN.prototype.toNumber = function toNumber () {\r\n    var ret = this.words[0];\r\n    if (this.length === 2) {\r\n      ret += this.words[1] * 0x4000000;\r\n    } else if (this.length === 3 && this.words[2] === 0x01) {\r\n      // NOTE: at this stage it is known that the top bit is set\r\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\r\n    } else if (this.length > 2) {\r\n      assert(false, 'Number can only safely store up to 53 bits');\r\n    }\r\n    return (this.negative !== 0) ? -ret : ret;\r\n  };\r\n\r\n  BN.prototype.toJSON = function toJSON () {\r\n    return this.toString(16, 2);\r\n  };\r\n\r\n  if (Buffer) {\r\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\r\n      return this.toArrayLike(Buffer, endian, length);\r\n    };\r\n  }\r\n\r\n  BN.prototype.toArray = function toArray (endian, length) {\r\n    return this.toArrayLike(Array, endian, length);\r\n  };\r\n\r\n  var allocate = function allocate (ArrayType, size) {\r\n    if (ArrayType.allocUnsafe) {\r\n      return ArrayType.allocUnsafe(size);\r\n    }\r\n    return new ArrayType(size);\r\n  };\r\n\r\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\r\n    this._strip();\r\n\r\n    var byteLength = this.byteLength();\r\n    var reqLength = length || Math.max(1, byteLength);\r\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\r\n    assert(reqLength > 0, 'Requested array length <= 0');\r\n\r\n    var res = allocate(ArrayType, reqLength);\r\n    var postfix = endian === 'le' ? 'LE' : 'BE';\r\n    this['_toArrayLike' + postfix](res, byteLength);\r\n    return res;\r\n  };\r\n\r\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\r\n    var position = 0;\r\n    var carry = 0;\r\n\r\n    for (var i = 0, shift = 0; i < this.length; i++) {\r\n      var word = (this.words[i] << shift) | carry;\r\n\r\n      res[position++] = word & 0xff;\r\n      if (position < res.length) {\r\n        res[position++] = (word >> 8) & 0xff;\r\n      }\r\n      if (position < res.length) {\r\n        res[position++] = (word >> 16) & 0xff;\r\n      }\r\n\r\n      if (shift === 6) {\r\n        if (position < res.length) {\r\n          res[position++] = (word >> 24) & 0xff;\r\n        }\r\n        carry = 0;\r\n        shift = 0;\r\n      } else {\r\n        carry = word >>> 24;\r\n        shift += 2;\r\n      }\r\n    }\r\n\r\n    if (position < res.length) {\r\n      res[position++] = carry;\r\n\r\n      while (position < res.length) {\r\n        res[position++] = 0;\r\n      }\r\n    }\r\n  };\r\n\r\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\r\n    var position = res.length - 1;\r\n    var carry = 0;\r\n\r\n    for (var i = 0, shift = 0; i < this.length; i++) {\r\n      var word = (this.words[i] << shift) | carry;\r\n\r\n      res[position--] = word & 0xff;\r\n      if (position >= 0) {\r\n        res[position--] = (word >> 8) & 0xff;\r\n      }\r\n      if (position >= 0) {\r\n        res[position--] = (word >> 16) & 0xff;\r\n      }\r\n\r\n      if (shift === 6) {\r\n        if (position >= 0) {\r\n          res[position--] = (word >> 24) & 0xff;\r\n        }\r\n        carry = 0;\r\n        shift = 0;\r\n      } else {\r\n        carry = word >>> 24;\r\n        shift += 2;\r\n      }\r\n    }\r\n\r\n    if (position >= 0) {\r\n      res[position--] = carry;\r\n\r\n      while (position >= 0) {\r\n        res[position--] = 0;\r\n      }\r\n    }\r\n  };\r\n\r\n  if (Math.clz32) {\r\n    BN.prototype._countBits = function _countBits (w) {\r\n      return 32 - Math.clz32(w);\r\n    };\r\n  } else {\r\n    BN.prototype._countBits = function _countBits (w) {\r\n      var t = w;\r\n      var r = 0;\r\n      if (t >= 0x1000) {\r\n        r += 13;\r\n        t >>>= 13;\r\n      }\r\n      if (t >= 0x40) {\r\n        r += 7;\r\n        t >>>= 7;\r\n      }\r\n      if (t >= 0x8) {\r\n        r += 4;\r\n        t >>>= 4;\r\n      }\r\n      if (t >= 0x02) {\r\n        r += 2;\r\n        t >>>= 2;\r\n      }\r\n      return r + t;\r\n    };\r\n  }\r\n\r\n  BN.prototype._zeroBits = function _zeroBits (w) {\r\n    // Short-cut\r\n    if (w === 0) return 26;\r\n\r\n    var t = w;\r\n    var r = 0;\r\n    if ((t & 0x1fff) === 0) {\r\n      r += 13;\r\n      t >>>= 13;\r\n    }\r\n    if ((t & 0x7f) === 0) {\r\n      r += 7;\r\n      t >>>= 7;\r\n    }\r\n    if ((t & 0xf) === 0) {\r\n      r += 4;\r\n      t >>>= 4;\r\n    }\r\n    if ((t & 0x3) === 0) {\r\n      r += 2;\r\n      t >>>= 2;\r\n    }\r\n    if ((t & 0x1) === 0) {\r\n      r++;\r\n    }\r\n    return r;\r\n  };\r\n\r\n  // Return number of used bits in a BN\r\n  BN.prototype.bitLength = function bitLength () {\r\n    var w = this.words[this.length - 1];\r\n    var hi = this._countBits(w);\r\n    return (this.length - 1) * 26 + hi;\r\n  };\r\n\r\n  function toBitArray (num) {\r\n    var w = new Array(num.bitLength());\r\n\r\n    for (var bit = 0; bit < w.length; bit++) {\r\n      var off = (bit / 26) | 0;\r\n      var wbit = bit % 26;\r\n\r\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\r\n    }\r\n\r\n    return w;\r\n  }\r\n\r\n  // Number of trailing zero bits\r\n  BN.prototype.zeroBits = function zeroBits () {\r\n    if (this.isZero()) return 0;\r\n\r\n    var r = 0;\r\n    for (var i = 0; i < this.length; i++) {\r\n      var b = this._zeroBits(this.words[i]);\r\n      r += b;\r\n      if (b !== 26) break;\r\n    }\r\n    return r;\r\n  };\r\n\r\n  BN.prototype.byteLength = function byteLength () {\r\n    return Math.ceil(this.bitLength() / 8);\r\n  };\r\n\r\n  BN.prototype.toTwos = function toTwos (width) {\r\n    if (this.negative !== 0) {\r\n      return this.abs().inotn(width).iaddn(1);\r\n    }\r\n    return this.clone();\r\n  };\r\n\r\n  BN.prototype.fromTwos = function fromTwos (width) {\r\n    if (this.testn(width - 1)) {\r\n      return this.notn(width).iaddn(1).ineg();\r\n    }\r\n    return this.clone();\r\n  };\r\n\r\n  BN.prototype.isNeg = function isNeg () {\r\n    return this.negative !== 0;\r\n  };\r\n\r\n  // Return negative clone of `this`\r\n  BN.prototype.neg = function neg () {\r\n    return this.clone().ineg();\r\n  };\r\n\r\n  BN.prototype.ineg = function ineg () {\r\n    if (!this.isZero()) {\r\n      this.negative ^= 1;\r\n    }\r\n\r\n    return this;\r\n  };\r\n\r\n  // Or `num` with `this` in-place\r\n  BN.prototype.iuor = function iuor (num) {\r\n    while (this.length < num.length) {\r\n      this.words[this.length++] = 0;\r\n    }\r\n\r\n    for (var i = 0; i < num.length; i++) {\r\n      this.words[i] = this.words[i] | num.words[i];\r\n    }\r\n\r\n    return this._strip();\r\n  };\r\n\r\n  BN.prototype.ior = function ior (num) {\r\n    assert((this.negative | num.negative) === 0);\r\n    return this.iuor(num);\r\n  };\r\n\r\n  // Or `num` with `this`\r\n  BN.prototype.or = function or (num) {\r\n    if (this.length > num.length) return this.clone().ior(num);\r\n    return num.clone().ior(this);\r\n  };\r\n\r\n  BN.prototype.uor = function uor (num) {\r\n    if (this.length > num.length) return this.clone().iuor(num);\r\n    return num.clone().iuor(this);\r\n  };\r\n\r\n  // And `num` with `this` in-place\r\n  BN.prototype.iuand = function iuand (num) {\r\n    // b = min-length(num, this)\r\n    var b;\r\n    if (this.length > num.length) {\r\n      b = num;\r\n    } else {\r\n      b = this;\r\n    }\r\n\r\n    for (var i = 0; i < b.length; i++) {\r\n      this.words[i] = this.words[i] & num.words[i];\r\n    }\r\n\r\n    this.length = b.length;\r\n\r\n    return this._strip();\r\n  };\r\n\r\n  BN.prototype.iand = function iand (num) {\r\n    assert((this.negative | num.negative) === 0);\r\n    return this.iuand(num);\r\n  };\r\n\r\n  // And `num` with `this`\r\n  BN.prototype.and = function and (num) {\r\n    if (this.length > num.length) return this.clone().iand(num);\r\n    return num.clone().iand(this);\r\n  };\r\n\r\n  BN.prototype.uand = function uand (num) {\r\n    if (this.length > num.length) return this.clone().iuand(num);\r\n    return num.clone().iuand(this);\r\n  };\r\n\r\n  // Xor `num` with `this` in-place\r\n  BN.prototype.iuxor = function iuxor (num) {\r\n    // a.length > b.length\r\n    var a;\r\n    var b;\r\n    if (this.length > num.length) {\r\n      a = this;\r\n      b = num;\r\n    } else {\r\n      a = num;\r\n      b = this;\r\n    }\r\n\r\n    for (var i = 0; i < b.length; i++) {\r\n      this.words[i] = a.words[i] ^ b.words[i];\r\n    }\r\n\r\n    if (this !== a) {\r\n      for (; i < a.length; i++) {\r\n        this.words[i] = a.words[i];\r\n      }\r\n    }\r\n\r\n    this.length = a.length;\r\n\r\n    return this._strip();\r\n  };\r\n\r\n  BN.prototype.ixor = function ixor (num) {\r\n    assert((this.negative | num.negative) === 0);\r\n    return this.iuxor(num);\r\n  };\r\n\r\n  // Xor `num` with `this`\r\n  BN.prototype.xor = function xor (num) {\r\n    if (this.length > num.length) return this.clone().ixor(num);\r\n    return num.clone().ixor(this);\r\n  };\r\n\r\n  BN.prototype.uxor = function uxor (num) {\r\n    if (this.length > num.length) return this.clone().iuxor(num);\r\n    return num.clone().iuxor(this);\r\n  };\r\n\r\n  // Not ``this`` with ``width`` bitwidth\r\n  BN.prototype.inotn = function inotn (width) {\r\n    assert(typeof width === 'number' && width >= 0);\r\n\r\n    var bytesNeeded = Math.ceil(width / 26) | 0;\r\n    var bitsLeft = width % 26;\r\n\r\n    // Extend the buffer with leading zeroes\r\n    this._expand(bytesNeeded);\r\n\r\n    if (bitsLeft > 0) {\r\n      bytesNeeded--;\r\n    }\r\n\r\n    // Handle complete words\r\n    for (var i = 0; i < bytesNeeded; i++) {\r\n      this.words[i] = ~this.words[i] & 0x3ffffff;\r\n    }\r\n\r\n    // Handle the residue\r\n    if (bitsLeft > 0) {\r\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\r\n    }\r\n\r\n    // And remove leading zeroes\r\n    return this._strip();\r\n  };\r\n\r\n  BN.prototype.notn = function notn (width) {\r\n    return this.clone().inotn(width);\r\n  };\r\n\r\n  // Set `bit` of `this`\r\n  BN.prototype.setn = function setn (bit, val) {\r\n    assert(typeof bit === 'number' && bit >= 0);\r\n\r\n    var off = (bit / 26) | 0;\r\n    var wbit = bit % 26;\r\n\r\n    this._expand(off + 1);\r\n\r\n    if (val) {\r\n      this.words[off] = this.words[off] | (1 << wbit);\r\n    } else {\r\n      this.words[off] = this.words[off] & ~(1 << wbit);\r\n    }\r\n\r\n    return this._strip();\r\n  };\r\n\r\n  // Add `num` to `this` in-place\r\n  BN.prototype.iadd = function iadd (num) {\r\n    var r;\r\n\r\n    // negative + positive\r\n    if (this.negative !== 0 && num.negative === 0) {\r\n      this.negative = 0;\r\n      r = this.isub(num);\r\n      this.negative ^= 1;\r\n      return this._normSign();\r\n\r\n    // positive + negative\r\n    } else if (this.negative === 0 && num.negative !== 0) {\r\n      num.negative = 0;\r\n      r = this.isub(num);\r\n      num.negative = 1;\r\n      return r._normSign();\r\n    }\r\n\r\n    // a.length > b.length\r\n    var a, b;\r\n    if (this.length > num.length) {\r\n      a = this;\r\n      b = num;\r\n    } else {\r\n      a = num;\r\n      b = this;\r\n    }\r\n\r\n    var carry = 0;\r\n    for (var i = 0; i < b.length; i++) {\r\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\r\n      this.words[i] = r & 0x3ffffff;\r\n      carry = r >>> 26;\r\n    }\r\n    for (; carry !== 0 && i < a.length; i++) {\r\n      r = (a.words[i] | 0) + carry;\r\n      this.words[i] = r & 0x3ffffff;\r\n      carry = r >>> 26;\r\n    }\r\n\r\n    this.length = a.length;\r\n    if (carry !== 0) {\r\n      this.words[this.length] = carry;\r\n      this.length++;\r\n    // Copy the rest of the words\r\n    } else if (a !== this) {\r\n      for (; i < a.length; i++) {\r\n        this.words[i] = a.words[i];\r\n      }\r\n    }\r\n\r\n    return this;\r\n  };\r\n\r\n  // Add `num` to `this`\r\n  BN.prototype.add = function add (num) {\r\n    var res;\r\n    if (num.negative !== 0 && this.negative === 0) {\r\n      num.negative = 0;\r\n      res = this.sub(num);\r\n      num.negative ^= 1;\r\n      return res;\r\n    } else if (num.negative === 0 && this.negative !== 0) {\r\n      this.negative = 0;\r\n      res = num.sub(this);\r\n      this.negative = 1;\r\n      return res;\r\n    }\r\n\r\n    if (this.length > num.length) return this.clone().iadd(num);\r\n\r\n    return num.clone().iadd(this);\r\n  };\r\n\r\n  // Subtract `num` from `this` in-place\r\n  BN.prototype.isub = function isub (num) {\r\n    // this - (-num) = this + num\r\n    if (num.negative !== 0) {\r\n      num.negative = 0;\r\n      var r = this.iadd(num);\r\n      num.negative = 1;\r\n      return r._normSign();\r\n\r\n    // -this - num = -(this + num)\r\n    } else if (this.negative !== 0) {\r\n      this.negative = 0;\r\n      this.iadd(num);\r\n      this.negative = 1;\r\n      return this._normSign();\r\n    }\r\n\r\n    // At this point both numbers are positive\r\n    var cmp = this.cmp(num);\r\n\r\n    // Optimization - zeroify\r\n    if (cmp === 0) {\r\n      this.negative = 0;\r\n      this.length = 1;\r\n      this.words[0] = 0;\r\n      return this;\r\n    }\r\n\r\n    // a > b\r\n    var a, b;\r\n    if (cmp > 0) {\r\n      a = this;\r\n      b = num;\r\n    } else {\r\n      a = num;\r\n      b = this;\r\n    }\r\n\r\n    var carry = 0;\r\n    for (var i = 0; i < b.length; i++) {\r\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\r\n      carry = r >> 26;\r\n      this.words[i] = r & 0x3ffffff;\r\n    }\r\n    for (; carry !== 0 && i < a.length; i++) {\r\n      r = (a.words[i] | 0) + carry;\r\n      carry = r >> 26;\r\n      this.words[i] = r & 0x3ffffff;\r\n    }\r\n\r\n    // Copy rest of the words\r\n    if (carry === 0 && i < a.length && a !== this) {\r\n      for (; i < a.length; i++) {\r\n        this.words[i] = a.words[i];\r\n      }\r\n    }\r\n\r\n    this.length = Math.max(this.length, i);\r\n\r\n    if (a !== this) {\r\n      this.negative = 1;\r\n    }\r\n\r\n    return this._strip();\r\n  };\r\n\r\n  // Subtract `num` from `this`\r\n  BN.prototype.sub = function sub (num) {\r\n    return this.clone().isub(num);\r\n  };\r\n\r\n  function smallMulTo (self, num, out) {\r\n    out.negative = num.negative ^ self.negative;\r\n    var len = (self.length + num.length) | 0;\r\n    out.length = len;\r\n    len = (len - 1) | 0;\r\n\r\n    // Peel one iteration (compiler can't do it, because of code complexity)\r\n    var a = self.words[0] | 0;\r\n    var b = num.words[0] | 0;\r\n    var r = a * b;\r\n\r\n    var lo = r & 0x3ffffff;\r\n    var carry = (r / 0x4000000) | 0;\r\n    out.words[0] = lo;\r\n\r\n    for (var k = 1; k < len; k++) {\r\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\r\n      // note that ncarry could be >= 0x3ffffff\r\n      var ncarry = carry >>> 26;\r\n      var rword = carry & 0x3ffffff;\r\n      var maxJ = Math.min(k, num.length - 1);\r\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\r\n        var i = (k - j) | 0;\r\n        a = self.words[i] | 0;\r\n        b = num.words[j] | 0;\r\n        r = a * b + rword;\r\n        ncarry += (r / 0x4000000) | 0;\r\n        rword = r & 0x3ffffff;\r\n      }\r\n      out.words[k] = rword | 0;\r\n      carry = ncarry | 0;\r\n    }\r\n    if (carry !== 0) {\r\n      out.words[k] = carry | 0;\r\n    } else {\r\n      out.length--;\r\n    }\r\n\r\n    return out._strip();\r\n  }\r\n\r\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\r\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\r\n  // multiplication (like elliptic secp256k1).\r\n  var comb10MulTo = function comb10MulTo (self, num, out) {\r\n    var a = self.words;\r\n    var b = num.words;\r\n    var o = out.words;\r\n    var c = 0;\r\n    var lo;\r\n    var mid;\r\n    var hi;\r\n    var a0 = a[0] | 0;\r\n    var al0 = a0 & 0x1fff;\r\n    var ah0 = a0 >>> 13;\r\n    var a1 = a[1] | 0;\r\n    var al1 = a1 & 0x1fff;\r\n    var ah1 = a1 >>> 13;\r\n    var a2 = a[2] | 0;\r\n    var al2 = a2 & 0x1fff;\r\n    var ah2 = a2 >>> 13;\r\n    var a3 = a[3] | 0;\r\n    var al3 = a3 & 0x1fff;\r\n    var ah3 = a3 >>> 13;\r\n    var a4 = a[4] | 0;\r\n    var al4 = a4 & 0x1fff;\r\n    var ah4 = a4 >>> 13;\r\n    var a5 = a[5] | 0;\r\n    var al5 = a5 & 0x1fff;\r\n    var ah5 = a5 >>> 13;\r\n    var a6 = a[6] | 0;\r\n    var al6 = a6 & 0x1fff;\r\n    var ah6 = a6 >>> 13;\r\n    var a7 = a[7] | 0;\r\n    var al7 = a7 & 0x1fff;\r\n    var ah7 = a7 >>> 13;\r\n    var a8 = a[8] | 0;\r\n    var al8 = a8 & 0x1fff;\r\n    var ah8 = a8 >>> 13;\r\n    var a9 = a[9] | 0;\r\n    var al9 = a9 & 0x1fff;\r\n    var ah9 = a9 >>> 13;\r\n    var b0 = b[0] | 0;\r\n    var bl0 = b0 & 0x1fff;\r\n    var bh0 = b0 >>> 13;\r\n    var b1 = b[1] | 0;\r\n    var bl1 = b1 & 0x1fff;\r\n    var bh1 = b1 >>> 13;\r\n    var b2 = b[2] | 0;\r\n    var bl2 = b2 & 0x1fff;\r\n    var bh2 = b2 >>> 13;\r\n    var b3 = b[3] | 0;\r\n    var bl3 = b3 & 0x1fff;\r\n    var bh3 = b3 >>> 13;\r\n    var b4 = b[4] | 0;\r\n    var bl4 = b4 & 0x1fff;\r\n    var bh4 = b4 >>> 13;\r\n    var b5 = b[5] | 0;\r\n    var bl5 = b5 & 0x1fff;\r\n    var bh5 = b5 >>> 13;\r\n    var b6 = b[6] | 0;\r\n    var bl6 = b6 & 0x1fff;\r\n    var bh6 = b6 >>> 13;\r\n    var b7 = b[7] | 0;\r\n    var bl7 = b7 & 0x1fff;\r\n    var bh7 = b7 >>> 13;\r\n    var b8 = b[8] | 0;\r\n    var bl8 = b8 & 0x1fff;\r\n    var bh8 = b8 >>> 13;\r\n    var b9 = b[9] | 0;\r\n    var bl9 = b9 & 0x1fff;\r\n    var bh9 = b9 >>> 13;\r\n\r\n    out.negative = self.negative ^ num.negative;\r\n    out.length = 19;\r\n    /* k = 0 */\r\n    lo = Math.imul(al0, bl0);\r\n    mid = Math.imul(al0, bh0);\r\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\r\n    hi = Math.imul(ah0, bh0);\r\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\r\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\r\n    w0 &= 0x3ffffff;\r\n    /* k = 1 */\r\n    lo = Math.imul(al1, bl0);\r\n    mid = Math.imul(al1, bh0);\r\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\r\n    hi = Math.imul(ah1, bh0);\r\n    lo = (lo + Math.imul(al0, bl1)) | 0;\r\n    mid = (mid + Math.imul(al0, bh1)) | 0;\r\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\r\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\r\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\r\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\r\n    w1 &= 0x3ffffff;\r\n    /* k = 2 */\r\n    lo = Math.imul(al2, bl0);\r\n    mid = Math.imul(al2, bh0);\r\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\r\n    hi = Math.imul(ah2, bh0);\r\n    lo = (lo + Math.imul(al1, bl1)) | 0;\r\n    mid = (mid + Math.imul(al1, bh1)) | 0;\r\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\r\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\r\n    lo = (lo + Math.imul(al0, bl2)) | 0;\r\n    mid = (mid + Math.imul(al0, bh2)) | 0;\r\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\r\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\r\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\r\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\r\n    w2 &= 0x3ffffff;\r\n    /* k = 3 */\r\n    lo = Math.imul(al3, bl0);\r\n    mid = Math.imul(al3, bh0);\r\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\r\n    hi = Math.imul(ah3, bh0);\r\n    lo = (lo + Math.imul(al2, bl1)) | 0;\r\n    mid = (mid + Math.imul(al2, bh1)) | 0;\r\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\r\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\r\n    lo = (lo + Math.imul(al1, bl2)) | 0;\r\n    mid = (mid + Math.imul(al1, bh2)) | 0;\r\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\r\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\r\n    lo = (lo + Math.imul(al0, bl3)) | 0;\r\n    mid = (mid + Math.imul(al0, bh3)) | 0;\r\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\r\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\r\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\r\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\r\n    w3 &= 0x3ffffff;\r\n    /* k = 4 */\r\n    lo = Math.imul(al4, bl0);\r\n    mid = Math.imul(al4, bh0);\r\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\r\n    hi = Math.imul(ah4, bh0);\r\n    lo = (lo + Math.imul(al3, bl1)) | 0;\r\n    mid = (mid + Math.imul(al3, bh1)) | 0;\r\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\r\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\r\n    lo = (lo + Math.imul(al2, bl2)) | 0;\r\n    mid = (mid + Math.imul(al2, bh2)) | 0;\r\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\r\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\r\n    lo = (lo + Math.imul(al1, bl3)) | 0;\r\n    mid = (mid + Math.imul(al1, bh3)) | 0;\r\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\r\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\r\n    lo = (lo + Math.imul(al0, bl4)) | 0;\r\n    mid = (mid + Math.imul(al0, bh4)) | 0;\r\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\r\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\r\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\r\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\r\n    w4 &= 0x3ffffff;\r\n    /* k = 5 */\r\n    lo = Math.imul(al5, bl0);\r\n    mid = Math.imul(al5, bh0);\r\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\r\n    hi = Math.imul(ah5, bh0);\r\n    lo = (lo + Math.imul(al4, bl1)) | 0;\r\n    mid = (mid + Math.imul(al4, bh1)) | 0;\r\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\r\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\r\n    lo = (lo + Math.imul(al3, bl2)) | 0;\r\n    mid = (mid + Math.imul(al3, bh2)) | 0;\r\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\r\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\r\n    lo = (lo + Math.imul(al2, bl3)) | 0;\r\n    mid = (mid + Math.imul(al2, bh3)) | 0;\r\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\r\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\r\n    lo = (lo + Math.imul(al1, bl4)) | 0;\r\n    mid = (mid + Math.imul(al1, bh4)) | 0;\r\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\r\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\r\n    lo = (lo + Math.imul(al0, bl5)) | 0;\r\n    mid = (mid + Math.imul(al0, bh5)) | 0;\r\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\r\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\r\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\r\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\r\n    w5 &= 0x3ffffff;\r\n    /* k = 6 */\r\n    lo = Math.imul(al6, bl0);\r\n    mid = Math.imul(al6, bh0);\r\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\r\n    hi = Math.imul(ah6, bh0);\r\n    lo = (lo + Math.imul(al5, bl1)) | 0;\r\n    mid = (mid + Math.imul(al5, bh1)) | 0;\r\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\r\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\r\n    lo = (lo + Math.imul(al4, bl2)) | 0;\r\n    mid = (mid + Math.imul(al4, bh2)) | 0;\r\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\r\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\r\n    lo = (lo + Math.imul(al3, bl3)) | 0;\r\n    mid = (mid + Math.imul(al3, bh3)) | 0;\r\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\r\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\r\n    lo = (lo + Math.imul(al2, bl4)) | 0;\r\n    mid = (mid + Math.imul(al2, bh4)) | 0;\r\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\r\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\r\n    lo = (lo + Math.imul(al1, bl5)) | 0;\r\n    mid = (mid + Math.imul(al1, bh5)) | 0;\r\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\r\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\r\n    lo = (lo + Math.imul(al0, bl6)) | 0;\r\n    mid = (mid + Math.imul(al0, bh6)) | 0;\r\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\r\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\r\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\r\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\r\n    w6 &= 0x3ffffff;\r\n    /* k = 7 */\r\n    lo = Math.imul(al7, bl0);\r\n    mid = Math.imul(al7, bh0);\r\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\r\n    hi = Math.imul(ah7, bh0);\r\n    lo = (lo + Math.imul(al6, bl1)) | 0;\r\n    mid = (mid + Math.imul(al6, bh1)) | 0;\r\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\r\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\r\n    lo = (lo + Math.imul(al5, bl2)) | 0;\r\n    mid = (mid + Math.imul(al5, bh2)) | 0;\r\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\r\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\r\n    lo = (lo + Math.imul(al4, bl3)) | 0;\r\n    mid = (mid + Math.imul(al4, bh3)) | 0;\r\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\r\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\r\n    lo = (lo + Math.imul(al3, bl4)) | 0;\r\n    mid = (mid + Math.imul(al3, bh4)) | 0;\r\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\r\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\r\n    lo = (lo + Math.imul(al2, bl5)) | 0;\r\n    mid = (mid + Math.imul(al2, bh5)) | 0;\r\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\r\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\r\n    lo = (lo + Math.imul(al1, bl6)) | 0;\r\n    mid = (mid + Math.imul(al1, bh6)) | 0;\r\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\r\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\r\n    lo = (lo + Math.imul(al0, bl7)) | 0;\r\n    mid = (mid + Math.imul(al0, bh7)) | 0;\r\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\r\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\r\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\r\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\r\n    w7 &= 0x3ffffff;\r\n    /* k = 8 */\r\n    lo = Math.imul(al8, bl0);\r\n    mid = Math.imul(al8, bh0);\r\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\r\n    hi = Math.imul(ah8, bh0);\r\n    lo = (lo + Math.imul(al7, bl1)) | 0;\r\n    mid = (mid + Math.imul(al7, bh1)) | 0;\r\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\r\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\r\n    lo = (lo + Math.imul(al6, bl2)) | 0;\r\n    mid = (mid + Math.imul(al6, bh2)) | 0;\r\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\r\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\r\n    lo = (lo + Math.imul(al5, bl3)) | 0;\r\n    mid = (mid + Math.imul(al5, bh3)) | 0;\r\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\r\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\r\n    lo = (lo + Math.imul(al4, bl4)) | 0;\r\n    mid = (mid + Math.imul(al4, bh4)) | 0;\r\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\r\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\r\n    lo = (lo + Math.imul(al3, bl5)) | 0;\r\n    mid = (mid + Math.imul(al3, bh5)) | 0;\r\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\r\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\r\n    lo = (lo + Math.imul(al2, bl6)) | 0;\r\n    mid = (mid + Math.imul(al2, bh6)) | 0;\r\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\r\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\r\n    lo = (lo + Math.imul(al1, bl7)) | 0;\r\n    mid = (mid + Math.imul(al1, bh7)) | 0;\r\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\r\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\r\n    lo = (lo + Math.imul(al0, bl8)) | 0;\r\n    mid = (mid + Math.imul(al0, bh8)) | 0;\r\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\r\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\r\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\r\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\r\n    w8 &= 0x3ffffff;\r\n    /* k = 9 */\r\n    lo = Math.imul(al9, bl0);\r\n    mid = Math.imul(al9, bh0);\r\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\r\n    hi = Math.imul(ah9, bh0);\r\n    lo = (lo + Math.imul(al8, bl1)) | 0;\r\n    mid = (mid + Math.imul(al8, bh1)) | 0;\r\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\r\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\r\n    lo = (lo + Math.imul(al7, bl2)) | 0;\r\n    mid = (mid + Math.imul(al7, bh2)) | 0;\r\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\r\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\r\n    lo = (lo + Math.imul(al6, bl3)) | 0;\r\n    mid = (mid + Math.imul(al6, bh3)) | 0;\r\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\r\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\r\n    lo = (lo + Math.imul(al5, bl4)) | 0;\r\n    mid = (mid + Math.imul(al5, bh4)) | 0;\r\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\r\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\r\n    lo = (lo + Math.imul(al4, bl5)) | 0;\r\n    mid = (mid + Math.imul(al4, bh5)) | 0;\r\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\r\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\r\n    lo = (lo + Math.imul(al3, bl6)) | 0;\r\n    mid = (mid + Math.imul(al3, bh6)) | 0;\r\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\r\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\r\n    lo = (lo + Math.imul(al2, bl7)) | 0;\r\n    mid = (mid + Math.imul(al2, bh7)) | 0;\r\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\r\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\r\n    lo = (lo + Math.imul(al1, bl8)) | 0;\r\n    mid = (mid + Math.imul(al1, bh8)) | 0;\r\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\r\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\r\n    lo = (lo + Math.imul(al0, bl9)) | 0;\r\n    mid = (mid + Math.imul(al0, bh9)) | 0;\r\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\r\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\r\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\r\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\r\n    w9 &= 0x3ffffff;\r\n    /* k = 10 */\r\n    lo = Math.imul(al9, bl1);\r\n    mid = Math.imul(al9, bh1);\r\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\r\n    hi = Math.imul(ah9, bh1);\r\n    lo = (lo + Math.imul(al8, bl2)) | 0;\r\n    mid = (mid + Math.imul(al8, bh2)) | 0;\r\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\r\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\r\n    lo = (lo + Math.imul(al7, bl3)) | 0;\r\n    mid = (mid + Math.imul(al7, bh3)) | 0;\r\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\r\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\r\n    lo = (lo + Math.imul(al6, bl4)) | 0;\r\n    mid = (mid + Math.imul(al6, bh4)) | 0;\r\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\r\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\r\n    lo = (lo + Math.imul(al5, bl5)) | 0;\r\n    mid = (mid + Math.imul(al5, bh5)) | 0;\r\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\r\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\r\n    lo = (lo + Math.imul(al4, bl6)) | 0;\r\n    mid = (mid + Math.imul(al4, bh6)) | 0;\r\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\r\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\r\n    lo = (lo + Math.imul(al3, bl7)) | 0;\r\n    mid = (mid + Math.imul(al3, bh7)) | 0;\r\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\r\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\r\n    lo = (lo + Math.imul(al2, bl8)) | 0;\r\n    mid = (mid + Math.imul(al2, bh8)) | 0;\r\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\r\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\r\n    lo = (lo + Math.imul(al1, bl9)) | 0;\r\n    mid = (mid + Math.imul(al1, bh9)) | 0;\r\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\r\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\r\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\r\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\r\n    w10 &= 0x3ffffff;\r\n    /* k = 11 */\r\n    lo = Math.imul(al9, bl2);\r\n    mid = Math.imul(al9, bh2);\r\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\r\n    hi = Math.imul(ah9, bh2);\r\n    lo = (lo + Math.imul(al8, bl3)) | 0;\r\n    mid = (mid + Math.imul(al8, bh3)) | 0;\r\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\r\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\r\n    lo = (lo + Math.imul(al7, bl4)) | 0;\r\n    mid = (mid + Math.imul(al7, bh4)) | 0;\r\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\r\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\r\n    lo = (lo + Math.imul(al6, bl5)) | 0;\r\n    mid = (mid + Math.imul(al6, bh5)) | 0;\r\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\r\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\r\n    lo = (lo + Math.imul(al5, bl6)) | 0;\r\n    mid = (mid + Math.imul(al5, bh6)) | 0;\r\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\r\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\r\n    lo = (lo + Math.imul(al4, bl7)) | 0;\r\n    mid = (mid + Math.imul(al4, bh7)) | 0;\r\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\r\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\r\n    lo = (lo + Math.imul(al3, bl8)) | 0;\r\n    mid = (mid + Math.imul(al3, bh8)) | 0;\r\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\r\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\r\n    lo = (lo + Math.imul(al2, bl9)) | 0;\r\n    mid = (mid + Math.imul(al2, bh9)) | 0;\r\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\r\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\r\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\r\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\r\n    w11 &= 0x3ffffff;\r\n    /* k = 12 */\r\n    lo = Math.imul(al9, bl3);\r\n    mid = Math.imul(al9, bh3);\r\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\r\n    hi = Math.imul(ah9, bh3);\r\n    lo = (lo + Math.imul(al8, bl4)) | 0;\r\n    mid = (mid + Math.imul(al8, bh4)) | 0;\r\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\r\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\r\n    lo = (lo + Math.imul(al7, bl5)) | 0;\r\n    mid = (mid + Math.imul(al7, bh5)) | 0;\r\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\r\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\r\n    lo = (lo + Math.imul(al6, bl6)) | 0;\r\n    mid = (mid + Math.imul(al6, bh6)) | 0;\r\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\r\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\r\n    lo = (lo + Math.imul(al5, bl7)) | 0;\r\n    mid = (mid + Math.imul(al5, bh7)) | 0;\r\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\r\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\r\n    lo = (lo + Math.imul(al4, bl8)) | 0;\r\n    mid = (mid + Math.imul(al4, bh8)) | 0;\r\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\r\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\r\n    lo = (lo + Math.imul(al3, bl9)) | 0;\r\n    mid = (mid + Math.imul(al3, bh9)) | 0;\r\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\r\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\r\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\r\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\r\n    w12 &= 0x3ffffff;\r\n    /* k = 13 */\r\n    lo = Math.imul(al9, bl4);\r\n    mid = Math.imul(al9, bh4);\r\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\r\n    hi = Math.imul(ah9, bh4);\r\n    lo = (lo + Math.imul(al8, bl5)) | 0;\r\n    mid = (mid + Math.imul(al8, bh5)) | 0;\r\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\r\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\r\n    lo = (lo + Math.imul(al7, bl6)) | 0;\r\n    mid = (mid + Math.imul(al7, bh6)) | 0;\r\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\r\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\r\n    lo = (lo + Math.imul(al6, bl7)) | 0;\r\n    mid = (mid + Math.imul(al6, bh7)) | 0;\r\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\r\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\r\n    lo = (lo + Math.imul(al5, bl8)) | 0;\r\n    mid = (mid + Math.imul(al5, bh8)) | 0;\r\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\r\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\r\n    lo = (lo + Math.imul(al4, bl9)) | 0;\r\n    mid = (mid + Math.imul(al4, bh9)) | 0;\r\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\r\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\r\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\r\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\r\n    w13 &= 0x3ffffff;\r\n    /* k = 14 */\r\n    lo = Math.imul(al9, bl5);\r\n    mid = Math.imul(al9, bh5);\r\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\r\n    hi = Math.imul(ah9, bh5);\r\n    lo = (lo + Math.imul(al8, bl6)) | 0;\r\n    mid = (mid + Math.imul(al8, bh6)) | 0;\r\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\r\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\r\n    lo = (lo + Math.imul(al7, bl7)) | 0;\r\n    mid = (mid + Math.imul(al7, bh7)) | 0;\r\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\r\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\r\n    lo = (lo + Math.imul(al6, bl8)) | 0;\r\n    mid = (mid + Math.imul(al6, bh8)) | 0;\r\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\r\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\r\n    lo = (lo + Math.imul(al5, bl9)) | 0;\r\n    mid = (mid + Math.imul(al5, bh9)) | 0;\r\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\r\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\r\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\r\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\r\n    w14 &= 0x3ffffff;\r\n    /* k = 15 */\r\n    lo = Math.imul(al9, bl6);\r\n    mid = Math.imul(al9, bh6);\r\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\r\n    hi = Math.imul(ah9, bh6);\r\n    lo = (lo + Math.imul(al8, bl7)) | 0;\r\n    mid = (mid + Math.imul(al8, bh7)) | 0;\r\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\r\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\r\n    lo = (lo + Math.imul(al7, bl8)) | 0;\r\n    mid = (mid + Math.imul(al7, bh8)) | 0;\r\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\r\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\r\n    lo = (lo + Math.imul(al6, bl9)) | 0;\r\n    mid = (mid + Math.imul(al6, bh9)) | 0;\r\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\r\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\r\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\r\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\r\n    w15 &= 0x3ffffff;\r\n    /* k = 16 */\r\n    lo = Math.imul(al9, bl7);\r\n    mid = Math.imul(al9, bh7);\r\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\r\n    hi = Math.imul(ah9, bh7);\r\n    lo = (lo + Math.imul(al8, bl8)) | 0;\r\n    mid = (mid + Math.imul(al8, bh8)) | 0;\r\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\r\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\r\n    lo = (lo + Math.imul(al7, bl9)) | 0;\r\n    mid = (mid + Math.imul(al7, bh9)) | 0;\r\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\r\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\r\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\r\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\r\n    w16 &= 0x3ffffff;\r\n    /* k = 17 */\r\n    lo = Math.imul(al9, bl8);\r\n    mid = Math.imul(al9, bh8);\r\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\r\n    hi = Math.imul(ah9, bh8);\r\n    lo = (lo + Math.imul(al8, bl9)) | 0;\r\n    mid = (mid + Math.imul(al8, bh9)) | 0;\r\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\r\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\r\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\r\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\r\n    w17 &= 0x3ffffff;\r\n    /* k = 18 */\r\n    lo = Math.imul(al9, bl9);\r\n    mid = Math.imul(al9, bh9);\r\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\r\n    hi = Math.imul(ah9, bh9);\r\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\r\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\r\n    w18 &= 0x3ffffff;\r\n    o[0] = w0;\r\n    o[1] = w1;\r\n    o[2] = w2;\r\n    o[3] = w3;\r\n    o[4] = w4;\r\n    o[5] = w5;\r\n    o[6] = w6;\r\n    o[7] = w7;\r\n    o[8] = w8;\r\n    o[9] = w9;\r\n    o[10] = w10;\r\n    o[11] = w11;\r\n    o[12] = w12;\r\n    o[13] = w13;\r\n    o[14] = w14;\r\n    o[15] = w15;\r\n    o[16] = w16;\r\n    o[17] = w17;\r\n    o[18] = w18;\r\n    if (c !== 0) {\r\n      o[19] = c;\r\n      out.length++;\r\n    }\r\n    return out;\r\n  };\r\n\r\n  // Polyfill comb\r\n  if (!Math.imul) {\r\n    comb10MulTo = smallMulTo;\r\n  }\r\n\r\n  function bigMulTo (self, num, out) {\r\n    out.negative = num.negative ^ self.negative;\r\n    out.length = self.length + num.length;\r\n\r\n    var carry = 0;\r\n    var hncarry = 0;\r\n    for (var k = 0; k < out.length - 1; k++) {\r\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\r\n      // note that ncarry could be >= 0x3ffffff\r\n      var ncarry = hncarry;\r\n      hncarry = 0;\r\n      var rword = carry & 0x3ffffff;\r\n      var maxJ = Math.min(k, num.length - 1);\r\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\r\n        var i = k - j;\r\n        var a = self.words[i] | 0;\r\n        var b = num.words[j] | 0;\r\n        var r = a * b;\r\n\r\n        var lo = r & 0x3ffffff;\r\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\r\n        lo = (lo + rword) | 0;\r\n        rword = lo & 0x3ffffff;\r\n        ncarry = (ncarry + (lo >>> 26)) | 0;\r\n\r\n        hncarry += ncarry >>> 26;\r\n        ncarry &= 0x3ffffff;\r\n      }\r\n      out.words[k] = rword;\r\n      carry = ncarry;\r\n      ncarry = hncarry;\r\n    }\r\n    if (carry !== 0) {\r\n      out.words[k] = carry;\r\n    } else {\r\n      out.length--;\r\n    }\r\n\r\n    return out._strip();\r\n  }\r\n\r\n  function jumboMulTo (self, num, out) {\r\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\r\n    // var fftm = new FFTM();\r\n    // return fftm.mulp(self, num, out);\r\n    return bigMulTo(self, num, out);\r\n  }\r\n\r\n  BN.prototype.mulTo = function mulTo (num, out) {\r\n    var res;\r\n    var len = this.length + num.length;\r\n    if (this.length === 10 && num.length === 10) {\r\n      res = comb10MulTo(this, num, out);\r\n    } else if (len < 63) {\r\n      res = smallMulTo(this, num, out);\r\n    } else if (len < 1024) {\r\n      res = bigMulTo(this, num, out);\r\n    } else {\r\n      res = jumboMulTo(this, num, out);\r\n    }\r\n\r\n    return res;\r\n  };\r\n\r\n  // Cooley-Tukey algorithm for FFT\r\n  // slightly revisited to rely on looping instead of recursion\r\n\r\n  function FFTM (x, y) {\r\n    this.x = x;\r\n    this.y = y;\r\n  }\r\n\r\n  FFTM.prototype.makeRBT = function makeRBT (N) {\r\n    var t = new Array(N);\r\n    var l = BN.prototype._countBits(N) - 1;\r\n    for (var i = 0; i < N; i++) {\r\n      t[i] = this.revBin(i, l, N);\r\n    }\r\n\r\n    return t;\r\n  };\r\n\r\n  // Returns binary-reversed representation of `x`\r\n  FFTM.prototype.revBin = function revBin (x, l, N) {\r\n    if (x === 0 || x === N - 1) return x;\r\n\r\n    var rb = 0;\r\n    for (var i = 0; i < l; i++) {\r\n      rb |= (x & 1) << (l - i - 1);\r\n      x >>= 1;\r\n    }\r\n\r\n    return rb;\r\n  };\r\n\r\n  // Performs \"tweedling\" phase, therefore 'emulating'\r\n  // behaviour of the recursive algorithm\r\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\r\n    for (var i = 0; i < N; i++) {\r\n      rtws[i] = rws[rbt[i]];\r\n      itws[i] = iws[rbt[i]];\r\n    }\r\n  };\r\n\r\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\r\n    this.permute(rbt, rws, iws, rtws, itws, N);\r\n\r\n    for (var s = 1; s < N; s <<= 1) {\r\n      var l = s << 1;\r\n\r\n      var rtwdf = Math.cos(2 * Math.PI / l);\r\n      var itwdf = Math.sin(2 * Math.PI / l);\r\n\r\n      for (var p = 0; p < N; p += l) {\r\n        var rtwdf_ = rtwdf;\r\n        var itwdf_ = itwdf;\r\n\r\n        for (var j = 0; j < s; j++) {\r\n          var re = rtws[p + j];\r\n          var ie = itws[p + j];\r\n\r\n          var ro = rtws[p + j + s];\r\n          var io = itws[p + j + s];\r\n\r\n          var rx = rtwdf_ * ro - itwdf_ * io;\r\n\r\n          io = rtwdf_ * io + itwdf_ * ro;\r\n          ro = rx;\r\n\r\n          rtws[p + j] = re + ro;\r\n          itws[p + j] = ie + io;\r\n\r\n          rtws[p + j + s] = re - ro;\r\n          itws[p + j + s] = ie - io;\r\n\r\n          /* jshint maxdepth : false */\r\n          if (j !== l) {\r\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\r\n\r\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\r\n            rtwdf_ = rx;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\r\n    var N = Math.max(m, n) | 1;\r\n    var odd = N & 1;\r\n    var i = 0;\r\n    for (N = N / 2 | 0; N; N = N >>> 1) {\r\n      i++;\r\n    }\r\n\r\n    return 1 << i + 1 + odd;\r\n  };\r\n\r\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\r\n    if (N <= 1) return;\r\n\r\n    for (var i = 0; i < N / 2; i++) {\r\n      var t = rws[i];\r\n\r\n      rws[i] = rws[N - i - 1];\r\n      rws[N - i - 1] = t;\r\n\r\n      t = iws[i];\r\n\r\n      iws[i] = -iws[N - i - 1];\r\n      iws[N - i - 1] = -t;\r\n    }\r\n  };\r\n\r\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\r\n    var carry = 0;\r\n    for (var i = 0; i < N / 2; i++) {\r\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\r\n        Math.round(ws[2 * i] / N) +\r\n        carry;\r\n\r\n      ws[i] = w & 0x3ffffff;\r\n\r\n      if (w < 0x4000000) {\r\n        carry = 0;\r\n      } else {\r\n        carry = w / 0x4000000 | 0;\r\n      }\r\n    }\r\n\r\n    return ws;\r\n  };\r\n\r\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\r\n    var carry = 0;\r\n    for (var i = 0; i < len; i++) {\r\n      carry = carry + (ws[i] | 0);\r\n\r\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\r\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\r\n    }\r\n\r\n    // Pad with zeroes\r\n    for (i = 2 * len; i < N; ++i) {\r\n      rws[i] = 0;\r\n    }\r\n\r\n    assert(carry === 0);\r\n    assert((carry & ~0x1fff) === 0);\r\n  };\r\n\r\n  FFTM.prototype.stub = function stub (N) {\r\n    var ph = new Array(N);\r\n    for (var i = 0; i < N; i++) {\r\n      ph[i] = 0;\r\n    }\r\n\r\n    return ph;\r\n  };\r\n\r\n  FFTM.prototype.mulp = function mulp (x, y, out) {\r\n    var N = 2 * this.guessLen13b(x.length, y.length);\r\n\r\n    var rbt = this.makeRBT(N);\r\n\r\n    var _ = this.stub(N);\r\n\r\n    var rws = new Array(N);\r\n    var rwst = new Array(N);\r\n    var iwst = new Array(N);\r\n\r\n    var nrws = new Array(N);\r\n    var nrwst = new Array(N);\r\n    var niwst = new Array(N);\r\n\r\n    var rmws = out.words;\r\n    rmws.length = N;\r\n\r\n    this.convert13b(x.words, x.length, rws, N);\r\n    this.convert13b(y.words, y.length, nrws, N);\r\n\r\n    this.transform(rws, _, rwst, iwst, N, rbt);\r\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\r\n\r\n    for (var i = 0; i < N; i++) {\r\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\r\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\r\n      rwst[i] = rx;\r\n    }\r\n\r\n    this.conjugate(rwst, iwst, N);\r\n    this.transform(rwst, iwst, rmws, _, N, rbt);\r\n    this.conjugate(rmws, _, N);\r\n    this.normalize13b(rmws, N);\r\n\r\n    out.negative = x.negative ^ y.negative;\r\n    out.length = x.length + y.length;\r\n    return out._strip();\r\n  };\r\n\r\n  // Multiply `this` by `num`\r\n  BN.prototype.mul = function mul (num) {\r\n    var out = new BN(null);\r\n    out.words = new Array(this.length + num.length);\r\n    return this.mulTo(num, out);\r\n  };\r\n\r\n  // Multiply employing FFT\r\n  BN.prototype.mulf = function mulf (num) {\r\n    var out = new BN(null);\r\n    out.words = new Array(this.length + num.length);\r\n    return jumboMulTo(this, num, out);\r\n  };\r\n\r\n  // In-place Multiplication\r\n  BN.prototype.imul = function imul (num) {\r\n    return this.clone().mulTo(num, this);\r\n  };\r\n\r\n  BN.prototype.imuln = function imuln (num) {\r\n    var isNegNum = num < 0;\r\n    if (isNegNum) num = -num;\r\n\r\n    assert(typeof num === 'number');\r\n    assert(num < 0x4000000);\r\n\r\n    // Carry\r\n    var carry = 0;\r\n    for (var i = 0; i < this.length; i++) {\r\n      var w = (this.words[i] | 0) * num;\r\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\r\n      carry >>= 26;\r\n      carry += (w / 0x4000000) | 0;\r\n      // NOTE: lo is 27bit maximum\r\n      carry += lo >>> 26;\r\n      this.words[i] = lo & 0x3ffffff;\r\n    }\r\n\r\n    if (carry !== 0) {\r\n      this.words[i] = carry;\r\n      this.length++;\r\n    }\r\n\r\n    return isNegNum ? this.ineg() : this;\r\n  };\r\n\r\n  BN.prototype.muln = function muln (num) {\r\n    return this.clone().imuln(num);\r\n  };\r\n\r\n  // `this` * `this`\r\n  BN.prototype.sqr = function sqr () {\r\n    return this.mul(this);\r\n  };\r\n\r\n  // `this` * `this` in-place\r\n  BN.prototype.isqr = function isqr () {\r\n    return this.imul(this.clone());\r\n  };\r\n\r\n  // Math.pow(`this`, `num`)\r\n  BN.prototype.pow = function pow (num) {\r\n    var w = toBitArray(num);\r\n    if (w.length === 0) return new BN(1);\r\n\r\n    // Skip leading zeroes\r\n    var res = this;\r\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\r\n      if (w[i] !== 0) break;\r\n    }\r\n\r\n    if (++i < w.length) {\r\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\r\n        if (w[i] === 0) continue;\r\n\r\n        res = res.mul(q);\r\n      }\r\n    }\r\n\r\n    return res;\r\n  };\r\n\r\n  // Shift-left in-place\r\n  BN.prototype.iushln = function iushln (bits) {\r\n    assert(typeof bits === 'number' && bits >= 0);\r\n    var r = bits % 26;\r\n    var s = (bits - r) / 26;\r\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\r\n    var i;\r\n\r\n    if (r !== 0) {\r\n      var carry = 0;\r\n\r\n      for (i = 0; i < this.length; i++) {\r\n        var newCarry = this.words[i] & carryMask;\r\n        var c = ((this.words[i] | 0) - newCarry) << r;\r\n        this.words[i] = c | carry;\r\n        carry = newCarry >>> (26 - r);\r\n      }\r\n\r\n      if (carry) {\r\n        this.words[i] = carry;\r\n        this.length++;\r\n      }\r\n    }\r\n\r\n    if (s !== 0) {\r\n      for (i = this.length - 1; i >= 0; i--) {\r\n        this.words[i + s] = this.words[i];\r\n      }\r\n\r\n      for (i = 0; i < s; i++) {\r\n        this.words[i] = 0;\r\n      }\r\n\r\n      this.length += s;\r\n    }\r\n\r\n    return this._strip();\r\n  };\r\n\r\n  BN.prototype.ishln = function ishln (bits) {\r\n    // TODO(indutny): implement me\r\n    assert(this.negative === 0);\r\n    return this.iushln(bits);\r\n  };\r\n\r\n  // Shift-right in-place\r\n  // NOTE: `hint` is a lowest bit before trailing zeroes\r\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\r\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\r\n    assert(typeof bits === 'number' && bits >= 0);\r\n    var h;\r\n    if (hint) {\r\n      h = (hint - (hint % 26)) / 26;\r\n    } else {\r\n      h = 0;\r\n    }\r\n\r\n    var r = bits % 26;\r\n    var s = Math.min((bits - r) / 26, this.length);\r\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\r\n    var maskedWords = extended;\r\n\r\n    h -= s;\r\n    h = Math.max(0, h);\r\n\r\n    // Extended mode, copy masked part\r\n    if (maskedWords) {\r\n      for (var i = 0; i < s; i++) {\r\n        maskedWords.words[i] = this.words[i];\r\n      }\r\n      maskedWords.length = s;\r\n    }\r\n\r\n    if (s === 0) {\r\n      // No-op, we should not move anything at all\r\n    } else if (this.length > s) {\r\n      this.length -= s;\r\n      for (i = 0; i < this.length; i++) {\r\n        this.words[i] = this.words[i + s];\r\n      }\r\n    } else {\r\n      this.words[0] = 0;\r\n      this.length = 1;\r\n    }\r\n\r\n    var carry = 0;\r\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\r\n      var word = this.words[i] | 0;\r\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\r\n      carry = word & mask;\r\n    }\r\n\r\n    // Push carried bits as a mask\r\n    if (maskedWords && carry !== 0) {\r\n      maskedWords.words[maskedWords.length++] = carry;\r\n    }\r\n\r\n    if (this.length === 0) {\r\n      this.words[0] = 0;\r\n      this.length = 1;\r\n    }\r\n\r\n    return this._strip();\r\n  };\r\n\r\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\r\n    // TODO(indutny): implement me\r\n    assert(this.negative === 0);\r\n    return this.iushrn(bits, hint, extended);\r\n  };\r\n\r\n  // Shift-left\r\n  BN.prototype.shln = function shln (bits) {\r\n    return this.clone().ishln(bits);\r\n  };\r\n\r\n  BN.prototype.ushln = function ushln (bits) {\r\n    return this.clone().iushln(bits);\r\n  };\r\n\r\n  // Shift-right\r\n  BN.prototype.shrn = function shrn (bits) {\r\n    return this.clone().ishrn(bits);\r\n  };\r\n\r\n  BN.prototype.ushrn = function ushrn (bits) {\r\n    return this.clone().iushrn(bits);\r\n  };\r\n\r\n  // Test if n bit is set\r\n  BN.prototype.testn = function testn (bit) {\r\n    assert(typeof bit === 'number' && bit >= 0);\r\n    var r = bit % 26;\r\n    var s = (bit - r) / 26;\r\n    var q = 1 << r;\r\n\r\n    // Fast case: bit is much higher than all existing words\r\n    if (this.length <= s) return false;\r\n\r\n    // Check bit and return\r\n    var w = this.words[s];\r\n\r\n    return !!(w & q);\r\n  };\r\n\r\n  // Return only lowers bits of number (in-place)\r\n  BN.prototype.imaskn = function imaskn (bits) {\r\n    assert(typeof bits === 'number' && bits >= 0);\r\n    var r = bits % 26;\r\n    var s = (bits - r) / 26;\r\n\r\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\r\n\r\n    if (this.length <= s) {\r\n      return this;\r\n    }\r\n\r\n    if (r !== 0) {\r\n      s++;\r\n    }\r\n    this.length = Math.min(s, this.length);\r\n\r\n    if (r !== 0) {\r\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\r\n      this.words[this.length - 1] &= mask;\r\n    }\r\n\r\n    return this._strip();\r\n  };\r\n\r\n  // Return only lowers bits of number\r\n  BN.prototype.maskn = function maskn (bits) {\r\n    return this.clone().imaskn(bits);\r\n  };\r\n\r\n  // Add plain number `num` to `this`\r\n  BN.prototype.iaddn = function iaddn (num) {\r\n    assert(typeof num === 'number');\r\n    assert(num < 0x4000000);\r\n    if (num < 0) return this.isubn(-num);\r\n\r\n    // Possible sign change\r\n    if (this.negative !== 0) {\r\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\r\n        this.words[0] = num - (this.words[0] | 0);\r\n        this.negative = 0;\r\n        return this;\r\n      }\r\n\r\n      this.negative = 0;\r\n      this.isubn(num);\r\n      this.negative = 1;\r\n      return this;\r\n    }\r\n\r\n    // Add without checks\r\n    return this._iaddn(num);\r\n  };\r\n\r\n  BN.prototype._iaddn = function _iaddn (num) {\r\n    this.words[0] += num;\r\n\r\n    // Carry\r\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\r\n      this.words[i] -= 0x4000000;\r\n      if (i === this.length - 1) {\r\n        this.words[i + 1] = 1;\r\n      } else {\r\n        this.words[i + 1]++;\r\n      }\r\n    }\r\n    this.length = Math.max(this.length, i + 1);\r\n\r\n    return this;\r\n  };\r\n\r\n  // Subtract plain number `num` from `this`\r\n  BN.prototype.isubn = function isubn (num) {\r\n    assert(typeof num === 'number');\r\n    assert(num < 0x4000000);\r\n    if (num < 0) return this.iaddn(-num);\r\n\r\n    if (this.negative !== 0) {\r\n      this.negative = 0;\r\n      this.iaddn(num);\r\n      this.negative = 1;\r\n      return this;\r\n    }\r\n\r\n    this.words[0] -= num;\r\n\r\n    if (this.length === 1 && this.words[0] < 0) {\r\n      this.words[0] = -this.words[0];\r\n      this.negative = 1;\r\n    } else {\r\n      // Carry\r\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\r\n        this.words[i] += 0x4000000;\r\n        this.words[i + 1] -= 1;\r\n      }\r\n    }\r\n\r\n    return this._strip();\r\n  };\r\n\r\n  BN.prototype.addn = function addn (num) {\r\n    return this.clone().iaddn(num);\r\n  };\r\n\r\n  BN.prototype.subn = function subn (num) {\r\n    return this.clone().isubn(num);\r\n  };\r\n\r\n  BN.prototype.iabs = function iabs () {\r\n    this.negative = 0;\r\n\r\n    return this;\r\n  };\r\n\r\n  BN.prototype.abs = function abs () {\r\n    return this.clone().iabs();\r\n  };\r\n\r\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\r\n    var len = num.length + shift;\r\n    var i;\r\n\r\n    this._expand(len);\r\n\r\n    var w;\r\n    var carry = 0;\r\n    for (i = 0; i < num.length; i++) {\r\n      w = (this.words[i + shift] | 0) + carry;\r\n      var right = (num.words[i] | 0) * mul;\r\n      w -= right & 0x3ffffff;\r\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\r\n      this.words[i + shift] = w & 0x3ffffff;\r\n    }\r\n    for (; i < this.length - shift; i++) {\r\n      w = (this.words[i + shift] | 0) + carry;\r\n      carry = w >> 26;\r\n      this.words[i + shift] = w & 0x3ffffff;\r\n    }\r\n\r\n    if (carry === 0) return this._strip();\r\n\r\n    // Subtraction overflow\r\n    assert(carry === -1);\r\n    carry = 0;\r\n    for (i = 0; i < this.length; i++) {\r\n      w = -(this.words[i] | 0) + carry;\r\n      carry = w >> 26;\r\n      this.words[i] = w & 0x3ffffff;\r\n    }\r\n    this.negative = 1;\r\n\r\n    return this._strip();\r\n  };\r\n\r\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\r\n    var shift = this.length - num.length;\r\n\r\n    var a = this.clone();\r\n    var b = num;\r\n\r\n    // Normalize\r\n    var bhi = b.words[b.length - 1] | 0;\r\n    var bhiBits = this._countBits(bhi);\r\n    shift = 26 - bhiBits;\r\n    if (shift !== 0) {\r\n      b = b.ushln(shift);\r\n      a.iushln(shift);\r\n      bhi = b.words[b.length - 1] | 0;\r\n    }\r\n\r\n    // Initialize quotient\r\n    var m = a.length - b.length;\r\n    var q;\r\n\r\n    if (mode !== 'mod') {\r\n      q = new BN(null);\r\n      q.length = m + 1;\r\n      q.words = new Array(q.length);\r\n      for (var i = 0; i < q.length; i++) {\r\n        q.words[i] = 0;\r\n      }\r\n    }\r\n\r\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\r\n    if (diff.negative === 0) {\r\n      a = diff;\r\n      if (q) {\r\n        q.words[m] = 1;\r\n      }\r\n    }\r\n\r\n    for (var j = m - 1; j >= 0; j--) {\r\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\r\n        (a.words[b.length + j - 1] | 0);\r\n\r\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\r\n      // (0x7ffffff)\r\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\r\n\r\n      a._ishlnsubmul(b, qj, j);\r\n      while (a.negative !== 0) {\r\n        qj--;\r\n        a.negative = 0;\r\n        a._ishlnsubmul(b, 1, j);\r\n        if (!a.isZero()) {\r\n          a.negative ^= 1;\r\n        }\r\n      }\r\n      if (q) {\r\n        q.words[j] = qj;\r\n      }\r\n    }\r\n    if (q) {\r\n      q._strip();\r\n    }\r\n    a._strip();\r\n\r\n    // Denormalize\r\n    if (mode !== 'div' && shift !== 0) {\r\n      a.iushrn(shift);\r\n    }\r\n\r\n    return {\r\n      div: q || null,\r\n      mod: a\r\n    };\r\n  };\r\n\r\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\r\n  //       to `div` to request div only, or be absent to\r\n  //       request both div & mod\r\n  //       2) `positive` is true if unsigned mod is requested\r\n  BN.prototype.divmod = function divmod (num, mode, positive) {\r\n    assert(!num.isZero());\r\n\r\n    if (this.isZero()) {\r\n      return {\r\n        div: new BN(0),\r\n        mod: new BN(0)\r\n      };\r\n    }\r\n\r\n    var div, mod, res;\r\n    if (this.negative !== 0 && num.negative === 0) {\r\n      res = this.neg().divmod(num, mode);\r\n\r\n      if (mode !== 'mod') {\r\n        div = res.div.neg();\r\n      }\r\n\r\n      if (mode !== 'div') {\r\n        mod = res.mod.neg();\r\n        if (positive && mod.negative !== 0) {\r\n          mod.iadd(num);\r\n        }\r\n      }\r\n\r\n      return {\r\n        div: div,\r\n        mod: mod\r\n      };\r\n    }\r\n\r\n    if (this.negative === 0 && num.negative !== 0) {\r\n      res = this.divmod(num.neg(), mode);\r\n\r\n      if (mode !== 'mod') {\r\n        div = res.div.neg();\r\n      }\r\n\r\n      return {\r\n        div: div,\r\n        mod: res.mod\r\n      };\r\n    }\r\n\r\n    if ((this.negative & num.negative) !== 0) {\r\n      res = this.neg().divmod(num.neg(), mode);\r\n\r\n      if (mode !== 'div') {\r\n        mod = res.mod.neg();\r\n        if (positive && mod.negative !== 0) {\r\n          mod.isub(num);\r\n        }\r\n      }\r\n\r\n      return {\r\n        div: res.div,\r\n        mod: mod\r\n      };\r\n    }\r\n\r\n    // Both numbers are positive at this point\r\n\r\n    // Strip both numbers to approximate shift value\r\n    if (num.length > this.length || this.cmp(num) < 0) {\r\n      return {\r\n        div: new BN(0),\r\n        mod: this\r\n      };\r\n    }\r\n\r\n    // Very short reduction\r\n    if (num.length === 1) {\r\n      if (mode === 'div') {\r\n        return {\r\n          div: this.divn(num.words[0]),\r\n          mod: null\r\n        };\r\n      }\r\n\r\n      if (mode === 'mod') {\r\n        return {\r\n          div: null,\r\n          mod: new BN(this.modrn(num.words[0]))\r\n        };\r\n      }\r\n\r\n      return {\r\n        div: this.divn(num.words[0]),\r\n        mod: new BN(this.modrn(num.words[0]))\r\n      };\r\n    }\r\n\r\n    return this._wordDiv(num, mode);\r\n  };\r\n\r\n  // Find `this` / `num`\r\n  BN.prototype.div = function div (num) {\r\n    return this.divmod(num, 'div', false).div;\r\n  };\r\n\r\n  // Find `this` % `num`\r\n  BN.prototype.mod = function mod (num) {\r\n    return this.divmod(num, 'mod', false).mod;\r\n  };\r\n\r\n  BN.prototype.umod = function umod (num) {\r\n    return this.divmod(num, 'mod', true).mod;\r\n  };\r\n\r\n  // Find Round(`this` / `num`)\r\n  BN.prototype.divRound = function divRound (num) {\r\n    var dm = this.divmod(num);\r\n\r\n    // Fast case - exact division\r\n    if (dm.mod.isZero()) return dm.div;\r\n\r\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\r\n\r\n    var half = num.ushrn(1);\r\n    var r2 = num.andln(1);\r\n    var cmp = mod.cmp(half);\r\n\r\n    // Round down\r\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\r\n\r\n    // Round up\r\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\r\n  };\r\n\r\n  BN.prototype.modrn = function modrn (num) {\r\n    var isNegNum = num < 0;\r\n    if (isNegNum) num = -num;\r\n\r\n    assert(num <= 0x3ffffff);\r\n    var p = (1 << 26) % num;\r\n\r\n    var acc = 0;\r\n    for (var i = this.length - 1; i >= 0; i--) {\r\n      acc = (p * acc + (this.words[i] | 0)) % num;\r\n    }\r\n\r\n    return isNegNum ? -acc : acc;\r\n  };\r\n\r\n  // WARNING: DEPRECATED\r\n  BN.prototype.modn = function modn (num) {\r\n    return this.modrn(num);\r\n  };\r\n\r\n  // In-place division by number\r\n  BN.prototype.idivn = function idivn (num) {\r\n    var isNegNum = num < 0;\r\n    if (isNegNum) num = -num;\r\n\r\n    assert(num <= 0x3ffffff);\r\n\r\n    var carry = 0;\r\n    for (var i = this.length - 1; i >= 0; i--) {\r\n      var w = (this.words[i] | 0) + carry * 0x4000000;\r\n      this.words[i] = (w / num) | 0;\r\n      carry = w % num;\r\n    }\r\n\r\n    this._strip();\r\n    return isNegNum ? this.ineg() : this;\r\n  };\r\n\r\n  BN.prototype.divn = function divn (num) {\r\n    return this.clone().idivn(num);\r\n  };\r\n\r\n  BN.prototype.egcd = function egcd (p) {\r\n    assert(p.negative === 0);\r\n    assert(!p.isZero());\r\n\r\n    var x = this;\r\n    var y = p.clone();\r\n\r\n    if (x.negative !== 0) {\r\n      x = x.umod(p);\r\n    } else {\r\n      x = x.clone();\r\n    }\r\n\r\n    // A * x + B * y = x\r\n    var A = new BN(1);\r\n    var B = new BN(0);\r\n\r\n    // C * x + D * y = y\r\n    var C = new BN(0);\r\n    var D = new BN(1);\r\n\r\n    var g = 0;\r\n\r\n    while (x.isEven() && y.isEven()) {\r\n      x.iushrn(1);\r\n      y.iushrn(1);\r\n      ++g;\r\n    }\r\n\r\n    var yp = y.clone();\r\n    var xp = x.clone();\r\n\r\n    while (!x.isZero()) {\r\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\r\n      if (i > 0) {\r\n        x.iushrn(i);\r\n        while (i-- > 0) {\r\n          if (A.isOdd() || B.isOdd()) {\r\n            A.iadd(yp);\r\n            B.isub(xp);\r\n          }\r\n\r\n          A.iushrn(1);\r\n          B.iushrn(1);\r\n        }\r\n      }\r\n\r\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\r\n      if (j > 0) {\r\n        y.iushrn(j);\r\n        while (j-- > 0) {\r\n          if (C.isOdd() || D.isOdd()) {\r\n            C.iadd(yp);\r\n            D.isub(xp);\r\n          }\r\n\r\n          C.iushrn(1);\r\n          D.iushrn(1);\r\n        }\r\n      }\r\n\r\n      if (x.cmp(y) >= 0) {\r\n        x.isub(y);\r\n        A.isub(C);\r\n        B.isub(D);\r\n      } else {\r\n        y.isub(x);\r\n        C.isub(A);\r\n        D.isub(B);\r\n      }\r\n    }\r\n\r\n    return {\r\n      a: C,\r\n      b: D,\r\n      gcd: y.iushln(g)\r\n    };\r\n  };\r\n\r\n  // This is reduced incarnation of the binary EEA\r\n  // above, designated to invert members of the\r\n  // _prime_ fields F(p) at a maximal speed\r\n  BN.prototype._invmp = function _invmp (p) {\r\n    assert(p.negative === 0);\r\n    assert(!p.isZero());\r\n\r\n    var a = this;\r\n    var b = p.clone();\r\n\r\n    if (a.negative !== 0) {\r\n      a = a.umod(p);\r\n    } else {\r\n      a = a.clone();\r\n    }\r\n\r\n    var x1 = new BN(1);\r\n    var x2 = new BN(0);\r\n\r\n    var delta = b.clone();\r\n\r\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\r\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\r\n      if (i > 0) {\r\n        a.iushrn(i);\r\n        while (i-- > 0) {\r\n          if (x1.isOdd()) {\r\n            x1.iadd(delta);\r\n          }\r\n\r\n          x1.iushrn(1);\r\n        }\r\n      }\r\n\r\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\r\n      if (j > 0) {\r\n        b.iushrn(j);\r\n        while (j-- > 0) {\r\n          if (x2.isOdd()) {\r\n            x2.iadd(delta);\r\n          }\r\n\r\n          x2.iushrn(1);\r\n        }\r\n      }\r\n\r\n      if (a.cmp(b) >= 0) {\r\n        a.isub(b);\r\n        x1.isub(x2);\r\n      } else {\r\n        b.isub(a);\r\n        x2.isub(x1);\r\n      }\r\n    }\r\n\r\n    var res;\r\n    if (a.cmpn(1) === 0) {\r\n      res = x1;\r\n    } else {\r\n      res = x2;\r\n    }\r\n\r\n    if (res.cmpn(0) < 0) {\r\n      res.iadd(p);\r\n    }\r\n\r\n    return res;\r\n  };\r\n\r\n  BN.prototype.gcd = function gcd (num) {\r\n    if (this.isZero()) return num.abs();\r\n    if (num.isZero()) return this.abs();\r\n\r\n    var a = this.clone();\r\n    var b = num.clone();\r\n    a.negative = 0;\r\n    b.negative = 0;\r\n\r\n    // Remove common factor of two\r\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\r\n      a.iushrn(1);\r\n      b.iushrn(1);\r\n    }\r\n\r\n    do {\r\n      while (a.isEven()) {\r\n        a.iushrn(1);\r\n      }\r\n      while (b.isEven()) {\r\n        b.iushrn(1);\r\n      }\r\n\r\n      var r = a.cmp(b);\r\n      if (r < 0) {\r\n        // Swap `a` and `b` to make `a` always bigger than `b`\r\n        var t = a;\r\n        a = b;\r\n        b = t;\r\n      } else if (r === 0 || b.cmpn(1) === 0) {\r\n        break;\r\n      }\r\n\r\n      a.isub(b);\r\n    } while (true);\r\n\r\n    return b.iushln(shift);\r\n  };\r\n\r\n  // Invert number in the field F(num)\r\n  BN.prototype.invm = function invm (num) {\r\n    return this.egcd(num).a.umod(num);\r\n  };\r\n\r\n  BN.prototype.isEven = function isEven () {\r\n    return (this.words[0] & 1) === 0;\r\n  };\r\n\r\n  BN.prototype.isOdd = function isOdd () {\r\n    return (this.words[0] & 1) === 1;\r\n  };\r\n\r\n  // And first word and num\r\n  BN.prototype.andln = function andln (num) {\r\n    return this.words[0] & num;\r\n  };\r\n\r\n  // Increment at the bit position in-line\r\n  BN.prototype.bincn = function bincn (bit) {\r\n    assert(typeof bit === 'number');\r\n    var r = bit % 26;\r\n    var s = (bit - r) / 26;\r\n    var q = 1 << r;\r\n\r\n    // Fast case: bit is much higher than all existing words\r\n    if (this.length <= s) {\r\n      this._expand(s + 1);\r\n      this.words[s] |= q;\r\n      return this;\r\n    }\r\n\r\n    // Add bit and propagate, if needed\r\n    var carry = q;\r\n    for (var i = s; carry !== 0 && i < this.length; i++) {\r\n      var w = this.words[i] | 0;\r\n      w += carry;\r\n      carry = w >>> 26;\r\n      w &= 0x3ffffff;\r\n      this.words[i] = w;\r\n    }\r\n    if (carry !== 0) {\r\n      this.words[i] = carry;\r\n      this.length++;\r\n    }\r\n    return this;\r\n  };\r\n\r\n  BN.prototype.isZero = function isZero () {\r\n    return this.length === 1 && this.words[0] === 0;\r\n  };\r\n\r\n  BN.prototype.cmpn = function cmpn (num) {\r\n    var negative = num < 0;\r\n\r\n    if (this.negative !== 0 && !negative) return -1;\r\n    if (this.negative === 0 && negative) return 1;\r\n\r\n    this._strip();\r\n\r\n    var res;\r\n    if (this.length > 1) {\r\n      res = 1;\r\n    } else {\r\n      if (negative) {\r\n        num = -num;\r\n      }\r\n\r\n      assert(num <= 0x3ffffff, 'Number is too big');\r\n\r\n      var w = this.words[0] | 0;\r\n      res = w === num ? 0 : w < num ? -1 : 1;\r\n    }\r\n    if (this.negative !== 0) return -res | 0;\r\n    return res;\r\n  };\r\n\r\n  // Compare two numbers and return:\r\n  // 1 - if `this` > `num`\r\n  // 0 - if `this` == `num`\r\n  // -1 - if `this` < `num`\r\n  BN.prototype.cmp = function cmp (num) {\r\n    if (this.negative !== 0 && num.negative === 0) return -1;\r\n    if (this.negative === 0 && num.negative !== 0) return 1;\r\n\r\n    var res = this.ucmp(num);\r\n    if (this.negative !== 0) return -res | 0;\r\n    return res;\r\n  };\r\n\r\n  // Unsigned comparison\r\n  BN.prototype.ucmp = function ucmp (num) {\r\n    // At this point both numbers have the same sign\r\n    if (this.length > num.length) return 1;\r\n    if (this.length < num.length) return -1;\r\n\r\n    var res = 0;\r\n    for (var i = this.length - 1; i >= 0; i--) {\r\n      var a = this.words[i] | 0;\r\n      var b = num.words[i] | 0;\r\n\r\n      if (a === b) continue;\r\n      if (a < b) {\r\n        res = -1;\r\n      } else if (a > b) {\r\n        res = 1;\r\n      }\r\n      break;\r\n    }\r\n    return res;\r\n  };\r\n\r\n  BN.prototype.gtn = function gtn (num) {\r\n    return this.cmpn(num) === 1;\r\n  };\r\n\r\n  BN.prototype.gt = function gt (num) {\r\n    return this.cmp(num) === 1;\r\n  };\r\n\r\n  BN.prototype.gten = function gten (num) {\r\n    return this.cmpn(num) >= 0;\r\n  };\r\n\r\n  BN.prototype.gte = function gte (num) {\r\n    return this.cmp(num) >= 0;\r\n  };\r\n\r\n  BN.prototype.ltn = function ltn (num) {\r\n    return this.cmpn(num) === -1;\r\n  };\r\n\r\n  BN.prototype.lt = function lt (num) {\r\n    return this.cmp(num) === -1;\r\n  };\r\n\r\n  BN.prototype.lten = function lten (num) {\r\n    return this.cmpn(num) <= 0;\r\n  };\r\n\r\n  BN.prototype.lte = function lte (num) {\r\n    return this.cmp(num) <= 0;\r\n  };\r\n\r\n  BN.prototype.eqn = function eqn (num) {\r\n    return this.cmpn(num) === 0;\r\n  };\r\n\r\n  BN.prototype.eq = function eq (num) {\r\n    return this.cmp(num) === 0;\r\n  };\r\n\r\n  //\r\n  // A reduce context, could be using montgomery or something better, depending\r\n  // on the `m` itself.\r\n  //\r\n  BN.red = function red (num) {\r\n    return new Red(num);\r\n  };\r\n\r\n  BN.prototype.toRed = function toRed (ctx) {\r\n    assert(!this.red, 'Already a number in reduction context');\r\n    assert(this.negative === 0, 'red works only with positives');\r\n    return ctx.convertTo(this)._forceRed(ctx);\r\n  };\r\n\r\n  BN.prototype.fromRed = function fromRed () {\r\n    assert(this.red, 'fromRed works only with numbers in reduction context');\r\n    return this.red.convertFrom(this);\r\n  };\r\n\r\n  BN.prototype._forceRed = function _forceRed (ctx) {\r\n    this.red = ctx;\r\n    return this;\r\n  };\r\n\r\n  BN.prototype.forceRed = function forceRed (ctx) {\r\n    assert(!this.red, 'Already a number in reduction context');\r\n    return this._forceRed(ctx);\r\n  };\r\n\r\n  BN.prototype.redAdd = function redAdd (num) {\r\n    assert(this.red, 'redAdd works only with red numbers');\r\n    return this.red.add(this, num);\r\n  };\r\n\r\n  BN.prototype.redIAdd = function redIAdd (num) {\r\n    assert(this.red, 'redIAdd works only with red numbers');\r\n    return this.red.iadd(this, num);\r\n  };\r\n\r\n  BN.prototype.redSub = function redSub (num) {\r\n    assert(this.red, 'redSub works only with red numbers');\r\n    return this.red.sub(this, num);\r\n  };\r\n\r\n  BN.prototype.redISub = function redISub (num) {\r\n    assert(this.red, 'redISub works only with red numbers');\r\n    return this.red.isub(this, num);\r\n  };\r\n\r\n  BN.prototype.redShl = function redShl (num) {\r\n    assert(this.red, 'redShl works only with red numbers');\r\n    return this.red.shl(this, num);\r\n  };\r\n\r\n  BN.prototype.redMul = function redMul (num) {\r\n    assert(this.red, 'redMul works only with red numbers');\r\n    this.red._verify2(this, num);\r\n    return this.red.mul(this, num);\r\n  };\r\n\r\n  BN.prototype.redIMul = function redIMul (num) {\r\n    assert(this.red, 'redMul works only with red numbers');\r\n    this.red._verify2(this, num);\r\n    return this.red.imul(this, num);\r\n  };\r\n\r\n  BN.prototype.redSqr = function redSqr () {\r\n    assert(this.red, 'redSqr works only with red numbers');\r\n    this.red._verify1(this);\r\n    return this.red.sqr(this);\r\n  };\r\n\r\n  BN.prototype.redISqr = function redISqr () {\r\n    assert(this.red, 'redISqr works only with red numbers');\r\n    this.red._verify1(this);\r\n    return this.red.isqr(this);\r\n  };\r\n\r\n  // Square root over p\r\n  BN.prototype.redSqrt = function redSqrt () {\r\n    assert(this.red, 'redSqrt works only with red numbers');\r\n    this.red._verify1(this);\r\n    return this.red.sqrt(this);\r\n  };\r\n\r\n  BN.prototype.redInvm = function redInvm () {\r\n    assert(this.red, 'redInvm works only with red numbers');\r\n    this.red._verify1(this);\r\n    return this.red.invm(this);\r\n  };\r\n\r\n  // Return negative clone of `this` % `red modulo`\r\n  BN.prototype.redNeg = function redNeg () {\r\n    assert(this.red, 'redNeg works only with red numbers');\r\n    this.red._verify1(this);\r\n    return this.red.neg(this);\r\n  };\r\n\r\n  BN.prototype.redPow = function redPow (num) {\r\n    assert(this.red && !num.red, 'redPow(normalNum)');\r\n    this.red._verify1(this);\r\n    return this.red.pow(this, num);\r\n  };\r\n\r\n  // Prime numbers with efficient reduction\r\n  var primes = {\r\n    k256: null,\r\n    p224: null,\r\n    p192: null,\r\n    p25519: null\r\n  };\r\n\r\n  // Pseudo-Mersenne prime\r\n  function MPrime (name, p) {\r\n    // P = 2 ^ N - K\r\n    this.name = name;\r\n    this.p = new BN(p, 16);\r\n    this.n = this.p.bitLength();\r\n    this.k = new BN(1).iushln(this.n).isub(this.p);\r\n\r\n    this.tmp = this._tmp();\r\n  }\r\n\r\n  MPrime.prototype._tmp = function _tmp () {\r\n    var tmp = new BN(null);\r\n    tmp.words = new Array(Math.ceil(this.n / 13));\r\n    return tmp;\r\n  };\r\n\r\n  MPrime.prototype.ireduce = function ireduce (num) {\r\n    // Assumes that `num` is less than `P^2`\r\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\r\n    var r = num;\r\n    var rlen;\r\n\r\n    do {\r\n      this.split(r, this.tmp);\r\n      r = this.imulK(r);\r\n      r = r.iadd(this.tmp);\r\n      rlen = r.bitLength();\r\n    } while (rlen > this.n);\r\n\r\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\r\n    if (cmp === 0) {\r\n      r.words[0] = 0;\r\n      r.length = 1;\r\n    } else if (cmp > 0) {\r\n      r.isub(this.p);\r\n    } else {\r\n      if (r.strip !== undefined) {\r\n        // r is a BN v4 instance\r\n        r.strip();\r\n      } else {\r\n        // r is a BN v5 instance\r\n        r._strip();\r\n      }\r\n    }\r\n\r\n    return r;\r\n  };\r\n\r\n  MPrime.prototype.split = function split (input, out) {\r\n    input.iushrn(this.n, 0, out);\r\n  };\r\n\r\n  MPrime.prototype.imulK = function imulK (num) {\r\n    return num.imul(this.k);\r\n  };\r\n\r\n  function K256 () {\r\n    MPrime.call(\r\n      this,\r\n      'k256',\r\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\r\n  }\r\n  inherits(K256, MPrime);\r\n\r\n  K256.prototype.split = function split (input, output) {\r\n    // 256 = 9 * 26 + 22\r\n    var mask = 0x3fffff;\r\n\r\n    var outLen = Math.min(input.length, 9);\r\n    for (var i = 0; i < outLen; i++) {\r\n      output.words[i] = input.words[i];\r\n    }\r\n    output.length = outLen;\r\n\r\n    if (input.length <= 9) {\r\n      input.words[0] = 0;\r\n      input.length = 1;\r\n      return;\r\n    }\r\n\r\n    // Shift by 9 limbs\r\n    var prev = input.words[9];\r\n    output.words[output.length++] = prev & mask;\r\n\r\n    for (i = 10; i < input.length; i++) {\r\n      var next = input.words[i] | 0;\r\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\r\n      prev = next;\r\n    }\r\n    prev >>>= 22;\r\n    input.words[i - 10] = prev;\r\n    if (prev === 0 && input.length > 10) {\r\n      input.length -= 10;\r\n    } else {\r\n      input.length -= 9;\r\n    }\r\n  };\r\n\r\n  K256.prototype.imulK = function imulK (num) {\r\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\r\n    num.words[num.length] = 0;\r\n    num.words[num.length + 1] = 0;\r\n    num.length += 2;\r\n\r\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\r\n    var lo = 0;\r\n    for (var i = 0; i < num.length; i++) {\r\n      var w = num.words[i] | 0;\r\n      lo += w * 0x3d1;\r\n      num.words[i] = lo & 0x3ffffff;\r\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\r\n    }\r\n\r\n    // Fast length reduction\r\n    if (num.words[num.length - 1] === 0) {\r\n      num.length--;\r\n      if (num.words[num.length - 1] === 0) {\r\n        num.length--;\r\n      }\r\n    }\r\n    return num;\r\n  };\r\n\r\n  function P224 () {\r\n    MPrime.call(\r\n      this,\r\n      'p224',\r\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\r\n  }\r\n  inherits(P224, MPrime);\r\n\r\n  function P192 () {\r\n    MPrime.call(\r\n      this,\r\n      'p192',\r\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\r\n  }\r\n  inherits(P192, MPrime);\r\n\r\n  function P25519 () {\r\n    // 2 ^ 255 - 19\r\n    MPrime.call(\r\n      this,\r\n      '25519',\r\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\r\n  }\r\n  inherits(P25519, MPrime);\r\n\r\n  P25519.prototype.imulK = function imulK (num) {\r\n    // K = 0x13\r\n    var carry = 0;\r\n    for (var i = 0; i < num.length; i++) {\r\n      var hi = (num.words[i] | 0) * 0x13 + carry;\r\n      var lo = hi & 0x3ffffff;\r\n      hi >>>= 26;\r\n\r\n      num.words[i] = lo;\r\n      carry = hi;\r\n    }\r\n    if (carry !== 0) {\r\n      num.words[num.length++] = carry;\r\n    }\r\n    return num;\r\n  };\r\n\r\n  // Exported mostly for testing purposes, use plain name instead\r\n  BN._prime = function prime (name) {\r\n    // Cached version of prime\r\n    if (primes[name]) return primes[name];\r\n\r\n    var prime;\r\n    if (name === 'k256') {\r\n      prime = new K256();\r\n    } else if (name === 'p224') {\r\n      prime = new P224();\r\n    } else if (name === 'p192') {\r\n      prime = new P192();\r\n    } else if (name === 'p25519') {\r\n      prime = new P25519();\r\n    } else {\r\n      throw new Error('Unknown prime ' + name);\r\n    }\r\n    primes[name] = prime;\r\n\r\n    return prime;\r\n  };\r\n\r\n  //\r\n  // Base reduction engine\r\n  //\r\n  function Red (m) {\r\n    if (typeof m === 'string') {\r\n      var prime = BN._prime(m);\r\n      this.m = prime.p;\r\n      this.prime = prime;\r\n    } else {\r\n      assert(m.gtn(1), 'modulus must be greater than 1');\r\n      this.m = m;\r\n      this.prime = null;\r\n    }\r\n  }\r\n\r\n  Red.prototype._verify1 = function _verify1 (a) {\r\n    assert(a.negative === 0, 'red works only with positives');\r\n    assert(a.red, 'red works only with red numbers');\r\n  };\r\n\r\n  Red.prototype._verify2 = function _verify2 (a, b) {\r\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\r\n    assert(a.red && a.red === b.red,\r\n      'red works only with red numbers');\r\n  };\r\n\r\n  Red.prototype.imod = function imod (a) {\r\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\r\n\r\n    move(a, a.umod(this.m)._forceRed(this));\r\n    return a;\r\n  };\r\n\r\n  Red.prototype.neg = function neg (a) {\r\n    if (a.isZero()) {\r\n      return a.clone();\r\n    }\r\n\r\n    return this.m.sub(a)._forceRed(this);\r\n  };\r\n\r\n  Red.prototype.add = function add (a, b) {\r\n    this._verify2(a, b);\r\n\r\n    var res = a.add(b);\r\n    if (res.cmp(this.m) >= 0) {\r\n      res.isub(this.m);\r\n    }\r\n    return res._forceRed(this);\r\n  };\r\n\r\n  Red.prototype.iadd = function iadd (a, b) {\r\n    this._verify2(a, b);\r\n\r\n    var res = a.iadd(b);\r\n    if (res.cmp(this.m) >= 0) {\r\n      res.isub(this.m);\r\n    }\r\n    return res;\r\n  };\r\n\r\n  Red.prototype.sub = function sub (a, b) {\r\n    this._verify2(a, b);\r\n\r\n    var res = a.sub(b);\r\n    if (res.cmpn(0) < 0) {\r\n      res.iadd(this.m);\r\n    }\r\n    return res._forceRed(this);\r\n  };\r\n\r\n  Red.prototype.isub = function isub (a, b) {\r\n    this._verify2(a, b);\r\n\r\n    var res = a.isub(b);\r\n    if (res.cmpn(0) < 0) {\r\n      res.iadd(this.m);\r\n    }\r\n    return res;\r\n  };\r\n\r\n  Red.prototype.shl = function shl (a, num) {\r\n    this._verify1(a);\r\n    return this.imod(a.ushln(num));\r\n  };\r\n\r\n  Red.prototype.imul = function imul (a, b) {\r\n    this._verify2(a, b);\r\n    return this.imod(a.imul(b));\r\n  };\r\n\r\n  Red.prototype.mul = function mul (a, b) {\r\n    this._verify2(a, b);\r\n    return this.imod(a.mul(b));\r\n  };\r\n\r\n  Red.prototype.isqr = function isqr (a) {\r\n    return this.imul(a, a.clone());\r\n  };\r\n\r\n  Red.prototype.sqr = function sqr (a) {\r\n    return this.mul(a, a);\r\n  };\r\n\r\n  Red.prototype.sqrt = function sqrt (a) {\r\n    if (a.isZero()) return a.clone();\r\n\r\n    var mod3 = this.m.andln(3);\r\n    assert(mod3 % 2 === 1);\r\n\r\n    // Fast case\r\n    if (mod3 === 3) {\r\n      var pow = this.m.add(new BN(1)).iushrn(2);\r\n      return this.pow(a, pow);\r\n    }\r\n\r\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\r\n    //\r\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\r\n    var q = this.m.subn(1);\r\n    var s = 0;\r\n    while (!q.isZero() && q.andln(1) === 0) {\r\n      s++;\r\n      q.iushrn(1);\r\n    }\r\n    assert(!q.isZero());\r\n\r\n    var one = new BN(1).toRed(this);\r\n    var nOne = one.redNeg();\r\n\r\n    // Find quadratic non-residue\r\n    // NOTE: Max is such because of generalized Riemann hypothesis.\r\n    var lpow = this.m.subn(1).iushrn(1);\r\n    var z = this.m.bitLength();\r\n    z = new BN(2 * z * z).toRed(this);\r\n\r\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\r\n      z.redIAdd(nOne);\r\n    }\r\n\r\n    var c = this.pow(z, q);\r\n    var r = this.pow(a, q.addn(1).iushrn(1));\r\n    var t = this.pow(a, q);\r\n    var m = s;\r\n    while (t.cmp(one) !== 0) {\r\n      var tmp = t;\r\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\r\n        tmp = tmp.redSqr();\r\n      }\r\n      assert(i < m);\r\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\r\n\r\n      r = r.redMul(b);\r\n      c = b.redSqr();\r\n      t = t.redMul(c);\r\n      m = i;\r\n    }\r\n\r\n    return r;\r\n  };\r\n\r\n  Red.prototype.invm = function invm (a) {\r\n    var inv = a._invmp(this.m);\r\n    if (inv.negative !== 0) {\r\n      inv.negative = 0;\r\n      return this.imod(inv).redNeg();\r\n    } else {\r\n      return this.imod(inv);\r\n    }\r\n  };\r\n\r\n  Red.prototype.pow = function pow (a, num) {\r\n    if (num.isZero()) return new BN(1).toRed(this);\r\n    if (num.cmpn(1) === 0) return a.clone();\r\n\r\n    var windowSize = 4;\r\n    var wnd = new Array(1 << windowSize);\r\n    wnd[0] = new BN(1).toRed(this);\r\n    wnd[1] = a;\r\n    for (var i = 2; i < wnd.length; i++) {\r\n      wnd[i] = this.mul(wnd[i - 1], a);\r\n    }\r\n\r\n    var res = wnd[0];\r\n    var current = 0;\r\n    var currentLen = 0;\r\n    var start = num.bitLength() % 26;\r\n    if (start === 0) {\r\n      start = 26;\r\n    }\r\n\r\n    for (i = num.length - 1; i >= 0; i--) {\r\n      var word = num.words[i];\r\n      for (var j = start - 1; j >= 0; j--) {\r\n        var bit = (word >> j) & 1;\r\n        if (res !== wnd[0]) {\r\n          res = this.sqr(res);\r\n        }\r\n\r\n        if (bit === 0 && current === 0) {\r\n          currentLen = 0;\r\n          continue;\r\n        }\r\n\r\n        current <<= 1;\r\n        current |= bit;\r\n        currentLen++;\r\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\r\n\r\n        res = this.mul(res, wnd[current]);\r\n        currentLen = 0;\r\n        current = 0;\r\n      }\r\n      start = 26;\r\n    }\r\n\r\n    return res;\r\n  };\r\n\r\n  Red.prototype.convertTo = function convertTo (num) {\r\n    var r = num.umod(this.m);\r\n\r\n    return r === num ? r.clone() : r;\r\n  };\r\n\r\n  Red.prototype.convertFrom = function convertFrom (num) {\r\n    var res = num.clone();\r\n    res.red = null;\r\n    return res;\r\n  };\r\n\r\n  //\r\n  // Montgomery method engine\r\n  //\r\n\r\n  BN.mont = function mont (num) {\r\n    return new Mont(num);\r\n  };\r\n\r\n  function Mont (m) {\r\n    Red.call(this, m);\r\n\r\n    this.shift = this.m.bitLength();\r\n    if (this.shift % 26 !== 0) {\r\n      this.shift += 26 - (this.shift % 26);\r\n    }\r\n\r\n    this.r = new BN(1).iushln(this.shift);\r\n    this.r2 = this.imod(this.r.sqr());\r\n    this.rinv = this.r._invmp(this.m);\r\n\r\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\r\n    this.minv = this.minv.umod(this.r);\r\n    this.minv = this.r.sub(this.minv);\r\n  }\r\n  inherits(Mont, Red);\r\n\r\n  Mont.prototype.convertTo = function convertTo (num) {\r\n    return this.imod(num.ushln(this.shift));\r\n  };\r\n\r\n  Mont.prototype.convertFrom = function convertFrom (num) {\r\n    var r = this.imod(num.mul(this.rinv));\r\n    r.red = null;\r\n    return r;\r\n  };\r\n\r\n  Mont.prototype.imul = function imul (a, b) {\r\n    if (a.isZero() || b.isZero()) {\r\n      a.words[0] = 0;\r\n      a.length = 1;\r\n      return a;\r\n    }\r\n\r\n    var t = a.imul(b);\r\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\r\n    var u = t.isub(c).iushrn(this.shift);\r\n    var res = u;\r\n\r\n    if (u.cmp(this.m) >= 0) {\r\n      res = u.isub(this.m);\r\n    } else if (u.cmpn(0) < 0) {\r\n      res = u.iadd(this.m);\r\n    }\r\n\r\n    return res._forceRed(this);\r\n  };\r\n\r\n  Mont.prototype.mul = function mul (a, b) {\r\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\r\n\r\n    var t = a.mul(b);\r\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\r\n    var u = t.isub(c).iushrn(this.shift);\r\n    var res = u;\r\n    if (u.cmp(this.m) >= 0) {\r\n      res = u.isub(this.m);\r\n    } else if (u.cmpn(0) < 0) {\r\n      res = u.iadd(this.m);\r\n    }\r\n\r\n    return res._forceRed(this);\r\n  };\r\n\r\n  Mont.prototype.invm = function invm (a) {\r\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\r\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\r\n    return res._forceRed(this);\r\n  };\r\n})(typeof module === 'undefined' || module, this);\r\n"],
  "mappings": "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IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,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",
  "names": ["module", "exports", "allocate", "comb10MulTo", "prime"]
}
