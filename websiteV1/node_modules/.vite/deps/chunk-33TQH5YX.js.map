{
  "version": 3,
  "sources": ["../../detect-browser/es/index.js", "../../@stablelib/int/int.ts", "../../@stablelib/binary/binary.ts", "../../@stablelib/wipe/wipe.ts", "../../@stablelib/chacha/chacha.ts", "../../@stablelib/constant-time/constant-time.ts", "../../@stablelib/poly1305/poly1305.ts", "../../@stablelib/chacha20poly1305/chacha20poly1305.ts", "../../@stablelib/hash/hash.ts", "../../@stablelib/hmac/hmac.ts", "../../@stablelib/hkdf/hkdf.ts", "../../@stablelib/random/source/browser.ts", "../../@stablelib/random/source/node.ts", "../../@stablelib/random/source/system.ts", "../../@stablelib/random/random.ts", "../../@stablelib/sha256/sha256.ts", "../../@stablelib/x25519/x25519.ts", "../../uint8arrays/esm/src/compare.js", "../../uint8arrays/esm/src/xor.js", "../../uint8arrays/esm/src/index.js", "../../@walletconnect/time/src/utils/delay.ts", "../../@walletconnect/time/src/constants/misc.ts", "../../@walletconnect/time/src/constants/time.ts", "../../@walletconnect/time/src/constants/index.ts", "../../@walletconnect/time/src/utils/convert.ts", "../../@walletconnect/time/src/utils/index.ts", "../../@walletconnect/time/src/watch.ts", "../../@walletconnect/time/src/types/watch.ts", "../../@walletconnect/time/src/types/index.ts", "../../@walletconnect/time/src/index.ts", "../../@walletconnect/window-getters/src/index.ts", "../../@walletconnect/window-metadata/src/index.ts", "../../filter-obj/index.js", "../../query-string/index.js", "../../@walletconnect/relay-api/dist/esm/types.js", "../../@walletconnect/relay-api/src/misc.ts", "../../@walletconnect/relay-api/src/validators.ts", "../../@walletconnect/relay-api/src/parsers.ts", "../../@walletconnect/relay-api/src/jsonrpc.ts", "../../@walletconnect/relay-api/src/index.ts", "../../destr/dist/index.mjs", "../../unstorage/dist/shared/unstorage.8581f561.mjs", "../../unstorage/dist/index.mjs", "../../idb-keyval/dist/index.js", "../../@walletconnect/safe-json/src/index.ts", "../../@walletconnect/events/src/events.ts", "../../@walletconnect/events/src/index.ts", "../../@walletconnect/heartbeat/src/types/heartbeat.ts", "../../@walletconnect/heartbeat/src/types/index.ts", "../../@walletconnect/heartbeat/src/constants/heartbeat.ts", "../../@walletconnect/heartbeat/src/constants/index.ts", "../../@walletconnect/heartbeat/src/heartbeat.ts", "../../@walletconnect/heartbeat/src/index.ts", "../../quick-format-unescaped/index.js", "../../pino/browser.js", "../../@walletconnect/logger/src/constants.ts", "../../@walletconnect/logger/src/utils.ts", "../../@walletconnect/logger/src/index.ts", "../../@stablelib/sha512/sha512.ts", "../../@stablelib/ed25519/ed25519.ts", "../../@walletconnect/relay-auth/src/constants.ts", "../../@walletconnect/relay-auth/src/utils.ts", "../../@walletconnect/relay-auth/src/api.ts", "../../@walletconnect/relay-auth/dist/esm/types.js", "../../@walletconnect/relay-auth/src/index.ts", "../../@walletconnect/jsonrpc-provider/src/provider.ts", "../../@walletconnect/jsonrpc-provider/src/index.ts", "../../@walletconnect/jsonrpc-ws-connection/node_modules/ws/browser.js", "../../lodash.isequal/index.js", "../../unfetch/src/index.mjs", "../../isomorphic-unfetch/browser.js"],
  "sourcesContent": ["var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n};\r\nvar BrowserInfo = /** @class */ (function () {\r\n    function BrowserInfo(name, version, os) {\r\n        this.name = name;\r\n        this.version = version;\r\n        this.os = os;\r\n        this.type = 'browser';\r\n    }\r\n    return BrowserInfo;\r\n}());\r\nexport { BrowserInfo };\r\nvar NodeInfo = /** @class */ (function () {\r\n    function NodeInfo(version) {\r\n        this.version = version;\r\n        this.type = 'node';\r\n        this.name = 'node';\r\n        this.os = process.platform;\r\n    }\r\n    return NodeInfo;\r\n}());\r\nexport { NodeInfo };\r\nvar SearchBotDeviceInfo = /** @class */ (function () {\r\n    function SearchBotDeviceInfo(name, version, os, bot) {\r\n        this.name = name;\r\n        this.version = version;\r\n        this.os = os;\r\n        this.bot = bot;\r\n        this.type = 'bot-device';\r\n    }\r\n    return SearchBotDeviceInfo;\r\n}());\r\nexport { SearchBotDeviceInfo };\r\nvar BotInfo = /** @class */ (function () {\r\n    function BotInfo() {\r\n        this.type = 'bot';\r\n        this.bot = true; // NOTE: deprecated test name instead\r\n        this.name = 'bot';\r\n        this.version = null;\r\n        this.os = null;\r\n    }\r\n    return BotInfo;\r\n}());\r\nexport { BotInfo };\r\nvar ReactNativeInfo = /** @class */ (function () {\r\n    function ReactNativeInfo() {\r\n        this.type = 'react-native';\r\n        this.name = 'react-native';\r\n        this.version = null;\r\n        this.os = null;\r\n    }\r\n    return ReactNativeInfo;\r\n}());\r\nexport { ReactNativeInfo };\r\n// tslint:disable-next-line:max-line-length\r\nvar SEARCHBOX_UA_REGEX = /alexa|bot|crawl(er|ing)|facebookexternalhit|feedburner|google web preview|nagios|postrank|pingdom|slurp|spider|yahoo!|yandex/;\r\nvar SEARCHBOT_OS_REGEX = /(nuhk|curl|Googlebot|Yammybot|Openbot|Slurp|MSNBot|Ask\\ Jeeves\\/Teoma|ia_archiver)/;\r\nvar REQUIRED_VERSION_PARTS = 3;\r\nvar userAgentRules = [\r\n    ['aol', /AOLShield\\/([0-9\\._]+)/],\r\n    ['edge', /Edge\\/([0-9\\._]+)/],\r\n    ['edge-ios', /EdgiOS\\/([0-9\\._]+)/],\r\n    ['yandexbrowser', /YaBrowser\\/([0-9\\._]+)/],\r\n    ['kakaotalk', /KAKAOTALK\\s([0-9\\.]+)/],\r\n    ['samsung', /SamsungBrowser\\/([0-9\\.]+)/],\r\n    ['silk', /\\bSilk\\/([0-9._-]+)\\b/],\r\n    ['miui', /MiuiBrowser\\/([0-9\\.]+)$/],\r\n    ['beaker', /BeakerBrowser\\/([0-9\\.]+)/],\r\n    ['edge-chromium', /EdgA?\\/([0-9\\.]+)/],\r\n    [\r\n        'chromium-webview',\r\n        /(?!Chrom.*OPR)wv\\).*Chrom(?:e|ium)\\/([0-9\\.]+)(:?\\s|$)/,\r\n    ],\r\n    ['chrome', /(?!Chrom.*OPR)Chrom(?:e|ium)\\/([0-9\\.]+)(:?\\s|$)/],\r\n    ['phantomjs', /PhantomJS\\/([0-9\\.]+)(:?\\s|$)/],\r\n    ['crios', /CriOS\\/([0-9\\.]+)(:?\\s|$)/],\r\n    ['firefox', /Firefox\\/([0-9\\.]+)(?:\\s|$)/],\r\n    ['fxios', /FxiOS\\/([0-9\\.]+)/],\r\n    ['opera-mini', /Opera Mini.*Version\\/([0-9\\.]+)/],\r\n    ['opera', /Opera\\/([0-9\\.]+)(?:\\s|$)/],\r\n    ['opera', /OPR\\/([0-9\\.]+)(:?\\s|$)/],\r\n    ['pie', /^Microsoft Pocket Internet Explorer\\/(\\d+\\.\\d+)$/],\r\n    ['pie', /^Mozilla\\/\\d\\.\\d+\\s\\(compatible;\\s(?:MSP?IE|MSInternet Explorer) (\\d+\\.\\d+);.*Windows CE.*\\)$/],\r\n    ['netfront', /^Mozilla\\/\\d\\.\\d+.*NetFront\\/(\\d.\\d)/],\r\n    ['ie', /Trident\\/7\\.0.*rv\\:([0-9\\.]+).*\\).*Gecko$/],\r\n    ['ie', /MSIE\\s([0-9\\.]+);.*Trident\\/[4-7].0/],\r\n    ['ie', /MSIE\\s(7\\.0)/],\r\n    ['bb10', /BB10;\\sTouch.*Version\\/([0-9\\.]+)/],\r\n    ['android', /Android\\s([0-9\\.]+)/],\r\n    ['ios', /Version\\/([0-9\\._]+).*Mobile.*Safari.*/],\r\n    ['safari', /Version\\/([0-9\\._]+).*Safari/],\r\n    ['facebook', /FB[AS]V\\/([0-9\\.]+)/],\r\n    ['instagram', /Instagram\\s([0-9\\.]+)/],\r\n    ['ios-webview', /AppleWebKit\\/([0-9\\.]+).*Mobile/],\r\n    ['ios-webview', /AppleWebKit\\/([0-9\\.]+).*Gecko\\)$/],\r\n    ['curl', /^curl\\/([0-9\\.]+)$/],\r\n    ['searchbot', SEARCHBOX_UA_REGEX],\r\n];\r\nvar operatingSystemRules = [\r\n    ['iOS', /iP(hone|od|ad)/],\r\n    ['Android OS', /Android/],\r\n    ['BlackBerry OS', /BlackBerry|BB10/],\r\n    ['Windows Mobile', /IEMobile/],\r\n    ['Amazon OS', /Kindle/],\r\n    ['Windows 3.11', /Win16/],\r\n    ['Windows 95', /(Windows 95)|(Win95)|(Windows_95)/],\r\n    ['Windows 98', /(Windows 98)|(Win98)/],\r\n    ['Windows 2000', /(Windows NT 5.0)|(Windows 2000)/],\r\n    ['Windows XP', /(Windows NT 5.1)|(Windows XP)/],\r\n    ['Windows Server 2003', /(Windows NT 5.2)/],\r\n    ['Windows Vista', /(Windows NT 6.0)/],\r\n    ['Windows 7', /(Windows NT 6.1)/],\r\n    ['Windows 8', /(Windows NT 6.2)/],\r\n    ['Windows 8.1', /(Windows NT 6.3)/],\r\n    ['Windows 10', /(Windows NT 10.0)/],\r\n    ['Windows ME', /Windows ME/],\r\n    ['Windows CE', /Windows CE|WinCE|Microsoft Pocket Internet Explorer/],\r\n    ['Open BSD', /OpenBSD/],\r\n    ['Sun OS', /SunOS/],\r\n    ['Chrome OS', /CrOS/],\r\n    ['Linux', /(Linux)|(X11)/],\r\n    ['Mac OS', /(Mac_PowerPC)|(Macintosh)/],\r\n    ['QNX', /QNX/],\r\n    ['BeOS', /BeOS/],\r\n    ['OS/2', /OS\\/2/],\r\n];\r\nexport function detect(userAgent) {\r\n    if (!!userAgent) {\r\n        return parseUserAgent(userAgent);\r\n    }\r\n    if (typeof document === 'undefined' &&\r\n        typeof navigator !== 'undefined' &&\r\n        navigator.product === 'ReactNative') {\r\n        return new ReactNativeInfo();\r\n    }\r\n    if (typeof navigator !== 'undefined') {\r\n        return parseUserAgent(navigator.userAgent);\r\n    }\r\n    return getNodeVersion();\r\n}\r\nfunction matchUserAgent(ua) {\r\n    // opted for using reduce here rather than Array#first with a regex.test call\r\n    // this is primarily because using the reduce we only perform the regex\r\n    // execution once rather than once for the test and for the exec again below\r\n    // probably something that needs to be benchmarked though\r\n    return (ua !== '' &&\r\n        userAgentRules.reduce(function (matched, _a) {\r\n            var browser = _a[0], regex = _a[1];\r\n            if (matched) {\r\n                return matched;\r\n            }\r\n            var uaMatch = regex.exec(ua);\r\n            return !!uaMatch && [browser, uaMatch];\r\n        }, false));\r\n}\r\nexport function browserName(ua) {\r\n    var data = matchUserAgent(ua);\r\n    return data ? data[0] : null;\r\n}\r\nexport function parseUserAgent(ua) {\r\n    var matchedRule = matchUserAgent(ua);\r\n    if (!matchedRule) {\r\n        return null;\r\n    }\r\n    var name = matchedRule[0], match = matchedRule[1];\r\n    if (name === 'searchbot') {\r\n        return new BotInfo();\r\n    }\r\n    // Do not use RegExp for split operation as some browser do not support it (See: http://blog.stevenlevithan.com/archives/cross-browser-split)\r\n    var versionParts = match[1] && match[1].split('.').join('_').split('_').slice(0, 3);\r\n    if (versionParts) {\r\n        if (versionParts.length < REQUIRED_VERSION_PARTS) {\r\n            versionParts = __spreadArray(__spreadArray([], versionParts, true), createVersionParts(REQUIRED_VERSION_PARTS - versionParts.length), true);\r\n        }\r\n    }\r\n    else {\r\n        versionParts = [];\r\n    }\r\n    var version = versionParts.join('.');\r\n    var os = detectOS(ua);\r\n    var searchBotMatch = SEARCHBOT_OS_REGEX.exec(ua);\r\n    if (searchBotMatch && searchBotMatch[1]) {\r\n        return new SearchBotDeviceInfo(name, version, os, searchBotMatch[1]);\r\n    }\r\n    return new BrowserInfo(name, version, os);\r\n}\r\nexport function detectOS(ua) {\r\n    for (var ii = 0, count = operatingSystemRules.length; ii < count; ii++) {\r\n        var _a = operatingSystemRules[ii], os = _a[0], regex = _a[1];\r\n        var match = regex.exec(ua);\r\n        if (match) {\r\n            return os;\r\n        }\r\n    }\r\n    return null;\r\n}\r\nexport function getNodeVersion() {\r\n    var isNode = typeof process !== 'undefined' && process.version;\r\n    return isNode ? new NodeInfo(process.version.slice(1)) : null;\r\n}\r\nfunction createVersionParts(count) {\r\n    var output = [];\r\n    for (var ii = 0; ii < count; ii++) {\r\n        output.push('0');\r\n    }\r\n    return output;\r\n}\r\n", "// Copyright (C) 2016 Dmitry Chestnykh\r\n// MIT License. See LICENSE file for details.\r\n\r\n/**\r\n * Package int provides helper functions for integerss.\r\n */\r\n\r\n// Shim using 16-bit pieces.\r\nfunction imulShim(a: number, b: number): number {\r\n    const ah = (a >>> 16) & 0xffff, al = a & 0xffff;\r\n    const bh = (b >>> 16) & 0xffff, bl = b & 0xffff;\r\n    return ((al * bl) + (((ah * bl + al * bh) << 16) >>> 0) | 0);\r\n}\r\n\r\n/** 32-bit integer multiplication.  */\r\n// Use system Math.imul if available, otherwise use our shim.\r\nexport const mul = (Math as { imul?(a: number, b: number): number }).imul || imulShim;\r\n\r\n/** 32-bit integer addition.  */\r\nexport function add(a: number, b: number): number {\r\n    return (a + b) | 0;\r\n}\r\n\r\n/**  32-bit integer subtraction.  */\r\nexport function sub(a: number, b: number): number {\r\n    return (a - b) | 0;\r\n}\r\n\r\n/** 32-bit integer left rotation */\r\nexport function rotl(x: number, n: number): number {\r\n    return x << n | x >>> (32 - n);\r\n}\r\n\r\n/** 32-bit integer left rotation */\r\nexport function rotr(x: number, n: number): number {\r\n    return x << (32 - n) | x >>> n;\r\n}\r\n\r\nfunction isIntegerShim(n: number): boolean {\r\n    return typeof n === \"number\" && isFinite(n) && Math.floor(n) === n;\r\n}\r\n\r\n/**\r\n * Returns true if the argument is an integer number.\r\n *\r\n * In ES2015, Number.isInteger.\r\n */\r\nexport const isInteger = (Number as { isInteger?(n: number): boolean }).isInteger || isIntegerShim;\r\n\r\n/**\r\n *  Math.pow(2, 53) - 1\r\n *\r\n *  In ES2015 Number.MAX_SAFE_INTEGER.\r\n */\r\nexport const MAX_SAFE_INTEGER = 9007199254740991;\r\n\r\n/**\r\n * Returns true if the argument is a safe integer number\r\n * (-MIN_SAFE_INTEGER < number <= MAX_SAFE_INTEGER)\r\n *\r\n * In ES2015, Number.isSafeInteger.\r\n */\r\nexport const isSafeInteger = (n: number): boolean =>\r\n    isInteger(n) && (n >= -MAX_SAFE_INTEGER && n <= MAX_SAFE_INTEGER);\r\n", "// Copyright (C) 2016 Dmitry Chestnykh\r\n// MIT License. See LICENSE file for details.\r\n\r\n/**\r\n * Package binary provides functions for encoding and decoding numbers in byte arrays.\r\n */\r\n\r\nimport { isSafeInteger } from \"@stablelib/int\";\r\n\r\n// TODO(dchest): add asserts for correct value ranges and array offsets.\r\n\r\n/**\r\n * Reads 2 bytes from array starting at offset as big-endian\r\n * signed 16-bit integer and returns it.\r\n */\r\nexport function readInt16BE(array: Uint8Array, offset = 0): number {\r\n    return (((array[offset + 0] << 8) | array[offset + 1]) << 16) >> 16;\r\n}\r\n\r\n/**\r\n * Reads 2 bytes from array starting at offset as big-endian\r\n * unsigned 16-bit integer and returns it.\r\n */\r\nexport function readUint16BE(array: Uint8Array, offset = 0): number {\r\n    return ((array[offset + 0] << 8) | array[offset + 1]) >>> 0;\r\n}\r\n\r\n/**\r\n * Reads 2 bytes from array starting at offset as little-endian\r\n * signed 16-bit integer and returns it.\r\n */\r\nexport function readInt16LE(array: Uint8Array, offset = 0): number {\r\n    return (((array[offset + 1] << 8) | array[offset]) << 16) >> 16;\r\n}\r\n\r\n/**\r\n * Reads 2 bytes from array starting at offset as little-endian\r\n * unsigned 16-bit integer and returns it.\r\n */\r\nexport function readUint16LE(array: Uint8Array, offset = 0): number {\r\n    return ((array[offset + 1] << 8) | array[offset]) >>> 0;\r\n}\r\n\r\n/**\r\n * Writes 2-byte big-endian representation of 16-bit unsigned\r\n * value to byte array starting at offset.\r\n *\r\n * If byte array is not given, creates a new 2-byte one.\r\n *\r\n * Returns the output byte array.\r\n */\r\nexport function writeUint16BE(value: number, out = new Uint8Array(2), offset = 0): Uint8Array {\r\n    out[offset + 0] = value >>> 8;\r\n    out[offset + 1] = value >>> 0;\r\n    return out;\r\n}\r\n\r\nexport const writeInt16BE = writeUint16BE;\r\n\r\n/**\r\n * Writes 2-byte little-endian representation of 16-bit unsigned\r\n * value to array starting at offset.\r\n *\r\n * If byte array is not given, creates a new 2-byte one.\r\n *\r\n * Returns the output byte array.\r\n */\r\nexport function writeUint16LE(value: number, out = new Uint8Array(2), offset = 0): Uint8Array {\r\n    out[offset + 0] = value >>> 0;\r\n    out[offset + 1] = value >>> 8;\r\n    return out;\r\n}\r\n\r\nexport const writeInt16LE = writeUint16LE;\r\n\r\n/**\r\n * Reads 4 bytes from array starting at offset as big-endian\r\n * signed 32-bit integer and returns it.\r\n */\r\nexport function readInt32BE(array: Uint8Array, offset = 0): number {\r\n    return (array[offset] << 24) |\r\n        (array[offset + 1] << 16) |\r\n        (array[offset + 2] << 8) |\r\n        array[offset + 3];\r\n}\r\n\r\n/**\r\n * Reads 4 bytes from array starting at offset as big-endian\r\n * unsigned 32-bit integer and returns it.\r\n */\r\nexport function readUint32BE(array: Uint8Array, offset = 0): number {\r\n    return ((array[offset] << 24) |\r\n        (array[offset + 1] << 16) |\r\n        (array[offset + 2] << 8) |\r\n        array[offset + 3]) >>> 0;\r\n}\r\n\r\n/**\r\n * Reads 4 bytes from array starting at offset as little-endian\r\n * signed 32-bit integer and returns it.\r\n */\r\nexport function readInt32LE(array: Uint8Array, offset = 0): number {\r\n    return (array[offset + 3] << 24) |\r\n        (array[offset + 2] << 16) |\r\n        (array[offset + 1] << 8) |\r\n        array[offset];\r\n}\r\n\r\n/**\r\n * Reads 4 bytes from array starting at offset as little-endian\r\n * unsigned 32-bit integer and returns it.\r\n */\r\nexport function readUint32LE(array: Uint8Array, offset = 0): number {\r\n    return ((array[offset + 3] << 24) |\r\n        (array[offset + 2] << 16) |\r\n        (array[offset + 1] << 8) |\r\n        array[offset]) >>> 0;\r\n}\r\n\r\n/**\r\n * Writes 4-byte big-endian representation of 32-bit unsigned\r\n * value to byte array starting at offset.\r\n *\r\n * If byte array is not given, creates a new 4-byte one.\r\n *\r\n * Returns the output byte array.\r\n */\r\nexport function writeUint32BE(value: number, out = new Uint8Array(4), offset = 0): Uint8Array {\r\n    out[offset + 0] = value >>> 24;\r\n    out[offset + 1] = value >>> 16;\r\n    out[offset + 2] = value >>> 8;\r\n    out[offset + 3] = value >>> 0;\r\n    return out;\r\n}\r\n\r\nexport const writeInt32BE = writeUint32BE;\r\n\r\n/**\r\n * Writes 4-byte little-endian representation of 32-bit unsigned\r\n * value to array starting at offset.\r\n *\r\n * If byte array is not given, creates a new 4-byte one.\r\n *\r\n * Returns the output byte array.\r\n */\r\nexport function writeUint32LE(value: number, out = new Uint8Array(4), offset = 0): Uint8Array {\r\n    out[offset + 0] = value >>> 0;\r\n    out[offset + 1] = value >>> 8;\r\n    out[offset + 2] = value >>> 16;\r\n    out[offset + 3] = value >>> 24;\r\n    return out;\r\n}\r\n\r\n\r\nexport const writeInt32LE = writeUint32LE;\r\n\r\n/**\r\n * Reads 8 bytes from array starting at offset as big-endian\r\n * signed 64-bit integer and returns it.\r\n *\r\n * IMPORTANT: due to JavaScript limitation, supports exact\r\n * numbers in range -9007199254740991 to 9007199254740991.\r\n * If the number stored in the byte array is outside this range,\r\n * the result is not exact.\r\n */\r\nexport function readInt64BE(array: Uint8Array, offset = 0): number {\r\n    const hi = readInt32BE(array, offset);\r\n    const lo = readInt32BE(array, offset + 4);\r\n    return hi * 0x100000000 + lo - ((lo>>31) * 0x100000000);\r\n}\r\n\r\n/**\r\n * Reads 8 bytes from array starting at offset as big-endian\r\n * unsigned 64-bit integer and returns it.\r\n *\r\n * IMPORTANT: due to JavaScript limitation, supports values up to 2^53-1.\r\n */\r\nexport function readUint64BE(array: Uint8Array, offset = 0): number {\r\n    const hi = readUint32BE(array, offset);\r\n    const lo = readUint32BE(array, offset + 4);\r\n    return hi * 0x100000000 + lo;\r\n}\r\n\r\n/**\r\n * Reads 8 bytes from array starting at offset as little-endian\r\n * signed 64-bit integer and returns it.\r\n *\r\n * IMPORTANT: due to JavaScript limitation, supports exact\r\n * numbers in range -9007199254740991 to 9007199254740991.\r\n * If the number stored in the byte array is outside this range,\r\n * the result is not exact.\r\n */\r\nexport function readInt64LE(array: Uint8Array, offset = 0): number {\r\n    const lo = readInt32LE(array, offset);\r\n    const hi = readInt32LE(array, offset + 4);\r\n    return hi * 0x100000000 + lo - ((lo>>31) * 0x100000000);\r\n}\r\n\r\n\r\n/**\r\n * Reads 8 bytes from array starting at offset as little-endian\r\n * unsigned 64-bit integer and returns it.\r\n *\r\n * IMPORTANT: due to JavaScript limitation, supports values up to 2^53-1.\r\n */\r\nexport function readUint64LE(array: Uint8Array, offset = 0): number {\r\n    const lo = readUint32LE(array, offset);\r\n    const hi = readUint32LE(array, offset + 4);\r\n    return hi * 0x100000000 + lo;\r\n}\r\n\r\n/**\r\n * Writes 8-byte big-endian representation of 64-bit unsigned\r\n * value to byte array starting at offset.\r\n *\r\n * Due to JavaScript limitation, supports values up to 2^53-1.\r\n *\r\n * If byte array is not given, creates a new 8-byte one.\r\n *\r\n * Returns the output byte array.\r\n */\r\nexport function writeUint64BE(value: number, out = new Uint8Array(8), offset = 0): Uint8Array {\r\n    writeUint32BE(value / 0x100000000 >>> 0, out, offset);\r\n    writeUint32BE(value >>> 0, out, offset + 4);\r\n    return out;\r\n}\r\n\r\nexport const writeInt64BE = writeUint64BE;\r\n\r\n/**\r\n * Writes 8-byte little-endian representation of 64-bit unsigned\r\n * value to byte array starting at offset.\r\n *\r\n * Due to JavaScript limitation, supports values up to 2^53-1.\r\n *\r\n * If byte array is not given, creates a new 8-byte one.\r\n *\r\n * Returns the output byte array.\r\n */\r\nexport function writeUint64LE(value: number, out = new Uint8Array(8), offset = 0): Uint8Array {\r\n    writeUint32LE(value >>> 0, out, offset);\r\n    writeUint32LE(value / 0x100000000 >>> 0, out, offset + 4);\r\n    return out;\r\n}\r\n\r\nexport const writeInt64LE = writeUint64LE;\r\n\r\n/**\r\n * Reads bytes from array starting at offset as big-endian\r\n * unsigned bitLen-bit integer and returns it.\r\n *\r\n * Supports bit lengths divisible by 8, up to 48.\r\n */\r\nexport function readUintBE(bitLength: number, array: Uint8Array, offset = 0): number {\r\n    // TODO(dchest): implement support for bitLengths non-divisible by 8\r\n    if (bitLength % 8 !== 0) {\r\n        throw new Error(\"readUintBE supports only bitLengths divisible by 8\");\r\n    }\r\n    if (bitLength / 8 > array.length - offset) {\r\n        throw new Error(\"readUintBE: array is too short for the given bitLength\");\r\n    }\r\n    let result = 0;\r\n    let mul = 1;\r\n    for (let i = bitLength / 8 + offset - 1; i >= offset; i--) {\r\n        result += array[i] * mul;\r\n        mul *= 256;\r\n    }\r\n    return result;\r\n}\r\n\r\n/**\r\n * Reads bytes from array starting at offset as little-endian\r\n * unsigned bitLen-bit integer and returns it.\r\n *\r\n * Supports bit lengths divisible by 8, up to 48.\r\n */\r\nexport function readUintLE(bitLength: number, array: Uint8Array, offset = 0): number {\r\n    // TODO(dchest): implement support for bitLengths non-divisible by 8\r\n    if (bitLength % 8 !== 0) {\r\n        throw new Error(\"readUintLE supports only bitLengths divisible by 8\");\r\n    }\r\n    if (bitLength / 8 > array.length - offset) {\r\n        throw new Error(\"readUintLE: array is too short for the given bitLength\");\r\n    }\r\n    let result = 0;\r\n    let mul = 1;\r\n    for (let i = offset; i < offset + bitLength / 8; i++) {\r\n        result += array[i] * mul;\r\n        mul *= 256;\r\n    }\r\n    return result;\r\n}\r\n\r\n/**\r\n * Writes a big-endian representation of bitLen-bit unsigned\r\n * value to array starting at offset.\r\n *\r\n * Supports bit lengths divisible by 8, up to 48.\r\n *\r\n * If byte array is not given, creates a new one.\r\n *\r\n * Returns the output byte array.\r\n */\r\nexport function writeUintBE(bitLength: number, value: number,\r\n    out = new Uint8Array(bitLength / 8), offset = 0): Uint8Array {\r\n    // TODO(dchest): implement support for bitLengths non-divisible by 8\r\n    if (bitLength % 8 !== 0) {\r\n        throw new Error(\"writeUintBE supports only bitLengths divisible by 8\");\r\n    }\r\n    if (!isSafeInteger(value)) {\r\n        throw new Error(\"writeUintBE value must be an integer\");\r\n    }\r\n    let div = 1;\r\n    for (let i = bitLength / 8 + offset - 1; i >= offset; i--) {\r\n        out[i] = (value / div) & 0xff;\r\n        div *= 256;\r\n    }\r\n    return out;\r\n}\r\n\r\n/**\r\n * Writes a little-endian representation of bitLen-bit unsigned\r\n * value to array starting at offset.\r\n *\r\n * Supports bit lengths divisible by 8, up to 48.\r\n *\r\n * If byte array is not given, creates a new one.\r\n *\r\n * Returns the output byte array.\r\n */\r\nexport function writeUintLE(bitLength: number, value: number,\r\n    out = new Uint8Array(bitLength / 8), offset = 0): Uint8Array {\r\n    // TODO(dchest): implement support for bitLengths non-divisible by 8\r\n    if (bitLength % 8 !== 0) {\r\n        throw new Error(\"writeUintLE supports only bitLengths divisible by 8\");\r\n    }\r\n    if (!isSafeInteger(value)) {\r\n        throw new Error(\"writeUintLE value must be an integer\");\r\n    }\r\n    let div = 1;\r\n    for (let i = offset; i < offset + bitLength / 8; i++) {\r\n        out[i] = (value / div) & 0xff;\r\n        div *= 256;\r\n    }\r\n    return out;\r\n}\r\n\r\n/**\r\n * Reads 4 bytes from array starting at offset as big-endian\r\n * 32-bit floating-point number and returns it.\r\n */\r\nexport function readFloat32BE(array: Uint8Array, offset = 0): number {\r\n    const view = new DataView(array.buffer, array.byteOffset, array.byteLength);\r\n    return view.getFloat32(offset);\r\n}\r\n\r\n/**\r\n * Reads 4 bytes from array starting at offset as little-endian\r\n * 32-bit floating-point number and returns it.\r\n */\r\nexport function readFloat32LE(array: Uint8Array, offset = 0): number {\r\n    const view = new DataView(array.buffer, array.byteOffset, array.byteLength);\r\n    return view.getFloat32(offset, true);\r\n}\r\n\r\n/**\r\n * Reads 8 bytes from array starting at offset as big-endian\r\n * 64-bit floating-point number (\"double\") and returns it.\r\n */\r\nexport function readFloat64BE(array: Uint8Array, offset = 0): number {\r\n    const view = new DataView(array.buffer, array.byteOffset, array.byteLength);\r\n    return view.getFloat64(offset);\r\n}\r\n\r\n/**\r\n * Reads 8 bytes from array starting at offset as little-endian\r\n * 64-bit floating-point number (\"double\") and returns it.\r\n */\r\nexport function readFloat64LE(array: Uint8Array, offset = 0): number {\r\n    const view = new DataView(array.buffer, array.byteOffset, array.byteLength);\r\n    return view.getFloat64(offset, true);\r\n}\r\n\r\n/**\r\n * Writes 4-byte big-endian floating-point representation of value\r\n * to byte array starting at offset.\r\n *\r\n * If byte array is not given, creates a new 4-byte one.\r\n *\r\n * Returns the output byte array.\r\n */\r\nexport function writeFloat32BE(value: number, out = new Uint8Array(4), offset = 0): Uint8Array {\r\n    const view = new DataView(out.buffer, out.byteOffset, out.byteLength);\r\n    view.setFloat32(offset, value);\r\n    return out;\r\n}\r\n\r\n/**\r\n * Writes 4-byte little-endian floating-point representation of value\r\n * to byte array starting at offset.\r\n *\r\n * If byte array is not given, creates a new 4-byte one.\r\n *\r\n * Returns the output byte array.\r\n */\r\nexport function writeFloat32LE(value: number, out = new Uint8Array(4), offset = 0): Uint8Array {\r\n    const view = new DataView(out.buffer, out.byteOffset, out.byteLength);\r\n    view.setFloat32(offset, value, true);\r\n    return out;\r\n}\r\n\r\n/**\r\n * Writes 8-byte big-endian floating-point representation of value\r\n * to byte array starting at offset.\r\n *\r\n * If byte array is not given, creates a new 8-byte one.\r\n *\r\n * Returns the output byte array.\r\n */\r\nexport function writeFloat64BE(value: number, out = new Uint8Array(8), offset = 0): Uint8Array {\r\n    const view = new DataView(out.buffer, out.byteOffset, out.byteLength);\r\n    view.setFloat64(offset, value);\r\n    return out;\r\n}\r\n\r\n/**\r\n * Writes 8-byte little-endian floating-point representation of value\r\n * to byte array starting at offset.\r\n *\r\n * If byte array is not given, creates a new 8-byte one.\r\n *\r\n * Returns the output byte array.\r\n */\r\nexport function writeFloat64LE(value: number, out = new Uint8Array(8), offset = 0): Uint8Array {\r\n    const view = new DataView(out.buffer, out.byteOffset, out.byteLength);\r\n    view.setFloat64(offset, value, true);\r\n    return out;\r\n}\r\n", "// Copyright (C) 2016 Dmitry Chestnykh\r\n// MIT License. See LICENSE file for details.\r\n\r\n/**\r\n * Package wipe implements functions for zeroing arrays.\r\n */\r\n\r\nexport type NumericArray = number[] | Uint8Array | Int8Array | Uint16Array\r\n    | Int16Array | Uint32Array | Int32Array | Float32Array | Float64Array;\r\n\r\n/**\r\n * Sets all values in the given array to zero and returns it.\r\n *\r\n * The fact that it sets bytes to zero can be relied on.\r\n *\r\n * There is no guarantee that this function makes data disappear from memory,\r\n * as runtime implementation can, for example, have copying garbage collector\r\n * that will make copies of sensitive data before we wipe it. Or that an\r\n * operating system will write our data to swap or sleep image. Another thing\r\n * is that an optimizing compiler can remove calls to this function or make it\r\n * no-op. There's nothing we can do with it, so we just do our best and hope\r\n * that everything will be okay and good will triumph over evil.\r\n */\r\nexport function wipe(array: NumericArray): NumericArray {\r\n    // Right now it's similar to array.fill(0). If it turns\r\n    // out that runtimes optimize this call away, maybe\r\n    // we can try something else.\r\n    for (let i = 0; i < array.length; i++) {\r\n        array[i] = 0;\r\n    }\r\n    return array;\r\n}\r\n", "// Copyright (C) 2016 Dmitry Chestnykh\r\n// MIT License. See LICENSE file for details.\r\n\r\n/**\r\n * Package chacha implements ChaCha stream cipher.\r\n */\r\n\r\nimport { writeUint32LE } from \"@stablelib/binary\";\r\nimport { wipe } from \"@stablelib/wipe\";\r\n\r\n// Number of ChaCha rounds (ChaCha20).\r\nconst ROUNDS = 20;\r\n\r\n// Applies the ChaCha core function to 16-byte input,\r\n// 32-byte key key, and puts the result into 64-byte array out.\r\nfunction core(out: Uint8Array, input: Uint8Array, key: Uint8Array): void {\r\n    let j0 = 0x61707865; // \"expa\"  -- ChaCha's \"sigma\" constant\r\n    let j1 = 0x3320646E; // \"nd 3\"     for 32-byte keys\r\n    let j2 = 0x79622D32; // \"2-by\"\r\n    let j3 = 0x6B206574; // \"te k\"\r\n    let j4 = (key[3] << 24) | (key[2] << 16) | (key[1] << 8) | key[0];\r\n    let j5 = (key[7] << 24) | (key[6] << 16) | (key[5] << 8) | key[4];\r\n    let j6 = (key[11] << 24) | (key[10] << 16) | (key[9] << 8) | key[8];\r\n    let j7 = (key[15] << 24) | (key[14] << 16) | (key[13] << 8) | key[12];\r\n    let j8 = (key[19] << 24) | (key[18] << 16) | (key[17] << 8) | key[16];\r\n    let j9 = (key[23] << 24) | (key[22] << 16) | (key[21] << 8) | key[20];\r\n    let j10 = (key[27] << 24) | (key[26] << 16) | (key[25] << 8) | key[24];\r\n    let j11 = (key[31] << 24) | (key[30] << 16) | (key[29] << 8) | key[28];\r\n    let j12 = (input[3] << 24) | (input[2] << 16) | (input[1] << 8) | input[0];\r\n    let j13 = (input[7] << 24) | (input[6] << 16) | (input[5] << 8) | input[4];\r\n    let j14 = (input[11] << 24) | (input[10] << 16) | (input[9] << 8) | input[8];\r\n    let j15 = (input[15] << 24) | (input[14] << 16) | (input[13] << 8) | input[12];\r\n\r\n    let x0 = j0;\r\n    let x1 = j1;\r\n    let x2 = j2;\r\n    let x3 = j3;\r\n    let x4 = j4;\r\n    let x5 = j5;\r\n    let x6 = j6;\r\n    let x7 = j7;\r\n    let x8 = j8;\r\n    let x9 = j9;\r\n    let x10 = j10;\r\n    let x11 = j11;\r\n    let x12 = j12;\r\n    let x13 = j13;\r\n    let x14 = j14;\r\n    let x15 = j15;\r\n\r\n    for (let i = 0; i < ROUNDS; i += 2) {\r\n        x0 = x0 + x4 | 0; x12 ^= x0; x12 = x12 >>> (32 - 16) | x12 << 16;\r\n        x8 = x8 + x12 | 0; x4 ^= x8; x4 = x4 >>> (32 - 12) | x4 << 12;\r\n        x1 = x1 + x5 | 0; x13 ^= x1; x13 = x13 >>> (32 - 16) | x13 << 16;\r\n        x9 = x9 + x13 | 0; x5 ^= x9; x5 = x5 >>> (32 - 12) | x5 << 12;\r\n\r\n        x2 = x2 + x6 | 0; x14 ^= x2; x14 = x14 >>> (32 - 16) | x14 << 16;\r\n        x10 = x10 + x14 | 0; x6 ^= x10; x6 = x6 >>> (32 - 12) | x6 << 12;\r\n        x3 = x3 + x7 | 0; x15 ^= x3; x15 = x15 >>> (32 - 16) | x15 << 16;\r\n        x11 = x11 + x15 | 0; x7 ^= x11; x7 = x7 >>> (32 - 12) | x7 << 12;\r\n\r\n        x2 = x2 + x6 | 0; x14 ^= x2; x14 = x14 >>> (32 - 8) | x14 << 8;\r\n        x10 = x10 + x14 | 0; x6 ^= x10; x6 = x6 >>> (32 - 7) | x6 << 7;\r\n        x3 = x3 + x7 | 0; x15 ^= x3; x15 = x15 >>> (32 - 8) | x15 << 8;\r\n        x11 = x11 + x15 | 0; x7 ^= x11; x7 = x7 >>> (32 - 7) | x7 << 7;\r\n\r\n        x1 = x1 + x5 | 0; x13 ^= x1; x13 = x13 >>> (32 - 8) | x13 << 8;\r\n        x9 = x9 + x13 | 0; x5 ^= x9; x5 = x5 >>> (32 - 7) | x5 << 7;\r\n        x0 = x0 + x4 | 0; x12 ^= x0; x12 = x12 >>> (32 - 8) | x12 << 8;\r\n        x8 = x8 + x12 | 0; x4 ^= x8; x4 = x4 >>> (32 - 7) | x4 << 7;\r\n\r\n        x0 = x0 + x5 | 0; x15 ^= x0; x15 = x15 >>> (32 - 16) | x15 << 16;\r\n        x10 = x10 + x15 | 0; x5 ^= x10; x5 = x5 >>> (32 - 12) | x5 << 12;\r\n        x1 = x1 + x6 | 0; x12 ^= x1; x12 = x12 >>> (32 - 16) | x12 << 16;\r\n        x11 = x11 + x12 | 0; x6 ^= x11; x6 = x6 >>> (32 - 12) | x6 << 12;\r\n\r\n        x2 = x2 + x7 | 0; x13 ^= x2; x13 = x13 >>> (32 - 16) | x13 << 16;\r\n        x8 = x8 + x13 | 0; x7 ^= x8; x7 = x7 >>> (32 - 12) | x7 << 12;\r\n        x3 = x3 + x4 | 0; x14 ^= x3; x14 = x14 >>> (32 - 16) | x14 << 16;\r\n        x9 = x9 + x14 | 0; x4 ^= x9; x4 = x4 >>> (32 - 12) | x4 << 12;\r\n\r\n        x2 = x2 + x7 | 0; x13 ^= x2; x13 = x13 >>> (32 - 8) | x13 << 8;\r\n        x8 = x8 + x13 | 0; x7 ^= x8; x7 = x7 >>> (32 - 7) | x7 << 7;\r\n        x3 = x3 + x4 | 0; x14 ^= x3; x14 = x14 >>> (32 - 8) | x14 << 8;\r\n        x9 = x9 + x14 | 0; x4 ^= x9; x4 = x4 >>> (32 - 7) | x4 << 7;\r\n\r\n        x1 = x1 + x6 | 0; x12 ^= x1; x12 = x12 >>> (32 - 8) | x12 << 8;\r\n        x11 = x11 + x12 | 0; x6 ^= x11; x6 = x6 >>> (32 - 7) | x6 << 7;\r\n        x0 = x0 + x5 | 0; x15 ^= x0; x15 = x15 >>> (32 - 8) | x15 << 8;\r\n        x10 = x10 + x15 | 0; x5 ^= x10; x5 = x5 >>> (32 - 7) | x5 << 7;\r\n    }\r\n    writeUint32LE(x0 + j0 | 0, out, 0);\r\n    writeUint32LE(x1 + j1 | 0, out, 4);\r\n    writeUint32LE(x2 + j2 | 0, out, 8);\r\n    writeUint32LE(x3 + j3 | 0, out, 12);\r\n    writeUint32LE(x4 + j4 | 0, out, 16);\r\n    writeUint32LE(x5 + j5 | 0, out, 20);\r\n    writeUint32LE(x6 + j6 | 0, out, 24);\r\n    writeUint32LE(x7 + j7 | 0, out, 28);\r\n    writeUint32LE(x8 + j8 | 0, out, 32);\r\n    writeUint32LE(x9 + j9 | 0, out, 36);\r\n    writeUint32LE(x10 + j10 | 0, out, 40);\r\n    writeUint32LE(x11 + j11 | 0, out, 44);\r\n    writeUint32LE(x12 + j12 | 0, out, 48);\r\n    writeUint32LE(x13 + j13 | 0, out, 52);\r\n    writeUint32LE(x14 + j14 | 0, out, 56);\r\n    writeUint32LE(x15 + j15 | 0, out, 60);\r\n}\r\n\r\n/**\r\n * Encrypt src with ChaCha20 stream generated for the given 32-byte key and\r\n * 8-byte (as in original implementation) or 12-byte (as in RFC7539) nonce and\r\n * write the result into dst and return it.\r\n *\r\n * dst and src may be the same, but otherwise must not overlap.\r\n *\r\n * If nonce is 12 bytes, users should not encrypt more than 256 GiB with the\r\n * same key and nonce, otherwise the stream will repeat. The function will\r\n * throw error if counter overflows to prevent this.\r\n *\r\n * If nonce is 8 bytes, the output is practically unlimited (2^70 bytes, which\r\n * is more than a million petabytes). However, it is not recommended to\r\n * generate 8-byte nonces randomly, as the chance of collision is high.\r\n *\r\n * Never use the same key and nonce to encrypt more than one message.\r\n *\r\n * If nonceInplaceCounterLength is not 0, the nonce is assumed to be a 16-byte\r\n * array with stream counter in first nonceInplaceCounterLength bytes and nonce\r\n * in the last remaining bytes. The counter will be incremented inplace for\r\n * each ChaCha block. This is useful if you need to encrypt one stream of data\r\n * in chunks.\r\n */\r\nexport function streamXOR(key: Uint8Array, nonce: Uint8Array,\r\n    src: Uint8Array, dst: Uint8Array, nonceInplaceCounterLength = 0): Uint8Array {\r\n    // We only support 256-bit keys.\r\n    if (key.length !== 32) {\r\n        throw new Error(\"ChaCha: key size must be 32 bytes\");\r\n    }\r\n\r\n    if (dst.length < src.length) {\r\n        throw new Error(\"ChaCha: destination is shorter than source\");\r\n    }\r\n\r\n    let nc: Uint8Array;\r\n    let counterLength: number;\r\n\r\n    if (nonceInplaceCounterLength === 0) {\r\n        if (nonce.length !== 8 && nonce.length !== 12) {\r\n            throw new Error(\"ChaCha nonce must be 8 or 12 bytes\");\r\n        }\r\n        nc = new Uint8Array(16);\r\n        // First counterLength bytes of nc are counter, starting with zero.\r\n        counterLength = nc.length - nonce.length;\r\n        // Last bytes of nc after counterLength are nonce, set them.\r\n        nc.set(nonce, counterLength);\r\n    } else {\r\n        if (nonce.length !== 16) {\r\n            throw new Error(\"ChaCha nonce with counter must be 16 bytes\");\r\n        }\r\n        // This will update passed nonce with counter inplace.\r\n        nc = nonce;\r\n        counterLength = nonceInplaceCounterLength;\r\n    }\r\n\r\n    // Allocate temporary space for ChaCha block.\r\n    const block = new Uint8Array(64);\r\n\r\n    for (let i = 0; i < src.length; i += 64) {\r\n        // Generate a block.\r\n        core(block, nc, key);\r\n\r\n        // XOR block bytes with src into dst.\r\n        for (let j = i; j < i + 64 && j < src.length; j++) {\r\n            dst[j] = src[j] ^ block[j - i];\r\n        }\r\n\r\n        // Increment counter.\r\n        incrementCounter(nc, 0, counterLength);\r\n    }\r\n\r\n    // Cleanup temporary space.\r\n    wipe(block);\r\n\r\n    if (nonceInplaceCounterLength === 0) {\r\n        // Cleanup counter.\r\n        wipe(nc);\r\n    }\r\n\r\n    return dst;\r\n}\r\n\r\n/**\r\n * Generate ChaCha20 stream for the given 32-byte key and 8-byte or 12-byte\r\n * nonce and write it into dst and return it.\r\n *\r\n * Never use the same key and nonce to generate more than one stream.\r\n *\r\n * If nonceInplaceCounterLength is not 0, it behaves the same with respect to\r\n * the nonce as described in the streamXOR documentation.\r\n *\r\n * stream is like streamXOR with all-zero src.\r\n */\r\nexport function stream(key: Uint8Array, nonce: Uint8Array,\r\n    dst: Uint8Array, nonceInplaceCounterLength = 0): Uint8Array {\r\n    wipe(dst);\r\n    return streamXOR(key, nonce, dst, dst, nonceInplaceCounterLength);\r\n}\r\n\r\nfunction incrementCounter(counter: Uint8Array, pos: number, len: number) {\r\n    let carry = 1;\r\n    while (len--) {\r\n        carry = carry + (counter[pos] & 0xff) | 0;\r\n        counter[pos] = carry & 0xff;\r\n        carry >>>= 8;\r\n        pos++;\r\n    }\r\n    if (carry > 0) {\r\n        throw new Error(\"ChaCha: counter overflow\");\r\n    }\r\n}\r\n", "// Copyright (C) 2016 Dmitry Chestnykh\r\n// MIT License. See LICENSE file for details.\r\n\r\n/**\r\n * Package constant-time provides functions for performing algorithmically constant-time operations.\r\n */\r\n\r\n/**\r\n * NOTE! Due to the inability to guarantee real constant time evaluation of\r\n * anything in JavaScript VM, this is module is the best effort.\r\n */\r\n\r\n/**\r\n * Returns resultIfOne if subject is 1, or resultIfZero if subject is 0.\r\n *\r\n * Supports only 32-bit integers, so resultIfOne or resultIfZero are not\r\n * integers, they'll be converted to them with bitwise operations.\r\n */\r\nexport function select(subject: number, resultIfOne: number, resultIfZero: number): number {\r\n    return (~(subject - 1) & resultIfOne) | ((subject - 1) & resultIfZero);\r\n}\r\n\r\n/**\r\n * Returns 1 if a <= b, or 0 if not.\r\n * Arguments must be positive 32-bit integers less than or equal to 2^31 - 1.\r\n */\r\nexport function lessOrEqual(a: number, b: number): number {\r\n    return (((a | 0) - (b | 0) - 1) >>> 31) & 1;\r\n}\r\n\r\n/**\r\n * Returns 1 if a and b are of equal length and their contents\r\n * are equal, or 0 otherwise.\r\n *\r\n * Note that unlike in equal(), zero-length inputs are considered\r\n * the same, so this function will return 1.\r\n */\r\nexport function compare(a: Uint8Array, b: Uint8Array): number {\r\n    if (a.length !== b.length) {\r\n        return 0;\r\n    }\r\n    let result = 0;\r\n    for (let i = 0; i < a.length; i++) {\r\n        result |= a[i] ^ b[i];\r\n    }\r\n    return (1 & ((result - 1) >>> 8));\r\n}\r\n\r\n/**\r\n * Returns true if a and b are of equal non-zero length,\r\n * and their contents are equal, or false otherwise.\r\n *\r\n * Note that unlike in compare() zero-length inputs are considered\r\n * _not_ equal, so this function will return false.\r\n */\r\nexport function equal(a: Uint8Array, b: Uint8Array): boolean {\r\n    if (a.length === 0 || b.length === 0) {\r\n        return false;\r\n    }\r\n    return compare(a, b) !== 0;\r\n}\r\n", "// Copyright (C) 2016 Dmitry Chestnykh\r\n// MIT License. See LICENSE file for details.\r\n\r\n/**\r\n * Package poly1305 implements Poly1305 one-time message authentication algorithm.\r\n */\r\n\r\nimport { equal as constantTimeEqual } from \"@stablelib/constant-time\";\r\nimport { wipe } from \"@stablelib/wipe\";\r\n\r\nexport const DIGEST_LENGTH = 16;\r\n\r\n// Port of Andrew Moon's Poly1305-donna-16. Public domain.\r\n// https://github.com/floodyberry/poly1305-donna\r\n\r\n/**\r\n * Poly1305 computes 16-byte authenticator of message using\r\n * a one-time 32-byte key.\r\n *\r\n * Important: key should be used for only one message,\r\n * it should never repeat.\r\n */\r\nexport class Poly1305 {\r\n    readonly digestLength = DIGEST_LENGTH;\r\n\r\n    private _buffer = new Uint8Array(16);\r\n    private _r = new Uint16Array(10);\r\n    private _h = new Uint16Array(10);\r\n    private _pad = new Uint16Array(8);\r\n    private _leftover = 0;\r\n    private _fin = 0;\r\n    private _finished = false;\r\n\r\n    constructor(key: Uint8Array) {\r\n        let t0 = key[0] | key[1] << 8; this._r[0] = (t0) & 0x1fff;\r\n        let t1 = key[2] | key[3] << 8; this._r[1] = ((t0 >>> 13) | (t1 << 3)) & 0x1fff;\r\n        let t2 = key[4] | key[5] << 8; this._r[2] = ((t1 >>> 10) | (t2 << 6)) & 0x1f03;\r\n        let t3 = key[6] | key[7] << 8; this._r[3] = ((t2 >>> 7) | (t3 << 9)) & 0x1fff;\r\n        let t4 = key[8] | key[9] << 8; this._r[4] = ((t3 >>> 4) | (t4 << 12)) & 0x00ff;\r\n        this._r[5] = ((t4 >>> 1)) & 0x1ffe;\r\n        let t5 = key[10] | key[11] << 8; this._r[6] = ((t4 >>> 14) | (t5 << 2)) & 0x1fff;\r\n        let t6 = key[12] | key[13] << 8; this._r[7] = ((t5 >>> 11) | (t6 << 5)) & 0x1f81;\r\n        let t7 = key[14] | key[15] << 8; this._r[8] = ((t6 >>> 8) | (t7 << 8)) & 0x1fff;\r\n        this._r[9] = ((t7 >>> 5)) & 0x007f;\r\n\r\n        this._pad[0] = key[16] | key[17] << 8;\r\n        this._pad[1] = key[18] | key[19] << 8;\r\n        this._pad[2] = key[20] | key[21] << 8;\r\n        this._pad[3] = key[22] | key[23] << 8;\r\n        this._pad[4] = key[24] | key[25] << 8;\r\n        this._pad[5] = key[26] | key[27] << 8;\r\n        this._pad[6] = key[28] | key[29] << 8;\r\n        this._pad[7] = key[30] | key[31] << 8;\r\n    }\r\n\r\n    private _blocks(m: Uint8Array, mpos: number, bytes: number) {\r\n        let hibit = this._fin ? 0 : 1 << 11;\r\n\r\n        let h0 = this._h[0],\r\n            h1 = this._h[1],\r\n            h2 = this._h[2],\r\n            h3 = this._h[3],\r\n            h4 = this._h[4],\r\n            h5 = this._h[5],\r\n            h6 = this._h[6],\r\n            h7 = this._h[7],\r\n            h8 = this._h[8],\r\n            h9 = this._h[9];\r\n\r\n        let r0 = this._r[0],\r\n            r1 = this._r[1],\r\n            r2 = this._r[2],\r\n            r3 = this._r[3],\r\n            r4 = this._r[4],\r\n            r5 = this._r[5],\r\n            r6 = this._r[6],\r\n            r7 = this._r[7],\r\n            r8 = this._r[8],\r\n            r9 = this._r[9];\r\n\r\n        while (bytes >= 16) {\r\n            let t0 = m[mpos + 0] | m[mpos + 1] << 8; h0 += (t0) & 0x1fff;\r\n            let t1 = m[mpos + 2] | m[mpos + 3] << 8; h1 += ((t0 >>> 13) | (t1 << 3)) & 0x1fff;\r\n            let t2 = m[mpos + 4] | m[mpos + 5] << 8; h2 += ((t1 >>> 10) | (t2 << 6)) & 0x1fff;\r\n            let t3 = m[mpos + 6] | m[mpos + 7] << 8; h3 += ((t2 >>> 7) | (t3 << 9)) & 0x1fff;\r\n            let t4 = m[mpos + 8] | m[mpos + 9] << 8; h4 += ((t3 >>> 4) | (t4 << 12)) & 0x1fff;\r\n            h5 += ((t4 >>> 1)) & 0x1fff;\r\n            let t5 = m[mpos + 10] | m[mpos + 11] << 8; h6 += ((t4 >>> 14) | (t5 << 2)) & 0x1fff;\r\n            let t6 = m[mpos + 12] | m[mpos + 13] << 8; h7 += ((t5 >>> 11) | (t6 << 5)) & 0x1fff;\r\n            let t7 = m[mpos + 14] | m[mpos + 15] << 8; h8 += ((t6 >>> 8) | (t7 << 8)) & 0x1fff;\r\n            h9 += ((t7 >>> 5)) | hibit;\r\n\r\n            let c = 0;\r\n\r\n            let d0 = c;\r\n            d0 += h0 * r0;\r\n            d0 += h1 * (5 * r9);\r\n            d0 += h2 * (5 * r8);\r\n            d0 += h3 * (5 * r7);\r\n            d0 += h4 * (5 * r6);\r\n            c = (d0 >>> 13); d0 &= 0x1fff;\r\n            d0 += h5 * (5 * r5);\r\n            d0 += h6 * (5 * r4);\r\n            d0 += h7 * (5 * r3);\r\n            d0 += h8 * (5 * r2);\r\n            d0 += h9 * (5 * r1);\r\n            c += (d0 >>> 13); d0 &= 0x1fff;\r\n\r\n            let d1 = c;\r\n            d1 += h0 * r1;\r\n            d1 += h1 * r0;\r\n            d1 += h2 * (5 * r9);\r\n            d1 += h3 * (5 * r8);\r\n            d1 += h4 * (5 * r7);\r\n            c = (d1 >>> 13); d1 &= 0x1fff;\r\n            d1 += h5 * (5 * r6);\r\n            d1 += h6 * (5 * r5);\r\n            d1 += h7 * (5 * r4);\r\n            d1 += h8 * (5 * r3);\r\n            d1 += h9 * (5 * r2);\r\n            c += (d1 >>> 13); d1 &= 0x1fff;\r\n\r\n            let d2 = c;\r\n            d2 += h0 * r2;\r\n            d2 += h1 * r1;\r\n            d2 += h2 * r0;\r\n            d2 += h3 * (5 * r9);\r\n            d2 += h4 * (5 * r8);\r\n            c = (d2 >>> 13); d2 &= 0x1fff;\r\n            d2 += h5 * (5 * r7);\r\n            d2 += h6 * (5 * r6);\r\n            d2 += h7 * (5 * r5);\r\n            d2 += h8 * (5 * r4);\r\n            d2 += h9 * (5 * r3);\r\n            c += (d2 >>> 13); d2 &= 0x1fff;\r\n\r\n            let d3 = c;\r\n            d3 += h0 * r3;\r\n            d3 += h1 * r2;\r\n            d3 += h2 * r1;\r\n            d3 += h3 * r0;\r\n            d3 += h4 * (5 * r9);\r\n            c = (d3 >>> 13); d3 &= 0x1fff;\r\n            d3 += h5 * (5 * r8);\r\n            d3 += h6 * (5 * r7);\r\n            d3 += h7 * (5 * r6);\r\n            d3 += h8 * (5 * r5);\r\n            d3 += h9 * (5 * r4);\r\n            c += (d3 >>> 13); d3 &= 0x1fff;\r\n\r\n            let d4 = c;\r\n            d4 += h0 * r4;\r\n            d4 += h1 * r3;\r\n            d4 += h2 * r2;\r\n            d4 += h3 * r1;\r\n            d4 += h4 * r0;\r\n            c = (d4 >>> 13); d4 &= 0x1fff;\r\n            d4 += h5 * (5 * r9);\r\n            d4 += h6 * (5 * r8);\r\n            d4 += h7 * (5 * r7);\r\n            d4 += h8 * (5 * r6);\r\n            d4 += h9 * (5 * r5);\r\n            c += (d4 >>> 13); d4 &= 0x1fff;\r\n\r\n            let d5 = c;\r\n            d5 += h0 * r5;\r\n            d5 += h1 * r4;\r\n            d5 += h2 * r3;\r\n            d5 += h3 * r2;\r\n            d5 += h4 * r1;\r\n            c = (d5 >>> 13); d5 &= 0x1fff;\r\n            d5 += h5 * r0;\r\n            d5 += h6 * (5 * r9);\r\n            d5 += h7 * (5 * r8);\r\n            d5 += h8 * (5 * r7);\r\n            d5 += h9 * (5 * r6);\r\n            c += (d5 >>> 13); d5 &= 0x1fff;\r\n\r\n            let d6 = c;\r\n            d6 += h0 * r6;\r\n            d6 += h1 * r5;\r\n            d6 += h2 * r4;\r\n            d6 += h3 * r3;\r\n            d6 += h4 * r2;\r\n            c = (d6 >>> 13); d6 &= 0x1fff;\r\n            d6 += h5 * r1;\r\n            d6 += h6 * r0;\r\n            d6 += h7 * (5 * r9);\r\n            d6 += h8 * (5 * r8);\r\n            d6 += h9 * (5 * r7);\r\n            c += (d6 >>> 13); d6 &= 0x1fff;\r\n\r\n            let d7 = c;\r\n            d7 += h0 * r7;\r\n            d7 += h1 * r6;\r\n            d7 += h2 * r5;\r\n            d7 += h3 * r4;\r\n            d7 += h4 * r3;\r\n            c = (d7 >>> 13); d7 &= 0x1fff;\r\n            d7 += h5 * r2;\r\n            d7 += h6 * r1;\r\n            d7 += h7 * r0;\r\n            d7 += h8 * (5 * r9);\r\n            d7 += h9 * (5 * r8);\r\n            c += (d7 >>> 13); d7 &= 0x1fff;\r\n\r\n            let d8 = c;\r\n            d8 += h0 * r8;\r\n            d8 += h1 * r7;\r\n            d8 += h2 * r6;\r\n            d8 += h3 * r5;\r\n            d8 += h4 * r4;\r\n            c = (d8 >>> 13); d8 &= 0x1fff;\r\n            d8 += h5 * r3;\r\n            d8 += h6 * r2;\r\n            d8 += h7 * r1;\r\n            d8 += h8 * r0;\r\n            d8 += h9 * (5 * r9);\r\n            c += (d8 >>> 13); d8 &= 0x1fff;\r\n\r\n            let d9 = c;\r\n            d9 += h0 * r9;\r\n            d9 += h1 * r8;\r\n            d9 += h2 * r7;\r\n            d9 += h3 * r6;\r\n            d9 += h4 * r5;\r\n            c = (d9 >>> 13); d9 &= 0x1fff;\r\n            d9 += h5 * r4;\r\n            d9 += h6 * r3;\r\n            d9 += h7 * r2;\r\n            d9 += h8 * r1;\r\n            d9 += h9 * r0;\r\n            c += (d9 >>> 13); d9 &= 0x1fff;\r\n\r\n            c = (((c << 2) + c)) | 0;\r\n            c = (c + d0) | 0;\r\n            d0 = c & 0x1fff;\r\n            c = (c >>> 13);\r\n            d1 += c;\r\n\r\n            h0 = d0;\r\n            h1 = d1;\r\n            h2 = d2;\r\n            h3 = d3;\r\n            h4 = d4;\r\n            h5 = d5;\r\n            h6 = d6;\r\n            h7 = d7;\r\n            h8 = d8;\r\n            h9 = d9;\r\n\r\n            mpos += 16;\r\n            bytes -= 16;\r\n        }\r\n        this._h[0] = h0;\r\n        this._h[1] = h1;\r\n        this._h[2] = h2;\r\n        this._h[3] = h3;\r\n        this._h[4] = h4;\r\n        this._h[5] = h5;\r\n        this._h[6] = h6;\r\n        this._h[7] = h7;\r\n        this._h[8] = h8;\r\n        this._h[9] = h9;\r\n    }\r\n\r\n    finish(mac: Uint8Array, macpos = 0): this {\r\n        const g = new Uint16Array(10);\r\n        let c: number;\r\n        let mask: number;\r\n        let f: number;\r\n        let i: number;\r\n\r\n        if (this._leftover) {\r\n            i = this._leftover;\r\n            this._buffer[i++] = 1;\r\n            for (; i < 16; i++) {\r\n                this._buffer[i] = 0;\r\n            }\r\n            this._fin = 1;\r\n            this._blocks(this._buffer, 0, 16);\r\n        }\r\n\r\n        c = this._h[1] >>> 13;\r\n        this._h[1] &= 0x1fff;\r\n        for (i = 2; i < 10; i++) {\r\n            this._h[i] += c;\r\n            c = this._h[i] >>> 13;\r\n            this._h[i] &= 0x1fff;\r\n        }\r\n        this._h[0] += (c * 5);\r\n        c = this._h[0] >>> 13;\r\n        this._h[0] &= 0x1fff;\r\n        this._h[1] += c;\r\n        c = this._h[1] >>> 13;\r\n        this._h[1] &= 0x1fff;\r\n        this._h[2] += c;\r\n\r\n        g[0] = this._h[0] + 5;\r\n        c = g[0] >>> 13;\r\n        g[0] &= 0x1fff;\r\n        for (i = 1; i < 10; i++) {\r\n            g[i] = this._h[i] + c;\r\n            c = g[i] >>> 13;\r\n            g[i] &= 0x1fff;\r\n        }\r\n        g[9] -= (1 << 13);\r\n\r\n        mask = (c ^ 1) - 1;\r\n        for (i = 0; i < 10; i++) {\r\n            g[i] &= mask;\r\n        }\r\n        mask = ~mask;\r\n        for (i = 0; i < 10; i++) {\r\n            this._h[i] = (this._h[i] & mask) | g[i];\r\n        }\r\n\r\n        this._h[0] = ((this._h[0]) | (this._h[1] << 13)) & 0xffff;\r\n        this._h[1] = ((this._h[1] >>> 3) | (this._h[2] << 10)) & 0xffff;\r\n        this._h[2] = ((this._h[2] >>> 6) | (this._h[3] << 7)) & 0xffff;\r\n        this._h[3] = ((this._h[3] >>> 9) | (this._h[4] << 4)) & 0xffff;\r\n        this._h[4] = ((this._h[4] >>> 12) | (this._h[5] << 1) | (this._h[6] << 14)) & 0xffff;\r\n        this._h[5] = ((this._h[6] >>> 2) | (this._h[7] << 11)) & 0xffff;\r\n        this._h[6] = ((this._h[7] >>> 5) | (this._h[8] << 8)) & 0xffff;\r\n        this._h[7] = ((this._h[8] >>> 8) | (this._h[9] << 5)) & 0xffff;\r\n\r\n        f = this._h[0] + this._pad[0];\r\n        this._h[0] = f & 0xffff;\r\n        for (i = 1; i < 8; i++) {\r\n            f = (((this._h[i] + this._pad[i]) | 0) + (f >>> 16)) | 0;\r\n            this._h[i] = f & 0xffff;\r\n        }\r\n\r\n        mac[macpos + 0] = this._h[0] >>> 0;\r\n        mac[macpos + 1] = this._h[0] >>> 8;\r\n        mac[macpos + 2] = this._h[1] >>> 0;\r\n        mac[macpos + 3] = this._h[1] >>> 8;\r\n        mac[macpos + 4] = this._h[2] >>> 0;\r\n        mac[macpos + 5] = this._h[2] >>> 8;\r\n        mac[macpos + 6] = this._h[3] >>> 0;\r\n        mac[macpos + 7] = this._h[3] >>> 8;\r\n        mac[macpos + 8] = this._h[4] >>> 0;\r\n        mac[macpos + 9] = this._h[4] >>> 8;\r\n        mac[macpos + 10] = this._h[5] >>> 0;\r\n        mac[macpos + 11] = this._h[5] >>> 8;\r\n        mac[macpos + 12] = this._h[6] >>> 0;\r\n        mac[macpos + 13] = this._h[6] >>> 8;\r\n        mac[macpos + 14] = this._h[7] >>> 0;\r\n        mac[macpos + 15] = this._h[7] >>> 8;\r\n\r\n        this._finished = true;\r\n        return this;\r\n    }\r\n\r\n    update(m: Uint8Array): this {\r\n        let mpos = 0;\r\n        let bytes = m.length;\r\n        let want: number;\r\n\r\n        if (this._leftover) {\r\n            want = (16 - this._leftover);\r\n            if (want > bytes) {\r\n                want = bytes;\r\n            }\r\n            for (let i = 0; i < want; i++) {\r\n                this._buffer[this._leftover + i] = m[mpos + i];\r\n            }\r\n            bytes -= want;\r\n            mpos += want;\r\n            this._leftover += want;\r\n            if (this._leftover < 16) {\r\n                return this;\r\n            }\r\n            this._blocks(this._buffer, 0, 16);\r\n            this._leftover = 0;\r\n        }\r\n\r\n        if (bytes >= 16) {\r\n            want = bytes - (bytes % 16);\r\n            this._blocks(m, mpos, want);\r\n            mpos += want;\r\n            bytes -= want;\r\n        }\r\n\r\n        if (bytes) {\r\n            for (let i = 0; i < bytes; i++) {\r\n                this._buffer[this._leftover + i] = m[mpos + i];\r\n            }\r\n            this._leftover += bytes;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    digest(): Uint8Array {\r\n        // TODO(dchest): it behaves differently than other hashes/HMAC,\r\n        // because it throws when finished — others just return saved result.\r\n        if (this._finished) {\r\n            throw new Error(\"Poly1305 was finished\");\r\n        }\r\n        let mac = new Uint8Array(16);\r\n        this.finish(mac);\r\n        return mac;\r\n    }\r\n\r\n    clean(): this {\r\n        wipe(this._buffer);\r\n        wipe(this._r);\r\n        wipe(this._h);\r\n        wipe(this._pad);\r\n        this._leftover = 0;\r\n        this._fin = 0;\r\n        this._finished = true; // mark as finished even if not\r\n        return this;\r\n    }\r\n}\r\n\r\n/**\r\n * Returns 16-byte authenticator of data using a one-time 32-byte key.\r\n *\r\n * Important: key should be used for only one message, it should never repeat.\r\n */\r\nexport function oneTimeAuth(key: Uint8Array, data: Uint8Array): Uint8Array {\r\n    const h = new Poly1305(key);\r\n    h.update(data);\r\n    const digest = h.digest();\r\n    h.clean();\r\n    return digest;\r\n}\r\n\r\n/**\r\n * Returns true if two authenticators are 16-byte long and equal.\r\n * Uses contant-time comparison to avoid leaking timing information.\r\n */\r\nexport function equal(a: Uint8Array, b: Uint8Array): boolean {\r\n    if (a.length !== DIGEST_LENGTH || b.length !== DIGEST_LENGTH) {\r\n        return false;\r\n    }\r\n    return constantTimeEqual(a, b);\r\n}\r\n", "// Copyright (C) 2016 Dmitry Chestnykh\r\n// MIT License. See LICENSE file for details.\r\n\r\n/**\r\n * Package chacha20poly1305 implements ChaCha20-Poly1305 AEAD.\r\n */\r\n\r\nimport { AEAD } from \"@stablelib/aead\";\r\nimport { streamXOR, stream } from \"@stablelib/chacha\";\r\nimport { Poly1305 } from \"@stablelib/poly1305\";\r\nimport { wipe } from \"@stablelib/wipe\";\r\nimport { writeUint64LE } from \"@stablelib/binary\";\r\nimport { equal } from \"@stablelib/constant-time\";\r\n\r\nexport const KEY_LENGTH = 32;\r\nexport const NONCE_LENGTH = 12;\r\nexport const TAG_LENGTH = 16;\r\n\r\nconst ZEROS = new Uint8Array(16);\r\n\r\n/**\r\n * ChaCha20-Poly1305 Authenticated Encryption with Associated Data.\r\n *\r\n * Defined in RFC7539.\r\n */\r\nexport class ChaCha20Poly1305 implements AEAD {\r\n    readonly nonceLength = NONCE_LENGTH;\r\n    readonly tagLength = TAG_LENGTH;\r\n\r\n    private _key: Uint8Array;\r\n\r\n    /**\r\n     * Creates a new instance with the given 32-byte key.\r\n     */\r\n    constructor(key: Uint8Array) {\r\n        if (key.length !== KEY_LENGTH) {\r\n            throw new Error(\"ChaCha20Poly1305 needs 32-byte key\");\r\n        }\r\n        // Copy key.\r\n        this._key = new Uint8Array(key);\r\n    }\r\n\r\n    /**\r\n     * Encrypts and authenticates plaintext, authenticates associated data,\r\n     * and returns sealed ciphertext, which includes authentication tag.\r\n     *\r\n     * RFC7539 specifies 12 bytes for nonce. It may be this 12-byte nonce\r\n     * (\"IV\"), or full 16-byte counter (called \"32-bit fixed-common part\")\r\n     * and nonce.\r\n     *\r\n     * If dst is given (it must be the size of plaintext + the size of tag\r\n     * length) the result will be put into it. Dst and plaintext must not\r\n     * overlap.\r\n     */\r\n    seal(nonce: Uint8Array, plaintext: Uint8Array, associatedData?: Uint8Array,\r\n        dst?: Uint8Array): Uint8Array {\r\n        if (nonce.length > 16) {\r\n            throw new Error(\"ChaCha20Poly1305: incorrect nonce length\");\r\n        }\r\n\r\n        // Allocate space for counter, and set nonce as last bytes of it.\r\n        const counter = new Uint8Array(16);\r\n        counter.set(nonce, counter.length - nonce.length);\r\n\r\n        // Generate authentication key by taking first 32-bytes of stream.\r\n        // We pass full counter, which has 12-byte nonce and 4-byte block counter,\r\n        // and it will get incremented after generating the block, which is\r\n        // exactly what we need: we only use the first 32 bytes of 64-byte\r\n        // ChaCha block and discard the next 32 bytes.\r\n        const authKey = new Uint8Array(32);\r\n        stream(this._key, counter, authKey, 4);\r\n\r\n        // Allocate space for sealed ciphertext.\r\n        const resultLength = plaintext.length + this.tagLength;\r\n        let result;\r\n        if (dst) {\r\n            if (dst.length !== resultLength) {\r\n                throw new Error(\"ChaCha20Poly1305: incorrect destination length\");\r\n            }\r\n            result = dst;\r\n        } else {\r\n            result = new Uint8Array(resultLength);\r\n        }\r\n\r\n        // Encrypt plaintext.\r\n        streamXOR(this._key, counter, plaintext, result, 4);\r\n\r\n        // Authenticate.\r\n        // XXX: can \"simplify\" here: pass full result (which is already padded\r\n        // due to zeroes prepared for tag), and ciphertext length instead of\r\n        // subarray of result.\r\n        this._authenticate(result.subarray(result.length - this.tagLength, result.length),\r\n            authKey, result.subarray(0, result.length - this.tagLength), associatedData);\r\n\r\n        // Cleanup.\r\n        wipe(counter);\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Authenticates sealed ciphertext (which includes authentication tag) and\r\n     * associated data, decrypts ciphertext and returns decrypted plaintext.\r\n     *\r\n     * RFC7539 specifies 12 bytes for nonce. It may be this 12-byte nonce\r\n     * (\"IV\"), or full 16-byte counter (called \"32-bit fixed-common part\")\r\n     * and nonce.\r\n     *\r\n     * If authentication fails, it returns null.\r\n     *\r\n     * If dst is given (it must be of ciphertext length minus tag length),\r\n     * the result will be put into it. Dst and plaintext must not overlap.\r\n     */\r\n    open(nonce: Uint8Array, sealed: Uint8Array, associatedData?: Uint8Array,\r\n        dst?: Uint8Array): Uint8Array | null {\r\n        if (nonce.length > 16) {\r\n            throw new Error(\"ChaCha20Poly1305: incorrect nonce length\");\r\n        }\r\n\r\n        // Sealed ciphertext should at least contain tag.\r\n        if (sealed.length < this.tagLength) {\r\n            // TODO(dchest): should we throw here instead?\r\n            return null;\r\n        }\r\n\r\n        // Allocate space for counter, and set nonce as last bytes of it.\r\n        const counter = new Uint8Array(16);\r\n        counter.set(nonce, counter.length - nonce.length);\r\n\r\n        // Generate authentication key by taking first 32-bytes of stream.\r\n        const authKey = new Uint8Array(32);\r\n        stream(this._key, counter, authKey, 4);\r\n\r\n        // Authenticate.\r\n        // XXX: can simplify and avoid allocation: since authenticate()\r\n        // already allocates tag (from Poly1305.digest(), it can return)\r\n        // it instead of copying to calculatedTag. But then in seal()\r\n        // we'll need to copy it.\r\n        const calculatedTag = new Uint8Array(this.tagLength);\r\n        this._authenticate(calculatedTag, authKey,\r\n            sealed.subarray(0, sealed.length - this.tagLength), associatedData);\r\n\r\n        // Constant-time compare tags and return null if they differ.\r\n        if (!equal(calculatedTag,\r\n            sealed.subarray(sealed.length - this.tagLength, sealed.length))) {\r\n            return null;\r\n        }\r\n\r\n        // Allocate space for decrypted plaintext.\r\n        const resultLength = sealed.length - this.tagLength;\r\n        let result;\r\n        if (dst) {\r\n            if (dst.length !== resultLength) {\r\n                throw new Error(\"ChaCha20Poly1305: incorrect destination length\");\r\n            }\r\n            result = dst;\r\n        } else {\r\n            result = new Uint8Array(resultLength);\r\n        }\r\n\r\n        // Decrypt.\r\n        streamXOR(this._key, counter,\r\n            sealed.subarray(0, sealed.length - this.tagLength), result, 4);\r\n\r\n        // Cleanup.\r\n        wipe(counter);\r\n\r\n        return result;\r\n    }\r\n\r\n    clean(): this {\r\n        wipe(this._key);\r\n        return this;\r\n    }\r\n\r\n    private _authenticate(tagOut: Uint8Array, authKey: Uint8Array,\r\n        ciphertext: Uint8Array, associatedData?: Uint8Array) {\r\n\r\n        // Initialize Poly1305 with authKey.\r\n        const h = new Poly1305(authKey);\r\n\r\n        // Authenticate padded associated data.\r\n        if (associatedData) {\r\n            h.update(associatedData);\r\n            if (associatedData.length % 16 > 0) {\r\n                h.update(ZEROS.subarray(associatedData.length % 16));\r\n            }\r\n        }\r\n\r\n        // Authenticate padded ciphertext.\r\n        h.update(ciphertext);\r\n        if (ciphertext.length % 16 > 0) {\r\n            h.update(ZEROS.subarray(ciphertext.length % 16));\r\n        }\r\n\r\n        // Authenticate length of associated data.\r\n        // XXX: can avoid allocation here?\r\n        const length = new Uint8Array(8);\r\n        if (associatedData) {\r\n            writeUint64LE(associatedData.length, length);\r\n        }\r\n        h.update(length);\r\n\r\n        // Authenticate length of ciphertext.\r\n        writeUint64LE(ciphertext.length, length);\r\n        h.update(length);\r\n\r\n        // Get tag and copy it into tagOut.\r\n        const tag = h.digest();\r\n        for (let i = 0; i < tag.length; i++) {\r\n            tagOut[i] = tag[i];\r\n        }\r\n\r\n        // Cleanup.\r\n        h.clean();\r\n        wipe(tag);\r\n        wipe(length);\r\n    }\r\n}\r\n", "// Copyright (C) 2016 Dmitry Chestnykh\r\n// MIT License. See LICENSE file for details.\r\n\r\n/**\r\n * Package hash provides interface for hash functions.\r\n */\r\n\r\n/**\r\n * Hash interface describes properties of\r\n * cryptographic hash functions.\r\n */\r\nexport interface Hash {\r\n    readonly digestLength: number;\r\n    readonly blockSize: number;\r\n    update(data: Uint8Array): this;\r\n    reset(): this;\r\n    finish(out: Uint8Array): this;\r\n    digest(): Uint8Array;\r\n    clean(): void;\r\n}\r\n\r\nexport interface SerializableHash extends Hash {\r\n    saveState(): any;\r\n    restoreState(savedState: any): this;\r\n    cleanSavedState(savedState: any): void;\r\n}\r\n\r\nexport function isSerializableHash(h: Hash): h is SerializableHash {\r\n    return (\r\n        typeof (h as SerializableHash).saveState !== \"undefined\" &&\r\n        typeof (h as SerializableHash).restoreState !== \"undefined\" &&\r\n        typeof (h as SerializableHash).cleanSavedState !== \"undefined\"\r\n    );\r\n}\r\n\r\n// TODO(dchest): figure out the standardized interface for XOF such as\r\n// SHAKE and BLAKE2X.\r\n", "// Copyright (C) 2016 Dmitry Chestnykh\r\n// MIT License. See LICENSE file for details.\r\n\r\n/**\r\n * Package hmac implements HMAC algorithm.\r\n */\r\n\r\nimport { Hash, SerializableHash, isSerializableHash } from \"@stablelib/hash\";\r\nimport { equal as constantTimeEqual } from \"@stablelib/constant-time\";\r\nimport { wipe } from \"@stablelib/wipe\";\r\n\r\n/**\r\n *  HMAC implements hash-based message authentication algorithm.\r\n */\r\nexport class HMAC implements SerializableHash {\r\n    readonly blockSize: number;\r\n    readonly digestLength: number;\r\n\r\n    private _inner: Hash; // inner hash\r\n    private _outer: Hash; // outer hash\r\n\r\n    private _finished = false; // true if HMAC was finalized\r\n\r\n    // Copies of hash states after keying.\r\n    // Need for quick reset without hashing the key again.\r\n    private _innerKeyedState: any | undefined;\r\n    private _outerKeyedState: any | undefined;\r\n\r\n    /**\r\n     * Constructs a new HMAC with the given Hash and secret key.\r\n     */\r\n    constructor(hash: new () => Hash | SerializableHash, key: Uint8Array) {\r\n        // Initialize inner and outer hashes.\r\n        this._inner = new hash();\r\n        this._outer = new hash();\r\n\r\n        // Set block and digest sizes for this HMAC\r\n        // instance to values from the hash.\r\n        this.blockSize = this._outer.blockSize;\r\n        this.digestLength = this._outer.digestLength;\r\n\r\n        // Pad temporary stores a key (or its hash) padded with zeroes.\r\n        const pad = new Uint8Array(this.blockSize);\r\n\r\n        if (key.length > this.blockSize) {\r\n            // If key is bigger than hash block size, it must be\r\n            // hashed and this hash is used as a key instead.\r\n            this._inner.update(key).finish(pad).clean();\r\n        } else {\r\n            // Otherwise, copy the key into pad.\r\n            pad.set(key);\r\n        }\r\n\r\n        // Now two different keys are derived from padded key\r\n        // by xoring a different byte value to each.\r\n\r\n        // To make inner hash key, xor byte 0x36 into pad.\r\n        for (let i = 0; i < pad.length; i++) {\r\n            pad[i] ^= 0x36;\r\n        }\r\n        // Update inner hash with the result.\r\n        this._inner.update(pad);\r\n\r\n        // To make outer hash key, xor byte 0x5c into pad.\r\n        // But since we already xored 0x36 there, we must\r\n        // first undo this by xoring it again.\r\n        for (let i = 0; i < pad.length; i++) {\r\n            pad[i] ^= 0x36 ^ 0x5c;\r\n        }\r\n        // Update outer hash with the result.\r\n        this._outer.update(pad);\r\n\r\n        // Save states of both hashes, so that we can quickly restore\r\n        // them later in reset() without the need to remember the actual\r\n        // key and perform this initialization again.\r\n        if (isSerializableHash(this._inner) && isSerializableHash(this._outer)) {\r\n            this._innerKeyedState = this._inner.saveState();\r\n            this._outerKeyedState = this._outer.saveState();\r\n        }\r\n\r\n        // Clean pad.\r\n        wipe(pad);\r\n    }\r\n\r\n    /**\r\n     * Returns HMAC state to the state initialized with key\r\n     * to make it possible to run HMAC over the other data with the same\r\n     * key without creating a new instance.\r\n     */\r\n    reset(): this {\r\n        if (!isSerializableHash(this._inner) || !isSerializableHash(this._outer)) {\r\n            throw new Error(\"hmac: can't reset() because hash doesn't implement restoreState()\");\r\n        }\r\n        // Restore keyed states of inner and outer hashes.\r\n        this._inner.restoreState(this._innerKeyedState);\r\n        this._outer.restoreState(this._outerKeyedState);\r\n        this._finished = false;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Cleans HMAC state.\r\n     */\r\n    clean() {\r\n        if (isSerializableHash(this._inner)) {\r\n            this._inner.cleanSavedState(this._innerKeyedState);\r\n        }\r\n        if (isSerializableHash(this._outer)) {\r\n            this._outer.cleanSavedState(this._outerKeyedState);\r\n        }\r\n        this._inner.clean();\r\n        this._outer.clean();\r\n    }\r\n\r\n    /**\r\n     * Updates state with provided data.\r\n     */\r\n    update(data: Uint8Array): this {\r\n        this._inner.update(data);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Finalizes HMAC and puts the result in out.\r\n     */\r\n    finish(out: Uint8Array): this {\r\n        if (this._finished) {\r\n            // If HMAC was finalized, outer hash is also finalized,\r\n            // so it produces the same digest it produced when it\r\n            // was finalized.\r\n            this._outer.finish(out);\r\n            return this;\r\n        }\r\n\r\n        // Finalize inner hash and store the result temporarily.\r\n        this._inner.finish(out);\r\n\r\n        // Update outer hash with digest of inner hash and and finalize it.\r\n        this._outer.update(out.subarray(0, this.digestLength)).finish(out);\r\n        this._finished = true;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Returns the computed message authentication code.\r\n     */\r\n    digest(): Uint8Array {\r\n        const out = new Uint8Array(this.digestLength);\r\n        this.finish(out);\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Saves HMAC state.\r\n     * This function is needed for PBKDF2 optimization.\r\n     */\r\n    saveState(): any {\r\n        if (!isSerializableHash(this._inner)) {\r\n            throw new Error(\"hmac: can't saveState() because hash doesn't implement it\");\r\n        }\r\n        return this._inner.saveState();\r\n    }\r\n\r\n    restoreState(savedState: any): this {\r\n        if (!isSerializableHash(this._inner) || !isSerializableHash(this._outer)) {\r\n            throw new Error(\"hmac: can't restoreState() because hash doesn't implement it\");\r\n        }\r\n        this._inner.restoreState(savedState);\r\n        this._outer.restoreState(this._outerKeyedState);\r\n        this._finished = false;\r\n        return this;\r\n    }\r\n\r\n    cleanSavedState(savedState: any) {\r\n        if (!isSerializableHash(this._inner)) {\r\n            throw new Error(\"hmac: can't cleanSavedState() because hash doesn't implement it\");\r\n        }\r\n        this._inner.cleanSavedState(savedState);\r\n    }\r\n}\r\n\r\n/**\r\n * Returns HMAC using the given hash constructor for the key over data.\r\n */\r\nexport function hmac(hash: new () => Hash, key: Uint8Array, data: Uint8Array): Uint8Array {\r\n    const h = new HMAC(hash, key);\r\n    h.update(data);\r\n    const digest = h.digest();\r\n    h.clean();\r\n    return digest;\r\n}\r\n\r\n/**\r\n * Returns true if two HMAC digests are equal.\r\n * Uses constant-time comparison to avoid leaking timing information.\r\n *\r\n * Example:\r\n *\r\n *    const receivedDigest = ...\r\n *    const realDigest = hmac(SHA256, key, data);\r\n *    if (!equal(receivedDigest, realDigest)) {\r\n *        throw new Error(\"Authentication error\");\r\n *    }\r\n */\r\nexport const equal = constantTimeEqual;\r\n", "// Copyright (C) 2016 Dmitry Chestnykh\r\n// MIT License. See LICENSE file for details.\r\n\r\n/**\r\n * Package hkdf implements HKDF key derivation function.\r\n */\r\n\r\nimport { Hash } from \"@stablelib/hash\";\r\nimport { HMAC, hmac } from \"@stablelib/hmac\";\r\nimport { wipe } from \"@stablelib/wipe\";\r\n\r\n/**\r\n * HMAC-based Extract-and-Expand Key Derivation Function.\r\n *\r\n * Implements HKDF from RFC5869.\r\n *\r\n * Expands the given master key with salt and info into\r\n * a limited stream of key material.\r\n */\r\nexport class HKDF {\r\n    private _hmac: HMAC;\r\n    private _buffer: Uint8Array;\r\n    private _bufpos: number;\r\n    private _counter = new Uint8Array(1); // starts with zero\r\n    private _hash: new () => Hash;\r\n    private _info?: Uint8Array;\r\n\r\n    /**\r\n     * Create a new HKDF instance for the given hash function\r\n     * with the master key, optional salt, and info.\r\n     *\r\n     * - Master key is a high-entropy secret key (not a password).\r\n     * - Salt is a non-secret random value.\r\n     * - Info is application- and/or context-specific information.\r\n     */\r\n    constructor(hash: new () => Hash,\r\n        key: Uint8Array,\r\n        salt = new Uint8Array(0),\r\n        info?: Uint8Array) {\r\n\r\n        this._hash = hash;\r\n        this._info = info;\r\n\r\n        // HKDF-Extract uses salt as HMAC key, and key as data.\r\n        const okm = hmac(this._hash, salt, key);\r\n\r\n        // Initialize HMAC for expanding with extracted key.\r\n        this._hmac = new HMAC(hash, okm);\r\n\r\n        // Allocate buffer.\r\n        this._buffer = new Uint8Array(this._hmac.digestLength);\r\n        this._bufpos = this._buffer.length;\r\n    }\r\n\r\n    // Fill buffer with new block of HKDF-Extract output.\r\n    private _fillBuffer(): void {\r\n        // Increment counter.\r\n        this._counter[0]++;\r\n\r\n        const ctr = this._counter[0];\r\n\r\n        // Check if counter overflowed.\r\n        if (ctr === 0) {\r\n            throw new Error(\"hkdf: cannot expand more\");\r\n        }\r\n\r\n        // Prepare HMAC instance for new data with old key.\r\n        this._hmac.reset();\r\n\r\n        // Hash in previous output if it was generated\r\n        // (i.e. counter is greater than 1).\r\n        if (ctr > 1) {\r\n            this._hmac.update(this._buffer);\r\n        }\r\n\r\n        // Hash in info if it exists.\r\n        if (this._info) {\r\n            this._hmac.update(this._info);\r\n        }\r\n\r\n        // Hash in the counter.\r\n        this._hmac.update(this._counter);\r\n\r\n        // Output result to buffer and clean HMAC instance.\r\n        this._hmac.finish(this._buffer);\r\n\r\n        // Reset buffer position.\r\n        this._bufpos = 0;\r\n    }\r\n\r\n    /**\r\n     * Expand returns next key material of the given length.\r\n     *\r\n     * It throws if expansion limit is reached (which is\r\n     * 254 digests of the underlying HMAC function).\r\n     */\r\n    expand(length: number): Uint8Array {\r\n        const out = new Uint8Array(length);\r\n        for (let i = 0; i < out.length; i++) {\r\n            if (this._bufpos === this._buffer.length) {\r\n                this._fillBuffer();\r\n            }\r\n            out[i] = this._buffer[this._bufpos++];\r\n        }\r\n        return out;\r\n    }\r\n\r\n    clean(): void {\r\n        this._hmac.clean();\r\n        wipe(this._buffer);\r\n        wipe(this._counter);\r\n        this._bufpos = 0;\r\n    }\r\n}\r\n\r\n// TODO(dchest): maybe implement deriveKey?\r\n", "// Copyright (C) 2016 Dmitry Chestnykh\r\n// MIT License. See LICENSE file for details.\r\n\r\nimport { RandomSource } from \"./\";\r\n\r\nconst QUOTA = 65536;\r\n\r\nexport class BrowserRandomSource implements RandomSource {\r\n    isAvailable = false;\r\n    isInstantiated = false;\r\n\r\n    private _crypto?: { getRandomValues: typeof window.crypto.getRandomValues };\r\n\r\n    constructor() {\r\n        const browserCrypto = typeof self !== 'undefined'\r\n            ? (self.crypto || (self as { msCrypto?: any }).msCrypto) // IE11 has msCrypto\r\n            : null;\r\n\r\n        if (browserCrypto && browserCrypto.getRandomValues !== undefined) {\r\n            this._crypto = browserCrypto;\r\n            this.isAvailable = true;\r\n            this.isInstantiated = true;\r\n        }\r\n    }\r\n\r\n    randomBytes(length: number): Uint8Array {\r\n        if (!this.isAvailable || !this._crypto) {\r\n            throw new Error(\"Browser random byte generator is not available.\");\r\n        }\r\n        const out = new Uint8Array(length);\r\n        for (let i = 0; i < out.length; i += QUOTA) {\r\n            this._crypto.getRandomValues(out.subarray(i, i + Math.min(out.length - i, QUOTA)));\r\n        }\r\n        return out;\r\n    }\r\n}\r\n", "// Copyright (C) 2016 Dmitry Chestnykh\r\n// MIT License. See LICENSE file for details.\r\n\r\nimport { RandomSource } from \"./\";\r\nimport { wipe } from \"@stablelib/wipe\";\r\n\r\ndeclare function require(name: string): any;\r\n\r\nexport class NodeRandomSource implements RandomSource {\r\n    isAvailable = false;\r\n    isInstantiated = false;\r\n\r\n    private _crypto: { randomBytes(n: number): Uint8Array } | undefined;\r\n\r\n    constructor() {\r\n        if (typeof require !== \"undefined\") {\r\n            const nodeCrypto = require(\"crypto\");\r\n            if (nodeCrypto && nodeCrypto.randomBytes) {\r\n                this._crypto = nodeCrypto;\r\n                this.isAvailable = true;\r\n                this.isInstantiated = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    randomBytes(length: number): Uint8Array {\r\n        if (!this.isAvailable || !this._crypto) {\r\n            throw new Error(\"Node.js random byte generator is not available.\");\r\n        }\r\n\r\n        // Get random bytes (result is Buffer).\r\n        let buffer = this._crypto.randomBytes(length);\r\n\r\n        // Make sure we got the length that we requested.\r\n        if (buffer.length !== length) {\r\n            throw new Error(\"NodeRandomSource: got fewer bytes than requested\");\r\n        }\r\n\r\n        // Allocate output array.\r\n        const out = new Uint8Array(length);\r\n\r\n        // Copy bytes from buffer to output.\r\n        for (let i = 0; i < out.length; i++) {\r\n            out[i] = buffer[i];\r\n        }\r\n\r\n        // Cleanup.\r\n        wipe(buffer);\r\n\r\n        return out;\r\n    }\r\n}\r\n", "// Copyright (C) 2016 Dmitry Chestnykh\r\n// MIT License. See LICENSE file for details.\r\n\r\nimport { RandomSource } from \"./\";\r\nimport { BrowserRandomSource } from \"./browser\";\r\nimport { NodeRandomSource } from \"./node\";\r\n\r\nexport class SystemRandomSource implements RandomSource {\r\n    isAvailable = false;\r\n    name = \"\";\r\n    private _source: RandomSource;\r\n\r\n    constructor() {\r\n        // Try browser.\r\n        this._source = new BrowserRandomSource();\r\n        if (this._source.isAvailable) {\r\n            this.isAvailable = true;\r\n            this.name = \"Browser\";\r\n            return;\r\n        }\r\n\r\n        // If no browser source, try Node.\r\n        this._source = new NodeRandomSource();\r\n        if (this._source.isAvailable) {\r\n            this.isAvailable = true;\r\n            this.name = \"Node\";\r\n            return;\r\n        }\r\n\r\n        // No sources, we're out of options.\r\n    }\r\n\r\n    randomBytes(length: number): Uint8Array {\r\n        if (!this.isAvailable) {\r\n            throw new Error(\"System random byte generator is not available.\");\r\n        }\r\n        return this._source.randomBytes(length);\r\n    }\r\n}\r\n", "// Copyright (C) 2016 Dmitry Chestnykh\r\n// MIT License. See LICENSE file for details.\r\n\r\n/**\r\n * Package random provides functions to access system's\r\n * cryptographically secure random byte generator.\r\n */\r\n\r\nimport { RandomSource } from \"./source\";\r\nimport { SystemRandomSource } from \"./source/system\";\r\nimport { readUint32LE } from \"@stablelib/binary\";\r\nimport { wipe } from \"@stablelib/wipe\";\r\n\r\nexport { RandomSource } from \"./source\";\r\n\r\nexport const defaultRandomSource = new SystemRandomSource();\r\n\r\nexport function randomBytes(length: number, prng: RandomSource = defaultRandomSource): Uint8Array {\r\n    return prng.randomBytes(length);\r\n}\r\n\r\n/**\r\n * Returns a uniformly random unsigned 32-bit integer.\r\n */\r\nexport function randomUint32(prng: RandomSource = defaultRandomSource): number {\r\n    // Generate 4-byte random buffer.\r\n    const buf = randomBytes(4, prng);\r\n\r\n    // Convert bytes from buffer into a 32-bit integer.\r\n    // It's not important which byte order to use, since\r\n    // the result is random.\r\n    const result = readUint32LE(buf);\r\n\r\n    // Clean the buffer.\r\n    wipe(buf);\r\n\r\n    return result;\r\n}\r\n\r\n/** 62 alphanumeric characters for default charset of randomString() */\r\nconst ALPHANUMERIC = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\";\r\n\r\n/**\r\n * Returns a uniform random string of the given length\r\n * with characters from the given charset.\r\n *\r\n * Charset must not have more than 256 characters.\r\n *\r\n * Default charset generates case-sensitive alphanumeric\r\n * strings (0-9, A-Z, a-z).\r\n */\r\nexport function randomString(\r\n    length: number,\r\n    charset = ALPHANUMERIC,\r\n    prng: RandomSource = defaultRandomSource\r\n): string {\r\n    if (charset.length < 2) {\r\n        throw new Error(\"randomString charset is too short\");\r\n    }\r\n    if (charset.length > 256) {\r\n        throw new Error(\"randomString charset is too long\");\r\n    }\r\n    let out = '';\r\n    const charsLen = charset.length;\r\n    const maxByte = 256 - (256 % charsLen);\r\n    while (length > 0) {\r\n        const buf = randomBytes(Math.ceil(length * 256 / maxByte), prng);\r\n        for (let i = 0; i < buf.length && length > 0; i++) {\r\n            const randomByte = buf[i];\r\n            if (randomByte < maxByte) {\r\n                out += charset.charAt(randomByte % charsLen);\r\n                length--;\r\n            }\r\n        }\r\n        wipe(buf);\r\n    }\r\n    return out;\r\n}\r\n\r\n/**\r\n * Returns uniform random string containing at least the given\r\n * number of bits of entropy.\r\n *\r\n * For example, randomStringForEntropy(128) will return a 22-character\r\n * alphanumeric string, while randomStringForEntropy(128, \"0123456789\")\r\n * will return a 39-character numeric string, both will contain at\r\n * least 128 bits of entropy.\r\n *\r\n * Default charset generates case-sensitive alphanumeric\r\n * strings (0-9, A-Z, a-z).\r\n */\r\nexport function randomStringForEntropy(\r\n    bits: number,\r\n    charset = ALPHANUMERIC,\r\n    prng: RandomSource = defaultRandomSource\r\n): string {\r\n    const length = Math.ceil(bits / (Math.log(charset.length) / Math.LN2));\r\n    return randomString(length, charset, prng);\r\n}\r\n", "// Copyright (C) 2016 Dmitry Chestnykh\r\n// MIT License. See LICENSE file for details.\r\n\r\n/**\r\n * Package sha256 implements SHA-2-256 cryptographic hash function.\r\n */\r\n\r\nimport { SerializableHash } from \"@stablelib/hash\";\r\nimport { readUint32BE, writeUint32BE } from \"@stablelib/binary\";\r\nimport { wipe } from \"@stablelib/wipe\";\r\n\r\nexport const DIGEST_LENGTH = 32;\r\nexport const BLOCK_SIZE = 64;\r\n\r\n/**\r\n * SHA2-256 cryptographic hash algorithm.\r\n */\r\nexport class SHA256 implements SerializableHash {\r\n    /** Length of hash output */\r\n    readonly digestLength: number = DIGEST_LENGTH;\r\n\r\n    /** Block size */\r\n    readonly blockSize: number = BLOCK_SIZE;\r\n\r\n    // Note: Int32Array is used instead of Uint32Array for performance reasons.\r\n    protected _state = new Int32Array(8); // hash state\r\n    private _temp = new Int32Array(64); // temporary state\r\n    private _buffer = new Uint8Array(128); // buffer for data to hash\r\n    private _bufferLength = 0; // number of bytes in buffer\r\n    private _bytesHashed = 0; // number of total bytes hashed\r\n    private _finished = false; // indicates whether the hash was finalized\r\n\r\n    constructor() {\r\n        this.reset();\r\n    }\r\n\r\n    protected _initState() {\r\n        this._state[0] = 0x6a09e667;\r\n        this._state[1] = 0xbb67ae85;\r\n        this._state[2] = 0x3c6ef372;\r\n        this._state[3] = 0xa54ff53a;\r\n        this._state[4] = 0x510e527f;\r\n        this._state[5] = 0x9b05688c;\r\n        this._state[6] = 0x1f83d9ab;\r\n        this._state[7] = 0x5be0cd19;\r\n    }\r\n\r\n    /**\r\n     * Resets hash state making it possible\r\n     * to re-use this instance to hash other data.\r\n     */\r\n    reset(): this {\r\n        this._initState();\r\n        this._bufferLength = 0;\r\n        this._bytesHashed = 0;\r\n        this._finished = false;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Cleans internal buffers and resets hash state.\r\n     */\r\n    clean() {\r\n        wipe(this._buffer);\r\n        wipe(this._temp);\r\n        this.reset();\r\n    }\r\n\r\n    /**\r\n     * Updates hash state with the given data.\r\n     *\r\n     * Throws error when trying to update already finalized hash:\r\n     * instance must be reset to update it again.\r\n     */\r\n    update(data: Uint8Array, dataLength: number = data.length): this {\r\n        if (this._finished) {\r\n            throw new Error(\"SHA256: can't update because hash was finished.\");\r\n        }\r\n        let dataPos = 0;\r\n        this._bytesHashed += dataLength;\r\n        if (this._bufferLength > 0) {\r\n            while (this._bufferLength < this.blockSize && dataLength > 0) {\r\n                this._buffer[this._bufferLength++] = data[dataPos++];\r\n                dataLength--;\r\n            }\r\n            if (this._bufferLength === this.blockSize) {\r\n                hashBlocks(this._temp, this._state, this._buffer, 0, this.blockSize);\r\n                this._bufferLength = 0;\r\n            }\r\n        }\r\n        if (dataLength >= this.blockSize) {\r\n            dataPos = hashBlocks(this._temp, this._state, data, dataPos, dataLength);\r\n            dataLength %= this.blockSize;\r\n        }\r\n        while (dataLength > 0) {\r\n            this._buffer[this._bufferLength++] = data[dataPos++];\r\n            dataLength--;\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Finalizes hash state and puts hash into out.\r\n     * If hash was already finalized, puts the same value.\r\n     */\r\n    finish(out: Uint8Array): this {\r\n        if (!this._finished) {\r\n            const bytesHashed = this._bytesHashed;\r\n            const left = this._bufferLength;\r\n            const bitLenHi = (bytesHashed / 0x20000000) | 0;\r\n            const bitLenLo = bytesHashed << 3;\r\n            const padLength = (bytesHashed % 64 < 56) ? 64 : 128;\r\n\r\n            this._buffer[left] = 0x80;\r\n            for (let i = left + 1; i < padLength - 8; i++) {\r\n                this._buffer[i] = 0;\r\n            }\r\n            writeUint32BE(bitLenHi, this._buffer, padLength - 8);\r\n            writeUint32BE(bitLenLo, this._buffer, padLength - 4);\r\n\r\n            hashBlocks(this._temp, this._state, this._buffer, 0, padLength);\r\n\r\n            this._finished = true;\r\n        }\r\n\r\n        for (let i = 0; i < this.digestLength / 4; i++) {\r\n            writeUint32BE(this._state[i], out, i * 4);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Returns the final hash digest.\r\n     */\r\n    digest(): Uint8Array {\r\n        const out = new Uint8Array(this.digestLength);\r\n        this.finish(out);\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Function useful for HMAC/PBKDF2 optimization.\r\n     * Returns hash state to be used with restoreState().\r\n     * Only chain value is saved, not buffers or other\r\n     * state variables.\r\n     */\r\n    saveState(): SavedState {\r\n        if (this._finished) {\r\n            throw new Error(\"SHA256: cannot save finished state\");\r\n        }\r\n        return {\r\n            state: new Int32Array(this._state),\r\n            buffer: this._bufferLength > 0 ? new Uint8Array(this._buffer) : undefined,\r\n            bufferLength: this._bufferLength,\r\n            bytesHashed: this._bytesHashed\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Function useful for HMAC/PBKDF2 optimization.\r\n     * Restores state saved by saveState() and sets bytesHashed\r\n     * to the given value.\r\n     */\r\n    restoreState(savedState: SavedState): this {\r\n        this._state.set(savedState.state);\r\n        this._bufferLength = savedState.bufferLength;\r\n        if (savedState.buffer) {\r\n            this._buffer.set(savedState.buffer);\r\n        }\r\n        this._bytesHashed = savedState.bytesHashed;\r\n        this._finished = false;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Cleans state returned by saveState().\r\n     */\r\n    cleanSavedState(savedState: SavedState) {\r\n        wipe(savedState.state);\r\n        if (savedState.buffer) {\r\n            wipe(savedState.buffer);\r\n        }\r\n        savedState.bufferLength = 0;\r\n        savedState.bytesHashed = 0;\r\n    }\r\n}\r\n\r\nexport type SavedState = {\r\n    state: Int32Array;\r\n    buffer: Uint8Array | undefined;\r\n    bufferLength: number;\r\n    bytesHashed: number;\r\n};\r\n\r\n// Constants\r\nconst K = new Int32Array([\r\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b,\r\n    0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01,\r\n    0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7,\r\n    0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\r\n    0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152,\r\n    0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147,\r\n    0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc,\r\n    0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\r\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819,\r\n    0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08,\r\n    0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f,\r\n    0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\r\n    0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\r\n]);\r\n\r\nfunction hashBlocks(w: Int32Array, v: Int32Array, p: Uint8Array, pos: number, len: number): number {\r\n    while (len >= 64) {\r\n        let a = v[0];\r\n        let b = v[1];\r\n        let c = v[2];\r\n        let d = v[3];\r\n        let e = v[4];\r\n        let f = v[5];\r\n        let g = v[6];\r\n        let h = v[7];\r\n\r\n        for (let i = 0; i < 16; i++) {\r\n            let j = pos + i * 4;\r\n            w[i] = readUint32BE(p, j);\r\n        }\r\n\r\n        for (let i = 16; i < 64; i++) {\r\n            let u = w[i - 2];\r\n            let t1 = (u >>> 17 | u << (32 - 17)) ^ (u >>> 19 | u << (32 - 19)) ^ (u >>> 10);\r\n\r\n            u = w[i - 15];\r\n            let t2 = (u >>> 7 | u << (32 - 7)) ^ (u >>> 18 | u << (32 - 18)) ^ (u >>> 3);\r\n\r\n            w[i] = (t1 + w[i - 7] | 0) + (t2 + w[i - 16] | 0);\r\n        }\r\n\r\n        for (let i = 0; i < 64; i++) {\r\n            let t1 = (((((e >>> 6 | e << (32 - 6)) ^ (e >>> 11 | e << (32 - 11)) ^\r\n                (e >>> 25 | e << (32 - 25))) + ((e & f) ^ (~e & g))) | 0) +\r\n                ((h + ((K[i] + w[i]) | 0)) | 0)) | 0;\r\n\r\n            let t2 = (((a >>> 2 | a << (32 - 2)) ^ (a >>> 13 | a << (32 - 13)) ^\r\n                (a >>> 22 | a << (32 - 22))) + ((a & b) ^ (a & c) ^ (b & c))) | 0;\r\n\r\n            h = g;\r\n            g = f;\r\n            f = e;\r\n            e = (d + t1) | 0;\r\n            d = c;\r\n            c = b;\r\n            b = a;\r\n            a = (t1 + t2) | 0;\r\n        }\r\n\r\n        v[0] += a;\r\n        v[1] += b;\r\n        v[2] += c;\r\n        v[3] += d;\r\n        v[4] += e;\r\n        v[5] += f;\r\n        v[6] += g;\r\n        v[7] += h;\r\n\r\n        pos += 64;\r\n        len -= 64;\r\n    }\r\n    return pos;\r\n}\r\n\r\nexport function hash(data: Uint8Array): Uint8Array {\r\n    const h = new SHA256();\r\n    h.update(data);\r\n    const digest = h.digest();\r\n    h.clean();\r\n    return digest;\r\n}\r\n", "// Copyright (C) 2016 Dmitry Chestnykh\r\n// MIT License. See LICENSE file for details.\r\n\r\n/**\r\n * Package x25519 implements X25519 key agreement.\r\n */\r\n\r\nimport { randomBytes, RandomSource } from \"@stablelib/random\";\r\nimport { wipe } from \"@stablelib/wipe\";\r\n\r\nexport const PUBLIC_KEY_LENGTH = 32;\r\nexport const SECRET_KEY_LENGTH = 32;\r\nexport const SHARED_KEY_LENGTH = 32;\r\n\r\n// TODO(dchest): some functions are copies of ../sign/ed25519.\r\n// Find a way to combine them without opening up to public.\r\n\r\n// Ported from TweetNaCl.js, which is ported from TweetNaCl\r\n// by Dmitry Chestnykh and Devi Mandiri.\r\n// Public domain.\r\n// https://tweetnacl.js.org\r\n\r\n// TweetNaCl contributors:\r\n// Daniel J. Bernstein, Bernard van Gastel, Wesley Janssen,\r\n// Tanja Lange, Peter Schwabe, Sjaak Smetsers.\r\n// Public domain.\r\n// https://tweetnacl.cr.yp.to/\r\n\r\ntype GF = Float64Array;\r\n\r\n// Returns new zero-filled 16-element GF (Float64Array).\r\n// If passed an array of numbers, prefills the returned\r\n// array with them.\r\n//\r\n// We use Float64Array, because we need 48-bit numbers\r\n// for this implementation.\r\nfunction gf(init?: number[]): GF {\r\n    const r = new Float64Array(16);\r\n    if (init) {\r\n        for (let i = 0; i < init.length; i++) {\r\n            r[i] = init[i];\r\n        }\r\n    }\r\n    return r;\r\n}\r\n\r\n// Base point.\r\nconst _9 = new Uint8Array(32); _9[0] = 9;\r\n\r\nconst _121665 = gf([0xdb41, 1]);\r\n\r\nfunction car25519(o: GF) {\r\n    let c = 1;\r\n    for (let i = 0; i < 16; i++) {\r\n        let v = o[i] + c + 65535;\r\n        c = Math.floor(v / 65536);\r\n        o[i] = v - c * 65536;\r\n    }\r\n    o[0] += c - 1 + 37 * (c - 1);\r\n}\r\n\r\nfunction sel25519(p: GF, q: GF, b: number) {\r\n    const c = ~(b - 1);\r\n    for (let i = 0; i < 16; i++) {\r\n        const t = c & (p[i] ^ q[i]);\r\n        p[i] ^= t;\r\n        q[i] ^= t;\r\n    }\r\n}\r\n\r\nfunction pack25519(o: Uint8Array, n: GF) {\r\n    const m = gf();\r\n    const t = gf();\r\n    for (let i = 0; i < 16; i++) {\r\n        t[i] = n[i];\r\n    }\r\n    car25519(t);\r\n    car25519(t);\r\n    car25519(t);\r\n    for (let j = 0; j < 2; j++) {\r\n        m[0] = t[0] - 0xffed;\r\n        for (let i = 1; i < 15; i++) {\r\n            m[i] = t[i] - 0xffff - ((m[i - 1] >> 16) & 1);\r\n            m[i - 1] &= 0xffff;\r\n        }\r\n        m[15] = t[15] - 0x7fff - ((m[14] >> 16) & 1);\r\n        const b = (m[15] >> 16) & 1;\r\n        m[14] &= 0xffff;\r\n        sel25519(t, m, 1 - b);\r\n    }\r\n    for (let i = 0; i < 16; i++) {\r\n        o[2 * i] = t[i] & 0xff;\r\n        o[2 * i + 1] = t[i] >> 8;\r\n    }\r\n}\r\n\r\nfunction unpack25519(o: GF, n: Uint8Array) {\r\n    for (let i = 0; i < 16; i++) {\r\n        o[i] = n[2 * i] + (n[2 * i + 1] << 8);\r\n    }\r\n    o[15] &= 0x7fff;\r\n}\r\n\r\nfunction add(o: GF, a: GF, b: GF) {\r\n    for (let i = 0; i < 16; i++) {\r\n        o[i] = a[i] + b[i];\r\n    }\r\n}\r\n\r\nfunction sub(o: GF, a: GF, b: GF) {\r\n    for (let i = 0; i < 16; i++) {\r\n        o[i] = a[i] - b[i];\r\n    }\r\n}\r\n\r\nfunction mul(o: GF, a: GF, b: GF) {\r\n    let v: number, c: number,\r\n        t0 = 0, t1 = 0, t2 = 0, t3 = 0, t4 = 0, t5 = 0, t6 = 0, t7 = 0,\r\n        t8 = 0, t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0,\r\n        t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0,\r\n        t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0,\r\n        b0 = b[0],\r\n        b1 = b[1],\r\n        b2 = b[2],\r\n        b3 = b[3],\r\n        b4 = b[4],\r\n        b5 = b[5],\r\n        b6 = b[6],\r\n        b7 = b[7],\r\n        b8 = b[8],\r\n        b9 = b[9],\r\n        b10 = b[10],\r\n        b11 = b[11],\r\n        b12 = b[12],\r\n        b13 = b[13],\r\n        b14 = b[14],\r\n        b15 = b[15];\r\n\r\n    v = a[0];\r\n    t0 += v * b0;\r\n    t1 += v * b1;\r\n    t2 += v * b2;\r\n    t3 += v * b3;\r\n    t4 += v * b4;\r\n    t5 += v * b5;\r\n    t6 += v * b6;\r\n    t7 += v * b7;\r\n    t8 += v * b8;\r\n    t9 += v * b9;\r\n    t10 += v * b10;\r\n    t11 += v * b11;\r\n    t12 += v * b12;\r\n    t13 += v * b13;\r\n    t14 += v * b14;\r\n    t15 += v * b15;\r\n    v = a[1];\r\n    t1 += v * b0;\r\n    t2 += v * b1;\r\n    t3 += v * b2;\r\n    t4 += v * b3;\r\n    t5 += v * b4;\r\n    t6 += v * b5;\r\n    t7 += v * b6;\r\n    t8 += v * b7;\r\n    t9 += v * b8;\r\n    t10 += v * b9;\r\n    t11 += v * b10;\r\n    t12 += v * b11;\r\n    t13 += v * b12;\r\n    t14 += v * b13;\r\n    t15 += v * b14;\r\n    t16 += v * b15;\r\n    v = a[2];\r\n    t2 += v * b0;\r\n    t3 += v * b1;\r\n    t4 += v * b2;\r\n    t5 += v * b3;\r\n    t6 += v * b4;\r\n    t7 += v * b5;\r\n    t8 += v * b6;\r\n    t9 += v * b7;\r\n    t10 += v * b8;\r\n    t11 += v * b9;\r\n    t12 += v * b10;\r\n    t13 += v * b11;\r\n    t14 += v * b12;\r\n    t15 += v * b13;\r\n    t16 += v * b14;\r\n    t17 += v * b15;\r\n    v = a[3];\r\n    t3 += v * b0;\r\n    t4 += v * b1;\r\n    t5 += v * b2;\r\n    t6 += v * b3;\r\n    t7 += v * b4;\r\n    t8 += v * b5;\r\n    t9 += v * b6;\r\n    t10 += v * b7;\r\n    t11 += v * b8;\r\n    t12 += v * b9;\r\n    t13 += v * b10;\r\n    t14 += v * b11;\r\n    t15 += v * b12;\r\n    t16 += v * b13;\r\n    t17 += v * b14;\r\n    t18 += v * b15;\r\n    v = a[4];\r\n    t4 += v * b0;\r\n    t5 += v * b1;\r\n    t6 += v * b2;\r\n    t7 += v * b3;\r\n    t8 += v * b4;\r\n    t9 += v * b5;\r\n    t10 += v * b6;\r\n    t11 += v * b7;\r\n    t12 += v * b8;\r\n    t13 += v * b9;\r\n    t14 += v * b10;\r\n    t15 += v * b11;\r\n    t16 += v * b12;\r\n    t17 += v * b13;\r\n    t18 += v * b14;\r\n    t19 += v * b15;\r\n    v = a[5];\r\n    t5 += v * b0;\r\n    t6 += v * b1;\r\n    t7 += v * b2;\r\n    t8 += v * b3;\r\n    t9 += v * b4;\r\n    t10 += v * b5;\r\n    t11 += v * b6;\r\n    t12 += v * b7;\r\n    t13 += v * b8;\r\n    t14 += v * b9;\r\n    t15 += v * b10;\r\n    t16 += v * b11;\r\n    t17 += v * b12;\r\n    t18 += v * b13;\r\n    t19 += v * b14;\r\n    t20 += v * b15;\r\n    v = a[6];\r\n    t6 += v * b0;\r\n    t7 += v * b1;\r\n    t8 += v * b2;\r\n    t9 += v * b3;\r\n    t10 += v * b4;\r\n    t11 += v * b5;\r\n    t12 += v * b6;\r\n    t13 += v * b7;\r\n    t14 += v * b8;\r\n    t15 += v * b9;\r\n    t16 += v * b10;\r\n    t17 += v * b11;\r\n    t18 += v * b12;\r\n    t19 += v * b13;\r\n    t20 += v * b14;\r\n    t21 += v * b15;\r\n    v = a[7];\r\n    t7 += v * b0;\r\n    t8 += v * b1;\r\n    t9 += v * b2;\r\n    t10 += v * b3;\r\n    t11 += v * b4;\r\n    t12 += v * b5;\r\n    t13 += v * b6;\r\n    t14 += v * b7;\r\n    t15 += v * b8;\r\n    t16 += v * b9;\r\n    t17 += v * b10;\r\n    t18 += v * b11;\r\n    t19 += v * b12;\r\n    t20 += v * b13;\r\n    t21 += v * b14;\r\n    t22 += v * b15;\r\n    v = a[8];\r\n    t8 += v * b0;\r\n    t9 += v * b1;\r\n    t10 += v * b2;\r\n    t11 += v * b3;\r\n    t12 += v * b4;\r\n    t13 += v * b5;\r\n    t14 += v * b6;\r\n    t15 += v * b7;\r\n    t16 += v * b8;\r\n    t17 += v * b9;\r\n    t18 += v * b10;\r\n    t19 += v * b11;\r\n    t20 += v * b12;\r\n    t21 += v * b13;\r\n    t22 += v * b14;\r\n    t23 += v * b15;\r\n    v = a[9];\r\n    t9 += v * b0;\r\n    t10 += v * b1;\r\n    t11 += v * b2;\r\n    t12 += v * b3;\r\n    t13 += v * b4;\r\n    t14 += v * b5;\r\n    t15 += v * b6;\r\n    t16 += v * b7;\r\n    t17 += v * b8;\r\n    t18 += v * b9;\r\n    t19 += v * b10;\r\n    t20 += v * b11;\r\n    t21 += v * b12;\r\n    t22 += v * b13;\r\n    t23 += v * b14;\r\n    t24 += v * b15;\r\n    v = a[10];\r\n    t10 += v * b0;\r\n    t11 += v * b1;\r\n    t12 += v * b2;\r\n    t13 += v * b3;\r\n    t14 += v * b4;\r\n    t15 += v * b5;\r\n    t16 += v * b6;\r\n    t17 += v * b7;\r\n    t18 += v * b8;\r\n    t19 += v * b9;\r\n    t20 += v * b10;\r\n    t21 += v * b11;\r\n    t22 += v * b12;\r\n    t23 += v * b13;\r\n    t24 += v * b14;\r\n    t25 += v * b15;\r\n    v = a[11];\r\n    t11 += v * b0;\r\n    t12 += v * b1;\r\n    t13 += v * b2;\r\n    t14 += v * b3;\r\n    t15 += v * b4;\r\n    t16 += v * b5;\r\n    t17 += v * b6;\r\n    t18 += v * b7;\r\n    t19 += v * b8;\r\n    t20 += v * b9;\r\n    t21 += v * b10;\r\n    t22 += v * b11;\r\n    t23 += v * b12;\r\n    t24 += v * b13;\r\n    t25 += v * b14;\r\n    t26 += v * b15;\r\n    v = a[12];\r\n    t12 += v * b0;\r\n    t13 += v * b1;\r\n    t14 += v * b2;\r\n    t15 += v * b3;\r\n    t16 += v * b4;\r\n    t17 += v * b5;\r\n    t18 += v * b6;\r\n    t19 += v * b7;\r\n    t20 += v * b8;\r\n    t21 += v * b9;\r\n    t22 += v * b10;\r\n    t23 += v * b11;\r\n    t24 += v * b12;\r\n    t25 += v * b13;\r\n    t26 += v * b14;\r\n    t27 += v * b15;\r\n    v = a[13];\r\n    t13 += v * b0;\r\n    t14 += v * b1;\r\n    t15 += v * b2;\r\n    t16 += v * b3;\r\n    t17 += v * b4;\r\n    t18 += v * b5;\r\n    t19 += v * b6;\r\n    t20 += v * b7;\r\n    t21 += v * b8;\r\n    t22 += v * b9;\r\n    t23 += v * b10;\r\n    t24 += v * b11;\r\n    t25 += v * b12;\r\n    t26 += v * b13;\r\n    t27 += v * b14;\r\n    t28 += v * b15;\r\n    v = a[14];\r\n    t14 += v * b0;\r\n    t15 += v * b1;\r\n    t16 += v * b2;\r\n    t17 += v * b3;\r\n    t18 += v * b4;\r\n    t19 += v * b5;\r\n    t20 += v * b6;\r\n    t21 += v * b7;\r\n    t22 += v * b8;\r\n    t23 += v * b9;\r\n    t24 += v * b10;\r\n    t25 += v * b11;\r\n    t26 += v * b12;\r\n    t27 += v * b13;\r\n    t28 += v * b14;\r\n    t29 += v * b15;\r\n    v = a[15];\r\n    t15 += v * b0;\r\n    t16 += v * b1;\r\n    t17 += v * b2;\r\n    t18 += v * b3;\r\n    t19 += v * b4;\r\n    t20 += v * b5;\r\n    t21 += v * b6;\r\n    t22 += v * b7;\r\n    t23 += v * b8;\r\n    t24 += v * b9;\r\n    t25 += v * b10;\r\n    t26 += v * b11;\r\n    t27 += v * b12;\r\n    t28 += v * b13;\r\n    t29 += v * b14;\r\n    t30 += v * b15;\r\n\r\n    t0 += 38 * t16;\r\n    t1 += 38 * t17;\r\n    t2 += 38 * t18;\r\n    t3 += 38 * t19;\r\n    t4 += 38 * t20;\r\n    t5 += 38 * t21;\r\n    t6 += 38 * t22;\r\n    t7 += 38 * t23;\r\n    t8 += 38 * t24;\r\n    t9 += 38 * t25;\r\n    t10 += 38 * t26;\r\n    t11 += 38 * t27;\r\n    t12 += 38 * t28;\r\n    t13 += 38 * t29;\r\n    t14 += 38 * t30;\r\n    // t15 left as is\r\n\r\n    // first car\r\n    c = 1;\r\n    v = t0 + c + 65535; c = Math.floor(v / 65536); t0 = v - c * 65536;\r\n    v = t1 + c + 65535; c = Math.floor(v / 65536); t1 = v - c * 65536;\r\n    v = t2 + c + 65535; c = Math.floor(v / 65536); t2 = v - c * 65536;\r\n    v = t3 + c + 65535; c = Math.floor(v / 65536); t3 = v - c * 65536;\r\n    v = t4 + c + 65535; c = Math.floor(v / 65536); t4 = v - c * 65536;\r\n    v = t5 + c + 65535; c = Math.floor(v / 65536); t5 = v - c * 65536;\r\n    v = t6 + c + 65535; c = Math.floor(v / 65536); t6 = v - c * 65536;\r\n    v = t7 + c + 65535; c = Math.floor(v / 65536); t7 = v - c * 65536;\r\n    v = t8 + c + 65535; c = Math.floor(v / 65536); t8 = v - c * 65536;\r\n    v = t9 + c + 65535; c = Math.floor(v / 65536); t9 = v - c * 65536;\r\n    v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\r\n    v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\r\n    v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\r\n    v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\r\n    v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\r\n    v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\r\n    t0 += c - 1 + 37 * (c - 1);\r\n\r\n    // second car\r\n    c = 1;\r\n    v = t0 + c + 65535; c = Math.floor(v / 65536); t0 = v - c * 65536;\r\n    v = t1 + c + 65535; c = Math.floor(v / 65536); t1 = v - c * 65536;\r\n    v = t2 + c + 65535; c = Math.floor(v / 65536); t2 = v - c * 65536;\r\n    v = t3 + c + 65535; c = Math.floor(v / 65536); t3 = v - c * 65536;\r\n    v = t4 + c + 65535; c = Math.floor(v / 65536); t4 = v - c * 65536;\r\n    v = t5 + c + 65535; c = Math.floor(v / 65536); t5 = v - c * 65536;\r\n    v = t6 + c + 65535; c = Math.floor(v / 65536); t6 = v - c * 65536;\r\n    v = t7 + c + 65535; c = Math.floor(v / 65536); t7 = v - c * 65536;\r\n    v = t8 + c + 65535; c = Math.floor(v / 65536); t8 = v - c * 65536;\r\n    v = t9 + c + 65535; c = Math.floor(v / 65536); t9 = v - c * 65536;\r\n    v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\r\n    v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\r\n    v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\r\n    v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\r\n    v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\r\n    v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\r\n    t0 += c - 1 + 37 * (c - 1);\r\n\r\n    o[0] = t0;\r\n    o[1] = t1;\r\n    o[2] = t2;\r\n    o[3] = t3;\r\n    o[4] = t4;\r\n    o[5] = t5;\r\n    o[6] = t6;\r\n    o[7] = t7;\r\n    o[8] = t8;\r\n    o[9] = t9;\r\n    o[10] = t10;\r\n    o[11] = t11;\r\n    o[12] = t12;\r\n    o[13] = t13;\r\n    o[14] = t14;\r\n    o[15] = t15;\r\n}\r\n\r\nfunction square(o: GF, a: GF) {\r\n    mul(o, a, a);\r\n}\r\n\r\nfunction inv25519(o: GF, inp: GF) {\r\n    const c = gf();\r\n    for (let i = 0; i < 16; i++) {\r\n        c[i] = inp[i];\r\n    }\r\n    for (let i = 253; i >= 0; i--) {\r\n        square(c, c);\r\n        if (i !== 2 && i !== 4) {\r\n            mul(c, c, inp);\r\n        }\r\n    }\r\n    for (let i = 0; i < 16; i++) {\r\n        o[i] = c[i];\r\n    }\r\n}\r\n\r\nexport function scalarMult(n: Uint8Array, p: Uint8Array): Uint8Array {\r\n    const z = new Uint8Array(32);\r\n    const x = new Float64Array(80);\r\n    const a = gf(), b = gf(), c = gf(),\r\n        d = gf(), e = gf(), f = gf();\r\n\r\n    for (let i = 0; i < 31; i++) {\r\n        z[i] = n[i];\r\n    }\r\n    z[31] = (n[31] & 127) | 64;\r\n    z[0] &= 248;\r\n\r\n    unpack25519(x, p);\r\n\r\n    for (let i = 0; i < 16; i++) {\r\n        b[i] = x[i];\r\n    }\r\n\r\n    a[0] = d[0] = 1;\r\n\r\n    for (let i = 254; i >= 0; --i) {\r\n        const r = (z[i >>> 3] >>> (i & 7)) & 1;\r\n        sel25519(a, b, r);\r\n        sel25519(c, d, r);\r\n        add(e, a, c);\r\n        sub(a, a, c);\r\n        add(c, b, d);\r\n        sub(b, b, d);\r\n        square(d, e);\r\n        square(f, a);\r\n        mul(a, c, a);\r\n        mul(c, b, e);\r\n        add(e, a, c);\r\n        sub(a, a, c);\r\n        square(b, a);\r\n        sub(c, d, f);\r\n        mul(a, c, _121665);\r\n        add(a, a, d);\r\n        mul(c, c, a);\r\n        mul(a, d, f);\r\n        mul(d, b, x);\r\n        square(b, e);\r\n        sel25519(a, b, r);\r\n        sel25519(c, d, r);\r\n    }\r\n    for (let i = 0; i < 16; i++) {\r\n        x[i + 16] = a[i];\r\n        x[i + 32] = c[i];\r\n        x[i + 48] = b[i];\r\n        x[i + 64] = d[i];\r\n    }\r\n    const x32 = x.subarray(32);\r\n    const x16 = x.subarray(16);\r\n    inv25519(x32, x32);\r\n    mul(x16, x16, x32);\r\n    const q = new Uint8Array(32);\r\n    pack25519(q, x16);\r\n    return q;\r\n}\r\n\r\nexport function scalarMultBase(n: Uint8Array): Uint8Array {\r\n    return scalarMult(n, _9);\r\n}\r\n\r\nexport interface KeyPair {\r\n    publicKey: Uint8Array;\r\n    secretKey: Uint8Array;\r\n}\r\n\r\nexport function generateKeyPairFromSeed(seed: Uint8Array): KeyPair {\r\n    if (seed.length !== SECRET_KEY_LENGTH) {\r\n        throw new Error(`x25519: seed must be ${SECRET_KEY_LENGTH} bytes`);\r\n    }\r\n    const secretKey = new Uint8Array(seed);\r\n    const publicKey = scalarMultBase(secretKey);\r\n    return {\r\n        publicKey,\r\n        secretKey\r\n    };\r\n}\r\n\r\nexport function generateKeyPair(prng?: RandomSource): KeyPair {\r\n    const seed = randomBytes(32, prng);\r\n    const result = generateKeyPairFromSeed(seed);\r\n    wipe(seed);\r\n    return result;\r\n}\r\n\r\n/**\r\n * Returns a shared key between our secret key and a peer's public key.\r\n *\r\n * Throws an error if the given keys are of wrong length.\r\n *\r\n * If rejectZero is true throws if the calculated shared key is all-zero.\r\n * From RFC 7748:\r\n *\r\n * > Protocol designers using Diffie-Hellman over the curves defined in\r\n * > this document must not assume \"contributory behavior\".  Specially,\r\n * > contributory behavior means that both parties' private keys\r\n * > contribute to the resulting shared key.  Since curve25519 and\r\n * > curve448 have cofactors of 8 and 4 (respectively), an input point of\r\n * > small order will eliminate any contribution from the other party's\r\n * > private key.  This situation can be detected by checking for the all-\r\n * > zero output, which implementations MAY do, as specified in Section 6.\r\n * > However, a large number of existing implementations do not do this.\r\n *\r\n * IMPORTANT: the returned key is a raw result of scalar multiplication.\r\n * To use it as a key material, hash it with a cryptographic hash function.\r\n */\r\nexport function sharedKey(mySecretKey: Uint8Array, theirPublicKey: Uint8Array, rejectZero = false): Uint8Array {\r\n    if (mySecretKey.length !== PUBLIC_KEY_LENGTH) {\r\n        throw new Error(\"X25519: incorrect secret key length\");\r\n    }\r\n    if (theirPublicKey.length !== PUBLIC_KEY_LENGTH) {\r\n        throw new Error(\"X25519: incorrect public key length\");\r\n    }\r\n\r\n    const result = scalarMult(mySecretKey, theirPublicKey);\r\n\r\n    if (rejectZero) {\r\n        let zeros = 0;\r\n        for (let i = 0; i < result.length; i++) {\r\n            zeros |= result[i];\r\n        }\r\n        if (zeros === 0) {\r\n            throw new Error(\"X25519: invalid shared key\");\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n", "export function compare(a, b) {\r\n  for (let i = 0; i < a.byteLength; i++) {\r\n    if (a[i] < b[i]) {\r\n      return -1;\r\n    }\r\n    if (a[i] > b[i]) {\r\n      return 1;\r\n    }\r\n  }\r\n  if (a.byteLength > b.byteLength) {\r\n    return 1;\r\n  }\r\n  if (a.byteLength < b.byteLength) {\r\n    return -1;\r\n  }\r\n  return 0;\r\n}", "import { allocUnsafe } from './alloc.js';\r\nimport { asUint8Array } from './util/as-uint8array.js';\r\nexport function xor(a, b) {\r\n  if (a.length !== b.length) {\r\n    throw new Error('Inputs should have the same length');\r\n  }\r\n  const result = allocUnsafe(a.length);\r\n  for (let i = 0; i < a.length; i++) {\r\n    result[i] = a[i] ^ b[i];\r\n  }\r\n  return asUint8Array(result);\r\n}", "import { compare } from './compare.js';\r\nimport { concat } from './concat.js';\r\nimport { equals } from './equals.js';\r\nimport { fromString } from './from-string.js';\r\nimport { toString } from './to-string.js';\r\nimport { xor } from './xor.js';\r\nexport {\r\n  compare,\r\n  concat,\r\n  equals,\r\n  fromString,\r\n  toString,\r\n  xor\r\n};", null, null, null, null, null, null, null, null, null, null, null, null, "'use strict';\r\nmodule.exports = function (obj, predicate) {\r\n\tvar ret = {};\r\n\tvar keys = Object.keys(obj);\r\n\tvar isArr = Array.isArray(predicate);\r\n\r\n\tfor (var i = 0; i < keys.length; i++) {\r\n\t\tvar key = keys[i];\r\n\t\tvar val = obj[key];\r\n\r\n\t\tif (isArr ? predicate.indexOf(key) !== -1 : predicate(key, val, obj)) {\r\n\t\t\tret[key] = val;\r\n\t\t}\r\n\t}\r\n\r\n\treturn ret;\r\n};\r\n", "'use strict';\r\nconst strictUriEncode = require('strict-uri-encode');\r\nconst decodeComponent = require('decode-uri-component');\r\nconst splitOnFirst = require('split-on-first');\r\nconst filterObject = require('filter-obj');\r\n\r\nconst isNullOrUndefined = value => value === null || value === undefined;\r\n\r\nconst encodeFragmentIdentifier = Symbol('encodeFragmentIdentifier');\r\n\r\nfunction encoderForArrayFormat(options) {\r\n\tswitch (options.arrayFormat) {\r\n\t\tcase 'index':\r\n\t\t\treturn key => (result, value) => {\r\n\t\t\t\tconst index = result.length;\r\n\r\n\t\t\t\tif (\r\n\t\t\t\t\tvalue === undefined ||\r\n\t\t\t\t\t(options.skipNull && value === null) ||\r\n\t\t\t\t\t(options.skipEmptyString && value === '')\r\n\t\t\t\t) {\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (value === null) {\r\n\t\t\t\t\treturn [...result, [encode(key, options), '[', index, ']'].join('')];\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn [\r\n\t\t\t\t\t...result,\r\n\t\t\t\t\t[encode(key, options), '[', encode(index, options), ']=', encode(value, options)].join('')\r\n\t\t\t\t];\r\n\t\t\t};\r\n\r\n\t\tcase 'bracket':\r\n\t\t\treturn key => (result, value) => {\r\n\t\t\t\tif (\r\n\t\t\t\t\tvalue === undefined ||\r\n\t\t\t\t\t(options.skipNull && value === null) ||\r\n\t\t\t\t\t(options.skipEmptyString && value === '')\r\n\t\t\t\t) {\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (value === null) {\r\n\t\t\t\t\treturn [...result, [encode(key, options), '[]'].join('')];\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn [...result, [encode(key, options), '[]=', encode(value, options)].join('')];\r\n\t\t\t};\r\n\r\n\t\tcase 'colon-list-separator':\r\n\t\t\treturn key => (result, value) => {\r\n\t\t\t\tif (\r\n\t\t\t\t\tvalue === undefined ||\r\n\t\t\t\t\t(options.skipNull && value === null) ||\r\n\t\t\t\t\t(options.skipEmptyString && value === '')\r\n\t\t\t\t) {\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (value === null) {\r\n\t\t\t\t\treturn [...result, [encode(key, options), ':list='].join('')];\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn [...result, [encode(key, options), ':list=', encode(value, options)].join('')];\r\n\t\t\t};\r\n\r\n\t\tcase 'comma':\r\n\t\tcase 'separator':\r\n\t\tcase 'bracket-separator': {\r\n\t\t\tconst keyValueSep = options.arrayFormat === 'bracket-separator' ?\r\n\t\t\t\t'[]=' :\r\n\t\t\t\t'=';\r\n\r\n\t\t\treturn key => (result, value) => {\r\n\t\t\t\tif (\r\n\t\t\t\t\tvalue === undefined ||\r\n\t\t\t\t\t(options.skipNull && value === null) ||\r\n\t\t\t\t\t(options.skipEmptyString && value === '')\r\n\t\t\t\t) {\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Translate null to an empty string so that it doesn't serialize as 'null'\r\n\t\t\t\tvalue = value === null ? '' : value;\r\n\r\n\t\t\t\tif (result.length === 0) {\r\n\t\t\t\t\treturn [[encode(key, options), keyValueSep, encode(value, options)].join('')];\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn [[result, encode(value, options)].join(options.arrayFormatSeparator)];\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tdefault:\r\n\t\t\treturn key => (result, value) => {\r\n\t\t\t\tif (\r\n\t\t\t\t\tvalue === undefined ||\r\n\t\t\t\t\t(options.skipNull && value === null) ||\r\n\t\t\t\t\t(options.skipEmptyString && value === '')\r\n\t\t\t\t) {\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (value === null) {\r\n\t\t\t\t\treturn [...result, encode(key, options)];\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn [...result, [encode(key, options), '=', encode(value, options)].join('')];\r\n\t\t\t};\r\n\t}\r\n}\r\n\r\nfunction parserForArrayFormat(options) {\r\n\tlet result;\r\n\r\n\tswitch (options.arrayFormat) {\r\n\t\tcase 'index':\r\n\t\t\treturn (key, value, accumulator) => {\r\n\t\t\t\tresult = /\\[(\\d*)\\]$/.exec(key);\r\n\r\n\t\t\t\tkey = key.replace(/\\[\\d*\\]$/, '');\r\n\r\n\t\t\t\tif (!result) {\r\n\t\t\t\t\taccumulator[key] = value;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (accumulator[key] === undefined) {\r\n\t\t\t\t\taccumulator[key] = {};\r\n\t\t\t\t}\r\n\r\n\t\t\t\taccumulator[key][result[1]] = value;\r\n\t\t\t};\r\n\r\n\t\tcase 'bracket':\r\n\t\t\treturn (key, value, accumulator) => {\r\n\t\t\t\tresult = /(\\[\\])$/.exec(key);\r\n\t\t\t\tkey = key.replace(/\\[\\]$/, '');\r\n\r\n\t\t\t\tif (!result) {\r\n\t\t\t\t\taccumulator[key] = value;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (accumulator[key] === undefined) {\r\n\t\t\t\t\taccumulator[key] = [value];\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\r\n\t\t\t};\r\n\r\n\t\tcase 'colon-list-separator':\r\n\t\t\treturn (key, value, accumulator) => {\r\n\t\t\t\tresult = /(:list)$/.exec(key);\r\n\t\t\t\tkey = key.replace(/:list$/, '');\r\n\r\n\t\t\t\tif (!result) {\r\n\t\t\t\t\taccumulator[key] = value;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (accumulator[key] === undefined) {\r\n\t\t\t\t\taccumulator[key] = [value];\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\r\n\t\t\t};\r\n\r\n\t\tcase 'comma':\r\n\t\tcase 'separator':\r\n\t\t\treturn (key, value, accumulator) => {\r\n\t\t\t\tconst isArray = typeof value === 'string' && value.includes(options.arrayFormatSeparator);\r\n\t\t\t\tconst isEncodedArray = (typeof value === 'string' && !isArray && decode(value, options).includes(options.arrayFormatSeparator));\r\n\t\t\t\tvalue = isEncodedArray ? decode(value, options) : value;\r\n\t\t\t\tconst newValue = isArray || isEncodedArray ? value.split(options.arrayFormatSeparator).map(item => decode(item, options)) : value === null ? value : decode(value, options);\r\n\t\t\t\taccumulator[key] = newValue;\r\n\t\t\t};\r\n\r\n\t\tcase 'bracket-separator':\r\n\t\t\treturn (key, value, accumulator) => {\r\n\t\t\t\tconst isArray = /(\\[\\])$/.test(key);\r\n\t\t\t\tkey = key.replace(/\\[\\]$/, '');\r\n\r\n\t\t\t\tif (!isArray) {\r\n\t\t\t\t\taccumulator[key] = value ? decode(value, options) : value;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst arrayValue = value === null ?\r\n\t\t\t\t\t[] :\r\n\t\t\t\t\tvalue.split(options.arrayFormatSeparator).map(item => decode(item, options));\r\n\r\n\t\t\t\tif (accumulator[key] === undefined) {\r\n\t\t\t\t\taccumulator[key] = arrayValue;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], arrayValue);\r\n\t\t\t};\r\n\r\n\t\tdefault:\r\n\t\t\treturn (key, value, accumulator) => {\r\n\t\t\t\tif (accumulator[key] === undefined) {\r\n\t\t\t\t\taccumulator[key] = value;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\r\n\t\t\t};\r\n\t}\r\n}\r\n\r\nfunction validateArrayFormatSeparator(value) {\r\n\tif (typeof value !== 'string' || value.length !== 1) {\r\n\t\tthrow new TypeError('arrayFormatSeparator must be single character string');\r\n\t}\r\n}\r\n\r\nfunction encode(value, options) {\r\n\tif (options.encode) {\r\n\t\treturn options.strict ? strictUriEncode(value) : encodeURIComponent(value);\r\n\t}\r\n\r\n\treturn value;\r\n}\r\n\r\nfunction decode(value, options) {\r\n\tif (options.decode) {\r\n\t\treturn decodeComponent(value);\r\n\t}\r\n\r\n\treturn value;\r\n}\r\n\r\nfunction keysSorter(input) {\r\n\tif (Array.isArray(input)) {\r\n\t\treturn input.sort();\r\n\t}\r\n\r\n\tif (typeof input === 'object') {\r\n\t\treturn keysSorter(Object.keys(input))\r\n\t\t\t.sort((a, b) => Number(a) - Number(b))\r\n\t\t\t.map(key => input[key]);\r\n\t}\r\n\r\n\treturn input;\r\n}\r\n\r\nfunction removeHash(input) {\r\n\tconst hashStart = input.indexOf('#');\r\n\tif (hashStart !== -1) {\r\n\t\tinput = input.slice(0, hashStart);\r\n\t}\r\n\r\n\treturn input;\r\n}\r\n\r\nfunction getHash(url) {\r\n\tlet hash = '';\r\n\tconst hashStart = url.indexOf('#');\r\n\tif (hashStart !== -1) {\r\n\t\thash = url.slice(hashStart);\r\n\t}\r\n\r\n\treturn hash;\r\n}\r\n\r\nfunction extract(input) {\r\n\tinput = removeHash(input);\r\n\tconst queryStart = input.indexOf('?');\r\n\tif (queryStart === -1) {\r\n\t\treturn '';\r\n\t}\r\n\r\n\treturn input.slice(queryStart + 1);\r\n}\r\n\r\nfunction parseValue(value, options) {\r\n\tif (options.parseNumbers && !Number.isNaN(Number(value)) && (typeof value === 'string' && value.trim() !== '')) {\r\n\t\tvalue = Number(value);\r\n\t} else if (options.parseBooleans && value !== null && (value.toLowerCase() === 'true' || value.toLowerCase() === 'false')) {\r\n\t\tvalue = value.toLowerCase() === 'true';\r\n\t}\r\n\r\n\treturn value;\r\n}\r\n\r\nfunction parse(query, options) {\r\n\toptions = Object.assign({\r\n\t\tdecode: true,\r\n\t\tsort: true,\r\n\t\tarrayFormat: 'none',\r\n\t\tarrayFormatSeparator: ',',\r\n\t\tparseNumbers: false,\r\n\t\tparseBooleans: false\r\n\t}, options);\r\n\r\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\r\n\r\n\tconst formatter = parserForArrayFormat(options);\r\n\r\n\t// Create an object with no prototype\r\n\tconst ret = Object.create(null);\r\n\r\n\tif (typeof query !== 'string') {\r\n\t\treturn ret;\r\n\t}\r\n\r\n\tquery = query.trim().replace(/^[?#&]/, '');\r\n\r\n\tif (!query) {\r\n\t\treturn ret;\r\n\t}\r\n\r\n\tfor (const param of query.split('&')) {\r\n\t\tif (param === '') {\r\n\t\t\tcontinue;\r\n\t\t}\r\n\r\n\t\tlet [key, value] = splitOnFirst(options.decode ? param.replace(/\\+/g, ' ') : param, '=');\r\n\r\n\t\t// Missing `=` should be `null`:\r\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\r\n\t\tvalue = value === undefined ? null : ['comma', 'separator', 'bracket-separator'].includes(options.arrayFormat) ? value : decode(value, options);\r\n\t\tformatter(decode(key, options), value, ret);\r\n\t}\r\n\r\n\tfor (const key of Object.keys(ret)) {\r\n\t\tconst value = ret[key];\r\n\t\tif (typeof value === 'object' && value !== null) {\r\n\t\t\tfor (const k of Object.keys(value)) {\r\n\t\t\t\tvalue[k] = parseValue(value[k], options);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tret[key] = parseValue(value, options);\r\n\t\t}\r\n\t}\r\n\r\n\tif (options.sort === false) {\r\n\t\treturn ret;\r\n\t}\r\n\r\n\treturn (options.sort === true ? Object.keys(ret).sort() : Object.keys(ret).sort(options.sort)).reduce((result, key) => {\r\n\t\tconst value = ret[key];\r\n\t\tif (Boolean(value) && typeof value === 'object' && !Array.isArray(value)) {\r\n\t\t\t// Sort object keys, not values\r\n\t\t\tresult[key] = keysSorter(value);\r\n\t\t} else {\r\n\t\t\tresult[key] = value;\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}, Object.create(null));\r\n}\r\n\r\nexports.extract = extract;\r\nexports.parse = parse;\r\n\r\nexports.stringify = (object, options) => {\r\n\tif (!object) {\r\n\t\treturn '';\r\n\t}\r\n\r\n\toptions = Object.assign({\r\n\t\tencode: true,\r\n\t\tstrict: true,\r\n\t\tarrayFormat: 'none',\r\n\t\tarrayFormatSeparator: ','\r\n\t}, options);\r\n\r\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\r\n\r\n\tconst shouldFilter = key => (\r\n\t\t(options.skipNull && isNullOrUndefined(object[key])) ||\r\n\t\t(options.skipEmptyString && object[key] === '')\r\n\t);\r\n\r\n\tconst formatter = encoderForArrayFormat(options);\r\n\r\n\tconst objectCopy = {};\r\n\r\n\tfor (const key of Object.keys(object)) {\r\n\t\tif (!shouldFilter(key)) {\r\n\t\t\tobjectCopy[key] = object[key];\r\n\t\t}\r\n\t}\r\n\r\n\tconst keys = Object.keys(objectCopy);\r\n\r\n\tif (options.sort !== false) {\r\n\t\tkeys.sort(options.sort);\r\n\t}\r\n\r\n\treturn keys.map(key => {\r\n\t\tconst value = object[key];\r\n\r\n\t\tif (value === undefined) {\r\n\t\t\treturn '';\r\n\t\t}\r\n\r\n\t\tif (value === null) {\r\n\t\t\treturn encode(key, options);\r\n\t\t}\r\n\r\n\t\tif (Array.isArray(value)) {\r\n\t\t\tif (value.length === 0 && options.arrayFormat === 'bracket-separator') {\r\n\t\t\t\treturn encode(key, options) + '[]';\r\n\t\t\t}\r\n\r\n\t\t\treturn value\r\n\t\t\t\t.reduce(formatter(key), [])\r\n\t\t\t\t.join('&');\r\n\t\t}\r\n\r\n\t\treturn encode(key, options) + '=' + encode(value, options);\r\n\t}).filter(x => x.length > 0).join('&');\r\n};\r\n\r\nexports.parseUrl = (url, options) => {\r\n\toptions = Object.assign({\r\n\t\tdecode: true\r\n\t}, options);\r\n\r\n\tconst [url_, hash] = splitOnFirst(url, '#');\r\n\r\n\treturn Object.assign(\r\n\t\t{\r\n\t\t\turl: url_.split('?')[0] || '',\r\n\t\t\tquery: parse(extract(url), options)\r\n\t\t},\r\n\t\toptions && options.parseFragmentIdentifier && hash ? {fragmentIdentifier: decode(hash, options)} : {}\r\n\t);\r\n};\r\n\r\nexports.stringifyUrl = (object, options) => {\r\n\toptions = Object.assign({\r\n\t\tencode: true,\r\n\t\tstrict: true,\r\n\t\t[encodeFragmentIdentifier]: true\r\n\t}, options);\r\n\r\n\tconst url = removeHash(object.url).split('?')[0] || '';\r\n\tconst queryFromUrl = exports.extract(object.url);\r\n\tconst parsedQueryFromUrl = exports.parse(queryFromUrl, {sort: false});\r\n\r\n\tconst query = Object.assign(parsedQueryFromUrl, object.query);\r\n\tlet queryString = exports.stringify(query, options);\r\n\tif (queryString) {\r\n\t\tqueryString = `?${queryString}`;\r\n\t}\r\n\r\n\tlet hash = getHash(object.url);\r\n\tif (object.fragmentIdentifier) {\r\n\t\thash = `#${options[encodeFragmentIdentifier] ? encode(object.fragmentIdentifier, options) : object.fragmentIdentifier}`;\r\n\t}\r\n\r\n\treturn `${url}${queryString}${hash}`;\r\n};\r\n\r\nexports.pick = (input, filter, options) => {\r\n\toptions = Object.assign({\r\n\t\tparseFragmentIdentifier: true,\r\n\t\t[encodeFragmentIdentifier]: false\r\n\t}, options);\r\n\r\n\tconst {url, query, fragmentIdentifier} = exports.parseUrl(input, options);\r\n\treturn exports.stringifyUrl({\r\n\t\turl,\r\n\t\tquery: filterObject(query, filter),\r\n\t\tfragmentIdentifier\r\n\t}, options);\r\n};\r\n\r\nexports.exclude = (input, filter, options) => {\r\n\tconst exclusionFilter = Array.isArray(filter) ? key => !filter.includes(key) : (key, value) => !filter(key, value);\r\n\r\n\treturn exports.pick(input, exclusionFilter, options);\r\n};\r\n", "//# sourceMappingURL=types.js.map", null, null, null, null, null, "const suspectProtoRx = /\"(?:_|\\\\u0{2}5[Ff]){2}(?:p|\\\\u0{2}70)(?:r|\\\\u0{2}72)(?:o|\\\\u0{2}6[Ff])(?:t|\\\\u0{2}74)(?:o|\\\\u0{2}6[Ff])(?:_|\\\\u0{2}5[Ff]){2}\"\\s*:/;\r\nconst suspectConstructorRx = /\"(?:c|\\\\u0063)(?:o|\\\\u006[Ff])(?:n|\\\\u006[Ee])(?:s|\\\\u0073)(?:t|\\\\u0074)(?:r|\\\\u0072)(?:u|\\\\u0075)(?:c|\\\\u0063)(?:t|\\\\u0074)(?:o|\\\\u006[Ff])(?:r|\\\\u0072)\"\\s*:/;\r\nconst JsonSigRx = /^\\s*[\"[{]|^\\s*-?\\d{1,16}(\\.\\d{1,17})?([Ee][+-]?\\d+)?\\s*$/;\r\nfunction jsonParseTransform(key, value) {\r\n  if (key === \"__proto__\" || key === \"constructor\" && value && typeof value === \"object\" && \"prototype\" in value) {\r\n    warnKeyDropped(key);\r\n    return;\r\n  }\r\n  return value;\r\n}\r\nfunction warnKeyDropped(key) {\r\n  console.warn(`[destr] Dropping \"${key}\" key to prevent prototype pollution.`);\r\n}\r\nfunction destr(value, options = {}) {\r\n  if (typeof value !== \"string\") {\r\n    return value;\r\n  }\r\n  const _value = value.trim();\r\n  if (\r\n    // eslint-disable-next-line unicorn/prefer-at\r\n    value[0] === '\"' && value.endsWith('\"') && !value.includes(\"\\\\\")\r\n  ) {\r\n    return _value.slice(1, -1);\r\n  }\r\n  if (_value.length <= 9) {\r\n    const _lval = _value.toLowerCase();\r\n    if (_lval === \"true\") {\r\n      return true;\r\n    }\r\n    if (_lval === \"false\") {\r\n      return false;\r\n    }\r\n    if (_lval === \"undefined\") {\r\n      return void 0;\r\n    }\r\n    if (_lval === \"null\") {\r\n      return null;\r\n    }\r\n    if (_lval === \"nan\") {\r\n      return Number.NaN;\r\n    }\r\n    if (_lval === \"infinity\") {\r\n      return Number.POSITIVE_INFINITY;\r\n    }\r\n    if (_lval === \"-infinity\") {\r\n      return Number.NEGATIVE_INFINITY;\r\n    }\r\n  }\r\n  if (!JsonSigRx.test(value)) {\r\n    if (options.strict) {\r\n      throw new SyntaxError(\"[destr] Invalid JSON\");\r\n    }\r\n    return value;\r\n  }\r\n  try {\r\n    if (suspectProtoRx.test(value) || suspectConstructorRx.test(value)) {\r\n      if (options.strict) {\r\n        throw new Error(\"[destr] Possible prototype pollution\");\r\n      }\r\n      return JSON.parse(value, jsonParseTransform);\r\n    }\r\n    return JSON.parse(value);\r\n  } catch (error) {\r\n    if (options.strict) {\r\n      throw error;\r\n    }\r\n    return value;\r\n  }\r\n}\r\nfunction safeDestr(value, options = {}) {\r\n  return destr(value, { ...options, strict: true });\r\n}\r\n\r\nexport { destr as default, destr, safeDestr };\r\n", "function wrapToPromise(value) {\r\n  if (!value || typeof value.then !== \"function\") {\r\n    return Promise.resolve(value);\r\n  }\r\n  return value;\r\n}\r\nfunction asyncCall(function_, ...arguments_) {\r\n  try {\r\n    return wrapToPromise(function_(...arguments_));\r\n  } catch (error) {\r\n    return Promise.reject(error);\r\n  }\r\n}\r\nfunction isPrimitive(value) {\r\n  const type = typeof value;\r\n  return value === null || type !== \"object\" && type !== \"function\";\r\n}\r\nfunction isPureObject(value) {\r\n  const proto = Object.getPrototypeOf(value);\r\n  return !proto || proto.isPrototypeOf(Object);\r\n}\r\nfunction stringify(value) {\r\n  if (isPrimitive(value)) {\r\n    return String(value);\r\n  }\r\n  if (isPureObject(value) || Array.isArray(value)) {\r\n    return JSON.stringify(value);\r\n  }\r\n  if (typeof value.toJSON === \"function\") {\r\n    return stringify(value.toJSON());\r\n  }\r\n  throw new Error(\"[unstorage] Cannot stringify value!\");\r\n}\r\nfunction checkBufferSupport() {\r\n  if (typeof Buffer === void 0) {\r\n    throw new TypeError(\"[unstorage] Buffer is not supported!\");\r\n  }\r\n}\r\nconst BASE64_PREFIX = \"base64:\";\r\nfunction serializeRaw(value) {\r\n  if (typeof value === \"string\") {\r\n    return value;\r\n  }\r\n  checkBufferSupport();\r\n  const base64 = Buffer.from(value).toString(\"base64\");\r\n  return BASE64_PREFIX + base64;\r\n}\r\nfunction deserializeRaw(value) {\r\n  if (typeof value !== \"string\") {\r\n    return value;\r\n  }\r\n  if (!value.startsWith(BASE64_PREFIX)) {\r\n    return value;\r\n  }\r\n  checkBufferSupport();\r\n  return Buffer.from(value.slice(BASE64_PREFIX.length), \"base64\");\r\n}\r\n\r\nconst storageKeyProperties = [\r\n  \"hasItem\",\r\n  \"getItem\",\r\n  \"getItemRaw\",\r\n  \"setItem\",\r\n  \"setItemRaw\",\r\n  \"removeItem\",\r\n  \"getMeta\",\r\n  \"setMeta\",\r\n  \"removeMeta\",\r\n  \"getKeys\",\r\n  \"clear\",\r\n  \"mount\",\r\n  \"unmount\"\r\n];\r\nfunction prefixStorage(storage, base) {\r\n  base = normalizeBaseKey(base);\r\n  if (!base) {\r\n    return storage;\r\n  }\r\n  const nsStorage = { ...storage };\r\n  for (const property of storageKeyProperties) {\r\n    nsStorage[property] = (key = \"\", ...args) => (\r\n      // @ts-ignore\r\n      storage[property](base + key, ...args)\r\n    );\r\n  }\r\n  nsStorage.getKeys = (key = \"\", ...arguments_) => storage.getKeys(base + key, ...arguments_).then((keys) => keys.map((key2) => key2.slice(base.length)));\r\n  return nsStorage;\r\n}\r\nfunction normalizeKey(key) {\r\n  if (!key) {\r\n    return \"\";\r\n  }\r\n  return key.split(\"?\")[0].replace(/[/\\\\]/g, \":\").replace(/:+/g, \":\").replace(/^:|:$/g, \"\");\r\n}\r\nfunction joinKeys(...keys) {\r\n  return normalizeKey(keys.join(\":\"));\r\n}\r\nfunction normalizeBaseKey(base) {\r\n  base = normalizeKey(base);\r\n  return base ? base + \":\" : \"\";\r\n}\r\n\r\nexport { normalizeKey as a, asyncCall as b, serializeRaw as c, deserializeRaw as d, joinKeys as j, normalizeBaseKey as n, prefixStorage as p, stringify as s };\r\n", "import destr from 'destr';\r\nimport { n as normalizeBaseKey, a as normalizeKey, b as asyncCall, d as deserializeRaw, s as stringify, c as serializeRaw, j as joinKeys } from './shared/unstorage.8581f561.mjs';\r\nexport { p as prefixStorage } from './shared/unstorage.8581f561.mjs';\r\n\r\nfunction defineDriver(factory) {\r\n  return factory;\r\n}\r\n\r\nconst DRIVER_NAME = \"memory\";\r\nconst memory = defineDriver(() => {\r\n  const data = /* @__PURE__ */ new Map();\r\n  return {\r\n    name: DRIVER_NAME,\r\n    options: {},\r\n    hasItem(key) {\r\n      return data.has(key);\r\n    },\r\n    getItem(key) {\r\n      return data.get(key) ?? null;\r\n    },\r\n    getItemRaw(key) {\r\n      return data.get(key) ?? null;\r\n    },\r\n    setItem(key, value) {\r\n      data.set(key, value);\r\n    },\r\n    setItemRaw(key, value) {\r\n      data.set(key, value);\r\n    },\r\n    removeItem(key) {\r\n      data.delete(key);\r\n    },\r\n    getKeys() {\r\n      return Array.from(data.keys());\r\n    },\r\n    clear() {\r\n      data.clear();\r\n    },\r\n    dispose() {\r\n      data.clear();\r\n    }\r\n  };\r\n});\r\n\r\nfunction createStorage(options = {}) {\r\n  const context = {\r\n    mounts: { \"\": options.driver || memory() },\r\n    mountpoints: [\"\"],\r\n    watching: false,\r\n    watchListeners: [],\r\n    unwatch: {}\r\n  };\r\n  const getMount = (key) => {\r\n    for (const base of context.mountpoints) {\r\n      if (key.startsWith(base)) {\r\n        return {\r\n          base,\r\n          relativeKey: key.slice(base.length),\r\n          driver: context.mounts[base]\r\n        };\r\n      }\r\n    }\r\n    return {\r\n      base: \"\",\r\n      relativeKey: key,\r\n      driver: context.mounts[\"\"]\r\n    };\r\n  };\r\n  const getMounts = (base, includeParent) => {\r\n    return context.mountpoints.filter(\r\n      (mountpoint) => mountpoint.startsWith(base) || includeParent && base.startsWith(mountpoint)\r\n    ).map((mountpoint) => ({\r\n      relativeBase: base.length > mountpoint.length ? base.slice(mountpoint.length) : void 0,\r\n      mountpoint,\r\n      driver: context.mounts[mountpoint]\r\n    }));\r\n  };\r\n  const onChange = (event, key) => {\r\n    if (!context.watching) {\r\n      return;\r\n    }\r\n    key = normalizeKey(key);\r\n    for (const listener of context.watchListeners) {\r\n      listener(event, key);\r\n    }\r\n  };\r\n  const startWatch = async () => {\r\n    if (context.watching) {\r\n      return;\r\n    }\r\n    context.watching = true;\r\n    for (const mountpoint in context.mounts) {\r\n      context.unwatch[mountpoint] = await watch(\r\n        context.mounts[mountpoint],\r\n        onChange,\r\n        mountpoint\r\n      );\r\n    }\r\n  };\r\n  const stopWatch = async () => {\r\n    if (!context.watching) {\r\n      return;\r\n    }\r\n    for (const mountpoint in context.unwatch) {\r\n      await context.unwatch[mountpoint]();\r\n    }\r\n    context.unwatch = {};\r\n    context.watching = false;\r\n  };\r\n  const runBatch = (items, commonOptions, cb) => {\r\n    const batches = /* @__PURE__ */ new Map();\r\n    const getBatch = (mount) => {\r\n      let batch = batches.get(mount.base);\r\n      if (!batch) {\r\n        batch = {\r\n          driver: mount.driver,\r\n          base: mount.base,\r\n          items: []\r\n        };\r\n        batches.set(mount.base, batch);\r\n      }\r\n      return batch;\r\n    };\r\n    for (const item of items) {\r\n      const isStringItem = typeof item === \"string\";\r\n      const key = normalizeKey(isStringItem ? item : item.key);\r\n      const value = isStringItem ? void 0 : item.value;\r\n      const options2 = isStringItem || !item.options ? commonOptions : { ...commonOptions, ...item.options };\r\n      const mount = getMount(key);\r\n      getBatch(mount).items.push({\r\n        key,\r\n        value,\r\n        relativeKey: mount.relativeKey,\r\n        options: options2\r\n      });\r\n    }\r\n    return Promise.all([...batches.values()].map((batch) => cb(batch))).then(\r\n      (r) => r.flat()\r\n    );\r\n  };\r\n  const storage = {\r\n    // Item\r\n    hasItem(key, opts = {}) {\r\n      key = normalizeKey(key);\r\n      const { relativeKey, driver } = getMount(key);\r\n      return asyncCall(driver.hasItem, relativeKey, opts);\r\n    },\r\n    getItem(key, opts = {}) {\r\n      key = normalizeKey(key);\r\n      const { relativeKey, driver } = getMount(key);\r\n      return asyncCall(driver.getItem, relativeKey, opts).then(\r\n        (value) => destr(value)\r\n      );\r\n    },\r\n    getItems(items, commonOptions) {\r\n      return runBatch(items, commonOptions, (batch) => {\r\n        if (batch.driver.getItems) {\r\n          return asyncCall(\r\n            batch.driver.getItems,\r\n            batch.items.map((item) => ({\r\n              key: item.relativeKey,\r\n              options: item.options\r\n            })),\r\n            commonOptions\r\n          ).then(\r\n            (r) => r.map((item) => ({\r\n              key: joinKeys(batch.base, item.key),\r\n              value: destr(item.value)\r\n            }))\r\n          );\r\n        }\r\n        return Promise.all(\r\n          batch.items.map((item) => {\r\n            return asyncCall(\r\n              batch.driver.getItem,\r\n              item.relativeKey,\r\n              item.options\r\n            ).then((value) => ({\r\n              key: item.key,\r\n              value: destr(value)\r\n            }));\r\n          })\r\n        );\r\n      });\r\n    },\r\n    getItemRaw(key, opts = {}) {\r\n      key = normalizeKey(key);\r\n      const { relativeKey, driver } = getMount(key);\r\n      if (driver.getItemRaw) {\r\n        return asyncCall(driver.getItemRaw, relativeKey, opts);\r\n      }\r\n      return asyncCall(driver.getItem, relativeKey, opts).then(\r\n        (value) => deserializeRaw(value)\r\n      );\r\n    },\r\n    async setItem(key, value, opts = {}) {\r\n      if (value === void 0) {\r\n        return storage.removeItem(key);\r\n      }\r\n      key = normalizeKey(key);\r\n      const { relativeKey, driver } = getMount(key);\r\n      if (!driver.setItem) {\r\n        return;\r\n      }\r\n      await asyncCall(driver.setItem, relativeKey, stringify(value), opts);\r\n      if (!driver.watch) {\r\n        onChange(\"update\", key);\r\n      }\r\n    },\r\n    async setItems(items, commonOptions) {\r\n      await runBatch(items, commonOptions, async (batch) => {\r\n        if (batch.driver.setItems) {\r\n          await asyncCall(\r\n            batch.driver.setItems,\r\n            batch.items.map((item) => ({\r\n              key: item.relativeKey,\r\n              value: stringify(item.value),\r\n              options: item.options\r\n            })),\r\n            commonOptions\r\n          );\r\n        }\r\n        if (!batch.driver.setItem) {\r\n          return;\r\n        }\r\n        await Promise.all(\r\n          batch.items.map((item) => {\r\n            return asyncCall(\r\n              batch.driver.setItem,\r\n              item.relativeKey,\r\n              stringify(item.value),\r\n              item.options\r\n            );\r\n          })\r\n        );\r\n      });\r\n    },\r\n    async setItemRaw(key, value, opts = {}) {\r\n      if (value === void 0) {\r\n        return storage.removeItem(key, opts);\r\n      }\r\n      key = normalizeKey(key);\r\n      const { relativeKey, driver } = getMount(key);\r\n      if (driver.setItemRaw) {\r\n        await asyncCall(driver.setItemRaw, relativeKey, value, opts);\r\n      } else if (driver.setItem) {\r\n        await asyncCall(driver.setItem, relativeKey, serializeRaw(value), opts);\r\n      } else {\r\n        return;\r\n      }\r\n      if (!driver.watch) {\r\n        onChange(\"update\", key);\r\n      }\r\n    },\r\n    async removeItem(key, opts = {}) {\r\n      if (typeof opts === \"boolean\") {\r\n        opts = { removeMeta: opts };\r\n      }\r\n      key = normalizeKey(key);\r\n      const { relativeKey, driver } = getMount(key);\r\n      if (!driver.removeItem) {\r\n        return;\r\n      }\r\n      await asyncCall(driver.removeItem, relativeKey, opts);\r\n      if (opts.removeMeta || opts.removeMata) {\r\n        await asyncCall(driver.removeItem, relativeKey + \"$\", opts);\r\n      }\r\n      if (!driver.watch) {\r\n        onChange(\"remove\", key);\r\n      }\r\n    },\r\n    // Meta\r\n    async getMeta(key, opts = {}) {\r\n      if (typeof opts === \"boolean\") {\r\n        opts = { nativeOnly: opts };\r\n      }\r\n      key = normalizeKey(key);\r\n      const { relativeKey, driver } = getMount(key);\r\n      const meta = /* @__PURE__ */ Object.create(null);\r\n      if (driver.getMeta) {\r\n        Object.assign(meta, await asyncCall(driver.getMeta, relativeKey, opts));\r\n      }\r\n      if (!opts.nativeOnly) {\r\n        const value = await asyncCall(\r\n          driver.getItem,\r\n          relativeKey + \"$\",\r\n          opts\r\n        ).then((value_) => destr(value_));\r\n        if (value && typeof value === \"object\") {\r\n          if (typeof value.atime === \"string\") {\r\n            value.atime = new Date(value.atime);\r\n          }\r\n          if (typeof value.mtime === \"string\") {\r\n            value.mtime = new Date(value.mtime);\r\n          }\r\n          Object.assign(meta, value);\r\n        }\r\n      }\r\n      return meta;\r\n    },\r\n    setMeta(key, value, opts = {}) {\r\n      return this.setItem(key + \"$\", value, opts);\r\n    },\r\n    removeMeta(key, opts = {}) {\r\n      return this.removeItem(key + \"$\", opts);\r\n    },\r\n    // Keys\r\n    async getKeys(base, opts = {}) {\r\n      base = normalizeBaseKey(base);\r\n      const mounts = getMounts(base, true);\r\n      let maskedMounts = [];\r\n      const allKeys = [];\r\n      for (const mount of mounts) {\r\n        const rawKeys = await asyncCall(\r\n          mount.driver.getKeys,\r\n          mount.relativeBase,\r\n          opts\r\n        );\r\n        const keys = rawKeys.map((key) => mount.mountpoint + normalizeKey(key)).filter((key) => !maskedMounts.some((p) => key.startsWith(p)));\r\n        allKeys.push(...keys);\r\n        maskedMounts = [\r\n          mount.mountpoint,\r\n          ...maskedMounts.filter((p) => !p.startsWith(mount.mountpoint))\r\n        ];\r\n      }\r\n      return base ? allKeys.filter((key) => key.startsWith(base) && !key.endsWith(\"$\")) : allKeys.filter((key) => !key.endsWith(\"$\"));\r\n    },\r\n    // Utils\r\n    async clear(base, opts = {}) {\r\n      base = normalizeBaseKey(base);\r\n      await Promise.all(\r\n        getMounts(base, false).map(async (m) => {\r\n          if (m.driver.clear) {\r\n            return asyncCall(m.driver.clear, m.relativeBase, opts);\r\n          }\r\n          if (m.driver.removeItem) {\r\n            const keys = await m.driver.getKeys(m.relativeBase || \"\", opts);\r\n            return Promise.all(\r\n              keys.map((key) => m.driver.removeItem(key, opts))\r\n            );\r\n          }\r\n        })\r\n      );\r\n    },\r\n    async dispose() {\r\n      await Promise.all(\r\n        Object.values(context.mounts).map((driver) => dispose(driver))\r\n      );\r\n    },\r\n    async watch(callback) {\r\n      await startWatch();\r\n      context.watchListeners.push(callback);\r\n      return async () => {\r\n        context.watchListeners = context.watchListeners.filter(\r\n          (listener) => listener !== callback\r\n        );\r\n        if (context.watchListeners.length === 0) {\r\n          await stopWatch();\r\n        }\r\n      };\r\n    },\r\n    async unwatch() {\r\n      context.watchListeners = [];\r\n      await stopWatch();\r\n    },\r\n    // Mount\r\n    mount(base, driver) {\r\n      base = normalizeBaseKey(base);\r\n      if (base && context.mounts[base]) {\r\n        throw new Error(`already mounted at ${base}`);\r\n      }\r\n      if (base) {\r\n        context.mountpoints.push(base);\r\n        context.mountpoints.sort((a, b) => b.length - a.length);\r\n      }\r\n      context.mounts[base] = driver;\r\n      if (context.watching) {\r\n        Promise.resolve(watch(driver, onChange, base)).then((unwatcher) => {\r\n          context.unwatch[base] = unwatcher;\r\n        }).catch(console.error);\r\n      }\r\n      return storage;\r\n    },\r\n    async unmount(base, _dispose = true) {\r\n      base = normalizeBaseKey(base);\r\n      if (!base || !context.mounts[base]) {\r\n        return;\r\n      }\r\n      if (context.watching && base in context.unwatch) {\r\n        context.unwatch[base]();\r\n        delete context.unwatch[base];\r\n      }\r\n      if (_dispose) {\r\n        await dispose(context.mounts[base]);\r\n      }\r\n      context.mountpoints = context.mountpoints.filter((key) => key !== base);\r\n      delete context.mounts[base];\r\n    },\r\n    getMount(key = \"\") {\r\n      key = normalizeKey(key) + \":\";\r\n      const m = getMount(key);\r\n      return {\r\n        driver: m.driver,\r\n        base: m.base\r\n      };\r\n    },\r\n    getMounts(base = \"\", opts = {}) {\r\n      base = normalizeKey(base);\r\n      const mounts = getMounts(base, opts.parents);\r\n      return mounts.map((m) => ({\r\n        driver: m.driver,\r\n        base: m.mountpoint\r\n      }));\r\n    }\r\n  };\r\n  return storage;\r\n}\r\nasync function snapshot(storage, base) {\r\n  base = normalizeBaseKey(base);\r\n  const keys = await storage.getKeys(base);\r\n  const snapshot2 = {};\r\n  await Promise.all(\r\n    keys.map(async (key) => {\r\n      snapshot2[key.slice(base.length)] = await storage.getItem(key);\r\n    })\r\n  );\r\n  return snapshot2;\r\n}\r\nasync function restoreSnapshot(driver, snapshot2, base = \"\") {\r\n  base = normalizeBaseKey(base);\r\n  await Promise.all(\r\n    Object.entries(snapshot2).map((e) => driver.setItem(base + e[0], e[1]))\r\n  );\r\n}\r\nfunction watch(driver, onChange, base) {\r\n  return driver.watch ? driver.watch((event, key) => onChange(event, base + key)) : () => {\r\n  };\r\n}\r\nasync function dispose(driver) {\r\n  if (typeof driver.dispose === \"function\") {\r\n    await asyncCall(driver.dispose);\r\n  }\r\n}\r\n\r\nconst builtinDrivers = {\r\n  azureAppConfiguration: \"unstorage/drivers/azure-app-configuration\",\r\n  azureCosmos: \"unstorage/drivers/azure-cosmos\",\r\n  azureKeyVault: \"unstorage/drivers/azure-key-vault\",\r\n  azureStorageBlob: \"unstorage/drivers/azure-storage-blob\",\r\n  azureStorageTable: \"unstorage/drivers/azure-storage-table\",\r\n  cloudflareKVBinding: \"unstorage/drivers/cloudflare-kv-binding\",\r\n  cloudflareKVHTTP: \"unstorage/drivers/cloudflare-kv-http\",\r\n  cloudflareR2Binding: \"unstorage/drivers/cloudflare-r2-binding\",\r\n  fs: \"unstorage/drivers/fs\",\r\n  fsLite: \"unstorage/drivers/fs-lite\",\r\n  github: \"unstorage/drivers/github\",\r\n  http: \"unstorage/drivers/http\",\r\n  indexedb: \"unstorage/drivers/indexedb\",\r\n  localStorage: \"unstorage/drivers/localstorage\",\r\n  lruCache: \"unstorage/drivers/lru-cache\",\r\n  memory: \"unstorage/drivers/memory\",\r\n  mongodb: \"unstorage/drivers/mongodb\",\r\n  netlifyBlobs: \"unstorage/drivers/netlify-blobs\",\r\n  overlay: \"unstorage/drivers/overlay\",\r\n  planetscale: \"unstorage/drivers/planetscale\",\r\n  redis: \"unstorage/drivers/redis\",\r\n  sessionStorage: \"unstorage/drivers/session-storage\",\r\n  vercelKV: \"unstorage/drivers/vercel-kv\",\r\n  /** @deprecated */\r\n  \"cloudflare-kv-binding\": \"unstorage/drivers/cloudflare-kv-binding\",\r\n  /** @deprecated */\r\n  \"cloudflare-kv-http\": \"unstorage/drivers/cloudflare-kv-http\"\r\n};\r\n\r\nexport { builtinDrivers, createStorage, defineDriver, joinKeys, normalizeBaseKey, normalizeKey, restoreSnapshot, snapshot };\r\n", "function promisifyRequest(request) {\r\n    return new Promise((resolve, reject) => {\r\n        // @ts-ignore - file size hacks\r\n        request.oncomplete = request.onsuccess = () => resolve(request.result);\r\n        // @ts-ignore - file size hacks\r\n        request.onabort = request.onerror = () => reject(request.error);\r\n    });\r\n}\r\nfunction createStore(dbName, storeName) {\r\n    const request = indexedDB.open(dbName);\r\n    request.onupgradeneeded = () => request.result.createObjectStore(storeName);\r\n    const dbp = promisifyRequest(request);\r\n    return (txMode, callback) => dbp.then((db) => callback(db.transaction(storeName, txMode).objectStore(storeName)));\r\n}\r\nlet defaultGetStoreFunc;\r\nfunction defaultGetStore() {\r\n    if (!defaultGetStoreFunc) {\r\n        defaultGetStoreFunc = createStore('keyval-store', 'keyval');\r\n    }\r\n    return defaultGetStoreFunc;\r\n}\r\n/**\r\n * Get a value by its key.\r\n *\r\n * @param key\r\n * @param customStore Method to get a custom store. Use with caution (see the docs).\r\n */\r\nfunction get(key, customStore = defaultGetStore()) {\r\n    return customStore('readonly', (store) => promisifyRequest(store.get(key)));\r\n}\r\n/**\r\n * Set a value with a key.\r\n *\r\n * @param key\r\n * @param value\r\n * @param customStore Method to get a custom store. Use with caution (see the docs).\r\n */\r\nfunction set(key, value, customStore = defaultGetStore()) {\r\n    return customStore('readwrite', (store) => {\r\n        store.put(value, key);\r\n        return promisifyRequest(store.transaction);\r\n    });\r\n}\r\n/**\r\n * Set multiple values at once. This is faster than calling set() multiple times.\r\n * It's also atomic – if one of the pairs can't be added, none will be added.\r\n *\r\n * @param entries Array of entries, where each entry is an array of `[key, value]`.\r\n * @param customStore Method to get a custom store. Use with caution (see the docs).\r\n */\r\nfunction setMany(entries, customStore = defaultGetStore()) {\r\n    return customStore('readwrite', (store) => {\r\n        entries.forEach((entry) => store.put(entry[1], entry[0]));\r\n        return promisifyRequest(store.transaction);\r\n    });\r\n}\r\n/**\r\n * Get multiple values by their keys\r\n *\r\n * @param keys\r\n * @param customStore Method to get a custom store. Use with caution (see the docs).\r\n */\r\nfunction getMany(keys, customStore = defaultGetStore()) {\r\n    return customStore('readonly', (store) => Promise.all(keys.map((key) => promisifyRequest(store.get(key)))));\r\n}\r\n/**\r\n * Update a value. This lets you see the old value and update it as an atomic operation.\r\n *\r\n * @param key\r\n * @param updater A callback that takes the old value and returns a new value.\r\n * @param customStore Method to get a custom store. Use with caution (see the docs).\r\n */\r\nfunction update(key, updater, customStore = defaultGetStore()) {\r\n    return customStore('readwrite', (store) => \r\n    // Need to create the promise manually.\r\n    // If I try to chain promises, the transaction closes in browsers\r\n    // that use a promise polyfill (IE10/11).\r\n    new Promise((resolve, reject) => {\r\n        store.get(key).onsuccess = function () {\r\n            try {\r\n                store.put(updater(this.result), key);\r\n                resolve(promisifyRequest(store.transaction));\r\n            }\r\n            catch (err) {\r\n                reject(err);\r\n            }\r\n        };\r\n    }));\r\n}\r\n/**\r\n * Delete a particular key from the store.\r\n *\r\n * @param key\r\n * @param customStore Method to get a custom store. Use with caution (see the docs).\r\n */\r\nfunction del(key, customStore = defaultGetStore()) {\r\n    return customStore('readwrite', (store) => {\r\n        store.delete(key);\r\n        return promisifyRequest(store.transaction);\r\n    });\r\n}\r\n/**\r\n * Delete multiple keys at once.\r\n *\r\n * @param keys List of keys to delete.\r\n * @param customStore Method to get a custom store. Use with caution (see the docs).\r\n */\r\nfunction delMany(keys, customStore = defaultGetStore()) {\r\n    return customStore('readwrite', (store) => {\r\n        keys.forEach((key) => store.delete(key));\r\n        return promisifyRequest(store.transaction);\r\n    });\r\n}\r\n/**\r\n * Clear all values in the store.\r\n *\r\n * @param customStore Method to get a custom store. Use with caution (see the docs).\r\n */\r\nfunction clear(customStore = defaultGetStore()) {\r\n    return customStore('readwrite', (store) => {\r\n        store.clear();\r\n        return promisifyRequest(store.transaction);\r\n    });\r\n}\r\nfunction eachCursor(store, callback) {\r\n    store.openCursor().onsuccess = function () {\r\n        if (!this.result)\r\n            return;\r\n        callback(this.result);\r\n        this.result.continue();\r\n    };\r\n    return promisifyRequest(store.transaction);\r\n}\r\n/**\r\n * Get all keys in the store.\r\n *\r\n * @param customStore Method to get a custom store. Use with caution (see the docs).\r\n */\r\nfunction keys(customStore = defaultGetStore()) {\r\n    return customStore('readonly', (store) => {\r\n        // Fast path for modern browsers\r\n        if (store.getAllKeys) {\r\n            return promisifyRequest(store.getAllKeys());\r\n        }\r\n        const items = [];\r\n        return eachCursor(store, (cursor) => items.push(cursor.key)).then(() => items);\r\n    });\r\n}\r\n/**\r\n * Get all values in the store.\r\n *\r\n * @param customStore Method to get a custom store. Use with caution (see the docs).\r\n */\r\nfunction values(customStore = defaultGetStore()) {\r\n    return customStore('readonly', (store) => {\r\n        // Fast path for modern browsers\r\n        if (store.getAll) {\r\n            return promisifyRequest(store.getAll());\r\n        }\r\n        const items = [];\r\n        return eachCursor(store, (cursor) => items.push(cursor.value)).then(() => items);\r\n    });\r\n}\r\n/**\r\n * Get all entries in the store. Each entry is an array of `[key, value]`.\r\n *\r\n * @param customStore Method to get a custom store. Use with caution (see the docs).\r\n */\r\nfunction entries(customStore = defaultGetStore()) {\r\n    return customStore('readonly', (store) => {\r\n        // Fast path for modern browsers\r\n        // (although, hopefully we'll get a simpler path some day)\r\n        if (store.getAll && store.getAllKeys) {\r\n            return Promise.all([\r\n                promisifyRequest(store.getAllKeys()),\r\n                promisifyRequest(store.getAll()),\r\n            ]).then(([keys, values]) => keys.map((key, i) => [key, values[i]]));\r\n        }\r\n        const items = [];\r\n        return customStore('readonly', (store) => eachCursor(store, (cursor) => items.push([cursor.key, cursor.value])).then(() => items));\r\n    });\r\n}\r\n\r\nexport { clear, createStore, del, delMany, entries, get, getMany, keys, promisifyRequest, set, setMany, update, values };\r\n", null, null, null, null, null, null, null, null, null, "'use strict'\r\nfunction tryStringify (o) {\r\n  try { return JSON.stringify(o) } catch(e) { return '\"[Circular]\"' }\r\n}\r\n\r\nmodule.exports = format\r\n\r\nfunction format(f, args, opts) {\r\n  var ss = (opts && opts.stringify) || tryStringify\r\n  var offset = 1\r\n  if (typeof f === 'object' && f !== null) {\r\n    var len = args.length + offset\r\n    if (len === 1) return f\r\n    var objects = new Array(len)\r\n    objects[0] = ss(f)\r\n    for (var index = 1; index < len; index++) {\r\n      objects[index] = ss(args[index])\r\n    }\r\n    return objects.join(' ')\r\n  }\r\n  if (typeof f !== 'string') {\r\n    return f\r\n  }\r\n  var argLen = args.length\r\n  if (argLen === 0) return f\r\n  var str = ''\r\n  var a = 1 - offset\r\n  var lastPos = -1\r\n  var flen = (f && f.length) || 0\r\n  for (var i = 0; i < flen;) {\r\n    if (f.charCodeAt(i) === 37 && i + 1 < flen) {\r\n      lastPos = lastPos > -1 ? lastPos : 0\r\n      switch (f.charCodeAt(i + 1)) {\r\n        case 100: // 'd'\r\n        case 102: // 'f'\r\n          if (a >= argLen)\r\n            break\r\n          if (args[a] == null)  break\r\n          if (lastPos < i)\r\n            str += f.slice(lastPos, i)\r\n          str += Number(args[a])\r\n          lastPos = i + 2\r\n          i++\r\n          break\r\n        case 105: // 'i'\r\n          if (a >= argLen)\r\n            break\r\n          if (args[a] == null)  break\r\n          if (lastPos < i)\r\n            str += f.slice(lastPos, i)\r\n          str += Math.floor(Number(args[a]))\r\n          lastPos = i + 2\r\n          i++\r\n          break\r\n        case 79: // 'O'\r\n        case 111: // 'o'\r\n        case 106: // 'j'\r\n          if (a >= argLen)\r\n            break\r\n          if (args[a] === undefined) break\r\n          if (lastPos < i)\r\n            str += f.slice(lastPos, i)\r\n          var type = typeof args[a]\r\n          if (type === 'string') {\r\n            str += '\\'' + args[a] + '\\''\r\n            lastPos = i + 2\r\n            i++\r\n            break\r\n          }\r\n          if (type === 'function') {\r\n            str += args[a].name || '<anonymous>'\r\n            lastPos = i + 2\r\n            i++\r\n            break\r\n          }\r\n          str += ss(args[a])\r\n          lastPos = i + 2\r\n          i++\r\n          break\r\n        case 115: // 's'\r\n          if (a >= argLen)\r\n            break\r\n          if (lastPos < i)\r\n            str += f.slice(lastPos, i)\r\n          str += String(args[a])\r\n          lastPos = i + 2\r\n          i++\r\n          break\r\n        case 37: // '%'\r\n          if (lastPos < i)\r\n            str += f.slice(lastPos, i)\r\n          str += '%'\r\n          lastPos = i + 2\r\n          i++\r\n          a--\r\n          break\r\n      }\r\n      ++a\r\n    }\r\n    ++i\r\n  }\r\n  if (lastPos === -1)\r\n    return f\r\n  else if (lastPos < flen) {\r\n    str += f.slice(lastPos)\r\n  }\r\n\r\n  return str\r\n}\r\n", "'use strict'\n\nconst format = require('quick-format-unescaped')\n\nmodule.exports = pino\n\nconst _console = pfGlobalThisOrFallback().console || {}\nconst stdSerializers = {\n  mapHttpRequest: mock,\n  mapHttpResponse: mock,\n  wrapRequestSerializer: passthrough,\n  wrapResponseSerializer: passthrough,\n  wrapErrorSerializer: passthrough,\n  req: mock,\n  res: mock,\n  err: asErrValue\n}\n\nfunction shouldSerialize (serialize, serializers) {\n  if (Array.isArray(serialize)) {\n    const hasToFilter = serialize.filter(function (k) {\n      return k !== '!stdSerializers.err'\n    })\n    return hasToFilter\n  } else if (serialize === true) {\n    return Object.keys(serializers)\n  }\n\n  return false\n}\n\nfunction pino (opts) {\n  opts = opts || {}\n  opts.browser = opts.browser || {}\n\n  const transmit = opts.browser.transmit\n  if (transmit && typeof transmit.send !== 'function') { throw Error('pino: transmit option must have a send function') }\n\n  const proto = opts.browser.write || _console\n  if (opts.browser.write) opts.browser.asObject = true\n  const serializers = opts.serializers || {}\n  const serialize = shouldSerialize(opts.browser.serialize, serializers)\n  let stdErrSerialize = opts.browser.serialize\n\n  if (\n    Array.isArray(opts.browser.serialize) &&\n    opts.browser.serialize.indexOf('!stdSerializers.err') > -1\n  ) stdErrSerialize = false\n\n  const levels = ['error', 'fatal', 'warn', 'info', 'debug', 'trace']\n\n  if (typeof proto === 'function') {\n    proto.error = proto.fatal = proto.warn =\n    proto.info = proto.debug = proto.trace = proto\n  }\n  if (opts.enabled === false) opts.level = 'silent'\n  const level = opts.level || 'info'\n  const logger = Object.create(proto)\n  if (!logger.log) logger.log = noop\n\n  Object.defineProperty(logger, 'levelVal', {\n    get: getLevelVal\n  })\n  Object.defineProperty(logger, 'level', {\n    get: getLevel,\n    set: setLevel\n  })\n\n  const setOpts = {\n    transmit,\n    serialize,\n    asObject: opts.browser.asObject,\n    levels,\n    timestamp: getTimeFunction(opts)\n  }\n  logger.levels = pino.levels\n  logger.level = level\n\n  logger.setMaxListeners = logger.getMaxListeners =\n  logger.emit = logger.addListener = logger.on =\n  logger.prependListener = logger.once =\n  logger.prependOnceListener = logger.removeListener =\n  logger.removeAllListeners = logger.listeners =\n  logger.listenerCount = logger.eventNames =\n  logger.write = logger.flush = noop\n  logger.serializers = serializers\n  logger._serialize = serialize\n  logger._stdErrSerialize = stdErrSerialize\n  logger.child = child\n\n  if (transmit) logger._logEvent = createLogEventShape()\n\n  function getLevelVal () {\n    return this.level === 'silent'\n      ? Infinity\n      : this.levels.values[this.level]\n  }\n\n  function getLevel () {\n    return this._level\n  }\n  function setLevel (level) {\n    if (level !== 'silent' && !this.levels.values[level]) {\n      throw Error('unknown level ' + level)\n    }\n    this._level = level\n\n    set(setOpts, logger, 'error', 'log') // <-- must stay first\n    set(setOpts, logger, 'fatal', 'error')\n    set(setOpts, logger, 'warn', 'error')\n    set(setOpts, logger, 'info', 'log')\n    set(setOpts, logger, 'debug', 'log')\n    set(setOpts, logger, 'trace', 'log')\n  }\n\n  function child (bindings, childOptions) {\n    if (!bindings) {\n      throw new Error('missing bindings for child Pino')\n    }\n    childOptions = childOptions || {}\n    if (serialize && bindings.serializers) {\n      childOptions.serializers = bindings.serializers\n    }\n    const childOptionsSerializers = childOptions.serializers\n    if (serialize && childOptionsSerializers) {\n      var childSerializers = Object.assign({}, serializers, childOptionsSerializers)\n      var childSerialize = opts.browser.serialize === true\n        ? Object.keys(childSerializers)\n        : serialize\n      delete bindings.serializers\n      applySerializers([bindings], childSerialize, childSerializers, this._stdErrSerialize)\n    }\n    function Child (parent) {\n      this._childLevel = (parent._childLevel | 0) + 1\n      this.error = bind(parent, bindings, 'error')\n      this.fatal = bind(parent, bindings, 'fatal')\n      this.warn = bind(parent, bindings, 'warn')\n      this.info = bind(parent, bindings, 'info')\n      this.debug = bind(parent, bindings, 'debug')\n      this.trace = bind(parent, bindings, 'trace')\n      if (childSerializers) {\n        this.serializers = childSerializers\n        this._serialize = childSerialize\n      }\n      if (transmit) {\n        this._logEvent = createLogEventShape(\n          [].concat(parent._logEvent.bindings, bindings)\n        )\n      }\n    }\n    Child.prototype = this\n    return new Child(this)\n  }\n  return logger\n}\n\npino.levels = {\n  values: {\n    fatal: 60,\n    error: 50,\n    warn: 40,\n    info: 30,\n    debug: 20,\n    trace: 10\n  },\n  labels: {\n    10: 'trace',\n    20: 'debug',\n    30: 'info',\n    40: 'warn',\n    50: 'error',\n    60: 'fatal'\n  }\n}\n\npino.stdSerializers = stdSerializers\npino.stdTimeFunctions = Object.assign({}, { nullTime, epochTime, unixTime, isoTime })\n\nfunction set (opts, logger, level, fallback) {\n  const proto = Object.getPrototypeOf(logger)\n  logger[level] = logger.levelVal > logger.levels.values[level]\n    ? noop\n    : (proto[level] ? proto[level] : (_console[level] || _console[fallback] || noop))\n\n  wrap(opts, logger, level)\n}\n\nfunction wrap (opts, logger, level) {\n  if (!opts.transmit && logger[level] === noop) return\n\n  logger[level] = (function (write) {\n    return function LOG () {\n      const ts = opts.timestamp()\n      const args = new Array(arguments.length)\n      const proto = (Object.getPrototypeOf && Object.getPrototypeOf(this) === _console) ? _console : this\n      for (var i = 0; i < args.length; i++) args[i] = arguments[i]\n\n      if (opts.serialize && !opts.asObject) {\n        applySerializers(args, this._serialize, this.serializers, this._stdErrSerialize)\n      }\n      if (opts.asObject) write.call(proto, asObject(this, level, args, ts))\n      else write.apply(proto, args)\n\n      if (opts.transmit) {\n        const transmitLevel = opts.transmit.level || logger.level\n        const transmitValue = pino.levels.values[transmitLevel]\n        const methodValue = pino.levels.values[level]\n        if (methodValue < transmitValue) return\n        transmit(this, {\n          ts,\n          methodLevel: level,\n          methodValue,\n          transmitLevel,\n          transmitValue: pino.levels.values[opts.transmit.level || logger.level],\n          send: opts.transmit.send,\n          val: logger.levelVal\n        }, args)\n      }\n    }\n  })(logger[level])\n}\n\nfunction asObject (logger, level, args, ts) {\n  if (logger._serialize) applySerializers(args, logger._serialize, logger.serializers, logger._stdErrSerialize)\n  const argsCloned = args.slice()\n  let msg = argsCloned[0]\n  const o = {}\n  if (ts) {\n    o.time = ts\n  }\n  o.level = pino.levels.values[level]\n  let lvl = (logger._childLevel | 0) + 1\n  if (lvl < 1) lvl = 1\n  // deliberate, catching objects, arrays\n  if (msg !== null && typeof msg === 'object') {\n    while (lvl-- && typeof argsCloned[0] === 'object') {\n      Object.assign(o, argsCloned.shift())\n    }\n    msg = argsCloned.length ? format(argsCloned.shift(), argsCloned) : undefined\n  } else if (typeof msg === 'string') msg = format(argsCloned.shift(), argsCloned)\n  if (msg !== undefined) o.msg = msg\n  return o\n}\n\nfunction applySerializers (args, serialize, serializers, stdErrSerialize) {\n  for (const i in args) {\n    if (stdErrSerialize && args[i] instanceof Error) {\n      args[i] = pino.stdSerializers.err(args[i])\n    } else if (typeof args[i] === 'object' && !Array.isArray(args[i])) {\n      for (const k in args[i]) {\n        if (serialize && serialize.indexOf(k) > -1 && k in serializers) {\n          args[i][k] = serializers[k](args[i][k])\n        }\n      }\n    }\n  }\n}\n\nfunction bind (parent, bindings, level) {\n  return function () {\n    const args = new Array(1 + arguments.length)\n    args[0] = bindings\n    for (var i = 1; i < args.length; i++) {\n      args[i] = arguments[i - 1]\n    }\n    return parent[level].apply(this, args)\n  }\n}\n\nfunction transmit (logger, opts, args) {\n  const send = opts.send\n  const ts = opts.ts\n  const methodLevel = opts.methodLevel\n  const methodValue = opts.methodValue\n  const val = opts.val\n  const bindings = logger._logEvent.bindings\n\n  applySerializers(\n    args,\n    logger._serialize || Object.keys(logger.serializers),\n    logger.serializers,\n    logger._stdErrSerialize === undefined ? true : logger._stdErrSerialize\n  )\n  logger._logEvent.ts = ts\n  logger._logEvent.messages = args.filter(function (arg) {\n    // bindings can only be objects, so reference equality check via indexOf is fine\n    return bindings.indexOf(arg) === -1\n  })\n\n  logger._logEvent.level.label = methodLevel\n  logger._logEvent.level.value = methodValue\n\n  send(methodLevel, logger._logEvent, val)\n\n  logger._logEvent = createLogEventShape(bindings)\n}\n\nfunction createLogEventShape (bindings) {\n  return {\n    ts: 0,\n    messages: [],\n    bindings: bindings || [],\n    level: { label: '', value: 0 }\n  }\n}\n\nfunction asErrValue (err) {\n  const obj = {\n    type: err.constructor.name,\n    msg: err.message,\n    stack: err.stack\n  }\n  for (const key in err) {\n    if (obj[key] === undefined) {\n      obj[key] = err[key]\n    }\n  }\n  return obj\n}\n\nfunction getTimeFunction (opts) {\n  if (typeof opts.timestamp === 'function') {\n    return opts.timestamp\n  }\n  if (opts.timestamp === false) {\n    return nullTime\n  }\n  return epochTime\n}\n\nfunction mock () { return {} }\nfunction passthrough (a) { return a }\nfunction noop () {}\n\nfunction nullTime () { return false }\nfunction epochTime () { return Date.now() }\nfunction unixTime () { return Math.round(Date.now() / 1000.0) }\nfunction isoTime () { return new Date(Date.now()).toISOString() } // using Date.now() for testability\n\n/* eslint-disable */\n/* istanbul ignore next */\nfunction pfGlobalThisOrFallback () {\n  function defd (o) { return typeof o !== 'undefined' && o }\n  try {\n    if (typeof globalThis !== 'undefined') return globalThis\n    Object.defineProperty(Object.prototype, 'globalThis', {\n      get: function () {\n        delete Object.prototype.globalThis\n        return (this.globalThis = this)\n      },\n      configurable: true\n    })\n    return globalThis\n  } catch (e) {\n    return defd(self) || defd(window) || defd(this) || {}\n  }\n}\n/* eslint-enable */\n", null, null, null, "// Copyright (C) 2016 Dmitry Chestnykh\r\n// MIT License. See LICENSE file for details.\r\n\r\n/**\r\n * Package sha512 implements SHA-2-512 cryptographic hash function.\r\n */\r\n\r\nimport { SerializableHash } from \"@stablelib/hash\";\r\nimport { readUint32BE, writeUint32BE } from \"@stablelib/binary\";\r\nimport { wipe } from \"@stablelib/wipe\";\r\n\r\nexport const DIGEST_LENGTH = 64;\r\nexport const BLOCK_SIZE = 128;\r\n\r\n/**\r\n * SHA-2-512 cryptographic hash algorithm.\r\n */\r\nexport class SHA512 implements SerializableHash {\r\n    /** Length of hash output */\r\n    readonly digestLength: number = DIGEST_LENGTH;\r\n\r\n    /** Block size */\r\n    readonly blockSize: number = BLOCK_SIZE;\r\n\r\n    // Note: Int32Array is used instead of Uint32Array for performance reasons.\r\n    protected _stateHi = new Int32Array(8); // hash state, high bytes\r\n    protected _stateLo = new Int32Array(8); // hash state, low bytes\r\n    private _tempHi = new Int32Array(16); // temporary state, high bytes\r\n    private _tempLo = new Int32Array(16); // temporary state, low bytes\r\n    private _buffer = new Uint8Array(256); // buffer for data to hash\r\n    private _bufferLength = 0; // number of bytes in buffer\r\n    private _bytesHashed = 0; // number of total bytes hashed\r\n    private _finished = false; // indicates whether the hash was finalized\r\n\r\n    constructor() {\r\n        this.reset();\r\n    }\r\n\r\n    protected _initState() {\r\n        this._stateHi[0] = 0x6a09e667;\r\n        this._stateHi[1] = 0xbb67ae85;\r\n        this._stateHi[2] = 0x3c6ef372;\r\n        this._stateHi[3] = 0xa54ff53a;\r\n        this._stateHi[4] = 0x510e527f;\r\n        this._stateHi[5] = 0x9b05688c;\r\n        this._stateHi[6] = 0x1f83d9ab;\r\n        this._stateHi[7] = 0x5be0cd19;\r\n\r\n        this._stateLo[0] = 0xf3bcc908;\r\n        this._stateLo[1] = 0x84caa73b;\r\n        this._stateLo[2] = 0xfe94f82b;\r\n        this._stateLo[3] = 0x5f1d36f1;\r\n        this._stateLo[4] = 0xade682d1;\r\n        this._stateLo[5] = 0x2b3e6c1f;\r\n        this._stateLo[6] = 0xfb41bd6b;\r\n        this._stateLo[7] = 0x137e2179;\r\n    }\r\n\r\n    /**\r\n     * Resets hash state making it possible\r\n     * to re-use this instance to hash other data.\r\n     */\r\n    reset(): this {\r\n        this._initState();\r\n        this._bufferLength = 0;\r\n        this._bytesHashed = 0;\r\n        this._finished = false;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Cleans internal buffers and resets hash state.\r\n     */\r\n    clean() {\r\n        wipe(this._buffer);\r\n        wipe(this._tempHi);\r\n        wipe(this._tempLo);\r\n        this.reset();\r\n    }\r\n\r\n    /**\r\n     * Updates hash state with the given data.\r\n     *\r\n     * Throws error when trying to update already finalized hash:\r\n     * instance must be reset to update it again.\r\n     */\r\n    update(data: Uint8Array, dataLength: number = data.length): this {\r\n        if (this._finished) {\r\n            throw new Error(\"SHA512: can't update because hash was finished.\");\r\n        }\r\n        let dataPos = 0;\r\n        this._bytesHashed += dataLength;\r\n        if (this._bufferLength > 0) {\r\n            while (this._bufferLength < BLOCK_SIZE && dataLength > 0) {\r\n                this._buffer[this._bufferLength++] = data[dataPos++];\r\n                dataLength--;\r\n            }\r\n            if (this._bufferLength === this.blockSize) {\r\n                hashBlocks(this._tempHi, this._tempLo, this._stateHi, this._stateLo,\r\n                    this._buffer, 0, this.blockSize);\r\n                this._bufferLength = 0;\r\n            }\r\n        }\r\n        if (dataLength >= this.blockSize) {\r\n            dataPos = hashBlocks(this._tempHi, this._tempLo, this._stateHi, this._stateLo,\r\n                data, dataPos, dataLength);\r\n            dataLength %= this.blockSize;\r\n        }\r\n        while (dataLength > 0) {\r\n            this._buffer[this._bufferLength++] = data[dataPos++];\r\n            dataLength--;\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Finalizes hash state and puts hash into out.\r\n     * If hash was already finalized, puts the same value.\r\n     */\r\n    finish(out: Uint8Array): this {\r\n        if (!this._finished) {\r\n            const bytesHashed = this._bytesHashed;\r\n            const left = this._bufferLength;\r\n            const bitLenHi = (bytesHashed / 0x20000000) | 0;\r\n            const bitLenLo = bytesHashed << 3;\r\n            const padLength = (bytesHashed % 128 < 112) ? 128 : 256;\r\n\r\n            this._buffer[left] = 0x80;\r\n            for (let i = left + 1; i < padLength - 8; i++) {\r\n                this._buffer[i] = 0;\r\n            }\r\n            writeUint32BE(bitLenHi, this._buffer, padLength - 8);\r\n            writeUint32BE(bitLenLo, this._buffer, padLength - 4);\r\n\r\n            hashBlocks(this._tempHi, this._tempLo, this._stateHi, this._stateLo, this._buffer, 0, padLength);\r\n\r\n            this._finished = true;\r\n        }\r\n\r\n        for (let i = 0; i < this.digestLength / 8; i++) {\r\n            writeUint32BE(this._stateHi[i], out, i * 8);\r\n            writeUint32BE(this._stateLo[i], out, i * 8 + 4);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Returns the final hash digest.\r\n     */\r\n    digest(): Uint8Array {\r\n        const out = new Uint8Array(this.digestLength);\r\n        this.finish(out);\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Function useful for HMAC/PBKDF2 optimization. Returns hash state to be\r\n     * used with restoreState(). Only chain value is saved, not buffers or\r\n     * other state variables.\r\n     */\r\n    saveState(): SavedState {\r\n        if (this._finished) {\r\n            throw new Error(\"SHA256: cannot save finished state\");\r\n        }\r\n        return {\r\n            stateHi: new Int32Array(this._stateHi),\r\n            stateLo: new Int32Array(this._stateLo),\r\n            buffer: this._bufferLength > 0 ? new Uint8Array(this._buffer) : undefined,\r\n            bufferLength: this._bufferLength,\r\n            bytesHashed: this._bytesHashed\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Function useful for HMAC/PBKDF2 optimization. Restores state saved by\r\n     * saveState() and sets bytesHashed to the given value.\r\n     */\r\n    restoreState(savedState: SavedState): this {\r\n        this._stateHi.set(savedState.stateHi);\r\n        this._stateLo.set(savedState.stateLo);\r\n        this._bufferLength = savedState.bufferLength;\r\n        if (savedState.buffer) {\r\n            this._buffer.set(savedState.buffer);\r\n        }\r\n        this._bytesHashed = savedState.bytesHashed;\r\n        this._finished = false;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Cleans state returned by saveState().\r\n     */\r\n    cleanSavedState(savedState: SavedState) {\r\n        wipe(savedState.stateHi);\r\n        wipe(savedState.stateLo);\r\n        if (savedState.buffer) {\r\n            wipe(savedState.buffer);\r\n        }\r\n        savedState.bufferLength = 0;\r\n        savedState.bytesHashed = 0;\r\n    }\r\n}\r\n\r\nexport type SavedState = {\r\n    stateHi: Int32Array;\r\n    stateLo: Int32Array;\r\n    buffer: Uint8Array | undefined;\r\n    bufferLength: number;\r\n    bytesHashed: number;\r\n};\r\n\r\n// Constants\r\nconst K = new Int32Array([\r\n    0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\r\n    0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\r\n    0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\r\n    0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\r\n    0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\r\n    0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\r\n    0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\r\n    0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\r\n    0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\r\n    0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\r\n    0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\r\n    0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\r\n    0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\r\n    0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\r\n    0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\r\n    0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\r\n    0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\r\n    0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\r\n    0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\r\n    0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\r\n    0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\r\n    0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\r\n    0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\r\n    0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\r\n    0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\r\n    0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\r\n    0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\r\n    0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\r\n    0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\r\n    0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\r\n    0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\r\n    0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\r\n    0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\r\n    0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\r\n    0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\r\n    0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\r\n    0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\r\n    0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\r\n    0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\r\n    0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\r\n]);\r\n\r\n\r\nfunction hashBlocks(wh: Int32Array, wl: Int32Array, hh: Int32Array, hl: Int32Array,\r\n    m: Uint8Array, pos: number, len: number): number {\r\n\r\n    let ah0 = hh[0],\r\n        ah1 = hh[1],\r\n        ah2 = hh[2],\r\n        ah3 = hh[3],\r\n        ah4 = hh[4],\r\n        ah5 = hh[5],\r\n        ah6 = hh[6],\r\n        ah7 = hh[7],\r\n\r\n        al0 = hl[0],\r\n        al1 = hl[1],\r\n        al2 = hl[2],\r\n        al3 = hl[3],\r\n        al4 = hl[4],\r\n        al5 = hl[5],\r\n        al6 = hl[6],\r\n        al7 = hl[7];\r\n\r\n    let h: number, l: number;\r\n    let th: number, tl: number;\r\n    let a: number, b: number, c: number, d: number;\r\n\r\n    while (len >= 128) {\r\n        for (let i = 0; i < 16; i++) {\r\n            const j = 8 * i + pos;\r\n            wh[i] = readUint32BE(m, j);\r\n            wl[i] = readUint32BE(m, j + 4);\r\n        }\r\n        for (let i = 0; i < 80; i++) {\r\n            let bh0 = ah0;\r\n            let bh1 = ah1;\r\n            let bh2 = ah2;\r\n            let bh3 = ah3;\r\n            let bh4 = ah4;\r\n            let bh5 = ah5;\r\n            let bh6 = ah6;\r\n            let bh7 = ah7;\r\n\r\n            let bl0 = al0;\r\n            let bl1 = al1;\r\n            let bl2 = al2;\r\n            let bl3 = al3;\r\n            let bl4 = al4;\r\n            let bl5 = al5;\r\n            let bl6 = al6;\r\n            let bl7 = al7;\r\n\r\n            // add\r\n            h = ah7;\r\n            l = al7;\r\n\r\n            a = l & 0xffff; b = l >>> 16;\r\n            c = h & 0xffff; d = h >>> 16;\r\n\r\n            // Sigma1\r\n            h = ((ah4 >>> 14) | (al4 << (32 - 14))) ^ ((ah4 >>> 18) |\r\n                (al4 << (32 - 18))) ^ ((al4 >>> (41 - 32)) | (ah4 << (32 - (41 - 32))));\r\n            l = ((al4 >>> 14) | (ah4 << (32 - 14))) ^ ((al4 >>> 18) |\r\n                (ah4 << (32 - 18))) ^ ((ah4 >>> (41 - 32)) | (al4 << (32 - (41 - 32))));\r\n\r\n            a += l & 0xffff; b += l >>> 16;\r\n            c += h & 0xffff; d += h >>> 16;\r\n\r\n            // Ch\r\n            h = (ah4 & ah5) ^ (~ah4 & ah6);\r\n            l = (al4 & al5) ^ (~al4 & al6);\r\n\r\n            a += l & 0xffff; b += l >>> 16;\r\n            c += h & 0xffff; d += h >>> 16;\r\n\r\n            // K\r\n            h = K[i * 2];\r\n            l = K[i * 2 + 1];\r\n\r\n            a += l & 0xffff; b += l >>> 16;\r\n            c += h & 0xffff; d += h >>> 16;\r\n\r\n            // w\r\n            h = wh[i % 16];\r\n            l = wl[i % 16];\r\n\r\n            a += l & 0xffff; b += l >>> 16;\r\n            c += h & 0xffff; d += h >>> 16;\r\n\r\n            b += a >>> 16;\r\n            c += b >>> 16;\r\n            d += c >>> 16;\r\n\r\n            th = c & 0xffff | d << 16;\r\n            tl = a & 0xffff | b << 16;\r\n\r\n            // add\r\n            h = th;\r\n            l = tl;\r\n\r\n            a = l & 0xffff; b = l >>> 16;\r\n            c = h & 0xffff; d = h >>> 16;\r\n\r\n            // Sigma0\r\n            h = ((ah0 >>> 28) | (al0 << (32 - 28))) ^ ((al0 >>> (34 - 32)) |\r\n                (ah0 << (32 - (34 - 32)))) ^ ((al0 >>> (39 - 32)) | (ah0 << (32 - (39 - 32))));\r\n            l = ((al0 >>> 28) | (ah0 << (32 - 28))) ^ ((ah0 >>> (34 - 32)) |\r\n                (al0 << (32 - (34 - 32)))) ^ ((ah0 >>> (39 - 32)) | (al0 << (32 - (39 - 32))));\r\n\r\n            a += l & 0xffff; b += l >>> 16;\r\n            c += h & 0xffff; d += h >>> 16;\r\n\r\n            // Maj\r\n            h = (ah0 & ah1) ^ (ah0 & ah2) ^ (ah1 & ah2);\r\n            l = (al0 & al1) ^ (al0 & al2) ^ (al1 & al2);\r\n\r\n            a += l & 0xffff; b += l >>> 16;\r\n            c += h & 0xffff; d += h >>> 16;\r\n\r\n            b += a >>> 16;\r\n            c += b >>> 16;\r\n            d += c >>> 16;\r\n\r\n            bh7 = (c & 0xffff) | (d << 16);\r\n            bl7 = (a & 0xffff) | (b << 16);\r\n\r\n            // add\r\n            h = bh3;\r\n            l = bl3;\r\n\r\n            a = l & 0xffff; b = l >>> 16;\r\n            c = h & 0xffff; d = h >>> 16;\r\n\r\n            h = th;\r\n            l = tl;\r\n\r\n            a += l & 0xffff; b += l >>> 16;\r\n            c += h & 0xffff; d += h >>> 16;\r\n\r\n            b += a >>> 16;\r\n            c += b >>> 16;\r\n            d += c >>> 16;\r\n\r\n            bh3 = (c & 0xffff) | (d << 16);\r\n            bl3 = (a & 0xffff) | (b << 16);\r\n\r\n            ah1 = bh0;\r\n            ah2 = bh1;\r\n            ah3 = bh2;\r\n            ah4 = bh3;\r\n            ah5 = bh4;\r\n            ah6 = bh5;\r\n            ah7 = bh6;\r\n            ah0 = bh7;\r\n\r\n            al1 = bl0;\r\n            al2 = bl1;\r\n            al3 = bl2;\r\n            al4 = bl3;\r\n            al5 = bl4;\r\n            al6 = bl5;\r\n            al7 = bl6;\r\n            al0 = bl7;\r\n\r\n            if (i % 16 === 15) {\r\n                for (let j = 0; j < 16; j++) {\r\n                    // add\r\n                    h = wh[j];\r\n                    l = wl[j];\r\n\r\n                    a = l & 0xffff; b = l >>> 16;\r\n                    c = h & 0xffff; d = h >>> 16;\r\n\r\n                    h = wh[(j + 9) % 16];\r\n                    l = wl[(j + 9) % 16];\r\n\r\n                    a += l & 0xffff; b += l >>> 16;\r\n                    c += h & 0xffff; d += h >>> 16;\r\n\r\n                    // sigma0\r\n                    th = wh[(j + 1) % 16];\r\n                    tl = wl[(j + 1) % 16];\r\n                    h = ((th >>> 1) | (tl << (32 - 1))) ^ ((th >>> 8) |\r\n                        (tl << (32 - 8))) ^ (th >>> 7);\r\n                    l = ((tl >>> 1) | (th << (32 - 1))) ^ ((tl >>> 8) |\r\n                        (th << (32 - 8))) ^ ((tl >>> 7) | (th << (32 - 7)));\r\n\r\n                    a += l & 0xffff; b += l >>> 16;\r\n                    c += h & 0xffff; d += h >>> 16;\r\n\r\n                    // sigma1\r\n                    th = wh[(j + 14) % 16];\r\n                    tl = wl[(j + 14) % 16];\r\n                    h = ((th >>> 19) | (tl << (32 - 19))) ^ ((tl >>> (61 - 32)) |\r\n                        (th << (32 - (61 - 32)))) ^ (th >>> 6);\r\n                    l = ((tl >>> 19) | (th << (32 - 19))) ^ ((th >>> (61 - 32)) |\r\n                        (tl << (32 - (61 - 32)))) ^ ((tl >>> 6) | (th << (32 - 6)));\r\n\r\n                    a += l & 0xffff; b += l >>> 16;\r\n                    c += h & 0xffff; d += h >>> 16;\r\n\r\n                    b += a >>> 16;\r\n                    c += b >>> 16;\r\n                    d += c >>> 16;\r\n\r\n                    wh[j] = (c & 0xffff) | (d << 16);\r\n                    wl[j] = (a & 0xffff) | (b << 16);\r\n                }\r\n            }\r\n        }\r\n\r\n        // add\r\n        h = ah0;\r\n        l = al0;\r\n\r\n        a = l & 0xffff; b = l >>> 16;\r\n        c = h & 0xffff; d = h >>> 16;\r\n\r\n        h = hh[0];\r\n        l = hl[0];\r\n\r\n        a += l & 0xffff; b += l >>> 16;\r\n        c += h & 0xffff; d += h >>> 16;\r\n\r\n        b += a >>> 16;\r\n        c += b >>> 16;\r\n        d += c >>> 16;\r\n\r\n        hh[0] = ah0 = (c & 0xffff) | (d << 16);\r\n        hl[0] = al0 = (a & 0xffff) | (b << 16);\r\n\r\n        h = ah1;\r\n        l = al1;\r\n\r\n        a = l & 0xffff; b = l >>> 16;\r\n        c = h & 0xffff; d = h >>> 16;\r\n\r\n        h = hh[1];\r\n        l = hl[1];\r\n\r\n        a += l & 0xffff; b += l >>> 16;\r\n        c += h & 0xffff; d += h >>> 16;\r\n\r\n        b += a >>> 16;\r\n        c += b >>> 16;\r\n        d += c >>> 16;\r\n\r\n        hh[1] = ah1 = (c & 0xffff) | (d << 16);\r\n        hl[1] = al1 = (a & 0xffff) | (b << 16);\r\n\r\n        h = ah2;\r\n        l = al2;\r\n\r\n        a = l & 0xffff; b = l >>> 16;\r\n        c = h & 0xffff; d = h >>> 16;\r\n\r\n        h = hh[2];\r\n        l = hl[2];\r\n\r\n        a += l & 0xffff; b += l >>> 16;\r\n        c += h & 0xffff; d += h >>> 16;\r\n\r\n        b += a >>> 16;\r\n        c += b >>> 16;\r\n        d += c >>> 16;\r\n\r\n        hh[2] = ah2 = (c & 0xffff) | (d << 16);\r\n        hl[2] = al2 = (a & 0xffff) | (b << 16);\r\n\r\n        h = ah3;\r\n        l = al3;\r\n\r\n        a = l & 0xffff; b = l >>> 16;\r\n        c = h & 0xffff; d = h >>> 16;\r\n\r\n        h = hh[3];\r\n        l = hl[3];\r\n\r\n        a += l & 0xffff; b += l >>> 16;\r\n        c += h & 0xffff; d += h >>> 16;\r\n\r\n        b += a >>> 16;\r\n        c += b >>> 16;\r\n        d += c >>> 16;\r\n\r\n        hh[3] = ah3 = (c & 0xffff) | (d << 16);\r\n        hl[3] = al3 = (a & 0xffff) | (b << 16);\r\n\r\n        h = ah4;\r\n        l = al4;\r\n\r\n        a = l & 0xffff; b = l >>> 16;\r\n        c = h & 0xffff; d = h >>> 16;\r\n\r\n        h = hh[4];\r\n        l = hl[4];\r\n\r\n        a += l & 0xffff; b += l >>> 16;\r\n        c += h & 0xffff; d += h >>> 16;\r\n\r\n        b += a >>> 16;\r\n        c += b >>> 16;\r\n        d += c >>> 16;\r\n\r\n        hh[4] = ah4 = (c & 0xffff) | (d << 16);\r\n        hl[4] = al4 = (a & 0xffff) | (b << 16);\r\n\r\n        h = ah5;\r\n        l = al5;\r\n\r\n        a = l & 0xffff; b = l >>> 16;\r\n        c = h & 0xffff; d = h >>> 16;\r\n\r\n        h = hh[5];\r\n        l = hl[5];\r\n\r\n        a += l & 0xffff; b += l >>> 16;\r\n        c += h & 0xffff; d += h >>> 16;\r\n\r\n        b += a >>> 16;\r\n        c += b >>> 16;\r\n        d += c >>> 16;\r\n\r\n        hh[5] = ah5 = (c & 0xffff) | (d << 16);\r\n        hl[5] = al5 = (a & 0xffff) | (b << 16);\r\n\r\n        h = ah6;\r\n        l = al6;\r\n\r\n        a = l & 0xffff; b = l >>> 16;\r\n        c = h & 0xffff; d = h >>> 16;\r\n\r\n        h = hh[6];\r\n        l = hl[6];\r\n\r\n        a += l & 0xffff; b += l >>> 16;\r\n        c += h & 0xffff; d += h >>> 16;\r\n\r\n        b += a >>> 16;\r\n        c += b >>> 16;\r\n        d += c >>> 16;\r\n\r\n        hh[6] = ah6 = (c & 0xffff) | (d << 16);\r\n        hl[6] = al6 = (a & 0xffff) | (b << 16);\r\n\r\n        h = ah7;\r\n        l = al7;\r\n\r\n        a = l & 0xffff; b = l >>> 16;\r\n        c = h & 0xffff; d = h >>> 16;\r\n\r\n        h = hh[7];\r\n        l = hl[7];\r\n\r\n        a += l & 0xffff; b += l >>> 16;\r\n        c += h & 0xffff; d += h >>> 16;\r\n\r\n        b += a >>> 16;\r\n        c += b >>> 16;\r\n        d += c >>> 16;\r\n\r\n        hh[7] = ah7 = (c & 0xffff) | (d << 16);\r\n        hl[7] = al7 = (a & 0xffff) | (b << 16);\r\n\r\n        pos += 128;\r\n        len -= 128;\r\n    }\r\n\r\n    return pos;\r\n}\r\n\r\nexport function hash(data: Uint8Array): Uint8Array {\r\n    const h = new SHA512();\r\n    h.update(data);\r\n    const digest = h.digest();\r\n    h.clean();\r\n    return digest;\r\n}\r\n", "// Copyright (C) 2016 Dmitry Chestnykh\r\n// MIT License. See LICENSE file for details.\r\n\r\n/**\r\n * Package ed25519 implements Ed25519 public-key signature algorithm.\r\n */\r\n\r\nimport { randomBytes, RandomSource } from \"@stablelib/random\";\r\nimport { hash, SHA512 } from \"@stablelib/sha512\";\r\nimport { wipe } from \"@stablelib/wipe\";\r\n\r\nexport const SIGNATURE_LENGTH = 64;\r\nexport const PUBLIC_KEY_LENGTH = 32;\r\nexport const SECRET_KEY_LENGTH = 64;\r\nexport const SEED_LENGTH = 32;\r\n\r\n// TODO(dchest): some functions are copies of ../kex/x25519.\r\n// Find a way to combine them without opening up to public.\r\n\r\n// Ported from TweetNaCl.js, which was ported from TweetNaCl\r\n// by Dmitry Chestnykh and Devi Mandiri.\r\n// Public domain.\r\n// https://tweetnacl.js.org\r\n\r\n// TweetNaCl contributors:\r\n// Daniel J. Bernstein, Bernard van Gastel, Wesley Janssen,\r\n// Tanja Lange, Peter Schwabe, Sjaak Smetsers.\r\n// Public domain.\r\n// https://tweetnacl.cr.yp.to/\r\n\r\ntype GF = Float64Array;\r\n\r\n// Returns new zero-filled 16-element GF (Float64Array).\r\n// If passed an array of numbers, prefills the returned\r\n// array with them.\r\n//\r\n// We use Float64Array, because we need 48-bit numbers\r\n// for this implementation.\r\nfunction gf(init?: number[]): GF {\r\n    const r = new Float64Array(16);\r\n    if (init) {\r\n        for (let i = 0; i < init.length; i++) {\r\n            r[i] = init[i];\r\n        }\r\n    }\r\n    return r;\r\n}\r\n\r\n// Base point.\r\nconst _9 = new Uint8Array(32); _9[0] = 9;\r\n\r\nconst gf0 = gf();\r\n\r\nconst gf1 = gf([1]);\r\n\r\nconst D = gf([\r\n    0x78a3, 0x1359, 0x4dca, 0x75eb, 0xd8ab, 0x4141, 0x0a4d, 0x0070,\r\n    0xe898, 0x7779, 0x4079, 0x8cc7, 0xfe73, 0x2b6f, 0x6cee, 0x5203\r\n]);\r\n\r\nconst D2 = gf([\r\n    0xf159, 0x26b2, 0x9b94, 0xebd6, 0xb156, 0x8283, 0x149a, 0x00e0,\r\n    0xd130, 0xeef3, 0x80f2, 0x198e, 0xfce7, 0x56df, 0xd9dc, 0x2406\r\n]);\r\n\r\nconst X = gf([\r\n    0xd51a, 0x8f25, 0x2d60, 0xc956, 0xa7b2, 0x9525, 0xc760, 0x692c,\r\n    0xdc5c, 0xfdd6, 0xe231, 0xc0a4, 0x53fe, 0xcd6e, 0x36d3, 0x2169\r\n]);\r\n\r\nconst Y = gf([\r\n    0x6658, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666,\r\n    0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666\r\n]);\r\n\r\nconst I = gf([\r\n    0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43,\r\n    0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83\r\n]);\r\n\r\nfunction set25519(r: GF, a: GF) {\r\n    for (let i = 0; i < 16; i++) {\r\n        r[i] = a[i] | 0;\r\n    }\r\n}\r\n\r\nfunction car25519(o: GF) {\r\n    let c = 1;\r\n    for (let i = 0; i < 16; i++) {\r\n        let v = o[i] + c + 65535;\r\n        c = Math.floor(v / 65536);\r\n        o[i] = v - c * 65536;\r\n    }\r\n    o[0] += c - 1 + 37 * (c - 1);\r\n}\r\n\r\nfunction sel25519(p: GF, q: GF, b: number) {\r\n    const c = ~(b - 1);\r\n    for (let i = 0; i < 16; i++) {\r\n        const t = c & (p[i] ^ q[i]);\r\n        p[i] ^= t;\r\n        q[i] ^= t;\r\n    }\r\n}\r\n\r\nfunction pack25519(o: Uint8Array, n: GF) {\r\n    const m = gf();\r\n    const t = gf();\r\n    for (let i = 0; i < 16; i++) {\r\n        t[i] = n[i];\r\n    }\r\n    car25519(t);\r\n    car25519(t);\r\n    car25519(t);\r\n    for (let j = 0; j < 2; j++) {\r\n        m[0] = t[0] - 0xffed;\r\n        for (let i = 1; i < 15; i++) {\r\n            m[i] = t[i] - 0xffff - ((m[i - 1] >> 16) & 1);\r\n            m[i - 1] &= 0xffff;\r\n        }\r\n        m[15] = t[15] - 0x7fff - ((m[14] >> 16) & 1);\r\n        const b = (m[15] >> 16) & 1;\r\n        m[14] &= 0xffff;\r\n        sel25519(t, m, 1 - b);\r\n    }\r\n    for (let i = 0; i < 16; i++) {\r\n        o[2 * i] = t[i] & 0xff;\r\n        o[2 * i + 1] = t[i] >> 8;\r\n    }\r\n}\r\n\r\nfunction verify32(x: Uint8Array, y: Uint8Array) {\r\n    let d = 0;\r\n    for (let i = 0; i < 32; i++) {\r\n        d |= x[i] ^ y[i];\r\n    }\r\n    return (1 & ((d - 1) >>> 8)) - 1;\r\n}\r\n\r\n\r\nfunction neq25519(a: GF, b: GF) {\r\n    const c = new Uint8Array(32);\r\n    const d = new Uint8Array(32);\r\n    pack25519(c, a);\r\n    pack25519(d, b);\r\n    return verify32(c, d);\r\n}\r\n\r\nfunction par25519(a: GF) {\r\n    const d = new Uint8Array(32);\r\n    pack25519(d, a);\r\n    return d[0] & 1;\r\n}\r\n\r\nfunction unpack25519(o: GF, n: Uint8Array) {\r\n    for (let i = 0; i < 16; i++) {\r\n        o[i] = n[2 * i] + (n[2 * i + 1] << 8);\r\n    }\r\n    o[15] &= 0x7fff;\r\n}\r\n\r\nfunction add(o: GF, a: GF, b: GF) {\r\n    for (let i = 0; i < 16; i++) {\r\n        o[i] = a[i] + b[i];\r\n    }\r\n}\r\n\r\nfunction sub(o: GF, a: GF, b: GF) {\r\n    for (let i = 0; i < 16; i++) {\r\n        o[i] = a[i] - b[i];\r\n    }\r\n}\r\n\r\nfunction mul(o: GF, a: GF, b: GF) {\r\n    let v: number, c: number,\r\n        t0 = 0, t1 = 0, t2 = 0, t3 = 0, t4 = 0, t5 = 0, t6 = 0, t7 = 0,\r\n        t8 = 0, t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0,\r\n        t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0,\r\n        t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0,\r\n        b0 = b[0],\r\n        b1 = b[1],\r\n        b2 = b[2],\r\n        b3 = b[3],\r\n        b4 = b[4],\r\n        b5 = b[5],\r\n        b6 = b[6],\r\n        b7 = b[7],\r\n        b8 = b[8],\r\n        b9 = b[9],\r\n        b10 = b[10],\r\n        b11 = b[11],\r\n        b12 = b[12],\r\n        b13 = b[13],\r\n        b14 = b[14],\r\n        b15 = b[15];\r\n\r\n    v = a[0];\r\n    t0 += v * b0;\r\n    t1 += v * b1;\r\n    t2 += v * b2;\r\n    t3 += v * b3;\r\n    t4 += v * b4;\r\n    t5 += v * b5;\r\n    t6 += v * b6;\r\n    t7 += v * b7;\r\n    t8 += v * b8;\r\n    t9 += v * b9;\r\n    t10 += v * b10;\r\n    t11 += v * b11;\r\n    t12 += v * b12;\r\n    t13 += v * b13;\r\n    t14 += v * b14;\r\n    t15 += v * b15;\r\n    v = a[1];\r\n    t1 += v * b0;\r\n    t2 += v * b1;\r\n    t3 += v * b2;\r\n    t4 += v * b3;\r\n    t5 += v * b4;\r\n    t6 += v * b5;\r\n    t7 += v * b6;\r\n    t8 += v * b7;\r\n    t9 += v * b8;\r\n    t10 += v * b9;\r\n    t11 += v * b10;\r\n    t12 += v * b11;\r\n    t13 += v * b12;\r\n    t14 += v * b13;\r\n    t15 += v * b14;\r\n    t16 += v * b15;\r\n    v = a[2];\r\n    t2 += v * b0;\r\n    t3 += v * b1;\r\n    t4 += v * b2;\r\n    t5 += v * b3;\r\n    t6 += v * b4;\r\n    t7 += v * b5;\r\n    t8 += v * b6;\r\n    t9 += v * b7;\r\n    t10 += v * b8;\r\n    t11 += v * b9;\r\n    t12 += v * b10;\r\n    t13 += v * b11;\r\n    t14 += v * b12;\r\n    t15 += v * b13;\r\n    t16 += v * b14;\r\n    t17 += v * b15;\r\n    v = a[3];\r\n    t3 += v * b0;\r\n    t4 += v * b1;\r\n    t5 += v * b2;\r\n    t6 += v * b3;\r\n    t7 += v * b4;\r\n    t8 += v * b5;\r\n    t9 += v * b6;\r\n    t10 += v * b7;\r\n    t11 += v * b8;\r\n    t12 += v * b9;\r\n    t13 += v * b10;\r\n    t14 += v * b11;\r\n    t15 += v * b12;\r\n    t16 += v * b13;\r\n    t17 += v * b14;\r\n    t18 += v * b15;\r\n    v = a[4];\r\n    t4 += v * b0;\r\n    t5 += v * b1;\r\n    t6 += v * b2;\r\n    t7 += v * b3;\r\n    t8 += v * b4;\r\n    t9 += v * b5;\r\n    t10 += v * b6;\r\n    t11 += v * b7;\r\n    t12 += v * b8;\r\n    t13 += v * b9;\r\n    t14 += v * b10;\r\n    t15 += v * b11;\r\n    t16 += v * b12;\r\n    t17 += v * b13;\r\n    t18 += v * b14;\r\n    t19 += v * b15;\r\n    v = a[5];\r\n    t5 += v * b0;\r\n    t6 += v * b1;\r\n    t7 += v * b2;\r\n    t8 += v * b3;\r\n    t9 += v * b4;\r\n    t10 += v * b5;\r\n    t11 += v * b6;\r\n    t12 += v * b7;\r\n    t13 += v * b8;\r\n    t14 += v * b9;\r\n    t15 += v * b10;\r\n    t16 += v * b11;\r\n    t17 += v * b12;\r\n    t18 += v * b13;\r\n    t19 += v * b14;\r\n    t20 += v * b15;\r\n    v = a[6];\r\n    t6 += v * b0;\r\n    t7 += v * b1;\r\n    t8 += v * b2;\r\n    t9 += v * b3;\r\n    t10 += v * b4;\r\n    t11 += v * b5;\r\n    t12 += v * b6;\r\n    t13 += v * b7;\r\n    t14 += v * b8;\r\n    t15 += v * b9;\r\n    t16 += v * b10;\r\n    t17 += v * b11;\r\n    t18 += v * b12;\r\n    t19 += v * b13;\r\n    t20 += v * b14;\r\n    t21 += v * b15;\r\n    v = a[7];\r\n    t7 += v * b0;\r\n    t8 += v * b1;\r\n    t9 += v * b2;\r\n    t10 += v * b3;\r\n    t11 += v * b4;\r\n    t12 += v * b5;\r\n    t13 += v * b6;\r\n    t14 += v * b7;\r\n    t15 += v * b8;\r\n    t16 += v * b9;\r\n    t17 += v * b10;\r\n    t18 += v * b11;\r\n    t19 += v * b12;\r\n    t20 += v * b13;\r\n    t21 += v * b14;\r\n    t22 += v * b15;\r\n    v = a[8];\r\n    t8 += v * b0;\r\n    t9 += v * b1;\r\n    t10 += v * b2;\r\n    t11 += v * b3;\r\n    t12 += v * b4;\r\n    t13 += v * b5;\r\n    t14 += v * b6;\r\n    t15 += v * b7;\r\n    t16 += v * b8;\r\n    t17 += v * b9;\r\n    t18 += v * b10;\r\n    t19 += v * b11;\r\n    t20 += v * b12;\r\n    t21 += v * b13;\r\n    t22 += v * b14;\r\n    t23 += v * b15;\r\n    v = a[9];\r\n    t9 += v * b0;\r\n    t10 += v * b1;\r\n    t11 += v * b2;\r\n    t12 += v * b3;\r\n    t13 += v * b4;\r\n    t14 += v * b5;\r\n    t15 += v * b6;\r\n    t16 += v * b7;\r\n    t17 += v * b8;\r\n    t18 += v * b9;\r\n    t19 += v * b10;\r\n    t20 += v * b11;\r\n    t21 += v * b12;\r\n    t22 += v * b13;\r\n    t23 += v * b14;\r\n    t24 += v * b15;\r\n    v = a[10];\r\n    t10 += v * b0;\r\n    t11 += v * b1;\r\n    t12 += v * b2;\r\n    t13 += v * b3;\r\n    t14 += v * b4;\r\n    t15 += v * b5;\r\n    t16 += v * b6;\r\n    t17 += v * b7;\r\n    t18 += v * b8;\r\n    t19 += v * b9;\r\n    t20 += v * b10;\r\n    t21 += v * b11;\r\n    t22 += v * b12;\r\n    t23 += v * b13;\r\n    t24 += v * b14;\r\n    t25 += v * b15;\r\n    v = a[11];\r\n    t11 += v * b0;\r\n    t12 += v * b1;\r\n    t13 += v * b2;\r\n    t14 += v * b3;\r\n    t15 += v * b4;\r\n    t16 += v * b5;\r\n    t17 += v * b6;\r\n    t18 += v * b7;\r\n    t19 += v * b8;\r\n    t20 += v * b9;\r\n    t21 += v * b10;\r\n    t22 += v * b11;\r\n    t23 += v * b12;\r\n    t24 += v * b13;\r\n    t25 += v * b14;\r\n    t26 += v * b15;\r\n    v = a[12];\r\n    t12 += v * b0;\r\n    t13 += v * b1;\r\n    t14 += v * b2;\r\n    t15 += v * b3;\r\n    t16 += v * b4;\r\n    t17 += v * b5;\r\n    t18 += v * b6;\r\n    t19 += v * b7;\r\n    t20 += v * b8;\r\n    t21 += v * b9;\r\n    t22 += v * b10;\r\n    t23 += v * b11;\r\n    t24 += v * b12;\r\n    t25 += v * b13;\r\n    t26 += v * b14;\r\n    t27 += v * b15;\r\n    v = a[13];\r\n    t13 += v * b0;\r\n    t14 += v * b1;\r\n    t15 += v * b2;\r\n    t16 += v * b3;\r\n    t17 += v * b4;\r\n    t18 += v * b5;\r\n    t19 += v * b6;\r\n    t20 += v * b7;\r\n    t21 += v * b8;\r\n    t22 += v * b9;\r\n    t23 += v * b10;\r\n    t24 += v * b11;\r\n    t25 += v * b12;\r\n    t26 += v * b13;\r\n    t27 += v * b14;\r\n    t28 += v * b15;\r\n    v = a[14];\r\n    t14 += v * b0;\r\n    t15 += v * b1;\r\n    t16 += v * b2;\r\n    t17 += v * b3;\r\n    t18 += v * b4;\r\n    t19 += v * b5;\r\n    t20 += v * b6;\r\n    t21 += v * b7;\r\n    t22 += v * b8;\r\n    t23 += v * b9;\r\n    t24 += v * b10;\r\n    t25 += v * b11;\r\n    t26 += v * b12;\r\n    t27 += v * b13;\r\n    t28 += v * b14;\r\n    t29 += v * b15;\r\n    v = a[15];\r\n    t15 += v * b0;\r\n    t16 += v * b1;\r\n    t17 += v * b2;\r\n    t18 += v * b3;\r\n    t19 += v * b4;\r\n    t20 += v * b5;\r\n    t21 += v * b6;\r\n    t22 += v * b7;\r\n    t23 += v * b8;\r\n    t24 += v * b9;\r\n    t25 += v * b10;\r\n    t26 += v * b11;\r\n    t27 += v * b12;\r\n    t28 += v * b13;\r\n    t29 += v * b14;\r\n    t30 += v * b15;\r\n\r\n    t0 += 38 * t16;\r\n    t1 += 38 * t17;\r\n    t2 += 38 * t18;\r\n    t3 += 38 * t19;\r\n    t4 += 38 * t20;\r\n    t5 += 38 * t21;\r\n    t6 += 38 * t22;\r\n    t7 += 38 * t23;\r\n    t8 += 38 * t24;\r\n    t9 += 38 * t25;\r\n    t10 += 38 * t26;\r\n    t11 += 38 * t27;\r\n    t12 += 38 * t28;\r\n    t13 += 38 * t29;\r\n    t14 += 38 * t30;\r\n    // t15 left as is\r\n\r\n    // first car\r\n    c = 1;\r\n    v = t0 + c + 65535; c = Math.floor(v / 65536); t0 = v - c * 65536;\r\n    v = t1 + c + 65535; c = Math.floor(v / 65536); t1 = v - c * 65536;\r\n    v = t2 + c + 65535; c = Math.floor(v / 65536); t2 = v - c * 65536;\r\n    v = t3 + c + 65535; c = Math.floor(v / 65536); t3 = v - c * 65536;\r\n    v = t4 + c + 65535; c = Math.floor(v / 65536); t4 = v - c * 65536;\r\n    v = t5 + c + 65535; c = Math.floor(v / 65536); t5 = v - c * 65536;\r\n    v = t6 + c + 65535; c = Math.floor(v / 65536); t6 = v - c * 65536;\r\n    v = t7 + c + 65535; c = Math.floor(v / 65536); t7 = v - c * 65536;\r\n    v = t8 + c + 65535; c = Math.floor(v / 65536); t8 = v - c * 65536;\r\n    v = t9 + c + 65535; c = Math.floor(v / 65536); t9 = v - c * 65536;\r\n    v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\r\n    v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\r\n    v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\r\n    v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\r\n    v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\r\n    v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\r\n    t0 += c - 1 + 37 * (c - 1);\r\n\r\n    // second car\r\n    c = 1;\r\n    v = t0 + c + 65535; c = Math.floor(v / 65536); t0 = v - c * 65536;\r\n    v = t1 + c + 65535; c = Math.floor(v / 65536); t1 = v - c * 65536;\r\n    v = t2 + c + 65535; c = Math.floor(v / 65536); t2 = v - c * 65536;\r\n    v = t3 + c + 65535; c = Math.floor(v / 65536); t3 = v - c * 65536;\r\n    v = t4 + c + 65535; c = Math.floor(v / 65536); t4 = v - c * 65536;\r\n    v = t5 + c + 65535; c = Math.floor(v / 65536); t5 = v - c * 65536;\r\n    v = t6 + c + 65535; c = Math.floor(v / 65536); t6 = v - c * 65536;\r\n    v = t7 + c + 65535; c = Math.floor(v / 65536); t7 = v - c * 65536;\r\n    v = t8 + c + 65535; c = Math.floor(v / 65536); t8 = v - c * 65536;\r\n    v = t9 + c + 65535; c = Math.floor(v / 65536); t9 = v - c * 65536;\r\n    v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\r\n    v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\r\n    v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\r\n    v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\r\n    v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\r\n    v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\r\n    t0 += c - 1 + 37 * (c - 1);\r\n\r\n    o[0] = t0;\r\n    o[1] = t1;\r\n    o[2] = t2;\r\n    o[3] = t3;\r\n    o[4] = t4;\r\n    o[5] = t5;\r\n    o[6] = t6;\r\n    o[7] = t7;\r\n    o[8] = t8;\r\n    o[9] = t9;\r\n    o[10] = t10;\r\n    o[11] = t11;\r\n    o[12] = t12;\r\n    o[13] = t13;\r\n    o[14] = t14;\r\n    o[15] = t15;\r\n}\r\n\r\nfunction square(o: GF, a: GF) {\r\n    mul(o, a, a);\r\n}\r\n\r\nfunction inv25519(o: GF, i: GF) {\r\n    const c = gf();\r\n    let a: number;\r\n    for (a = 0; a < 16; a++) {\r\n        c[a] = i[a];\r\n    }\r\n    for (a = 253; a >= 0; a--) {\r\n        square(c, c);\r\n        if (a !== 2 && a !== 4) {\r\n            mul(c, c, i);\r\n        }\r\n    }\r\n    for (a = 0; a < 16; a++) {\r\n        o[a] = c[a];\r\n    }\r\n}\r\n\r\nfunction pow2523(o: GF, i: GF) {\r\n    const c = gf();\r\n    let a: number;\r\n    for (a = 0; a < 16; a++) {\r\n        c[a] = i[a];\r\n    }\r\n    for (a = 250; a >= 0; a--) {\r\n        square(c, c);\r\n        if (a !== 1) {\r\n            mul(c, c, i);\r\n        }\r\n    }\r\n    for (a = 0; a < 16; a++) {\r\n        o[a] = c[a];\r\n    }\r\n}\r\n\r\n\r\nfunction edadd(p: GF[], q: GF[]) {\r\n    const a = gf(), b = gf(), c = gf(),\r\n        d = gf(), e = gf(), f = gf(),\r\n        g = gf(), h = gf(), t = gf();\r\n\r\n    sub(a, p[1], p[0]);\r\n    sub(t, q[1], q[0]);\r\n    mul(a, a, t);\r\n    add(b, p[0], p[1]);\r\n    add(t, q[0], q[1]);\r\n    mul(b, b, t);\r\n    mul(c, p[3], q[3]);\r\n    mul(c, c, D2);\r\n    mul(d, p[2], q[2]);\r\n    add(d, d, d);\r\n    sub(e, b, a);\r\n    sub(f, d, c);\r\n    add(g, d, c);\r\n    add(h, b, a);\r\n\r\n    mul(p[0], e, f);\r\n    mul(p[1], h, g);\r\n    mul(p[2], g, f);\r\n    mul(p[3], e, h);\r\n}\r\n\r\nfunction cswap(p: GF[], q: GF[], b: number) {\r\n    for (let i = 0; i < 4; i++) {\r\n        sel25519(p[i], q[i], b);\r\n    }\r\n}\r\n\r\nfunction pack(r: Uint8Array, p: GF[]) {\r\n    const tx = gf(), ty = gf(), zi = gf();\r\n    inv25519(zi, p[2]);\r\n    mul(tx, p[0], zi);\r\n    mul(ty, p[1], zi);\r\n    pack25519(r, ty);\r\n    r[31] ^= par25519(tx) << 7;\r\n}\r\n\r\nfunction scalarmult(p: GF[], q: GF[], s: Uint8Array) {\r\n    set25519(p[0], gf0);\r\n    set25519(p[1], gf1);\r\n    set25519(p[2], gf1);\r\n    set25519(p[3], gf0);\r\n    for (let i = 255; i >= 0; --i) {\r\n        const b = (s[(i / 8) | 0] >> (i & 7)) & 1;\r\n        cswap(p, q, b);\r\n        edadd(q, p);\r\n        edadd(p, p);\r\n        cswap(p, q, b);\r\n    }\r\n}\r\n\r\nfunction scalarbase(p: GF[], s: Uint8Array) {\r\n    const q = [gf(), gf(), gf(), gf()];\r\n    set25519(q[0], X);\r\n    set25519(q[1], Y);\r\n    set25519(q[2], gf1);\r\n    mul(q[3], X, Y);\r\n    scalarmult(p, q, s);\r\n}\r\n\r\nexport interface KeyPair {\r\n    publicKey: Uint8Array;\r\n    secretKey: Uint8Array;\r\n}\r\n\r\n// Generates key pair from secret 32-byte seed.\r\nexport function generateKeyPairFromSeed(seed: Uint8Array): KeyPair {\r\n    if (seed.length !== SEED_LENGTH) {\r\n        throw new Error(`ed25519: seed must be ${SEED_LENGTH} bytes`);\r\n    }\r\n\r\n    const d = hash(seed);\r\n    d[0] &= 248;\r\n    d[31] &= 127;\r\n    d[31] |= 64;\r\n\r\n    const publicKey = new Uint8Array(32);\r\n    const p = [gf(), gf(), gf(), gf()];\r\n    scalarbase(p, d);\r\n    pack(publicKey, p);\r\n\r\n    const secretKey = new Uint8Array(64);\r\n    secretKey.set(seed);\r\n    secretKey.set(publicKey, 32);\r\n\r\n    return {\r\n        publicKey,\r\n        secretKey\r\n    };\r\n}\r\n\r\nexport function generateKeyPair(prng?: RandomSource): KeyPair {\r\n    const seed = randomBytes(32, prng);\r\n    const result = generateKeyPairFromSeed(seed);\r\n    wipe(seed);\r\n    return result;\r\n}\r\n\r\nexport function extractPublicKeyFromSecretKey(secretKey: Uint8Array): Uint8Array {\r\n    if (secretKey.length !== SECRET_KEY_LENGTH) {\r\n        throw new Error(`ed25519: secret key must be ${SECRET_KEY_LENGTH} bytes`);\r\n    }\r\n    return new Uint8Array(secretKey.subarray(32));\r\n}\r\n\r\nconst L = new Float64Array([\r\n    0xed, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58, 0xd6, 0x9c, 0xf7, 0xa2,\r\n    0xde, 0xf9, 0xde, 0x14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x10\r\n]);\r\n\r\nfunction modL(r: Uint8Array, x: Float64Array) {\r\n    let carry: number;\r\n    let i: number;\r\n    let j: number;\r\n    let k: number;\r\n    for (i = 63; i >= 32; --i) {\r\n        carry = 0;\r\n        for (j = i - 32, k = i - 12; j < k; ++j) {\r\n            x[j] += carry - 16 * x[i] * L[j - (i - 32)];\r\n            carry = Math.floor((x[j] + 128) / 256);\r\n            x[j] -= carry * 256;\r\n        }\r\n        x[j] += carry;\r\n        x[i] = 0;\r\n    }\r\n    carry = 0;\r\n    for (j = 0; j < 32; j++) {\r\n        x[j] += carry - (x[31] >> 4) * L[j];\r\n        carry = x[j] >> 8;\r\n        x[j] &= 255;\r\n    }\r\n    for (j = 0; j < 32; j++) {\r\n        x[j] -= carry * L[j];\r\n    }\r\n    for (i = 0; i < 32; i++) {\r\n        x[i + 1] += x[i] >> 8;\r\n        r[i] = x[i] & 255;\r\n    }\r\n}\r\n\r\nfunction reduce(r: Uint8Array) {\r\n    const x = new Float64Array(64);\r\n    for (let i = 0; i < 64; i++) {\r\n        x[i] = r[i];\r\n    }\r\n    for (let i = 0; i < 64; i++) {\r\n        r[i] = 0;\r\n    }\r\n    modL(r, x);\r\n}\r\n\r\n// Returns 64-byte signature of the message under the 64-byte secret key.\r\nexport function sign(secretKey: Uint8Array, message: Uint8Array): Uint8Array {\r\n    const x = new Float64Array(64);\r\n    const p = [gf(), gf(), gf(), gf()];\r\n\r\n    const d = hash(secretKey.subarray(0, 32));\r\n    d[0] &= 248;\r\n    d[31] &= 127;\r\n    d[31] |= 64;\r\n\r\n    const signature = new Uint8Array(64);\r\n    signature.set(d.subarray(32), 32);\r\n\r\n    const hs = new SHA512();\r\n    hs.update(signature.subarray(32));\r\n    hs.update(message);\r\n    const r = hs.digest();\r\n    hs.clean();\r\n    reduce(r);\r\n    scalarbase(p, r);\r\n    pack(signature, p);\r\n\r\n    hs.reset();\r\n    hs.update(signature.subarray(0, 32));\r\n    hs.update(secretKey.subarray(32));\r\n    hs.update(message);\r\n    const h = hs.digest();\r\n    reduce(h);\r\n\r\n    for (let i = 0; i < 32; i++) {\r\n        x[i] = r[i];\r\n    }\r\n    for (let i = 0; i < 32; i++) {\r\n        for (let j = 0; j < 32; j++) {\r\n            x[i + j] += h[i] * d[j];\r\n        }\r\n    }\r\n    modL(signature.subarray(32), x);\r\n\r\n    return signature;\r\n}\r\n\r\nfunction unpackneg(r: GF[], p: Uint8Array) {\r\n    const t = gf(), chk = gf(), num = gf(),\r\n        den = gf(), den2 = gf(), den4 = gf(),\r\n        den6 = gf();\r\n\r\n    set25519(r[2], gf1);\r\n    unpack25519(r[1], p);\r\n    square(num, r[1]);\r\n    mul(den, num, D);\r\n    sub(num, num, r[2]);\r\n    add(den, r[2], den);\r\n\r\n    square(den2, den);\r\n    square(den4, den2);\r\n    mul(den6, den4, den2);\r\n    mul(t, den6, num);\r\n    mul(t, t, den);\r\n\r\n    pow2523(t, t);\r\n    mul(t, t, num);\r\n    mul(t, t, den);\r\n    mul(t, t, den);\r\n    mul(r[0], t, den);\r\n\r\n    square(chk, r[0]);\r\n    mul(chk, chk, den);\r\n    if (neq25519(chk, num)) {\r\n        mul(r[0], r[0], I);\r\n    }\r\n\r\n    square(chk, r[0]);\r\n    mul(chk, chk, den);\r\n    if (neq25519(chk, num)) {\r\n        return -1;\r\n    }\r\n\r\n    if (par25519(r[0]) === (p[31] >> 7)) {\r\n        sub(r[0], gf0, r[0]);\r\n    }\r\n\r\n    mul(r[3], r[0], r[1]);\r\n    return 0;\r\n}\r\n\r\nexport function verify(publicKey: Uint8Array, message: Uint8Array, signature: Uint8Array): boolean {\r\n    const t = new Uint8Array(32);\r\n    const p = [gf(), gf(), gf(), gf()];\r\n    const q = [gf(), gf(), gf(), gf()];\r\n\r\n    if (signature.length !== SIGNATURE_LENGTH) {\r\n        throw new Error(`ed25519: signature must be ${SIGNATURE_LENGTH} bytes`);\r\n    }\r\n\r\n    if (unpackneg(q, publicKey)) {\r\n        return false;\r\n    }\r\n\r\n    const hs = new SHA512();\r\n    hs.update(signature.subarray(0, 32));\r\n    hs.update(publicKey);\r\n    hs.update(message);\r\n    const h = hs.digest();\r\n    reduce(h);\r\n    scalarmult(p, q, h);\r\n\r\n    scalarbase(q, signature.subarray(32));\r\n    edadd(p, q);\r\n    pack(t, p);\r\n\r\n    if (verify32(signature, t)) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n\r\n/**\r\n * Convert Ed25519 public key to X25519 public key.\r\n *\r\n * Throws if given an invalid public key.\r\n */\r\nexport function convertPublicKeyToX25519(publicKey: Uint8Array): Uint8Array {\r\n    let q = [gf(), gf(), gf(), gf()];\r\n\r\n    if (unpackneg(q, publicKey)) {\r\n        throw new Error(\"Ed25519: invalid public key\");\r\n    }\r\n\r\n    // Formula: montgomeryX = (edwardsY + 1)*inverse(1 - edwardsY) mod p\r\n    let a = gf();\r\n    let b = gf();\r\n    let y = q[1];\r\n    add(a, gf1, y);\r\n    sub(b, gf1, y);\r\n    inv25519(b, b);\r\n    mul(a, a, b);\r\n\r\n    let z = new Uint8Array(32);\r\n    pack25519(z, a);\r\n    return z;\r\n}\r\n\r\n/**\r\n *  Convert Ed25519 secret (private) key to X25519 secret key.\r\n */\r\nexport function convertSecretKeyToX25519(secretKey: Uint8Array): Uint8Array {\r\n    const d = hash(secretKey.subarray(0, 32));\r\n    d[0] &= 248;\r\n    d[31] &= 127;\r\n    d[31] |= 64;\r\n    const o = new Uint8Array(d.subarray(0, 32));\r\n    wipe(d);\r\n    return o;\r\n}\r\n", null, null, null, "//# sourceMappingURL=types.js.map", null, null, null, "'use strict';\r\n\r\nmodule.exports = function () {\r\n  throw new Error(\r\n    'ws does not work in the browser. Browser clients must use the native ' +\r\n      'WebSocket object'\r\n  );\r\n};\r\n", "/**\r\n * Lodash (Custom Build) <https://lodash.com/>\r\n * Build: `lodash modularize exports=\"npm\" -o ./`\r\n * Copyright JS Foundation and other contributors <https://js.foundation/>\r\n * Released under MIT license <https://lodash.com/license>\r\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\r\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\r\n */\r\n\r\n/** Used as the size to enable large array optimizations. */\r\nvar LARGE_ARRAY_SIZE = 200;\r\n\r\n/** Used to stand-in for `undefined` hash values. */\r\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\r\n\r\n/** Used to compose bitmasks for value comparisons. */\r\nvar COMPARE_PARTIAL_FLAG = 1,\r\n    COMPARE_UNORDERED_FLAG = 2;\r\n\r\n/** Used as references for various `Number` constants. */\r\nvar MAX_SAFE_INTEGER = 9007199254740991;\r\n\r\n/** `Object#toString` result references. */\r\nvar argsTag = '[object Arguments]',\r\n    arrayTag = '[object Array]',\r\n    asyncTag = '[object AsyncFunction]',\r\n    boolTag = '[object Boolean]',\r\n    dateTag = '[object Date]',\r\n    errorTag = '[object Error]',\r\n    funcTag = '[object Function]',\r\n    genTag = '[object GeneratorFunction]',\r\n    mapTag = '[object Map]',\r\n    numberTag = '[object Number]',\r\n    nullTag = '[object Null]',\r\n    objectTag = '[object Object]',\r\n    promiseTag = '[object Promise]',\r\n    proxyTag = '[object Proxy]',\r\n    regexpTag = '[object RegExp]',\r\n    setTag = '[object Set]',\r\n    stringTag = '[object String]',\r\n    symbolTag = '[object Symbol]',\r\n    undefinedTag = '[object Undefined]',\r\n    weakMapTag = '[object WeakMap]';\r\n\r\nvar arrayBufferTag = '[object ArrayBuffer]',\r\n    dataViewTag = '[object DataView]',\r\n    float32Tag = '[object Float32Array]',\r\n    float64Tag = '[object Float64Array]',\r\n    int8Tag = '[object Int8Array]',\r\n    int16Tag = '[object Int16Array]',\r\n    int32Tag = '[object Int32Array]',\r\n    uint8Tag = '[object Uint8Array]',\r\n    uint8ClampedTag = '[object Uint8ClampedArray]',\r\n    uint16Tag = '[object Uint16Array]',\r\n    uint32Tag = '[object Uint32Array]';\r\n\r\n/**\r\n * Used to match `RegExp`\r\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\r\n */\r\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\r\n\r\n/** Used to detect host constructors (Safari). */\r\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\r\n\r\n/** Used to detect unsigned integer values. */\r\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\r\n\r\n/** Used to identify `toStringTag` values of typed arrays. */\r\nvar typedArrayTags = {};\r\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\r\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\r\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\r\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\r\ntypedArrayTags[uint32Tag] = true;\r\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\r\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\r\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\r\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\r\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\r\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\r\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\r\ntypedArrayTags[weakMapTag] = false;\r\n\r\n/** Detect free variable `global` from Node.js. */\r\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\r\n\r\n/** Detect free variable `self`. */\r\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\r\n\r\n/** Used as a reference to the global object. */\r\nvar root = freeGlobal || freeSelf || Function('return this')();\r\n\r\n/** Detect free variable `exports`. */\r\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\r\n\r\n/** Detect free variable `module`. */\r\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\r\n\r\n/** Detect the popular CommonJS extension `module.exports`. */\r\nvar moduleExports = freeModule && freeModule.exports === freeExports;\r\n\r\n/** Detect free variable `process` from Node.js. */\r\nvar freeProcess = moduleExports && freeGlobal.process;\r\n\r\n/** Used to access faster Node.js helpers. */\r\nvar nodeUtil = (function() {\r\n  try {\r\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\r\n  } catch (e) {}\r\n}());\r\n\r\n/* Node.js helper references. */\r\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\r\n\r\n/**\r\n * A specialized version of `_.filter` for arrays without support for\r\n * iteratee shorthands.\r\n *\r\n * @private\r\n * @param {Array} [array] The array to iterate over.\r\n * @param {Function} predicate The function invoked per iteration.\r\n * @returns {Array} Returns the new filtered array.\r\n */\r\nfunction arrayFilter(array, predicate) {\r\n  var index = -1,\r\n      length = array == null ? 0 : array.length,\r\n      resIndex = 0,\r\n      result = [];\r\n\r\n  while (++index < length) {\r\n    var value = array[index];\r\n    if (predicate(value, index, array)) {\r\n      result[resIndex++] = value;\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\n/**\r\n * Appends the elements of `values` to `array`.\r\n *\r\n * @private\r\n * @param {Array} array The array to modify.\r\n * @param {Array} values The values to append.\r\n * @returns {Array} Returns `array`.\r\n */\r\nfunction arrayPush(array, values) {\r\n  var index = -1,\r\n      length = values.length,\r\n      offset = array.length;\r\n\r\n  while (++index < length) {\r\n    array[offset + index] = values[index];\r\n  }\r\n  return array;\r\n}\r\n\r\n/**\r\n * A specialized version of `_.some` for arrays without support for iteratee\r\n * shorthands.\r\n *\r\n * @private\r\n * @param {Array} [array] The array to iterate over.\r\n * @param {Function} predicate The function invoked per iteration.\r\n * @returns {boolean} Returns `true` if any element passes the predicate check,\r\n *  else `false`.\r\n */\r\nfunction arraySome(array, predicate) {\r\n  var index = -1,\r\n      length = array == null ? 0 : array.length;\r\n\r\n  while (++index < length) {\r\n    if (predicate(array[index], index, array)) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\n/**\r\n * The base implementation of `_.times` without support for iteratee shorthands\r\n * or max array length checks.\r\n *\r\n * @private\r\n * @param {number} n The number of times to invoke `iteratee`.\r\n * @param {Function} iteratee The function invoked per iteration.\r\n * @returns {Array} Returns the array of results.\r\n */\r\nfunction baseTimes(n, iteratee) {\r\n  var index = -1,\r\n      result = Array(n);\r\n\r\n  while (++index < n) {\r\n    result[index] = iteratee(index);\r\n  }\r\n  return result;\r\n}\r\n\r\n/**\r\n * The base implementation of `_.unary` without support for storing metadata.\r\n *\r\n * @private\r\n * @param {Function} func The function to cap arguments for.\r\n * @returns {Function} Returns the new capped function.\r\n */\r\nfunction baseUnary(func) {\r\n  return function(value) {\r\n    return func(value);\r\n  };\r\n}\r\n\r\n/**\r\n * Checks if a `cache` value for `key` exists.\r\n *\r\n * @private\r\n * @param {Object} cache The cache to query.\r\n * @param {string} key The key of the entry to check.\r\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\r\n */\r\nfunction cacheHas(cache, key) {\r\n  return cache.has(key);\r\n}\r\n\r\n/**\r\n * Gets the value at `key` of `object`.\r\n *\r\n * @private\r\n * @param {Object} [object] The object to query.\r\n * @param {string} key The key of the property to get.\r\n * @returns {*} Returns the property value.\r\n */\r\nfunction getValue(object, key) {\r\n  return object == null ? undefined : object[key];\r\n}\r\n\r\n/**\r\n * Converts `map` to its key-value pairs.\r\n *\r\n * @private\r\n * @param {Object} map The map to convert.\r\n * @returns {Array} Returns the key-value pairs.\r\n */\r\nfunction mapToArray(map) {\r\n  var index = -1,\r\n      result = Array(map.size);\r\n\r\n  map.forEach(function(value, key) {\r\n    result[++index] = [key, value];\r\n  });\r\n  return result;\r\n}\r\n\r\n/**\r\n * Creates a unary function that invokes `func` with its argument transformed.\r\n *\r\n * @private\r\n * @param {Function} func The function to wrap.\r\n * @param {Function} transform The argument transform.\r\n * @returns {Function} Returns the new function.\r\n */\r\nfunction overArg(func, transform) {\r\n  return function(arg) {\r\n    return func(transform(arg));\r\n  };\r\n}\r\n\r\n/**\r\n * Converts `set` to an array of its values.\r\n *\r\n * @private\r\n * @param {Object} set The set to convert.\r\n * @returns {Array} Returns the values.\r\n */\r\nfunction setToArray(set) {\r\n  var index = -1,\r\n      result = Array(set.size);\r\n\r\n  set.forEach(function(value) {\r\n    result[++index] = value;\r\n  });\r\n  return result;\r\n}\r\n\r\n/** Used for built-in method references. */\r\nvar arrayProto = Array.prototype,\r\n    funcProto = Function.prototype,\r\n    objectProto = Object.prototype;\r\n\r\n/** Used to detect overreaching core-js shims. */\r\nvar coreJsData = root['__core-js_shared__'];\r\n\r\n/** Used to resolve the decompiled source of functions. */\r\nvar funcToString = funcProto.toString;\r\n\r\n/** Used to check objects for own properties. */\r\nvar hasOwnProperty = objectProto.hasOwnProperty;\r\n\r\n/** Used to detect methods masquerading as native. */\r\nvar maskSrcKey = (function() {\r\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\r\n  return uid ? ('Symbol(src)_1.' + uid) : '';\r\n}());\r\n\r\n/**\r\n * Used to resolve the\r\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\r\n * of values.\r\n */\r\nvar nativeObjectToString = objectProto.toString;\r\n\r\n/** Used to detect if a method is native. */\r\nvar reIsNative = RegExp('^' +\r\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\r\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\r\n);\r\n\r\n/** Built-in value references. */\r\nvar Buffer = moduleExports ? root.Buffer : undefined,\r\n    Symbol = root.Symbol,\r\n    Uint8Array = root.Uint8Array,\r\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\r\n    splice = arrayProto.splice,\r\n    symToStringTag = Symbol ? Symbol.toStringTag : undefined;\r\n\r\n/* Built-in method references for those with the same name as other `lodash` methods. */\r\nvar nativeGetSymbols = Object.getOwnPropertySymbols,\r\n    nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\r\n    nativeKeys = overArg(Object.keys, Object);\r\n\r\n/* Built-in method references that are verified to be native. */\r\nvar DataView = getNative(root, 'DataView'),\r\n    Map = getNative(root, 'Map'),\r\n    Promise = getNative(root, 'Promise'),\r\n    Set = getNative(root, 'Set'),\r\n    WeakMap = getNative(root, 'WeakMap'),\r\n    nativeCreate = getNative(Object, 'create');\r\n\r\n/** Used to detect maps, sets, and weakmaps. */\r\nvar dataViewCtorString = toSource(DataView),\r\n    mapCtorString = toSource(Map),\r\n    promiseCtorString = toSource(Promise),\r\n    setCtorString = toSource(Set),\r\n    weakMapCtorString = toSource(WeakMap);\r\n\r\n/** Used to convert symbols to primitives and strings. */\r\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\r\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\r\n\r\n/**\r\n * Creates a hash object.\r\n *\r\n * @private\r\n * @constructor\r\n * @param {Array} [entries] The key-value pairs to cache.\r\n */\r\nfunction Hash(entries) {\r\n  var index = -1,\r\n      length = entries == null ? 0 : entries.length;\r\n\r\n  this.clear();\r\n  while (++index < length) {\r\n    var entry = entries[index];\r\n    this.set(entry[0], entry[1]);\r\n  }\r\n}\r\n\r\n/**\r\n * Removes all key-value entries from the hash.\r\n *\r\n * @private\r\n * @name clear\r\n * @memberOf Hash\r\n */\r\nfunction hashClear() {\r\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\r\n  this.size = 0;\r\n}\r\n\r\n/**\r\n * Removes `key` and its value from the hash.\r\n *\r\n * @private\r\n * @name delete\r\n * @memberOf Hash\r\n * @param {Object} hash The hash to modify.\r\n * @param {string} key The key of the value to remove.\r\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\r\n */\r\nfunction hashDelete(key) {\r\n  var result = this.has(key) && delete this.__data__[key];\r\n  this.size -= result ? 1 : 0;\r\n  return result;\r\n}\r\n\r\n/**\r\n * Gets the hash value for `key`.\r\n *\r\n * @private\r\n * @name get\r\n * @memberOf Hash\r\n * @param {string} key The key of the value to get.\r\n * @returns {*} Returns the entry value.\r\n */\r\nfunction hashGet(key) {\r\n  var data = this.__data__;\r\n  if (nativeCreate) {\r\n    var result = data[key];\r\n    return result === HASH_UNDEFINED ? undefined : result;\r\n  }\r\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\r\n}\r\n\r\n/**\r\n * Checks if a hash value for `key` exists.\r\n *\r\n * @private\r\n * @name has\r\n * @memberOf Hash\r\n * @param {string} key The key of the entry to check.\r\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\r\n */\r\nfunction hashHas(key) {\r\n  var data = this.__data__;\r\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\r\n}\r\n\r\n/**\r\n * Sets the hash `key` to `value`.\r\n *\r\n * @private\r\n * @name set\r\n * @memberOf Hash\r\n * @param {string} key The key of the value to set.\r\n * @param {*} value The value to set.\r\n * @returns {Object} Returns the hash instance.\r\n */\r\nfunction hashSet(key, value) {\r\n  var data = this.__data__;\r\n  this.size += this.has(key) ? 0 : 1;\r\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\r\n  return this;\r\n}\r\n\r\n// Add methods to `Hash`.\r\nHash.prototype.clear = hashClear;\r\nHash.prototype['delete'] = hashDelete;\r\nHash.prototype.get = hashGet;\r\nHash.prototype.has = hashHas;\r\nHash.prototype.set = hashSet;\r\n\r\n/**\r\n * Creates an list cache object.\r\n *\r\n * @private\r\n * @constructor\r\n * @param {Array} [entries] The key-value pairs to cache.\r\n */\r\nfunction ListCache(entries) {\r\n  var index = -1,\r\n      length = entries == null ? 0 : entries.length;\r\n\r\n  this.clear();\r\n  while (++index < length) {\r\n    var entry = entries[index];\r\n    this.set(entry[0], entry[1]);\r\n  }\r\n}\r\n\r\n/**\r\n * Removes all key-value entries from the list cache.\r\n *\r\n * @private\r\n * @name clear\r\n * @memberOf ListCache\r\n */\r\nfunction listCacheClear() {\r\n  this.__data__ = [];\r\n  this.size = 0;\r\n}\r\n\r\n/**\r\n * Removes `key` and its value from the list cache.\r\n *\r\n * @private\r\n * @name delete\r\n * @memberOf ListCache\r\n * @param {string} key The key of the value to remove.\r\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\r\n */\r\nfunction listCacheDelete(key) {\r\n  var data = this.__data__,\r\n      index = assocIndexOf(data, key);\r\n\r\n  if (index < 0) {\r\n    return false;\r\n  }\r\n  var lastIndex = data.length - 1;\r\n  if (index == lastIndex) {\r\n    data.pop();\r\n  } else {\r\n    splice.call(data, index, 1);\r\n  }\r\n  --this.size;\r\n  return true;\r\n}\r\n\r\n/**\r\n * Gets the list cache value for `key`.\r\n *\r\n * @private\r\n * @name get\r\n * @memberOf ListCache\r\n * @param {string} key The key of the value to get.\r\n * @returns {*} Returns the entry value.\r\n */\r\nfunction listCacheGet(key) {\r\n  var data = this.__data__,\r\n      index = assocIndexOf(data, key);\r\n\r\n  return index < 0 ? undefined : data[index][1];\r\n}\r\n\r\n/**\r\n * Checks if a list cache value for `key` exists.\r\n *\r\n * @private\r\n * @name has\r\n * @memberOf ListCache\r\n * @param {string} key The key of the entry to check.\r\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\r\n */\r\nfunction listCacheHas(key) {\r\n  return assocIndexOf(this.__data__, key) > -1;\r\n}\r\n\r\n/**\r\n * Sets the list cache `key` to `value`.\r\n *\r\n * @private\r\n * @name set\r\n * @memberOf ListCache\r\n * @param {string} key The key of the value to set.\r\n * @param {*} value The value to set.\r\n * @returns {Object} Returns the list cache instance.\r\n */\r\nfunction listCacheSet(key, value) {\r\n  var data = this.__data__,\r\n      index = assocIndexOf(data, key);\r\n\r\n  if (index < 0) {\r\n    ++this.size;\r\n    data.push([key, value]);\r\n  } else {\r\n    data[index][1] = value;\r\n  }\r\n  return this;\r\n}\r\n\r\n// Add methods to `ListCache`.\r\nListCache.prototype.clear = listCacheClear;\r\nListCache.prototype['delete'] = listCacheDelete;\r\nListCache.prototype.get = listCacheGet;\r\nListCache.prototype.has = listCacheHas;\r\nListCache.prototype.set = listCacheSet;\r\n\r\n/**\r\n * Creates a map cache object to store key-value pairs.\r\n *\r\n * @private\r\n * @constructor\r\n * @param {Array} [entries] The key-value pairs to cache.\r\n */\r\nfunction MapCache(entries) {\r\n  var index = -1,\r\n      length = entries == null ? 0 : entries.length;\r\n\r\n  this.clear();\r\n  while (++index < length) {\r\n    var entry = entries[index];\r\n    this.set(entry[0], entry[1]);\r\n  }\r\n}\r\n\r\n/**\r\n * Removes all key-value entries from the map.\r\n *\r\n * @private\r\n * @name clear\r\n * @memberOf MapCache\r\n */\r\nfunction mapCacheClear() {\r\n  this.size = 0;\r\n  this.__data__ = {\r\n    'hash': new Hash,\r\n    'map': new (Map || ListCache),\r\n    'string': new Hash\r\n  };\r\n}\r\n\r\n/**\r\n * Removes `key` and its value from the map.\r\n *\r\n * @private\r\n * @name delete\r\n * @memberOf MapCache\r\n * @param {string} key The key of the value to remove.\r\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\r\n */\r\nfunction mapCacheDelete(key) {\r\n  var result = getMapData(this, key)['delete'](key);\r\n  this.size -= result ? 1 : 0;\r\n  return result;\r\n}\r\n\r\n/**\r\n * Gets the map value for `key`.\r\n *\r\n * @private\r\n * @name get\r\n * @memberOf MapCache\r\n * @param {string} key The key of the value to get.\r\n * @returns {*} Returns the entry value.\r\n */\r\nfunction mapCacheGet(key) {\r\n  return getMapData(this, key).get(key);\r\n}\r\n\r\n/**\r\n * Checks if a map value for `key` exists.\r\n *\r\n * @private\r\n * @name has\r\n * @memberOf MapCache\r\n * @param {string} key The key of the entry to check.\r\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\r\n */\r\nfunction mapCacheHas(key) {\r\n  return getMapData(this, key).has(key);\r\n}\r\n\r\n/**\r\n * Sets the map `key` to `value`.\r\n *\r\n * @private\r\n * @name set\r\n * @memberOf MapCache\r\n * @param {string} key The key of the value to set.\r\n * @param {*} value The value to set.\r\n * @returns {Object} Returns the map cache instance.\r\n */\r\nfunction mapCacheSet(key, value) {\r\n  var data = getMapData(this, key),\r\n      size = data.size;\r\n\r\n  data.set(key, value);\r\n  this.size += data.size == size ? 0 : 1;\r\n  return this;\r\n}\r\n\r\n// Add methods to `MapCache`.\r\nMapCache.prototype.clear = mapCacheClear;\r\nMapCache.prototype['delete'] = mapCacheDelete;\r\nMapCache.prototype.get = mapCacheGet;\r\nMapCache.prototype.has = mapCacheHas;\r\nMapCache.prototype.set = mapCacheSet;\r\n\r\n/**\r\n *\r\n * Creates an array cache object to store unique values.\r\n *\r\n * @private\r\n * @constructor\r\n * @param {Array} [values] The values to cache.\r\n */\r\nfunction SetCache(values) {\r\n  var index = -1,\r\n      length = values == null ? 0 : values.length;\r\n\r\n  this.__data__ = new MapCache;\r\n  while (++index < length) {\r\n    this.add(values[index]);\r\n  }\r\n}\r\n\r\n/**\r\n * Adds `value` to the array cache.\r\n *\r\n * @private\r\n * @name add\r\n * @memberOf SetCache\r\n * @alias push\r\n * @param {*} value The value to cache.\r\n * @returns {Object} Returns the cache instance.\r\n */\r\nfunction setCacheAdd(value) {\r\n  this.__data__.set(value, HASH_UNDEFINED);\r\n  return this;\r\n}\r\n\r\n/**\r\n * Checks if `value` is in the array cache.\r\n *\r\n * @private\r\n * @name has\r\n * @memberOf SetCache\r\n * @param {*} value The value to search for.\r\n * @returns {number} Returns `true` if `value` is found, else `false`.\r\n */\r\nfunction setCacheHas(value) {\r\n  return this.__data__.has(value);\r\n}\r\n\r\n// Add methods to `SetCache`.\r\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\r\nSetCache.prototype.has = setCacheHas;\r\n\r\n/**\r\n * Creates a stack cache object to store key-value pairs.\r\n *\r\n * @private\r\n * @constructor\r\n * @param {Array} [entries] The key-value pairs to cache.\r\n */\r\nfunction Stack(entries) {\r\n  var data = this.__data__ = new ListCache(entries);\r\n  this.size = data.size;\r\n}\r\n\r\n/**\r\n * Removes all key-value entries from the stack.\r\n *\r\n * @private\r\n * @name clear\r\n * @memberOf Stack\r\n */\r\nfunction stackClear() {\r\n  this.__data__ = new ListCache;\r\n  this.size = 0;\r\n}\r\n\r\n/**\r\n * Removes `key` and its value from the stack.\r\n *\r\n * @private\r\n * @name delete\r\n * @memberOf Stack\r\n * @param {string} key The key of the value to remove.\r\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\r\n */\r\nfunction stackDelete(key) {\r\n  var data = this.__data__,\r\n      result = data['delete'](key);\r\n\r\n  this.size = data.size;\r\n  return result;\r\n}\r\n\r\n/**\r\n * Gets the stack value for `key`.\r\n *\r\n * @private\r\n * @name get\r\n * @memberOf Stack\r\n * @param {string} key The key of the value to get.\r\n * @returns {*} Returns the entry value.\r\n */\r\nfunction stackGet(key) {\r\n  return this.__data__.get(key);\r\n}\r\n\r\n/**\r\n * Checks if a stack value for `key` exists.\r\n *\r\n * @private\r\n * @name has\r\n * @memberOf Stack\r\n * @param {string} key The key of the entry to check.\r\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\r\n */\r\nfunction stackHas(key) {\r\n  return this.__data__.has(key);\r\n}\r\n\r\n/**\r\n * Sets the stack `key` to `value`.\r\n *\r\n * @private\r\n * @name set\r\n * @memberOf Stack\r\n * @param {string} key The key of the value to set.\r\n * @param {*} value The value to set.\r\n * @returns {Object} Returns the stack cache instance.\r\n */\r\nfunction stackSet(key, value) {\r\n  var data = this.__data__;\r\n  if (data instanceof ListCache) {\r\n    var pairs = data.__data__;\r\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\r\n      pairs.push([key, value]);\r\n      this.size = ++data.size;\r\n      return this;\r\n    }\r\n    data = this.__data__ = new MapCache(pairs);\r\n  }\r\n  data.set(key, value);\r\n  this.size = data.size;\r\n  return this;\r\n}\r\n\r\n// Add methods to `Stack`.\r\nStack.prototype.clear = stackClear;\r\nStack.prototype['delete'] = stackDelete;\r\nStack.prototype.get = stackGet;\r\nStack.prototype.has = stackHas;\r\nStack.prototype.set = stackSet;\r\n\r\n/**\r\n * Creates an array of the enumerable property names of the array-like `value`.\r\n *\r\n * @private\r\n * @param {*} value The value to query.\r\n * @param {boolean} inherited Specify returning inherited property names.\r\n * @returns {Array} Returns the array of property names.\r\n */\r\nfunction arrayLikeKeys(value, inherited) {\r\n  var isArr = isArray(value),\r\n      isArg = !isArr && isArguments(value),\r\n      isBuff = !isArr && !isArg && isBuffer(value),\r\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\r\n      skipIndexes = isArr || isArg || isBuff || isType,\r\n      result = skipIndexes ? baseTimes(value.length, String) : [],\r\n      length = result.length;\r\n\r\n  for (var key in value) {\r\n    if ((inherited || hasOwnProperty.call(value, key)) &&\r\n        !(skipIndexes && (\r\n           // Safari 9 has enumerable `arguments.length` in strict mode.\r\n           key == 'length' ||\r\n           // Node.js 0.10 has enumerable non-index properties on buffers.\r\n           (isBuff && (key == 'offset' || key == 'parent')) ||\r\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\r\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\r\n           // Skip index properties.\r\n           isIndex(key, length)\r\n        ))) {\r\n      result.push(key);\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\n/**\r\n * Gets the index at which the `key` is found in `array` of key-value pairs.\r\n *\r\n * @private\r\n * @param {Array} array The array to inspect.\r\n * @param {*} key The key to search for.\r\n * @returns {number} Returns the index of the matched value, else `-1`.\r\n */\r\nfunction assocIndexOf(array, key) {\r\n  var length = array.length;\r\n  while (length--) {\r\n    if (eq(array[length][0], key)) {\r\n      return length;\r\n    }\r\n  }\r\n  return -1;\r\n}\r\n\r\n/**\r\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\r\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\r\n * symbols of `object`.\r\n *\r\n * @private\r\n * @param {Object} object The object to query.\r\n * @param {Function} keysFunc The function to get the keys of `object`.\r\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\r\n * @returns {Array} Returns the array of property names and symbols.\r\n */\r\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\r\n  var result = keysFunc(object);\r\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\r\n}\r\n\r\n/**\r\n * The base implementation of `getTag` without fallbacks for buggy environments.\r\n *\r\n * @private\r\n * @param {*} value The value to query.\r\n * @returns {string} Returns the `toStringTag`.\r\n */\r\nfunction baseGetTag(value) {\r\n  if (value == null) {\r\n    return value === undefined ? undefinedTag : nullTag;\r\n  }\r\n  return (symToStringTag && symToStringTag in Object(value))\r\n    ? getRawTag(value)\r\n    : objectToString(value);\r\n}\r\n\r\n/**\r\n * The base implementation of `_.isArguments`.\r\n *\r\n * @private\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\r\n */\r\nfunction baseIsArguments(value) {\r\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\r\n}\r\n\r\n/**\r\n * The base implementation of `_.isEqual` which supports partial comparisons\r\n * and tracks traversed objects.\r\n *\r\n * @private\r\n * @param {*} value The value to compare.\r\n * @param {*} other The other value to compare.\r\n * @param {boolean} bitmask The bitmask flags.\r\n *  1 - Unordered comparison\r\n *  2 - Partial comparison\r\n * @param {Function} [customizer] The function to customize comparisons.\r\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\r\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\r\n */\r\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\r\n  if (value === other) {\r\n    return true;\r\n  }\r\n  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\r\n    return value !== value && other !== other;\r\n  }\r\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\r\n}\r\n\r\n/**\r\n * A specialized version of `baseIsEqual` for arrays and objects which performs\r\n * deep comparisons and tracks traversed objects enabling objects with circular\r\n * references to be compared.\r\n *\r\n * @private\r\n * @param {Object} object The object to compare.\r\n * @param {Object} other The other object to compare.\r\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\r\n * @param {Function} customizer The function to customize comparisons.\r\n * @param {Function} equalFunc The function to determine equivalents of values.\r\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\r\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\r\n */\r\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\r\n  var objIsArr = isArray(object),\r\n      othIsArr = isArray(other),\r\n      objTag = objIsArr ? arrayTag : getTag(object),\r\n      othTag = othIsArr ? arrayTag : getTag(other);\r\n\r\n  objTag = objTag == argsTag ? objectTag : objTag;\r\n  othTag = othTag == argsTag ? objectTag : othTag;\r\n\r\n  var objIsObj = objTag == objectTag,\r\n      othIsObj = othTag == objectTag,\r\n      isSameTag = objTag == othTag;\r\n\r\n  if (isSameTag && isBuffer(object)) {\r\n    if (!isBuffer(other)) {\r\n      return false;\r\n    }\r\n    objIsArr = true;\r\n    objIsObj = false;\r\n  }\r\n  if (isSameTag && !objIsObj) {\r\n    stack || (stack = new Stack);\r\n    return (objIsArr || isTypedArray(object))\r\n      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\r\n      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\r\n  }\r\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\r\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\r\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\r\n\r\n    if (objIsWrapped || othIsWrapped) {\r\n      var objUnwrapped = objIsWrapped ? object.value() : object,\r\n          othUnwrapped = othIsWrapped ? other.value() : other;\r\n\r\n      stack || (stack = new Stack);\r\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\r\n    }\r\n  }\r\n  if (!isSameTag) {\r\n    return false;\r\n  }\r\n  stack || (stack = new Stack);\r\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\r\n}\r\n\r\n/**\r\n * The base implementation of `_.isNative` without bad shim checks.\r\n *\r\n * @private\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is a native function,\r\n *  else `false`.\r\n */\r\nfunction baseIsNative(value) {\r\n  if (!isObject(value) || isMasked(value)) {\r\n    return false;\r\n  }\r\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\r\n  return pattern.test(toSource(value));\r\n}\r\n\r\n/**\r\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\r\n *\r\n * @private\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\r\n */\r\nfunction baseIsTypedArray(value) {\r\n  return isObjectLike(value) &&\r\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\r\n}\r\n\r\n/**\r\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\r\n *\r\n * @private\r\n * @param {Object} object The object to query.\r\n * @returns {Array} Returns the array of property names.\r\n */\r\nfunction baseKeys(object) {\r\n  if (!isPrototype(object)) {\r\n    return nativeKeys(object);\r\n  }\r\n  var result = [];\r\n  for (var key in Object(object)) {\r\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\r\n      result.push(key);\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\n/**\r\n * A specialized version of `baseIsEqualDeep` for arrays with support for\r\n * partial deep comparisons.\r\n *\r\n * @private\r\n * @param {Array} array The array to compare.\r\n * @param {Array} other The other array to compare.\r\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\r\n * @param {Function} customizer The function to customize comparisons.\r\n * @param {Function} equalFunc The function to determine equivalents of values.\r\n * @param {Object} stack Tracks traversed `array` and `other` objects.\r\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\r\n */\r\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\r\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\r\n      arrLength = array.length,\r\n      othLength = other.length;\r\n\r\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\r\n    return false;\r\n  }\r\n  // Assume cyclic values are equal.\r\n  var stacked = stack.get(array);\r\n  if (stacked && stack.get(other)) {\r\n    return stacked == other;\r\n  }\r\n  var index = -1,\r\n      result = true,\r\n      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\r\n\r\n  stack.set(array, other);\r\n  stack.set(other, array);\r\n\r\n  // Ignore non-index properties.\r\n  while (++index < arrLength) {\r\n    var arrValue = array[index],\r\n        othValue = other[index];\r\n\r\n    if (customizer) {\r\n      var compared = isPartial\r\n        ? customizer(othValue, arrValue, index, other, array, stack)\r\n        : customizer(arrValue, othValue, index, array, other, stack);\r\n    }\r\n    if (compared !== undefined) {\r\n      if (compared) {\r\n        continue;\r\n      }\r\n      result = false;\r\n      break;\r\n    }\r\n    // Recursively compare arrays (susceptible to call stack limits).\r\n    if (seen) {\r\n      if (!arraySome(other, function(othValue, othIndex) {\r\n            if (!cacheHas(seen, othIndex) &&\r\n                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\r\n              return seen.push(othIndex);\r\n            }\r\n          })) {\r\n        result = false;\r\n        break;\r\n      }\r\n    } else if (!(\r\n          arrValue === othValue ||\r\n            equalFunc(arrValue, othValue, bitmask, customizer, stack)\r\n        )) {\r\n      result = false;\r\n      break;\r\n    }\r\n  }\r\n  stack['delete'](array);\r\n  stack['delete'](other);\r\n  return result;\r\n}\r\n\r\n/**\r\n * A specialized version of `baseIsEqualDeep` for comparing objects of\r\n * the same `toStringTag`.\r\n *\r\n * **Note:** This function only supports comparing values with tags of\r\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\r\n *\r\n * @private\r\n * @param {Object} object The object to compare.\r\n * @param {Object} other The other object to compare.\r\n * @param {string} tag The `toStringTag` of the objects to compare.\r\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\r\n * @param {Function} customizer The function to customize comparisons.\r\n * @param {Function} equalFunc The function to determine equivalents of values.\r\n * @param {Object} stack Tracks traversed `object` and `other` objects.\r\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\r\n */\r\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\r\n  switch (tag) {\r\n    case dataViewTag:\r\n      if ((object.byteLength != other.byteLength) ||\r\n          (object.byteOffset != other.byteOffset)) {\r\n        return false;\r\n      }\r\n      object = object.buffer;\r\n      other = other.buffer;\r\n\r\n    case arrayBufferTag:\r\n      if ((object.byteLength != other.byteLength) ||\r\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\r\n        return false;\r\n      }\r\n      return true;\r\n\r\n    case boolTag:\r\n    case dateTag:\r\n    case numberTag:\r\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\r\n      // Invalid dates are coerced to `NaN`.\r\n      return eq(+object, +other);\r\n\r\n    case errorTag:\r\n      return object.name == other.name && object.message == other.message;\r\n\r\n    case regexpTag:\r\n    case stringTag:\r\n      // Coerce regexes to strings and treat strings, primitives and objects,\r\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\r\n      // for more details.\r\n      return object == (other + '');\r\n\r\n    case mapTag:\r\n      var convert = mapToArray;\r\n\r\n    case setTag:\r\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\r\n      convert || (convert = setToArray);\r\n\r\n      if (object.size != other.size && !isPartial) {\r\n        return false;\r\n      }\r\n      // Assume cyclic values are equal.\r\n      var stacked = stack.get(object);\r\n      if (stacked) {\r\n        return stacked == other;\r\n      }\r\n      bitmask |= COMPARE_UNORDERED_FLAG;\r\n\r\n      // Recursively compare objects (susceptible to call stack limits).\r\n      stack.set(object, other);\r\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\r\n      stack['delete'](object);\r\n      return result;\r\n\r\n    case symbolTag:\r\n      if (symbolValueOf) {\r\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\r\n      }\r\n  }\r\n  return false;\r\n}\r\n\r\n/**\r\n * A specialized version of `baseIsEqualDeep` for objects with support for\r\n * partial deep comparisons.\r\n *\r\n * @private\r\n * @param {Object} object The object to compare.\r\n * @param {Object} other The other object to compare.\r\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\r\n * @param {Function} customizer The function to customize comparisons.\r\n * @param {Function} equalFunc The function to determine equivalents of values.\r\n * @param {Object} stack Tracks traversed `object` and `other` objects.\r\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\r\n */\r\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\r\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\r\n      objProps = getAllKeys(object),\r\n      objLength = objProps.length,\r\n      othProps = getAllKeys(other),\r\n      othLength = othProps.length;\r\n\r\n  if (objLength != othLength && !isPartial) {\r\n    return false;\r\n  }\r\n  var index = objLength;\r\n  while (index--) {\r\n    var key = objProps[index];\r\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\r\n      return false;\r\n    }\r\n  }\r\n  // Assume cyclic values are equal.\r\n  var stacked = stack.get(object);\r\n  if (stacked && stack.get(other)) {\r\n    return stacked == other;\r\n  }\r\n  var result = true;\r\n  stack.set(object, other);\r\n  stack.set(other, object);\r\n\r\n  var skipCtor = isPartial;\r\n  while (++index < objLength) {\r\n    key = objProps[index];\r\n    var objValue = object[key],\r\n        othValue = other[key];\r\n\r\n    if (customizer) {\r\n      var compared = isPartial\r\n        ? customizer(othValue, objValue, key, other, object, stack)\r\n        : customizer(objValue, othValue, key, object, other, stack);\r\n    }\r\n    // Recursively compare objects (susceptible to call stack limits).\r\n    if (!(compared === undefined\r\n          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\r\n          : compared\r\n        )) {\r\n      result = false;\r\n      break;\r\n    }\r\n    skipCtor || (skipCtor = key == 'constructor');\r\n  }\r\n  if (result && !skipCtor) {\r\n    var objCtor = object.constructor,\r\n        othCtor = other.constructor;\r\n\r\n    // Non `Object` object instances with different constructors are not equal.\r\n    if (objCtor != othCtor &&\r\n        ('constructor' in object && 'constructor' in other) &&\r\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\r\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\r\n      result = false;\r\n    }\r\n  }\r\n  stack['delete'](object);\r\n  stack['delete'](other);\r\n  return result;\r\n}\r\n\r\n/**\r\n * Creates an array of own enumerable property names and symbols of `object`.\r\n *\r\n * @private\r\n * @param {Object} object The object to query.\r\n * @returns {Array} Returns the array of property names and symbols.\r\n */\r\nfunction getAllKeys(object) {\r\n  return baseGetAllKeys(object, keys, getSymbols);\r\n}\r\n\r\n/**\r\n * Gets the data for `map`.\r\n *\r\n * @private\r\n * @param {Object} map The map to query.\r\n * @param {string} key The reference key.\r\n * @returns {*} Returns the map data.\r\n */\r\nfunction getMapData(map, key) {\r\n  var data = map.__data__;\r\n  return isKeyable(key)\r\n    ? data[typeof key == 'string' ? 'string' : 'hash']\r\n    : data.map;\r\n}\r\n\r\n/**\r\n * Gets the native function at `key` of `object`.\r\n *\r\n * @private\r\n * @param {Object} object The object to query.\r\n * @param {string} key The key of the method to get.\r\n * @returns {*} Returns the function if it's native, else `undefined`.\r\n */\r\nfunction getNative(object, key) {\r\n  var value = getValue(object, key);\r\n  return baseIsNative(value) ? value : undefined;\r\n}\r\n\r\n/**\r\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\r\n *\r\n * @private\r\n * @param {*} value The value to query.\r\n * @returns {string} Returns the raw `toStringTag`.\r\n */\r\nfunction getRawTag(value) {\r\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\r\n      tag = value[symToStringTag];\r\n\r\n  try {\r\n    value[symToStringTag] = undefined;\r\n    var unmasked = true;\r\n  } catch (e) {}\r\n\r\n  var result = nativeObjectToString.call(value);\r\n  if (unmasked) {\r\n    if (isOwn) {\r\n      value[symToStringTag] = tag;\r\n    } else {\r\n      delete value[symToStringTag];\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\n/**\r\n * Creates an array of the own enumerable symbols of `object`.\r\n *\r\n * @private\r\n * @param {Object} object The object to query.\r\n * @returns {Array} Returns the array of symbols.\r\n */\r\nvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\r\n  if (object == null) {\r\n    return [];\r\n  }\r\n  object = Object(object);\r\n  return arrayFilter(nativeGetSymbols(object), function(symbol) {\r\n    return propertyIsEnumerable.call(object, symbol);\r\n  });\r\n};\r\n\r\n/**\r\n * Gets the `toStringTag` of `value`.\r\n *\r\n * @private\r\n * @param {*} value The value to query.\r\n * @returns {string} Returns the `toStringTag`.\r\n */\r\nvar getTag = baseGetTag;\r\n\r\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\r\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\r\n    (Map && getTag(new Map) != mapTag) ||\r\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\r\n    (Set && getTag(new Set) != setTag) ||\r\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\r\n  getTag = function(value) {\r\n    var result = baseGetTag(value),\r\n        Ctor = result == objectTag ? value.constructor : undefined,\r\n        ctorString = Ctor ? toSource(Ctor) : '';\r\n\r\n    if (ctorString) {\r\n      switch (ctorString) {\r\n        case dataViewCtorString: return dataViewTag;\r\n        case mapCtorString: return mapTag;\r\n        case promiseCtorString: return promiseTag;\r\n        case setCtorString: return setTag;\r\n        case weakMapCtorString: return weakMapTag;\r\n      }\r\n    }\r\n    return result;\r\n  };\r\n}\r\n\r\n/**\r\n * Checks if `value` is a valid array-like index.\r\n *\r\n * @private\r\n * @param {*} value The value to check.\r\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\r\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\r\n */\r\nfunction isIndex(value, length) {\r\n  length = length == null ? MAX_SAFE_INTEGER : length;\r\n  return !!length &&\r\n    (typeof value == 'number' || reIsUint.test(value)) &&\r\n    (value > -1 && value % 1 == 0 && value < length);\r\n}\r\n\r\n/**\r\n * Checks if `value` is suitable for use as unique object key.\r\n *\r\n * @private\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\r\n */\r\nfunction isKeyable(value) {\r\n  var type = typeof value;\r\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\r\n    ? (value !== '__proto__')\r\n    : (value === null);\r\n}\r\n\r\n/**\r\n * Checks if `func` has its source masked.\r\n *\r\n * @private\r\n * @param {Function} func The function to check.\r\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\r\n */\r\nfunction isMasked(func) {\r\n  return !!maskSrcKey && (maskSrcKey in func);\r\n}\r\n\r\n/**\r\n * Checks if `value` is likely a prototype object.\r\n *\r\n * @private\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\r\n */\r\nfunction isPrototype(value) {\r\n  var Ctor = value && value.constructor,\r\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\r\n\r\n  return value === proto;\r\n}\r\n\r\n/**\r\n * Converts `value` to a string using `Object.prototype.toString`.\r\n *\r\n * @private\r\n * @param {*} value The value to convert.\r\n * @returns {string} Returns the converted string.\r\n */\r\nfunction objectToString(value) {\r\n  return nativeObjectToString.call(value);\r\n}\r\n\r\n/**\r\n * Converts `func` to its source code.\r\n *\r\n * @private\r\n * @param {Function} func The function to convert.\r\n * @returns {string} Returns the source code.\r\n */\r\nfunction toSource(func) {\r\n  if (func != null) {\r\n    try {\r\n      return funcToString.call(func);\r\n    } catch (e) {}\r\n    try {\r\n      return (func + '');\r\n    } catch (e) {}\r\n  }\r\n  return '';\r\n}\r\n\r\n/**\r\n * Performs a\r\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\r\n * comparison between two values to determine if they are equivalent.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Lang\r\n * @param {*} value The value to compare.\r\n * @param {*} other The other value to compare.\r\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\r\n * @example\r\n *\r\n * var object = { 'a': 1 };\r\n * var other = { 'a': 1 };\r\n *\r\n * _.eq(object, object);\r\n * // => true\r\n *\r\n * _.eq(object, other);\r\n * // => false\r\n *\r\n * _.eq('a', 'a');\r\n * // => true\r\n *\r\n * _.eq('a', Object('a'));\r\n * // => false\r\n *\r\n * _.eq(NaN, NaN);\r\n * // => true\r\n */\r\nfunction eq(value, other) {\r\n  return value === other || (value !== value && other !== other);\r\n}\r\n\r\n/**\r\n * Checks if `value` is likely an `arguments` object.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\r\n *  else `false`.\r\n * @example\r\n *\r\n * _.isArguments(function() { return arguments; }());\r\n * // => true\r\n *\r\n * _.isArguments([1, 2, 3]);\r\n * // => false\r\n */\r\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\r\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\r\n    !propertyIsEnumerable.call(value, 'callee');\r\n};\r\n\r\n/**\r\n * Checks if `value` is classified as an `Array` object.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\r\n * @example\r\n *\r\n * _.isArray([1, 2, 3]);\r\n * // => true\r\n *\r\n * _.isArray(document.body.children);\r\n * // => false\r\n *\r\n * _.isArray('abc');\r\n * // => false\r\n *\r\n * _.isArray(_.noop);\r\n * // => false\r\n */\r\nvar isArray = Array.isArray;\r\n\r\n/**\r\n * Checks if `value` is array-like. A value is considered array-like if it's\r\n * not a function and has a `value.length` that's an integer greater than or\r\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\r\n * @example\r\n *\r\n * _.isArrayLike([1, 2, 3]);\r\n * // => true\r\n *\r\n * _.isArrayLike(document.body.children);\r\n * // => true\r\n *\r\n * _.isArrayLike('abc');\r\n * // => true\r\n *\r\n * _.isArrayLike(_.noop);\r\n * // => false\r\n */\r\nfunction isArrayLike(value) {\r\n  return value != null && isLength(value.length) && !isFunction(value);\r\n}\r\n\r\n/**\r\n * Checks if `value` is a buffer.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.3.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\r\n * @example\r\n *\r\n * _.isBuffer(new Buffer(2));\r\n * // => true\r\n *\r\n * _.isBuffer(new Uint8Array(2));\r\n * // => false\r\n */\r\nvar isBuffer = nativeIsBuffer || stubFalse;\r\n\r\n/**\r\n * Performs a deep comparison between two values to determine if they are\r\n * equivalent.\r\n *\r\n * **Note:** This method supports comparing arrays, array buffers, booleans,\r\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\r\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\r\n * by their own, not inherited, enumerable properties. Functions and DOM\r\n * nodes are compared by strict equality, i.e. `===`.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @category Lang\r\n * @param {*} value The value to compare.\r\n * @param {*} other The other value to compare.\r\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\r\n * @example\r\n *\r\n * var object = { 'a': 1 };\r\n * var other = { 'a': 1 };\r\n *\r\n * _.isEqual(object, other);\r\n * // => true\r\n *\r\n * object === other;\r\n * // => false\r\n */\r\nfunction isEqual(value, other) {\r\n  return baseIsEqual(value, other);\r\n}\r\n\r\n/**\r\n * Checks if `value` is classified as a `Function` object.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\r\n * @example\r\n *\r\n * _.isFunction(_);\r\n * // => true\r\n *\r\n * _.isFunction(/abc/);\r\n * // => false\r\n */\r\nfunction isFunction(value) {\r\n  if (!isObject(value)) {\r\n    return false;\r\n  }\r\n  // The use of `Object#toString` avoids issues with the `typeof` operator\r\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\r\n  var tag = baseGetTag(value);\r\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\r\n}\r\n\r\n/**\r\n * Checks if `value` is a valid array-like length.\r\n *\r\n * **Note:** This method is loosely based on\r\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\r\n * @example\r\n *\r\n * _.isLength(3);\r\n * // => true\r\n *\r\n * _.isLength(Number.MIN_VALUE);\r\n * // => false\r\n *\r\n * _.isLength(Infinity);\r\n * // => false\r\n *\r\n * _.isLength('3');\r\n * // => false\r\n */\r\nfunction isLength(value) {\r\n  return typeof value == 'number' &&\r\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\r\n}\r\n\r\n/**\r\n * Checks if `value` is the\r\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\r\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\r\n * @example\r\n *\r\n * _.isObject({});\r\n * // => true\r\n *\r\n * _.isObject([1, 2, 3]);\r\n * // => true\r\n *\r\n * _.isObject(_.noop);\r\n * // => true\r\n *\r\n * _.isObject(null);\r\n * // => false\r\n */\r\nfunction isObject(value) {\r\n  var type = typeof value;\r\n  return value != null && (type == 'object' || type == 'function');\r\n}\r\n\r\n/**\r\n * Checks if `value` is object-like. A value is object-like if it's not `null`\r\n * and has a `typeof` result of \"object\".\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\r\n * @example\r\n *\r\n * _.isObjectLike({});\r\n * // => true\r\n *\r\n * _.isObjectLike([1, 2, 3]);\r\n * // => true\r\n *\r\n * _.isObjectLike(_.noop);\r\n * // => false\r\n *\r\n * _.isObjectLike(null);\r\n * // => false\r\n */\r\nfunction isObjectLike(value) {\r\n  return value != null && typeof value == 'object';\r\n}\r\n\r\n/**\r\n * Checks if `value` is classified as a typed array.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 3.0.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\r\n * @example\r\n *\r\n * _.isTypedArray(new Uint8Array);\r\n * // => true\r\n *\r\n * _.isTypedArray([]);\r\n * // => false\r\n */\r\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\r\n\r\n/**\r\n * Creates an array of the own enumerable property names of `object`.\r\n *\r\n * **Note:** Non-object values are coerced to objects. See the\r\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\r\n * for more details.\r\n *\r\n * @static\r\n * @since 0.1.0\r\n * @memberOf _\r\n * @category Object\r\n * @param {Object} object The object to query.\r\n * @returns {Array} Returns the array of property names.\r\n * @example\r\n *\r\n * function Foo() {\r\n *   this.a = 1;\r\n *   this.b = 2;\r\n * }\r\n *\r\n * Foo.prototype.c = 3;\r\n *\r\n * _.keys(new Foo);\r\n * // => ['a', 'b'] (iteration order is not guaranteed)\r\n *\r\n * _.keys('hi');\r\n * // => ['0', '1']\r\n */\r\nfunction keys(object) {\r\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\r\n}\r\n\r\n/**\r\n * This method returns a new empty array.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.13.0\r\n * @category Util\r\n * @returns {Array} Returns the new empty array.\r\n * @example\r\n *\r\n * var arrays = _.times(2, _.stubArray);\r\n *\r\n * console.log(arrays);\r\n * // => [[], []]\r\n *\r\n * console.log(arrays[0] === arrays[1]);\r\n * // => false\r\n */\r\nfunction stubArray() {\r\n  return [];\r\n}\r\n\r\n/**\r\n * This method returns `false`.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.13.0\r\n * @category Util\r\n * @returns {boolean} Returns `false`.\r\n * @example\r\n *\r\n * _.times(2, _.stubFalse);\r\n * // => [false, false]\r\n */\r\nfunction stubFalse() {\r\n  return false;\r\n}\r\n\r\nmodule.exports = isEqual;\r\n", "export default function(url, options) {\n\toptions = options || {};\n\treturn new Promise( (resolve, reject) => {\n\t\tconst request = new XMLHttpRequest();\n\t\tconst keys = [];\n\t\tconst all = [];\n\t\tconst headers = {};\n\n\t\tconst response = () => ({\n\t\t\tok: (request.status/100|0) == 2,\t\t// 200-299\n\t\t\tstatusText: request.statusText,\n\t\t\tstatus: request.status,\n\t\t\turl: request.responseURL,\n\t\t\ttext: () => Promise.resolve(request.responseText),\n\t\t\tjson: () => Promise.resolve(request.responseText).then(JSON.parse),\n\t\t\tblob: () => Promise.resolve(new Blob([request.response])),\n\t\t\tclone: response,\n\t\t\theaders: {\n\t\t\t\tkeys: () => keys,\n\t\t\t\tentries: () => all,\n\t\t\t\tget: n => headers[n.toLowerCase()],\n\t\t\t\thas: n => n.toLowerCase() in headers\n\t\t\t}\n\t\t});\n\n\t\trequest.open(options.method || 'get', url, true);\n\n\t\trequest.onload = () => {\n\t\t\trequest.getAllResponseHeaders().replace(/^(.*?):[^\\S\\n]*([\\s\\S]*?)$/gm, (m, key, value) => {\n\t\t\t\tkeys.push(key = key.toLowerCase());\n\t\t\t\tall.push([key, value]);\n\t\t\t\theaders[key] = headers[key] ? `${headers[key]},${value}` : value;\n\t\t\t});\n\t\t\tresolve(response());\n\t\t};\n\n\t\trequest.onerror = reject;\n\n\t\trequest.withCredentials = options.credentials=='include';\n\n\t\tfor (const i in options.headers) {\n\t\t\trequest.setRequestHeader(i, options.headers[i]);\n\t\t}\n\n\t\trequest.send(options.body || null);\n\t});\n}\n", "module.exports = self.fetch || (self.fetch = require('unfetch').default || require('unfetch'));\r\n"],
  "mappings": "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",
  "names": ["os", "i", "l", "ar", "BrowserInfo", "NodeInfo", "SearchBotDeviceInfo", "BotInfo", "ReactNativeInfo", "a", "b", "x", "n", "i", "i", "j2", "x2", "i", "j", "a", "b", "compare", "i", "Poly1305", "m", "h2", "h3", "c", "g", "f", "i", "h", "a", "b", "ChaCha20Poly1305", "h", "i", "h", "HMAC", "i", "h", "HKDF", "i", "i", "i", "randomBytes", "i", "SHA256", "i", "K", "w", "v", "p", "a", "b", "c", "d", "f", "g", "h", "j", "u", "i", "c", "v", "p", "q", "b", "n", "m", "j", "a", "b2", "b3", "b4", "z", "x", "d", "f", "generateKeyPairFromSeed", "generateKeyPair", "sharedKey", "fromMiliseconds", "icons", "i", "name", "description", "keys", "i", "a", "b", "parse", "k", "keys", "x", "init_esm", "stringify", "keys", "stringify", "keys", "p", "m", "a", "b", "init_dist", "init_dist", "init_esm", "_", "esm_exports", "init_esm", "f", "ss", "a", "i", "require_browser", "k", "transmit", "level", "set", "ts", "i", "a", "SHA512", "i", "K", "m", "h", "l", "a", "b", "c", "d", "j", "i", "D", "D2", "X", "I", "a", "c", "v", "p", "q", "b", "n", "m", "j", "x", "y", "d", "b2", "b3", "b4", "f", "g", "h", "generateKeyPairFromSeed", "generateKeyPair", "L", "k", "sign", "hs", "verify", "z", "init_esm", "generateKeyPair", "import_random", "import_time", "init_types", "init_esm", "init_types", "import_events", "init_esm", "require_browser", "n", "set", "Buffer", "Symbol", "Uint8Array", "DataView", "Map", "Promise", "Set", "othValue", "keys", "url", "options", "Promise", "resolve", "reject", "request", "XMLHttpRequest", "keys", "all", "headers", "response", "ok", "status", "statusText", "responseURL", "text", "responseText", "json", "then", "JSON", "parse", "blob", "Blob", "clone", "entries", "get", "n", "toLowerCase", "has", "i", "open", "method", "onload", "getAllResponseHeaders", "replace", "m", "key", "value", "push", "onerror", "withCredentials", "credentials", "setRequestHeader", "send", "body", "require_browser"]
}
