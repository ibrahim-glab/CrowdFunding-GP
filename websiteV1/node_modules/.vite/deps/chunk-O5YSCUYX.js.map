{
  "version": 3,
  "sources": ["../../@thirdweb-dev/wallets/dist/errors-9f6736cb.browser.esm.js"],
  "sourcesContent": ["import { _ as _defineProperty } from './defineProperty-d7c057bf.browser.esm.js';\r\n\r\n/**\r\n * Error subclass implementing JSON RPC 2.0 errors and Ethereum RPC errors per EIP-1474.\r\n * @see https://eips.ethereum.org/EIPS/eip-1474\r\n */\r\nclass RpcError extends Error {\r\n  constructor( /** Human-readable string */\r\n  message, options) {\r\n    const {\r\n      cause,\r\n      code,\r\n      data\r\n    } = options;\r\n    if (!Number.isInteger(code)) {\r\n      throw new Error('\"code\" must be an integer.');\r\n    }\r\n    if (!message || typeof message !== \"string\") {\r\n      throw new Error('\"message\" must be a nonempty string.');\r\n    }\r\n    super(`${message}. Cause: ${JSON.stringify(cause)}`);\r\n    this.cause = cause;\r\n    this.code = code;\r\n    this.data = data;\r\n  }\r\n}\r\n\r\n/**\r\n * @internal\r\n * Error subclass implementing Ethereum Provider errors per EIP-1193.\r\n * @see https://eips.ethereum.org/EIPS/eip-1193\r\n */\r\nclass ProviderRpcError extends RpcError {\r\n  /**\r\n   * Create an Ethereum Provider JSON-RPC error.\r\n   * `code` must be an integer in the `1000 <= 4999` range.\r\n   */\r\n  constructor( /** Human-readable string */\r\n  message, options) {\r\n    const {\r\n      cause,\r\n      code,\r\n      data\r\n    } = options;\r\n    if (!(Number.isInteger(code) && code >= 1000 && code <= 4999)) {\r\n      throw new Error('\"code\" must be an integer such that: 1000 <= code <= 4999');\r\n    }\r\n    super(message, {\r\n      cause,\r\n      code,\r\n      data\r\n    });\r\n  }\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nclass AddChainError extends Error {\r\n  constructor() {\r\n    super(...arguments);\r\n    _defineProperty(this, \"name\", \"AddChainError\");\r\n    _defineProperty(this, \"message\", \"Error adding chain\");\r\n  }\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nclass ChainNotConfiguredError extends Error {\r\n  constructor(_ref) {\r\n    let {\r\n      chainId,\r\n      connectorId\r\n    } = _ref;\r\n    super(`Chain \"${chainId}\" not configured for connector \"${connectorId}\".`);\r\n    _defineProperty(this, \"name\", \"ChainNotConfigured\");\r\n  }\r\n}\r\nclass ConnectorNotFoundError extends Error {\r\n  constructor() {\r\n    super(...arguments);\r\n    _defineProperty(this, \"name\", \"ConnectorNotFoundError\");\r\n    _defineProperty(this, \"message\", \"Connector not found\");\r\n  }\r\n}\r\nclass ResourceUnavailableError extends RpcError {\r\n  constructor(cause) {\r\n    super(\"Resource unavailable\", {\r\n      cause,\r\n      code: -32002\r\n    });\r\n    _defineProperty(this, \"name\", \"ResourceUnavailable\");\r\n  }\r\n}\r\n/**\r\n * @internal\r\n */\r\nclass SwitchChainError extends ProviderRpcError {\r\n  constructor(cause) {\r\n    super(\"Error switching chain\", {\r\n      cause,\r\n      code: 4902\r\n    });\r\n    _defineProperty(this, \"name\", \"SwitchChainError\");\r\n  }\r\n}\r\n/**\r\n * @internal\r\n */\r\nclass UserRejectedRequestError extends ProviderRpcError {\r\n  constructor(cause) {\r\n    super(\"User rejected request\", {\r\n      cause,\r\n      code: 4001\r\n    });\r\n    _defineProperty(this, \"name\", \"UserRejectedRequestError\");\r\n  }\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\n// Ethers does not have an error type so we can use this for casting\r\n// https://github.com/ethers-io/ethers.js/blob/main/packages/logger/src.ts/index.ts#L268\r\n\r\nexport { AddChainError as A, ChainNotConfiguredError as C, ProviderRpcError as P, ResourceUnavailableError as R, SwitchChainError as S, UserRejectedRequestError as U, ConnectorNotFoundError as a };\r\n"],
  "mappings": ";;;;;AAMA,IAAM,WAAN,cAAuB,MAAM;AAAA,EAC3B,YACA,SAAS,SAAS;AAChB,UAAM;AAAA,MACJ;AAAA,MACA;AAAA,MACA;AAAA,IACF,IAAI;AACJ,QAAI,CAAC,OAAO,UAAU,IAAI,GAAG;AAC3B,YAAM,IAAI,MAAM,4BAA4B;AAAA,IAC9C;AACA,QAAI,CAAC,WAAW,OAAO,YAAY,UAAU;AAC3C,YAAM,IAAI,MAAM,sCAAsC;AAAA,IACxD;AACA,UAAM,GAAG,OAAO,YAAY,KAAK,UAAU,KAAK,CAAC,EAAE;AACnD,SAAK,QAAQ;AACb,SAAK,OAAO;AACZ,SAAK,OAAO;AAAA,EACd;AACF;AAOA,IAAM,mBAAN,cAA+B,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA,EAKtC,YACA,SAAS,SAAS;AAChB,UAAM;AAAA,MACJ;AAAA,MACA;AAAA,MACA;AAAA,IACF,IAAI;AACJ,QAAI,EAAE,OAAO,UAAU,IAAI,KAAK,QAAQ,OAAQ,QAAQ,OAAO;AAC7D,YAAM,IAAI,MAAM,2DAA2D;AAAA,IAC7E;AACA,UAAM,SAAS;AAAA,MACb;AAAA,MACA;AAAA,MACA;AAAA,IACF,CAAC;AAAA,EACH;AACF;AAKA,IAAM,gBAAN,cAA4B,MAAM;AAAA,EAChC,cAAc;AACZ,UAAM,GAAG,SAAS;AAClB,oBAAgB,MAAM,QAAQ,eAAe;AAC7C,oBAAgB,MAAM,WAAW,oBAAoB;AAAA,EACvD;AACF;AAKA,IAAM,0BAAN,cAAsC,MAAM;AAAA,EAC1C,YAAY,MAAM;AAChB,QAAI;AAAA,MACF;AAAA,MACA;AAAA,IACF,IAAI;AACJ,UAAM,UAAU,OAAO,mCAAmC,WAAW,IAAI;AACzE,oBAAgB,MAAM,QAAQ,oBAAoB;AAAA,EACpD;AACF;AACA,IAAM,yBAAN,cAAqC,MAAM;AAAA,EACzC,cAAc;AACZ,UAAM,GAAG,SAAS;AAClB,oBAAgB,MAAM,QAAQ,wBAAwB;AACtD,oBAAgB,MAAM,WAAW,qBAAqB;AAAA,EACxD;AACF;AACA,IAAM,2BAAN,cAAuC,SAAS;AAAA,EAC9C,YAAY,OAAO;AACjB,UAAM,wBAAwB;AAAA,MAC5B;AAAA,MACA,MAAM;AAAA,IACR,CAAC;AACD,oBAAgB,MAAM,QAAQ,qBAAqB;AAAA,EACrD;AACF;AAIA,IAAM,mBAAN,cAA+B,iBAAiB;AAAA,EAC9C,YAAY,OAAO;AACjB,UAAM,yBAAyB;AAAA,MAC7B;AAAA,MACA,MAAM;AAAA,IACR,CAAC;AACD,oBAAgB,MAAM,QAAQ,kBAAkB;AAAA,EAClD;AACF;AAIA,IAAM,2BAAN,cAAuC,iBAAiB;AAAA,EACtD,YAAY,OAAO;AACjB,UAAM,yBAAyB;AAAA,MAC7B;AAAA,MACA,MAAM;AAAA,IACR,CAAC;AACD,oBAAgB,MAAM,QAAQ,0BAA0B;AAAA,EAC1D;AACF;",
  "names": []
}
