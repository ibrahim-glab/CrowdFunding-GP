{
  "version": 3,
  "sources": ["../../bech32/index.js"],
  "sourcesContent": ["'use strict'\r\nvar ALPHABET = 'qpzry9x8gf2tvdw0s3jn54khce6mua7l'\r\n\r\n// pre-compute lookup table\r\nvar ALPHABET_MAP = {}\r\nfor (var z = 0; z < ALPHABET.length; z++) {\r\n  var x = ALPHABET.charAt(z)\r\n\r\n  if (ALPHABET_MAP[x] !== undefined) throw new TypeError(x + ' is ambiguous')\r\n  ALPHABET_MAP[x] = z\r\n}\r\n\r\nfunction polymodStep (pre) {\r\n  var b = pre >> 25\r\n  return ((pre & 0x1FFFFFF) << 5) ^\r\n    (-((b >> 0) & 1) & 0x3b6a57b2) ^\r\n    (-((b >> 1) & 1) & 0x26508e6d) ^\r\n    (-((b >> 2) & 1) & 0x1ea119fa) ^\r\n    (-((b >> 3) & 1) & 0x3d4233dd) ^\r\n    (-((b >> 4) & 1) & 0x2a1462b3)\r\n}\r\n\r\nfunction prefixChk (prefix) {\r\n  var chk = 1\r\n  for (var i = 0; i < prefix.length; ++i) {\r\n    var c = prefix.charCodeAt(i)\r\n    if (c < 33 || c > 126) return 'Invalid prefix (' + prefix + ')'\r\n\r\n    chk = polymodStep(chk) ^ (c >> 5)\r\n  }\r\n  chk = polymodStep(chk)\r\n\r\n  for (i = 0; i < prefix.length; ++i) {\r\n    var v = prefix.charCodeAt(i)\r\n    chk = polymodStep(chk) ^ (v & 0x1f)\r\n  }\r\n  return chk\r\n}\r\n\r\nfunction encode (prefix, words, LIMIT) {\r\n  LIMIT = LIMIT || 90\r\n  if ((prefix.length + 7 + words.length) > LIMIT) throw new TypeError('Exceeds length limit')\r\n\r\n  prefix = prefix.toLowerCase()\r\n\r\n  // determine chk mod\r\n  var chk = prefixChk(prefix)\r\n  if (typeof chk === 'string') throw new Error(chk)\r\n\r\n  var result = prefix + '1'\r\n  for (var i = 0; i < words.length; ++i) {\r\n    var x = words[i]\r\n    if ((x >> 5) !== 0) throw new Error('Non 5-bit word')\r\n\r\n    chk = polymodStep(chk) ^ x\r\n    result += ALPHABET.charAt(x)\r\n  }\r\n\r\n  for (i = 0; i < 6; ++i) {\r\n    chk = polymodStep(chk)\r\n  }\r\n  chk ^= 1\r\n\r\n  for (i = 0; i < 6; ++i) {\r\n    var v = (chk >> ((5 - i) * 5)) & 0x1f\r\n    result += ALPHABET.charAt(v)\r\n  }\r\n\r\n  return result\r\n}\r\n\r\nfunction __decode (str, LIMIT) {\r\n  LIMIT = LIMIT || 90\r\n  if (str.length < 8) return str + ' too short'\r\n  if (str.length > LIMIT) return 'Exceeds length limit'\r\n\r\n  // don't allow mixed case\r\n  var lowered = str.toLowerCase()\r\n  var uppered = str.toUpperCase()\r\n  if (str !== lowered && str !== uppered) return 'Mixed-case string ' + str\r\n  str = lowered\r\n\r\n  var split = str.lastIndexOf('1')\r\n  if (split === -1) return 'No separator character for ' + str\r\n  if (split === 0) return 'Missing prefix for ' + str\r\n\r\n  var prefix = str.slice(0, split)\r\n  var wordChars = str.slice(split + 1)\r\n  if (wordChars.length < 6) return 'Data too short'\r\n\r\n  var chk = prefixChk(prefix)\r\n  if (typeof chk === 'string') return chk\r\n\r\n  var words = []\r\n  for (var i = 0; i < wordChars.length; ++i) {\r\n    var c = wordChars.charAt(i)\r\n    var v = ALPHABET_MAP[c]\r\n    if (v === undefined) return 'Unknown character ' + c\r\n    chk = polymodStep(chk) ^ v\r\n\r\n    // not in the checksum?\r\n    if (i + 6 >= wordChars.length) continue\r\n    words.push(v)\r\n  }\r\n\r\n  if (chk !== 1) return 'Invalid checksum for ' + str\r\n  return { prefix: prefix, words: words }\r\n}\r\n\r\nfunction decodeUnsafe () {\r\n  var res = __decode.apply(null, arguments)\r\n  if (typeof res === 'object') return res\r\n}\r\n\r\nfunction decode (str) {\r\n  var res = __decode.apply(null, arguments)\r\n  if (typeof res === 'object') return res\r\n\r\n  throw new Error(res)\r\n}\r\n\r\nfunction convert (data, inBits, outBits, pad) {\r\n  var value = 0\r\n  var bits = 0\r\n  var maxV = (1 << outBits) - 1\r\n\r\n  var result = []\r\n  for (var i = 0; i < data.length; ++i) {\r\n    value = (value << inBits) | data[i]\r\n    bits += inBits\r\n\r\n    while (bits >= outBits) {\r\n      bits -= outBits\r\n      result.push((value >> bits) & maxV)\r\n    }\r\n  }\r\n\r\n  if (pad) {\r\n    if (bits > 0) {\r\n      result.push((value << (outBits - bits)) & maxV)\r\n    }\r\n  } else {\r\n    if (bits >= inBits) return 'Excess padding'\r\n    if ((value << (outBits - bits)) & maxV) return 'Non-zero padding'\r\n  }\r\n\r\n  return result\r\n}\r\n\r\nfunction toWordsUnsafe (bytes) {\r\n  var res = convert(bytes, 8, 5, true)\r\n  if (Array.isArray(res)) return res\r\n}\r\n\r\nfunction toWords (bytes) {\r\n  var res = convert(bytes, 8, 5, true)\r\n  if (Array.isArray(res)) return res\r\n\r\n  throw new Error(res)\r\n}\r\n\r\nfunction fromWordsUnsafe (words) {\r\n  var res = convert(words, 5, 8, false)\r\n  if (Array.isArray(res)) return res\r\n}\r\n\r\nfunction fromWords (words) {\r\n  var res = convert(words, 5, 8, false)\r\n  if (Array.isArray(res)) return res\r\n\r\n  throw new Error(res)\r\n}\r\n\r\nmodule.exports = {\r\n  decodeUnsafe: decodeUnsafe,\r\n  decode: decode,\r\n  encode: encode,\r\n  toWordsUnsafe: toWordsUnsafe,\r\n  toWords: toWords,\r\n  fromWordsUnsafe: fromWordsUnsafe,\r\n  fromWords: fromWords\r\n}\r\n"],
  "mappings": "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",
  "names": ["x"]
}
