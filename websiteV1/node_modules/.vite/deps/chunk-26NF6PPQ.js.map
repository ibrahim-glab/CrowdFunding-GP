{
  "version": 3,
  "sources": ["../../@thirdweb-dev/react/dist/magicLink-e4040478.browser.esm.js"],
  "sourcesContent": ["import { MagicLink } from '@thirdweb-dev/wallets';\nimport { useWalletContext } from '@thirdweb-dev/react-core';\nimport { useRef, useEffect, useCallback } from 'react';\nimport { C as Container, d as Spinner, b as useTWLocale, M as ModalHeader, S as Spacer, q as useScreenContext, D as reservedScreens, I as Img, i as iconSize, p as TextDivider, B as Button, u as useCustomTheme, s as spacing, g as fontSize, z as IconButton } from './formElements-9484d253.browser.esm.js';\nimport { b as emailAndPhoneIcon, e as emailIcon, p as phoneIcon, T as ToolTip, I as InputSelectionUI, g as googleIconUri, f as facebookIconUri, t as twitterIconUri, c as githubIconUri, a as appleIconUri, l as linkedinIconUri, d as bitbucketIconUri, h as gitlabIconUri, i as twitchIconUri, j as discordIconUri, m as microsoftIconUri } from './Tooltip-633e9bd5.browser.esm.js';\nimport styled from '@emotion/styled';\nimport { jsx, jsxs, Fragment } from 'react/jsx-runtime';\nimport '@radix-ui/react-icons';\nimport '@emotion/react';\nimport '@radix-ui/colors';\nimport '@radix-ui/react-tooltip';\n\n/**\n * A wallet configurator for [Magic Link](https://magic.link/) which allows integrating the wallet with React.\n *\n * It returns a [`WalletConfig`](https://portal.thirdweb.com/references/react/v4/WalletConfig) object which can be used to connect the wallet to via [`ConnectWallet`](https://portal.thirdweb.com/react/v4/components/ConnectWallet) component or [`useConnect`](https://portal.thirdweb.com/references/react/v4/useConnect) hook as mentioned in [Connecting Wallets](https://portal.thirdweb.com/react/v4/connecting-wallets) guide\n *\n * @example\n * ```ts\n * magicLink({\n *   apiKey: \"pk_test_123\",\n *   emailLogin: true,\n *   smsLogin: true,\n *   oauthOptions: {\n *     providers: [\"google\", \"facebook\"],\n *     redirectURI: \"https://example.com/foo/bar\",\n *   },\n *   type: \"auth\", // or 'connect'\n * });\n * ```\n *\n * @param config -\n * Object containing the following properties to configure the wallet\n *\n * ### apiKey\n * Your Magic Link apiKey\n *\n * You can get an API key by signing up for an account on [Magic Link's website](https://magic.link/).\n *\n * Must be a `string`\n *\n * ### magicSdkConfiguration (optional)\n * Configuration for [Magic Auth](https://magic.link/docs/auth/overview) SDK\n *\n * This is only relevant if you are using `type: 'auth'` in your config\n *\n * ```ts\n * {\n *   locale?: string;\n *   endpoint?: string;\n *   testMode?: boolean;\n * }\n * ```\n *\n * * `locale` - Customize the language of Magic's modal, email and confirmation screen. See [Localization](https://magic.link/docs/auth/more/customization/localization) for more.\n *\n * * `endpoint` - A URL pointing to the Magic iframe application\n *\n * * `testMode` - Enable [testMode](https://magic.link/docs/auth/introduction/test-mode) to assert the desired behavior through the email address you provide to `loginWithMagicLink` without having to go through the auth flow.\n *\n * ### smsLogin (optional)\n * Specify whether you want to allow users to login with their phone number or not. It is `true` by default\n *\n * This is only relevant if you are using `type: 'auth'`\n *\n * Must be a `boolean`\n *\n * ### emailLogin (optional)\n * Specify whether you want to allow users to login with their email or not. It is `true` by default\n *\n * This is only relevant if you are using `type: 'auth'`\n *\n * Must be a `boolean`\n *\n * ### oauthOptions (optional)\n * Specify which oauth providers you support in `providers` array.\n *\n * Specify which URI to redirect to after the oauth flow is complete in `redirectURI` option. If no `redirectURI` is specified, the user will be redirected to the current page.\n *\n * You must pass full URL and not just a relative path. For example, `\"https://example.com/foo\"` is valid but `\"/foo\"` is not.\n * You can use `new URL(\"/foo\", window.location.origin).href` to get the full URL from a relative path based on the current origin.\n *\n * This is only relevant if you are using `type: 'auth'`\n *\n * You also need to enable the oauth providers for your apiKey from [Magic dashboard](https://dashboard.magic.link/).\n *\n * ```ts\n * type OauthOptions = {\n *   redirectURI?: string;\n *   providers: OauthProvider[];\n * };\n *\n * type OauthProvider =\n *   | \"google\"\n *   | \"facebook\"\n *   | \"apple\"\n *   | \"github\"\n *   | \"bitbucket\"\n *   | \"gitlab\"\n *   | \"linkedin\"\n *   | \"twitter\"\n *   | \"discord\"\n *   | \"twitch\"\n *   | \"microsoft\";\n * ```\n *\n * ### recommended (optional)\n * Show this wallet as \"recommended\" in the [`ConnectWallet`](https://portal.thirdweb.com/react/v4/components/ConnectWallet) Modal UI\n *\n * @wallet\n */\nfunction magicLink(config) {\n  const emailLoginEnabled = config.emailLogin !== false;\n  const smsLoginEnabled = config.smsLogin !== false;\n  const oauthProviders = config.oauthOptions?.providers;\n  const type = config.type || \"auth\";\n  let icon = emailAndPhoneIcon;\n  let iconText = \"Email or phone\";\n  if (emailLoginEnabled && !smsLoginEnabled) {\n    icon = emailIcon;\n    iconText = \"Email\";\n  }\n  if (!emailLoginEnabled && smsLoginEnabled) {\n    icon = phoneIcon;\n    iconText = \"Phone number\";\n  }\n  if (!emailLoginEnabled && !smsLoginEnabled) {\n    iconText = \"Social login\";\n  }\n  return {\n    id: MagicLink.id,\n    recommended: config?.recommended,\n    isHeadless: true,\n    meta: {\n      ...MagicLink.meta,\n      name: iconText,\n      iconURL: icon\n    },\n    create: options => new MagicLink({\n      ...options,\n      ...config\n    }),\n    connectUI(props) {\n      if (props.modalSize === \"wide\") {\n        return /*#__PURE__*/jsx(MagicConnectionUIScreen, {\n          ...props,\n          type: type,\n          emailLogin: emailLoginEnabled,\n          smsLogin: smsLoginEnabled,\n          oauthProviders: oauthProviders\n        });\n      }\n      if (props.selectionData === undefined) {\n        return /*#__PURE__*/jsx(MagicConnectionUIScreen, {\n          ...props,\n          type: type,\n          emailLogin: emailLoginEnabled,\n          smsLogin: smsLoginEnabled,\n          oauthProviders: oauthProviders\n        });\n      }\n      return /*#__PURE__*/jsx(MagicConnectingUI, {\n        ...props,\n        type: type\n      });\n    },\n    isInstalled() {\n      return false;\n    }\n  };\n}\nconst MagicUI = props => {\n  const cwLocale = useTWLocale().connectWallet;\n  const locale = useTWLocale().wallets.magicLink;\n  const isEmailEnabled = props.emailLogin !== false;\n  const isSMSEnabled = props.smsLogin !== false;\n  let placeholder = locale.loginWithEmailOrPhone;\n  let type = \"text\";\n  let emptyErrorMessage = locale.emailOrPhoneRequired;\n  if (isEmailEnabled && !isSMSEnabled) {\n    placeholder = locale.emailPlaceholder;\n    emptyErrorMessage = locale.emailRequired;\n    type = \"email\";\n  } else if (!isEmailEnabled && isSMSEnabled) {\n    placeholder = locale.loginWithPhone;\n    emptyErrorMessage = locale.phoneRequired;\n    type = \"tel\";\n  }\n  if (!isEmailEnabled && !isSMSEnabled && !props.oauthProviders) {\n    throw new Error('MagicLink must have either \"emailLogin\" or \"smsLogin\" or social login enabled');\n  }\n  const showInputUI = isEmailEnabled || isSMSEnabled;\n  const {\n    screen\n  } = useScreenContext();\n  const showSeparator = props.modalSize === \"wide\" || screen !== reservedScreens.main && props.modalSize === \"compact\";\n  return /*#__PURE__*/jsxs(Container, {\n    flex: \"column\",\n    animate: \"fadein\",\n    gap: props.modalSize === \"compact\" ? \"lg\" : \"xl\",\n    style: {\n      width: \"100%\"\n    },\n    children: [props.oauthProviders && /*#__PURE__*/jsx(Fragment, {\n      children: props.oauthProviders.length > 1 ? /*#__PURE__*/jsx(Container, {\n        gap: \"md\",\n        flex: \"row\",\n        style: {\n          justifyContent: \"space-between\"\n        },\n        center: \"x\",\n        children: props.oauthProviders.map(provider => {\n          return /*#__PURE__*/jsx(SocialIconButton, {\n            onClick: () => {\n              props.onSelect({\n                provider\n              });\n            },\n            children: /*#__PURE__*/jsx(ToolTip, {\n              tip: `${locale.loginWith} ${upperCaseFirstLetter(provider)}`,\n              sideOffset: 15,\n              children: /*#__PURE__*/jsx(Container, {\n                flex: \"row\",\n                center: \"both\",\n                children: /*#__PURE__*/jsx(Img, {\n                  src: providerImages[provider],\n                  width: iconSize.lg,\n                  height: iconSize.lg,\n                  alt: \"\"\n                })\n              })\n            })\n          }, provider);\n        })\n      }) : /*#__PURE__*/jsx(Container, {\n        gap: \"xs\",\n        flex: \"column\",\n        children: props.oauthProviders.map(provider => {\n          return /*#__PURE__*/jsxs(SocialButtonLarge, {\n            variant: \"secondary\",\n            onClick: () => {\n              props.onSelect({\n                provider\n              });\n            },\n            children: [/*#__PURE__*/jsx(Img, {\n              src: providerImages[provider],\n              width: iconSize.md,\n              height: iconSize.md,\n              alt: \"\"\n            }), /*#__PURE__*/jsxs(\"span\", {\n              children: [locale.loginWith, \" \", upperCaseFirstLetter(provider)]\n            })]\n          }, provider);\n        })\n      })\n    }), showInputUI && /*#__PURE__*/jsxs(Fragment, {\n      children: [showSeparator && /*#__PURE__*/jsx(TextDivider, {\n        text: cwLocale.or\n      }), /*#__PURE__*/jsx(InputSelectionUI, {\n        submitButtonText: locale.submitEmail,\n        onSelect: props.onSelect,\n        placeholder: placeholder,\n        name: \"magic-input\",\n        type: type,\n        emptyErrorMessage: emptyErrorMessage,\n        errorMessage: _input => {\n          const input = _input.toLowerCase();\n          const isEmail = input.includes(\"@\");\n          const isPhone = Number.isInteger(Number(input[input.length - 1]));\n          if (isEmail && isEmailEnabled) {\n            const emailRegex = /^([a-z0-9_\\.-]+)@([\\da-z\\.-]+)\\.([a-z\\.]{2,})$/g;\n            const isValidEmail = emailRegex.test(input.replace(/\\+/g, \"\"));\n            if (!isValidEmail) {\n              return locale.invalidEmail;\n            }\n          } else if (isPhone && isSMSEnabled) {\n            if (!input.startsWith(\"+\")) {\n              return locale.countryCodeMissing;\n            }\n          } else {\n            if (isEmailEnabled && isSMSEnabled) {\n              return locale.invalidEmailOrPhone;\n            }\n            if (isEmailEnabled) {\n              return locale.invalidEmail;\n            }\n            if (isSMSEnabled) {\n              return locale.invalidPhone;\n            }\n          }\n        }\n      })]\n    })]\n  });\n};\nfunction useConnectMagic() {\n  const {\n    activeChain\n  } = useWalletContext();\n  const connector = useCallback(async data => {\n    const {\n      selectionData,\n      connected,\n      show,\n      hide,\n      connect\n    } = data;\n\n    // oauth\n    if (typeof selectionData === \"object\") {\n      try {\n        hide();\n        (async () => {\n          await connect({\n            oauthProvider: selectionData.provider,\n            chainId: activeChain.chainId\n          });\n        })();\n        connected();\n      } catch (e) {\n        console.error(e);\n      }\n      show();\n    }\n\n    // email or phone\n    else {\n      const isEmail = selectionData ? selectionData.includes(\"@\") : false;\n      hide();\n      try {\n        await connect(data.type === \"connect\" ? {} : isEmail ? {\n          email: selectionData,\n          chainId: activeChain.chainId\n        } : {\n          phoneNumber: selectionData,\n          chainId: activeChain.chainId\n        });\n        connected();\n      } catch (e) {\n        console.error(e);\n      }\n      show();\n    }\n  }, [activeChain.chainId]);\n  return connector;\n}\nconst MagicConnectingUI = _ref => {\n  let {\n    connected,\n    walletConfig,\n    show,\n    selectionData,\n    supportedWallets,\n    type,\n    hide,\n    connect\n  } = _ref;\n  const connectPrompted = useRef(false);\n  const singleWallet = supportedWallets.length === 1;\n  const connectMagic = useConnectMagic();\n  useEffect(() => {\n    if (connectPrompted.current) {\n      return;\n    }\n    connectPrompted.current = true;\n    connectMagic({\n      selectionData: selectionData,\n      singleWallet,\n      type,\n      connect,\n      show,\n      connected,\n      hide\n    });\n  }, [connectMagic, connected, selectionData, show, singleWallet, type, walletConfig, hide, connect]);\n  return /*#__PURE__*/jsx(Container, {\n    flex: \"row\",\n    center: \"both\",\n    style: {\n      minHeight: \"350px\"\n    },\n    children: /*#__PURE__*/jsx(Spinner, {\n      size: \"xl\",\n      color: \"accentText\"\n    })\n  });\n};\nconst MagicConnectionUIScreen = props => {\n  const locale = useTWLocale().wallets.magicLink;\n  const connectMagic = useConnectMagic();\n  return /*#__PURE__*/jsxs(Container, {\n    p: \"lg\",\n    fullHeight: true,\n    flex: \"column\",\n    style: {\n      minHeight: \"300px\"\n    },\n    children: [/*#__PURE__*/jsx(ModalHeader, {\n      onBack: props.goBack,\n      title: locale.signIn\n    }), /*#__PURE__*/jsx(Spacer, {\n      y: \"xl\"\n    }), /*#__PURE__*/jsx(Container, {\n      expand: true,\n      flex: \"column\",\n      center: \"both\",\n      px: props.modalSize === \"wide\" ? \"lg\" : undefined,\n      children: /*#__PURE__*/jsx(MagicUI, {\n        ...props,\n        onSelect: data => {\n          connectMagic({\n            selectionData: data,\n            connected: props.connected,\n            show: props.show,\n            singleWallet: props.supportedWallets.length === 1,\n            type: props.type,\n            connect: props.connect,\n            hide: props.hide\n          });\n        }\n      })\n    })]\n  });\n};\nconst providerImages = {\n  google: googleIconUri,\n  facebook: facebookIconUri,\n  twitter: twitterIconUri,\n  github: githubIconUri,\n  apple: appleIconUri,\n  linkedin: linkedinIconUri,\n  bitbucket: bitbucketIconUri,\n  gitlab: gitlabIconUri,\n  twitch: twitchIconUri,\n  discord: discordIconUri,\n  microsoft: microsoftIconUri\n};\nfunction upperCaseFirstLetter(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\nconst SocialButtonLarge = /* @__PURE__ */styled(Button)(() => {\n  const theme = useCustomTheme();\n  return {\n    display: \"flex\",\n    justifyContent: \"center\",\n    gap: spacing.md,\n    fontSize: fontSize.md,\n    transition: \"background-color 0.2s ease\",\n    \"&:hover\": {\n      backgroundColor: theme.colors.secondaryButtonBg\n    },\n    \"&:active\": {\n      boxShadow: \"none\"\n    }\n  };\n});\nconst SocialIconButton = /* @__PURE__ */styled(IconButton)(() => {\n  const theme = useCustomTheme();\n  return {\n    border: `1px solid ${theme.colors.borderColor}`,\n    padding: spacing.sm,\n    transition: \"border-color 0.2s ease\",\n    \"&:hover\": {\n      borderColor: theme.colors.accentText,\n      background: \"transparent\"\n    },\n    flexGrow: 1\n  };\n});\n\nexport { magicLink };\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,mBAA+C;AAI/C,yBAAoC;AAyGpC,SAAS,UAAU,QAAQ;AA/G3B;AAgHE,QAAM,oBAAoB,OAAO,eAAe;AAChD,QAAM,kBAAkB,OAAO,aAAa;AAC5C,QAAM,kBAAiB,YAAO,iBAAP,mBAAqB;AAC5C,QAAM,OAAO,OAAO,QAAQ;AAC5B,MAAI,OAAO;AACX,MAAI,WAAW;AACf,MAAI,qBAAqB,CAAC,iBAAiB;AACzC,WAAO;AACP,eAAW;AAAA,EACb;AACA,MAAI,CAAC,qBAAqB,iBAAiB;AACzC,WAAO;AACP,eAAW;AAAA,EACb;AACA,MAAI,CAAC,qBAAqB,CAAC,iBAAiB;AAC1C,eAAW;AAAA,EACb;AACA,SAAO;AAAA,IACL,IAAI,UAAU;AAAA,IACd,aAAa,iCAAQ;AAAA,IACrB,YAAY;AAAA,IACZ,MAAM;AAAA,MACJ,GAAG,UAAU;AAAA,MACb,MAAM;AAAA,MACN,SAAS;AAAA,IACX;AAAA,IACA,QAAQ,aAAW,IAAI,UAAU;AAAA,MAC/B,GAAG;AAAA,MACH,GAAG;AAAA,IACL,CAAC;AAAA,IACD,UAAU,OAAO;AACf,UAAI,MAAM,cAAc,QAAQ;AAC9B,mBAAoB,wBAAI,yBAAyB;AAAA,UAC/C,GAAG;AAAA,UACH;AAAA,UACA,YAAY;AAAA,UACZ,UAAU;AAAA,UACV;AAAA,QACF,CAAC;AAAA,MACH;AACA,UAAI,MAAM,kBAAkB,QAAW;AACrC,mBAAoB,wBAAI,yBAAyB;AAAA,UAC/C,GAAG;AAAA,UACH;AAAA,UACA,YAAY;AAAA,UACZ,UAAU;AAAA,UACV;AAAA,QACF,CAAC;AAAA,MACH;AACA,iBAAoB,wBAAI,mBAAmB;AAAA,QACzC,GAAG;AAAA,QACH;AAAA,MACF,CAAC;AAAA,IACH;AAAA,IACA,cAAc;AACZ,aAAO;AAAA,IACT;AAAA,EACF;AACF;AACA,IAAM,UAAU,WAAS;AACvB,QAAM,WAAW,YAAY,EAAE;AAC/B,QAAM,SAAS,YAAY,EAAE,QAAQ;AACrC,QAAM,iBAAiB,MAAM,eAAe;AAC5C,QAAM,eAAe,MAAM,aAAa;AACxC,MAAI,cAAc,OAAO;AACzB,MAAI,OAAO;AACX,MAAI,oBAAoB,OAAO;AAC/B,MAAI,kBAAkB,CAAC,cAAc;AACnC,kBAAc,OAAO;AACrB,wBAAoB,OAAO;AAC3B,WAAO;AAAA,EACT,WAAW,CAAC,kBAAkB,cAAc;AAC1C,kBAAc,OAAO;AACrB,wBAAoB,OAAO;AAC3B,WAAO;AAAA,EACT;AACA,MAAI,CAAC,kBAAkB,CAAC,gBAAgB,CAAC,MAAM,gBAAgB;AAC7D,UAAM,IAAI,MAAM,+EAA+E;AAAA,EACjG;AACA,QAAM,cAAc,kBAAkB;AACtC,QAAM;AAAA,IACJ;AAAA,EACF,IAAI,iBAAiB;AACrB,QAAM,gBAAgB,MAAM,cAAc,UAAU,WAAW,gBAAgB,QAAQ,MAAM,cAAc;AAC3G,aAAoB,yBAAK,WAAW;AAAA,IAClC,MAAM;AAAA,IACN,SAAS;AAAA,IACT,KAAK,MAAM,cAAc,YAAY,OAAO;AAAA,IAC5C,OAAO;AAAA,MACL,OAAO;AAAA,IACT;AAAA,IACA,UAAU,CAAC,MAAM,sBAA+B,wBAAI,6BAAU;AAAA,MAC5D,UAAU,MAAM,eAAe,SAAS,QAAiB,wBAAI,WAAW;AAAA,QACtE,KAAK;AAAA,QACL,MAAM;AAAA,QACN,OAAO;AAAA,UACL,gBAAgB;AAAA,QAClB;AAAA,QACA,QAAQ;AAAA,QACR,UAAU,MAAM,eAAe,IAAI,cAAY;AAC7C,qBAAoB,wBAAI,kBAAkB;AAAA,YACxC,SAAS,MAAM;AACb,oBAAM,SAAS;AAAA,gBACb;AAAA,cACF,CAAC;AAAA,YACH;AAAA,YACA,cAAuB,wBAAI,SAAS;AAAA,cAClC,KAAK,GAAG,OAAO,SAAS,IAAI,qBAAqB,QAAQ,CAAC;AAAA,cAC1D,YAAY;AAAA,cACZ,cAAuB,wBAAI,WAAW;AAAA,gBACpC,MAAM;AAAA,gBACN,QAAQ;AAAA,gBACR,cAAuB,wBAAI,KAAK;AAAA,kBAC9B,KAAK,eAAe,QAAQ;AAAA,kBAC5B,OAAO,SAAS;AAAA,kBAChB,QAAQ,SAAS;AAAA,kBACjB,KAAK;AAAA,gBACP,CAAC;AAAA,cACH,CAAC;AAAA,YACH,CAAC;AAAA,UACH,GAAG,QAAQ;AAAA,QACb,CAAC;AAAA,MACH,CAAC,QAAiB,wBAAI,WAAW;AAAA,QAC/B,KAAK;AAAA,QACL,MAAM;AAAA,QACN,UAAU,MAAM,eAAe,IAAI,cAAY;AAC7C,qBAAoB,yBAAK,mBAAmB;AAAA,YAC1C,SAAS;AAAA,YACT,SAAS,MAAM;AACb,oBAAM,SAAS;AAAA,gBACb;AAAA,cACF,CAAC;AAAA,YACH;AAAA,YACA,UAAU,KAAc,wBAAI,KAAK;AAAA,cAC/B,KAAK,eAAe,QAAQ;AAAA,cAC5B,OAAO,SAAS;AAAA,cAChB,QAAQ,SAAS;AAAA,cACjB,KAAK;AAAA,YACP,CAAC,OAAgB,yBAAK,QAAQ;AAAA,cAC5B,UAAU,CAAC,OAAO,WAAW,KAAK,qBAAqB,QAAQ,CAAC;AAAA,YAClE,CAAC,CAAC;AAAA,UACJ,GAAG,QAAQ;AAAA,QACb,CAAC;AAAA,MACH,CAAC;AAAA,IACH,CAAC,GAAG,mBAA4B,yBAAK,6BAAU;AAAA,MAC7C,UAAU,CAAC,qBAA8B,wBAAI,aAAa;AAAA,QACxD,MAAM,SAAS;AAAA,MACjB,CAAC,OAAgB,wBAAI,kBAAkB;AAAA,QACrC,kBAAkB,OAAO;AAAA,QACzB,UAAU,MAAM;AAAA,QAChB;AAAA,QACA,MAAM;AAAA,QACN;AAAA,QACA;AAAA,QACA,cAAc,YAAU;AACtB,gBAAM,QAAQ,OAAO,YAAY;AACjC,gBAAM,UAAU,MAAM,SAAS,GAAG;AAClC,gBAAM,UAAU,OAAO,UAAU,OAAO,MAAM,MAAM,SAAS,CAAC,CAAC,CAAC;AAChE,cAAI,WAAW,gBAAgB;AAC7B,kBAAM,aAAa;AACnB,kBAAM,eAAe,WAAW,KAAK,MAAM,QAAQ,OAAO,EAAE,CAAC;AAC7D,gBAAI,CAAC,cAAc;AACjB,qBAAO,OAAO;AAAA,YAChB;AAAA,UACF,WAAW,WAAW,cAAc;AAClC,gBAAI,CAAC,MAAM,WAAW,GAAG,GAAG;AAC1B,qBAAO,OAAO;AAAA,YAChB;AAAA,UACF,OAAO;AACL,gBAAI,kBAAkB,cAAc;AAClC,qBAAO,OAAO;AAAA,YAChB;AACA,gBAAI,gBAAgB;AAClB,qBAAO,OAAO;AAAA,YAChB;AACA,gBAAI,cAAc;AAChB,qBAAO,OAAO;AAAA,YAChB;AAAA,UACF;AAAA,QACF;AAAA,MACF,CAAC,CAAC;AAAA,IACJ,CAAC,CAAC;AAAA,EACJ,CAAC;AACH;AACA,SAAS,kBAAkB;AACzB,QAAM;AAAA,IACJ;AAAA,EACF,IAAI,iBAAiB;AACrB,QAAM,gBAAY,0BAAY,OAAM,SAAQ;AAC1C,UAAM;AAAA,MACJ;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF,IAAI;AAGJ,QAAI,OAAO,kBAAkB,UAAU;AACrC,UAAI;AACF,aAAK;AACL,SAAC,YAAY;AACX,gBAAM,QAAQ;AAAA,YACZ,eAAe,cAAc;AAAA,YAC7B,SAAS,YAAY;AAAA,UACvB,CAAC;AAAA,QACH,GAAG;AACH,kBAAU;AAAA,MACZ,SAAS,GAAG;AACV,gBAAQ,MAAM,CAAC;AAAA,MACjB;AACA,WAAK;AAAA,IACP,OAGK;AACH,YAAM,UAAU,gBAAgB,cAAc,SAAS,GAAG,IAAI;AAC9D,WAAK;AACL,UAAI;AACF,cAAM,QAAQ,KAAK,SAAS,YAAY,CAAC,IAAI,UAAU;AAAA,UACrD,OAAO;AAAA,UACP,SAAS,YAAY;AAAA,QACvB,IAAI;AAAA,UACF,aAAa;AAAA,UACb,SAAS,YAAY;AAAA,QACvB,CAAC;AACD,kBAAU;AAAA,MACZ,SAAS,GAAG;AACV,gBAAQ,MAAM,CAAC;AAAA,MACjB;AACA,WAAK;AAAA,IACP;AAAA,EACF,GAAG,CAAC,YAAY,OAAO,CAAC;AACxB,SAAO;AACT;AACA,IAAM,oBAAoB,UAAQ;AAChC,MAAI;AAAA,IACF;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,IAAI;AACJ,QAAM,sBAAkB,qBAAO,KAAK;AACpC,QAAM,eAAe,iBAAiB,WAAW;AACjD,QAAM,eAAe,gBAAgB;AACrC,8BAAU,MAAM;AACd,QAAI,gBAAgB,SAAS;AAC3B;AAAA,IACF;AACA,oBAAgB,UAAU;AAC1B,iBAAa;AAAA,MACX;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF,CAAC;AAAA,EACH,GAAG,CAAC,cAAc,WAAW,eAAe,MAAM,cAAc,MAAM,cAAc,MAAM,OAAO,CAAC;AAClG,aAAoB,wBAAI,WAAW;AAAA,IACjC,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,OAAO;AAAA,MACL,WAAW;AAAA,IACb;AAAA,IACA,cAAuB,wBAAI,SAAS;AAAA,MAClC,MAAM;AAAA,MACN,OAAO;AAAA,IACT,CAAC;AAAA,EACH,CAAC;AACH;AACA,IAAM,0BAA0B,WAAS;AACvC,QAAM,SAAS,YAAY,EAAE,QAAQ;AACrC,QAAM,eAAe,gBAAgB;AACrC,aAAoB,yBAAK,WAAW;AAAA,IAClC,GAAG;AAAA,IACH,YAAY;AAAA,IACZ,MAAM;AAAA,IACN,OAAO;AAAA,MACL,WAAW;AAAA,IACb;AAAA,IACA,UAAU,KAAc,wBAAI,aAAa;AAAA,MACvC,QAAQ,MAAM;AAAA,MACd,OAAO,OAAO;AAAA,IAChB,CAAC,OAAgB,wBAAI,QAAQ;AAAA,MAC3B,GAAG;AAAA,IACL,CAAC,OAAgB,wBAAI,WAAW;AAAA,MAC9B,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,IAAI,MAAM,cAAc,SAAS,OAAO;AAAA,MACxC,cAAuB,wBAAI,SAAS;AAAA,QAClC,GAAG;AAAA,QACH,UAAU,UAAQ;AAChB,uBAAa;AAAA,YACX,eAAe;AAAA,YACf,WAAW,MAAM;AAAA,YACjB,MAAM,MAAM;AAAA,YACZ,cAAc,MAAM,iBAAiB,WAAW;AAAA,YAChD,MAAM,MAAM;AAAA,YACZ,SAAS,MAAM;AAAA,YACf,MAAM,MAAM;AAAA,UACd,CAAC;AAAA,QACH;AAAA,MACF,CAAC;AAAA,IACH,CAAC,CAAC;AAAA,EACJ,CAAC;AACH;AACA,IAAM,iBAAiB;AAAA,EACrB,QAAQ;AAAA,EACR,UAAU;AAAA,EACV,SAAS;AAAA,EACT,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,UAAU;AAAA,EACV,WAAW;AAAA,EACX,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,SAAS;AAAA,EACT,WAAW;AACb;AACA,SAAS,qBAAqB,QAAQ;AACpC,SAAO,OAAO,OAAO,CAAC,EAAE,YAAY,IAAI,OAAO,MAAM,CAAC;AACxD;AACA,IAAM,oBAAmC,UAAO,MAAM,EAAE,MAAM;AAC5D,QAAM,QAAQ,eAAe;AAC7B,SAAO;AAAA,IACL,SAAS;AAAA,IACT,gBAAgB;AAAA,IAChB,KAAK,QAAQ;AAAA,IACb,UAAU,SAAS;AAAA,IACnB,YAAY;AAAA,IACZ,WAAW;AAAA,MACT,iBAAiB,MAAM,OAAO;AAAA,IAChC;AAAA,IACA,YAAY;AAAA,MACV,WAAW;AAAA,IACb;AAAA,EACF;AACF,CAAC;AACD,IAAM,mBAAkC,UAAO,UAAU,EAAE,MAAM;AAC/D,QAAM,QAAQ,eAAe;AAC7B,SAAO;AAAA,IACL,QAAQ,aAAa,MAAM,OAAO,WAAW;AAAA,IAC7C,SAAS,QAAQ;AAAA,IACjB,YAAY;AAAA,IACZ,WAAW;AAAA,MACT,aAAa,MAAM,OAAO;AAAA,MAC1B,YAAY;AAAA,IACd;AAAA,IACA,UAAU;AAAA,EACZ;AACF,CAAC;",
  "names": []
}
