{
  "version": 3,
  "sources": ["../../@thirdweb-dev/wallets/evm/connectors/paper/dist/thirdweb-dev-wallets-evm-connectors-paper.browser.esm.js"],
  "sourcesContent": ["import { _ as _classPrivateFieldInitSpec, a as _classPrivateFieldSet, b as _classPrivateFieldGet } from '../../../../dist/classPrivateFieldSet-a5db7c83.browser.esm.js';\r\nimport { _ as _defineProperty } from '../../../../dist/defineProperty-d7c057bf.browser.esm.js';\r\nimport { RecoveryShareManagement, UserStatus } from '@paperxyz/embedded-wallet-service-sdk';\r\nimport { utils } from 'ethers';\r\nimport { n as normalizeChainId } from '../../../../dist/normalizeChainId-1fb9aedf.browser.esm.js';\r\nimport { w as walletIds } from '../../../../dist/walletIds-8e17ffe6.browser.esm.js';\r\nimport { C as Connector } from '../../../../dist/connector-05689d68.browser.esm.js';\r\nimport 'eventemitter3';\r\n\r\nvar _signer = /*#__PURE__*/new WeakMap();\r\nclass PaperWalletConnector extends Connector {\r\n  constructor(options) {\r\n    super();\r\n    _defineProperty(this, \"id\", walletIds.paper);\r\n    _defineProperty(this, \"name\", \"Paper Wallet\");\r\n    _defineProperty(this, \"ready\", true);\r\n    _defineProperty(this, \"user\", null);\r\n    _classPrivateFieldInitSpec(this, _signer, {\r\n      writable: true,\r\n      value: void 0\r\n    });\r\n    _defineProperty(this, \"onAccountsChanged\", async accounts => {\r\n      if (accounts.length === 0) {\r\n        await this.onDisconnect();\r\n      } else {\r\n        this.emit(\"change\", {\r\n          account: utils.getAddress(accounts[0])\r\n        });\r\n      }\r\n    });\r\n    _defineProperty(this, \"onChainChanged\", chainId => {\r\n      const id = normalizeChainId(chainId);\r\n      const unsupported = this.options.chains.findIndex(c => c.chainId === id) === -1;\r\n      this.emit(\"change\", {\r\n        chain: {\r\n          id,\r\n          unsupported\r\n        }\r\n      });\r\n    });\r\n    _defineProperty(this, \"onDisconnect\", async () => {\r\n      this.emit(\"disconnect\");\r\n    });\r\n    this.options = options;\r\n  }\r\n  getPaperSDK() {\r\n    if (!this.paper) {\r\n      this.paper = new Promise(async (resolve, reject) => {\r\n        const recoveryMethod = this.options.advancedOptions?.recoveryShareManagement;\r\n        try {\r\n          const {\r\n            PaperEmbeddedWalletSdk\r\n          } = await import('@paperxyz/embedded-wallet-service-sdk');\r\n          const methodToEnum = {\r\n            AWS_MANAGED: RecoveryShareManagement.AWS_MANAGED,\r\n            USER_MANAGED: RecoveryShareManagement.USER_MANAGED\r\n          };\r\n          const recoveryShareManagement = recoveryMethod ? methodToEnum[recoveryMethod] : undefined;\r\n          resolve(new PaperEmbeddedWalletSdk({\r\n            advancedOptions: {\r\n              recoveryShareManagement\r\n            },\r\n            clientId: this.options.clientId,\r\n            chain: \"Ethereum\",\r\n            styles: this.options.styles,\r\n            onAuthSuccess: this.options.onAuthSuccess\r\n          }));\r\n        } catch (err) {\r\n          reject(err);\r\n        }\r\n      });\r\n    }\r\n    return this.paper;\r\n  }\r\n  async connect(options) {\r\n    const paperSDK = await this.getPaperSDK();\r\n    if (!paperSDK) {\r\n      throw new Error(\"Paper SDK not initialized\");\r\n    }\r\n    const user = await paperSDK.getUser();\r\n    switch (user.status) {\r\n      case UserStatus.LOGGED_OUT:\r\n        {\r\n          let authResult;\r\n\r\n          // Show Google popup\r\n          if (options?.googleLogin) {\r\n            const arg = options.googleLogin;\r\n            authResult = await paperSDK.auth.loginWithGoogle(typeof arg === \"object\" ? arg : undefined);\r\n          }\r\n\r\n          // Headless\r\n          else if (options?.email && options?.otp) {\r\n            authResult = await paperSDK.auth.verifyPaperEmailLoginOtp({\r\n              email: options.email,\r\n              otp: options.otp,\r\n              recoveryCode: options.recoveryCode\r\n            });\r\n          }\r\n\r\n          // Show OTP modal\r\n          else if (options?.email) {\r\n            authResult = await paperSDK.auth.loginWithPaperEmailOtp({\r\n              email: options.email\r\n            });\r\n          }\r\n\r\n          // Show Full Modal\r\n          else {\r\n            authResult = await paperSDK.auth.loginWithPaperModal();\r\n          }\r\n          this.user = authResult.user;\r\n          break;\r\n        }\r\n      case UserStatus.LOGGED_IN_WALLET_INITIALIZED:\r\n        {\r\n          if (typeof options?.googleLogin === \"object\") {\r\n            if (options.googleLogin.closeOpenedWindow && options.googleLogin.openedWindow) {\r\n              options.googleLogin.closeOpenedWindow(options.googleLogin.openedWindow);\r\n            }\r\n          }\r\n          this.user = user;\r\n          break;\r\n        }\r\n    }\r\n    if (!this.user) {\r\n      throw new Error(\"Error connecting User\");\r\n    }\r\n    if (options?.chainId) {\r\n      this.switchChain(options.chainId);\r\n    }\r\n    this.setupListeners();\r\n    return this.getAddress();\r\n  }\r\n  async disconnect() {\r\n    const paper = await this.paper;\r\n    await paper?.auth.logout();\r\n    _classPrivateFieldSet(this, _signer, undefined);\r\n    this.user = null;\r\n  }\r\n  async getAddress() {\r\n    const signer = await this.getSigner();\r\n    return signer.getAddress();\r\n  }\r\n  async isConnected() {\r\n    try {\r\n      const addr = await this.getAddress();\r\n      return !!addr;\r\n    } catch (e) {\r\n      return false;\r\n    }\r\n  }\r\n  async getProvider() {\r\n    const signer = await this.getSigner();\r\n    if (!signer.provider) {\r\n      throw new Error(\"Provider not found\");\r\n    }\r\n    return signer.provider;\r\n  }\r\n  async getSigner() {\r\n    if (_classPrivateFieldGet(this, _signer)) {\r\n      return _classPrivateFieldGet(this, _signer);\r\n    }\r\n    if (!this.user) {\r\n      const paperSDK = await this.getPaperSDK();\r\n      const user = await paperSDK.getUser();\r\n      switch (user.status) {\r\n        case UserStatus.LOGGED_IN_WALLET_INITIALIZED:\r\n          {\r\n            this.user = user;\r\n            break;\r\n          }\r\n      }\r\n    }\r\n    const signer = await this.user?.wallet.getEthersJsSigner({\r\n      rpcEndpoint: this.options.chain.rpc[0] || \"\" // TODO: handle chain.rpc being empty array\r\n    });\r\n    if (!signer) {\r\n      throw new Error(\"Signer not found\");\r\n    }\r\n    _classPrivateFieldSet(this, _signer, signer);\r\n    return signer;\r\n  }\r\n  async isAuthorized() {\r\n    return false;\r\n  }\r\n  async switchChain(chainId) {\r\n    const chain = this.options.chains.find(c => c.chainId === chainId);\r\n    if (!chain) {\r\n      throw new Error(\"Chain not configured\");\r\n    }\r\n\r\n    // update chain in wallet\r\n    await this.user?.wallet.setChain({\r\n      chain: \"Ethereum\"\r\n    }); // just pass Ethereum no matter what chain we are going to connect\r\n\r\n    // update signer\r\n    _classPrivateFieldSet(this, _signer, await this.user?.wallet.getEthersJsSigner({\r\n      rpcEndpoint: chain.rpc[0] || \"\" // TODO: handle chain.rpc being empty array\r\n    }));\r\n    this.emit(\"change\", {\r\n      chain: {\r\n        id: chainId,\r\n        unsupported: false\r\n      }\r\n    });\r\n  }\r\n\r\n  // private getUser() {\r\n  //   if (!this.user) {\r\n  //     throw new Error(\"User not found\");\r\n  //   }\r\n  //   return this.user;\r\n  // }\r\n\r\n  async setupListeners() {\r\n    const provider = await this.getProvider();\r\n    if (provider.on) {\r\n      provider.on(\"accountsChanged\", this.onAccountsChanged);\r\n      provider.on(\"chainChanged\", this.onChainChanged);\r\n      provider.on(\"disconnect\", this.onDisconnect);\r\n    }\r\n  }\r\n  updateChains(chains) {\r\n    this.options.chains = chains;\r\n  }\r\n  async getEmail() {\r\n    await this.getProvider();\r\n    if (!this.user) {\r\n      throw new Error(\"No user found, Paper Wallet is not connected\");\r\n    }\r\n    return this.user.authDetails.email;\r\n  }\r\n}\r\n\r\nexport { PaperWalletConnector };\r\n"],
  "mappings": "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",
  "names": []
}
