{
  "version": 3,
  "sources": ["../../@thirdweb-dev/sdk/dist/marketplacev3-d4336a42.browser.esm.js"],
  "sourcesContent": ["import { a as assertEnabled } from './assertEnabled-0bc21898.browser.esm.js';\r\nimport { C as ContractMetadata, b as ContractAppURI, G as GasCostEstimator, a as ContractEvents, d as detectContractFeature } from './contract-appuri-3d68505c.browser.esm.js';\r\nimport { dB as MARKETPLACE_CONTRACT_ROLES, dv as FEATURE_DIRECT_LISTINGS, dw as FEATURE_ENGLISH_AUCTIONS, dx as FEATURE_OFFERS, cq as ContractWrapper, bj as AbiSchema, bZ as MarketplaceContractSchema } from './index-e7118e8b.browser.esm.js';\r\nimport { C as ContractEncoder } from './fetchCurrencyValue-27d660ae.browser.esm.js';\r\nimport { C as ContractInterceptor } from './contract-interceptor-d7b164a7.browser.esm.js';\r\nimport { C as ContractPlatformFee } from './contract-platform-fee-789b7ae1.browser.esm.js';\r\nimport { C as ContractRoles } from './contract-roles-423d8c8f.browser.esm.js';\r\nimport { M as MarketplaceV3DirectListings, a as MarketplaceV3EnglishAuctions, b as MarketplaceV3Offers } from './marketplacev3-offers-f96181ff.browser.esm.js';\r\nimport { T as Transaction } from './transactions-de84ba20.browser.esm.js';\r\nimport 'ethers';\r\nimport 'zod';\r\nimport '@thirdweb-dev/storage';\r\nimport '@thirdweb-dev/chains';\r\nimport '@thirdweb-dev/crypto';\r\nimport 'tiny-invariant';\r\nimport 'bn.js';\r\nimport 'bs58';\r\nimport '@thirdweb-dev/contracts-js/dist/abis/IBurnableERC20.json';\r\nimport '@thirdweb-dev/contracts-js/dist/abis/IDrop.json';\r\nimport '@thirdweb-dev/contracts-js/dist/abis/IDropERC20_V2.json';\r\nimport '@thirdweb-dev/contracts-js/dist/abis/IDropSinglePhase.json';\r\nimport '@thirdweb-dev/contracts-js/dist/abis/IDropSinglePhase_V1.json';\r\nimport '@thirdweb-dev/contracts-js/dist/abis/IERC20.json';\r\nimport '@thirdweb-dev/contracts-js/dist/abis/IERC20Permit.json';\r\nimport '@thirdweb-dev/contracts-js/dist/abis/IMintableERC20.json';\r\nimport '@thirdweb-dev/contracts-js/dist/abis/IMulticall.json';\r\nimport '@thirdweb-dev/contracts-js/dist/abis/ISignatureMintERC20.json';\r\nimport '@thirdweb-dev/contracts-js/dist/abis/IERC20Metadata.json';\r\nimport '@thirdweb-dev/contracts-js/dist/abis/IBurnableERC721.json';\r\nimport '@thirdweb-dev/contracts-js/dist/abis/IClaimableERC721.json';\r\nimport '@thirdweb-dev/contracts-js/dist/abis/IDelayedReveal.json';\r\nimport '@thirdweb-dev/contracts-js/dist/abis/IDropERC721_V3.json';\r\nimport '@thirdweb-dev/contracts-js/dist/abis/IERC721.json';\r\nimport '@thirdweb-dev/contracts-js/dist/abis/IERC721Enumerable.json';\r\nimport '@thirdweb-dev/contracts-js/dist/abis/IERC721AQueryableUpgradeable.json';\r\nimport '@thirdweb-dev/contracts-js/dist/abis/IERC721Supply.json';\r\nimport '@thirdweb-dev/contracts-js/dist/abis/ILazyMint.json';\r\nimport '@thirdweb-dev/contracts-js/dist/abis/IMintableERC721.json';\r\nimport '@thirdweb-dev/contracts-js/dist/abis/ISignatureMintERC721.json';\r\nimport '@thirdweb-dev/contracts-js/dist/abis/ISignatureMintERC721_V1.json';\r\nimport '@thirdweb-dev/contracts-js/dist/abis/LazyMintWithTier_V1.json';\r\nimport '@thirdweb-dev/contracts-js/dist/abis/SharedMetadata.json';\r\nimport '@thirdweb-dev/contracts-js/dist/abis/zora_IERC721Drop.json';\r\nimport '@thirdweb-dev/contracts-js/dist/abis/ILoyaltyCard.json';\r\nimport '@thirdweb-dev/contracts-js/dist/abis/INFTMetadata.json';\r\nimport '@thirdweb-dev/contracts-js/dist/abis/IERC721Metadata.json';\r\nimport '@thirdweb-dev/contracts-js/dist/abis/IBurnableERC1155.json';\r\nimport '@thirdweb-dev/contracts-js/dist/abis/IClaimableERC1155.json';\r\nimport '@thirdweb-dev/contracts-js/dist/abis/IDrop1155.json';\r\nimport '@thirdweb-dev/contracts-js/dist/abis/IDropERC1155_V2.json';\r\nimport '@thirdweb-dev/contracts-js/dist/abis/IDropSinglePhase1155.json';\r\nimport '@thirdweb-dev/contracts-js/dist/abis/IDropSinglePhase1155_V1.json';\r\nimport '@thirdweb-dev/contracts-js/dist/abis/IERC1155.json';\r\nimport '@thirdweb-dev/contracts-js/dist/abis/IERC1155Metadata.json';\r\nimport '@thirdweb-dev/contracts-js/dist/abis/IERC1155Supply.json';\r\nimport '@thirdweb-dev/contracts-js/dist/abis/IERC1155Enumerable.json';\r\nimport '@thirdweb-dev/contracts-js/dist/abis/IMintableERC1155.json';\r\nimport '@thirdweb-dev/contracts-js/dist/abis/ISignatureMintERC1155.json';\r\nimport '@thirdweb-dev/contracts-js/dist/abis/IERC2771Context.json';\r\nimport '@thirdweb-dev/contracts-js/dist/abis/IAppURI.json';\r\nimport '@thirdweb-dev/contracts-js/dist/abis/IContractMetadata.json';\r\nimport '@thirdweb-dev/contracts-js/dist/abis/IDirectListings.json';\r\nimport '@thirdweb-dev/contracts-js/dist/abis/IEnglishAuctions.json';\r\nimport '@thirdweb-dev/contracts-js/dist/abis/IOffers.json';\r\nimport '@thirdweb-dev/contracts-js/dist/abis/IPackVRFDirect.json';\r\nimport '@thirdweb-dev/contracts-js/dist/abis/IPermissions.json';\r\nimport '@thirdweb-dev/contracts-js/dist/abis/IPermissionsEnumerable.json';\r\nimport '@thirdweb-dev/contracts-js/dist/abis/IPlatformFee.json';\r\nimport '@thirdweb-dev/contracts-js/dist/abis/IPrimarySale.json';\r\nimport '@thirdweb-dev/contracts-js/dist/abis/IRoyalty.json';\r\nimport '@thirdweb-dev/contracts-js/dist/abis/Ownable.json';\r\nimport '@thirdweb-dev/contracts-js/dist/abis/IAirdropERC20.json';\r\nimport '@thirdweb-dev/contracts-js/dist/abis/IAirdropERC721.json';\r\nimport '@thirdweb-dev/contracts-js/dist/abis/IAirdropERC1155.json';\r\nimport '@thirdweb-dev/contracts-js/dist/abis/IAccountFactoryCore.json';\r\nimport '@thirdweb-dev/contracts-js/dist/abis/IAccountPermissions.json';\r\nimport '@thirdweb-dev/contracts-js/dist/abis/IAccountPermissions_V1.json';\r\nimport '@thirdweb-dev/contracts-js/dist/abis/IAccount.json';\r\nimport 'ethers/lib/utils';\r\nimport 'eventemitter3';\r\nimport './cleanCurrencyAddress-f51f872e.browser.esm.js';\r\nimport './normalizePriceValue-ee13e65c.browser.esm.js';\r\nimport './setErc20Allowance-0fd3045e.browser.esm.js';\r\nimport './marketplace-ad8d6c18.browser.esm.js';\r\nimport './QueryParams-c67b6cd4.browser.esm.js';\r\n\r\n/**\r\n * Create your own whitelabel marketplace that enables users to buy and sell any digital assets.\r\n *\r\n * @example\r\n *\r\n * ```javascript\r\n * import { ThirdwebSDK } from \"@thirdweb-dev/sdk\";\r\n *\r\n * const sdk = new ThirdwebSDK(\"{{chainName}}\");\r\n * const contract = await sdk.getContract(\"{{contract_address}}\", \"marketplace\");\r\n * ```\r\n *\r\n * @internal\r\n * @deprecated use contract.directListings / contract.auctions / contract.offers instead\r\n */\r\nclass MarketplaceV3 {\r\n  static contractRoles = MARKETPLACE_CONTRACT_ROLES;\r\n\r\n  /**\r\n   * @internal\r\n   */\r\n\r\n  /**\r\n   * Direct listings\r\n   * @remarks Create and manage direct listings in your marketplace.\r\n   * ```javascript\r\n   * // Data of the listing you want to create\r\n   * const listing = {\r\n   *   // address of the contract the asset you want to list is on\r\n   *   assetContractAddress: \"0x...\",\r\n   *   // token ID of the asset you want to list\r\n   *   tokenId: \"0\",\r\n   *   // how many of the asset you want to list\r\n   *   quantity: 1,\r\n   *   // address of the currency contract that will be used to pay for the listing\r\n   *   currencyContractAddress: NATIVE_TOKEN_ADDRESS,\r\n   *   // The price to pay per unit of NFTs listed.\r\n   *   pricePerToken: 1.5,\r\n   *   // when should the listing open up for offers\r\n   *   startTimestamp: new Date(Date.now()),\r\n   *   // how long the listing will be open for\r\n   *   endTimestamp: new Date(Date.now() + 5 * 24 * 60 * 60 * 1000),\r\n   *   // Whether the listing is reserved for a specific set of buyers.\r\n   *   isReservedListing: false\r\n   * }\r\n   *\r\n   * const tx = await contract.directListings.createListing(listing);\r\n   * const receipt = tx.receipt; // the transaction receipt\r\n   * const id = tx.id; // the id of the newly created listing\r\n   *\r\n   * // And on the buyers side:\r\n   * // The ID of the listing you want to buy from\r\n   * const listingId = 0;\r\n   * // Quantity of the asset you want to buy\r\n   * const quantityDesired = 1;\r\n   *\r\n   * await contract.directListings.buyFromListing(listingId, quantityDesired);\r\n   * ```\r\n   */\r\n  get directListings() {\r\n    return assertEnabled(this.detectDirectListings(), FEATURE_DIRECT_LISTINGS);\r\n  }\r\n  /**\r\n   * Auctions\r\n   * @remarks Create and manage auctions in your marketplace.\r\n   * @example\r\n   * ```javascript\r\n   * // Data of the auction you want to create\r\n   * const auction = {\r\n   *   // address of the contract of the asset you want to auction\r\n   *   assetContractAddress: \"0x...\",\r\n   *   // token ID of the asset you want to auction\r\n   *   tokenId: \"0\",\r\n   *   // how many of the asset you want to auction\r\n   *   quantity: 1,\r\n   *   // address of the currency contract that will be used to pay for the auctioned tokens\r\n   *   currencyContractAddress: NATIVE_TOKEN_ADDRESS,\r\n   *   // the minimum bid that will be accepted for the token\r\n   *   minimumBidAmount: \"1.5\",\r\n   *   // how much people would have to bid to instantly buy the asset\r\n   *   buyoutBidAmount: \"10\",\r\n   *   // If a bid is made less than these many seconds before expiration, the expiration time is increased by this.\r\n   *   timeBufferInSeconds: \"1000\",\r\n   *   // A bid must be at least this much bps greater than the current winning bid\r\n   *   bidBufferBps: \"100\", // 100 bps stands for 1%\r\n   *   // when should the auction open up for bidding\r\n   *   startTimestamp: new Date(Date.now()),\r\n   *   // end time of auction\r\n   *   endTimestamp: new Date(Date.now() + 5 * 24 * 60 * 60 * 1000),\r\n   * }\r\n   *\r\n   * const tx = await contract.englishAuctions.createAuction(auction);\r\n   * const receipt = tx.receipt; // the transaction receipt\r\n   * const id = tx.id; // the id of the newly created auction\r\n   *\r\n   * // And on the buyers side:\r\n   * // The auction ID of the asset you want to bid on\r\n   * const auctionId = 0;\r\n   * // The total amount you are willing to bid for auctioned tokens\r\n   * const bidAmount = 1;\r\n   *\r\n   * await contract.englishAuctions.makeBid(auctionId, bidAmount);\r\n   * ```\r\n   */\r\n  get englishAuctions() {\r\n    return assertEnabled(this.detectEnglishAuctions(), FEATURE_ENGLISH_AUCTIONS);\r\n  }\r\n\r\n  /**\r\n   * Offers\r\n   * @remarks Make and manage offers.\r\n   * @example\r\n   * ```javascript\r\n   * // Data of the offer you want to make\r\n   * const offer = {\r\n   *   // address of the contract the asset you want to make an offer for\r\n   *   assetContractAddress: \"0x...\",\r\n   *   // token ID of the asset you want to buy\r\n   *   tokenId: \"0\",\r\n   *   // how many of the asset you want to buy\r\n   *   quantity: 1,\r\n   *   // address of the currency contract that you offer to pay in\r\n   *   currencyContractAddress: NATIVE_TOKEN_ADDRESS,\r\n   *   // Total price you offer to pay for the mentioned token(s)\r\n   *   totalPrice: \"1.5\",\r\n   *   // Offer valid until\r\n   *   endTimestamp: new Date(),\r\n   * }\r\n   *\r\n   * const tx = await contract.offers.makeOffer(offer);\r\n   * const receipt = tx.receipt; // the transaction receipt\r\n   * const id = tx.id; // the id of the newly created offer\r\n   *\r\n   * // And on the seller's side:\r\n   * // The ID of the offer you want to accept\r\n   * const offerId = 0;\r\n   * await contract.offers.acceptOffer(offerId);\r\n   * ```\r\n   */\r\n  get offers() {\r\n    return assertEnabled(this.detectOffers(), FEATURE_OFFERS);\r\n  }\r\n  get chainId() {\r\n    return this._chainId;\r\n  }\r\n  constructor(network, address, storage) {\r\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\r\n    let abi = arguments.length > 4 ? arguments[4] : undefined;\r\n    let chainId = arguments.length > 5 ? arguments[5] : undefined;\r\n    let contractWrapper = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : new ContractWrapper(network, address, abi, options, storage);\r\n    this._chainId = chainId;\r\n    this.abi = AbiSchema.parse(abi || []);\r\n    this.contractWrapper = contractWrapper;\r\n    this.storage = storage;\r\n    this.metadata = new ContractMetadata(this.contractWrapper, MarketplaceContractSchema, this.storage);\r\n    this.app = new ContractAppURI(this.contractWrapper, this.metadata, this.storage);\r\n    this.roles = new ContractRoles(this.contractWrapper, MarketplaceV3.contractRoles);\r\n    this.encoder = new ContractEncoder(this.contractWrapper);\r\n    this.estimator = new GasCostEstimator(this.contractWrapper);\r\n    this.events = new ContractEvents(this.contractWrapper);\r\n    this.platformFees = new ContractPlatformFee(this.contractWrapper);\r\n    this.interceptor = new ContractInterceptor(this.contractWrapper);\r\n  }\r\n  onNetworkUpdated(network) {\r\n    this.contractWrapper.updateSignerOrProvider(network);\r\n  }\r\n  getAddress() {\r\n    return this.contractWrapper.address;\r\n  }\r\n\r\n  /**\r\n   * @internal\r\n   */\r\n  async prepare(method, args, overrides) {\r\n    return Transaction.fromContractWrapper({\r\n      contractWrapper: this.contractWrapper,\r\n      method,\r\n      args,\r\n      overrides\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @internal\r\n   */\r\n  async call(functionName, args, overrides) {\r\n    return this.contractWrapper.call(functionName, args, overrides);\r\n  }\r\n\r\n  /** ********************\r\n   * FEATURE DETECTION\r\n   * ********************/\r\n\r\n  detectDirectListings() {\r\n    if (detectContractFeature(this.contractWrapper, \"DirectListings\")) {\r\n      return new MarketplaceV3DirectListings(this.contractWrapper, this.storage);\r\n    }\r\n    return undefined;\r\n  }\r\n  detectEnglishAuctions() {\r\n    if (detectContractFeature(this.contractWrapper, \"EnglishAuctions\")) {\r\n      return new MarketplaceV3EnglishAuctions(this.contractWrapper, this.storage);\r\n    }\r\n    return undefined;\r\n  }\r\n  detectOffers() {\r\n    if (detectContractFeature(this.contractWrapper, \"Offers\")) {\r\n      return new MarketplaceV3Offers(this.contractWrapper, this.storage);\r\n    }\r\n    return undefined;\r\n  }\r\n}\r\n\r\nexport { MarketplaceV3 };\r\n"],
  "mappings": "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",
  "names": []
}
