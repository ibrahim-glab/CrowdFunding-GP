import { RequestArguments } from 'eip1193-provider';
import type { Transaction, TransactionSignature, Connection } from '@solana/web3.js';
import BloctoProvider from './blocto';
import { SolanaProviderConfig, SolanaProviderInterface } from './types/solana.d';
import { KEY_SESSION } from '../lib/storage';
export default class SolanaProvider extends BloctoProvider implements SolanaProviderInterface {
    net: string;
    rpc: string;
    server: string;
    sessionKey: KEY_SESSION;
    constructor({ net, server, appId, rpc, }: SolanaProviderConfig);
    request(payload: RequestArguments): Promise<any>;
    connect(): Promise<void>;
    disconnect(): Promise<void>;
    fetchAccounts(): Promise<string[]>;
    handleReadRequests(payload: RequestArguments): Promise<any>;
    convertToProgramWalletTransaction(transaction: Transaction): Promise<Transaction>;
    signAndSendTransaction(transaction: Transaction, connection?: Connection): Promise<string>;
    toTransaction(raw: string, signatures: TransactionSignature[]): Promise<Transaction>;
    collectSignatures(transaction: Transaction): Promise<{
        [key: string]: string;
    }>;
    handleConvertTransaction(payload: RequestArguments): Promise<unknown>;
    handleSignAndSendTransaction(payload: RequestArguments): Promise<string>;
}
